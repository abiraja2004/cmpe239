Russian Morphology: Resources and Java Software Applications.  
Serge Yablonsky 
Petersburg Transport University, Moscow av., 9, St.-Petersburg, 190031, Russia, 
Russicon Company, Kazanskaya str., 56, ap.2, 190000, Russia 
serge_yablonsky@hotmail.com; root@russicon.spb.su; 
http://www.russicon.ru  
Abstract 
This paper deals with development and applica-
tion of Russian morphology software and re-
sources. The approach is particularly dependent 
on advanced morphological analysis. The paper 
presents the structure, formats and content of 
Russian dictionaries and corpora. Relevant as-
pects of the UML data models, XML format and 
related technologies are surveyed. We introdu-
cee the system based on Java and Oracle 9i 
DBMS. 
1 Introduction 
Up-to-date language technologies contain effi-
cient morphological analyzers for Romance, 
Germanic (Karttunen, 1983; Karttunen, Kosken-
niemi, Kaplan, 1987; Zaenen, Uszkoreit, 1996) 
and some Slavic (Chanod, 1997) languages. In 
the last 15 years Russian computational mor-
phology has advanced at a great rate from first 
quite restricted systems towards large-scale 
practical morphological analyzers ( Ashmanov 
I., 1995; Belonogov, Zelenkov, 1989; Belyaev, 
Surcis, Yablonsky, 1993; Bolshakov, 1990; 
Mikheev, Liubushkina, 1995; Segalovich, 1995).  
This paper attempts to introduce results of 15 
years ongoing project on developing of Russian 
resources and software for building advance 
Russian language morphological analyzers and 
their applications that enable a different forms of 
text indexing and retrieval, and a direct benefit 
from the Russian morphological analyzers in:  
? information-acquisition tools,  
? authoring tools,  
? language-learning tools,  
? translation-tools,  
? summarizers,  
? semantic web etc.  
The objectives of this project are not unique. 
Several analogous projects have been carried out 
to different stages. In the late eighties of XX 
century we developed one of the first Russian 
morphologic analyzers on PC (Yablonsky S., 
1990; Belyaev  B.M.,  Surcis A.S.,  Yablonsky  
S.A., 1993; Yablonsky  S.A., 1998; Yablonsky  
S.A., 1999). Now we are developing a set of 
platform independent Internet/Intranet Russian 
language processing tools based on Java and 
Oracle technologies.  
2 Russian Resources for Morphology 
Russicon company has such main counterparts 
(Yablonsky S.A., 1998) for Russian morphology 
software development:  
- Russian lexicon which is formed from the 
intersection of the perfect set of Russicon 
Russian grammatical dictionaries with in-
flection paradigms (200.000 paradigms that 
produce more then 6.000.000 inflection 
word forms). It includes: 
? Russian basic grammatical dic-
tionary.  
? Computer dictionary.  
? Geographical names dictionary.  
? Russian personal names, patro-
nymics and surnames diction-
ary.  
? Business dictionary.  
? Juridical dictionary. 
? Jargon dictionary.  
- Russicon Russian explanatory dictionary. 
The dictionary gives the broad lexical repre-
sentation of the Russian language of the end 
of the XX century. More then 100 000 con-
temporary entries include new words, idi-
oms and their meanings from the language 
of the Eighties-Nineties. The dictionary is 
distinguished by its complete set of entry 
word characteristics, clear understandable 
definitions, its guidance on usage. All dic-
tionary information for entries is structured 
in more then 60 attributes:  
? entry word;  
? multiple word entries;  
? usage notes;  
? precise, contemporary defini-
tions;  
? derivations;  
? example sentences/citations;  
? idioms etc.  
- Russicon Russian thesaurus (set of 11.000 
Russian synsets). Synonym list (8 696 syno-
nym rows) plus word list containing ap-
proximately 30 000 normalized entry words 
with  inflection paradigms.  
- Russicon Russian Orthographic diction-
ary (100 000 normalized entry words plus 
inflection paradigms with stresses). 
- Russian WordNet (in development). 
- Russian Corpora. Today linguistically en-
coded Russian text corpus includes ap-
proximately 2 000 000 words and consist of 
anthology of Russian prose and poetry of the 
20th century, law, business and  newspapers. 
The texts were input from printed resources 
and Internet (Yablonsky S.A., 1998; 2000). 
3 General Set Model of Inflection Mor-
phology 
In most language technology applications the 
encoded linguistic knowledge, i.e. the grammar, 
is separated from the processing components 
(Zaene, Uszkoreit, 1996). Linguistic Model 
(LM) of the language consists of all declarative 
knowledge about the language, which is concen-
trated in the set of dictionaries and linguistic 
tables. The number of word forms P for Slavic 
inflection languages is rather high (P>>1) for 
some parts of speech. For example, in Russian 
language P > 100 for verbs.  
For the formal description of inflection mor-
phology model the set theory is used. It is one of 
the best ways for description of inflection mor-
phology (Bider, Bolshakov, 1976), (Kulagina, 
1986). We present the general set model that 
permits to define mostly all sides of inflection 
morphology. It is realized in the Russian and 
Ukrainian morphological analyzers. In this 
model some concepts for the first time and other 
have new or more full meaning. We use defini-
tions from (Yablonsky, 1999).  
Let H = { h1, h2, ? , hNh } be the set of part-of-
speech (pos) categories and P = { p1, p2, ? , pNp 
} ? lexical categories (LC) of gender, number 
etc.  
Each element pi ? P, where i = 1,Np , represents 
the set of concrete realizations of lexical cate-
gory pi  = {pi,1, pi,2, ? ,pi,Ni}.  
Let us chose one element in P (for definiteness 
p1) named type and denoted by T (T = p1, 
T ? P), T = {t1, t2,?, tNt}.  
For example, Russian language model includes:  
H1 = {h1 = "noun", h2 = "adjective", 
h32 = "verb", h4 = "particle", h5 = "parenthetic 
word", h6 = "modal word", h7 = "adverb", 
h8 = "conjunction", h9 = "interjection", h10 
= "preposition", h11  = "abbreviation", 
h12 = "unit of measure", h13 = "pronoun", 
h14 = "numeral", h15 = "adverbial participle?, 
h16 = "composition or special prefix"}. P = 
{p1 = "case", p2 = "gender", p3 = "number", 
p4 = "time", p5 = "person", p6 = "degree", 
p7 = "voice", p8 = "aspect", p9 = "mood", 
p10 = "form", p11 = "transitivity", 
p12 = "reflexive", p13 = "animate"},  
where p1 =  {"nominative", "genitive", "dative", 
"accusative", "instrumental", "prepositional"}, 
p2 =  {"masculine", "feminine", "neuter", mas-
culine/feminine"},  p3 = {"singular", "plural "}, 
p4 = {"present", "past", future", present / future 
"}, p5 = {"1st person", "2nd person", "3rd per-
son "}, p6 = {"superlative", "comparative"}, 
p7 = {"active ", "passive"}, p8 = {"imperfec-
tive", "perfective", "perfective and imperfec-
tive"}, p9 = {"indicative", "imperative"}, p10 = 
{"full", "short (predicative)", "infinitive"}, 
p11 =  {"transitive ", "intransitive"}, p12 = {"re-
flexive", "irrevocable"}, p13 = {"animate", "in-
animate"}. We take that (?hk : hk?H) (?Tk : Tk 
? T, Tk ? ?), i.e. at least one type exists for each 
                                                          
1 Our model for Russian slightly differs from the classic: we in-
clude in the sets H and P some additional elements.   
2 In the paradigm of the verb we include participle and adverbial 
participle. 
part of speech and is named ordinary, and also 
Tk  = {tk,1, tk,2, ? , tk,Nk}, where k = 1,Nh .  
For example, in Russian for h1 = "noun", T1 = 
{"ordinary", "invariable", "substantival"}. For 
(hk, tk,j) = ("noun", "ordinary"): P1k,t = {"gen-
der"}, P2k,t = {"case","number"}, P3k,t = 
{"animate"}, Xk,t = (X*k,t = {"nominative 
case", "singular number"}, {"genitive case", 
"singular number"}, {"dative case", "singular 
number"}, {"accusative case", "singular num-
ber"}, {"instrumental case", "singular number"}, 
{"prepositional case", "singular number"}, 
{"nominative case", "plural number"}, {"geni-
tive case", "plural number"}, {"dative case", 
"plural  number"}, {"accusative case", "plural 
number"}, {"instrumental case", "plural num-
ber"}, {"prepositional case", "plural number"}, 
{"2-nd genitive case", "singular  number"}, {"2-
nd instrumental case", "singular  number"}, {"2-
nd prepositional case", "singular  number"}, {"2-
nd accusative case", "singular  number"}, {"2-nd 
accusative case", "plural number"}). 
Then  
(?hk?tk,j : hk?H, tk,j?Tk, k=1,Nh , j=1,Nk ) (? 
Pk,t : Pk,t ? P, 
t
Nk
k=1 
Nh
=1
UU Pk,t = P ), 
i.e. for each part of speech exists it's own, may 
be empty, set of LC. Elements of Pk,t are named 
LC of t-type hk. For all Pk,t  exists partition on 
three nonoverlapping and may be empty subsets, 
named P1k,t, P2k,t, P3k,t:  
(?Pk,t : Pk,t?P) (?P1k,t?P2k,t?P3k,t : 
P1k,tU P2k,tU P3k,t=Pk,t , P1k,tI P2k,tI P3k,t = ?). 
Elements of P1k,t are named as ordinary LC, ele-
ments of P2k,t ? special LC, elements of P3k,t ?
individual LC of t-type hk.  For each Pk,t set, if Pk,t 
? ?, there exists ordered sequence of sets Xk,t = 
(X1k,t, X2k,t, ? , XNxktk,t). That is, if P2k,t = {p2k,t,1, 
p2k,t,2, ? , p2k,t,Nkt2}, then Xlk,t = {x,j : x,j ? p2k,t,i, i 
= 1, Nkt2 }, where l = 1,Nxkt , and if P2k,t = ?, 
then it is considered that Xk,t = (?). 
We shall call sequence Xk,t s the sequence of 
lexical categories of word inflective paradigm of 
t-type hk. One of lexical categories, usually the 
first, is named X*t,k  and called normalized.  
There exists a single pair (hk,tk,j), (hk?H, tk,j?Tk, 
k = 1,Nh , j = 1,Nk ) for every lexeme and, 
therefore, ordered list of LC  Xk,t. 
Let us define function fl?W(l), l = 1, Nx ,with 
range of values W'I = WI ? {?}, where ? ? 
dummy, nonexistent word form. Thereby, for 
every lexeme WI an ordered sequence of word-
forms YWi = (y1, y2,  ?  , yNx) (yj?WI for 
j = 1,Nx ) could be formed. Such sequence is 
called word changing paradigm of lexeme  Wi 
(WCP). If for lexeme WI exists such l, that 
fl?W(l) = ?,  it is said that lexeme WI has a 
dummy word changing paradigm (Apresyan, 
1989). 
If the pair (hk, tk,j) corresponds to lexeme WI and 
for some l = l* from 1,Nx  conditions: fl?X(l*) = 
X*k,t   and   y* = fl?W (l*) (y*?YWi, y*??), are 
fulfilled, then we shall call the word form y* as 
normalized form or lemma of lexeme Wi. Usually 
y* = y1. As a rule, infinitive is a lemma for the 
verb etc. 
Let YWi ? WCP of lexeme Wi. Then word form's 
inflections of paradigm YWi form ordered se-
quence denoted by YFLCi. Inflection class (FC) 
number I denoted by FCI is the five:  
 
FCI = < hk, tk,j, P1k,t, Xk,t, YFLCi > (1), 
 
where hk ? some part of speech; tk,j ? some reali-
zation of LC type for corresponding part of 
speech; P1k,t ? ordinary LC, corresponding to tk,j; 
Xk,t ? sequence of special LC of WCP, corre-
sponding to tk,j; YFLCi ? some I-th sequence of 
inflections, also called WCP of FC, where  
|Xk,t| = |YFLCi|. Inflection class concept was first 
used by (Belonogov, Zelenkov, 1985), although 
inflection class was understood only as ordered 
sequence of inflections. 
Let for lexeme W  WIS* = (b*1, b*2, ? , 
b*NWIS*) and exists WISm = ( b1, b2, ? , bNWIS), 
where m = 1?|Xk,t|, such, that WISm ? WIS*. 
Consequently, exists natural number N0, 
N0 = 0?min (NWIS, NWIS*), such, that (b*1, b*2, 
? , b*No) = (b1, b2, ? , bNo); (b*No+1, ? , 
b*NWIS*) ? (bNo+1, ? , bNWIS). Let us call the or-
dered sequence zsI,m = ((bNo+1, ? , bNWIS), 
(b*No+1, ? , b*NWIS*)), allowing to obtain lemma 
WIS  from some word form WIS, direct substi-
tution. Here I is a FC number, m ? position 
number in WIS FC, s ? exact pair number 
among other pairs in the m-th position. For each 
I-th FC is defined ordered set ZI (may be empty): 
ZI = {zI,1, zI,2, ? , zI,Nzi}, ??? Nzi = |Xk,t|. Each  
zI,m= {z1I,m, z2I,m, ? , zNzimI,m}, where 
m = 1?|Xk,t|, also is a set of pairs of direct substi-
tutions (may be empty). If the pair zsI,m = (bm,b*) 
is a direct substitution, then the pair (b*,bm) is 
called reverse substitution. Reverse substitution 
allows obtaining some m-th word form WIS 
from lemma WIS. There is one-to one corre-
spondence between the sets B* = {?, b*, ?} 
and Bm = {?, bm, ?}. Thus, |B*| = |Bm|; if (b*, 
bm1) and (b*, bm2), then bm1= bm2; if (b*1, bm) and 
(bm, b*2) , then b*1= b*2. The letters from the 
constant part of WIS could be added to the be-
ginnings of such character sequences for 
achievement of this term.  
For example, the genitive of the plural noun 
??????? (copeck) with lexeme WIS* = 
(??????) is WIS 7 = (??????). Direct sub-
stitution should be (??, ??), but for the lexeme 
of the same inflexion class (FC = 154) 
???????? (kitty or pellet or pool) direct sub-
stitution in the same position must be (??, ??). 
This generates ambiguity. Therefore, two pairs 
of direct substitutions: (???, ???) ? 
(???, ???) are formed in the morphology 
model for inflexion class 154 and m = 7. Thus, 
for some inflection classes the set of direct sub-
stitutions should be formed.  
So, for obtaining word form of WCP with given 
LC it is enough to define WIS of the lemma, 
number of the inflexion class and the number of 
word form in WCP, thus the three < WIS*, FC, 
l>. If  Yl  = '?', then for given FC and, accord-
ingly, for given lexeme the word form with such 
LC does not exist.  However, even if Yl ? '?', 
paradigm of the given lexeme could be dummy. 
Such situation is described with the help of the 
set P3k,t of individual LC of given lexeme.  
For example, lexemes ???????? (do) and 
????????? have the same inflection class 175 
and, hence, the same realization of ordinary and 
special LC, but they have different value of as-
pect: verb ???????? ? imperfective aspect, 
verb ????????? ? perfective aspect. So LC 
aspect should be the individual LC for this pair. 
Additionally, the individual LC could impose 
restriction on the existence of some inlections of 
the word. In the above example for FC = 175 
FLC44 = ???? ? Z175,44 = (????, ~), where sign 
'~' designates empty sequence. For the verb 
???????? WIS* = ?????? ? y44 = ?????-
?????. For the verb ?????????: WIS* = 
??????? ? y44 = ???????????. This 
contradicts with Russian language standard. 
So in the morphologic model should be the rules 
?rejecting? some inflection forms according 
their individual LC information. Such exclusion 
for given lexeme could be set explicitly by indi-
cating the number of concrete inflection.  
For example, for lexeme ??????? (dream) 
there is no y8 ? plural genitive inflection. The set 
of individual LC realizations of lexeme inflec-
tions and numbers of forbidden inflections of 
WIP are considered to be individual feature of 
lexeme and are marked by I.  
Thus, LC of every lexeme Wi could be given by 
three: 
 
Wi = < WIS*i, FC, Ii >.  (2) 
 
Linguistic tables (LT) form the second counter-
part of the model FC (1). The structure of each 
LT depends on its utility type. For example, let 
us describe LT of ordinary LC (table of inflec-
tion classes). Table structure is simple: 
 
TableFC?FLC = { <FC1,Lc1>, <FC2Lc2>, 
?,<FCm,Lcm>},  
 
where m ? general number of FC; Lc ? 8-bit 
code of general LC.  
The interpretation of general LC in 8-bit code 
(d1,?d8) is like this: 4 low digits (d1-d4) de-
pend on the value of 4 high digits (d5-d8) that 
distinguish part of speech. For example, the val-
ues d1=0, d2=0, d3=0, d4=0 define a noun, 
d1=0, d2=0, d3=0, d4=1 ? an adjective. For 
nouns other 4 bits could be interpreted as thus: 
d7=1, d8=0 ? ordinary noun, d7=0, d8=1 ? sub-
stantial noun, d7=1, d8=1 ?unchangeable noun. 
Bits d5, d6 are defined  only for ordinary nouns 
and define gender p2 = {{"masculine", "femi-
nine", "neuter", masculine/ feminine"}: d5=0, 
d6=0 ? masculine, d5=0, d6=1 ? femine, d5=1, 
d6=0 ? neutur, d5=1, d6=1  ? mascu-
line/feminine.  
General set model of inflection morphology we 
presented (Yablonsky S., 1999) permits to define 
mostly all sides of inflection morphology for 
Russian, Ukrainian and other Slavic languages.  
4 Russian Lexical Databases for Mor-
phology 
The morphological analyzer has two main parts:  
 
? dictionary with declarative linguistic knowl-
edge of the language; 
? program realization of morphologic model's 
algorithms. 
 
In general dictionary lexical information is rep-
resented in such form:  
 
Vi = {Wi, fi},   i = 1? Nv, (3) 
 
where Wi = (a1, a2, ? , aLi) ? lexical part of dic-
tionary's article: the word or phrase, composed 
from the alphabet characters A = {aS : s = 1, ? , 
Na}; tag part fi = (f1, f2, ? , fk) ? subset of tags 
from the set F = { fr : r = 1, ? , Nf}, Nv ? num-
ber of the words (word-tokens) in the dictionary, 
for large-scale dictionaries of inflective lan-
guages usually Nv > 1500 000.  
There are three main variants of database reali-
zation. 
4.1 Compressed Database  
4.1.1 WFS-dictionary Database  
The part of the word including prefix(es) and 
root is  called word formative stem (WFS). The 
part of the word including prefix(es), root and 
suffix(es) is called word inflective stem (WIS). 
In the compressed WFS - dictionary database all 
WIS are distributed into word forming groups 
(WFG). Word forming group consists of such set 
of fours:  
<WFSi, SUF, FC, Ii> (1), 
 
where SUF ? suffix (number of the suffix), FC ? 
inflection class number; WISi* = WFSi ? SUF. 
Usually only first 255 maximum frequent suf-
fixes are coded as separate linguistic units in 
compress WFS-dictionary realization. Other suf-
fixes are included in WFS.  
4.1.2 WIS-dictionary Database  
For increasing speed of morphological analysis 
all WIS with stem gradation are generated. In 
the compressed WIS - dictionary database the 
ordered sequence of all lexemes is stored. The 
speed of analysis is increased in 10 times. 
Besides, several additional tables are used: table 
of inflection classes, inflection class ? inflec-
tions, inflection ? inflection classes, inflection 
class ? right direct substitutions, joint right di-
rect and right inverse substitutions, direct and 
inverse tables of suffixes, prefixes and substitu-
tions in prefixes, and some other (see Yablonsky 
S., 1999).  
4.2 Word-dictionary Database  
Today the memory cost is dramatically going 
down. So words without compression could be 
stored on HDD/RAM.  The simplified UML-
notation of the database for storing such re-
sources is shown below. 
4.2.1 Word-dictionary database UML 
Notation  
Today Unified Modeling Language (UML) de-
fines a standard notation for object-oriented sys-
tems (Booch G., Rumbaugh J., and Jacobson I., 
1998). The objective of modeling is to complete 
a rigorous design with quality checks before we 
build a word-dictionary database system. The 
UML is an object-oriented methodology that 
standardizes modeling language and notation, 
not a particular method. Using UML enhances 
communication between linguistic experts, 
workflow specialists, software designers and 
other professionals with different backgrounds.  
We introduced simplified UML data model (see 
figure 1) for word-dictionary database and de-
veloped a table-based UML mapping according 
to UML notations.  
There are two main tablesin database. Relational 
table LEMMA is destined for storing lemma?s 
linguistic information and has such attributes: 
L_NUM ? lemma?s index; 
L_NAME ? lemma; 
FK_NUM ? number of inflection class; 
L_PREF_LEN ? length of prefixes; 
L_ROOT_LEN ? length of root; 
L_SUF_LEN ? length of suffixes; 
L_FLEX_LEN ? length of inflection; 
L_TRANSCR ? transcribtion; 
L_ACCENT ? number of accent letter; 
L_BYTE ? byte of additional linguistic  
                   information. 
Relational table PARADIGM is destined for 
storing paradigm entry-word?s linguistic infor-
mation and has attributes similar to LEMMA 
table. 
Example of Russian entry word ????? 'dream' 
with its inflection paradigm plus grammatical 
tags and hyphenation see below.  
 
Lemma: ?????. 
Paradigma: 
?????  noun, feminine, singular, nominative, inanimate 
?????  
????? 
noun, feminine, singular, genitive, inanimate 
noun, feminine, singular, dative, inanimate 
????? noun, feminine, singular, accusative, inanimate 
?????? noun, feminine, singular, instrumental, inanimate 
?????? noun, feminine, singular, instrumental, inanimate 
????? noun, feminine, singular, prepositional, inanimate 
????? noun, feminine, plural, nominative, inanimate 
?????? noun, feminine, plural, dative, inanimate 
????? noun, feminine, plural, accusative, inanimate 
??????? noun, feminine, plural, instrumental, inanimate 
?????? noun, feminine, plural, prepositional, inanimate 
 
Relational database management systems 
(RDBMS) play a crucial role in the storage of 
richly structured data. The main advantage of 
RDBMS is their maturity and almost three dec-
ades of experience with them.  
In general the main features of Word-dictionary 
database are implemented using commercial 
DBMS Oracle9i. Usage of Unicode simplifies 
Multilanguage Word-dictionary development.  
PL/SQL-script for database creation is available 
by e-mail request root@russicon.spb.su. 
5 Derivational morphology and com-
pounding 
Derivational morphology is based on detection 
of fixed expressions (more then 2000 of Russian 
idioms, proverbs, sayings), multiword preposi-
tions, prefixes/suffixes with strong derivation 
functions and productive central derived, com-
pounds (3000 of most frequent Russian com-
pounds), processing 198 features consisting of 
morphosyntactic features, derivational features, 
stylistic features and punctuator features. 
6 System for construction and support 
of Russian Grammatical Dictionaries  
System allows to receive morphological infor-
mation of the word and to build normal form for 
the word, shows paradigm for the word (see fig-
ure 2), constructs new words lexicon, constructs 
frequency lexicon. It provides such morphologi-
cal information for new words treatment: 
? input of grammatical characteristics of new 
words, length of word-building and word-
changing stems, number of  inflexion class 
etc.;  
? generation of different variants of inflexion 
paradigms for new word containing only one 
correct variant; 
? input of inflection paradigm of new words.  
7 Russian Morphological Analyzer 
Morphological analyzer and normalyzer allows:  
? to define following grammatical characteris-
tic s of a word: part of speech, case, gender, 
number, tense, person, degree of compari-
son, voice, aspect, mood, form, type, transi-
tiveness, reflexive, animation;  
 
? to modify a given word to its normal gram-
matical form/s ? lemma/s (normalyzer). A 
set of applications were build on the base of 
the processor for three mentioned Slavonic 
languages.  
All applications are designed in Java and Oracle 
9i. This makes them platform independent. 
References 
Ashmanov I. (1995) Grammar and Style Checker for 
Russian Texts. In Proceedings of Dialog'95 Inter-
national Workshop on Computational Linguistics 
and its Applications. Kazan, Russia. 
Belonogov G.G., Zelenkov Y.G. (1985) ???????? 
???????????????? ??????? ??????? ???? (An 
Algorithm for Morphological Analysis of Russian 
words). In journal ?Issues of information theory 
and practice", ?53. Moscow. (in Russian) 
Belyaev  B.M.,  Surcis A.S.,  Yablonsky  S.A. (1993)  
Russian  Language  Processor  RUSSICON:  De-
sign  and Applications.  In  Proceedings of the 
East-West Artificial Intelligence Conference 
(EWAIC-93), Moscow. 
Bider I.G., Bolshakov I.A. (1976) ???????????? 
???????????????? ?????????? ??????   
"?????<=>?????". I. ?????????? ???????? ? 
???????? ??????? (Formalization of morphologi-
cal component within the Meaning?Text frame-
work). Reports of USSR Acadimy of Science on 
Technical Cybernetics.?6, pp.42?57. (in Russian) 
Bolshakov I.A. (1990) A Large Russian Morphologi-
cal Vocabulary for IBM Compatibles and Methods 
of its Compression. In the Proceedings of the 13th 
International Conference on Computational Lin-
guistics COLING-90. Helsinki, Finland. 
Booch, G., Rumbaugh, J., and Jacobson, I. (1998) 
The Unified Modeling Language user guide, Addi-
son-Wesley. 
Chanod J. (1997) Current development for Cenral 
and Eastern European Languages. In Proceedings 
of the Second European Seminar ?Language Ap-
plications for a Multilingual Europe?, Mann-
heim/Kaunas. 
Karttunen L. (1983) KIMMO: a general morphologi-
cal processor. In Dalrymple et al(Eds.). Texas 
Linguistic Forum, 22, Department of Linguistics, 
University of Texas at Austin, pp166-186 
Karttunen L., Koskenniemi K., Kaplan R. (1987) A 
Compiler for Two-Level Phonological Rules. Te-
chical Report. Center for the Study of Language 
and Information. Stanford University. 
Kulagina O.S. (1986) ??????????????? ?????? 
??????? ??????? ????????? (Morphologic ana-
lysys of Russian word forms). Internal Publication 
of the IPM. Moscow, Academy of Sciences, ?10, 
26p. (in Russian) 
Mikheev A.S., Liubushkina L.A. (1995) Russian 
Morphology: An Engineering Approach Natural 
Language Engineering 1 (3), Cambridge Univer-
sity Press, pp. 235?263. 
Popov E. V. (1986) Talking with Computers in Natu-
ral Language. Springer-Verlag, 305p. 
Segalovich I.S. (1995) Indexing of Large Russian 
Texts with a Dictionary Built Around the Sparse 
Hash Table. In Proceedings of Dialog'95 Interna-
tional Workshop on Computational Linguistics 
and its Applications. Kazan, Russia. 
Yablonsky  S.A.  (1990)  Russian  Language  Proces-
sor  RUSSICON.  In  Actual problems of com-
puter linguistics, Tartu, Estonia. 
Yablonsky S.A. (1998) Russicon Slavonic Language 
Resources and Software. In: A. Rubio, N. Gal-
lardo, R. Castro & A. Tejada (eds.) In: Proceed-
ings First International Conference on Language 
Resources & Evaluation, Granada, Spain. 
Yablonsky S.A. (1999) Russian Morphological 
Analyses. In: Proceedings of the International 
Conference VEXTAL, November 22?24 1999, 
Venezia, Italia. 
Yablonsky S.A. (2000) Russian Monitor Corpora: 
Composition, Linguistic Encoding and Internet 
Publication. In: Proceedings Second International 
Conference on Language Resources & Evaluation, 
Athens, Greece. 
Yablonsky S. A. (2002) Corpora as Object-Oriented 
System. From UML-notation to Implementation. 
In: Proceedings LREC-2002, Las Palmas, Spain.  
Zaenen A., Uszkoreit H. (1996) Language Analysis 
and Understanding. In Survey of the State of the 
Art in Human Language Technology 
(http://www.cse.ogi.edu/CSLU/HLTsurvey/). 
 
