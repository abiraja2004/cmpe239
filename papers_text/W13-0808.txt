Proceedings of the 7th Workshop on Syntax, Semantics and Structure in Statistical Translation, pages 68?77,
Atlanta, Georgia, 13 June 2013. c?2013 Association for Computational Linguistics
Synchronous Linear Context-Free Rewriting Systems
for Machine Translation
Miriam Kaeshammer
University of Du?sseldorf
Universita?tsstra?e 1
40225 Du?sseldorf, Germany
Abstract
We propose synchronous linear context-free
rewriting systems as an extension to syn-
chronous context-free grammars in which syn-
chronized non-terminals span k ? 1 continu-
ous blocks on each side of the bitext. Such
discontinuous constituents are required for in-
ducing certain alignment configurations that
occur relatively frequently in manually an-
notated parallel corpora and that cannot be
generated with less expressive grammar for-
malisms. As part of our investigations con-
cerning the minimal k that is required for in-
ducing manual alignments, we present a hier-
archical aligner in form of a deduction system.
We find that by restricting k to 2 on both sides,
100% of the data can be covered.
1 Introduction
The most prominent paradigms in statistical ma-
chine translation are phrase-based translation mod-
els (Koehn et al, 2003) and tree-based approaches
using some form of a synchronous context-free
grammar (SCFG) (Chiang, 2007; Zollmann and
Venugopal, 2006; Hoang and Koehn, 2010), in par-
ticular inversion transduction grammar (ITG) (Wu,
1997). The rules of the translation models are usu-
ally learned from word aligned parallel corpora.
Synchronous grammars also induce alignments be-
tween words in the bitext when simultaneously rec-
ognizing words via the application of a synchronous
rule (Wu, 1997). Due to their central role, it is im-
portant that a synchronous grammar formalism is
powerful enough to generate all alignment config-
urations that occur in hand-aligned parallel corpora
(i)
a b c d
b d a c
(ii)
a b
a1 b1 a2 b2
(iii)
a1 b a2
b1 a b2
Figure 1: (i) inside-out alignment (Wu, 1997); (ii) cross-
serial discontinuous translation unit (S?gaard and Kuhn,
2009); (iii) bonbon alignment (Simard et al, 2005)
that are taken to be a gold standard of translational
equivalence (Wellington et al, 2006).
The empirical adequacy of phrase-based and
SCFG-based translation models has been put into
question (Wellington et al, 2006; S?gaard and
Kuhn, 2009; S?gaard and Wu, 2009; S?gaard, 2010)
because they are unable to induce certain alignment
configurations. In the alignments in Figure 1, the
translation units a, b, c, and d cannot be indepen-
dently generated by a binary SCFG. Due to a re-
ordering component, phrase-based systems can han-
dle (i), but neither (ii) nor (iii). Those phenomena
however occur relatively frequently in hand-aligned
parallel corpora. Wellington et al (2006) found that
complex structures such as inside-out alignments oc-
cur in 5% of English-Chinese sentence pairs and in
the study of S?gaard and Kuhn (2009) between 1.6%
(for Danish-English data) and 12.1% (for Danish-
Spanish data) of all translation units are discontinu-
ous, i.e. not derivable by ITGs in normal form.
As Wellington et al (2006) already noted for
inside-out alignments, discontinuous constituents
are required for binary synchronous derivations of
the alignment configurations under consideration.
This is illustrated in Figure 2: the yields of A 2
68
(i) (iii)A 4
A 3
A 2
A 1
a b c d
b d a c
A 1
A 2
A 3
A 4
A 3
A 2A 1
a1 b a2
b1 a b2
A 1A 2
A 3
Figure 2: Synchronous derivations: co-indexed non-
terminals are generated synchronously. Note that many
other derivations that induce the same alignment struc-
tures are possible, but all of them involve at least one dis-
continuous constituent.
and A 3 in (i) are discontinuous on the target side,
in (iii) the yield of A 1 is discontinuous on the source
side and the yield of A 2 is discontinuous on the
target side. We therefore propose to augment tree-
based approaches such that they can account for dis-
continuous constituents in the source and/or target
derivation. This implies going beyond the power of
context-free grammars.
In the monolingual parsing community, linear
context-free rewriting systems (LCFRS) have been
established as an appropriate formalism for the mod-
eling of discontinuous structure (Maier and Lichte,
2011; Kuhlmann and Satta, 2009). LCFRS is an ex-
tension of CFG, in which non-terminals can span
k ? 1 continuous blocks of a string. k is termed
the fan-out of the non-terminal. If k = 1 for all
non-terminals, the grammar is a CFG. Recent work
shows that probabilistic data-driven parsing with
LCFRS is indeed feasible and gives acceptable re-
sults (Maier, 2010; Evang and Kallmeyer, 2011; van
Cranenburgh, 2012; Maier et al, 2012; Kallmeyer
and Maier, 2013). It seems timely to transfer these
findings to statistical machine translation.
In this work, we introduce the notion of syn-
chronous LCFRS for translation and show how the
alignments in Figure 1 are induced. Since the pars-
ing complexity of LCFRS, and thus of synchronous
LCFRS as well, depends directly on k, the num-
ber of blocks that a non-terminal in the grammar
may span, an investigation concerning the empiri-
cally required k is carried out on manually aligned
data. For this purpose, we present a parallel parser
for an all-accepting synchronous LCFRS that is used
to validate hierarchical alignments for a given k.
This extends the work of Wellington et al (2006)
and S?gaard (2010) from a methodological point of
view, as will be explained in Section 5. In particular,
we will revise the results that S?gaard (2010) pre-
sented concerning the coverage of ITG. Our exper-
iments furthermore include data sets that have not
been used in previous similar studies.
2 Synchronous LCFRS for Translation
2.1 LCFRS
An LCFRS1 (Vijay-Shanker et al, 1987; Weir,
1988) is a tuple G = (N,T, V, P, S) where N is
a finite set of non-terminals with a function dim:
N ? N determining the fan-out of each A ? N ; T
and V are disjoint finite sets of terminals and vari-
ables; S ? N is the start symbol with dim(S) = 1;
and P is a finite set of rewriting rules
A(?1, . . . , ?dim(A))? A1(X(1)1 , . . . , X
(1)
dim(A1))
? ? ?Am(X(m)1 , . . . , X
(m)
dim(Am))
where A,A1, . . . , Am ? N , X
(i)
j ? V for 1 ? i ?
m, 1 ? j ? dim(Ai) and ?i ? (T ? V )? for
1 ? i ? dim(A), for a rank m ? 0. For all r ? P ,
every variableX in r occurs exactly once in the left-
hand side (LHS) and exactly once in the right-hand
side (RHS) of r. r describes how the yield of the
LHS non-terminal is computed from the yields of
the RHS non-terminals. The yield of S is the lan-
guage of the grammar. Figure 3 shows a sample
LCFRS with more explanations.
The rank of G is the maximal rank of any of its
rules, and its fan-out is the maximal fan-out of any
of its non-terminals. G is called a (u, v)-LCFRS if
it has rank u and fan-out v.
2.2 Synchronous LCFRS
We define synchronous LCFRS (SLCFRS) in par-
allel to synchronous CFG, see for example Satta
1We use the syntax of simple range concatenation grammars
(Boullier, 1998), a formalism that is equivalent to LCFRS.
69
A(ab, cd)? ? ?ab, cd? in yield of A
A(aXb, cY d)? A(X,Y ) if ?X,Y ? in yield of A,
then also ?aXb, cY d? in
yield of A
S(XY )? A(X,Y ) if ?X,Y ? in yield of A,
then ?XY ? in yield of S
Figure 3: Sample LCFRS for L = {anbncndn |n > 0}
and Peserico (2005). An SLCFRS is a tuple G =
(Ns, Nt, Ts, Tt, Vs, Vt, P, Ss, St) where Ns, Ts, Vs,
Ss, resp. Nt, Tt, Vt, St are defined as for LCFRS.
They denote the alphabets for the source and tar-
get side respectively. P is a finite set of syn-
chronous rewriting rules ?rs, rt,?? where rs and rt
are LCFRS rewriting rules based on Ns, Ts, Vs and
Nt, Tt, Vt respectively, and ? is a bijective mapping
of the non-terminals in the RHS of rs to the non-
terminals in the RHS of rt. This link relation is rep-
resented by co-indexation in the synchronous rules.
During a derivation, the yields of two co-indexed
non-terminals have to be explained from one syn-
chronous rule. ?Ss, St? is the start pair.
We call the tuple (Ns, Ts, Vs, Ps, Ss) the source
side grammar Gs and (Nt, Tt, Vt, Pt, St) the target
side grammar Gt where Ps is the set of all rs in P
and Pt is the set of all rt in P . The rank u of G is
the maximal rank of Gs and Gt, and the fan-out v of
G is the sum of the fan-outs of Gs and Gt. We will
sometimes write vvGs |vGt to make clear how the fan-
out of G is distributed over the source and the target
side. As in the monolingual case, a corresponding
grammar G is called a (u, v)-SLCFRS.
As an example consider the rules in Figure 4.
They translate cross-serial dependencies into nested
ones. The rank of the corresponding grammar is 2
and its fan-out 42|2.
Note that instead of defining an SLCFRS, one
could also set the fan-out of each non-terminal in
an LCFRS to ? 2, set dim(S) = 2, and formu-
late synchronization between the arguments of the
non-terminals. The main disadvantage is that this
requiresNs = Nt. Furthermore, this seems less per-
spicuous than SLCFRS when moving from SCFG
to mild context-sensitivity. Generalized Multitext
Grammar (Melamed et al, 2004) is another weakly
equivalent grammar formalism.
In correspondence to ITG and normal-form ITG
(NF-ITG) (S?gaard and Wu, 2009), we say an
?A(a, c)? ? , C(a, c)? ??
?B(b, d)? ? , D(bd)? ??
?A(aX, cZ)? A 1 (X,Z) , C(aX,Zc)? C 1 (X,Z)?
?B(bY, dU)? B 1 (Y,U) , D(bY d)? D 1 (Y )?
?S(XY ZU)? A 1 (X,Z)B 2 (Y,U) ,
S(XY Z)? C 1 (X,Z)D 2 (Y )?
Figure 4: Sample SLCFRS for L =
{?anbmcndm, anbmdmcn? |n,m > 0}
SLCFRS G is in normal form if the following two
conditions hold: (a) the rank of G is at most 2 and
(b) for all r ? P it holds that the LHS arguments
of rs and rt contain either terminals or variables, but
no mixture of both. The grammar in Figure 4 is not
in normal form.
While ITGs constrain the order of the non-
terminals in the RHS of the target side to be in the
same or in the reverse order compared to the non-
terminals in the RHS of the source side, we do not
impose such ordering constraints (on the variables)
for SLCFRS. However, it is obvious that a (2, 21|1)-
SLCFRS is equivalent to an ITG of rank 2 and that
a (2, 21|1)-SLCFRS in normal form is equivalent to
a NF-ITG.
2.3 Alignment Capacity
A translation unit is a maximally connected sub-
graph of a given alignment structure. Typically this
is the smallest unit from which translation mod-
els are learned. During a synchronous derivation,
we interpret simultaneously recognized terminals as
aligned (Wu, 1997). They thus correspond to a trans-
lation unit. We call the synchronous derivation tree
a hierarchical alignment. Many-to-many alignments
are interpreted conjunctively. This means that to in-
duce a given translation unit, a grammar has to be
able to generate the complete translation unit, and
not just one of the corresponding word alignments.
The last point has been argued for in S?gaard and
Kuhn (2009).
SLCFRS are able to induce the alignment struc-
tures under consideration (in Figure 1). This is ex-
emplified by the rules given in Figure 5.
Clearly, there exist many different possible hier-
archical alignments for a given alignment structure.
The underlying constraints for the grammars in Fig-
ure 5 are (a) each translation unit is represented by
70
(i)
?A(a)? ? , A(a)? ??
?A(Xb)? A 1 (X) , A(b, Y )? A 1 (Y )?
?A(Xc)? A 1 (X) , A(Y1, Y2c)? A 1 (Y1, Y2)?
?A(Xd)? A 1 (X) , A(Y1dY2)? A 1 (Y1, Y2)?
(ii)
?A(a)? ? , A(a1, a2)? ??
?A(Xb)? A 1 (X) , A(Y1b1Y2b2)? A 1 (Y1, Y2)?
or
?A(b)? ? , A(b1, b2)? ??
?A(aX)? A 1 (X) , A(a1Y1a2Y2)? A 1 (Y1, Y2)?
(iii)
?A(a1, a2)? ? , A(a)? ??
?A(X1bX2)? A 1 (X1, X2) , A(b1Y b2)? A 1 (Y )?
or
?A(b)? ? , A(b1, b2)? ??
?A(a1Xa2)? A 1 (X) , A(Y1aY2)? A 1 (Y1, Y2)?
Figure 5: SLCFRS rules that induce the alignments in
Figure 1. For (i) there are many other derivations possi-
ble, since there are 4! possibilities to combine the trans-
lation units in a binary way. The shown rules correspond
to Figure 2(i).
exactly one rule and (b) each rule aligns exactly one
translation unit and combines it with at most one al-
ready established synchronous constituent.
ITG and NF-ITG do not generate the same class
of alignments (S?gaard and Wu, 2009). In paral-
lel, a (2, v)-SLCFRS in normal form does not gen-
erate the same class of alignments as an unrestricted
(2, v)-SLCFRS. Consider, for example, a discontin-
uous translation unit d with two gaps on the source
side and a grammar G with fan-out 32|1. G in nor-
mal form cannot induce d. In general, for generat-
ing x gaps, a fan-out of x+ 1 is required. However,
without the normal form requirement, G can possi-
bly induce d with a rule that combines the terminals
of d with the constituents that fill the gaps.
2.4 Parsing Complexity
LCFRS in normal form can be parsed in O(n3k)
where k is the fan-out of the grammar (Seki et al,
1991). This result can be transferred to SLCFRS:
An SLCFRS with fan-out v is essentially an LCFRS
with fan-out v + 1. However, because of the start
non-terminal S with dim(S) = 2, all non-terminals
A ? N with dim(A) ? 2 and the special inter-
pretation of the source/target side meaning that vari-
ables occur either on the source or target side but
?T (?s)? ? , T (?t)? ??
?A(?1)? T 1 (?1) , A(?1)? T 1 (?1)?
?A(?1)? A 1 (?2)A 2 (?3) , A(?1)? A 1 (?2)A 2 (?3)?
where ?s ? (Ts?)k0 ,?t ? (Tt
?)k
?
0 ,?i ? (Vs+)kj ,?i ?
(Vt+)k
?
j for 0 < kj ? ks, 0 < k?j ? kt, 0 < i ? 3, 0 ? j ? 3
Figure 6: All-accepting SCLFRS in normal form with
fan-out v = ks + kt
cannot change sides, no items that cross or involve
the additional gap have to be built during parsing.
Bitext parsing with SLCFRS in normal form can
therefore also be performed in O(n3v) where n =
max(ns, nt), or more specifically O(n3vGss n
3vGt
t )
where ns, nt are the lengths of the source and tar-
get input strings respectively.
3 Empirical Investigation
Since parsing complexity with SLCFRS is deter-
mined by the fan-out v of the grammar, we con-
duct an investigation to find out which v would be
required to fully cover the alignment configurations
that occur in manually aligned parallel corpora.
3.1 Bottom-Up Hierarchical Aligner
Our study is based on alignment validation
(S?gaard, 2010), i.e. we check whether an align-
ment structure can be generated by an all-accepting
SLCFRS with a specific v. Such a grammar is de-
picted in Figure 6. Note in particular that it leaves
open how to compose the yield of the LHS non-
terminal from the two RHS constituents. To be able
to use the grammar for parsing, one would have to
spell out all combination possibilities.
Instead, we use the idea of a bottom-up hierar-
chical aligner (Wellington et al, 2006). It works
very much like a synchronous parser, but the con-
straints for inferences are the word alignments and
potentially other things, and not the rewriting rules
of a grammar. Initial constituents are built from
the word alignments, then constituents are combined
with each other. The goal is to find a constituent that
completely covers the input. In our case, the con-
straints for the hierarchical aligner come from the
translation units, the fan-out vks|kt of the simulated
grammar and possibly a normal-form requirement.
We specify the hierarchical aligner in terms of
a deduction system (Shieber et al, 1995). Deduc-
71
tion rules have the form A1...AmB C where A1 . . . Am
and B are items, i.e. intermediate parsing results,
and C is a list of conditions on A1 . . . Am and B.
The interpretation is that if A1 . . . Am can be de-
duced and conditions C hold, then B can be de-
duced. Our items have the form ?[Xs,?s], [Xt,?t]?
whereXs ? Ns andXt ? Nt of the simulated gram-
mar. All-accepting grammars usually have only one
non-terminal symbol, but we need a distinction be-
tween pre-terminal constituents T and general con-
stituents A for simulating SLCFRS in normal form
as well as the full class. ?s and ?t characterize the
spans of the synchronous constituent on the source
and target side respectively. We view them as bit
vectors where ?s(i) = 1 means that si is in the
yield of Xs, and ?t(i?) = 1 that ti? is in the yield
of Xt. ?s0...n, t0...n?? is the input sentence pair
that is segmented into m disjoint translation units
?D(m)s , D
(m)
t ? based on the given word alignment
structure. D(m)s and D
(m)
t are sets of word indices
into s and t respectively. We furthermore specify
some useful operations for bit vectors. The ? opera-
tor combines bit vectors of the same length to a new
bit vector by an elementwise or operation, while the
intersection ? of two bit vectors is the elementwise
and operation. 0l is a bit vector ? such that ?(i) = 0
for all 0 ? i ? l. The function b(?) returns the
number of blocks of ?, i.e. the number of continu-
ous sequences of 1s in ?.
Figure 7 shows the deduction rules of the hi-
erarchical aligner that simulate an all-accepting
SLCFRS in normal form. Scan builds T items from
translation units, Unary creates A items from T
items, and Binary combines two A items to a larger
A item. Via the side conditions, A items are only
created if they respect the specified fan-out vks|kt
of the all-accepting grammar. If the hierarchical
aligner finds an A item that spans ?s, t?, the align-
ment structure of ?s, t? is valid, i.e. can be induced
by an SLCFRS in normal form with fan-out vks|kt .
Since we are also interested in the empirical align-
ment capacity of SLCFRS without normal-form re-
striction, we present an extended deduction system
in Figure 8. The additional rules lead to the simu-
lation of an SLCFRS of rank 2 where terminals and
variables can be combined in the arguments of the
LHS non-terminals of the rewriting rules. Note in
particular that the generation of T items is not con-
strained by a maximally allowed vks|kt .
For the computation of the items, we use standard
chart parsing techniques, maintaining a chart and an
agenda.
3.2 Data
We use manually aligned parallel corpora for our
study.2 Data sets that have already been previously
used in similar experiments, e.g. in Wellington et
al. (2006), S?gaard and Wu (2009), and S?gaard
(2010), are those from Martin et al (2005) for
English-Romanian and English-Hindi, the English-
French data from Mihalcea and Pedersen (2003), the
Europarl data set described in Grac?a et al (2008) for
the six combinations of English, French, Portuguese
and Spanish, the English-German Europarl data that
was created for Pado? and Lapata (2006), and data
sets with Danish as the source language that are part
of the Parole corpus of the Copenhagen Dependency
Treebank (Buch-Kromann et al, 2009).
We furthermore perform our study on data sets
that, to the best of our knowledge, have not been
evaluated in a similar setting before. Those are
English-Swedish gold alignments documented in
Holmqvist and Ahrenberg (2011), the English-
Inuktitut data used in Martin et al (2005), more
English-German data3, the English-Spanish data set
in Lambert et al (2005) and English-Dutch align-
ments that are part of the Dutch Parallel Corpus
(Macken, 2010). Characteristics about the data sets
are presented in the last columns of Table 1.
3.3 Method
We apply the bottom-up hierarchical alignment al-
gorithm in various configurations to each manually
aligned sentence pair. If a goal item is found, the
alignment structure can be induced with the formal-
ism in question. We measure the number of sen-
tence pairs for which a hierarchical alignment was
reached over the total number of sentence pairs.
S?gaard (2010) refers to this as alignment reach-
ability, which is the inverse of parse failure rate
(Wellington et al, 2006).
2Whenever there are sure (S) and possible (P) alignments
annotated, we use both.
3By T. Schoenemann, from http://user.phil-fak.
uni-duesseldorf.de/?tosch/downloads.html
72
Scan:
?[T,?s], [T,?t]?
a translation unit ?Ds, Dt?
where ?s(i) = 1 if i ? Ds, otherwise ?s(i) = 0, and ?t(i
?) = 1 if i? ? Dt, otherwise ?t(i
?) = 0
Unary:
?[T,?s], [T,?t]?
?[A,?s], [A,?t]?
b(?s) ? ks, b(?t) ? kt
Binary:
?[A,?1s], [A,?
1
t ]?, ?[A,?
2
s], [A,?
2
t ]?
?[A,?3s], [A,?
3
t ]?
?1s ? ?
2
s = 0
n,?1t ? ?
2
t = 0
n? , b(?3s) ? ks, b(?
3
t ) ? kt
where ?3s = ?
1
s ? ?
2
s and ?
3
t = ?
1
t ? ?
2
t
Goal: ?[A,?s], [A,?t]?
where ?s(i) = 1 for all 0 ? i ? n and ?t(i
?) = 1 for all 0 ? i? ? n?
Figure 7: CYK deduction system for an all-accepting SLCFRS in normal form with fan-out vks|kt
UnaryMixed:
?[T,?Ts ], [T,?
T
t ]?, ?[A,?
A
s ], [A,?
A
t ]?
?[A,?s], [A,?t]?
?Ts ? ?
A
s = 0
n,?Tt ? ?
A
t = 0
n? , b(?s) ? ks, b(?t) ? kt
where ?s = ?
T
s ? ?
A
s and ?t = ?
T
t ? ?
A
t
BinaryMixed:
?[T,?Ts ], [T,?
T
t ]?, ?[A,?
1
s], [A,?
1
t ]?, ?[A,?
2
s], [A,?
2
t ]?
?[A,?3s], [A,?
3
t ]?
?Ts ? ?
1
s = 0
n,?1s ? ?
2
s = 0
n,?2s ? ?
T
s = 0
n,
?Tt ? ?
1
t = 0
n? ,?1t ? ?
2
t = 0
n? ,?2t ? ?
T
t = 0
n? ,
b(?3s) ? ks, b(?
3
t ) ? kt
where ?3s = ?
T
s ? ?
1
s ? ?
2
s and ?
3
t = ?
T
t ? ?
1
t ? ?
2
t
Figure 8: Additional inference rules for the deduction system in Figure 7 for simulating an SLCFRS of rank 2 without
normal form restriction.
SLCFRS
NF u = 2 S?gaard (2010) Data
v = 21|1 v = 42|2 v = 21|1 v = 42|2 NF-ITG ITG
= NF-ITG = ITG #SPs min med max
Martin
en-ro (30) 45.07 97.85 95.07 100.00 - - 447 2|2 20|19 96|94
en-hi (40) 82.73 100.00 96.36 1|22|1100.00 - - 115 1|1 10|12 45|58
en-iu (40) 40.66 95.60 100.00 100.00 - - 100 10|3 26|10 79|26
Pado en-de (15) 73.74 100.00 94.41 1|2100.00 38.97 45.13 987 5|5 24|23 40|40
Mihal. en-fr 67.56 98.88 95.30 100.00 *76.98 *81.75 447 2|2 16|17 30|30
Grac?a
en-fr 73.00 100.00 95.00 1|2100.00 65.00 68.00 100 4|4 11|13 14|21
en-pt 76.00 100.00 98.00 1|22|1100.00 65.00 67.00 100 4|3 11|12 14|21
en-es 82.00 100.00 96.00 1|22|1100.00 73.00 74.00 100 4|4 11|11 14|24
pt-fr 73.00 97.00 92.00 1|2100.00 63.00 63.00 100 3|4 12|13 21|21
pt-es 90.00 99.00 99.00 1|22|1100.00 80.00 81.00 100 3|4 12|11 21|24
es-fr 74.00 100.00 91.00 1|2100.00 68.00 68.00 100 4|4 11|13 24|21
CDT
da-en (25) 72.90 98.93 97.80 100.00 - - 5464 1|1 16|17 89|98
da-de (25) 64.87 98.42 94.94 1|22|1100.00 *47.62 *49.35 449 1|1 17|18 75|74
da-es (25) 66.61 97.68 97.50 100.00 *30.68 *35.54 807 1|1 16|18 78|97
da-it (25) 69.01 97.65 97.95 100.00 *60.00 *60.00 1514 1|1 16|19 78|268
Holmqv. en-sv (30) 82.83 99.78 95.60 100.00 - - 1164 1|1 21|19 40|40
Schoen. en-de (40) 29.15 94.74 76.11 100.00 - - 300 1|1 21|22 77|79
Lambert en-es (40) 47.15 97.83 94.85 100.00 - - 500 4|4 26|27 90|99
Macken en-nl (30) 57.14 98.86 94.86 100.00 - - 699 1|1 20|19 107|105
Table 1: Alignment reachability scores of our experiments and those of S?gaard (2010), plus characteristics of the data
sets. The numbers in parentheses are the sentence length cut-offs used in our experiments. The results marked with *
are not directly comparable to ours because different versions of the data sets were used.
73
3.4 Results
Table 1 shows the results. It confirmes that NF-
ITG is not capable of generating the majority of
alignment configurations. However, when allow-
ing discontinuous constituents with maximally two
blocks on each side (v = 42|2), NF-SLCFRS in-
duces all alignments present in six of the data sets,
and reaches scores > 97 for the other data sets, ex-
cept two of them for which scores are still > 94.7.
For grammars without normal-form constraint,
alignment reachability is generally higher. We tested
grammars of rank 2 and found that over 90% of the
sentence pairs in each data set can be induced with-
out the necessity of discontinuous constituents (ex-
cept data set Schoen.). Such grammars roughly cor-
respond to successfully applied translation models,
e.g. in Hiero (Chiang, 2007). Nevertheless, our ex-
periments show that the gold alignments contain a
proportion of structures that cannot be generated by
ITGs. With a (2, 42|2)-SLCFRS, all occurring align-
ment configurations are captured. For some data
sets, a fan-out of 3 is enough to induce all align-
ments. This is indicated by 1|2 and 2|1.
Going back to grammars in normal form, the sen-
tence pairs that cannot be induced with a grammar
of fan-out 42|2 all display translation units that re-
quire three (or very rarely four) blocks on at least
the source or the target side. An interesting observa-
tion is that only the English-Inuktitut data can nev-
ertheless be generated with fan-out 4, by distribut-
ing the allowed discontinuity unequally: with a NF-
SLCFRS with fan-out 43|1, the alignment reachabil-
ity is 100. This is not surprising given the fact that
Inuktitut is a polysynthetic language.
Previous results by S?gaard (2010) concerning
the coverage of ITG and NF-ITG on hand-aligned
data, repeated for convenience in Table 1, are much
lower than ours and therefore present a highly dis-
torted picture concerning the empirical need of dis-
continuous constituents. This is due to the fact that
the implementation4 used for the experiments han-
dles unaligned words incorrectly. They are added
deterministically to the first constituent that encoun-
ters them, which leads to false negatives as further
explained in Figure 9. After fixing this issue, the
same results as for NF-SLCFRS with v = 21|1 are
4http://cst.dk/anders/itg-search.html
[ ] 6
[ ] 5
[ ] 4
[ ] 1 [ ] 2 [ ] 3
a b c d
a? b? c? d?
[ ] 1 [ ] 2 [ ] 3
[ ] 4
[ ] 5
[ ] 6
Figure 9: Synchronous ITG parse chart provided by the
implementation from S?gaard (2010): c ?belongs to?
constituent 6 while c? ?belongs to? constituent 5 . When
trying to combine 4 and 3 , c and c? are not considered as
unaligned because they are already part of a constituent,
and neither 5 nor 6 can be combined with 3 without cre-
ating a discontinuous constituent. The algorithm cannot
find a larger continuous constituent, the alignment valida-
tion therefore returns false. However, this simple align-
ment structure lies within the power of NF-ITG and ITG.
obtained. Another problem of the implementation
concerns discontinuous translation units. S?gaard?s
alignment validation returns false if the words in the
gap are aligned, although such configurations are
induced by unrestricted ITG, see S?gaard and Wu
(2009, Section 3.2.1).
4 Discussion
Our experiments show that by moving from syn-
chronous grammars with only continuous con-
stituents to grammars that allow two blocks per
constituent, (almost) all manual alignments can be
generated, depending on whether the normal-form
is enforced or not. Given the parsing complexity
that comes with allowing discontinuities, this is a
promising finding since it has already been shown
for monolingual parsing that restricting the fan-out
to 2 drastically reduces parsing times (Maier et al,
2012). In the future, we might also investigate
whether refraining from ill-nested structures (Maier
and Lichte, 2011) is a reasonable option for tree-
based machine translation in order to reduce com-
plexity (Go?mez-Rodr??guez et al, 2010).
Even though bitext parsing complexity for
SLCFRS is prohibitively high, we expect that, given
the techniques that have been developed for transla-
tion with SCFG, SLCFRS finds its application as a
74
translation model. In practice, only source side pars-
ing is performed for translation and various prun-
ing methods are applied to reduce the search space
(e.g. in Chiang (2005), Yamada and Knight (2002)
and many others).
It should also be mentioned that it is not clear yet
how alignment reachability scores relate to machine
translation quality and evaluation. We can never-
theless infer from the presented results that what is
considered as translationally equivalent by the anno-
tators of the data sets and their guidelines is beyond
the search space of SCFG. A supplementary study
could furthermore investigate translation unit error
rates (S?gaard and Kuhn, 2009) for the data sets, un-
der the assumption of a hierarchical SLCFRS align-
ment with a specific fan-out.
5 Related Work
Our empirical investigation extends previous stud-
ies, and thus provides new insights. Both Welling-
ton et al (2006) and S?gaard (2010) use a bottom-
up hierarchical alignment algorithm with the goal of
investigating the alignment complexity of manually
aligned parallel corpora. S?gaard (2010) is however
only interested in the alignment reachability of ITG
and NF-ITG, and nothing beyond. We have further-
more revealed that the presented results underesti-
mate the alignment capacity of ITG and NF-ITG.
The study of Wellington et al (2006) is very sim-
ilar to ours in that the number of blocks in discon-
tinuous constituents that are required for hierarchi-
cal alignment are investigated. The word alignments
are however treated disjunctively, which means that
in the case of n-to-m alignments with n,m ? 1,
it is enough to induce one of the involved align-
ments. With this methodology a large class of dis-
continuities we are interested in, e.g. cross-serial
discontinuous translation units, is ignored. The fail-
ure rates they present are therefore much lower than
ours. Wellington et al (2006) also show that when
constraining synchronous derivations by monolin-
gual syntactic parse trees on the source and/or target
side, allowing discontinuous constituents becomes
even more important for inducing gold alignments.
We are of course not the first to propose a trans-
lation model that is expressive enough to induce
the alignments in question in Figure 1. Following
up on a translation model proposed by Simard et
al. (2005), Galley and Manning (2010) extend the
phrase-based approach in that they allow for discon-
tinuous phrase pairs. Their system outperforms a
phrase-based system and a system based on SCFG
of rank 2. In a way, our proposal to use SLCFRS
is the syntax-based counterpart to their approach.
Methods to integrate linguistic constituency infor-
mation into the so far only formal tree-based ap-
proach can be directly transferred from the SCFG-
based approaches to SLCFRS. In constrast, it is not
obvious how to include such information into the
phrase-based systems.
S?gaard (2008) proposes to use an even more ex-
pressive formalism than LCFRS, namely range con-
catenation grammar, and to exploit its ability to copy
substrings during the derivation. The downsides of
this approach are already mentioned in S?gaard and
Kuhn (2009); for example, no tight probability esti-
mation is possible for such a grammar.
The necessity of going towards mildly context-
sensitive formalisms for translation modeling has
also been advocated by Melamed (Melamed et al,
2004; Melamed, 2004). This step was however
not motivated by the induction of specific complex
translation units, but rather by the general obser-
vation that discontinuous constituents are necessary
for synchronous derivations using linguistically mo-
tivated grammars. Discontinuous constituents also
emerge when binarizing synchronous grammars of
continuous yields with rank ? 4 (Melamed, 2003;
Rambow and Satta, 1999).
6 Conclusion
Motivated by the finding that synchronous CFG can-
not induce certain alignment configurations, we sug-
gest to use synchronous LCFRS instead, which al-
lows for discontinuities. Even though our empirical
investigation shows that with exclusively continuous
derivations more manual alignments can be captured
than previously reported, there are still many aligned
sentence pairs that can only be generated when set-
ting the fan-out of the translation grammar to > 2.
It remains to determine how such more accurate and
more expressive models relate to translation quality.
75
Acknowledgments
I would like to thank Laura Kallmeyer and Wolfgang
Maier for discussions and comments, the reviewers
for their suggestions, Anders S?gaard for discus-
sions concerning ITG and his implementation, and
Zdene?k Z?abokrtsky? for helping with the CDT data.
This research was funded by the German Research
Foundation as part of the project Grammar For-
malisms beyond Context-Free Grammars and their
use for Machine Learning Tasks.
References
Pierre Boullier. 1998. Proposal for a Natural Lan-
guage Processing syntactic backbone. Technical Re-
port 3342, INRIA.
Matthias Buch-Kromann, I?rn Korzen, and Henrik H?eg
Mu?ller. 2009. Uncovering the lost structure of trans-
lations with parallel treebanks. Copenhagen Studies in
Language, 38:199?224.
David Chiang. 2005. A hierarchical phrase-based model
for statistical machine translation. In Proceedings of
the 43rd Annual Meeting on Association for Computa-
tional Linguistics, pages 263?270.
David Chiang. 2007. Hierarchical phrase-based transla-
tion. Computational Linguistics, 33(2):201?228.
Kilian Evang and Laura Kallmeyer. 2011. PLCFRS pars-
ing of English discontinuous constituents. In Proceed-
ings of the 12th International Conference on Parsing
Technologies (IWPT), pages 104?116.
Michel Galley and Christopher D. Manning. 2010. Ac-
curate non-hierarchical phrase-based translation. In
Human Language Technologies: The 2010 Annual
Conference of the North American Chapter of the As-
sociation for Computational Linguistics, pages 966?
974.
Carlos Go?mez-Rodr??guez, Marco Kuhlmann, and Gior-
gio Satta. 2010. Efficient parsing of well-nested Lin-
ear Context-Free Rewriting Systems. In Human Lan-
guage Technologies: The 2010 Annual Conference of
the North American Chapter of the Association for
Computational Linguistics, pages 276?284.
Joa?o de Almeida Varelas Grac?a, Joana Paulo Pardal,
Lu??sa Coheur, and Diamantino Anto?nio Caseiro.
2008. Building a golden collection of parallel multi-
language word alignment. In The 6th International
Conference on Language Resources and Evaluation
(LREC08).
Hieu Hoang and Philipp Koehn. 2010. Improved trans-
lation with source syntax labels. In Proceedings of the
Joint Fifth Workshop on Statistical Machine Transla-
tion and MetricsMATR, pages 409?417. Association
for Computational Linguistics.
Maria Holmqvist and Lars Ahrenberg. 2011. A gold
standard for English?Swedish word alignment. In
Proceedings of the 18th Nordic Conference of Compu-
tational Linguistics NODALIDA 2011, pages 106?113.
Laura Kallmeyer and Wolfgang Maier. 2013. Data-
driven parsing using Probabilistic Linear Context-Free
Rewriting Systems. Computational Linguistics, 39(1).
Accepted for publication.
Philipp Koehn, Franz Josef Och, and Daniel Marcu.
2003. Statistical phrase-based translation. In Proceed-
ings of the 2003 Conference of the North American
Chapter of the Association for Computational Linguis-
tics on Human Language Technology, pages 48?54.
Association for Computational Linguistics.
Marco Kuhlmann and Giorgio Satta. 2009. Treebank
grammar techniques for non-projective dependency
parsing. In Proceedings of the 12th Conference of
the European Chapter of the Association for Compu-
tational Linguistics (EACL), pages 478?486.
Patrik Lambert, Adria` Gispert, Rafael Banchs, and
Jose? B. Marin?o. 2005. Guidelines for word align-
ment evaluation and manual alignment. Language Re-
sources and Evaluation, 39:267?285.
Lieve Macken. 2010. An annotation scheme and gold
standard for Dutch-English word alignment. In Pro-
ceedings of the Seventh International Conference on
Language Resources and Evaluation (LREC?10).
Wolfgang Maier and Timm Lichte. 2011. Character-
izing discontinuity in constituent treebanks. In For-
mal Grammer 2009, Revised Selected Papers, volume
5591 of LNAI. Springer.
Wolfgang Maier, Miriam Kaeshammer, and Laura
Kallmeyer. 2012. Data-driven PLCFRS parsing revis-
ited: Restricting the fan-out to two. In Proceedings of
the Eleventh International Conference on Tree Adjoin-
ing Grammars and Related Formalisms (TAG+11).
Wolfgang Maier. 2010. Direct parsing of discontinu-
ous constituents in German. In Proceedings of the
NAACL HLT 2010 First Workshop on Statistical Pars-
ing of Morphologically-Rich Languages.
Joel Martin, Rada Mihalca, and Ted Pedersen. 2005.
Word alignment for languages with scarce resources.
In ACL Workshop on Building and Using Parallel
Texts.
I. Dan Melamed, Giorgio Satta, and Benjamin Welling-
ton. 2004. Generalized multitext grammars. In Pro-
ceedings of the 42nd Annual Conference of the Asso-
ciation for Computational Linguistics (ACL).
I. Dan Melamed. 2003. Multitext grammars and syn-
chronous parsers. In Proceedings of the 2003 Con-
76
ference of the North American Chapter of the Associ-
ation for Computational Linguistics on Human Lan-
guage Technology, pages 79?86.
I. Dan Melamed. 2004. Statistical machine translation
by parsing. In Proceedings of the 42nd Annual Con-
ference of the Association for Computational Linguis-
tics (ACL).
Rada Mihalcea and Ted Pedersen. 2003. An evaluation
exercise for word alignment. In Proceedings of the
HLT-NAACL 2003 Workshop on Building and Using
Parallel Texts: Data Driven Machine Translation and
Beyond, pages 1?10.
Sebastian Pado? and Mirella Lapata. 2006. Optimal con-
stituent alignment with edge covers for semantic pro-
jection. In Proceedings of the 21st International Con-
ference on Computational Linguistics and 44th Annual
Meeting of the ACL, pages 1161?1168.
Owen Rambow and Giorgio Satta. 1999. Independent
parallelism in finite copying parallel rewriting sys-
tems. Theoretical Computer Science, 223(1-2):87?
120.
Giorgio Satta and Enoch Peserico. 2005. Some com-
putational complexity results for synchronous context-
free grammars. In Proceedings of Human Lan-
guage Technology Conference and Conference on
Empirical Methods in Natural Language Processing
(HLT/EMNLP), pages 803?810.
Hiroyuki Seki, Takashi Matsumura, Mamoru Fujii, and
Tadao Kasami. 1991. On Multiple Context-
Free Grammars. Theoretical Computer Science,
88(2):191?229.
Stuart M. Shieber, Yves Schabes, and Fernando C. N.
Pereira. 1995. Principles and implementation of
deductive parsing. Journal of Logic Programming,
24(1&2):3?36.
Michel Simard, Nicola Cancedda, Bruno Cavestro, Marc
Dymetman, Eric Gaussier, Cyril Goutte, Kenji Ya-
mada, Philippe Langlais, and Arne Mauser. 2005.
Translating with non-contiguous phrases. In Proceed-
ings of Human Language Technology Conference and
Conference on Empirical Methods in Natural Lan-
guage Processing (HLT/EMNLP), pages 755?762.
Anders S?gaard and Jonas Kuhn. 2009. Empirical lower
bounds on alignment error rates in syntax-based ma-
chine translation. In Proceedings of the Third Work-
shop on Syntax and Structure in Statistical Transla-
tion (SSST ?09). Association for Computational Lin-
guistics.
Anders S?gaard and Dekai Wu. 2009. Empirical lower
bounds on translation unit error rate for the full class
of inversion transduction grammars. In Proceedings
of the 11th International Conference on Parsing Tech-
nologies, pages 33?36.
Anders S?gaard. 2008. Range concatenation grammars
for translation. In Proceedings of Coling 2008: Com-
panion volume: Posters.
Anders S?gaard. 2010. Can inversion transduction
grammars generate hand alignments? In Proccedings
of the 14th Annual Conference of the European Asso-
ciation for Machine Translation (EAMT).
Andreas van Cranenburgh. 2012. Efficient parsing with
Linear Context-Free Rewriting Systems. In Proceed-
ings of the 13th Conference of the European Chapter
of the Association for Computational Linguistics.
K. Vijay-Shanker, David Weir, and Aravind K. Joshi.
1987. Characterizing structural descriptions used by
various formalisms. In Proceedings of the 25th Annual
Meeting of the Association for Computational Linguis-
tics.
David Weir. 1988. Characterizing Mildly Context-
Sensitive Grammar Formalisms. Ph.D. thesis, Univer-
sity of Pennsylviania, Philadelphia, PA.
Benjamin Wellington, Sonjia Waxmonsky, and I. Dan
Melamed. 2006. Empirical lower bounds on the com-
plexity of translational equivalence. In Proceedings of
the 21st International Conference on Computational
Linguistics and 44th Annual Meeting of the Associa-
tion for Computational Linguistics, pages 977?984.
Dekai Wu. 1997. Stochastic inversion transduction
grammars and bilingual parsing of parallel corpora.
Computational linguistics, 23(3):377?403.
Kenji Yamada and Kevin Knight. 2002. A decoder for
syntax-based statistical MT. In Proceedings of 40th
Annual Meeting of the Association for Computational
Linguistics.
Andreas Zollmann and Ashish Venugopal. 2006. Syntax
augmented machine translation via chart parsing. In
Proceedings of the Workshop on Statistical Machine
Translation, HLT/NAACL.
77
