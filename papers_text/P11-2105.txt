Proceedings of the 49th Annual Meeting of the Association for Computational Linguistics:shortpapers, pages 598?602,
Portland, Oregon, June 19-24, 2011. c?2011 Association for Computational Linguistics
Hierarchical Text Classification with Latent Concepts
Xipeng Qiu, Xuanjing Huang, Zhao Liu and Jinlong Zhou
School of Computer Science, Fudan University
{xpqiu,xjhuang}@fudan.edu.cn, {zliu.fd,abc9703}@gmail.com
Abstract
Recently, hierarchical text classification has
become an active research topic. The essential
idea is that the descendant classes can share
the information of the ancestor classes in a
predefined taxonomy. In this paper, we claim
that each class has several latent concepts and
its subclasses share information with these d-
ifferent concepts respectively. Then, we pro-
pose a variant Passive-Aggressive (PA) algo-
rithm for hierarchical text classification with
latent concepts. Experimental results show
that the performance of our algorithm is com-
petitive with the recently proposed hierarchi-
cal classification algorithms.
1 Introduction
Text classification is a crucial and well-proven
method for organizing the collection of large scale
documents. The predefined categories are formed
by different criterions, e.g. ?Entertainment?, ?Sport-
s? and ?Education? in news classification, ?Junk E-
mail? and ?Ordinary Email? in email classification.
In the literature, many algorithms (Sebastiani, 2002;
Yang and Liu, 1999; Yang and Pedersen, 1997) have
been proposed, such as Support Vector Machines
(SVM), k-Nearest Neighbor (kNN), Na??ve Bayes
(NB) and so on. Empirical evaluations have shown
that most of these methods are quite effective in tra-
ditional text classification applications.
In past serval years, hierarchical text classification
has become an active research topic in database area
(Koller and Sahami, 1997; Weigend et al, 1999)
and machine learning area (Rousu et al, 2006; Cai
and Hofmann, 2007). Different with traditional clas-
sification, the document collections are organized
as hierarchical class structure in many application
fields: web taxonomies (i.e. the Yahoo! Directory
http://dir.yahoo.com/ and the Open Direc-
tory Project (ODP) http://dmoz.org/), email
folders and product catalogs.
The approaches of hierarchical text classification
can be divided in three ways: flat, local and global
approaches.
The flat approach is traditional multi-class classi-
fication in flat fashion without hierarchical class in-
formation, which only uses the classes in leaf nodes
in taxonomy(Yang and Liu, 1999; Yang and Peder-
sen, 1997; Qiu et al, 2011).
The local approach proceeds in a top-down fash-
ion, which firstly picks the most relevant categories
of the top level and then recursively making the
choice among the low-level categories(Sun and Lim,
2001; Liu et al, 2005).
The global approach builds only one classifier to
discriminate all categories in a hierarchy(Cai and
Hofmann, 2004; Rousu et al, 2006; Miao and Qiu,
2009; Qiu et al, 2009). The essential idea of global
approach is that the close classes have some com-
mon underlying factors. Especially, the descendan-
t classes can share the characteristics of the ances-
tor classes, which is similar with multi-task learn-
ing(Caruana, 1997; Xue et al, 2007).
Because the global hierarchical categorization can
avoid the drawbacks about those high-level irrecov-
erable error, it is more popular in the machine learn-
ing domain.
However, the taxonomy is defined artificially and
is usually very difficult to organize for large scale
taxonomy. The subclasses of the same parent class
may be dissimilar and can be grouped in differen-
t concepts, so it bring great challenge to hierarchi-
598
Sports
Football
Basketball
Swimming
Surfing
Sports
Water
Football
Basketball
Swimming
Surfing
Ball
(a) (b)
College
High 
School
College
High 
SchoolAcade
my
Figure 1: Example of latent nodes in taxonomy
cal classification. For example, the ?Sports? node
in a taxonomy have six subclasses (Fig. 1a), but
these subclass can be grouped into three unobserv-
able concepts (Fig. 1b). These concepts can show
the underlying factors more clearly.
In this paper, we claim that each class may have
several latent concepts and its subclasses share in-
formation with these different concepts respectively.
Then we propose a variant Passive-Aggressive (PA)
algorithm to maximizes the margins between latent
paths.
The rest of the paper is organized as follows. Sec-
tion 2 describes the basic model of hierarchical clas-
sification. Then we propose our algorithm in section
3. Section 4 gives experimental analysis. Section 5
concludes the paper.
2 Hierarchical Text Classification
In text classification, the documents are often rep-
resented with vector space model (VSM) (Salton et
al., 1975). Following (Cai and Hofmann, 2007),
we incorporate the hierarchical information in fea-
ture representation. The basic idea is that the notion
of class attributes will allow generalization to take
place across (similar) categories and not just across
training examples belonging to the same category.
Assuming that the categories is ? =
[?1, ? ? ? , ?m], where m is the number of the
categories, which are organized in hierarchical
structure, such as tree or DAG.
Give a sample x with its class path in the taxono-
my y, we define the feature is
?(x,y) = ?(y)? x, (1)
where ?(y) = (?1(y), ? ? ? , ?m(y))T ? Rm and ?
is the Kronecker product.
We can define
?i(y) =
{
ti if ?i ? y
0 otherwise , (2)
where ti >= 0 is the attribute value for node v. In
the simplest case, ti can be set to a constant, like 1.
Thus, we can classify x with a score function,
y? = argmax
y
F (w,?(x,y)), (3)
where w is the parameter of F (?).
3 Hierarchical Text Classification with
Latent Concepts
In this section, we first extent the Passive-
Aggressive (PA) algorithm to the hierarchical clas-
sification (HPA), then we modify it to incorporate
latent concepts (LHPA).
3.1 Hierarchical Passive-Aggressive Algorithm
The PA algorithm is an online learning algorithm,
which aims to find the new weight vectorwt+1 to be
the solution to the following constrained optimiza-
tion problem in round t.
wt+1 = arg min
w?Rn
1
2
||w ?wt||2 + C?
s.t. ?(w; (xt, yt)) <= ? and ? >= 0. (4)
where ?(w; (xt, yt)) is the hinge-loss function and ?
is slack variable.
Since the hierarchical text classification is loss-
sensitive based on the hierarchical structure. We
need discriminate the misclassification from ?near-
ly correct? to ?clearly incorrect?. Here we use tree
induced error ?(y,y?), which is the shortest path
connecting the nodes yleaf and y?leaf . yleaf repre-
sents the leaf node in path y.
Given a example (x,y), we look for the w to
maximize the separation margin ?(w; (x,y)) be-
tween the score of the correct path y and the closest
error path y?.
?(w; (x,y)) = wT?(x,y)?wT?(x, y?), (5)
599
where y? = argmaxz ?=y wT?(x, z) and ? is a fea-
ture function.
Unlike the standard PA algorithm, which achieve
a margin of at least 1 as often as possible, we wish
the margin is related to tree induced error ?(y, y?).
This loss is defined by the following function,
?(w; (x,y)) =
{
0, ?(w; (x,y)) > ?(y, y?)
?(y, y?)? ?(w; (x,y)), otherwise (6)
We abbreviate ?(w; (x,y)) to ?. If ? = 0 then wt
itself satisfies the constraint in Eq. (4) and is clearly
the optimal solution. We therefore concentrate on
the case where ? > 0.
First, we define the Lagrangian of the optimiza-
tion problem in Eq. (4) to be,
L(w, ?, ?, ?) = 1
2
||w?wt||2+C?+?(???)???
s.t. ?, ? >= 0. (7)
where ?, ? is a Lagrange multiplier.
We set the gradient of Eq. (7) respect to ? to zero.
? + ? = C. (8)
The gradient of w should be zero.
w ?wt ? ?(?(x,y)? ?(x, y?)) = 0 (9)
Then we get,
w = wt + ?(?(x,y)? ?(x, y?)). (10)
Substitute Eq. (8) and Eq. (10) to objective func-
tion Eq. (7), we get
L(?) = ?1
2
?2||?(x,y)? ?(x, y?)||2
+ ?wt(?(x,y)? ?(x, y?)))? ??(y, y?) (11)
Differentiate Eq. (11 with ?, and set it to zero, we
get
?? = ?(y, y?)?wt(?(x,y)? ?(x, y?)))
||?(x,y)? ?(x, y?)||2 (12)
From ? + ? = C, we know that ? < C, so
?? = min(C, ?(y, y?)?wt(?(x,y)? ?(x, y?)))
||?(x,y)? ?(x, y?)||2
).
(13)
3.2 Hierarchical Passive-Aggressive Algorithm
with Latent Concepts
For the hierarchical taxonomy ? = (?1, ? ? ? , ?c),
we define that each class ?i has a set H?i =
h1?i , ? ? ? , h
m
?i with m latent concepts, which are un-
observable.
Given a label path y, it has a set of several latent
paths Hy. For a latent path z ? Hy, a function
Proj(z) .= y is the projection from a latent path z
to its corresponding path y.
Then we can define the predict latent path h? and
the most correct latent path h?:
h? = arg max
proj(z)?=y
wT?(x, z), (14)
h? = arg max
proj(z)=y
wT?(x, z). (15)
Similar to the above analysis of HPA, we re-define
the margin
?(w; (x,y) = wT?(x,h?)? wT?(x, h?), (16)
then we get the optimal update step
??L = min(C,
?(wt; (x,y))
||?(x,h?)? ?(x, h?)||2
). (17)
Finally, we get update strategy,
w = wt + ??L(?(x,h?)? ?(x, h?)). (18)
Our hierarchical passive-aggressive algorithm
with latent concepts (LHPA) is shown in Algorith-
m 1. In this paper, we use two latent concepts for
each class.
4 Experiment
4.1 Datasets
We evaluate our proposed algorithm on two datasets
with hierarchical category structure.
WIPO-alpha dataset The dataset1 consisted of the
1372 training and 358 testing document com-
prising the D section of the hierarchy. The
number of nodes in the hierarchy was 188, with
maximum depth 3. The dataset was processed
into bag-of-words representation with TF?IDF
1World Intellectual Property Organization, http://www.
wipo.int/classifications/en
600
input : training data set: (xn,yn), n = 1, ? ? ? , N ,
and parameters: C,K
output: w
Initialize: cw? 0,;
for k = 0 ? ? ?K ? 1 do
w0 ? 0 ;
for t = 0 ? ? ?T ? 1 do
get (xt,yt) from data set;
predict h?,h?;
calculate ?(w; (x,y)) and?(yt, y?t);
if ?(w; (x,y)) ? ?(yt, y?t) then
calculate ??L by Eq. (17);
update wt+1 by Eq. (18). ;
end
end
cw = cw +wT ;
end
w = cw/K ;
Algorithm 1:Hierarchical PA algorithmwith la-
tent concepts
weighting. No word stemming or stop-word
removal was performed. This dataset is used
in (Rousu et al, 2006).
LSHTC dataset The dataset2 has been constructed
by crawling web pages that are found in the
Open Directory Project (ODP) and translating
them into feature vectors (content vectors) and
splitting the set of Web pages into a training,
a validation and a test set, per ODP category.
Here, we use the dry-run dataset(task 1).
4.2 Performance Measurement
Macro Precision, Macro Recall and Macro F1 are
the most widely used performance measurements
for text classification problems nowadays. The
macro strategy computes macro precision and re-
call scores by averaging the precision/recall of each
category, which is preferred because the categories
are usually unbalanced and give more challenges to
classifiers. The Macro F1 score is computed using
the standard formula applied to the macro-level pre-
cision and recall scores.
MacroF1 = P ?R
P +R
, (19)
2Large Scale Hierarchical Text classification Pascal Chal-
lenge, http://lshtc.iit.demokritos.gr
Table 1: Results on WIPO-alpha Dataset.?-? means that
the result is not available in the author?s paper.
Accuracy F1 Precision Recall TIE
PA 49.16 40.71 43.27 38.44 2.06
HPA 50.84 40.26 43.23 37.67 1.92
LHPA 51.96 41.84 45.56 38.69 1.87
HSVM 23.8 - - - -
HM3 35.0 - - - -
Table 2: Results on LSHTC dry-run Dataset
Accuracy F1 Precision Recall TIE
PA 47.36 44.63 52.64 38.73 3.68
HPA 46.88 43.78 51.26 38.2 3.73
LHPA 48.39 46.26 53.82 40.56 3.43
where P is the Macro Precision and R is the Macro
Recall. We also use tree induced error (TIE) in the
experiments.
4.3 Results
We implement three algorithms3: PA(Flat PA), H-
PA(Hierarchical PA) and LHPA(Hierarchical PA
with latent concepts). The results are shown in Table
1 and 2. For WIPO-alpha dataset, we also compared
LHPA with two algorithms used in (Rousu et al,
2006): HSVM and HM3.
We can see that LHPA has better performances
than the other methods. From Table 2, we can see
that it is not always useful to incorporate the hierar-
chical information. Though the subclasses can share
information with their parent class, the shared infor-
mation may be different for each subclass. So we
should decompose the underlying factors into dif-
ferent latent concepts.
5 Conclusion
In this paper, we propose a variant Passive-
Aggressive algorithm for hierarchical text classifi-
cation with latent concepts. In the future, we will
investigate our method in the larger and more noisy
data.
Acknowledgments
This work was (partially) funded by NSFC (No.
61003091 and No. 61073069), 973 Program (No.
3Source codes are available in FudanNLP toolkit, http:
//code.google.com/p/fudannlp/
601
2010CB327906) and Shanghai Committee of Sci-
ence and Technology(No. 10511500703).
References
L. Cai and T. Hofmann. 2004. Hierarchical document
categorization with support vector machines. In Pro-
ceedings of CIKM.
L. Cai and T. Hofmann. 2007. Exploiting known tax-
onomies in learning overlapping concepts. In Pro-
ceedings of International Joint Conferences on Arti-
ficial Intelligence.
R. Caruana. 1997. Multi-task learning. Machine Learn-
ing, 28(1):41?75.
D. Koller and M Sahami. 1997. Hierarchically classify-
ing documents using very few words. In Proceedings
of the International Conference on Machine Learning
(ICML).
T.Y. Liu, Y. Yang, H. Wan, H.J. Zeng, Z. Chen, and W.Y.
Ma. 2005. Support vector machines classification
with a very large-scale taxonomy. ACM SIGKDD Ex-
plorations Newsletter, 7(1):43.
Youdong Miao and Xipeng Qiu. 2009. Hierarchical
centroid-based classifier for large scale text classifica-
tion. In Large Scale Hierarchical Text classification
(LSHTC) Pascal Challenge.
Xipeng Qiu, Wenjun Gao, and Xuanjing Huang. 2009.
Hierarchical multi-class text categorization with glob-
al margin maximization. In Proceedings of the ACL-
IJCNLP 2009 Conference, pages 165?168, Suntec,
Singapore, August. Association for Computational
Linguistics.
Xipeng Qiu, Jinlong Zhou, and Xuanjing Huang. 2011.
An effective feature selection method for text catego-
rization. In Proceedings of the 15th Pacific-Asia Con-
ference on Knowledge Discovery and Data Mining.
Juho Rousu, Craig Saunders, Sandor Szedmak, and John
Shawe-Taylor. 2006. Kernel-based learning of hierar-
chical multilabel classification models. In Journal of
Machine Learning Research.
G. Salton, A. Wong, and CS Yang. 1975. A vector space
model for automatic indexing. Communications of the
ACM, 18(11):613?620.
F. Sebastiani. 2002. Machine learning in automated text
categorization. ACM computing surveys, 34(1):1?47.
A. Sun and E.-P Lim. 2001. Hierarchical text classi-
fication and evaluation. In Proceedings of the IEEE
International Conference on Data Mining.
A. Weigend, E. Wiener, and J Pedersen. 1999. Exploit-
ing hierarchy in text categorization. In Information
Retrieval.
Y. Xue, X. Liao, L. Carin, and B. Krishnapuram. 2007.
Multi-task learning for classification with dirichlet
process priors. The Journal of Machine Learning Re-
search, 8:63.
Y. Yang and X. Liu. 1999. A re-examination of text
categorization methods. In Proc. of SIGIR. ACMPress
New York, NY, USA.
Y. Yang and J.O. Pedersen. 1997. A comparative study
on feature selection in text categorization. In Proc. of
Int. Conf. on Mach. Learn. (ICML), volume 97.
602
