Constraint-based Morpho-phonology 
Michael Mastroianni 
Philosophy Department 
Carnegie Mellon University 
Pittsburgh, PA 15213 
mm~icl, cmu. edu 
Bob Carpenter  
Ph i losophy Depar tment  
Carnegie Mel lon Univers i ty  
P i t t sburgh,  PA 15213 
carp?icl, cmu. edu 
I n t roduct ion  
In this paper, we develop a new generative paradigm 
with which to capture phonological generalizations. 
Our framework differs from standard generative frame- 
works inasmuch as we eschew all derivational analy- 
ses. Thus, we dispense with procedural transforma- 
tions of underlying and intermediate representations 
into surface forms by means of the cyclic application 
of relatively unconstrained context-sensitive rewriting 
rules, lnstead, we adopt a strictly monostratal ap- 
proach, wherein a single level of articulatory representa- 
tion is subject o linguistic onstraints expressed eclar- 
atively using well-understood logical tools. 
In order for our enterprise to succeed, we will re- 
quire a rich representational system. To this end, we 
follow the lead of autosegmental and metrical phonol- 
ogy, taking our representations to be organized around 
natural groupings of articulators. A further similarity 
to autosegmental analyses and some traditional gener- 
ative analyses is that we allow underspecification in our 
lexical rcpresentationsl But in contrast o these other 
theories, we adopt a single, concrete, surface-based rep- 
resentational system, rather than abstract underlying 
and intermediate representations of uncertain status. 
In particular, our approach is strictly monotonic, disal- 
lowing stages of analysis in which ill-formed representa- 
tions are constructed and repaired. Instead, the linguis- 
tic constraints we impose, both universal and parochial, 
combined with possibly underspecified lexical represen- 
tat.ions, conspire to fully determine surface representa- 
tions. The result is a fully declarative system, albeit one 
which can be provided with a procedural interpretation 
in which lexicai (syntactic and semantic) representa- 
tk)ns are incrementally refined into surface representa- 
tions, or vice-versa, by the application of constraints, 
citlmr sc~q,cntially or in parallel. 
Wc haw" chosen to employ feature structures for our 
phonological rel)rcsentations, a natural candidate for 
cu,straiut-based linguistic theories. Feature structures 
provide two mechanisms for constructing linguistic rep- 
resentations. The first is a multiple inheritance hierar- 
chy of types, which allows the multi-dimensional classi- 
fication of structures. The second mechanism is that of 
fi~atures, whose values are themselves modeled by fea- 
t .re structures. 
Universal and parochial constraints, including lexi- 
cal representations, are expressed using attribute-value 
logic. Expressions in our attribute-value logics are in- 
terpreted as restrictions on admissible linguistic struc- 
tures. Being comprised of a representational system of 
feature structures ubject to a collection of attribute- 
wdue constraints, our grammars are interpreted in a 
co-inductive, constraint-based fashion. More specifi- 
cally, the admissible linguistic structures are modeled 
by those feature structures atisfying all of the con- 
straints. This contrasts with traditional, inductive or 
rule-based generative accounts, in which well-formed 
representations are constructed from a primitive set of 
well-formed base cases by applying derivational rules. 
Unlike many approaches to phonology, ours includes 
a careful consideration ofthe morphology-phonology in- 
t~,rface. It should be clear how our phonological the- 
ory can be integrated with a constraint-based theory 
of morphology, and thus to constraint-based theories of 
syntax and semantics. The result is a seamless theory 
of language relating phonology and semantics, mediated 
by morphology and syntax. One benefit of constructing 
such a unified theory is that constraint resolution algo- 
rithms can integrate constraints from diverse linguistic 
sources on-line during processing, as the speech signal is 
being received. An architecture supporting integrated 
processing is clearly desirable given the overwhelming 
psycholinguistic evidence concerning human processing. 
It is important to point out that our theory, being based 
on logical constraints over monostratal representations, 
can easily integrate diverse sources of constraints simply 
1)y means of conjunction. The constraints themselves 
can be highly modular, both across components such 
as syntax all(.\[ semantics, and within components such 
as phonology. By the same tok(m, it is sl, raighl.lbrward 
to integrate .niversal and i)arochial constraints, and 
any level of constraints in between, such as those found 
i.  particular language families. Furthermore, subregu- 
larities within a language, which often stem from sep- 
arate, possibly historically unrelated sources, can also 
be captured, without the resource to default mecha- 
13 
nisms. A further desirable feature of our monostratal  
constraint-based approach is its declarative, relational 
nature, which allows the same linguistic constraints to 
be applied symmetr ical ly  to both generation alld un- 
derstanding. 
In what follows, we provide specifications of the most 
important universal constraints involved in syllable and 
metrical structure, with part icular constraints for En- 
glish syllabification, Malak-Malak and Yup'ik stress as- 
signment, and Icelandic umlauting. For reasons of 
space, we are not able to include the full signatures 
(declarations of types) for these grammars, nor will we 
give all of the constraints necessary to define such a 
grammar.  Readers interested in complete, implemented 
grammars, including all of the signature entries and 
collstraiuts, should consult (Mastroianni 1993). 
Feature  S t ructures  and  Const ra in ts  
For linguistic representations, we adopt the feature 
structure formalism of (Carpenter 1992), which was 
modeled on the notion of feature structure employed 
in tiPS(3 (Pol lard and Sag 1994). Feature structures are 
built out of two components, types and features. A 
specification of the behavior of types and their corre- 
sponding features is known as a signature. 
A signature is built  out of a finite set Type of 
types. We interpret types as sets of objects. To 
use a non-linguistic example, Nat might be the type 
of natural  numbers, which is interpreted as the set 
{0, 1 . . . .  , n, . . .}. The types form a multiple inheritance 
hierarchy under a subtyping part ia l  ordering E .  If the 
type o" is a subtype of a type v, then every object of 
type a i s  of type r.  We write a _E r i f the  type v i s  
a subtype of o', and also say that cr is a supertypc of v. 
For instance, consonants, represented by the type cons 
are subtypes of segments, represented by the type seg, 
so we write sea D_ cons. Furthermore the type glide of 
glides is a subtype of cons, so cons E glide. Thus by 
the transit ivity of part ial  orderings, glide is a subtype 
of type sea, so seg D_ glide. As an alternative xample, 
we have a type bool of boolean values, with the truth 
values + and - as subtypes, so bool E + and bool E -. 
\[f a ~ r, we also say that r is more specific than o-, or 
that cr is more general than r. More specific typ(~s pro- 
vide more information about an object. Using a type 
hierarchy allows us to both factor constraints on differ- 
ent classes of representations and to state them at the 
appropriate l vel of generalization. 
A type p is known as a unifier of the types o" and r 
if it is a subtype of both of them, so that a _E p and 
r E_ p, in which case cr and r are said to be unifiable. 
For instance, the types for approximants and conso- 
nants, approx and cons, are unifiable, as they have a 
common subtype glide. A pair of types is unifiable if 
the information they contain is consistent. Thus the 
types + and - are not unifiable, as it is impossible for 
an object to be of both types. Similarly, the types 
nasal and obslruen! have no unifiers, as there are no 
segments which can be assigned to both types. One 
way to view unification is as a type-theoretic analogue 
of conjunction. For instance, glide has all of the infor- 
mation contained in the conjunction of approz and cons, 
plus perhaps some more. A pair tr and r of unifiable 
types must have a most general unifier, cr tA r, such that 
0" _E o" IA r,  r E_ a I.J r and for every unitier p of tr and 
r, o" IA v E P. For instance, cons-approz, the type of 
consonant approximants, is the most general unifier of 
cons and approx. As another example, we use non-low 
as the type of non-low heights, and non-high for the 
type of non-high heights, and so we have the medium 
height, reed = non-high IA non-low, as their unification. 
We further define a most general or universal type, _k, 
with the property that,  for any type r ill our ordering, 
.l. E r. 
To construct feature structures, we also need a fi- 
nite set Feat of features. The remaining component 
of a signature relates the features to the types by 
means of appropriateness conditions. These deter- 
mine the features which can and must occur on each 
type, as well as constraining the types of their val- 
ues. This is the sense in which we are dealing with 
a typed system, rather than simply a sorted one. 
An appropriateness assignment is a part ial  function 
Approp: Feat x Type ~ Type. A structure of type a 
is required to have a value for the feature f if and only 
if Approp(ff, a) is defined, and in addit ion, the value 
must be at least as specific as Approp(f, tr). For in- 
stance, we have Approp(LABIAL, place) ---- bool, which 
states that the feature LABIAL, representing whether 
there is closure of the vocal tract at the lips, must re- 
ceive a boolean value in a feature structure representing 
the place of articulation. To take another example, we 
have Approp(NUCLEUS, syllable) = vowel, l which states 
that the value of a syllable's nucleus feature must be 
a vowel. In addition, Approp(MELODY, vowel) is unde- 
fined, which indicates that vowels do not receive melody 
values. 
We require the appropriateimss assignment .o re- 
spect the inheritance hierarchy according to standard 
object-oriented principles. In particular, subtypes in- 
herit the features and value restrictions of all of their 
supertypes, which can be arranged in a mult iple inher- 
itance hierarchy. In such a system, we require that if 
a E r and Approp(f, a) is defined, then Approp(f, r)  
is defined and Approp(f,u) C Approp(f,r). For in- 
stance, sonorants inherit the melody feature from con- 
sonants, and heavy-open-syllables inherit the nucleus 
feature from syllables, but further constrain it to be a 
1For simplicity, we ignore the case of languages which 
allow non-vowels to be the nuclei of syllables. We could 
generalize, for instance, by assuming 
Approp(NUCLEUS, syllable) = approximant.nasal 
to account for the more general case, or we could refine 
our hierarchy to include a new supertype of vowels whose 
subtypes include liquids and nasals, say vocalic-nasaL 
14 
vowel 
? place 
AN'rmtmrt:\[ boot\] 
? ~OILONAI,:\[ bool\] [ dorsal SACK :\[ boot\] I,t,ACl,:: DOItSAi,: nlOu:\[bool\] 
Low:\[ bool\] 
I,ABIAL:\[ boot\] 
TENSE:\[ boot\] 
STRESS:stress-vat 
TONE:tone-list 
Figure 1: Most General Structure of Type vowel 
heavy nucleus. 2
Feature structures are defined relative to a signature. 
A feature structure is taken to be a finite, rooted and 
directed graph, in which nodes are labeled with types 
and arcs with ffi~atures. Feature structures are typi- 
ca.lly displayed as attril)ute-value matrices, where the 
I)ra.('keting indicates the nodes, and features indicate 
the arcs. Feature structures must satisfy the appropri- 
ateness conditions, so that a node of type o" such that 
Approp(f, rr) is delined must be connected by an arc la- 
Iwh,d f to a node of type r such that Approp(f, cr) E r. 
A feature st.ructurc meeting this condition is said to be 
totally u,Hl-typcd. 'l'he most general feature structure of 
type vowel respecting the appropriateness conditions is 
given in l,'igure I. This structure represents the feature 
geometry common to all vowels. 
In addition to conditions of well-typedness, we re- 
(luirc every feature structure representing a grammat- 
ical linguistic structure to be fully resolved in the fol- 
lowing way. Every type must be a maximally specific 
one, in the sense of not having any further subtypes. 
For instance, occurrences of the type bool must be re- 
solved to either + or -, and occurrences of type cons to 
either an obstruent, glottal-pharyngeal, nasal, liquid or 
glide. This amounts to a closed world interpretation of 
our type hierarchies, wherein every type can be equated 
logically with the disjunction of its subtypes (see (Car- 
I)enl,er 19!)2)). For instance, this equates ouorant with 
1.1,' di~iun('tion of the types glottal-pharyngeal, nasal 
and approx, so that ew~ry sol|oraut rrlltst t)c either glot- 
tal, nasal or al)l)roximanl.. Anot.her example involves 
Iwight, where the subtypes of height, high, reed and 
~ln addition, our hierarchies respect Carpenter's (1992) 
introduction condition, which requires the set of features 
for which a feature f is appropriate to have a most general 
type. This constraint is motivated computationally, in that 
it forces the type inference algorithm to produce a unique 
most general result. But this constraint can be easily relaxed 
(King and GStz 1993) or reconstructed from a hierarchy 
which does not meet it (Carpenter and Pollard 1992). 
low, exhaust he possibilities. 'l'h(~ closed worhl asSmnl)- 
tion is iml)licit ill every approach to generative grammar 
with which we are familiar. Simply sl.al,e(I, it says l.hal. 
I.he only I,ossilfilities a.re I,he Ol,.S Sl,,cilied as su,'h by 
I.Im Kl'alllll|ltr. III SylllJt? I'~Jl' ill,l.allC,', ;I li:d, ,,1" I,hr;l~,' 
sl.ructurc schen,es is typically Lakeli Lo b~: cxhallstive; 
if a string can not be analyzed according to the rule 
schemes given, the theory classifies it as ungramnmti- 
cal. 
Constraints will be of the following form. 
(1) ~ 
\[\[ere, ? is an arbitrary description, which is taken to 
constrain the possibilities for objects of type o'. We 
take constraints on a type to be inherited by all of their 
subtypes. In general, we allow descriptions to specify 
types of objects, to specify the values of features by 
further descriptions, to impose equality and inequality 
constraints on objects. In addition, descriptions are 
taken to be closed under the logical operations of con- 
junction and disjunction, and the string operations of 
concatenation and Kleene-star. Finally, we allow rela- 
tional and functional constraints by means of definite 
clauses. The string operations generalize the not;ion or 
c,,nsl, rainl, found in (Carpenter 1992) along lines sug- 
gested by l~eape (1991); such operations were coded by 
functional and relational constraints by Bird and Klein 
(1993) and by Mastroianni (1993). 
We will follow (Mastroianni 1993) in our treatment 
of syllable structure and the arrangement of features 
in segments. This work is closely relal,ed I.o thai. pre- 
seuted in (Scobbie 1992), (Bird 1992), (Bird and Klein 
1993), and (Russell 1993). One major difference be- 
tween our work and that of both Bird and Scobbie is 
that we have given analyses of vowel harmony. Scobbie, 
because of his adjacency meta-constraint, is unable to 
do this, and Bird gives no account of such processes, ei- 
ther. In addition, we give an account of syllabification 
and stress, neither of which were attempted by Bird or 
Scobbie. Our work shares with Russell's a concern for 
the role of morphology both in triggering phonological 
operations and in interfacing with other components of 
grammar. Most of the analyses in these frameworks are 
compatible with our approach; we believe they are best 
viewed as instances of the same paradigm of monos- 
tratal, constraint-based morpho-phonology. 
We will assume that the type 7rot has subtypes which 
a.re arranged as in Figure 2. We follow (Carl)enter 1992) 
in our tr\['atment of types and inheritanc(,. Thus, all 
of the subtypes of root have a PI,ACE ~(~atllre, alld a.II 
consonanl subtypes have a MEIA)DY feature. The rep- 
r~;sentation f a generic consonant is similar to the vowel 
illustrated in Figure 1, but without stress or tone fea- 
tures, and with an additional manner feature, with all 
of its appropriate features. 
We shall assume that we have syllables, which have 
rhymes, and optionally have onsets. Rhymes contain 
nuclei, and sometimes codas, as well. The signature for 
syllables is as follows. The rhyme subtypes mentioned 
15 
l i t / F ide  vowel 
STRESS :,stress 
g l o l _ p ~ N E : t o n e  
obMrucn l  c_.~onoran l approx iman l  
M I g~ 
root 
PLACE:place 
Figure 2: Segmental Signature 
hvy-ons-syl hvy-bare-syl lgt-ons-syl Igt-bare-syl 
hvy-syl ons-syl lgt-syl 
R.ItYME: ONSET:onset  bare-sy l  RHYME : IffI-rh 
hvy-rh V cls-rh 
syllable 
RHYME: rhyme 
Figure 3: Syllable Signature 
above are defined as in Figure 4. We define the signa- 
ture ?'ntries for nucleus,onset, and coda in Figure 5. In 
addition, we constrain onsets, nuclei and codas to be 
sequences of segments. 
In our characterization of the maximal onset princi- 
ple, we make crucial use of a sonority hierarchy. This 
is defined in terms of our type definitions as follows. 
(2) a. consonant ~ vowel 
b. obstruent ~ sonorant 
c. glot_phar ~ nasal 
d. nasal ~ sonor_approx 
~. liquid -.< glide 
W(" read I.lmse ('onstraints as stating, tbr instance, that 
consonants are less sonorous than vowels, liquids are 
I,.ss sonorous than glides, and so on. This interl)reta- 
tion provides a linear ordering of the tnaxirnally Sl)ecific 
segmental subtypes of consonants according to their rel- 
alive sonority: 
(3) obstruent -< glottal_pharyngeal -.<nasal -.< liquid -< 
glide --< vowel 
Wc employ this ord(,ring of segmental types by so.or i ty  
iu our apl)roach I.o syllal)itication, enabling us l.,, cap- 
t.lli.I, ih(, rising and falling sonority of Ollsets ilild ('od~ls. 
open-hvy-rhy 
Nuc:dipthong cls-hvy-rhy open-lgt-rhy cls-lgt-rhy 
hvy-rhy opc;t-rhy clos?d-rhymc Igl-rhymc 
(:() I ) A : t'oda N I I (' : vo ~v? l
rhyme 
NUCLEUS :nucleus 
Figure 4: Rhyme Signature 
smpl-nucl dipthong bas-onset s-onset 
nucleus coda onset 
.1_ 
Figure 5: Onset, Nucleus and C, oda Signatures 
Syllabification 
The PHON value of a word will have two features, 
dealing with syllabif ication/stress, and morphology, re- 
spectively. We will be concerned in this section only 
with the phonological feature, which will he filled by 
a phon-word. We show the feature structure for tile 
phon.word for the English word kisses below in Fig- 
ure 6. 
Note that a simple-phon has the features ROOTS, 
VOWELS, and  SYLLS, which must be of types root +, 
vowel +, and syllable +, respectively. 3 The type 
phon.word will be divided into subtypes simple-phon 
and complez-phon. A complex phon-word will have 
an appendix. This appendix will appeal" appended to 
a sequence of syllables. Thus, the SYI,I,S value of a 
complex-phon will be of type syllable+oapp?ndix. '1 'lqw 
appendix will allow the presence of some eot|sonant 
3For any type a, a* is the type of s(~(illCll('f,s Of objects 
of type a, attd a + is the type of non-emtpy sequences of 
objects of type a, and ? is the type of the empty sequence. 
We also allow these operations on descriptions, giving us the 
full expressive power of regular expressions, imilar to the 
feature structure and automata-b,~ed approa,ches developed 
in (Bird 1992) and (Bird and Ellison 1992). 
4We use ? as a concateneation operator. Thus, ? ? ~, 
describes a string consisting of the concatenation of strings 
described by qt aml ?. 
16 
"simple-phon 
ROOTS:\[ .  \] 
vowzLs: ( f f \ ] , \ [ \ ] ) \ ]  
? heavy-onset-syllable 
ROOTS :\[\[~\] ( \[~\], \[~\], \[~\] ) \] 
< vowzLs:\[?\] 
SYLLS: ONSET:lIE k\] 
\[ closed-light-rhyme\] 
RHYME: /NUCI'EUS:\[\[~\] I \ \[ 
Loo'^:\[\[\]s\] J 
"heavy-bare -sy l lab le  
ROOTS:l\[ ( \[\],13\] )
VOWELS:\[IE\] 
"closed-light-rhyme" 
ILHYME: NUOLEUS:\[\[~\] I \
CODA:\[\[ \]  Z\] 
> 
I,'igure 6: Phonological structure of kisses 
cluster which wouht otherwise violate the sonority con- 
st,ra, int. 
The sonority constraint is captured as follows. An 
onset is allowable just in case the segments it contains 
are arranged in increasing sonority, and no phonotactic 
constraints are violated. Phonotactic onstraints are 
defined separately for each language. Some languages 
allow exceptional onsets. We handle this by defining 
exceptional onset types for each language. In English, 
we have exceptional onsets formed from, e.g., s, k, r. 
The sonority condition on codas is the reverse; i.e., the 
sonority must. decrease (in general, sonority decreases 
with dista.ncc from the nucleus). An appendix can be 
fi)rmed, ~u~ in cats, when wc \]lave a consonant cluster 
containing two equally sonorous egments at the end of 
a word. For a Ibrmalization of the constraints on codas 
aml onsets, see (Mastroianni 1993). 
We will use the sonority ifierarchy again in the com- 
bination of syllabh,s. It is a well-attested generalization 
that languages teud to put as much material as possi- 
ble into the onsets of syllables, rather than codas (the 
mm:imal onset principle). This principle can be ex- 
pressed in our systcm by constraining the SYLLS values 
of words. We allow two syllables to combine only if the 
last segment(s) of the first could not be combined into 
a legal onset in the second syllable. This is used in our 
constraint on simple-phon, given below. 
(4) 
simple-phon 
1tOOTS : \ [ \ ]  root + ? \ [ \ ]  root + A 
vowEI,s : \ [ \ ]  vowel + ? \[\] ,,owet + a 
sVl,l,S : (\[~\] (syllable A 
0ROOTS VOWELS :
 (syllable')) ^  
consistent(\[g\]~ ~)  ^ 
,,,ap(\[\], 
We define tire eMinite clause consistent(?,?) as fol- 
lows. 
(5) consistent(syllable, e) 
consistent(\[~\]( syllable A ROOTS :(root* ? E\]rool) , 
\[(syllable A 
ROOTS : (\[~root ? root*) ? 
Dyllable')) 
((\[\] -< V gap(\[\], [\])) ^  
us-compatible(\[El, \[~D A 
consistent(\[~\], \[~\]) 
According to this definition, a single syllable is 
consistent. Recursively, a syllable followed by a se- 
quence of syllables is consistent if the last root in the 
ROOTS value of the first syllable cannot be combined 
into a valid onset with the first root in the ROOTS 
value of the following syllable, and the second syllable is 
consistent with whatever follows. A given pair of roots 
may not be combined into an onset if the second is less 
sonorous than the first. These definitions merely ex- 
press the maximal onset principle, modulo phonotactic 
constraints and certain allowable exceptions. We han- 
dle phonotactic onstraints with the gap/2 predicate, 
where gap(x, y) expresses that x is not allowed before y 
in an onset. For instance, the sequence tl is an allowable 
onset with respect o sonority, but English disallows it. 
This can be seen in the word atlas, which syllabifies 
as at-las rather than a-tlas. To capture this English- 
specific, phonotactic onstraint, we take gap(t, l) to be 
a clause of gap/2 in English. Exceptional, yet alow- 
able onsets can be handled by adding exceptional sub- 
types. For instance, borrowings that allow tlin an onset 
nmst be protected from being subject to the English gap 
constraint, s 
The definite clause maple,  ?, X) provides the linking 
relation between our autosegmental tiers, where ? rep- 
resents th,; vowel tier, '? the roots tier and X the struc- 
ture which combines t.hem. G The mapping constraint on 
phonology values ensures that the end of the ItOOTS and 
5In general, if there is a set S of forms subject to normal 
constraints and a class 7" subject o exceptional constraints, 
we can create types for these classes which are subtypes of 
a.nother class. Then constraints on the classes are iudepen- 
dent, and constraints they both obey can be expressed on 
their supertype. 
6The redundancy here could be eliminated, with unique 
17 
VOWEI,S values of the simple-phon correspond to those 
of the syllables which constitute the SYLLS valw'. The 
rccursive clauses for map/3  are as follows follows. 
(6) \]nap(z, ~, ~) 
map(\[\]vowel + , \[~\]root + , 
syllable A (VOWELS : \ [ \ ]A  ROOTS :El))  
,,,ap(?vowet o ~owei  +, 
Drool ? Drool+, 
\[\]syllable ? EJsyllable + ) ) 
map(\[ \ ] ,  [ \] ,  ~ A map(\[ \ ] ,  [ \] ,  
We now turn to our constraint defining coraplex-phon. 
It is a well-known empirical fact that many languages 
allow consonant clusters at the end of words which 
could not appear tautosyl labical ly anywhere lse (typ- 
ically because this would violate the sonority condi- 
tion on codas, i.e., that the sonority must fall as dis- 
tan('e from the nucleus increases). In English, this phe- 
nomenon is exemplified by many words ending in the 
r~gular plural and past-tense, such a.s cats, dogs, and 
washed, which are realized as karts, dawgz, and wagl, 
r(q)cctively. In each of these examples, the alveolar stop 
or sibilant which ends the word is of the same sonority 
as the preceding consonant. The standard treatment 
of such words in autosegmental phonology is to allow 
some kind of appendix to appear at the end of words. 
In our analysis, a phon-word bearing an appendix would 
be of the type complex-phon. By definition, such a word 
has a SYLLS value which consists of some (non-empty) 
sequence of syllables followed by an appendix. Such a 
structure will be allowable modulo certain constraints. 
These can be defined as follows. 
(7) complex-phon 
ROOTS : \ [ \ ]  root + . IT\]root ? \[~\]appendix A 
VOWELS : \ [ \ ]VOWel  + A 
SYLLS : (EJsyllable . \[~syllable* ? El) A 
consistent(\[\] ,  \[~\]) A 
map( \ [ \ ] , \ [ \ ] , \ [ \ ] ?  \ [ \ ] )  A 
co,nl)atil)le(\[~\], \[~\]) A 
-,Cl)enth(\[\], \ [ \ ] )  
The consistency and mapping checks are as before. 
The compatible(X,Y) clause ensures that the voicing 
assimilation mentioned above occurs (two segments are 
compatible just in case their VOICE values unify). Two 
objects satisfy the epenth(X,Y) clause just in case they 
are both alveolar stops or both sibilants (at least, for 
English). 
Metrical Phonology 
Malak -Ma lak  
Ih'call that the type vowel is defined as having a fea- 
ture STm,;SS. Following (Mastroianni 1993), we will 
o(curences of each segment on a single tier. But for (:ompu- 
l.;d.ion;d puri)oses, il. is ea.~icst to construct all the relevant 
si, rt i( 'tttr(~s on-line rath(:r t, ha.n computing tlmm within par- 
I.i,'u la.r ('(~vlsl.railil.s. 
suppose that each syllable has a mtcleus containing a 
vowel. 7 The basic stress pattern of Ma.lak-Malak is 
built from left-headed binary fcet, with primary stress 
falling on the first stressed syllal)le ((~ohlsmith 1990: 
p.174). Words are, in general, "right-to-h~ft", meauing 
that degenerate f et normally appear at the begimfing 
of the word. s There is one exception to this i)a.ttcrn, 
which is that three-syllabh~ words tyl)ically have stress 
on the first and third syllables.gWe provide examl)les of 
Malak-Malak stress patterns in Figure ??, adapted I'rom 
(Goldsmith 1990: pp. 174-175). For case of reading, 
2 .0  1 0 .1..o. 1 0 
nung-ku-~un-tu-wo-ro-wak-ka 
"You (pl.) would have given them meat" (8 syllables) 
0 2 0 1 0 1- 0 
wu-wun- tu -nu-nu-wak-na  
"IIe would have given you (sg.) meal" (7 syllabics) 
2 0 1 0 1 0 
n6n-kS-r6-n6-yun-ka 
"You will lie down" (6 syllables) 
o .?  9 t . o  
a~-k l-n \]-yang-k a 
"We are all going to stand" (5 syllables) 
2 0 .1  ~0 
mu-nan-ka-ra 
"beautiful" (4 syllables) 
2 0 
wu-ru 
"arm, rivulet" 
O. 2 0 
mel-pa-pu 
'~ather" (emphatic) 
2. 0 1 
m?i-pa-pu 
'~ather 
Figure 7: Malak-Malak Da,ta 
we have inserted hyphens between syllables. Ill keeping 
with our stress features, we have marked vowels bear- 
ing pr imary stress with a "2", those bearing secondary 
stress with a "1", and those which are unstressed with 
a tt0" ? 
In Goldsmith's ystem, the first syllable of a word 
rA nucleus could also have a pair of vowels or a vowel- 
diphthong pair. A vowel-diphthong pair will still only have 
one STRESS value. We can ensure by constraint that any two 
vowels which appears ill a nucleus in a language with long 
vowels have token-identical STRESS va, h les .  
SAs our system is purely declarativ(,, In our system, pro- 
cedural notions uch as "right-to-hfft" and "h,ft-to-right" arc 
exppressed declaratively, being characterized ~L~ degenerate- 
first and degenerate-last respectively. 
9The emphatic forms of thrce-sylIM)lc words follow the 
usual pattern, with an unstressed lirst and se(:ond syllabic, 
and stress on the third. 
18 
with a,t t,~l(I lululber ~,1' syllal)les is "extra-nmtri('al". 
In ()tiler words, su(:h syllables are ~msigned to I~et, but 
these feet are deleted afterwards, as a result of a "stress 
clash" repair mechanism. However, there is no reason 
why we should assume that initial degenerate feet a/- 
ways assign stress. If we make this assumption, we have 
gained "uniformity," in some vague sense, at the ex- 
pense of procedural complication. 
We eschew procedural analyses of the data. The em- 
pirical fact is that there are two cases in Malak-Malak. 
The exceptional case occurs only in the non-emphatic 
form of words with exactly three syllables. If we were 
really dealing with a "stress clash" phenomenon here, 
we would expect this exceptional case to be the case 
for all words with odd numbers of syllables. Since this 
does not hal)l)en , we are perfectly justified in allowing 
a gouera.I word, aunl ;tit exceptional word, with no ref- 
i'r?'tl('e 1,o "un iversa l "  pIi01tOtliona. We t i lus  def ine two 
l.ylms of phon-'word for Malak-Malak, normal-word, for 
I.Im general ease, and cxcep-word, for the excel)tional 
ca.~t'. 
In order to make our constraints as general as pos- 
sible, we will define several subtypes of foot. At the 
l,op level, there will be degenerate-foot and complex-foot. 
We will define two subtypes of degenerate-foot, and sev- 
eral subtypes of complex-foot. The type degenerate-foot 
will have subtypes degen-stressed and decca-unstressed. 
The type complex-foot will have subtypes lh-foot and 
rh-foot. The type lh-foot will itself have two subtypes, 
lh-primary and lh-secondary. 
These types must be constrained with respect o their 
S'HtUSS in order to be useflfl. A degen-unstrcssed foot 
must contain exactly one syllable bearing a nucleus 
consisting of a vowel with a STRESS value of 0, and a 
doyen-stressed foot must have a NUCLEUS with a STRESS 
value of 2. A rh-foot must contain two syllables, the sec- 
ond of which beat's fidl stress. A lh-foot must contain 
two syllables, the lirst of which is stressed. A lh-primary 
lbot bears primary stress, while a Ih-secondary foot 
bears secondary stress. 
()tar constraints on the types normal-word and 
cxcep-word are ms follows. 
(8) a. normal-word::, 
I"EET: (degen-unst rcssed  V c)* 
lh-primary . lh.sccondary + 
I). rxccp-word ~ FEET: degen-slressed . rh-foot 
'l'ho constraint defining normal-word states that the 
FEI,.YI" value of such a word must be either 
1. A degenerate foot containing an unstressed syllable, 
followed by a sequence of left-headed feet, the first 
of which has a stressed syllable with STRESS value 2, 
and all the rest of wifich have stressed syllables with 
STRESS value 1. 
2. A sequence of left-headed feet as above, with no de- 
generate foot at the beginning. 
With these constraints in place, a word must either be 
of type normal-word or excep-word. In the first case, a 
u,~rmal.word cant (:onsist of a lel'l,-In(~adod I',.)t, i,,a.n'iJng 
l)U'imary stress followed by a sequence of one or rnoro. 
left-headed feet bearing secondary stress, with, Ol:)tion- 
ally, an unstressed egenerate foot at the very begin- 
ning. In the second case, a word may consist of a sin- 
gle unstressed syllable followed by a right-headed foot. 
This gives us exactly the attested patterns. 
Cent ra l  S iber ian  Yup ' ik  
(Goldsmith 1990) gives us some data fi'om Central 
Siberian Yup'ik, which is taken from (Krauss 1985). 
We reproduce this data below. Stressed vowels are 
marked with a "1", and unstressed vowels are marked 
with "0". 1? 
1 0 1 0 1 0 
a. aang-qagh-l lagh-l lang-yug-tug 
"he wants to make a big ball" 
0 1 . 0 0 11 
b. ang- yagh- I lagh- l lang-yug- t  ug  
"he wants to make a big boat" 
0 l o 
c. qa-ya-ni 
'"his own kayak" 
0 1 0 
d. qa-yaa-nl 
"in his (another's) kayak" 
0 1 i 0 
e. sa-gu-yaa~m 
"in his (another's) drum" 
o i .o . i  9 
f. qa-y~plg-ka,-m 
"his own future authentic kayak" 
0 1 0 ~ 0 
g. qa-y?-pig-kda-ni 
"in his (another's)future authentic kayak" 
0 1 0 
h. a-te-pik 
"real name" 
0 1 . . .0 .0  i. ang-yagh-l la-ka 
"my big boat" 
0 1 . . .0 .  0 
j. ang-yagh-l la-kaa 
"it is his big boat" 
Figure 8: Yup'ik Data 
In Yup'ik, final syllables bear no stress. Heavy syl- 
lables are stressed, except when they appear word- 
finally. The standard foot is right headed; a word 
with no heavy syllables has all r ight-headed feet, and 
a word with a heavy syllable has right-headed feet to 
the left of that syllable, with alternating stress after 
that. Note that "heavy-syllable" must be defined here 
as a syllable containing a long vowel. 11 We define a 
X?For simplicity, we will not be distinguishing between 
primary and secondary stress here, though see our earlier 
discussion of Malak-Malak for indications of how such dis- 
tinctions can be treated in general. 
~lThis is an example of a "parameter" in our theory. In 
19 
,ou-fin- non-fin- fin-hvy- fin-lfl- 
hvy-dgn Ig/-:lgT~ "dgn ' dgn 
b / /weak-complex  
non-fin-degen fin-degen SVbLS:lgt-syll* syll rh-foot 
SYLLS:syllable final-foot SYLLS:s!lllable 2 . 
foot 
SYLLS :syllable* 
STRESS:syllable 
Figure 9: Metrical Foot Signature (Yup'ik) 
sul>l.yl)e heavy-syllable of syllable, which must h~ve a 
heavy-rhyme as its R.IIYME value. A heavy-rhyme will 
I)o ;~ rhyme which Ilas a long vowel as its nucleus. The 
heaviness of a rhyme will be independent of th~ pres- 
ence of a coda. Thus, we will have open-heavy-rhyme 
and closed-heavy-rhyme as further subtypes, with and 
without codas, respectively (for present purposes, we 
will abstract away fi'om a definition of the type coda). 
In the standard metrical t reatment presented in 
(Goldsmith 1990), the final syllable is marked as be- 
ing "e?trarnetrical" before foot construction proceeds. 
We will directly mimic this, without, however, using 
ordered procedures. Instead, we require that the final 
sylla.hle I)(~ unstressed and contained in a degenerate 
fo,~t. This gives us the same results as the standard 
;i.na.lysis, I )ut  a.ltows us to keel) our I,'EE'r values of type 
foot +. In order to do this elegantly, we will split our 
l.ype de.qenerale-foot into two subtypes, final-foot and 
non-final-degen. The only other type of fool in Yup'ik 
is the iambic foot, rh-foot. We give the signature ntry 
tk~r the Yup'ik foot in Figure 9)  2'la 
We now turn to stress azsignment in Yup'ik. The ba- 
sic pattern is that  all complex feet are iambic, and all 
non-final heavy syllables are stressed. Thus, any heavy 
syllables which would not form the second element of 
an lamb are put into stressed egenerate f et. Degener- 
ate feet consisting of light syllables only appear at the 
the signatures for some languages, we will want to define 
cl,,.,cdsyllables as being heavy, while in others we will want 
those syllables with long nuclei, whether open or closed, to 
be considered he~Lvy. 
12Note that, for any type ~r, we take a n to be the type of 
a sequence of n objects of type ~r. 
~3We have chosen to define all complex feet in Yup'ik to 
I)e binary by defining an appropriateness constraint in the 
signature that the SYLLS value be of type syllabl~. Alter- 
nativ('ly, we could have creat(:d a universal type signature, 
all.wing arl)il.rarily long f('t't, and iml~oscd a constr~fint re- 
:dricl.ing, YUl)'ik I'oel. I.o I~c I,in~l.ry. I",il.hcr way, w~ alh,w I.he 
hl l l~l ry /n i ln - l , inary di.~l.itlci.l.n I,~ I,l' s i lnl) ly llara.nll' l.vriz('d. 
; '0 
penult imate syllables of words. Tilts can I)~, forma.lizcd 
as follows. 
(9) a. rh-foot 
STRESSEI) : ILIIYME : NUCI,I,iIiS : STILI,;SS : \[ 
b. final-foot 
STILESSED : ILHYME : NUCIA,;US : S'I'RI,;SS : 0 
c. non-fin-heavy 
STRESSED : RHYME : NUCLEUS : STILESS : 1 
Now we need to detine const,raints on the construction 
of words from feet. This is done with ore' constraint, as 
follows. 
(10) phon-word 
FEET : ( rh-foot V non-fin-heavy*) ,final-foot 
This constraint says that we must have an unstressed 
degenerate foot, as the final foot. The penult imate foot 
may be either a rh-foot or a non-final degenerate foot. 
Finally, any preceding feet, must consist exelusiwqy of 
rh-foot and non-fin-heavy feet. 
These definitions cornbine to give us a granutl;tr in 
which well-formed words must end in ;ul Ullstressed 
syllable (by the definition of final-foot). All syllables 
not contained in the final-fool of a word must be con- 
tained in an iambic foot, or be a stressed syllable con- 
tained in its own degenerate foot (by the definition of 
allowable, the constraint on phon-word, and th(' def- 
initions of rh-foot and non-fin-heavy). This gives us 
exactly the data presented above. 
Morphology: Icelandic Umlauting 
We now briefly turn our attention to morphology. As we 
mentioned above, the phon value of a word will Imw' two 
features, one for syllabification and stress, I'IIONOl,O(|Y, 
and another, MORP|IOLOGY, for morl>hoh)gical informa.- 
lion. So far, we haw; only discussed the I>IIONOI,OGY 
values. We will define a type morph, which will include 
affixes, infixes, stems, and words. All objects of type 
raorph will have, minimally, the features ItOOTS, and 
SYNSEM, filled by objects of types root + a.nd synsem, re- 
spectively. We will divide the type word into simple and 
complex subtypes. As an example of a MORPHOLOGY 
value, we give the feature structure for the word .fishes 
in Figure 10J 4 
For Icelandic, which exhibits vowel-harmony (um- 
lauting), we will add a feature VOWELS, a feature HARM, 
and a feature WORD. These features will take values of 
types vowel +, harm, and bool, respectively. The addi- 
tion of these features conforms fairly well to standard 
practice in autosegmental phonology, with the VOWELS 
feature corresponding to the vowel tier. The feature 
HARM indicates whether vowel harmony is present, and 
the feature WORD indicates whether the object in ques- 
tion is a full-fledged word (rather than, say, a partial ly- 
inflected word). With these preliminaries, we can con- 
tinue with our analysis of Icelandic umlauting, which 
we treat ~ a cnse of vowel harmony. 
14 W~, arc asslling an IlPSG-like synl.ax and s~nlanti(:~. 
SYNSEM: 
eolnple~:- word 
ItOOTS:\[ (f, l, .'~, I z) \] 
? syn.scm 
I n \[ agr SYNCAT: AGR:/NUM:\[P l\] L PErtS :\[ third\] 
I "sem "1 
SEM: I OPERATOrt:\[pI'oP\] I 
I OPERAND:\[/ sh\] J 
SUBCAT:\[,\]  
l,'igure 10: MOItI'tlOLOGY vahle for fishes 
Vowel harmony is gem;rally taken to be. a i)roccss 
in which the vowels off (typically) a stem assimilate to 
some feature of some vowel(s) of (typically) an affix. 
In general, all of the vowels assimilate, or all of the 
vowels which do not precede some blocking element (if 
the harmony is with the vowels in a suffix). In the 
literature, umlauting and vowel reduction in Icelandic 
are not typically referred to as vowel harmony. How- 
ever it is clear that, in fact, these processes do match 
the standard definition of vowel harmony. The process 
works ~ follows. Suppose we have a noun whose final 
syllable has a as its nucleus in the nominative singu- 
lar. One.such word is fatnadh (suit). When realized 
with the tin.live-plural Suffix, -urn, there is a vowel har- 
ninny elfiwt. The \[imd a, and any other as in the word 
whicln a.n. not s,,i)aratcd \['rOlll I, hat  a I)y some syllal)le 
uncle-us which is lit)l, all a, is realized as u, if it is not 
stressed, and J if it is stressed (in general, the first sylla- 
ble is stressed). Under a derivational analysis, we have 
a vowel harmony effect in which an underlying a assim- 
ilates to a surface u when appropriately situated in a 
string of surface as, unless it is the first vowel in the 
stem, in which case, it partially assimilates, to 5. Thus 
the combination of underlying fatnadh with -urn, the 
results in the surface form fb'tnudhum. There exists a 
class of nouns (mostly borrowings) which systematically 
differ from this paradigm. In this class of exceptions, 
the harmony process stops at some point, even though 
it would continue filrther under the standard paradigm 
(typically, only the final a assimilates). In such cases, 
the I~otltmost a which assimilates is realized as 6. One 
example of such a word is akarn, which is realized as 
akgrnum in the dative-pluralJ 5 
Icelandic exhibil.s the ffllrther property that this har- 
mony process can sometimes occur without a u being 
present. This can be exemplified by the declension 
15In the following, all of the examples of such exceptions 
will be of this sort, for the simple reason that we are unaware 
of any ca.ses in which the.assimilation stops further forward 
in the word. Our analysis will be able to accommodate 
either case with no Mtera, tions, so this is not a problem. 
paradigm for barn (child) given below. As we can sec 
Table 1: 
s ingu lar  
nominative barn 
accusative barn 
dative barni 
genitive barns 
plura l  
nominative b6rn 
accusative b6rn 
dative b6rnum 
genitive barna 
Declension i)aradignl for barn 
from Table 1, there are cases when the harmonic form 
of a stem is used as an inflected form of the word. We 
can handle this neatly in our formalism, as we shall 
show below. 
We will need to divide the type harm into subtypes 
bool, nil, trigger, plus-nil, and minus-nil. Plus-nil sub- 
sumes + and nil, while minus-nil subsumes - and nil. 
We will define several new subtypes of agr, in order 
to account for the nominative and accusative cases 
shown in Table 1 above? The type agr must have 
a new feature CASE, with values of type case. The 
type case has subtypes nora-ace-case and gen-dat-case. 
Nora-ace-case has subtypes nominative and accusative, 
while gen-dat-case Ill.us subtypes genitive and dative. Wc 
will (leline two new itnme(liatc sul)tyl)cS of agr, gen-dal, 
and nom.acc. As t.he names imply, ob?iects ol7 type 
gen-dat must have case  values of type gen-dat-case, 
while objects of type nora-ace must have CASE values 
of type nora-ace-case. Nom-acc and gen-dat each have 
plural and singular subtypes? In order to illustrate how 
we use these new features and types, the lexical con- 
straint for the word fatnadh is given in Figure 11. The 
VOWELS: \[\](\[\]vowel, \[\]voweO ^ 
ROOTS: (f,~\], t,n,\[~, dh) A 
WORD:\[4_-\]bool A 
HARMONY: \[~\]bool A 
SYNSEM: (SEM: suit A 
SYNCAT: (n A 
AGR: \[\]nom-acc A 
SUBCAT: ~)) A 
harmonize(O, (a, a), D A 
allowable(O, 5\], D 
Figure 11: Lexical constraint for fatnadh 
21 
definite clause definitions for the goals harmonize(C, ?) 
and allow;Lble(?, ?) are given below. 
(11) allowable(+, minus-nil, nom-acc-sing). 
a.llowablc( +, plus-nil, nom-acc-pl). 
allowable(-, harm, gcn-dat). 
harmonize(-, \[~?, E\])- 
h armonize(nil, \[~\]?, El). 
harmonize(+, ? ?) 
harmonize2(?, ).  
ha rmonize2(\[i\]vowel + ? a, ~vowel + ? u) 
harmonize2(\[~\], \[~\]). 
harmonize2(a, 5). 
harmonize2(~(? * n-a-vowel), El). 
As in HPSG, we treat the lexicon as a disjunction of 
the descriptions of its members. As shown by Pollard 
aml Sag (1987), this allows a great deal of redundancy 
in h~xical descriptions to be factored into constraints at 
suitable levels of generality using multiple inheritance. 
For instance, the harmony constraints given above will 
not need to be expressed on a word-by-word basis. 
The goals allowable(C, ?, X) and harmonize(C, ?, X) 
in the lexical constraint ensure the following: 
(12) allowable(?, ?, X) 
l. nominative-singular words must have either 
- or nil as their HARM values. 
2. nominative-plural  words must have either + 
or nil as their HARM values. 
3. all nominative words have + as their WORD 
value. 
4. all genitive and dative stems have - as their 
WORD value, and may have any HARM value. 
harmoniz('(?, ,  X) 
1. if a word has a hARM value of nil or -, its 
VOWELS value harmonizes with itself. 
2. if a word has a HARM value of +, and its 
VOWELS value is a singleton list containing 
a, then it harmonizes with a singleton list 
containing 5. 
3. recursively, if a word has a HARM value of +, 
and its VOWELS value is a list headed by a, 
then it harmonizes with a list headed by u 
only if the two list's tails harmonize. 
4. a list of vowels headed by some other vowel 
than a or u harmonizes with itself. 
It should be noted that n-a-vowel subsumes all of the 
vowels except a and u. Thus, the line referring to 
it causes the harmony process to terminate whenever 
some other vowel than a or u occurs. The lexica\[ con- 
straint states that we can have molTh which is a nom- 
inative singular third person noun with semantics uit 
iff we have HOOTS: (f, oq, t, n, o~2, dh), and VOWELS 
(~1, c~2). Furthermore, the value of the HARMONY fea- 
ture, (a, a), and (cq, or2) must harmonize. As we can see 
fi'om Figure 14, if the HARMONY value is either - or nil, 
then (a l ,  or2) must actually be (a,a). If tim IIAR.MONY 
value is +, then (?Yt,c~2) must be (il,u). All nmmbers 
of the sequence of vowels excel)t tim lirst must bc u, 
while the first nmst be 6. The WORD fl,al.urc exists 
primari ly to prevent, e.g., fglnudh I)y itself from be- 
ing recognized as a word. We could change our signa- 
ture again, so that objects of type word had + as their 
WORD value. However, this is not really necessary. The 
WORD feature will come up again in the constraints on 
suffix and complex-word. As the reader can check, the 
constraint above gives us fatnadh, with WORD value +, 
HARMONY value -, and AGR value nom-acc-sing, and 
fb'tnudh, with WOaD value -, HARMONY value + and 
AGR value nom-acc-sing. 
As the reader may have noticed, we handled the gen- 
eral harmony case by specifying that the entire value 
of the VOWELS feature harmonize with some sequence 
of as. To handle the special cases, such as akarv, w(, 
merely need to specify that the l~st (qenlent of the 
VOWELS feature harmonize with a singleton list. con- 
taining an a. To handle cases where some other as 
harmonize further forward in the word, we wouhl only 
need to force some final segment of the VOWELS va.hw to 
harmonize with some list of as. As an example, we give 
the lexical constraint for the word akarn in Figure 12. 
It should be noted that,  in this scheme, words which do 
VOWZLS: ff\](\[\]vowel,5\]voweO ^ 
ROOTS: @, k,\[\], r, n) ^ 
WORD: \['4\]bool A 
HARMONY: \[~bool) ^  
SYNSEM: (SEM: acorn A 
SYNCAT: ( n ^ 
AGR:\[~\]7~oln-acc A 
susc^' r :  ~) ^ 
harmonize(E\], (a), (\[~\])) A 
aUowable(\[E, ~, ~) 
Figure 12: Lexical constraint for akarn 
not have an a as their final vowel (i.e., as the head of 
their vOWELS value) must have nil as their HARMONY 
value. 
The constraints defining suffixes will be very similar 
to those defining words, ttere, all suffixes with a first 
vowel u must have trigger as their HARMONY values (the 
rest have nil). The constraint defining the dative-plural 
affix -urn is given in Figure 13. The way in which tile 
FIRST, SYNCAT, SUBCAT, etc., are passed to a COml)lex- 
word are exactly as in the English case (Mastroianni 
1993). Here, the only differences are with respect to 
the WORD and HARMONY vahles. 16 
We now turn our attention to the task of delining 
constraints on complex-word. For this, we add two new 
16All affixes are defined in the signature to have - as their 
WORD value; strictly speaking, this makes the reference to 
WORD:- in Figure 13 redundant. However, it does make the 
constraint to follow more readable. 
22 
VOWELS: (Xlu) A 
~mOTS: (\[\], E\]") A 
WORD:- A 
IIARMONY: trigger A 
SYNSEM: (SEM: (OPERATOR: dative-op A 
OPEItAND: sere) A 
SYNCA'r: (It A 
AGR: (NUM: pl;A 
PEas: third A 
CASE: dative) A 
SUBCAT: (HD: (SYNSEM: 
SYNCAT: 
(n A 
AGR: horn-ace)) A 
TL: e-list))) 
Figure 13: (',onstraint on tim dative-plural suffix -urn 
fi'a.tures, STEM and MOD, with values of type word and 
allix, respectively. The constraint on combining stems 
and sui\[ixcs is given in Figure 14. The definite clause 
c,,mpatil)h'(?, ) is defined as follows. 
(13) COmlm.tihle( trigger, +) 
compatihh.'(trigger, nil)
corn pati hie(nil, minus) 
compatible(nil, nil) 
The constraint in Figure 14 allows the dative affix to 
combine with fb'tnudh and akgrn, but not fatnadh or 
akarn, which is the d'esired result. Furthermore, the 
dative affix can combine with any word which has a 
I\[ARMONY value of nil. Thus, it can combine with any 
word which has a final vowel other than a. 
These deIiuitions allow us to deal with vowel harmony 
without resorting to some undefined non-local process. 
In this way, we have improved significantly on the pre- 
sentation in (Scohhie 1991). We have also done this in 
a i)urcly mouostratal theory, without recourse to rule 
ordcri,gs, extrinsic or otherwise. 
Conc lus ion  
The phonological theory which we have outlined has 
several mlvantages, I)oth theoretical and practical, over 
the standard autosegmeutal theories. 
1. Our theory is properly formalized (see (Bird and 
I,add 1991) for an explanation of the formal short- 
comings of autoscgmental phonology). 
2. Because we have kept the features geometry em- 
ployed in our segmental and metrical representations 
closely tied to observable acoustic phenomena, our 
theory can be given a semantics in terms of gestural 
scores (we follow (Scohhie 1991) in this). 
3. With our monostratal, declarative architecture, we 
('an do hoth generation and analysis using the same 
gralnulars. 
,I. Our uniform coustraint-based architecture allows us 
to: 
complex-word2 
(VOWELS:\[Trowel + * ~vower  A 
ROOTS:\[~Jro0t + ? \[4Z\]rool+ A
HARMONY: harm A 
WORD: q- A 
SYNSEM: (SEM: (OPERATOR: \[~\]operator A 
OPERAND:~sem) A 
SYNCA'I': \[~syncat A
SUBCAT: \[8_-\]subcat-list) A 
STEM: (word A 
VOWELS:E\] A 
ROOTS: \[~\] A 
SVNSEM:E\](SEM:~ ^
SUBCAT: \[~\]) /N 
HARMONY: L_Tj ) A 
MOD: (SUJfiZ A 
VOWELS:E\] A 
ROOTS:E\] A 
SYNSEM: (SEM: (OPERATOR:\[~\] A 
OPERAND: E\])) A 
SYNCAT: \ [ \ ]  A 
SUBCAT:( HD:E\] A 
TL:\[@ ) ^ 
HARMONY: \[~harm) A 
corn l'atih le(\[~\], lED. 
Figure 14: Constraint on combining stems with sitJfiz~3s 
(a) employ the same grammars for both generation 
and analysis; and 
(b) naturally interleave the processing of phonological, 
morphological, syntactic, semantic and pragmatic 
information. 
It might be claimed that our approach is in some way 
too unconstrained. But the generality of the constraint- 
based representational system should not be confused 
with the restrictions on the linguistic theory. Our ap- 
proach to phonology is quite restrictive in that all of the 
techniques we have used merely represent he empMcal 
generalizations in an intuitive manner. This should be 
contrasted, for example, with derivational theories in 
which simple constraints uch ms the sonority contour 
and the maximal onset principle are indirectly captured 
through ordered context-sensitive r writing schemata. 
But, as with most work on linguistics, we have not 
spelled out the precise boundaries between the univer- 
sal and the language specific. 
Re ferences  
S. Bird. 1990. Constraint-based l~honology. Ph.D. tim- 
sis, University of Edinburgh, Edinburgh. 
S. 13ird. 1992. Finite-state phonology in HPSG. In I'ro- 
ceedings of COLING. Nantes, France. 
23 
S. Bird and P. Blackburn. 1991. A logical approach to 
Arabic Phonology. In Proceedings of the 5th Meeting 
of the European A CL. Berlin. 
S. Bird and '\['. M. Ellison. 1992. One Level Phonol- 
ogy: Aul.os~wncntal I~.~q~resenta.tions and Rules as 
I"il,il, c-Stat~, Automata,. ll.~'search Paper I'\]UC,(~S/II,1 ~- 
51. Cm,tr~' for (Zognitive Scienc~, Univeristy of Edin- 
Imrf4h. 
S. Bird and E. Klein. 1993. Enriching HPSG phonol- 
ogy. Technical Report EUCCS/RP-56, Centre for 
Cognitive Science, University of Edinburgh. 
S. Bird and R. Ladd. 1991. Presenting autosegmental 
phonology. Journal of Linguistics, 27(1). 
B. Carpenter. 1992. The Logic of typed feature struc- 
lures. Cambridge University Press, Cambridge. 
G.N. Clements. 1990. The role of the sonority cycle in 
core syllabification. In J. Kingston and M. Beckman, 
editors, Papers in Laboratory Phonology 1. Cam- 
bridge University Press, Cambridge. 
J. Goldsmith. 1990. Autosegmental nd Metrical 
Phonology. Basil Blackwell, Oxford. 
T. ('5tz and P. King. 1993. Eliminating the Feature In- 
troduction Condition by Modifying Type Inference. 
Ms., Seminar fiir Sprachwissenschaft, Eberhard- 
Karls Universit~it, Tuebingen. 
M. M~stroi~mni. 1993. Attribute Logic Phonology. 
Technical Report CMU-LCL-93-4, Laboratory for 
Computational Linguistics, Carnegie Mellon Univer- 
sity. 
(',. Pollard and I. Sag. 1987. Information-Based Syntax 
and Semantics: Volume I, Fundamentals, Volume 13 
of CSLI Lecture Notes. Center for the Study of Lan- 
guage and Information, Stanford. 
C. Pollard and I. Sag. 1994. Head-Driven Phrase b'truc- 
ture Grammar. University of Chicago Press, Chicago. 
M. Reape. 1989. A logical treatment of semi-free word 
order and bounded discontinuous constituency. In 
Proceedings of the 4th Meeting of the European A CL. 
Manchester. 
M. l~.eape. 1991. An introduction to the semantics 
of nnification-based grammar formalisms. DYANA 
I)eliverable R3.2.A, Esprit Basic Research Action 
BR,3175. Centre for Cognitive Science, Edinburgh. 
K. Russell. 1993. A Constraint-based Approach to 
Phonology and Morphology. PhD Dissertation, Lin- 
guistics Department, University of Southern Califor- 
nia. Los Angeles. 
.I. Scold~ie. 19!11. Attribute Value Phonology. Ph.D. 
thesis, University of I';dinburgh. 
24 
