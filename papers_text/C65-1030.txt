30 
1965 Internat ional  Conference on Computat ional  L inguist ics 
SYNTAXE ET INTERPRETATION 
B. Vauquois,  G. Vei l lon, J. Veyrunes 
C. E. T .A .  B.P. 8 St Mart in d'H~res - Is~re - 
/s-"f~'!~ 
J .  Veyrmles - I 
I N T R 0 D U C T I O N 
. . . . . . . . . . . . . . . . . . . . .  
Dans un syst&me de traduction automatique fond4 sur une succes- 
sion de mod~les(o~ chacun d'eux repr~sente un niveau de la langue source 
ou de la langue cible) il faut ~tablir leur enchainement. Dans la phase 
d'analyse (relative ~ la langue source) les liaisons d'enchainement sont 
dites "dirig6es de bas en haut" car les modules successifs correspondent 
des niveaux de hi4rarchie de plus en plus 61ev~s dans la langue ; au 
contraire, dans la phase de synth~se (relative ~ la langue cible) les liai- 
sons sont dirig4es de haut en bas. 
L'analyse d'un texte de la langue source L consiste ~ trouver 
dans le module de niveau le plus 61ev~, appel6 mod@le M3, une formule ou 
une suite de formules dont la representation dans Lest  le texte donn~. Si 
route formule de M 3 a pour representation dans L au moins uoe phrasede L 
on dira que l'analyse se fait phrase ~ phrase. Toutes les phrases de L qui 
sont les diverses repr6sentations d'une m~me formule de M 3 sont dites 
"~quivalentes" par rapport au module. Toute phrase de L qui est une repre- 
sentation commune ~ deux formules ou plus de M 3 est dite "ambigUe" dans le 
modgle. On admettra que le mod61e M 3 possgde aussi une repr4sentation dans 
la langue cible choisie L', sans se soucier de savoir si M 3 poss&de encore 
d'autres representations dans des langues L", L"', etc... Dans ces condi- 
tions, ~ toute phrase non ambigUe de L on peut faire correspondre une 
phrase de L'. Appelons degr6 d'ambiguit~ d'une phrase de L par rapport au 
J. Veyru\[~es 2 - 
mod&le, le nombre de formules distinctes qui ont cette phrase pour repr~- 
sent~ation dans L. A route phrase de degr~ d'ambiguit~ n dans L correspond 
alors au plus n phrases dans L'. La traduction ne pourra comporter qu'une 
seule phrase dans L' si les representations des n formules de M 3 darts L' 
ont une intersection non vide. 
Le schema du syst~me de traduction automatique envisag~ est alors le 
suivant : 
1:3., 
'D 
0 
0 
4- rD 
t::J 
I 
-I- ro ~ 
0 0 rt 
fo ~n 0 
rt 1~ 
0 ~ H. 
;:Y r-'r 
0 c~ 
0 
0"0 
? 
o3 
C~ 
~ o ~ 
~- i-t 
r't 0.~ 
n 
r~ 
o 
o 
0 
I-I- 
0~ 
N 
f~ 
0~ 
o ~-~ 
i ~ . 
m 
r-t 
0 
rjl 
"0 
f~ 
</ 
b-a 
~ "4 
r't 
0 
ct 
~. ', 
C\] 
0 
I,O 
C~ 
0 
(n 
V 
r-t 
q~ 
~o 
o~ 
o~ 
(D 
(~ 
C~ 
r-t 
< 
(h 
cn 
O~ 
(D 
(o 
\ 
(D, 
/ 
/ 
J0 Veyrunes 4 - 
Ainsi les modules M 1 et M 2 contiennent deux parties : 
a) La pattie formelle qui r~soud le probl~me de d~cision : 
"la chaTne propos~e ~ l'entr~e appartient elle au langa- 
ge artiFiciel de ce module ? Dans l'afFirmative il s'a- 
git de trouver toutes les structures associ~es ~ la chai- 
he.  
b) L' interpr~tation quJ doit assurer la liaison avec les 
modules de niveau sup~rieur. 
Dans sa partie "synth~se", ce schema correspond ~ quelques va- 
rJantes pris au module d'automate linguistique propos~ par S. LAMB. 
L'exemple le plus simple est celui du module morphologique M I : 
le probl~me de d~cision attachd ~ la partie ~ormelle est l'acception ou le 
refus d'une chalne de morphemes comme ~orme d'un mot de la langue. L'in- 
terpr~tation syntaxique d'une chaine accept~e consiste ~ la transformer en 
dl~ments du vocabulaire terminal du module syntaxique #catdgorie syntaxi- 
que, valeurs de variables grammaticales, r~gles interdites)0 L'interpr~- 
ration s~m~mique de cette m~me chalne consiste ~ donner sa signification 
soit sous forme d'~quivalents dans la langue cible soit sous forme d'uni- 
t~s s~mantiques dans un langage pivot. 
L'~tude du module syntaxique M 2 est beaucoup plus compliqu~e. 
La partie formelle de ce module consiste ~galement ~ r~soudre un probl~me 
de d~cision. Etant donn~e une chalne de syntagmes ~l~mentaires fournis par 
l' interpr~tation du module morphologique, il s'agit d'accepter ou de 
,I. Veyrunes - 5 - 
refuser cette chaine en tant que phrase syntaxiquement correcte dans la 
langue source. En r~alit~, A une chaSne de mots unique dans la langue 
source l' interpr~tation morphologique fait correspondre en g~n6ral une 
famille de chaines de syntagmes ~l~mentaires ~ cause des homographies 
syntaxiques. Ainsi, ~ moins d'explorer successivement toutes les chalnes 
de la famille, la r~solution pratique dolt les prendre en charge simul- 
tan~ment. 
En outre, ~tant donn6 que m~me une phrase constitute de mots non 
syntaxiquement ambigus peut admettre dans la langue naturelle plusieurs 
constructions syntaxiques, le mod@le doit rendre compte de cette multi- 
plicit~ de structures, lorsqu'elle existe, sur chaque chaine de syntagmes 
correspondant ~ cette phrase. 
Ainsi, la partie formelle du module syntaxique consiste ~ refu- 
ser les chaSnes de syntagmes qui ne correspondent A aucune phrase et A 
~ournir pour les chalnes accept~es toutes les structures admissibles. 
Le choix du type logique de mod61e, le formalisme d'6criture 
de la grammaire ainsi que l'algorithme d'exploitation de cette grammaire 
font l'objet de la premiere partie de cette communication. 
La deuxi~me partie s'attache ~ montrer la transformation qu'il 
faut faire subir aux structures fournies par la partie formelle du module, 
pour qu'elles soient acceptables en tant qu' "entr~es" du mod&le M 3. Pour 
justifier le bien-fond~ de ces contraintes, on indiquera enfin quelques 
~l~ments de M 3 en troisi~me partie. 
J. Veyrunes - 7 
L'adaptation d'un tel formalisme g l'analyse syntaxique d'une 
langue naturelle conduit ~ un tr~s grand nombre d'~l~ments terminaux et 
non terminaux. On a donc ~t~ amen~ g utiliser un formalisme ~quivalent 
conduisant ~ une grammaire de dimension acceptable \[i~?~ 
On ~crit : 
(5) N ? R~gle - a HVVa ~-~-  A ffVVA - SAT 
(6) N ? R~gle B //VVB i C ~ VVC VIV 
LE VOCABULAIRE TERMINAL du modgle syntaxique est constitud par 3 
sortes d'~l~ments : 
I - Des categories syntaxiques not~es a, b, c, ... dans les r~gles de 
type (5). 
Exemples : Substantif commun 
Adjectif qualificatif 
Conjonction de coordination. 
2 - Des valeurs de variables grammaticales not~es VVa, VVb, ... dans 
les r~gles de type (6). 
On associe en effet ~ chaque cat~gorie syntaxique K 
p variables grammaticales VKi I ~ i~ p, chaque variable ~Ki 
pouvant prendre n .-(VKi ) valeurs - onutilise le produit de 
valeurs de variables grammaticales, chacune appartenant g une 
variable diff~rente 
J. Veyrunes - 8 - 
Exemples : "Nominatif  singulier inanim~" ; " Indicati f  present 
premiere personne" etc... 
3 - Des num~ros de rggles interdites: Les r~gles de type (5) et 
(6) sont rep~r~es par un numdro de r~gles : N ? rggle : 
On d~sire interdire au r~sultat de l 'appl icat ion d'une 
r~gle de grammaire de figurer dans une ou plusieurs autres r~gles. 
On dit que ces r~gles sont satur~es. Cette liste de rggles, ~ven- 
tuel lement vide figure dans les r~gles de type (5) et (6) sous 
la rubrique SAT. 
II LE VOCABULAIRE NON-TERMINAL est ~galement constitu~ par 3 ~l~ments : 
I - Des categories non-terminales not~es A, B, C ... 
L'une d'entre elles est dist inguee des autres et carac- 
t~rise l 'obtent ion d'une structure de phrase. 
Exemple : Groupe nominal g~n~ral,  verbe g~n~ral, ... 
2 - Des variables grammaticales associ~es, cette fois, aux categories 
non-terminales.  
J. Veyrunes - 9 
3 - Des num~ros de r~$1es interdites, comme pr~c~demment. 
Les r~gles de construction peuvent, en effet, aussi bien 
que les r~gles lexicales, saturer des listes de r~gles. 
Les principaux ~l~ments constitutifs des r~gles de ty- 
pe (5) et (6) ont ~t~ d~finis comme constituants du vocabulaire 
terminal et du vocabulaire non terminal. 
VIV signifie Valeurs Identiques de Variables. C'est une 
condition permettant de valider une r~gle de type (6) seulement 
si Bet  C ont en commun certaines valeurs d'une ou plusieurs va- 
riables donn~es. 
Exemple : 12 - B H I C //- CAS ~- - -  
La r~gle 12 ne s'applique que si B et C ont en commun 
des valeurs de la variable CAS. 
" f I >-- -  sont des s~parateurs. 
l'ensemble des ~l~ments pr~c~dant >- s'appelle la partie gauche de la r~gle 
l'ensemble des ~l~ments suivant 
Dans la partie gauche, 
l'ensemble des ~l~ments pr~c~dant 
l'ensemble des ~l~ments suivant 
>- s'appelle la partie droite de la r&~e 
I s'appelle le ler constituant 
I s'appelle le 2~me constituant 
lls sont notes Ie t  2 si n~cessaire. 
Exemple : La r~gle pr~c~dente compl~te : 
12 - B // I C // - CAS ~--- A // CAS (1.2) - 
J. Veyrunes - I0 - 
Le point symbolisant l'intersection, les valeurs du cas 
A seront celles qui constituent l' intersection de l'ensemble des 
valeurs du cas du ler constituant de partie gauche avec l'une des 
valeurs du cas du 2~me. 
III VARIABLES GRAMMATICALES ~ ~ 
Leur int~r~t consiste g r~aliser des partitions en classes 
d'~quivalence sur le vocabulaire terminal V T associ~ aux r~gles (2). 
Les ensembles quotients sont les categories syntaxiques en nombre 
restreint. 
Les conditions d'applications, restituant l' information 
n~glig~e lors des diff~rentes partitions, sont de 2 types : 
I) Valeurs des variables impos~es (VVA, VVB). 
2) Intersections de valeurs non vides sur des variables communes (VIV). 
D\] D\] 
D~finition : 
La r~gle num~rot~e I sature ~ gauche (respectivement ~ droite), 
la rggle num~rot~e J relativement ~ la cat~gorie non terminale A, si 
A ~tant obtenue par l'application de I, on interdit ~ A d'gtre le ler 
constituant (respectivement le 2~me) de la partie gauche de la r~gle J. 
Les ~l~ments de SAT sont : J ' Jd selon qu'il s'agit de sa- g 
turation gauche ou droite. On note J s'il n'y a pas d'ambiguit~. 
J. Veyrunes - II - 
Transmission de saturations : 
Dans le cas de r~gles r4cursives on peut d4cider de la trans- 
mission des saturations de la partie gauche vers la partie droite. 
Exemple : I - B // i A // - )---- A // 
2 -  A // I C / / -  >--- B / / -  
3 a // )---- A 
4 et // >--- C 
5 ~ // >--- c 
L'uti l isation des saturations pr~sente 2 int~r~ts : 
I) Regrouper dans la m~me cat~gorie non terminale des cat4gories 
syntaxiques diff~rentes : les saturations port~es par les 2 r~gles 
lexicales correspondantes diff~rencient leur comportement syntaxique 
futur. 
2) Diminuer le nombre de structures jug~es ~quivalents obtenus dans 
l'application de la grammaire. 
Ainsi l'exemple pr4c4dent permet d'obtenir une seule 
structure dans l'analyse des 4num4rations de type 
a, a, .... , a et a 
EXTENSIONS DU FORMALISME PROPOSE : 
Le formalisme ci-dessus reste context - f ree~.  On peut 
songer ~ l'~tendre pour traiter les probl~mes de constituants dis- 
continus qui n'appartiennent pas aux modules "context-free" 
J. Veyrunes - I2 - 
I - Variables v~hiculaires ~G \] 
Ii s'agit d'une g~n~ralisation de la notion de variables 
grammaticales permettant de r~aliser des accords g distance entre 
2 occurrences (par ex : accord du pronom relatif avec son ante- 
cedent) et donc de traiter d'une mani~re g~n~rale le probl~me des 
constituant s dis continus E~,  ~ ? 
Les variables v~hiculaires cr~es lors de l'application 
d'une r~gle, se transmettent vers l'~l~ment de partie droite 
jusqu'~ ce qu'une r~gle y fasse appel. 
2 - Empilement de variables v~hiculaires - traitement de structures 
context-sensitive. 
L'uti l isation des variables v~hiculaires en nombre 
limit~ permet de traiter des structures Context-Free ainsi que 
des structures de constituants discontinus qui se ram~nent ais~- 
ment g des structures Context-Free. 
L'uti l isation d'un empilement de variables v~hiculaires - 
comme dans un automate g pile ordinaire - permet le traitement 
de structures essentiellement context-sensitive. C'est le cas 
par exemple des structures utilisant le mot "respectivement". 
J. Veyrunes 13 - 
Exemple : La chaine A B C R A'B'C' implique les livraisons 
entre A et A' 
Bet  B' 
C et C' 
On ~crira RA ' > - - - R / )V A 
RB' y---  R/ )V B 
RC' >--- R/ ~V C 
CR >--- R/ ~Vc 
BE )---- R/ )0 B 
AR >--- R/ PVA 
)V A indique l'empilement de la variable v~hiculaire associd au 
couple A,A' 
)V A indique la suppression dans la pile de la variable v~hiculaire 
associ~ au couple A,A' 
On peut imaginer en outre plusieurs sortes de variables 
v~hiculaires, pouvant constituer plusieurs piles distinctes. 
Les langages ainsi reconnus sont inclus dans les langages 
context-sensitive. Ii reste ~ prouver, ~ventuellement, qu'ils se 
confondent avec eux. 
J. Veyrunes 14 - 
B - ALGORITHME D'EXPLOITATION DE LA GRAMMAIRE. 
BALAYAGE. 
L'analyse d'une phrase selon la grammaire de type Context-Free 
normale doit fournir une ou plusieurs structures arborescent~binaires 
On peut concevoir une recherche syst~matique de ces structure ~ 
en consid~rant tout d'abord la construction des n groupements de ni- 
veau I (c'est-&-dire l'application des rggles du lexique), puis les 
groupements de niveau 2, c'est-&-dire correspondant & la combinaison de 
2 syntagmes de niveau I. Plus g~n~ralement, on cherchera les syntagmes 
de niveau pen  formant pour chacun d'entre eux les (p-l) possibilit~s : 
(I, (P-l), (2, p-2), ~,  p-i) ... (p-l, I). 
Cet alorithme dQ & COKE, supposeconnue la longueur n de la 
phrase. En utilisant un tel proc~d~, on voit que l'on construit 
simultan~ment tous les  syntagmes de m~me niveau et couvrant les m~mes 
terminaux. Nous appellerons niveau p d'un syntagme le nombre de ter- 
minaux qu'il regroupe et q le rang du premier de ceux-ci dans la 
chaine ; si l'on note~ un sommet d'une structure arborescente 
binaire ayant le niveau pet  couvrant les sommets terminaux 
q,='q + I ... ~q  + p - I, on peut associer & toute structure couvrant 
n terminaux (2n - I) sommets (en comptant les terminaux). 
o-I 
6 
Exemple : 
J. Veyrunes - 15 - 
2 
o ~ I Fig. 2 
D'autre part, il est clair qu'il n'y a au total que n (n + I) 
2 sommetso ~q dist incts : n de niveau I, (n - I) de niveau 2 ... et un 
P 
seul de niveau n. 
L 'a lgor i thme consiste ~ examiner tous les  sommetso ~q 
P 
LUKASIEWICZ a montrg que l'on peut associer I 
2p - I 
structures dif f~rentes gun  sommet de niveau p. 
possibles. 
2p-I 
Cp 
A un sommet donn~est attach~e la l iste des syntagmes ho- 
mographes. Au niveau I, cette liste fournit les diverses homographies 
correspondant ~ une forme. 
J. Veyrunes 16 - 
Le diagramme suivant permet de representer les sommets d'une 
phrase de p mots. Les niveaux sont port,s en ordonn~e, et les num~ros 
d'ordre en abscisse. 
niveaux 
Fig. 3 
i+  k_ X o_ j+ k 
N ? J'ordre 
Aux syntagmes S~correspondant au sommet o"~, on peut associer 
j + i + I pour former les combinaisons les syntagmes S ju du sommet o~ k 
S~ associ~es au sommet o -j i+k  
J. Veyr~ines - 17 - 
Le programme utilise un tel cadre, chaque sommet o- ~tant 
une adresse de liste de syntagmes. Comme la longueur de la phrase 
n'est pas connue, les sommets sont parcourus par diagonales successives. 
Si l'on suppose construits tous les  syntagmes associ~s aux j (j + I) 
2 sommets correspondant auxj premiers terminaux, le (j + i) i~me terminal 
permet de construire les syntagmes correspondants aux j + I sommets 
sur la diagonale. On commencera par examiner tous les  o ~ de la 
J 
j + I ji~me diagonale avec o ~ 
I 
(construction de syntagmes asso- 
ci~s aux O-de la j + Iigme 
diagonale). Puis les o~de la 
(j I l)i~me diagonale avec 
o ~j ... etc... 
2 
~,j + I  
I > Fig. 4 
j+~ 
L'int~r~t de ce proc~d~ est de supprimer la contrainte sur la 
longueur de la phrase. L'analyse progresse mot par mot et s'arr~te au 
mot ps i  il existe un syntagme de phrase associ~ au sommet o -I. 
P 
D'autre part, il est facile d'~viter un grand hombre de 
balayages lorsque l'on peut savoir que tous les  syntagmes associ~s 
un sommet donn~ ne sont ~l~ments de gauche d'aucune r~gle. 
La figure mat~rialise cette 
famille de points. 
Fig. 5 
k-I k 
II 
Nous avons ainsi le schema suivant : 
REPRESENTATION DES STRUCTURES SYNTAXIQUES : 
A chaque sommetO "q est associ~e une liste d~syntagmes  corres- 
P 
pondan~. Ces syntagmes comprennent, outre les informations syntaxiques, 
(c'est-g-dire la cat~gorie, les saturations et les variables grammati- 
cales), le num~ro de la r~gle qui a servi ~ les construire, et les 
adresses des deux syntagmes, droite et gauche, qui forment la partie 
gauche de cette rggle. 
I~J'lRil, I 
J. Veyrunes - I8 - 
\] ~ig. 6 
~~Is I ~ -11i~ / 
III REDUCTION DU NOMBRE D'HOMOGRAPHIES : 
La liste des syntagmes homographes associ~e ~ un sommet donn~ 
peut ~tre consid~rablement r~duite en ne conservant que les syntagmes 
ayant des valeurs syntaxiques diff~rentes. Les syntagmes associ~s 
un sommet ~ ,q sont alors d~crits comme une liste de syntagmes auxquels 
P 
J. Veyrunes 19 
est associde une liste de r~gles: 
q 
o'p 
Fig. 7 
I 
i 
J ~ 
; i 
Ceci ~vite la proliferation des structures homographes ; 
dans la chaine : 
La directrice de soci~t~ enrhum~e 
? 
~ S 2 
7 
Fig. 8 
Les syntagmes S Ie t  S 2 ayant 
m~me valeur syntaxique seront 
group,s. 
Cette homographie ne produira pas de multiplicit~ de struc- 
tures au niveau sup~rieur. 
J. Veyrunes 20 
IV EXPLOITATION DE LA GRAMMAIRE PROPREMENT DITE. 
L'exploitation de la grammaire est li~e ~ l'algorithme de 
balayage. Pour un nouveau syntagme donn~, on recherche tout d'abord 
l'existence de ce syntagme comme composant de droite d'une r~gle. 
Ceci utilise ~ la fois la cat~gorie et les saturations port~es par le 
syntagme. 
Lorsque de telles liaisons sont permises, on applique les 
r~gles de grammairesaux divers couples : 
D~termination de la r~gle, satisfaction des variables gram- 
maticales et des saturations, calcul du syntagme r~sultant. La codi~- 
cation interne de la grammaire est r~alis~e par un compilateur, qui 
prend en charge les r~gles donn~es selon le formalisme d~crit 
ci-dessus (I, A). 
V FORME DU RESULTAT : 
I Lorsqu'un syntagme de type S j correspond ~ une phrase, 
l'analyse de la chaine est arrgt~e. Le r~sultat correspond ~ la famille 
des structures associ~es au syntagme de phrase trouv~. 
Elle se pr~sente comme une structure de demi treillis repr~- 
sentant l'ensemble des arborescentes binaires, contenant en un seul 
graphe connexe toutes les sous-structures communes ou homographes. 
J. Veyrunes - 21 - 
DE UXI  EME PART I  E 
INTERPRETATION DU MODELE SYNTAXIQUE 
A - FORME DES STRUCTURES A INTERPRETER : 
1 2 3 4 5 6 7 8 9 IO Ii 
LE PHENOMENE AUQUEL NOUS DECIDONS DE CONSACRER CE CHAPITRE EST NOUVEAU 
12 
I I J I 
T(t I) N(n I) N(prl) N(pr2) 
J J l J J 
>(vl) P (~ (il),~/A(a~ (n l>~ (n2) V (v2>~~ ,A(a2>// E(fl> 
(i2) 
\[(~3) 
(vS) 
(rl) 
N(n3 
V(v4) 
Fig. 9 ~H (v7) 
J. Veyrunes - 22 - 
Dans un but de simplification, et pour s~parer la partie 
th~orique de la mise en oeuvre pratique, nous ne consid4rons ici que 
le cas d'une structure simple sans homographes. 
II s'agit donc d'une structure arborescente binaire dans 
laquelle chaque sommet non terminal est un 414ment du vocabulaire non 
terminal de la grammaire (Syntagme). Les 41~ments terminaux de la 
structure appartiennent au vocabulaire terminal et sont reli~s ~ des 
414ments non terminaux (r~gles lexicales) dont ils sont les seuls 
descendants. 
En outre, en chaque sommet non terminal, s'ajoute au nom 
de ce sommet, le nom de la r~gle de grammaire (rj) qui a permis de 
le construire. 
B - FORMES DE L'ENTREE DU MODELE M3. (RESULTAT DE L'INTERPRETATION): 
Alors que nous avions une structure sur des syntagmes, nous 
ne nous interessons plus maintenant qu'~ des fonctions, correspon- 
dant ~ une interpr4tation des r~gles de la grammaire. Les syntagmes 
ont permis de d~terminer la coherence de la phrase et d'en d~duire 
une structure. L' interpr~tation doit fournir une nouvelle structu- 
re sur des r~gles. En particulier, la fonction d'ordre associ~e aux 
terminaux (ordre s~quentel des mots dans le texte d'entr4e) peut 
~tre modifi~e. 
La structure obtenue est limit4e ~ une arborescence. Les 
terminaux de cette nouvelle arborescence expriment dans le module M 2 
les fonctions syntaxiques li~es aux unit~s lexicales. 
P~ 
> O4 
? ,-=4 J. Veyrunes 23 
-> =>~ ?q ,-~ 
0 
?q 
04 
~4 
4-J 
?q 
IC ~-4 I 
~4 
0 
'-~ I ~ P~ U 
?0 
0 
.r4 
J. Veyrunes - 24 - 
Un noeud de la structure interpr~t~e est une Fonction syn- 
taxique pour son antecedent. Ii est muni lui m~me d'un certain nombre 
de fonctions qui le caract~risent. La structure est telle que toutes 
les inPormations n~cessaires & caract~riser un noeud sont donn~es aux 
noeuds du niveau suivant. 
En g~n~ral, il existe un ~l~ment distingu~ qui caract~rise 
le noeud precedent. Cet ~l~ment (ou cette r&gle) pourrait d~finir le 
gouverneur dans un graphe de d~pendance. C'est le cas par exemple de 
v'2 (EST) par rapport & @ ou de v'4 (PHENOMENE) par rapport & v'4. 
Cependant il existe des cas : 
a) o~ l'on rencontre plusieurs r&gles distingu~es : 
Exemple : l'~num~ration ci-dessous dans laquelle n' apparait 
I 
trois Fois. 
B 
n 
e t c_ 
II w 
A ! 
n ! g21 
1 
\ 
J. Veyrunes - 25 - 
b) o3 la r~gle distinguee ne conduit directement ~ aucun ~l~ment ter- 
minal. 
Exemp le : 
PIERRE ET PAUL VONT ET VIENNENT 
n'l ~F2 n'l v '----~ ~2 v ' l  
? 
Fig. 12 
Tel est le cas pour le noeud ~ o~ v'2, r~gle distinguee ne conduit pas 
directement ~ VONT ~u VIENNENT) et exige l'interm~diaire v' 
i" 
J. Veyrunes - 26 - 
C - PROCEDE DE CONSTRUCTION DE LA STRUCTURE INTERPRETEE : 
L'exemple qui a servi d'i l lustration en CA) et en (B), cor- 
respondant aux figures 9 et I0, montre respectivement la structure 
formelle et la structure interpr~t~e. Pour effectuer la transformation 
dans laquelle : 
a) les noms de syntagme disparaissent 
b) les r~gles rj deviennent r'j 
c) l'ordre des syntagmes ~l~mentaires (terminaux) est ~ventuellement 
modifi~ 
d) l'arborescence ne poss&de plus une structure binaire, on fait appel 
d'une part ~ des donn~es d'interpr~tation sur les r~gles rj, d'autre 
part ~ des algorithmes d'exploitation de ces donn~es. 
I - DONNEES D'INTERPRETATION. 
Les donn~es d'interpr~tation sont les suivantes : 
- Toute r&gle de construction binaire rj de la forme AB~----C indique 
par le symbole "g" ou "d" que le constituant distingu~ est celui de 
gauche A ou celui de droit B. 
- Toute rggle contenant des variables v~hiculaires VHL indique par son 
propre Formalisme d'~criture s'il s'agit d'introduction, de transfert 
ou de destruction pour chacune de ces variables v~hiculaires. 
II - ALGORITHMES D'EXPLOITATION. 
i) Algorithme de transformation : 
II s'agit de r~aliser un certain nombre de changements de 
hi~rarchie dans la structure pr~sent~e ~ la figure 9 afin de r~tablir 
les liaisons correctes dans le cas des gouvernements discontinus. On 
d~finit la creation d'une variable v~hiculaire par le symbole I asso- 
~7 
J. Veyrunes - 27 
ci~ ~ la r~gle de creation. 
la transmission par le symbole ? associ~ ~ la r~gle de trans- 
mission. 
la suppression par le symbole ~ associ~ ~ la r~gle de suppres- 
sion. 
Ces symboles sont notes ainsi que "g" ou "d" dans la phase de recon- 
naissance formelle. 
On appelle chemin ~toil~ un chemin du graphe tel que le 
noeud initial contienne le symbole ~ et les noeuds interm~diaires 
contiennent le symbole ~. 
Le noeud final est celui qui suit le noeud contenant le 
symbole $et  que l'on atteint ~ partir de ce dernier en suivant l'in- 
formation g (respectivement 3). 
n, 
\]_ 
Soit C . un chemin ~toil~ de longueur p commencant au noeud nl 
C ~ = ni (Ni' Ni+l' ''" ' Ni+ P+I ) 
A chaque noeud Ni+ j de C ~ ou associe le sous-graphe Ti+ j 
ni 
sommet Ni+ je t  ne contenant ni Ni+j+ 1 ni ses descendants. 
de 
L'algorithme consiste ~ traiter successivement tous les  C ~. du nl 
graphe ,  ~ par t i r  de la  ra~ine  de la  s t ruc ture .  
Pour chacun d'eux, pris dans cet ordre le traitement consiste 
a) transformer C~ni = (Ni, Ni+l, ... , Ni+p, Ni+p+ I) en le chemin (non 
J. Veyrunes - 28 
~toil~) de longueur p : Cni+p = (Ni+l ' "'" ' Ni+p' Ni' Ni+p+l) 
restant attaches aux noeuds Ni+ j auxquels ils ~taient primitivement 
associ~s. 
b) on note sur N. autant de ? diff~rents que l'on a interrompu de 
i 
chemins ~toil~s entre Ni+ p et Ni+p+ 1. 
J. Veyrunes - 29 - 
2) Algorithme de construction des noyaux. 
Sur le plan th~orique cet alorithme se divise en deux pha- 
ses. En premier lieu on e~fectue la s4quence d'op~rations qui suit. 
On proc~de, niveau par niveau, en commengant par le niveau 
terminal, ~ l'a~fectation pour chaque noeud d'un symbole not6, soit 
r'j d4duit du nom de r~gle rj port4 par le noeud imm4diatement ant4- 
rieur, soit .A. La r~gle d'affectation est donn~e dans tousles 
cas possibles par les graphes suivants : 
r. (d) 
1 
r. Cg) /% b 
Exemple : 
I ri I r I i 
r I . 
1 
CE CHAPITRE EST NOUVEAU 
a I 
n 2 
~ i g .  14 
'J4 (d) 
(chapitre) (est) (nou~m) (ce) 
I i v 1 1 a'2 
n' 2 Ji ~- 
fig. 15 
J. Veyrunes - 30 - 
En outre, dans certains cas, nous aurons des r~gles du type 
r. (d g) la r~gle d'application est la suivante : 
r .  (d, g) 
1 
il n'y a pas de r' 
La figure I~ montre le r~sultat de l'application de l'algo- 
rithme (i) et de cette phase de l'algorithme (2) sur la structure for- 
melle de la figure 9. 
J. VeyriLnes -31- 
J. Veyrunes - 32 - 
Ensuite, on transforme l'arborescence binaire pour constituer 
les noyaux de la phrase. Pour cela on consid~re dans le graphe obtenu 
tous les  chemins du type : 
(R'i, A , ... A ) notes ~'i associ6s ~ chaque R'i 
On d~finit alors le graphe (~'i' 
r (R ' . )  U V(A)  . . .  1 
G), avec G(R' i ,A . . . ,A )  
En pratique, on r~alise ce graphe en supprimant les noeuds 
et en r~tablissant les liaisons de A ~ ses successeurs sur le R'.. 
i 
Ainsi, les noeuds R' sont conserves. i 
Dans le cas o~ il y a deux ~sous  un R'i, pour d6finir le 
graphe transform4, il y a lieu de d~finir ~' par l'union des chemins P 'g  _ i 
et . Ce cas se rencontrera en particulier, pour la coordina- i i 
tion : 
n,l A Bn, 1 'g'l 
,// A 
A n'l ' g'l / 
o 
B n'l 
J. Veyrunes -33 - 
TROI  S I EME PART I  E 
LE MODELE M3. 
C'est un langage artificiel dans lequel chaque formule a pour 
representation une famille de phrases significatives ~quivalentes dans 
la langue source L (et aussi dans la langue cible pour que la traduc- 
tion soit possible). 
Le "degr~ de signification" que l'on peut atteindre dans L 
d~pend ~videmment du module. On se borne ici ~ mettre en ~vidence la 
signification syntaxique. 
A partir de la structure fournie par l' interpr~tation syn- 
taxique (figure I0) ~ propos de l'exemple choisi, la formule d~- 
duite dans M3 est celle donn~e par le graphe de la figure 
Le module M3 accepte une structure interpr~t~e de M2 si les 
r~gles de sa grammaire faisant intervenir g la fois les ~l~ments r'j 
et les codes s~m~niques associ~s aux unit~s lexicales permettent d'at- 
tacher aux noeuds des ~l~ments du vocabulaire de M3 (par exemple : 
SUJET, ACTION, ATTRIBUTION, etc ...). 
z o
oz~ 
= . 
k 
"~ . 
z 
~ N  
j 
v 
J, Veyrunes  
/ /~ 
H Z ~ m  
~ H g 
~ Z 
? o ~1 
w u "~ 
-.-- 0 
O0 
.,.4 
q- 
0 
- 34  
J. Veyrunes 35 - 
- B I  BL I  O G R A P H I E -  
(t) 
(2) 
(3) 
(4) 
(5) 
(6) 
(7) 
C. BERGE 
J. COLOMBAUD 
G. H. MATTHEWS 
G. H. MATTHEWS 
N. NEDOBEJKINE 
L. TORRE 
B. VAUQUOIS 
G. VEILLON 
J. VEYRUNES 
G. VEILLON 
J. VEYRUNES 
Th~orie des Graphes et ses appl icat ions 
DUNOD - Paris. 
Langages art i f ic ie ls  en analyse syntaxique - 
Th&se de 3&me cycle - Univers i t~ de Grenoble 
(1964). 
D iscont inu i ty  and Asymmetry in Phrase 
Structure Grammars - Inf. and Contr. 6 - 137 - 
146 (1963). 
A Note on Asymmetry in Phrase Structure 
Grammars - Inf. and Contr. 7 - 360 - 365 (1964) 
Mod&le de la syntaxe russe - I. Structures 
abstraites dans une grammaire 'context-free' 
Document C.E.T.A. G - 201-I (1964). 
Appl icat ion des grammaires formelles aux 
mod&les l inguist iques en traduct ion automatique. 
Communicat ion au Congr~s de Prague (Sept. 1964). 
Etude de la r~al isat ion prat ique d'une 
grammaire 'context-free' et de l 'a lgorithme 
associ~. Document C.E.T.A. G - 2OO1- i. (1964). 
