Structure Sharing in Lexicalized Tree-Adjoining Graulmars* 
K. V i jay -Shanker  
Dept. of Computer & Information Science 
University of Delaware 
Newark, DE 19716, USA 
vii ayqOudel, edu 
Yves Schabes 
Dept. of Computer & Information Science 
University of Pennsylvania 
Philadelphia, PA 19104-6389, USA 
schabesQuaagi, c s .  upena, edu 
Abstract 
We present a scheme for efficiently representing a lexi- 
caiized tree-adjoining grammar (LTAG). The propcoed 
representational scheme allows for structure-sharing 
between lexical entries and the trees associated with 
the lexical items. A compact organization is achieved 
by organizing the lexicon in a hierarchical fashion and 
using inheritance as well as by using lexical and syn- 
tactic rules. 
While different organizations (Flickinger, 1987; Pol- 
lard and Sag, 1987; Shieber, 1986) of the lexicon have 
been proposed, in the scheme we propose, the inheri- 
tance hierarchy not only provides tructure-sharing of 
lexical information but also of the associated elemen- 
tary trees of extended omain of locality. Furthermore, 
the lexical and syntactic rules can be used to derive new 
elementary trees from the default structures pecified 
in the hierarchical lexicon. 
In the envisaged scheme, tbe use of a hierarchical 
lexicon and of lexical and syntactic rules for lexical- 
ized tree-adjoining grammars will capture important 
linguistic generalizations and also allows for a space 
efficient representation f the grammar. This will al- 
low for easy maintenance and facilitate updates to the 
grammar. 
1 Motivations 
Lexicalized tree-adjoining grammar (LTAG) (Schabes 
et al, 1988; Schabes, 1990) is a tree-rewriting formal- 
ism used for specifying the syntax of natural anguages. 
It combines elementary lexical trees with two opera- 
tions, adjoining and substitution. In a LTAG, lexical 
itenm are associated with complex syntactic structures 
(in the form of trees) that define the various phrase 
structures they can participate in. LTAG allows for 
unique syntactic and semantic properties: 
? The domain of locality in LTAG is larger than for 
other formalisms, and 
? Most syntactic dependencies ( uch as filler-gap, 
verb-subject, verb-objects) and some semantic 
*The first author is partially supported by NSF Grant IRI90- 
16591. The second author in partially supported by DARPA 
Gr i t  N0014-90-31863, ARO Grant DAAL03-89-C-0031 and 
NSF Grant IRI90-16592. 
dependencies ( uch as predicate-argument) have 
been localized within the elementary trees stated 
in the lexicon. 
These unique properties of LTAGs have been shown 
to be linguistically very useful (Kroch and Jo~hi, 
1985; Kroch, 1987; Kroch, 1989; Abeill6, 1988; Shieber 
and Schabes, 1990). However these same aspects can 
cause many practical problems. This is because there 
is considerable redundancy of information among the 
elementary trees that provide the enlarged omain of 
locality. ~o far, the lexicon of a LTAG has been orga- 
nized in a completely flat manner, not allowing for any 
sharing of syntactic or semantic properties of the \[exi- 
cal items. Also, in the current organization there is no 
structure sharing among the different rees associated 
with the different lexical items as they are stated inde- 
pendently of each other. For example, Figure 1 shows 
some of the trees associated with the lexical item 'eat'. 
In Figure 1, the tree ~1 corresponds to a declar- 
ative sentence, a2 to a WII-question on its subject 
and aa to a relative clause in which the subject has 
been relativized. This example illustrates the redun- 
dancy among the elementary trees found in the lexi- 
con. For example, the effect of the rule S ---+ NP  VP  
is found in all trees associated with a verb. Similarly, 
VP --* V NP  is found in all trees associated with a 
transitive verb. The current implementation of the 
LTAG for English (Abeilld et al, 1990) comprises over 
800 sentential tree frames (trees without lexicaI items). 
Each one of these frames includes a part that corre- 
spond to the rule S --4 NP  VP.  This problem of repli- 
cation of information has reached an acute stage and 
any practical natural language processing system based 
on LTAG must address this issue. 
An equally serious problem is one of maintaining 
and updating such a grammar. It arises due to the 
lack of structure-sharing and of statements of various 
independent principles that make up the elementary 
trees. Any small change to some aspect of the design 
of the grammar could necessitate making changes to 
possibly hundreds of trees manually. For instance, an 
addition of a constraint equation associated with the 
rule S ---* NP  VP  would affect the description of ev- 
ery tree associated with a verb; a change to the way 
wh-questions are formed must be propagated to every 
tree for wh-question. Furthermore, one can only man- 
ually verify that such an update does not conflict with 
ACTES DE COLING-92, NAtCr~s, 23-28 ^Or3T 1992 2 0 5 PROC. Or COLING-92, NA~CrEs, AU~. 23-28, 1992 
/ 
s Nr~ S 
NPoI- VP NPo VP 
eat eat 
(,~) 
NP 
NP* /~  
NP~ S 
NP0 VP IA  
ei i N'PI$ 
tat 
Figure 1: Sample of Elementary Trees in a LTAG 
any other principle already instantiated. Given the size 
of the grammar, this is not a feasible task. 
2 Goa ls  o f  the Proposed Work 
The problems mentioned above indicate an urgent need 
for addressing the issue of organization of a LTAG. For 
a LTAG, much of this effort would have to deal with the 
organizatiou of the lexicon and the elementary trees. 
Proposals for a compact representation f the lex- 
icon and grammars have been suggested. For exam~ 
pie, Flickinger (1987) and Pollard and Sag (1987) use 
a hierarchical lexicon aud rules for implementing Head- 
driven Phrase Structure Grammars. Shieber (1986) 
proposed the use of default inheritance combined with 
templates and of transformation rules in the PATR- 
II system for organizing a unification based grammar. 
Lexical redundancy rules have been used in LFG (Bres- 
nan and Kaplan, 1983) to capture relations among 
lexicai items. Gazdar et al (1985) proposed the use 
of meta-rules for expressing transformational relation- 
ships. 
There has been suggestions for compacting the size 
of a tree-adjoining rammar lexicons (Becker, 1990; 
ttabert, 1991). However, they only partially solve the 
problem since they fail to combine in a uniform way a 
compact representation f the lexicon and, at the same 
time, of their associated elementary trees. 
In this paper, we present a scheme to efficiently rep- 
resent a LTAG and illustrate this scheme by examples. 
We examine the information that needs to be associ- 
ated with the classes in our hierarchical organization 
in order that we can represent the elementary trees of 
a LTAG. Our main concern in this paper is the pro- 
posal for organizing a LTAG. In order to be concrete, 
we consider the representation f a particular grammar 
for English (Abeill$ et al, 1990). While the elegance 
(and the correctness) of the mechanisms used to cap- 
ture linguistic generalizations is an important issue in 
such an enterprise, these linguistic oncerns are beyond 
the scope of this work. We give no linguistic motiva- 
tions for the grammar that is being represented, nor 
for some of the methods used to represent i . The lin- 
guistic aspects of the work presented in this paper are 
meant to be suggestive. Also, while our scheme bor- 
rows heavily from Fliekinger (1987), it is differentiated 
from similar enterprises in that we consider the repre- 
sentation of syntactic structures (in the form of trees) 
associated with lexical items. For this reason, we con- 
centrate on the representation f the tree structures. 
The representation we propose allows for structures 
sharing between lexical entries and for syntactic and 
lexical rules while being lexically sensitive. Lexical 
items as well as the elementary trees found in a lex- 
icalized tree-adjoining grammar are organized in a hi- 
erarchical lexicon using inheritance. Furthermore, the 
lexical rules relate the information associated with lex- 
ical entries together. In particular, they derive new el- 
ementary trees of extended omain of locality from the 
one found in the hierarchical lexicon. Lexical idiosyn- 
crazies are specified in the particular lexical entries. 
3 Lexical Organization 
The lexical entries (LEs) are organized in hierarchical 
fashion. The value of an attribute of lexical entry in 
the lexicon is either obtained by inheritance or by lo- 
cal specification. We allow for overwriting inherited 
attributes by assuming that the local specification has 
a higher precedence. Figure 2 shows a fragment of the 
hierarchy for verbs. The lexicon associates lexicaJ items 
with a set of classes. 
Entries specify relationships and properties of sets 
of nodes in trees which will be associated with the 
lexical items. The framework for describing the tree 
that will be associated with the lexicai item is very 
similar to unification based tree-adjoining rammar 
(Vijay-Shanker, 1992) in which the trees are described 
with partial descriptions of their topology (Rogers and 
Vijay-Shanker, 1992) using statements of domination 
Acres DE COLING-92, NANTES, 23-28 Ao~r 1992 2 0 6 Paoc. OF COLING-92, NANTES, AUO. 23-28, 1992 
give d~at~ ~t 
Figure 2: 1,?agment of the Lexicon 
and linear precedence. We do not discuss tile descrip- 
tion language in which these trees are stated. Instead, 
we will pictorially represent these partial descriptions 
of trees. 
For the purposes of this paper, in our representation 
scheme, we will focus on the descriptions of associated 
elementary trees. 
Each class comprises of tile following attributes 
(among others): 
* superclasses, tile set of imnlediate ancestor classes 
from which the current class inherits. 
? nodes, the set of entities involved in the lexical 
entry. 
? description, a partial description of a tree. This 
description consists of partial statements of dom- 
ination, immediate domination and linear prece- 
dence over the set of nodes given in the previous at- 
tribute. In tile following, we will ignore tile linear 
precedence r lationship. The immediate domina- 
tion relationship will be illustrated by a plain line 
and the domination relationship by a dotted line. 
The language of this description and its semantic 
is given by Rogers and Vijay-Shanker (1992). The 
dashed line between tree nodes does not mean they 
are necessarily different nodes. It is used to indi- 
cate the two nodes in question could he the same 
or if they are ditferent then one. of them dominates 
the other in the manner indicated. 
o constraint equations are unification equations that 
hold between the set of nodes. These equations 
specify feature structnres associated with the set 
of nodes. Attritmtes uch as agreemeut (agr) or 
case (ease) are found in these equations. 
? completion; y = completion(x) specifies that y is 
the lowest node in the tree which does not require 
any argument of the predicative lement x. This 
will be used, for example, in defining how the tree 
for wh-question is obtained. 
? head-daughter; x = head-daughter(y). This will be 
nsed in propagation of features by asl implicit as- 
sumption of head-feature convention. 
* argument node ; arft specifies the node for the ar- 
gnment being introduced by the entry. This will 
be used to identify nodes that are mentioned in 
different classes e.g. in NP-IOBJ or used in tile 
syntactic rides such as for Wll-movement. 
? linear precedence (LP) statements which define 
precedence an'long nodes within the framework of 
ID/LP TAG proposed by Jo~hi (1987). 
? anchm; anchor --- xspecifies that the node x is tile 
aalchor node of the tree being described. 
For each entity in the hierarchy, attributes (such as 
arg) of some its aalcestors can be referred to for further 
specifying the description while inheriting the descrip- 
tion of its ancestors. 
We can now consider an example. The following en- 
try can be associated with the class VERB: 1 In this 
entry, as well ,a.q in the following entries, we do not give 
the full specification but specify only that part which 
is relevant to the discussion. 
m 
nodes :  s~ np ,  Vl) p v 
s 
np vp 
description: 
s .<cat>=S 
up. < agr >= vp. < ayr > 
constraints equations: up. <: cast: >= nora 
arg : np 
s = completion(v) 
vp-= head-daughter(s) 
uT lehor  ~ V 
up < vp 
This entry specifies partially the tree structure for 
every verb, indicating that (by default) each verb must 
have a subject. It is important o note that despite 
the pictorial representation used, s,np, vp, v are used 
to refer to node and not to their labels. 
The following entry is associated with the class of 
transitive verbs (TIL~NSITIVE): 2
1Tire tree described below could have been predicted from 
general principles nuch an HPSG'a rule atated on Page 149 in 
Pollard and Sag (1987). 
2Similarly, tile tree described below could have been predicted 
from HPSG's rule atated on page 151 in Pollard and Sag (1987). 
AcrEs DE COLING-92, NANTES, 23-28 Aol~rr 1992 2 0 7 I'ROC. OF COLING-92, NANTr:S, AUG. 23-28. 1992 
TRANSIT IVE  
superelasses: VERB 
nodes: vp, v, lip 
via 
description: 
v np  
constraints equations:... 
ar t  : np 
s : completion(v) 
v = head-daughier(vp) 
ailehor ~ 
The following entry is associated with the class of 
verbs taking an NP as indirect objects(IOBJ) which 
may be possibly found within a prepositional phrase or 
not: 
IOB J  
superclasses: VERB 
nodes: vp, v, np 
constraints equations:... 
arg:  np 
vp 
description: / \ \  
v i~p 
anchor = v 
PP-IOBJ 
superclasaes: IOBJ 
nodes: vp, v, pp, p, np 
constraints equations:... 
art  : pp 
vp 
A 
description: v A 
p np  
np : a rg ( IOB J )  
anchor = v 
The following entry is associated with the class of 
ditransitive verbs taking a noun phrase as direct ob- 
ject and a prepositional phrase as an indirect object. 
The entry only specifies that the NP direct object must 
precede the NP introduced by the prepositional phrase. 
DITRANS1 -I 
superclaeses: TRANSITIVE, PP-IOBJ 
LP  : a rg (TRANSTIVE)  < arg(PP- IOBJ )  
The following entry is associated with the class of 
verbs taking an NP as indirect objects (NP-IOBJ): 
NP-IOBJ 
superclaases: IOBJ 
nodes: vp, v, np 
constraints equations:... 
arg:  np 
description: A
v np  
np= arg( IOB J )  
anchor = v 
The equality np= arg( IOB J )  used in the above 
frame forces the NP argument introduced in IOB J  (a 
superclass of NP- IOBJ )  to be immediately dominated 
by the VP node, thus disallowing it being embedded in
a prepositional phrase. 
However, the following entry is associated with the 
class of verbs taking a prepositional phrase (PP-IOBJ): 
The description of the default tree for DITRANS1 
is inherited from VERB, TRANSIT IVE ,  10B J, PP- 
IOBJ.  From the descriptions given in VERB and in 
TRANSIT IVE  we obtain the following structures: 
A 
np vpl i 
vp2 
A 
V np  
Note that the VP node in VERB dominateS the 
verb node whereas the one introduced in TRANSI -  
T IVE  immediately dominates the verb node. This re- 
sults in the VP node introduced in verbs dominating 
(hence the dashed line) the VP node introduced in 
the TRANSIT IVE  frame. This kind of reasoning that 
leads to the formation of complex tree structures i
given by Rogers and Vijay-Shanker (1992). Proceed- 
ing with the description of the tree structure inherited 
from IOB J  and PP - IOB J  we get: 
AcTES DE COLING-92, NANTES, 23-28 AOI3T 1992 2 0 8 PROC. OF COLING-92, NANTEs, AUG. 23-28, 1992 
np vpl  
vex 
v np pp 
p np 
which is used as default structnre for verbs that be- 
long to DITRANS1. a 
In general this method for building a tree to be asso- 
ciated with a lexical item can be described as follows. 
First the nodes described in each superclass of the lex~ 
ical entry are collected along with the statements of 
relationships specified between the nodes. This may 
require renaming of nodes in case nodes in different 
classes are given the same name. For instance, when 
we collect the nodes specified in VERB and TRAN- 
S\[7'IVE, the VP nodes specified in them must be re 
named (say as vpl and vp~) as must the NP nodes (say, 
the node for the subject hat is specified in VERB gets 
renamed as up1 and the object specified in TRANS1- 
TIVF gets renamed as np2). Next we must add an 
extra statement to explicitly equate tile anchor nodes 
specified. Now if we additionally inherit the descrip- 
tions from 10B,\] aud PP-IOBJ the two NP  nodes 
introduced get renamed but identified as a result of 
the identification suggested in PP-IOBJ. Notice that 
the identification of the VP nodes in TRANSITIVI';, 
IOBJ, and PP-IOBJ does not get occur at this point. 
Such an identification gets done when we pass the tree 
descriptions collected to the machinery described by 
Rogers anti Vijay-Shanker (1992). Since the anchors 
specified in these three classes get identified, the three 
VP nodes specified (in TRANSITIVE, IOBJ, and PP- 
IGBJ) as the parents of these anchor nodes must also 
get identified. Using this type of reasoning about the 
structural properties of trees, the structure given above 
gets created. To complete the discu~qion of the inher- 
itance of the tree descriptions, the head-daughter re- 
lations are noted in order that they can be used for 
feature sharing. Also the set of arg nodes are also col- 
lected and called the aTys of the lexical entry. For ex- 
ample, the args in the case above would be up1 (from 
VERB), np2 (from TRANSITIVE),  npa (from IOBJ), 
and pp (from PP-IOB~. Later, in the syntactic rule, 
Wh-QUESTION, we use the a~ys of a lexieal entry to 
indicate tbe set of possible nodes that can be moved. 
In TAG the structure we derived above for DI- 
TRANS1 is represented in the form of the following 
tree: 
3If needed, the value of the preposition can be specified by 
addltlona\] information at the lexical entry. 
np vp 
v np pp 
p np 
with two feature structures (toll and bottom) a.,~o- 
elated with the VP node to indicate the collapsing of 
two VP nodes linked by domination. Tiffs process is 
also described in (Rogers and Vijay-Shanker, 1992). 
4 Lexical and Syntact ic  Rules  
The second mechanism we adopt for structure-sharing 
is the use of lcxical and syntactic rules to capture in- 
flectional and derivational relationships among lexical 
entries. The mechanism is very similar than the one 
proposed by Flickinger (1987), however it ditfers from 
it since we derive elementary trees of extended omain 
of locality. Lexical and syntactic rules relate an input 
lexical entry to an output lexical entry. The output lex- 
ical entry gets its information from the input lexical en- 
try, lexical and syntactic rules, and possibly additional 
idiosyncratic information specified in the lexicon. 
We illustrate the use of lexical and syntactic rules by 
examples. In the following, we will focus our attention 
to the derivational relationships and also to the output 
tree description. Consider the rule for wh-question. 
-W~ QUES'r ION 
input : LEi 
output : LEo 
x E args(LEi) 
x' = copy(x) 
y = completiou(LEi) 
LEo.tree,-description :: 
s 
A 
x' s 
I 
i 
I 
We treat formation of structure for wb-question as 
relation between two lexical entries specified here as 
LEI and LEo. The tree description ill LEo indicates 
that an argument node (x) ill tile tree described in LEi 
can be moved leaving a trace. Ilere tile relationship 
between x and y is obtained from the description in 
LEI. Copy(x) indicates that a copy of the description 
of entire sub-tree rooted at node x needs to recorded 
in output description. In the resulting description, the 
filler is shown to C-command the gap. 
ACRES DE COL1NG-92, NANTES, 23-28 AOI~'I' 1992 2 0 9 Plloc. OF C()I.IN(;-92, NAI, rrI';S, Auo. 23-28, 1992 
Thus, if LEI stood for DITRANSI and say we con- 
sider x to be the node NP direct object, the trees de- 
scribed in LEi and LEo are: 
S 
NIP S 
np 
V NP PP 
v np pp 
p np e P NIP 
Before il lustrating the passive rule, we need to in- 
troduce the so-called CHANGE ARITY relation in- 
troduced by Fiickinger (1987). We say that C~ = 
CItANGE-ARITY(C1) if CI is the immediate super- 
class of C1 distinct from TRANSITIVE. We can now 
state the passive rule: 
PASSIVE 
input : LEI 
output : LEo 
passive E LEo.CLASSES 
CHANGE-AR1TY(LEi.CLASS) E LEo.CLASSES 
LE~.CLASS E LEo.CLASSES 
*I) 
v (pp) 
p np 
E LEo.tree-description 
by 
Suppose we let LEi.class to be DITRANS1. Thus 
from the definition CHANGE-ARITY(DITRANS1) is 
PP-IOBJ. The tree description inherited from PP. 
IOBJ differs from that of DITRANS1 only in that we 
do not postulate the presence of the node for NP di- 
rect object. Thus the tree description we arrive at is: 
up vp 
vp 
1 
"7; v pp p np 
p np by 
and by equating the two V nodes and by col- 
lapsing the two VP nodes as before, we get: 
? | 
up vp np vp 
v pp (pp) v (pp) 
A A 
p ~ p np p np 
I oF 
b7 by 
pp 
p np 
From the tree description and constraint equations of 
the passive class, we will inherit information to place 
the two feature structures on the VP nodes on top 
form:passive and on the bottomfevm:pparl. Since these 
feature structures cannot be unified, the auxiliary verb 
"be" is required to adjoin on the VP node. 
As in any similar enterprise, we have to provide 
means to handle exceptions. For example, we will have 
to provide such mechanisms to handle verbs that are 
exceptions to the use of PASSIVE or DATIVE rule. 
Like in (Flickinger, 1987) we allow overwriting and 
state explicitly that certain rules are not applicable in 
the entries of some lexieal items. However, consider- 
able more machinery would need to be added to cap- 
ture semantic onstraints on the application of such 
rules. At present, little work has been done to incorpo- 
rate specification of semantic onstraints in conjunction 
with TAG. 
5 Conc lus ion  
While a number of proposals (Flickinger, 1987; Pollard 
and Sag, 1987; Shieber, 1986) have been made for a 
hierarchical organization of a lexicon and grammar, in 
our approach the hierarchical lexicon, the syntactic and 
lexical rules additionally specify partial descriptions of 
trees of extended omain of locality which capture syn- 
tactic mid semantic dependencies. The description of 
elementary trees has been obtained by collecting par- 
Acrv.s DE COLING-92, NAMES, 23-28 AOt~n" 1992 2 1 0 PROC. OF COLING-92, NANTES, AUG. 23-28, 1992 
tim description of trees and then realizing tile least tree 
satisfying these constraints. Tile syntactic and lexical 
rules enable us to derive new entries from existing ones. 
Overwriting allows us to be sensitive to lexical idiosyn- 
er asies. 
As mentioned earlier, tile linguistic exaraples given 
here were meant only to indicate the potential of our 
approach. In general, we anvisage tile use of a hierar- 
chical lexicon, of syntactic and lexical rules for lexical- 
ized tree-adjoining grammars that capture importaalt 
linguistic generalizations and provide for a space effi- 
cient representation f tile grammar. Equany impor- 
tant, such a scheme would facilitate the automation of 
the process of updating and maintaining the grammar, 
an urgent need felt during the development of a large 
lexica\[ized tree-adjoining grammar. 
We are currently investigating the possibility of 
defining parsing strategies that take advantage of the 
type of hierarchical representation we proposed ill this 
paper. Many other related topics will be explored ill 
the future. A much more elaborate organization will be 
considered, which in turn may suggest the need for ad- 
ditional machinery. We will implement the inheritance 
machinery described above and the process of building 
trees from these descriptions. We would also like to 
consider the treatment of idioms and tile integration of 
syntactic and semantic specifications in the context of 
LTAG. 
References  
Anne Abeill~, Kathleen M. Bishop, Sharon Cote, and 
Yves Sehabes. 1990. A lexicalized trec adjoining 
grammar for English. Technical Report MS-CLS-90- 
24, Department of Computer and Information Sci- 
ence, University of Pennsylvania. 
Anne Abeill& 1988. Parsing french with tree adjoining 
grammar: some linguistic accounts. In Pwceedings 
of the 12 ~h lnter~alional Conference on Compnta- 
tional Linguistics (COLING'88), Budapest, August. 
T. Becker. 1990. Meta-ru\[es on tree adjoining gram- 
mars. In Proceedings of the 1st International Work~ 
shop on "1bee Adjoining GTvJmmars, Dagstuhl Castle, 
FRG, August. 
J. Bresnan and R. Kaplan. 1983. Lexieal-functional 
grammar: A formal system for gramraatica\[ repre- 
sentation. In The Menial Representation f Gram- 
ma$ical Relations. M.I.T. Press, Cambridge, MA. 
Daniel Paul Flickinger. 1987. Lexieal Rules in the Hi- 
erarchical Lexicon. Ph.D. thesis, Stanford Univer- 
sity. 
G. Gazdar, E. Klein, G. K. Pullum, and 1. A. Sag. 1985. 
Generalized Phrose S'trueture Grammars. Blackwell 
Publishing, Oxford. Also published by llarvard Uni- 
versity Press, Cambridge, MA. 
Benoit llabcrt. 1991. Using inheritance in object- 
oriented programming to combine syntactic rules 
and lexical idiosyncrasies. Ill Proceedings of the sec- 
ond laieT~alioual Workshop on Parsing Technolo- 
\[lies, Cancun, Mexico, February. 
Aravind K. 3oshi. 1987. Word-order variation ill natu- 
ral language generation. Ill AAA\[ ill Sixth National 
Con\]erencc on Arlificial Intelligence, pages 550 555, 
Seattle, Washington, ,I uly. 
Antho~y Kroch and Aravind K. Joshi. 1985. l,inguis- 
tit: relevance of tree adjoining grammars. Techni- 
old Report MS-CIS-85-18, 1)epartment of Computer 
and Information Science, University of Pennsylvania, 
April. 
Anthony Kroch. 1987. Unbounded dependencies 
and subjacency in a tree adjoining grannnar. Ill 
A. Manastcr~ltnmer, editor, Mathematics of Lan~ 
guage. John Benjamins, Amsterdam, 
Anthony Kroch. 1989. Asynunetries ill long distance 
extraction in a tag gratnmar. In M. i\]altin and 
A. Kroeh, editors, Alle,native Conceptions of Phrase 
Struclure, pages 66-98. University of Chicago Prerm. 
Carl Pollard and Ivan A. Sag. 1987. lnformation-ltased 
Syntaz and Semantics. Vol 1: Fuudamenlals. CSLI. 
J im Rogers and K. Vijay-Shanker. 1992. l~easoning 
with descriptions of trees. In 30 lh Meeting of the As.. 
sociation for Computational Linyuistics (ACL'921. 
Yves Schabes, Anne Abeillfi, and Aravind K. Joshi. 
1988. Parsing strategies with 'lexicalized' grammars: 
Application to tree adjoining rammars, in Proceed- 
ings of the 12 ~'~ Internalional Conference on C'ompu~ 
rational Linguistics (COLING'88), Budapest, |lull- 
gary, August. 
Yves Schabes. 1990. Mathematical nd Computalioaal 
Aspects of Le~:icahzed G~u,umars. Ph.D. thesis, Uni- 
versity of Pennsylvania, Philadelphia, PA, August. 
Available as technical report (MS-C1S-90-48, LINC 
LAI1179) frolo the Department ofComputer Science. 
Stuart Shieber and Yves Schahes. 1990. Synchronous 
tree adjoining rammars, lli Proceedings of the 13 ch 
International ConfeTence on Computational Linguis- 
tics (COLING'90), llelsinki. 
Stuart M. Shieber, 1986. An lntroduclion to Unlit- 
cation-Based Approaches to Grammar. Canter for 
tile Study of I,anguage and Information, Stanford, 
CA. 
K. Vijay-Shanker. 1992. Using description of trees in 
a tree adjoining grammar, qb appear in Computa- 
tional Linguistics. 
ACTES DE COLlNG-92, NAmf;,S, 23-28 AO~JT 1992 2 1 1 PRO(:, OF COl,IN(;-92, NANTES, AUG. 23 28, 1992 
