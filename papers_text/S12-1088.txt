First Joint Conference on Lexical and Computational Semantics (*SEM), pages 597?602,
Montre?al, Canada, June 7-8, 2012. c?2012 Association for Computational Linguistics
UNITOR: Combining Semantic Text Similarity functions
through SV Regression
Danilo Croce, Paolo Annesi, Valerio Storch and Roberto Basili
Department of Enterprise Engineering
University of Roma, Tor Vergata
00133 Roma, Italy
{croce,annesi,storch,basili}@info.uniroma2.it
Abstract
This paper presents the UNITOR system that
participated to the SemEval 2012 Task 6: Se-
mantic Textual Similarity (STS). The task is
here modeled as a Support Vector (SV) regres-
sion problem, where a similarity scoring func-
tion between text pairs is acquired from exam-
ples. The semantic relatedness between sen-
tences is modeled in an unsupervised fashion
through different similarity functions, each
capturing a specific semantic aspect of the
STS, e.g. syntactic vs. lexical or topical vs.
paradigmatic similarity. The SV regressor ef-
fectively combines the different models, learn-
ing a scoring function that weights individual
scores in a unique resulting STS. It provides a
highly portable method as it does not depend
on any manually built resource (e.g. WordNet)
nor controlled, e.g. aligned, corpus.
1 Introduction
Semantic Textual Similarity (STS) measures the de-
gree of semantic equivalence between two phrases
or texts. An effective method to compute similar-
ity between short texts or sentences has many appli-
cations in Natural Language Processing (Mihalcea
et al, 2006) and related areas such as Information
Retrieval, e.g. to improve the effectiveness of a se-
mantic search engine (Sahami and Heilman, 2006),
or databases, where text similarity can be used in
schema matching to solve semantic heterogeneity
(Islam and Inkpen, 2008).
STS is here modeled as a Support Vector (SV) re-
gression problem, where a SV regressor learns the
similarity function over text pairs. Regression learn-
ing has been already applied to different NLP tasks.
In (Pang and Lee, 2005) it is applied to Opinion
Mining, in particular to the rating-inference prob-
lem, wherein one must determine an author evalua-
tion with respect to a multi-point scale. In (Albrecht
and Hwa, 2007) a method is proposed for develop-
ing sentence-level MT evaluation metrics using re-
gression learning without directly relying on human
reference translations. In (Biadsy et al, 2008) it has
been used to rank candidate sentences for the task
of producing biographies from Wikipedia. Finally,
in (Becker et al, 2011) SV regressor has been used
to rank questions within their context in the multi-
modal tutorial dialogue problem.
In this paper, the semantic relatedness between
two sentences is modeled as a combination of dif-
ferent similarity functions, each describing the anal-
ogy between the two texts according to a specific
semantic perspective: in this way, we aim at captur-
ing syntactic and lexical equivalences between sen-
tences and exploiting either topical relatedness or
paradigmatic similarity between individual words.
The variety of semantic evidences that a system can
employ here grows quickly, according to the genre
and complexity of the targeted sentences. We thus
propose to combine such a body of evidence to learn
a comprehensive scoring function y = f(~x) over in-
dividual measures from labeled data through SV re-
gression: y is the gold similarity score (provided by
human annotators), while ~x is the vector of the dif-
ferent individual scores, provided by the chosen sim-
ilarity functions. The regressor objective is to learn
the proper combination of different functions redun-
dantly applied in an unsupervised fashion, without
involving any in-depth description of the target do-
main or prior knowledge. The resulting function se-
lects and filters the most useful information and it
597
is a highly portable method. In fact, it does not de-
pend on manually built resources (e.g. WordNet),
but mainly exploits distributional analysis of unla-
beled corpora.
In Section 2, the employed similarity functions
are described and the application of SV regression
is presented. Finally, Section 3 discusses results on
the SemEval 2012 - Task 6.
2 Combining different similarity function
through SV regression
This section describes the UNITOR systems partic-
ipating to the SemEval 2012 Task 6: in Section 2.1
the different similarity functions between sentence
pairs are discussed, while Section 2.2 describes how
the SV regression learning is applied.
2.1 STS functions
Each STS depends on a variety of linguistic aspects
in data, e.g. syntactic or lexical information. While
their supervised combination can be derived through
SV regression, different unsupervised estimators of
STS exist.
Lexical Overlap (LO). A basic similarity function
is first employed as the lexical overlap between sen-
tences, i.e. the cardinality of the set of words occur-
ring in both sentences.
Document-oriented similarity based on Latent
Semantic Analysis (LSA). This function captures
latent semantic topics through LSA. The adjacency
terms-by-documents matrix is first acquired through
the distributional analysis of a corpus and reduced
through the application of Singular Value Decom-
position (SVD), as described in (Landauer and Du-
mais, 1997). In this work, the individual sentences
are assumed as pseudo documents and represented
by vectors in the lower dimensional LSA space. The
cosine similarity between vectors of a sentence pair
is the metric hereafter referred to as topical similar-
ity.
Compositional Distributional Semantics (CDS).
Lexical similarity can also be extended to account
for syntactic compositions between words. This
makes sentence similarity to depend on the set of in-
dividual compounds, e.g. subject-verb relationship
instances. While basic lexical information can still
be obtained by distributional analysis, phrase level
Figure 1: Example of dependency graph
similarity can be here modeled as a specific func-
tion of the co-occurring words, i.e. a complex alge-
braic composition of their corresponding word vec-
tors. Differently from the document-oriented case
used in the LSA function, base lexical vectors are
here derived from co-occurrence counts in a word
space, built according to the method discussed in
(Sahlgren, 2006; Croce and Previtali, 2010). In or-
der to keep dimensionality as low as possible, SVD
is also applied here (Annesi et al, 2012). The result
is that every noun, verb, adjective and adverb is then
projected in the reduced word space and then dif-
ferent composition functions can be applied as dis-
cussed in (Mitchell and Lapata, 2010) or (Annesi et
al., 2012).
Convolution kernel-based similarity. The similar-
ity function is here the Smoothed Partial Tree Ker-
nel (SPTK) proposed in (Croce et al, 2011). This
convolution kernel estimates the similarity between
sentences, according to the syntactic and lexical in-
formation in both sentences. Syntactic representa-
tion of a sentence like ?A man is riding a bicycle? is
derived from the dependency parse tree, as shown
in Fig. 1. It allows to define different tree struc-
tures over which the SPTK operates. First, a tree
including only lexemes, where edges encode their
dependencies, is generated and called Lexical Only
Centered Tree (LOCT), see Fig. 2. Then, we add
to each lexical node two leftmost children, encod-
ing the grammatical function and the POS-Tag re-
spectively: it is the so-called Lexical Centered Tree
(LCT), see Fig. 3. Finally, we generate the Gram-
matical Relation Centered Tree (GRCT), see Fig.
4, by setting grammatical relation as non-terminal
nodes, while PoS-Tags are pre-terminals and fathers
of their associated lexemes. Each tree representation
provides a different kernel function so that three dif-
ferent SPTK similarity scores, i.e. LOCT, LCT and
GRCT, are here obtained.
598
be::v
ride::v
bicycle::n
a::d
man::n
a::d
Figure 2: Lexical Only Centered Tree (LOCT)
be::v
VBZROOTride::v
VBGVCbicycle::n
NNOBJa::d
DTNMOD
man::n
NNSBJa::d
DTNMOD
Figure 3: Lexical Centered Tree (LCT)
ROOT
VC
OBJ
NN
bicycle::n
NMOD
DT
a::d
VBG
ride::v
VBZ
be::v
SBJ
NN
man::n
NMOD
DT
a::d
Figure 4: Grammatical Relation Centered Tree (GRCT)
2.2 Combining STSs with SV Regression
The similarity functions described above provide
scores capturing different linguistic aspects and an
effective way to combine such information is made
available by Support Vector (SV) regression, de-
scribed in (Smola and Scho?lkopf, 2004). The idea
is to learn a higher level model by weighting scores
according to specific needs implicit in training data.
Given similarity scores ~xi for the i-th sentence pair,
the regressor learns a function yi = f(~xi), where yi
is the score provided by human annotators.
The ?-SV regression (Vapnik, 1995) algorithm al-
lows to define the best f approximating the train-
ing data, i.e. the function that has at most ? de-
viation from the actually obtained targets yi for
all the training data. Given a training dataset
{(~x1, y1), . . . , (~xl, yl)} ? X ? R, where X is the
space of the input patterns, i.e. the original similar-
ity scores, we can acquire a linear function
f(~x) = ?~w, ~x?+ b with ~w ? X, b ? R
by solving the following optimization problem:
minimize
1
2
||~w||2
subject to
{
yi ? ?~w, ~xi? ? b ? ?
?~w, ~xi?+ b? yi ? ?
Since the function f approximating all pairs
(~xi, yi) with ? precision, may not exist, i.e. the con-
vex optimization problem is infeasible, slack vari-
ables ?i, ??i are introduced:
minimize
1
2
||~w||2 + C
l?
i=1
(?i + ?
?
i )
subject to
?
??
??
yi ? ?~w, ~xi? ? b ? ?+ ?i
?~w, ~xi?+ b? yi ? ?+ ??i
?i, ??i ? 0
where ?i, ??i measure the error introduced by training
data with a deviation higher than ? and the constant
C > 0 determines the trade-off between the norm
?~w? and the amount up to which deviations larger
than ? are tolerated.
3 Experimental Evaluation
This section describes results obtained in the Se-
mEval 2012 Task 6: STS. First, the experimental
setup of different similarity functions is described.
Then, results obtained over training datasets are re-
ported. Finally, results achieved in the competition
are discussed.
3.1 Experimental setup
In order to estimate the Latent Semantic Analysis
(LSA) based similarity function, the distributional
analysis of the English version of the Europarl Cor-
pus (Koehn, 2002) has been carried out. It is the
same source corpus of the SMTeuroparl dataset and
it allows to acquire a semantic space capturing the
same topics characterizing this dataset. A word-by-
sentence matrix models the sentence representation
space. The entire corpus has been split so that each
vector represents a sentence: the number of different
sentences is about 1.8 million and the matrix cells
contain tf-idf scores between words and sentences.
The SVD is applied and the space dimensionality
599
is reduced to k = 250. Novel sentences are im-
mersed in the reduced space, as described in (Lan-
dauer and Dumais, 1997) and the LSA-based simi-
larity between two sentences is estimated according
the cosine similarity.
To estimate the Compositional Distributional Se-
mantics (CDS) based function, a co-occurrence
Word Space is first acquired through the distribu-
tional analysis of the UKWaC corpus (Baroni et al,
2009), i.e. a Web document collection made of
about 2 billion tokens. UKWaC is larger than the
Europarl corpus and we expect it makes available
a more general lexical representation suited for all
datasets. An approach similar to the one described in
(Croce and Previtali, 2010) has been adopted for the
acquisition of the word space. First, all words occur-
ring more than 200 times (i.e. the targets) are rep-
resented through vectors. The original space dimen-
sions are generated from the set of the 20,000 most
frequent words (i.e. features) in the UKWaC cor-
pus. One dimension describes the Pointwise Mutual
Information score between one feature as it occurs
on a left or right window of 3 tokens around a target.
Left contexts of targets are treated differently from
the right ones, in order to also capture asymmetric
syntactic behaviors (e.g., useful for verbs): 40,000
dimensional vectors are thus derived for each target.
The particularly small window size allows to better
capture paradigmatic relations between targets, e.g.
hyponymy or synonymy. Again, the SVD reduction
is applied to the original matrix with a k = 250.
Once lexical vectors are available, a compositional
similarity measure can be obtained by combining
the word vectors according to a CDS operator, e.g.
(Mitchell and Lapata, 2010) or (Annesi et al, 2012).
In this work, the adopted compositional representa-
tion is the additive operator between lexical vectors,
as described in (Mitchell and Lapata, 2010) and the
similarity function between two sentences is the co-
sine similarity between their corresponding compo-
sitional vectors. Moreover, two additive operators
that only sum over nouns and verbs are also adopted,
denoted by CDSV and CDSN , respectively.
The estimation of the semantically Smoothed Par-
tial Tree Kernel (SPTK) is made available by an ex-
tended version of SVM-LightTK software1 (Mos-
1http://disi.unitn.it/moschitti/Tree-Kernel.htm
chitti, 2006) implementing the smooth matching be-
tween tree nodes. The tree representation described
in Sec. 2.1 allows to define 3 different kernels, i.e.
SPTKLOCT , SPTKLCT and SPTKGRCT . Similarity
between lexical nodes is estimated as the cosine sim-
ilarity in the co-occurrence Word Space described
above, as in (Croce et al, 2011).
In all corpus analysis and experiments, sentences
are processed with the LTH dependency parser, de-
scribed in (Johansson and Nugues, 2007), for Part-
of-speech tagging and lemmatization. Dependency
parsing of datasets is required for the SPTK appli-
cation. Finally, SVM-LightTK is employed for the
SV regression learning to combine specific similar-
ity functions.
3.2 Evaluating the impact of unsupervised
models
Table 1 compares the Pearson Correlation of differ-
ent similarity functions described in Section 2.1, i.e.
mainly the results of the unsupervised approaches,
against the challenge training data. Regarding to
MSRvid dataset, the topical similarity (LSA func-
tion) achieves the best result, i.e. 0.748. Paradig-
matic lexical information as in CDS, CDSN and LO
provides also good results, confirming the impact of
lexical generalization. However, only nouns seem
to contribute significantly, as for the poor results of
CDSV suggest. As the dataset is characterized by
short sentences with negligible syntactic differences,
SPTK-based kernels are not discriminant. On the
contrary, the SPTKLCT achieves the best result in
the MSRpar dataset, where paraphrasing phenom-
ena are peculiar. Notice that the other SPTK kernels
are not equivalently performant, in line with previ-
ous results on question classification and semantic
role labeling (Croce et al, 2011). Lexical informa-
tion provides a crucial contribution also for LO, al-
though the contribution of topical or paradigmatic
generalization seems negligible over MSRpar. Fi-
nally, in the SMTeuroparl, longer sentences are the
norm and length seems to compromise the perfor-
mance of LO. The best results seem to require the
lexical and syntactic information provided by CDS
and SPTK.
600
Models
Dataset
MSRvid MSRpar SMTeuroparl
CDS .652 .393 .681
CDSN .630 .234 .485
CDSV .219 .317 .264
LSA .748 .344 .477
SPTKLOCT .300 .251 .611
SPTKLCT .297 .464 .622
SPTKGRCT .278 .255 .626
LO .560 .446 .248
Table 1: Unsupervised results over the training dataset
3.3 Evaluating the role of SV regression
The SV regressors have been trained over a feature
space that enumerates the different similarity func-
tions: one feature is provided by the LSA function,
three by the CDS, i.e. CDS, CDSN and CDSV ,
three by SPTK, i.e. SPTKLOCT , SPTKLCT and
SPTKGRCT and one by LO, i.e. the number of
words in common. Two more features are obtained
by the sentence lengths of a pair, i.e. the number
of words in the first and second sentence, respec-
tively. Table 2 shows Pearson Correlation results
when the regressor is trained according a 10-fold
cross validation schema. First, all possible feature
combinations are attempted for the SV regression,
so that every subset of the 10 features is evaluated.
Results of the best feature combination are shown in
column bestfeat: for MSRvid, the best performance
is achieved when all 10 features are considered; in
MSRpar, SPTK combined with LO is sufficient; fi-
nally, in the SMTeuroparl the combination is LO,
CDS and SPTK. In column allfeat results achieved
by considering all features are reported. Last col-
umn specifies the performance increase with respect
to the corresponding best results in the unsupervised
settings.
Results of the regressors are always higher with
respect to the unsupervised settings, with up to a
35% improvement for the MSRpar, i.e. the most
complex domain. Moreover, differences when best
and all features are employed are negligible. It
means that SV regressor allows to automatically
combine and select the most informative similarity
aspects, confirming the applicability of the proposed
redundant approach to STS.
Dataset
Experiments
Gain
bestfeat allfeat
MSRvid .789 .789 5,0%
MSRpar .615 .612 32,4%
SMTeuroparl .692 .691 1,6%
Table 2: SV regressor results over the training dataset
3.4 Results over the SemEval Task 6
According to the above evidence, we participated to
the SemEval challenge with three different systems.
Sys1 - Best Features. Scores between pairs from a
specific dataset are obtained by applying a regressor
trained over pairs from the same dataset. It means
that, for example, the test pairs from the MSRvid
dataset are processed with a regressor trained over
the MSRvid training data. Moreover, the most rep-
resentative similarity function estimated for the col-
lection is employed: the feature combination provid-
ing the best correlation results over training pairs is
adopted for the test. The same is applied to MSRpar
and SMTeuroparl. No selection is adopted for the
Surprise data and training data for all the domains
are used, as described in Sys3.
Sys2 - All Features. Relatedness scores between
pairs from a specific dataset are obtained using a re-
gressor trained using pairs from the same dataset.
Differently from the Sys1, the similarity function
here is employed within the SV regressors trained
over all 10 similarity functions (i.e. all features).
Sys3 - All features and All domains. The SV re-
gressor is trained using training pairs from all col-
lections and over all 10 features. It means that one
single model is trained and employed to score all
test data. This approach is also used for the Surprise
data, i.e. the OnWN and SMTnews datasets.
Table 3 reports the general outcome for the UN-
ITOR systems. Rank of the individual scores with
respect to the other systems participating to the chal-
lenge is reported in parenthesis. This allows to draw
some conclusions. First, the proposed system ranks
around the 12 and 13 system positions (out of 89
systems), and the 6th group. The adoption of all pro-
posed features suggests that more evidence is better,
as it can be properly modeled by regression. It seems
generally better suited for the variety of semantic
phenomena observed in the tests. Regressors seem
601
Dataset
Results
BL Sys1 Sys2 Sys3
MSRvid .299 .821 .821 .802
MSRpar .433 .569 .576 .468
SMTeuroparl .454 .516 .510 .457
surp.OnWN .586 .659
surp.SMTnews .390 .471
ALL .311 .747 (13) .747 (12) .628 (40)
ALLnrm .673 .829 (12) .830 (11) .815 (21)
Mean .436 .632 (10) .632 ( 9) .594 (28)
Table 3: Results over the challenge test dataset
to be robust enough to select the proper features and
make the feature selection step (through collection
specific cross-validation) useless. Collection spe-
cific training seems useful, as Sys3 achieves lower
results, basically due to the significant stylistic dif-
ferences across the collections. However, the good
level of accuracy achieved over the surprise data sets
(between 11% and 17% performance gain with re-
spect to the baselines) confirms the large applica-
bility of the overall technique: our system in fact
does not depend on any manually coded resource
(e.g. WordNet) nor on any controlled (e.g. parallel
or aligned) corpus. Future work includes the study
of the learning rate and its correlation with differ-
ent and richer similarity functions, e.g. CDS as in
(Annesi et al, 2012).
Acknowledgements This research is partially
supported by the European Community?s Sev-
enth Framework Programme (FP7/2007-2013) un-
der grant numbers 262491 (INSEARCH). Many
thanks to the reviewers for their valuable sugges-
tions.
References
Joshua Albrecht and Rebecca Hwa. 2007. Regression for
sentence-level mt evaluation with pseudo references.
In Proceedings of ACL, pages 296?303, Prague, Czech
Republic, June.
Paolo Annesi, Valerio Storch, and Roberto Basili. 2012.
Space projections as distributional models for seman-
tic composition. In CICLing (1), Lecture Notes in
Computer Science, pages 323?335. Springer.
Marco Baroni, Silvia Bernardini, Adriano Ferraresi, and
Eros Zanchetta. 2009. The wacky wide web: a
collection of very large linguistically processed web-
crawled corpora. Language Resources and Evalua-
tion, 43(3):209?226.
Lee Becker, Martha Palmer, Sarel van Vuuren, and
Wayne Ward. 2011. Evaluating questions in context.
Fadi Biadsy, Julia Hirschberg, and Elena Filatova. 2008.
An unsupervised approach to biography production
using wikipedia. In ACL, pages 807?815.
Danilo Croce and Daniele Previtali. 2010. Manifold
learning for the semi-supervised induction of framenet
predicates: An empirical investigation. In Proceed-
ings of the GEMS 2010 Workshop, pages 7?16, Upp-
sala, Sweden.
Danilo Croce, Alessandro Moschitti, and Roberto Basili.
2011. Structured lexical similarity via convolution
kernels on dependency trees. In Proceedings of
EMNLP, Edinburgh, Scotland, UK.
Aminul Islam and Diana Inkpen. 2008. Semantic
text similarity using corpus-based word similarity and
string similarity. ACM Trans. Knowl. Discov. Data,
2:10:1?10:25, July.
Richard Johansson and Pierre Nugues. 2007. Semantic
structure extraction using nonprojective dependency
trees. In Proceedings of SemEval-2007, Prague, Czech
Republic, June 23-24.
P. Koehn. 2002. Europarl: A multilingual corpus for
evaluation of machine translation. Draft.
Thomas K Landauer and Susan T. Dumais. 1997. A so-
lution to platos problem: The latent semantic analysis
theory of acquisition, induction, and representation of
knowledge. Psychological review, pages 211?240.
Rada Mihalcea, Courtney Corley, and Carlo Strapparava.
2006. Corpus-based and knowledge-based measures
of text semantic similarity. In In AAAI06.
Jeff Mitchell and Mirella Lapata. 2010. Composition in
distributional models of semantics. Cognitive Science,
34(8):1388?1429.
Alessandro Moschitti. 2006. Efficient convolution ker-
nels for dependency and constituent syntactic trees. In
Proceedings of ECML?06, pages 318?329.
Bo Pang and Lillian Lee. 2005. Seeing stars: Exploiting
class relationships for sentiment categorization with
respect to rating scales. In Proceedings of the ACL.
Mehran Sahami and Timothy D. Heilman. 2006. A web-
based kernel function for measuring the similarity of
short text snippets. In Proceedings of the 15th inter-
national conference on World Wide Web, WWW ?06,
pages 377?386, New York, NY, USA. ACM.
Magnus Sahlgren. 2006. The Word-Space Model. Ph.D.
thesis, Stockholm University.
Alex J. Smola and Bernhard Scho?lkopf. 2004. A tutorial
on support vector regression. Statistics and Comput-
ing, 14(3):199?222, August.
Vladimir N. Vapnik. 1995. The Nature of Statistical
Learning Theory. Springer?Verlag, New York.
602
