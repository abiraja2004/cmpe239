Proceedings of the 51st Annual Meeting of the Association for Computational Linguistics, pages 183?189,
Sofia, Bulgaria, August 4-9 2013. c?2013 Association for Computational Linguistics
Accurate Word Segmentation using Transliteration
and Language Model Projection
Masato Hagiwara Satoshi Sekine
Rakuten Institute of Technology, New York
215 Park Avenue South, New York, NY
{masato.hagiwara, satoshi.b.sekine}@mail.rakuten.com
Abstract
Transliterated compound nouns not
separated by whitespaces pose diffi-
culty on word segmentation (WS). Of-
fline approaches have been proposed to
split them using word statistics, but
they rely on static lexicon, limiting
their use. We propose an online ap-
proach, integrating source LM, and/or,
back-transliteration and English LM.
The experiments on Japanese and Chi-
nese WS have shown that the pro-
posed models achieve significant im-
provement over state-of-the-art, reduc-
ing 16% errors in Japanese.
1 Introduction
Accurate word segmentation (WS) is the
key components in successful language pro-
cessing. The problem is pronounced in lan-
guages such as Japanese and Chinese, where
words are not separated by whitespaces. In
particular, compound nouns pose difficulties
to WS since they are productive, and often
consist of unknown words.
In Japanese, transliterated foreign com-
pound words written in Katakana are ex-
tremely difficult to split up into components
without proper lexical knowledge. For ex-
ample, when splitting a compound noun ?
???????? burakisshureddo, a traditional
word segmenter can easily segment this as ?
???/????? ?*blacki shred? since ????
? shureddo ?shred? is a known, frequent word.
It is only the knowledge that ????buraki
(*?blacki?) is not a valid word which prevents
this. Knowing that the back-transliterated un-
igram ?blacki? and bigram ?blacki shred? are
unlikely in English can promote the correct
WS, ??????/??? ?blackish red?. In Chi-
nese, the problem can be more severe since
the language does not have a separate script
to represent transliterated words.
Kaji and Kitsuregawa (2011) tackled
Katakana compound splitting using back-
transliteration and paraphrasing. Their ap-
proach falls into an offline approach, which
focuses on creating dictionaries by extract-
ing new words from large corpora separately
before WS. However, offline approaches have
limitation unless the lexicon is constantly
updated. Moreover, they only deal with
Katakana, but their method is not directly ap-
plicable to Chinese since the language lacks a
separate script for transliterated words.
Instead, we adopt an online approach, which
deals with unknown words simultaneously as
the model analyzes the input. Our ap-
proach is based on semi-Markov discrimina-
tive structure prediction, and it incorporates
English back-transliteration and English lan-
guage models (LMs) into WS in a seamless
way. We refer to this process of transliterat-
ing unknown words into another language and
using the target LM as LM projection. Since
the model employs a general transliteration
model and a general English LM, it achieves
robust WS for unknown words. To the best
of our knowledge, this paper is the first to use
transliteration and projected LMs in an online,
seamlessly integrated fashion for WS.
To show the effectiveness of our approach,
we test our models on a Japanese balanced cor-
pus and an electronic commerce domain cor-
pus, and a balanced Chinese corpus. The re-
sults show that we achieved a significant im-
provement in WS accuracy in both languages.
2 Related Work
In Japanese WS, unknown words are usu-
ally dealt with in an online manner with the
unknown word model, which uses heuristics
183
depending on character types (Kudo et al,
2004). Nagata (1999) proposed a Japanese un-
known word model which considers PoS (part
of speech), word length model and orthog-
raphy. Uchimoto et al (2001) proposed a
maximum entropy morphological analyzer ro-
bust to unknown words. In Chinese, Peng et
al. (2004) used CRF confidence to detect new
words.
For offline approaches, Mori and Nagao
(1996) extracted unknown word and estimated
their PoS from a corpus through distributional
analysis. Asahara and Matsumoto (2004)
built a character-based chunking model using
SVM for Japanese unknown word detection.
Kaji and Kitsuregawa (2011)?s approach is
the closest to ours. They built a model
to split Katakana compounds using back-
transliteration and paraphrasing mined from
large corpora. Nakazawa et al (2005) is
a similar approach, using a Ja-En dictionary
to translate compound components and check
their occurrence in an English corpus. Sim-
ilar approaches are proposed for other lan-
guages, such as German (Koehn and Knight,
2003) and Urdu-Hindi (Lehal, 2010). Correct
splitting of compound nouns has a positive ef-
fect on MT (Koehn and Knight, 2003) and IR
(Braschler and Ripplinger, 2004).
A similar problem can be seen in Korean,
German etc. where compounds may not be
explicitly split by whitespaces. Koehn and
Knight (2003) tackled the splitting problem in
German, by using word statistics in a mono-
lingual corpus. They also used the informa-
tion whether translations of compound parts
appear in a German-English bilingual corpus.
Lehal (2010) used Urdu-Devnagri translitera-
tion and a Hindi corpus for handling the space
omission problem in Urdu compound words.
3 Word Segmentation Model
Out baseline model is a semi-Markov struc-
ture prediction model which estimates WS and
the PoS sequence simultaneously (Kudo et al,
2004; Zhang and Clark, 2008). This model
finds the best output y? from the input sen-
tence string x as: y? = argmaxy?Y (x) w ??(y).
Here, Y (x) denotes all the possible sequences
of words derived from x. The best analysis is
determined by the feature function ?(y) the
ID Feature ID Feature
1 wi 13 w1i?1w1i
2 t1i 14 t1i?1t1i
3* t1i t2i 15* t1i?1t2i?1t1i t2i
4* t1i t2i t3i 16* t1i?1t2i?1t3i?1t1i t2i t3i
5* t1i t2i t5i t6i 17* t1i?1t2i?1t5i?1t6i?1t1i t2i t5i t6i
6* t1i t2i t6i 18* t1i?1t2i?1t6i?1t1i t2i t6i
7 wit1i 19 ?LMS1 (wi)
8* wit1i t2i 20 ?LMS2 (wi?1, wi)
9* wit1i t2i t3i 21 ?LMP1 (wi)
10* wit1i t2i t5i t6i 22 ?LMP2 (wi?1, wi)
11* wit1i t2i t6i
12 c(wi)l(wi)
Table 1: Features for WS & PoS tagging
weight vector w. WS is conducted by stan-
dard Viterbi search based on lattice, which
is illustrated in Figure 1. We limit the fea-
tures to word unigram and bigram features,
i.e., ?(y) = ?i[?1(wi) + ?2(wi?1, wi)] for y =
w1...wn. By factoring the feature function into
these two subsets, argmax can be efficiently
searched by the Viterbi algorithm, with its
computational complexity proportional to the
input length. We list all the baseline features
in Table 11. The asterisks (*) indicate the fea-
ture is used for Japanese (JA) but not for Chi-
nese (ZH) WS. Here, wi and wi?1 denote the
current and previous word in question, and tji
and tji?1 are level-j PoS tags assigned to them.
l(w) and c(w) are the length and the set of
character types of word w.
If there is a substring for which no dic-
tionary entries are found, the unknown word
model is invoked. In Japanese, our unknown
word model relies on heuristics based on char-
acter types and word length to generate word
nodes, similar to that of MeCab (Kudo et
al., 2004). In Chinese, we aggregated con-
secutive 1 to 4 characters add them as ?n
(common noun)?, ?ns (place name)?, ?nr (per-
sonal name)?, and ?nz (other proper nouns),?
since most of the unknown words in Chinese
are proper nouns. Also, we aggregated up to
20 consecutive numerical characters, making
them a single node, and assign ?m? (number).
For other character types, a single node with
PoS ?w (others)? is created.
1The Japanese dictionary and the corpus we used
have 6 levels of PoS tag hierarchy, while the Chinese
ones have only one level, which is why some of the
PoS features are not included in Chinese. As character
type, Hiragana (JA), Katakana (JA), Latin alphabet,
Number, Chinese characters, and Others, are distin-
guished. Word length is in Unicode.
184
Input: ? ? ? ? ? ? ? ? ? ? ? ? ?
? ? ? ? ? ?
?
? ?
? ?
? ? ? EOS? ? ? ?
? ? ? ? ?? ? ? ?
? ? ?
. . . 
. . . 
? ? ?
? ? ?
? ? ? ?
?BOS
very  popular       color                     blackish                            red
bu ki
bla bra kish
brakiblaki
brakiblaki
brackishblackish
ledreadred
shreadshred
node (a)
node (b)
edge (c)
TransliterationModel
English
LM
Figure 1: Example lattice with LM projection
4 Use of Language Model
Language Model Augmentation Analo-
gous to Koehn and Knight (2003), we can ex-
ploit the fact that ??? reddo (red) in the
example ????????? is such a common
word that one can expect it appears frequently
in the training corpus. To incorporate this
intuition, we used log probability of n-gram
as features, which are included in Table 1
(ID 19 and 20): ?LMS1 (wi) = log p(wi) and
?LMS2 (wi?1, wi) = log p(wi?1, wi). Here the
empirical probability p(wi) and p(wi?1, wi) are
computed from the source language corpus. In
Japanese, we applied this source language aug-
mentation only to Katakana words. In Chi-
nese, we did not limit the target.
4.1 Language Model Projection
As we mentioned in Section 2, English
LM knowledge helps split transliterated com-
pounds. We use (LM) projection, which is
a combination of back-transliteration and an
English model, by extending the normal lat-
tice building process as follows:
Firstly, when the lattice is being built, each
node is back-transliterated and the resulting
nodes are associated with it, as shown in
Figure 1 as the shaded nodes. Then, edges
are spanned between these extended English
nodes, instead of between the original nodes,
by additionally taking into consideration En-
glish LM features (ID 21 and 22 in Table 1):
?LMP1 (wi) = log p(wi) and ?LMP2 (wi?1, wi) =
log p(wi?1, wi). Here the empirical probabil-
ity p(wi) and p(wi?1, wi) are computed from
the English corpus. For example, Feature 21
is set to ?LMP1 (?blackish?) for node (a), to
?LMP1 (?red?) for node (b), and Feature 22 is
set to ?LMP2 (?blackish?, ?red?) for edge (c) in
Figure 1. If no transliterations were generated,
or the n-grams do not appear in the English
corpus, a small frequency ? is assumed.
Finally, the created edges are traversed from
EOS, and associated original nodes are chosen
as the WS result. In Figure 1, the bold edges
are traversed at the final step, and the corre-
sponding nodes ?? - ?? - ? - ??????-
???? are chosen as the final WS result.
For Japanese, we only expand and project
Katakana noun nodes (whether they are
known or unknown words) since transliterated
words are almost always written in Katakana.
For Chinese, only ?ns (place name)?, ?nr (per-
sonal name)?, and ?nz (other proper noun)?
nodes whose surface form is more than 1-
character long are transliterated. As the En-
glish LM, we used Google Web 1T 5-gram Ver-
sion 1 (Brants and Franz, 2006), limiting it to
unigrams occurring more than 2000 times and
bigrams occurring more than 500 times.
5 Transliteration
For transliterating Japanese/Chinese words
back to English, we adopted the Joint Source
Channel (JSC) Model (Li et al, 2004), a gen-
erative model widely used as a simple yet pow-
erful baseline in previous research e.g., (Hagi-
wara and Sekine, 2012; Finch and Sumita,
2010).2 The JSC model, given an input
of source word s and target word t, de-
fines the transliteration probability based on
transliteration units (TUs) ui = ?si, ti? as:
PJSC(?s, t?) =
?f
i=1 P (ui|ui?n+1, ..., ui?1),
where f is the number of TUs in a given source
/ target word pair. TUs are atomic pair units
of source / target words, such as ?la/?? and
?ish/????. The TU n-gram probabilities are
learned from a training corpus by following it-
erative updates similar to the EM algorithm3.
In order to generate transliteration candidates,
we used a stack decoder described in (Hagi-
wara and Sekine, 2012). We used the training
data of the NEWS 2009 workshop (Li et al,
2009a; Li et al, 2009b).
As reference, we measured the performance
on its own, using NEWS 2009 (Li et al, 2009b)
data. The percentage of correctly transliter-
ated words are 37.9% for Japanese and 25.6%
2Note that one could also adopt other generative /
discriminative transliteration models, such as (Jiampo-
jamarn et al, 2007; Jiampojamarn et al, 2008).
3We only allow TUs whose length is shorter than or
equal to 3, both in the source and target side.
185
for Chinese. Although the numbers seem low
at a first glance, Chinese back-transliteration
itself is a very hard task, mostly because
Chinese phonology is so different from En-
glish that some sounds may be dropped when
transliterated. Therefore, we can regard this
performance as a lower bound of the translit-
eration module performance we used for WS.
6 Experiments
6.1 Experimental Settings
Corpora For Japanese, we used (1) EC
corpus, consists of 1,230 product titles and
descriptions randomly sampled from Rakuten
(Rakuten-Inc., 2012). The corpus is manually
annotated with the BCCWJ style WS (Ogura
et al, 2011). It consists of 118,355 tokens, and
has a relatively high percentage of Katakana
words (11.2%). (2) BCCWJ (Maekawa, 2008)
CORE (60,374 sentences, 1,286,899 tokens,
out of which approx. 3.58% are Katakana
words). As the dictionary, we used UniDic
(Den et al, 2007). For Chinese, we used
LCMC (McEnery and Xiao, 2004) (45,697 sen-
tences and 1,001,549 tokens). As the dictio-
nary, we used CC-CEDICT (MDGB, 2011)4.
Training and Evaluation We used Aver-
aged Perceptron (Collins, 2002) (3 iterations)
for training, with five-fold cross-validation. As
for the evaluation metrics, we used Precision
(Prec.), Recall (Rec.), and F-measure (F). We
additionally evaluated the performance lim-
ited to Katakana (JA) or proper nouns (ZH)
in order to see the impact of compound split-
ting. We also used word error rate (WER) to
see the relative change of errors.
6.2 Japanese WS Results
We compared the baseline model, the
augmented model with the source language
(+LM-S) and the projected model (+LM-P).
Table 3 shows the result of the proposed mod-
els and major open-source Japanese WS sys-
tems, namely, MeCab 0.98 (Kudo et al, 2004),
JUMAN 7.0 (Kurohashi and Nagao, 1994),
4Since the dictionary is not explicitly annotated
with PoS tags, we firstly took the intersection of the
training corpus and the dictionary words, and assigned
all the possible PoS tags to the words which appeared
in the corpus. All the other words which do not appear
in the training corpus are discarded.
and KyTea 0.4.2 (Neubig et al, 2011) 5. We
observed slight improvement by incorporat-
ing the source LM, and observed a 0.48 point
F-value increase over baseline, which trans-
lates to 4.65 point Katakana F-value change
and 16.0% (3.56% to 2.99 %) WER reduc-
tion, mainly due to its higher Katakana word
rate (11.2%). Here, MeCab+UniDic achieved
slightly better Katakana WS than the pro-
posed models. This may be because it is
trained on a much larger training corpus (the
whole BCCWJ). The same trend is observed
for BCCWJ corpus (Table 2), where we gained
statistically significant 1 point F-measure in-
crease on Katakana word.
Many of the improvements of +LM-S over
Baseline come from finer grained splitting,
for example, * ?????? reinsuutsu ?rain
suits? to ???/???, while there is wrong
over-splitting, e.g., ???????terekyasutaa
?Telecaster? to * ??/?????. This type of
error is reduced by +LM-P, e.g., * ???/??
? purasu chikku ?*plus tick? to ??????
purasuchikku ?plastic? due to LM projection.
+LM-P also improved compounds whose com-
ponents do not appear in the training data,
such as * ???????? ruukasufirumu to
????/???? ?Lucus Film.? Indeed, we
randomly extracted 30 Katakana differences
between +LM-S and +LM-P, and found out
that 25 out of 30 (83%) are true improvement.
One of the proposed method?s advantages is
that it is very robust to variations, such as
?????????? akutibeitiddo ?activated,?
even though only the original form, ?????
?? akutibeito ?activate? is in the dictionary.
One type of errors can be attributed
to non-English words such as ??????
sunokobeddo, which is a compound of Japanese
word ??? sunoko ?duckboard? and an En-
glish word ??? beddo ?bed.?
6.3 Chinese WS Results
We compare the results on Chinese WS,
with Stanford Segmenter (Tseng et al, 2005)
(Table 4) 6. Including +LM-S decreased the
5Because MeCab+UniDic and KyTea models are
actually trained on BCCWJ itself, this evaluation is
not meaningful but just for reference. The WS granu-
larity of IPADic, JUMAN, and KyTea is also different
from the BCCWJ style.
6Note that the comparison might not be fair since
(1) Stanford segmenter?s criteria are different from
186
Model Prec. (O) Rec. (O) F (O) Prec. (K) Rec. (K) F (K) WER
MeCab+IPADic 91.28 89.87 90.57 88.74 82.32 85.41 12.87
MeCab+UniDic* (98.84) (99.33) (99.08) (96.51) (97.34) (96.92) (1.31)
JUMAN 85.66 78.15 81.73 91.68 88.41 90.01 23.49
KyTea* (81.84) (90.12) (85.78) (99.57) (99.73) (99.65) (20.02)
Baseline 96.36 96.57 96.47 84.83 84.36 84.59 4.54
+LM-S 96.36 96.57 96.47 84.81 84.36 84.59 4.54
+LM-S+LM-P 96.39 96.61 96.50 85.59 85.40 85.50 4.50
Table 2: Japanese WS Performance (%) on BCCWJ ? Overall (O) and Katakana (K)
Model Prec. (O) Rec. (O) F (O) Prec. (K) Rec. (K) F (K) WER
MeCab+IPADic 84.36 87.31 85.81 86.65 73.47 79.52 20.34
MeCab+UniDic 95.14 97.55 96.33 93.88 93.22 93.55 5.46
JUMAN 90.99 87.13 89.2 92.37 88.02 90.14 14.56
KyTea 82.00 86.53 84.21 93.47 90.32 91.87 21.90
Baseline 97.50 97.00 97.25 89.61 85.40 87.45 3.56
+LM-S 97.79 97.37 97.58 92.58 88.99 90.75 3.17
+LM-S+LM-P 97.90 97.55 97.73 93.62 90.64 92.10 2.99
Table 3: Japanese WS Performance (%) on the EC domain corpus
Model Prec. (O) Rec. (O) F (O) Prec. (P) Rec. (P) F (P) WER
Stanford Segmenter 87.06 86.38 86.72 ? ? ? 17.45
Baseline 90.65 90.87 90.76 83.29 51.45 63.61 12.21
+LM-S 90.54 90.78 90.66 72.69 43.28 54.25 12.32
+LM-P 90.90 91.48 91.19 75.04 52.11 61.51 11.90
Table 4: Chinese WS Performance (%) ? Overall (O) and Proper Nouns (P)
performance, which may be because one can-
not limit where the source LM features are
applied. This is why the result of +LM-
S+LM-P is not shown for Chinese. On the
other hand, replacing LM-S with LM-P im-
proved the performance significantly. We
found positive changes such as * ??/?
??? oumai/ersalihe to ???/???
oumaier/salihe ?Umar Saleh? and * ??/?
??? lingdao/renmandela to ???/???
lingdaoren/mandela?Leader Mandela?. How-
ever, considering the overall F-measure in-
crease and proper noun F-measure decrease
suggests that the effect of LM projection is
not limited to proper nouns but also promoted
finer granularity because we observed proper
noun recall increase.
One of the reasons which make Chinese LM
projection difficult is the corpus allows sin-
gle tokens with a transliterated part and Chi-
nese affices, e.g., ?????? makesizhuy-
izhe ?Marxists? (??? makesi ?Marx? + ?
?? zhuyizhe ?-ist (believers)?) and ???
niluohe ?Nile River? ( ?? niluo ?Nile? +
? he ?-river?). Another source of errors is
transliteration accuracy. For example, no ap-
ours, and (2) our model only uses the intersection of
the training set and the dictionary. Proper noun per-
formance for the Stanford segmenter is not shown since
it does not assign PoS tags.
propriate transliterations were generated for
??? weinasi ?Venus,? which is commonly
spelled ??? weinasi. Improving the JSC
model could improve the LM projection per-
formance.
7 Conclusion and Future Works
In this paper, we proposed a novel, on-
line WS model for the Japanese/Chinese
compound word splitting problem, by seam-
lessly incorporating the knowledge that back-
transliteration of properly segmented words
also appear in an English LM. The experi-
mental results show that the model achieves
a significant improvement over the baseline
and LM augmentation, achieving 16% WER
reduction in the EC domain.
The concept of LM projection is general
enough to be used for splitting other com-
pound nouns. For example, for Japanese per-
sonal names such as ???? Naka Riisa, if
we could successfully estimate the pronuncia-
tion Nakariisa and look up possible splits in
an English LM, one is expected to find a cor-
rect WS Naka Riisa because the first and/or
the last name are mentioned in the LM. Seek-
ing broader application of LM projection is a
future work.
187
References
Masayuki Asahara and Yuji Matsumoto. 2004.
Japanese unknown word identification by
character-based chunking. In Proceedings of
COLING 2004, pages 459?465.
Thorsten Brants and Alex Franz. 2006. Web 1T
5-gram Version 1. Linguistic Data Consortium.
Martin Braschler and B?rbel Ripplinger. 2004.
How effective is stemming and decompounding
for german text retrieval? Information Re-
trieval, pages 291?316.
Michael Collins. 2002. Discriminative training
methods for hidden markov models: theory and
experiments with perceptron algorithms. In
Proceedings of EMNLP 2012, pages 1?8.
Yasuharu Den, Toshinobu Ogiso, Hideki Ogura,
Atsushi Yamada, Nobuaki Minematsu, Kiy-
otaka Uchimoto, and Hanae Koiso. 2007.
The development of an electronic dictionary
for morphological analysis and its application
to Japanese corpus linguistics (in Japanese).
Japanese linguistics, 22:101?122.
Andrew Finch and Eiichiro Sumita. 2010. A
bayesian model of bilingual segmentation for
transliteration. In Proceedings of IWSLT 2010,
pages 259?266.
Masato Hagiwara and Satoshi Sekine. 2012. La-
tent class transliteration based on source lan-
guage origin. In Proceedings of NEWS 2012,
pages 30?37.
Sittichai Jiampojamarn, Grzegorz Kondrak, and
Tarek Sherif. 2007. Applying many-to-many
alignments and hidden markov models to letter-
to-phoneme conversion. In Proceedings of
NAACL-HLT 2007, pages 372?379.
Sittichai Jiampojamarn, Colin Cherry, and Grze-
gorz Kondrak. 2008. Joint processing and dis-
criminative training for letter-to-phoneme con-
version. In Proceedings of ACL 2008, pages
905?913.
Nobuhiro Kaji and Masaru Kitsuregawa. 2011.
Splitting noun compounds via monolingual and
bilingual paraphrasing: A study on japanese
katakana words. In Proceedings of the EMNLP
2011, pages 959?969.
Philipp Koehn and Kevin Knight. 2003. Empirical
methods for compound splitting. In Proceedings
of EACL 2003, pages 187?193.
Taku Kudo, Kaoru Yamamoto, and Yuji Mat-
sumoto. 2004. Applying conditional random
fields to Japanese morphological analysis. In
Proceedings of EMNLP 2004, pages 230?237.
Sadao Kurohashi and Makoto Nagao. 1994. Im-
provements of Japanese morphological analyzer
juman. In Proceedings of the International
Workshop on Sharable Natural Language Re-
sources, pages 22?38.
Gurpreet Singh Lehal. 2010. A word segmentation
system for handling space omission problem in
urdu script. In Proceedings of the 1st Workshop
on South and Southeast Asian Natural Language
Processing (WSSANLP), pages 43?50.
Haizhou Li, Zhang Min, and Su Jian. 2004. A
joint source-channel model for machine translit-
eration. In Proceedings of ACL 2004, pages
159?166.
Haizhou Li, A Kumaran, Vladimir Pervouchine,
and Min Zhang. 2009a. Report of news 2009
machine transliteration shared task. In Proceed-
ings of NEWS 2009, pages 1?18.
Haizhou Li, A Kumaran, Min Zhang, and Vladimir
Pervouchine. 2009b. Whitepaper of news 2009
machine transliteration shared task. In Proceed-
ings of NEWS 2009, pages 19?26.
Kikuo Maekawa. 2008. Compilation of
the Kotonoha-BCCWJ corpus (in Japanese).
Nihongo no kenkyu (Studies in Japanese),
4(1):82?95.
Anthony McEnery and Zhonghua Xiao. 2004. The
lancaster corpus of mandarin chinese: A corpus
for monolingual and contrastive language study.
In Proceedings of LREC 2004, pages 1175?1178.
MDGB. 2011. CC-CEDICT,
Retreived August, 2012 from
http://www.mdbg.net/chindict/chindict.php?
page=cedict.
Shinsuke Mori and Makoto Nagao. 1996. Word
extraction from corpora and its part-of-speech
estimation using distributional analysis. In Pro-
ceedings of COLING 2006, pages 1119?1122.
Masaaki Nagata. 1999. A part of speech estima-
tion method for Japanese unknown words using
a statistical model of morphology and context.
In Proceedings of ACL 1999, pages 277?284.
Toshiaki Nakazawa, Daisuke Kawahara, and Sadao
Kurohashi. 2005. Automatic acquisition of ba-
sic katakana lexicon from a given corpus. In
Proceedings of IJCNLP 2005, pages 682?693.
Graham Neubig, Yosuke Nakata, and Shinsuke
Mori. 2011. Pointwise prediction for robust,
adaptable Japanese morphological analysis. In
Proceedings of ACL-HLT 2011, pages 529?533.
Hideki Ogura, Hanae Koiso, Yumi Fujike, Sayaka
Miyauchi, and Yutaka Hara. 2011. Mor-
phological Information Guildeline for BCCWJ:
Balanced Corpus of Contemporary Written
188
Japanese, 4th Edition. National Institute for
Japanese Language and Linguistics.
Fuchun Peng, Fangfang Feng, and Andrew McCal-
lum. 2004. Chinese segmentation and new word
detection using conditional random fields. In
Proceedings COLING 2004.
Rakuten-Inc. 2012. Rakuten Ichiba
http://www.rakuten.co.jp/.
Huihsin Tseng, Pichuan Chang, Galen Andrew,
Daniel Jurafsky, and Christopher Manning.
2005. A conditional random field word seg-
menter. In Fourth SIGHAN Workshop on Chi-
nese Language Processing.
Kiyotaka Uchimoto, Satoshi Sekine, and Hitoshi
Isahara. 2001. Morphological analysis based
on a maximum entropy model ? an ap-
proach to the unknown word problem ? (in
Japanese). Journal of Natural Language Pro-
cessing, 8:127?141.
Yue Zhang and Stephen Clark. 2008. Joint word
segmentation and pos tagging using a single per-
ceptron. In Proceedings of ACL 2008, pages
888?896.
189
