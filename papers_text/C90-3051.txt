Incremental Parsing and Reason Maintenance 
Mats  Wi%n 
Depar tment  of Computer  and  In fo rmat ion  Science 
L inkSping Un ivers i ty  
S-581 83 L inkSping,  Sweden 
mgw@ida. l iu . se  
Abstract 
The purpose of this paper is to compare different 
ways of adopting reason-maintenance techniques in 
incremental parsing (and interpretation). A reason- 
maintenance system supports incremental tbrmation 
and revision of beliefs. By viewing the construction 
of partial analyses of a text as analogous to form- 
ing beliefs about the meanings of its parts, a rela- 
tion between parsing and reason maintenance can be 
conceived. In line with this, reason maintenance can 
bc used for realizing a strong notion of incremental 
parsing, allowing for revisions of previous analyses. 
Moreover, an assumption-based reason-maintenance 
system (ATMS) can be used to support eftieicnt com- 
parisons of (competing) interpretations. The paper 
argues for an approach which is an extension of chart 
parsing, but which also can be seen as a system con- 
sisting of an inference ngine (the parser proper) cou- 
pled with a simplified ATMS. 
Background 
and Introduction 
This paper focuses on the problem of incremental 
parsing (and to some extent interpretation); in par- 
ticular, how reason-maintenance techniques can be 
used to achieve a strong notion of incrementality 
allowing for piecemeal construction, revision, and 
comp;~rison of partial analyses. 
Human language understanding is apparently in- 
cremental in the sense of proceeding in a piece- 
meal fashion, (ideally) carried out in small, grad= 
ual steps as each word is encountered (Tyler and 
Marslen-Wilson 1977, Marslen-Wilson and Tyler 
1980). Work on incremental parsing and interpre- 
tation is typically motivated by a desire to model, 
or mimic, (aspects of) this behaviour, for example, 
Bobrow and Webber (1980), Ades and Steedman 
(1982), Mellish (1985), Pulman (1985), and Haddock 
(1987~ 1988~ 1990). 
tlowever, there are also clear-cut computational 
reasons for trying to attain incrernentality. Sparked 
This research as been supported by the National Swedish 
Board for Technical Development. 
off by the rapid development of increasingly power- 
ful, distributed computer hardware, a paradigm of 
"immediate computation" is gaining popularity in 
interactive applications like WYSIWYG word pro- 
cessing, spreadsheet programs, and programming- 
language ditors (Reps and Teitelbaum 1984, 1987). 
It is interesting to consider similar systems applied 
to interactive natural-language processing. The 
point is that incrementality is a prerequisite of the 
reactiw~, real~time-based behaviour of such systems. 
Furthermore, systems that mix for example deictic 
and natural-language input require that linguistic 
status be given to sentence fragments, thus demand- 
ing incremental analysis (Kobsa et al 1986). 
One body of work which appears to be usefifl in 
incremental parsing and interpretation is re ,on  (or 
truth) maintenanceJ A reason-maintenance system 
(RMS) supports incremental formation and revision 
of beliefs. By viewing the construction of partial 
analyses of a text as analogous to forming beliefs 
about the meanings of its parts, a relation between 
parsing and reason maintenance can be conceived. 
An RMS is coupled with an inference ngine (for 
example, a parser) which makes inferences within 
the problem domain, and the overall, combined sys- 
tem can be seen as an inferential problem solver. 
The RMS makes use of two data structures, nodes 
and justifications. A node represents a datum pro- 
vided by the inference ngine, such as an assumption 
or an inferred proposition. Whenever a datum is in- 
ferred from a conjunction of other data, the RMS 
records this dependency ms a justification which re- 
lates the respective nodes. The RMS thus keeps 
track of what data are believed and disbelieved, and 
why, given the inferences made so far. 
The traditional approach, justification-based rea- 
son maintenance, JTMS (Doyle 1979), is to main- 
tain a (global) belief by associating with each node 
a status of in (indicating belief in the corresponding 
datum) or out (indicating lack of belief in the da- 
tum) such that every justification is satisfied. 2 The 
entire set of (consistent) in data make up the cur- 
1 For an excellent introduction to reason maintenance, see 
Reinfrank (1989). 
2I prefer the term "reason maintenance" but use the stan- 
dard abbreviations "ATMS" and "JTMS" (where "T" stands 
for "truth" ). 
1 287  
rent context (belief, interpretation3). In case of a 
contradiction, dependency-directed backtracking is 
invoked to identify the inconsistent assumptions and 
enable retraction of some of them. 
A more recent approach is assumption-based rea- 
son maintenance, ATMS (de Kleer 1986), which sup- 
ports problem solving in multiple contexts simul- 
taneously .... there is no need to keep the over- 
all database consistent as in the JTMS. Thus, 
the ATMS is oriented towards finding all solutions, 
whereas a JTMS is oriented towards finding only 
one solution. In this and other respects, an ATMS 
resembles chart parsing (Kay 1980, Thompson and 
Ritchie 1984), something which will be further dealt 
with below. Each ATMS node has a label with in- 
formation about the minimal sets of assumptions on 
which it ultimately depends. Thus, rather than as- 
sociating explicit in/out information with nodes, the 
status of a node with respect o a context can be de- 
termined by comparing the label of the node with 
the assumptions that underlie the context. There is 
no dependency-directed backtracking in an ATMS 
since contradictions do not pose any problem and 
the assumptions underlying a contradiction are di- 
rectly identifiable. 
The rest of this paper is organized as follows: Sec- 
tions 2 and 3 review and compare various ways of 
adopting JTMS and ATMS techniques in parsing 
and interpretation. Section 4 carries on with dis- 
cussing specifically how an ATMS-style system can 
be used in various applications of incremental pars- 
ing and interpretation, and, finally, section 5 smn- 
marizes the conclusions. 
2 3TMS-Style Approaches 
2.1 Overv iew 
An early example of adopting reason maintenance in 
parsing (more precisely, story analysis) is the system 
RESUND (O'Rorke 1983). O'Rorke considers the 
problem of correcting inferences 4 that conflict with 
subsequent information in the story. He combines 
the story processor with a JTMS, using dependency- 
directed backtracking to determine incompatible as- 
sumptions, and a collection of preference heuristics 
to choose from among candidate solutions. 5 
3Sense-semantic interpretation; possibly also contextual 
interpretation. 
4 An inference here corresponds to a selection (assumption) 
of a schema, a script-like knowledge structure used for deriv- 
ing information ot explicitly mentioned in the text. 
~Other work, t tmugh not adopting downright JTMSs,  
makes use of somewhat similar techniques for the purpose 
of recovering from erroneous inferences. For example, Jacobs 
(1988), in dealing with the problem of "concretion" - -  devel- 
oping a most  specific or metaphorical  interpretation - - lets his 
system, TRUMP,  treat each interpretation as an assumption.  
If an assumed interpretation results in a contradiction, depen- 
dencies are used to discard (chains of) assumpt ions that con- 
flict with the preferred interpretation. Conflicting information 
is simply thrown away, ~hus in a sense making the system even 
More recently, Zernik and Brown (1988) suggest 
a coupling of a DCG parser with a JTMS, both of 
which are embedded in a Prolog system. The DCG 
is extended with default rules to enable nonmono- 
tonic reasoning. These defaults are used to guide 
the entire parsing and interpretation process. The 
division of labour is as follows: Given a new piece 
of input, the parser outputs an (extended) analysis 
in the form of a dependency network. This, in turn, 
is fed to the JTMS, resulting in an updated in~out 
labelling of the network corresponding to the cur- 
rently believed interpretation. The purpose of the 
JTMS is to obtain a system which avoids (chronolog- 
ical) backtracking and instead handles inconsistent 
information (ambiguities) by choosing to believe a 
different portion of the previous inferences. For ex- 
ample, in parsing a sentence like "The child sold by 
his parents was found alive" (cf. Zernik and Brown 
1988:802), the system initially assumes "the child" 
to be the agent since the "default voice" is considered 
to be "active". When later the word "by" is parsed, 
a nonmonotonic supporter of "active" becomes in, 
thus making "active" become out and "the child" be 
considered irect object. 
2.2 P rob lems 
This section dis'cusses ome general problems of 
JTMSs and JTMS-style approaches to incrementM 
parsing with special reference to the framework of 
Zernik and Brown (1988) whose notion of parsing 
comes closest o the one considered here. 
Perhaps the most important characteristic of a 
JTMS is that it insists on global consistency; in other 
words, it is limited to one single solution (one con- 
text) at a time: 
"At each point \[presumably after each new 
word\], the parser must deposit a hypothesis 
based on a partial set of clues, a hypothesis 
which might later be retracted." 
(Zernik and Brown 1986:802.) 
Unfortunately, in a domain like natural-language 
analysis where local ambiguity constantly plagues 
the parser with inconsistent information, this be- 
comes problematic. First of all, when the set of as- 
sumptions admits multiple solutions, these cannot 
be compared: since a JTMS only allows one con- 
text, there is simply no way to examine two sets of 
beliefs simultaneously in order to gauge their rela- 
tive strengths. 
Furthermore, upon each incremental change (i.e., 
parsing of a new word), new JTMS labellings have 
more insistent on consistency than  a JTMS. Story processors 
like ARTHUR (Granger 1980), FAUSTUS (Norvig 1983), and 
ATLAST (Eiselt 1987) keep track of successive (candidate) 
inferences and reconsider ejected ones when faced with con- 
flicting information. It could finally be ment ioned that in the 
postscript o his book, Mellish (1985:114) suggests a combina- 
tion of chart parsing and JTMS, but  does not further develop 
tiffs. 
288 2 
to be comlmted tbr the network. If, in the com'se 
of this, a contradiction arises - tile probability of 
which increases with the size of the grammar, i.e., 
with the number of (l)otentially competing) default 
rules dependency-directed backtracking h~s to 
be invoked to identify the sources of the contradic- 
tion and resolve the conllict. This requires exten- 
sive search and often results in new contradictions. 
Until all conflicts are resolved, the status of some 
nodes may have changed between in and out sev- 
eral times. 'l?hus, "tile machinery is cumbersome" 
(de Kleer 1986:139)fi 
A further problern is that the irfl'erence engine 
works on only one part of the search space at a time. 
For example, if a word has two senses, only one of 
them will be worked on by the parser. But all that 
is known in such a ca,se is that both senses cannot 
be part of the same final solution; it may still be im- 
portant o draw int~rences Dora them independently. 
For further discussion of these and other problems in 
connection with JTMSs, see de Kleer (1986:138 ft.). 
3 ATMS-Style Approaches 
3.1  Overv iew 
Charniak and Gohlman (1988) make use of an NI)MS 
for keeping track of alternatives arising in sense- 
semantic and co,ltexl;ual interpretation, for example, 
wil.h respect to word sense, case, and noun-phrase 
reference. Each alIernative is treated as an ATMS 
assun~l)tion and is fnr~hermore assigned a pro/m- 
bility. By comparing segs of assumpl.ioi~s underly- 
ing various potential interpreta.lions, the system can 
choose the "best" alternative, i.e., the one with the 
highest probability. 
Nagao (1989) provides an approach where ditfer- 
ent assumptions about sentence interpretations con- 
stitute different "worlds" of formulae in a way which 
resembles an ATMS representation. A character- 
istic of these fra.meworks i  that they only handle 
semantic-interpretation alternatiw',s and do not (at- 
tempt to) integrate this with parsing. 
A different kind of Ni'MS--style approach, and one 
that is grounded in parsing, can be obtained by 
extending a chart parser with dependencies; more 
specifically, by recording for each edge its immedi- 
ate and ultimate source edges (Wirdn 1989). The 
next section develops this. 
6IncidentMly, the sole explicit example provkted by Zernik 
and Brown (eited above) ouly involves one default rule. Since 
the original as well as the revised interpretation represent 
coherent, sets of justified beliefs, both c~m be arrived at by 
straightforward (re)labelling, titus avoiding the more cumbm~ 
some process of dependency-directed backtracking - -  in fact, 
~ernik and Brown do not mention dependency-directed back- 
tracking at all. They also do no| state any systematic pref- 
erence policy, so it is not clear how they generally gauge the 
relative strengths of incompa/.ible assumptions when trying to 
resolve contradictions. 
3.2 An  ATMS-Sty le  Char t  Parser  
tIow can a chart parser extended with edge depen-. 
dencies be viewed as consisting of an inference ngine 
alld a (simplified) ATMS? This section develops an 
infonnal answer to this question. 
'llb begin with, an ATMS, just like a chart parser, 
can be seen as a tool for organizing efficient search 
through a space of alternatives by providing a 
"cache" of partial results and by sharing these results 
across different branches of the search space. Both 
the (I);-usic) A'I?MS and a chart parser are inonotonic 
in the sense of only providing monotonic derivability 
(and, in case of the ATMS, monotonic justifications). 
Both frameworks are incremental, performing piece- 
meal updates in response to a constant stream of 
new assumptions, nodes, and justifications. Furfller- 
more, the order in which updates are made does not 
affect tile final outcome of the process. In particular, 
the following correspondences hold: 
? A chart edge corresponds to an NI'MS 7~ode. 
. A preterminal (lexical) edge corresponds to an 
assumption ode)' 
? The immediate source information of an edge 
corresponds t.o a justification. 
* Information about the set (of sets) of ultimate 
source edges of an edge corresponds toits ATMS 
label. 
. The chart corresponds to an ATMS network. 
. An analysis (or interpretation) of a phr~e, sen- 
tence, etc. corresponds to an ATMS context, i.e., 
the theory of an environment, where the latter 
is a set of assumptions. 
? The (standard) chart-parsing algorithm corre- 
sponds to the inference ngine. 
More precisely, information about so,tee edges (i.e., 
justifications) can be derived as follows: An edge 
formed through a combination depends on the 
active--inactive edge pair that generated it. An edge 
formed through a prediction depends on the (one) 
edge that triggered i t .  (Alternatively, predicted 
edges can be left out of the dependency trails al- 
together: since they only represent inferential hy- 
potheses and do not carry any analysis structure, 
they could be seen ~s belonging with the inference 
engine rather than with the ATMS. On this view, 
a prediction has neither dependants nor sources, ) 
A scanned edge does not depend upon any other 
7Thus, each word sense corresponds to an assumption. In 
a system whidl haaldles noisy input (e.g., ill-formed or spo- 
ken input), one might instead let hypothesized word forms 
correspond to assmnptions. 
8This would also soNe the. problenl with top-down parsing 
pointed out in Wirdn (1989:245 f.). --- Note that, if we want 
to introduce gm'bage collect.ion of useless predictions, it would 
still be necessary to Imep a record of their dependencies. 
3 289  
edge (but on an instance of a word or a lexicalized 
phrase). 
Labels are likely to be simple in an ATMS-style 
chart parser. Normally, each edge has a unique, sta- 
ble set of sources ~- zero, one, or two edges which 
are determined once and for all when the edge is 
created) A potential exception to this uniqueness 
of source is the case of the parser attempting to re- 
generate an (existing) edge, something which is pro- 
hibited by a redundancy test. This attempted regen- 
eration actually corresponds to introducing an addi- 
tional justification for the edge. Allowing this would 
require a more elaborate machinery for computing 
ATMS labellings in accordance with de Kleer (1986). 
Whether this capability is needed or not would have 
to be decided with respect to the demands of the 
particular application of the ATMS-style parser (of. 
section 4). 
It could finally be noted that a chart parser, ~s 
normally conceived of, does not record "nogoods" 
(inconsistent combinations of assumptions) aus does 
the ATMS. Instead, the chart parser by itself en- 
sures that inconsistent combinations of edges do 
not get further worked on (through predictions, the 
agenda, etc.). 
4 Applications 
4.1 Incrementa l  Pars ing  
and  In terpretat ion  
A strong definition of incremental parsing would re- 
quire that text can be added or deleted in a piece- 
meal fashion and, furthermore, that the system be- 
haves monotonically in processing such updates; i.e., 
as words are added/deleted, the set of possible analy- 
ses increases/decreases monotonically. An attractive 
property which follows from this is that the amount 
of processing of an update is roughly proportional 
to the size of the update (eft Wirdn 19.89:2,i2, Ear- 
ley and Caizergues 1.972:1040). An ordinary chart 
parser as well as an ATMS-style chart parser as put 
forward above are incremental in this sense, whereas 
the nonlnonotonic model of Zernik attd Brown (1988) 
attd, say, an ATN parser are not. In the latter frame- 
works, a previously determined analysis can be mod- 
ified by a subsequent step in the parsing process, t? 
As for interpretation with respect o a model or 
a context, in order for a system to be incremen- 
tal in the above sense, it should be compositional 
(and again monotonic) such that the interpretation 
9In bidirectionM chart paa'sing (Satta and Stock 1989) an 
edge might have three so lwces .  
l?One might ask which granunatical formalisms enable in- 
cremental processing. Cai, egorial gratmnoa- in its various 
incantations i an obvious alternative (for example, Ades 
and Steedman 1982). Unification-based grammar formalisms 
(Shieber 1986) provide another alternative given that the rati- 
fication component is capable of incremental processing (Bres- 
nml and Kaplan 1982:xliv ft., Stee~:hnan 1985). 
of a phrase is a flmction of the interpretations of 
its syntactic constituents and their associated con- 
texts. One computationally-oriented model which 
flflfils this requirement, and which is indeed taylored 
for incremental interpretation, is that of Haddock 
(1987, 1988, 199(I). Haddock's model, which can 
be seen as a continuation and refinement of Mel- 
lish (1985), incrementally interprets ingular noun- 
phrases which refer to known contextual entities. 
Translated into a chart-parsing framework, upon 
scanning a word, the corresponding set of predicates 
and potential referents (obtained from the context) 
is associated with the new edge, and upon combin- 
ing edges, a constraint-satisfaction algorithm is run 
to narrow down the set of possible referents. 
The possibility of using dependencies also to incre- 
mentally handle deletions of words (assumptions) is 
investigated in Wirdn (1989). Actually, a machinery 
is developed to handle arbitrary sgutactic changes , 
which can be thought of as edit operations (insertion, 
deletion, replacement), and which can be fl'eely com- 
bined and applied to arbitrary portions of the text 
- -  for example, input can be entered in any order. 
Edge dependencies are used to propagate the effects 
of a change precisely to those edges that are affected 
by the change. II This has potential computational 
applications in interactive na.turaldanguage systems 
such as language-sensitive text editing. In psycholin- 
guistic terms, an edit operation might correspond to 
correction of a misread or misheard passage. 
Since IIaddock's model for incremental interpreta- 
tion is not in any way limited to left-to-right incre- 
mentality, it is possible to adopt it also within the 
system of Wir~;.n (1989). Furthermore, it is possible 
to conceive of a semantic analogue to this process- 
ing of syntactic changes. Consider a dynamic con- 
text, for example a database representing the real- 
time state of some world. By maintaining depen- 
dencies between entities and relations in the contex- 
tual model and their counterparts in the linguistic 
analysis, a machinery for incrementally reevaluating 
previously made interpretations with respect o the 
changing context could be attained. 
4 .2  Compar i son  o f  In terpretat ions  
The chart allows comparison of (competing) inter- 
pretations ill the sense that any analyses can be si- 
multaneously examined. WhaZ one cannot do in or- 
dinary chart parsing is to ~k  which particular edges 
(assumptions, etc.) underlie a given analysis since 
edges are not labelled with justifications or assump- 
tions (and all information from lower-level edges may 
not have been percolated upwards). Put differently, 
the chart cannot "explain" its analyses. Of course, 
extending a chart parser to record dependencies i  
a simple thing. The point is that, in doing so, one 
has in effect obtained a simple KI'MS-style problem 
11 This could also be achieved in a JTMS-style parser. 
290 
4 
solver. Charniak and Goldman (1988) provide an 
example of how ATMS techniques could be used for 
comparisons (eft section a.1). 
4.3 Rev is ion  o f  In terpretat ions  
The basic ATMS does not provide nonmonotonic 
justifications and hence no machinery for actually 
revising a previously held interpretation through de- 
fault reasoning, etc. (Similar effects are instead 
achieved by maintaining multil)le contexts and by 
switching between these.) However, certain seman- 
tic and pragmatic phenomena, like anaphoric refer- 
ence, ,~eem to require a capability tbr default reason- 
ing; processing such phenomena by gradually devel- 
oping all possible analyses wouht lead to combina~ 
torial explosion (Asher 1984). '\]~hus, although non- 
monotonic devices destroy the strong notion of incre- 
mentality discussed above (the effects of an update 
cannot hr general be kept local, the amount of com- 
pntation needed is not bounded by the size of the 
update, etc.), they are sometimes needed. A recent 
example of this is Pollack and Pereira (1988) who 
use a strict compositional semantics but. with non- 
monotonic interpretation rules; other examples are 
Asher (1984), Dunin-Keplicz (1984), and Appelt and 
Konolige (1988). 
Dre,~sler (1989) shows how to extend the basic 
ArMS with a new type of node which, in particular, 
allows the encoding of nonmonotonic justifications 
and default rules. Given the relationship between 
chart parsing and ATMS, it seems like there should 
be a way of translating such a default machinery 
to an ATMS-style parsing framework. Furthermore, 
given a framework which integrates parsing and in- 
terpretation by performing interpretation on-line to 
the parser, it might be advantageous to allow encod- 
ing of default reasoning at the level of the parser, as 
indeed Zernik artd Brown do, but to use it in a nmch 
more restricted way. 
5 Conc lus ion  
This paper compares JTMS- and ATMS-based ap- 
proaches to adopting reason-maintenance techniques 
in incremental parsing (arid interpretation). A ma- 
jor problem with the JTMS-based approach is that it 
is fundamentally imited to representing one context 
(one hypothesized interpretation). One consequence 
of this is that competing interpretations cannot be 
compared. Another consequence is that the system 
is constantly forced to commit rash choices and to 
spend a large part of its time revising these choices 
when faced with couflicging information. This sit- 
uation appears even worse in light of the relative 
inefficiency of JTMSs. Zernik arm Brown (1988) in 
a sen,m take this approach to its extreme, using de~ 
fault reasoning and dependency-directed backtrack- 
ing to guide the entire parsing and interpretation 
process. It is however not clear why one would want 
to confine oneself to a single hypothesi,; at each step 
of this process, lp" \[t is also not clear that default 
choices and dependency-directed backtracking is the 
best way to guide se~rch in natural-language analysis 
with respect o phenomena like syntactic alnbiguity. 
From a computational point of view, there are well- 
known and ell'icient teehniques, such as chart pars- 
ing, that work by developing syntactic alter,retires 
in parallel. Dora a psycholinguistic point of view, al- 
though the issue is under discussion, there are both 
theoretical arguments and empirical evidence sup- 
porting the claim thai, alternative interpretations are 
explored in parallel (Crain and Steedman 1985). In- 
cidentally, one of the rationales for this c\]aim is that 
it is a prerequisite for eoml)eting interpretations l.o 
be compared. 
In contr~st o this, an ATMS solves or circum- 
vents the major problems posed by a J'I'MS. The 
ATMS supports eificient development and coml)ari- 
son of all legal (possibly contradictory) analyses; an 
ATMS-style parser thus seems more in accordance 
with computational practice as well as with psy- 
cholinguistic evidence. Furthermore, the relation- 
ship between NI'MSs and chart parsing is in itself an 
advantage, because it facilitates cross-fertilization f 
the respective subtlelds. In particular, it might be 
possible to make use of recertt advances within rea- 
son maintenance in encoding defatflt reasoning for 
the purpose of handling certain I)roblems in seman- 
tic and pragnmtic interpretation. Ultimately, this 
might provide for a more unitbrm handling of syl> 
tax, semantics, and l)ragmatics. 
References  
Ades, Anthony E. and Mark J. Steedman (1982). On the 
Order of Words. Linguistics and Philosophy 4:517-558. 
Appelt, Douglas and Kurt Konolige (1988). A Practical No~l- 
monotonic Theory for Reasoning about Speech Acts. lZ,'oc. 
26th. Annum Meeting o\] the Association \]or Computational 
Linguistic.s, Buffalo, New York: 170-178. 
Asher, Nicholas (1984). Linguistic Understanding and Non- 
Monotonic Heasoning. P'roc. Non-\]~,Ionotonic tteaaonin9 
Workshop, New Pahz, New York: 1-20. 
Bobrow, Hobert J. and Bomfie Lyre1 Webbcr (1980). 
Knowledge Representation for Syntactic/Semantic Process- 
ing. Proc. First Annual National Conference on Artificial 
Intelligence, Stanford, California: 316- 323. 
Bresnan, .Ioaa~ and HonMd M. Kaplan (1982). Introduction: 
Gramma,~ as Mental Bepresentatlons of Language. In: Joan 
Bresnan, ed., The Mental Representation o\] Grammatical l~e- 
lations. MIT Press, Cambridge, Massachusetts: xvii-lii. 
Cha*zfiak, Eugene and B.obert Goldman (1988). A Logic 
for Semmltic Interpretation. Proe. 26th Annual Meeting of 
the Association \]or Computational Linguistics, Buffalo, New 
York: 87-94. 
Crain, Stephen and Mark Steedmml (1985). On Not Be- 
ing Led up the G;u'den Path: The Use of Context by the 
Psychological Syntax Processor. In: David R. Dowty, Lam'i 
12Note that Zernik and Brown also do not make use of look- 
ahead or delayed processing to facilitate intelligent choices. 
5 291 
Karttunen, and Arnold M. Zwicky, eds., Natural Language 
Parsing. Psychological, Computational, and Theoretical Per- 
spectives. Cambridge Univel~ity Press, Cambridge, England: 
320-358. 
de Kleer, Johan (1986). An Assumptlon-based TMS. Artifi- 
cial Intelligence 28(2):127-162. 
Doyle, ion (1979). A Truth Malntcnance System. Artificial 
Intelligence 12(3):231--272. 
Dressier, Oskar (1989). An Extended Basic ATMS. In: 
Michael Reinfrank, Johan de Kleer, Matthew L. Ginsberg, 
and Erik Sandewall, eds., Proc. 2nd International Workshop 
on Non.Monotonlc Reasoning. Springer Lecture Notes in 
Computer Science 346, Heidelberg, FRG: 143-163. 
Dunin-Kepllcz, Barbara (1984). Default Reasoning in 
Anaphora Resolution. Proc. Sixth European Conference on 
Artificial Intelligence, Pisa, Italy: 157-166. 
Earley, .lay and Paul Caizergues (1972). A Method for Incre- 
mentally Compiling Languages with Nested Statement Struc- 
ture. Communications of the A CM 15(12):1040--1044. 
Eisclt, Kurt P. (1987). Recovering from Erroneous Inferences. 
Proe. Sixth National Conference on Artificial Intelligence, 
Seattle, Washington: 540-544. 
Granger, Richaxd H., Jr. (1980). When Expectation Fails: 
Towards a Self-Correcting Inference System. Proe. First An- 
nual National Conference on Artificial Intelligence, Stanford, 
California: 301-305. 
Haddock, Nicholas J. (I987). InerementM Interpretation 
and Combinatory Categorial Grammar. Proc. Tenth Inter- 
national Joint Conference on Artificial Intelligence, Milan, 
Italy: 661-663. 
Haddock, Nicholas J. (1988). Incremental Semaaltics and In- 
tcractlve Syntactic Processing. Ph.D. thesis, Department of 
Artificial Intelligence, University of Edinburgh, Edinburgh, 
Scotland. 
Haddock, Nicholas J. (1990). Computational Models of \[n- 
crementM Sem~ltic Interpretation. Language and Cognitive 
Processes 4(3-4):337--368. 
Jacobs, Paul S. (1988). Concretion: Assumption-Based Un- 
derstanding. Proc. 12th International Conference on Com- 
putational Linguistics, Budapest, Itungaxy: 270-274. 
Kay, Martin (1980). Algorittm~ Schemata nd Data Struc- 
tures in Syntactic Processing. I~eport CSL-80-12, Xerox 
I)ARC, Polo Alto, California. Also in: Sture All~n, ed. 
(1982), Text Processing. Proceedings of Nobel Symposium 51. 
Almqvist & Wiksell International, Stockhohn, Sweden: 327- 
358. 
Kobsa, Alfred, Jfirgen Allgayer, Carola Reddig, Norbert Re- 
ithinger, Dagmar Schmauks, Karin Harbusch, and Woffgang 
Watdster (1986). Combining Deictic Gestures and Nattu'al 
Language for Referent Identification. Proc. 11th Interna- 
tional Conference on Computational Linguistics, Bonn, Fed- 
eral Republic of Germany: 356-361. 
Marslen-Wilson, William and Lorraine Tyler (1980). The 
Temporal Structure of Spoken Language Understanding. 
Cognition 8(1):1-74. 
Mellish, Christopher S. (1985). Computer Interpretation of 
Natural Language Descriptions. Ellis tlorwood, Chichester, 
England. 
Natal ,  Katashi (1989). Semantic Interpretation Based on the 
Multi-World Model. Proc. Eleventh International Joint Con- 
ference on Artificial Intelligence, Detroit, Michigan: 1467- 
1473. 
Norvig, Peter (1983). Six Problems for Story Understanders. 
Proe. Third National Conference on Artificial Intelligence, 
Washington, D.C.: 284-287. 
O'Rorke, Paul (1983). Reaaons for Beliefs in Understanding: 
Applications of Non-Monotonic Dependencies to Story Pro- 
cessing. Proe. Third National Conference on Artificial Intel- 
ligence, Washington, D.C.: 306-309. 
Pulman, Steven G. (1985). A Pal~er That Doesn't. Proc. 
Second Conference of the European Chapter of the Associ- 
ation for Computational Linguistics, Geneva, Switzerland: 
128-135. 
Pollack, Martha E. and Feruando C. N. Pereira (1988). An 
Integrated Framework for Semantic and Pragmatic Interpre- 
tation. Proc. 26th Annual Meeting of the Association for 
Computational Linguistics, Buffalo, New York: 75-86. 
Reinfrank, Michael (1989). Lecture Notes on the Fundamen- 
tals of Truth Maintenance. Siemens Report INF 2 ARM-5-88, 
Version 2. Siemens AG, Munich, FRG. 
Reps, Thomas and Tim Teitelbaum (1984). The Synthe- 
sizer Generator. Proc. A CM SIGSoft/SIGPlan Symposium 
on Practical Programming Environments, Pittsburgh, Penn- 
sylvania: 42-48. 
Reps, Thomas and Tim Teitelbaum (1987). Language Pro- 
cessing in Program Editors. Computer 20(11):29-40. 
Satta, Giorgio and Oliviero Stock (1989). Formal Properties 
and Implementation f Bidirectional Charts. Proc. Eleventh 
International Joint Conference on Artificial Intelligence, De- 
trolt, Michigan: 1480-1485. 
Shieber, Stuart M. (1986). An Introduction to Unification. 
Based Approaches to Grammar. CSLI Lecture Notes No. 4. 
University of Chicago Press, Chicago, Illinois. 
Steedman, Mark (1985). LFG and Psychological Explanation. 
Linguistics and Philosophy 8:359~385. 
Thompson, Henry and Graeme Ritchie (1984). Implementing 
Natm'al Language Parsers. In: Tim O'Shea and Marc Eisen- 
stadt, Artificial Intelligence: Tools, Techniques, and Applica- 
tions. Harper & Row, New York, New York: 245-300. 
Tyler, LolTaine and William Marslen-Wilson (1977). The 
On-line Effects of Semantic Context on Syntactic Processiug. 
Journal of Verbal Learning and Verbal Behavior 16:683-692. 
Wirdn, Mats (1989). Interactive Incremental Chart Parsing. 
Proc. Fourth Conference of the European Chapter of the As- 
sociation for Computational Linguistics, Manchester, Eng- 
land: 241-248. Also: Research report LiTH-IDA-R-89-24, 
Department of Computer and Infomaaation Science, Link~Splng 
Univemity, Link&ping, Sweden. 
Zernik, Uri and Allen Brown (1988). Default Reasolfing in 
Natural Language Processing. Proc. l~th International Con- 
\]erence on Computational Linguistics, Budapest, Hungary: 
801-805. 
292 
6 
