A CONTEXT-FREE GRAMMAR OF FRENCH* 
Morris Salkoff 
Universit& de Paris 7, L.A.D.L. 
2 Place Jussieu, Paris 5, FRANCE 
Summarx. I present here a method that allows one to construct a CF grammar of a natural lan- 
guage that correctly accounts for verbal selection rules. This goes contrary to the prevail- 
ing opinion, following Chomsky 5, that such a construction is impossible. My method consists 
essentially in separating the semantic function of a selection rule, namely, the exclusion 
of certain noun sub-classes, from the syntactic relation between the elements (verb, sub- 
ject, object:) linked by this relation of selection. When the verb and object (subject) are 
separated by intervening levels of complement construction, the selection can still be sat- 
isfied by a double classification of verbs: according to the kind of subject they take, and 
also according to the type of verb that can follow them (in the complement construction). 
Conjunctions and sentences with respectively can also be treated within the framework of the 
CF approximation proposed here. 
like the latter, is recursively extendable to 
?O. Introduction sentences of theoretically unbounded length. 
It is now quite generally supposed that a 
natural language cannot be adequately described 
by a CF grammar. This opinion was first advanced 
by Chomsky 5 who discussed this problem from the 
point of view of phrase structure grammars. He 
presents there a fragment of a CF phrase struc- 
ture grammar in terms of noun phrases NP, verb 
phrases, VP, etc., which are familiar from im- 
mediate constituent analysis. These rules cannot 
treat verbal selection rules properly; Chomsky ~ 
(ch. 8) had already tried himself to correct 
this defect within the framework of a CF phrase 
structure grammar, but the difficulties he en- 
countered seem to have persuaded him that only a 
transformational grammar could handle such a 
problem. 
Harman 13 proposed another solution to the 
problem of treating verbal selection rules in a 
CF grammar; he added a set of subscripts to the 
CF rules used in Chomsky 5, which were chosen so 
that only those subjects and objects which sat- 
isfied the selection rules could appear with a 
given type of verb. Chomsky 8 showed that this 
method would not suffice if the sentences sub- 
scripted as Harman had suggested were themselves 
embedded in complement constructions. Thus, 
where Harman's system will not generate such ab- 
errant sentences as *Bill elapsed, it will not 
be able to exclude the generation of such a se- 
quence when it is embedded in a complement con- 
struction, as in *John persuaded Bill to elapse. 
Further arguments for the inadequacy of a 
CF grammar were adduced from the fact that sen- 
tences containing respectively cannot be assign- 
ed an appropriate structure in the framework of 
a CF grammar. This was noted by Chomsky 5 (?4.2) 
in his discussion of the algebraic language w w; 
the relation between this language and sentences 
containing respectively was discussed by Bar- 
Hillel & Shamir I, and then taken up again by 
Chomsky 8 together with examples taken from the 
comparative construction in English. Later, Pos- 
tal 22 exhibited a construction in Mohawk which 
is similar to the one with respectively, and 
As a result of these considerations, Chom- 
sky 8 concluded that a coherent description of 
recursively embedded sentences or of verbal sel- 
ection rules could not be obtained in a natural 
way by any CF grammar, and that consequently no 
CF grammar could adequately describe a natural 
language. However, it turns out that this ques- 
tion is not so easily disposed of as it would 
appear, and recent work by Joshi & Levy 18 shows 
that a CS grammar containing rich context-depen- 
dent rules can be used to analyze trees that de- 
scribe a CF language. They did this by an exten- 
sion of a theorem of Peters & Ritchie 21 , who 
showed that CS rules of a certain type can be 
used not to generate sentences, i.e., not to 
characterize them, but only to verify their 
well-formedness, by applying the context-depen- 
dent parts of these rules as constraints on the 
set of trees that schematize these sentences. In 
this case, the language described by these trees 
is a CF language. 
Joshi & Levy generalized the kinds of CS 
rules that can be used for this result and de- 
fined CS rules that can describe conditions on 
the context whose action is close to that of 
certain transformations. These rules are expres- 
sed as Boolean combinations of predicates that 
descr ibe  the left and/or right context of a 
node, or the upper and/or lower contexts (the 
nodes above and below a given node). Roughly 
speaking, a tree is said to be analyzable with 
respect to a grammar containing such rules if 
one of the rules is satisfied at each node of 
the tree. In that case, the language which con- 
sists of the terminal strings of all the trees 
analyzed by the grammar is a CF language, even 
though the rules take the context into account ~. 
Hence these terminal strings can be described by 
?Note that the formalism used by Joshi & Levy 
for displaying conditions on trees is close to 
the notation used for rewrite rules, and can 
lead to some confusion, lit need only be remem- 
bered that these context-dependent rules are not 
used to generate structures. 
38 
some CF language. 
Now the string grammar proposed by Harris 15 
and which analyzes English (Sager 23) and French 
(Salkoff 2~'25) can be shown to be of just the 
form described by Joshi & Levy. It contains CS 
rules of the type described by them, and is used 
to analyze a tree, rather than to generate it. 
It would thus appear that English or French can 
be described by some CF language, although the 
string grammar gives no clear clue as to what 
its form would be. I shall show here that such a 
CF grammar can be written for French, and that 
it can treat, in a linguistically appropriate 
fashion, the problem of the expression of verbal 
selection rules in nested complement construct- 
ions. I have chosen French because systematic 
data giving a wide coverage of the French lexi- 
con are available (Gross 12, Boons et al3); how- 
ever, the very nature of this construction makes 
quite plausible its extension to other natural 
languages. Only the method used will be outlined 
in this brief article, and an example of its ap- 
plication to embedded complement constructions; 
for more details, consult Salkoff 25 (chap. 3) 
I now construct CF rules that correctly de- 
scribe sentences in which related pairs like 
verb-subject, verb-object, etc., that are linked 
by a relation of selection, may be separated by 
constructions of unbounded length. Each such CF 
rule is the expansion of a sentence schema S. 
The verbal selection rules are accounted for in 
this method by separating the semantic function 
of a selection rule, namely, the exclusion of 
certain noun sub-classes, from the syntactic re- 
lation between the pairs carrying this function 
(generally, a verb and a noun phrase). Each sel- 
ection rule is decomposed into two independent 
parts: one part is the choice of a noun not cla- 
ssified in certain noun sub-classes, in such a 
way as to express the semantics of that selec- 
tion rule; the second part is the use of the 
noun phrase containing this N for the subject or 
object of a given verb in ~ rule schema, which 
amounts to satisfying the complete verbal selec- 
tion rule. 
Conjunctional sequences, including senten- 
ces containing respectivement can be handled by 
this method, but not within the strict mathemat- 
ical framework of a CF language. The resulting 
CF grammar of French can be compared with a tra- 
nsformational grammar, and it is seen that the 
two are more similar than has been thought. 
?|. The base rules 
In order to set forth the selection rules 
as clearly as possible, I shall begin by using 
in the rules developing S, noun phrases bearing 
three subscripts, i.e., complex symbols: 
(I) NP ; where x is a function F: sub- 
x,y,z ject s, object ~, or i~direct 
object io; y is the morphology M: singular, plu- 
ral,...; and z is a semantic su~-class S~ these 
sets have no elements in common. 
With this notation, typical rules for S 
will have the following form: 
(2)a S ? NP t V. NP 
s~y,z  i o ,y ,z  
b S + NP t V. P NP. 
s ,y~z  J i o ,y , z  
c S + NPs,y,z t V k NPo,y~z P NPio,y,z, etc. 
The verb is subscripted according to the comple- 
ments it takes. 
In this notation, the CF rules no longer 
constitute a strict constituent grammar of the 
type discussed by Chomsky 5'8. My notation brings 
out the grammatical relations between the elem- 
ents of the sentence schemata, which is not pos- 
sible?in a direct way in a phrase structure gra- 
mmar. The complex symbols are useful in order to 
explain clearly the process of sentence embed- 
ding; they will be eliminated in a second step 
and replaced by the noun phrases without sub- 
scripts used in the verbal selection rules. 
Main rule schema. 
For clarity, I shall use only the subscript 
F (s, o, or i o) in the rules for S. Only an ab- 
breviated list of these rules can be given here; 
for a complete list, cf. Salkoff 25. A first sub- 
group of rules contains non-sentential objects: 
(3) S ~ NP t V 1 (Max dort) 
S 
S ? NP t V 2 NP (Max signe le traitS) 
S 0 
S ? NP s t V3 Pi NPio (Paul d@pend de Max) 
S + NP t V~ NP P. NP. (Paul base sa 
S O 1 iO 
th~orie sur ce8 fait8); etc. 
There are about ten such rules in French. A sec- 
ond group of rules contain a sentential comple- 
ment clause: 
S + NP t V20 que S (Max sait que Paul a 
s fait cela) ; 
? NP s t V22 NP ? que S (J'~nforme Max 
que Paul est venu) 
A third group of rules yield embedded sent- 
ences. One example will be treated here, as it 
occurs in independent sentences and in relative 
clauses, to illustrate the method. 
(4)a S + NP t V30 S 1 (Max convainc ... 
S 
S 1 + NP de Vl ... Paul de dormir) 
0 S 
* NP de V 2 NP . .Paul d'oter cela) 
0 S 0 
The new notation oNPs denotes a noun phrase hav- 
ing a double function F: it must be an accept- 
?To do so, one has, for example, to reinter- 
pret the tree structure of the sentence (cfo 
Chomsky7). 
39 
able object of the verb V30 which precedes ? , and 
also an acceptable subject of the main verb of 
S I. The sentence schema for S 1 is a sentence de- 
formation (in Harris '17 terminology); there are 
about ten such deformations in French. Another 
one is the following: 
(5) S + NP t V32 S 3 (Max apprend ... 
s 
S 3 ? ~ . NP ~ V1 ... ? Paul ~ dormir) 1o s 
... etc. 
Each such schema S i contains as many rules as S 
itself. 
With the schemata S l, I can account for the 
recursive embedding of sentences, like Luc con- 
vainc Paul d'apprendre ? Max ~ dire aux dl~ves 
que...; other schemata are needed to account for 
sentence embedding in relat ive clauses: 
(6)a NP rl ? NP que NP t V30 S I (l'homne o s s pro 
que Max convainc... 
b S 1 ? o(t) s de V 1 .. de dormir) pro 
? o(O)  s de V 2 NP ? . .  d'oter cela) 
. . . etc. 
Here, the symbol o(@)s is a dummy element stand- 
ing for the noun phrase, carrying the same sub- 
scripts, at the head of NP rl. It is marked by 
the same select ional features as oNPs and wil l  
be used to 'transmit' this se lect ion through em- 
bedded sentences. Such dummy elements come close 
to certain pronouns found in relat ive clauses 
without antecedent, like ce in: J'ai achet$ ce 
que Max a sculpt@. 
A second type of relat ive clause is this: 
(7) NP r2 ? NP que S (le livre que... 
o pro 
Spr ? ? NP s t V 2 (~)o ... Paul lit) 
+ NP s t VL~ (~)o P NPio .Paul fair de 
. . . ces articles) 
? NP s t V30 S I'I .. Max convainc... pro 
S I'I ? NP de V2 (0)o .. Paul de 
pro o s lire) 
? NP de V 4 (@)o P NP. 
0 S iO 
..Paul de faire de tee articles) 
? NP s t V32 S 3"I .. Max apprend... pro 
S 3.1 + d ? NP d V 2 (~)o "" ~ Paul pro io s 
? . . ~ life) 
. e tc .  
With these rules, it is possible to descr ibe re- 
curs ively embedded sentences inside relat ive 
clauses, although the complex symbols give us no 
?Sentences like Max emp$che que la table ne 
tombe ? Max emp$che la table de tomber, in whi-  
ch the raised object (table) does not have to be 
compatible with the verb emp@oher, are accounted 
for by di f ferent rules? 
indicat ion yet as to how the verbal select ion 
rules are to be satisfied. 
?2. Select ion Rules 
Accord ing to the kind of noun al lowed as 
subject, or as direct or indirect object, a verb 
is said to select for that sub-class? The major-  
ity of the select ion rules thus concern the fol- 
lowing three rules for S: 
(8)a S ? NP s t V 2 NP ? (Luc porte un chapeau) 
b S + NP t V 3 P. NP, (Max d~pend de Luc) S 1 iO 
c S ? NP t V 4 NP P. NP, (Max attribue 
S O i iO  
la m~daille d S~c) 
The select ion rules vary with the prepos i t ion Pi 
for verbs V 3 and V~. In the sentence analyzer 
based on the str ing grammar, these select ion 
rules are contained in a system of contextual  
rules attached to each lexical entry for a verb 
that can appear in (8)? Exper ience shows that 
five noun sub-classes are needed for such a sys- 
tem of select ion rules: N t, 'time'; Ns, senten- 
tial; Nh, 'human'; Nc, concrete; and Nnom, nom- 
inal izations. These sub-classes are used in the 
verbal entries to indicate the unacceptable con- 
texts for a verb c lass i f ied in V2, V3, or V~. 
The analyzer then uses these contextual  rules to 
d isal low an unacceptable decomposi t ion in a sen- 
tence analysis. 
These contextual  rules can be replaced by 
CF rules in the fol lowing way. Let 
(9) N \ {N. + N. + ...} = N" i \] 
denote any noun except one belonging to sub- 
class Ni, or to N~, etc.; the bar \ means 'min- 
us'. If N" is subst i tuted for the noun N in any 
NP, and carr ied over into every rule developing 
NP, the terminal rule for the noun in NP wil l  be 
(\]0) N" ? N d , where N d is a lexical entry. 
Each choice for N d is compared with the list of 
sub-classes Ni,N., ..., attached to N'. If N d 
belongs to any ~f these sub-classes, it is dis- 
carded; if N d doesn't belong to these sub-class-  
es the condit ions expressed in (9) are satisf ied. 
Now, if the select ion rule of a given verb is 
that sub-classes N., N~, , are unacceptable as i d "'" 
subject (object), then the noun phrase contain- 
ing N d satisf ies that select ion rule, and wil l  
be the only noun phrase permitted in that syn- 
tactic posit ion. 
I now define noun phrases GN containing all 
the combinations of excluded noun classes from 
the five named above (there are 31 such GN): 
(l|)a GN + N, if no sub-classes are excluded; 
b GNi ? N\{Nt}; GN2 ? N\{Ns}; ... ; 
GN 5 ? N\{Nno m} ; 
c GNi, 2 ? N\{N t + Ns};GNi, 3 ? N\{N t + N h} 
? ..GNI,5 + N\{N t + Nnom}; 
40 
GN2,z ? N\{N + Nh}; ... 
S 
Inserting the noun phrases GN~ { into (8), and 
replacing the subscripts i an~J\]_ ' by the single 
subscript ~, I obtain the following rule schema- 
ta: 
(12) S ? (GNj) s t Vj,j, (GNj,) ? ; I_<j,j'_<31 
S ? (GNj) s t V.,j,,j Pi (GNj,,)io I~j,j"_<31 
S ? (GNj) s t Vj, m (GNj,) ? Pi (GNj")io 
1_<ms (j 'xj"xk) 
The subscripts are not independent; in general, 
a verb accepts a certain GNj, (GN:,,) only for 
? . ? J . certain values of GNj. This is captured in the 
double verb classification: V~ ~,(Vj,~,,) is that 
verb sub-class which requiresJ'JGNi Jfor sub- 
ject, when the direct (indirect) object is GN i, 
(GN i ). Lexicographlcal work shows that there 
are'about 40 different prepositions appearing in 
the objects P N and N P N. Since the double verb 
classification must be carried out for each va- 
lue of Pi' this amounts to a triple classifica- 
tion of verbs. 
?3. Elimination of the complex symbols 
The schema (12) generates only acceptable 
sentences; each verb in the lexicon is classifi- 
ed according to which of the sub-classes defined 
by (12) it belongs to; hence no verb will ever 
appear in a schema of type (12) unless it is ac- 
ceptable there. Then, since the process defined 
by (I0) is such that only acceptable nouns can 
be chosen for the noun phrases GN (= N') in 
these schemata, each schema must in fact give 
rise to an acceptable sentence? 
The situation is quite different, however, 
for the rules containing oNPs, NP o or NPio. 
These cannot be developed as written, for two 
reasons: (1) only noun phrases of the type N" 
are available, so that verbal selection rules 
can be satisfied; (2) the syntactic functions 
expressed by the subscripts on these noun phra- 
ses can be obtained only by a sub-classification 
of the verbs appearing with them. Thus, in order 
for oNPs (in 4) to be an acceptable object of 
the verb V a that precedes, and also an accept- 
able subject for the verb V b of the embedded 
sentence containing it, the verb V b must be sub- 
classified according to type of subject, and V a 
has to be sub-classified according to the type 
of V b that may follow. 
An even more complex classification is nee- 
ded to handle relative clauses like (7), which 
begin with NP o. This noun phrase must be an acc- 
eptable object for the last verb, say Vc, in the 
S which follows; however, S can contain an pro pro 
unbounded number of embedded verbs before V c ap- 
pears. Hence, V c is not known at the moment when 
the lexical entry is chosen for the N" which re- 
presents NP o. The problem, then, is to 'transmit' 
the selectional characteristics of the noun in 
NP o to the rule that will later develop Ve, by 
using the embedded verbs as carriers for the se- 
lectional information? This transmission of sel- 
ectional information necessitates a sub-classi- 
fication both of embedded verbs and of the sche- 
mata of the type S pro" 
?31 Elimination of oNPs 
I subdivide the sets S \ ]S  2, S 3, ... (cf.4 
and 5) into S~ subsets, where i runs through the 
31 possible values of the subject N" (which re- 
places oNPs). These subsets then constitute a 
classif ication of the schemata S I, .., according 
to the type of subject 
the verb of the schema: 
(13) S~ ? N\] 
? N\] 
? N\] 
? N\] 
I subdivide the 
same way: 
(14) S 1 pro,l 
de V 1 
de V 2 NP o 
de V30 S. 1 
i 
de v31 s 2. 
J 
sets S 1 pro 
that is acceptable for 
S~ ? N~ de V I 
? N~ de V 2 NP o 
...etc. 
sit ? N~i de vl 
(6b) ,  S 2 in  the  
+ (~)I de V\], where ~I is a dummy 
carrying the selec- 
? (4) I de V2 NP o tional features 
of N~; 
? (~)1'd~ V3o s~ pro,j 
? etc. 
This new way of ordering the rules is the 
basis for the sub-classification of verbs V30, 
which take the object S I. A verb V30 accepts 
only the sub-sets S~ whose subject N~ is an ac- 
ceptable object forlthat verb? This is a selec- 
tion rule between verbs: the verb V30 selects an 
object having a verb of a certain type t. 
The generation of reeursively embedded sen- 
tences which satisfy verbal selection rules is 
now obtained as follows. First, let us choose a 
rule developing the matrix sentence , for example 
(15) N \ ] t  V30 S~ 
I 
Now the verbs in the sub-class V30 have been sub- 
classified in the lexicon according to the type 
of acceptable subject, N i, and also according to 
the type of acceptable complement S~. By choos- 
ing in (15) a verb in the sub-class (Nj,Si) , I 
obtain an acceptable sentence. 
%The selection between verbs mentioned here 
has already been suggested by Z. Harris 16 in the 
framework of a system of sentence generation ba- 
sed on the concept of the verb as an operator 
acting on its arguments (approximately, its sub- 
ject and object)? Selection between verbs was 
also used by M. Gross I0 in order to account for 
constructions like Je coul~s manger un g~teau, 
?? Je co~2~s d~tester Max; here, the first verb 
(of movement) selects for the type of verb that 
can follow it. 
41 
1 Next, S i is developed, using the schema 
(13), by one of two tynes of rules: 
(16)a S~l + N\]z de V31 S~; b S~l ? N~ de V 2 NP o 
If rule a is chosen, another sentence is embed- 
ded, anda  verb V31 in the sub-class (N\[,S\]) is 
chosen from the lexicon. But if rule b is chosen 
sentence embedding terminates with that rule. 
The same method can be used for generating 
acceptable relative clauses NP rl (in 6). As an 
example, I rewrite one of the NP rl in terms of 
the noun phrases N': 
(17)a NP rl ? N~ que N\ ] t  V30 S l pro,i 
b S~ro,i ? (@)i de V 1 
i) By choosing a verb V30 in the subclass (N\],Sp, 
i.e., one taking N'.. as its subject and as sec- 
ond verb (in S!ro )J one whose subject is N\[, I 
guarantee that the N i in a is both an acceptable 
object of V30 and an acceptable subject of the 
verb in S1 pro 
?32 Elimination of N_P_o 
The development sketched in ?31 will not do 
for relative clauses like NP r2 (in 7), which 
have the form NP o que Spr o. This can be schema- 
tized roughly as NP o que. ? V i . . . .  V~ V c , 
where Vi, Vj, .. are embedded verbs o~ the type 
V30, V31, ..., and V c is the last verb of 'qpro' 
the one for which NP o must be an acceptable ob- 
j ect. 
In order to transmit the selectional char- 
acteristics of NP o to the rule that develops Vc, 
and this within the framework of a CF grammar, I 
can proceed as follows. I subscript Spro in (7) 
by k, which is also the subscript on the noun 
phrase N~ that replaces NP o (just as S I, S 2, .... 
were subscripted for the type of subject); then 
the schema S I~ for embedded sentences will have 
two subscripts: one for ~, and a second one for 
the type of subject the verb takes. This yields 
the following kind of development: 
(18) NP r2 ?'N~ que Spro, k 
Spro, k ? N~ t V 2 (~)k 
+ N~ t V 4 (~)k Pn NPio 
+ N~ t V~0 sl'l, k pro, 1 
31 N~ t V30 pro,2 ? sl.l,k 
sche- < 
mata \[ S l ' l ' k  
? N~ t V30 pro,31 
s2.l,k ? N\ [ t  V31 pro,l 
-~ N: t V31 S 2"l,k l pro, 2 
s2.l,k ? N.~ t V31 pro, 31 
sl.l 
(@)k pro:~ ? N\] de V2 
? N\] de V4 (~)k Pn NPio 
? N\] de V30 SI.i,~ pro,3 
? N i de v31 s2"l,, k pro,j 
(31 times, as above, once each 
for the subjects N~ ..... Nil) 
The typical rule for NP r2 is the following: 
sl.l,k (19) NP r2 ~ N~ @ue N~ t V30 pro,j 
Once more, acceptability is guaranteed by choos- 
ing a verb V30 in the sub-class (N~, S\]). Next, 
the symbol SI.i, I~ representing a possibly em- " pro,j ' 
bedded sentence, can be developed by the rules: 
? s3.l,k (20)a sl'l'kpro,J ? N:j de V32 pro,j' 
b SI'I,. k ? N: de V 2 (~)k pro,j j 
If rule b is chosen, sentence embedding termin- 
ates; then, choosing a V 2 in the sub-class taking 
an object of type N~ (as indicated by @k ) guaran- 
tees that N~ in (18) is an acceptable object for 
that V 2. If-rule a is chosen, sentence embedding 
continues; a verb V32 is chosen, in the sub-class 
(hi, S\],), until a rule of type _b is chosen. 
The reader will notice two features of this 
method of using the selection rules to generate 
relative clauses? 
(I) The subdivision of S I into a set of S~ rule 
schemata does not increase the number of rules in 
S. The same number of rules would be obtained by 
inserting the noun phrases Nk into S (or SI), and 
this must be done in any case in order to express 
the verbal selection rules (in whatever fashion)? 
In the decompositions of SI,..., used above, the 
point was only to present the original schemata 
so as to make the subject or object of the verb 
in the schema stand out, for further reference. 
(2) The two kinds of selection made explicit in 
these schemata, the one between verbs, and the 
other (better known) between verb and object (or 
subject), appear only once in the grammar. Both 
types of selection are used in each step of sen- 
tence embedding, but in no case does this entail 
rewriting the two kinds of selection in the gram- 
mar each time a deeper level of embedding is at- 
tained. 
?4. Conjunction; respectively 
It has been shown by Chomsky 5 that conjunc- 
tions can be described in a CF grammar only by 
using an infinite number of rules, represented by 
rule schemata; if one restricts oneself to strict 
CF grammar, one introduces an excessive structu- 
ring of the conjoined forms? An approximate sol-- 
ution can nevertheless be given to this problem, 
in the framework of a finite CF grammar, in the 
following way. I construct a sequence of conjoin- 
ed noun phrases: 
(21)a GN 1 + N" ; b GN 2 ? N" et N" ; 
c GN 3 ? N" et N" et N" 
d GN I ? N" et N" ... et N" (! times) 
k 42  
i 
Denoting by Gcf the CF grammar containing the 
rules GN i, GN i-I, ..., GN I, I can. set up the se- 
ries of grammars G~f, G 2 l cf' "''' Gcf' each repre- 
senting a better approximation to the infinite 
G~f, which contains a noun phrase of un- grammar 
bounded c length. 
For any practical purpose, such as genera- 
tion (or analysSs) of sentences, it is clear 
i that one of the Gcf will be large enough to yie- 
ld the desired precision. However, another app- 
roximation is available which is less costly, 
from the viewpoint of the number of rules requi- 
red, and which yields the same result for G~f. 
This is the rule schema proposed by Chomsky & 
Sch5tzenberger 9 for handling conjunction in a CF 
grammar. For the case of noun phrase conjunc- 
tion, this schema is as follows: 
(22)a GN ? N'; b GN + N" (et N')* 
The star indicates that the group (et N') can be 
iterated as many times as is necessary. This 
schema is therefore an abbreviation for an infi- 
nite number of rules. 
With such a rule schema in it, my grammar 
is no longer strictly CF; however, it is clearly 
f~ithful to the spirit of the approximation for 
l outlined above, since the language described Gcf 
by my grammar is the same as that reached asymp- 
totically by the series of grammars G~f, 2 Gcf,.., 
G~f obtained with (21). The rule schema (22) can 
be compared to an alggrithm for generating any 
l by choosing the number one of the grammars Gcf 
of iterations. 
There exists a set of structures in natural 
language which cannot be described by the meth- 
ods developed until now, namely those containing 
either respectivement, or the distributives qui 
or selon que: 
(23)a Les rats des groupes Aet  B rSussissent 
et $chouent dans les labyrinthes L aet  
Lb, respectivement. 
b Les reporteurs ont parle qui aux minis- 
tres, qui aux d~l$gu~s, qui aux d~put~a. 
c Selon que tu es pauvre, bourgeois ou 
aristocrate, tu seras ouvrier, commer- 
gant ou patron. 
Although these strings cannot be generated by a 
CF grammar? , a procedure is nevertheless avail- 
?--The applicability-~f this argument to the 
linguistic case is not quite as simple as this 
brief formulation of the argument might lead one 
to suppose, in the way it is generally used in 
discussing sentences with respectivement. It is 
only the language containing just the sentences 
(23), and only those, that cannot be generated 
by a CF grammar. However, in order for this con- 
clusion to apply to the generation of the entire 
French language by a CF grammar, it must be 
shown that there exists no sublanguage of French 
containing these sentences in respectivement as 
a subset that can be generated by a CF grammar. 
Cf. Gross II (?8.1) for this argument. 
able for including this type of sentence in the 
CF approximation under discussion here. 
I add Kleene rules to the grammar, and a 
condition on these rules, as follows: 
(24)a N s (et Ns)* V N o (et No)* 
b N s (et N )* V (et V)* N (et No)* s o 
These rules contain all common conjunctions of 
subject, verbs and direct object. Moreover, they 
cover the sequences of classes observed in sen- 
tences containing respectivement. They don't have 
the structure one would like to associate with 
such sentences. In order to describe the respec- 
tivement sentences, I add the following condition 
to the starred parentheses: the number of itera- 
tions of each occurrence of the star is the same; 
and a structure, or rule of interpretation, is 
imposed on the starred groups, as follows: 
1 I , No (etINo), (25) N s (et Ns)* V (et V) 
This grouping pairs the N s and the N o that are to 
be associated with each other via respectivement; 
(25) is equivalent to: 
(26) N 1 et N 2 .. V 1 et V 2 .. N 1 et N 2 
S S 0 0 
Thus, I am interpreting (25) as a sentence con- 
junction: N 1V  1N 1 ~ ~2 ~2 M2 ~ requir- O ~ L~S v ~0 ~ " " " ~ as 
ed by the adverb respeetivement. 
?5. Conclusions 
The methods I have sketched here can certa- 
inly be applied to other natural languages and 
will account in a natural way for the general 
phenomena of verbal selection rules in embedded 
sentences. One may wonder why this work has not 
been carried out before. 
Historically, attacks against the adequacy 
of CF grammar for describing natural language 
arose at a moment when it was necessary to ex- 
plore the nature of the transformational grammar 
just proposed. This new style of grammar seemed 
so much better adapted than CF phrase structure 
grammars to explaining sentence relations that 
any more effort towards developing a detailed CF 
grammar seemed fruitless. To discourage such ef- 
forts, Chomsky 5 (chap. 5) declared that "any gra- 
mmar that can be constructed in terms of this 
theory \[CF phrase structure grammar\] will be ex- 
tremely complex, ad hoc and 'unrevealing'". These 
remarks were reaffirmed (Chomsky 8) and bolstered 
by an argumentation based on the inherent inade- 
quacy of CF grammar for describing verbal selec- 
tion rules. 
A second criticism arose from the analysis 
of constructions, like respectivement, whose de- 
scription could not be obtained within the strict 
framework of a CF grammar. We have seen above 
that such a statement is at best unclear. It may 
be correct that a mathematically rigorous descr- 
iption of this construction is not possible in a 
43 ... 
strict CF grammar; even so, we are under no obli- 
gation to transfer this observation bodily to the 
domain of linguistics. The type of description 
that I elaborated above, in which a rule of in- 
terpretation is added to a rule generating the 
form of sentences containing respectivement, is 
now used in recent work in generative semantics. 
Moreover, it can be seen that the CF gramm- 
ar presented here is but a short step removed 
from a transformational grammar. In all trans- 
formational theories, a transformation includes 
(among other things) a relation between senten- 
ces. Most authors also include operations that 
deform one sentence into another, or which modify 
an abstract structure so as to derive sentences 
from it. The CF grammar I have proposed contains 
the information that establishes relationships 
between sentences, but it does not contain the 
operations or the metalinguistic assertions that 
make the transformation explicit. By a small ex- 
tension of the CF framework I can also obtain the 
equivalent of a transformation, as follows. As an 
example, I consider the passive transformation. 
The passive transformation consists in mat- 
ching an active phrase with its passive counter- 
part. The statement of the transformation can 
stop there, as does Harris 'I~, or one can add the 
specification of the computer operations needed 
to create the active and passive trees, as in 
generative grammar. In the CF grammar presented 
here, I have two independent rules, one for the 
active form, and another for the passive of the 
first: 
(27)a Sac t ? NP s t V 2 NP o 
b Spa s ? NP o t ~tre V2~ (par NP s) 
Each of these rules has an independent set of se- 
lection rules that are expressed in the choice of 
the N" for the NP. Adding these selection rules, 
(27) becomes: 
(28)a Sac t ~ NP s t V 2 NP o ; NP s ? N~; NP o ? N i 
b Spa s ? NP o t ~tre Vi~ (par NPs) ; 
NP o ? N i ; NP s ? N~ 
This is of course a wasteful repetition of 
identical selection rules. It was just to avoid 
this kind of useless duplication that justified 
the introduction of transformations. Suppose now 
that I factor ize the selection rules from a set 
of forms that constitute an equivalence class, 
for example, from the 'active' and the 'passive' 
forms; I place a separator p between the forms 
of the equivalence class: 
(29) S ? NP s t V 2 NPo/p/ NP o t ~tre V2~ (par 
NPs)/p/ I1 t ~tre V2e NP o (par NPs); 
+ N~ " NP o + N\] NP s 
In this formulation, the selection rules are no 
longer duplicated; moreover, we can interpret the 
separator p between the members of the equival- 
ence class as indicating a relation between the 
sentence schemas so separated. The factorization 
of the selection rules, together with the intro- 
duction of the separator can be read as the def- 
inition of a transformational rule between the 
sentence schemata. 
Of course, rule (29) is no longer CF, but it 
represents a rather natural extension of the CF 
framework which makes the latter much more simi- 
lar to a transformational grammar than one might 
have thought possible up til now. However, the 
reader will note that the concept of a transfor- 
mation is indispensable as a tool for the const- 
ruction of this CF grammar, and then for its ex- 
tension towards a transformational grammar by 
means of the factorization of selection rules. 
Furthermore, this CF grammar does not generate 
the sentences of the language 'weakly', in the 
meaning given this word by Chomsky; in fact, it 
provides them an 'adequate' grammatical structure 
as well as a linguistically justifiable relation- 
ship to other sentences of the language. 
Finally, let us note that although the en- 
tire set of rules of the CF grammar proposed here 
is large (of the order of 109 rules), it is none- 
theless finite. Furthermore, the size of the gra- 
mmar is of no theoretical consequence, since it 
could be stored quite handily, not in some static 
memory (e.g., a pile of discs), but in a dynamic 
form (that is, in the form of schemata) where 
each rule is generated at the moment when the 
program of syntactic analysis (or generation) re- 
quires it. In this way, the set of rules would be 
reduced to a series of sub-programs that can ge- 
nerate either one rule, or a sub-set of rules, or 
all the rules. During analysis or generation, a 
call for rules would activate their synthesis by 
the appropriate sub-program. 
Such a program of analysis by synthesis re- 
duces the number of rules to a smaller number of 
sub-programs, but a string grammar reduces them 
still more, down to a set of about 150 strings 
(the rewrite rules) together with about 200 re- 
strictions (the CS portions attached to the CF 
rules). 
The size of the CF grammar required to de- 
scribe selection rules adequately also explains 
why all attempts at automatic syntactic analysis 
by means of strictly CF grammars undertaken until 
now have failed. The authors of these CF grammars 
limited their effort to including some rudiment- 
ary linguistic facts; the average size of this 
sort of CF grammar was of the order of several 
thousand rules (cf. Kunolg,20). Under these con- 
ditions, there was no question of providing only 
linguistically acceptable analyses. However, in 
the last few years, other CS variants of a CF 
grammar have been proposed, and partly worked 
out. In particular, the augmented transition net- 
work grammar of Bobrow & Fraser 2, especially in 
the form given it by Woods 28, has predicates as- 
sociated with the transitions, predicates that 
are so many context-sensitive tests. This kind of 
44- 
grammar is then quite similar to string grammar, 
i.e., to a CF grammar together with CS condi- 
tions on the rules. Unfortunately, none of the 
grammars based on the ideas of Bobrow and Woods 
has been worked out in sufficient detail to make 
a linguistic comparison with string grammar pos- 
sible. 
BIBLIOGRAPHY 
I. Bar-Hillel & Shamir,E., 1960. Finite-State 
Languages, in Language & Information, New York, 
Addison-Wesley, (1964). 
2. Bobrow, D. & Fraser, B., 1969. An augmented 
state transition network analysis procedure, 
Proc. of the International Joint Conference on 
Artificial Intelligence. 
3. Boons, J.-P., Guillet, A. & Leclere, C., 
1976. Classes de constructions transitives, Rap- 
port de Recherche N ? 6, L.A.D.L., Univ, de Paris 
7, Place Jussieu, Paris 
4. Chomsky, N., 1955. The logical structure of 
linguistic theory, New York, Plenum (1975). 
5. - -  1957. Syntactic Structures, The Hague 
Mouton 
6. - -  1963. Formal properties of grammars, 
in Handbook of Mathematical Psychology, Vol. 2, 
New York, John Wiley 
7. - -  1965. Aspects of the theory of syntax, 
Boston, MIT Press 
8. - -  1966. Topics in the theory of genera- 
tive grammar, in Current ~ends in Linguistics, 
Vol. 3, The Hague, Mouton 
9. Chomsky, N. & Sch~tzenberger, M., 1963. The 
algebraic theory of context-free languages, in 
Computer Progra~ning and Formal Systems, Amster- 
dam, North-Holland 
10. Gross, M., 1968. Grammaire transformation- 
nelle du frangais: le verbe, Paris, Larousse 
II. - -  1972. Mathematical Models in Linguis- 
tics, New Jersey, Prentice-Hall 
12. - -  1975. M~thodes en Syntaxe, Paris, Her- 
mann 
13. Harman, G., 1963. Generative grammars with- 
out transformation rules: a defense of phrase 
structure, Language, Vol. 39, N ? 4. 
14. Harris, Z. 1952. Discourse analysis, Langu- 
age, Vol. 28, N ? 1 
J5. - -  \]962. String analysis of sentence str- 
ucture, The Hague, Mouton 
J6. - -  1964. The elementary transformations, 
in Harris, 1970, Papers in structural and trans- 
formational linguistics, Dordrecht, Reidel 
17. 1968. Mathematical structures of lan- 
guage, New York, John Wiley 
18. Joshi & Levy, \]977. Constraints on structur- 
al descriptions: local transformations, SIAM J. 
of Computing, Vol. 6, N o 2 
19. Kuno, S., 1963. The multiple-path syntactic 
analyzer for English, Report N ? NSF-9, Computa- 
tion laboratory, Harvard, Boston. 
20. - -  1965. The predictive analyzer and a 
path elimination technique, Comm. of the Assn. 
for Comp. Mach., Vol 8, p. 453 
21. Peters, S. & Ritchie, R., 1969. Context-Sen- 
sitive immediate constituent analysis, Proc. of 
the ACMSymposium on 'Theory of Computing', New 
York, ACM 
22. Postal, P., 1964. Limitations of phrase str- 
ucture grammars, in The structure of language, 
ed. by Fodor & Katz, New Jersey, Prentice-Hall. 
23. Sager, N., 1973. The string parser for sci- 
entific literature, in Natural Language Proc- 
essing, ed. by R. Rustin, New York, Algorithmics 
Press. 
24. Salkoff, M., 1973. Une grammaire en cha~ne 
du frangais, Paris, Dunod 
25. - -  1979. Analyse syntaxique du frangais: 
grammaire en cha~ne, Amsterdam, J. Benjamins 
26. Woods, W., 1970. Transition network grammars 
for natural language analysis, Comm. of the Assn. 
for Comp. Mach., Vol. 13, p. 591 
*I should like to thank M. Gross for many 
helpful comments, and myself for an excellent 
typing job. 
45 ? 
