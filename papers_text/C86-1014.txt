PROCESSING WORD ORDER VARIAT ION WITHIN A MODIF IED ID /LP  FRAMEWORK 
Prad ip  Dey 
Univers i ty  of  A labama at  B i rmingham 
B i rmingham~ AL 35294~ U.S.A. 
ABSTRACT 
From a well represented  sample  of  wor ld  languages  
Steele (1978) shows that  about  70% of  languages  exhib i t  
s igni f icant  word  order  var ia t ion .  On ly  recent ly  has  th is  
w lde-spread  phenomenon been drawing  appropr ia te  a t tent ion .  
Perhaps  ID /LP  ( Immediate  Dominance  and  L inear  
P recedence)  f ramework  is the  most  debated  theor ies  in this  
area.  We po in t  out  some diff iculties in process ing  s tandard  
ID /LP  grammar  and  present  a modi f ied vers ion of  the  
grammar .  In the  modi f ied vers ion,  the r ight  hand side of  
phrase  s t ructure  rules is t reated  as a set or par t ia l l y  o rdered  
set. An  ins tance  of  the f ramework  is implemented.  
1. In t roduct ion  
F rom a well represented  sample  of  wor ld  languages  
Steele (1978) ~,~hows that  about  76~ of the  languages  exhib i t  
s igni f icant  word  order  var ia t ion  | . Unt i l  recent ly  thls  
w idespread  phenomenon was  not  g iven proper  a t tent ion  in 
natura l  language process ing.  The  pr imary  goal  o f  tb is  s tudy  
is to  develop eomputat lona l ly  eff icient and  l inguist ical ly  
adequate  s t ra teg les  for  pars ing  word  order  var ia t ion .  The 
s t ra teg ies  are  imp lemented  in a network  based  parser .  A t  
f irst we character i ze  the  bas ic  p rob lem at  an  abst ract  level 
w i thout  go ing into detai ls  of  the prob lem in any  specific 
language (in Sect ion-2).  Then~ in Sect lon-3,  the detai ls  of  the 
prob lems in a specific language~ namely~ Iilndi~ are presented .  
The  Immediate  dominance  and  l inear  precedence  ( ID /LP)  
f ramework~ deve loped by  Gazdar  and  Pul lum~ is one of  the 
most  debated  theor ies  in the  s tudy  of  word  order  var ia t ion  
(Pu l lum 1982~ Uszkore l t  1082, Shieber  1983, Bar ton  1985). 
The bas ic  idea beh ind  ID /LP  f ramework  is to separate  
immediate  dominance  f rom l inear precedence  in rewr i te  rules. 
Pu l lum (1982) expresses th is  via a metagrammar .  The 
modi f ied vers ion  presented  in th is  paper  expresses th is  d i rect ly  
in the  ob jec t  g rammar  e l iminat ing  the need for  a 
metagrammar .  I t  t reats  the  r ight  hand side of  a PS  (Phrase  
St ructure)  ru le as a set or  par t ia l l y  o rdered  set.  Pars ing  wi th  
th is  type  of  rule can  proceed by  check ing set  membersh ip .  
2. The  Word  Order  P rob lem in Genera l  
The  word  order  prob lem is the  prob lem of process ing  the 
whole range  of  word  order  var ia t ion  occur r ing  in natura l  
languages .  Some Aust ra l ian  languages  uch  as War lp i r i  show 
ext reme word  order  var ia t ion  (Hale 1983). Hindi ,  Japanese  
and  German also al low cons iderab le  word  order  var ia t ion .  In 
th is  sect ion we develop descr ipt ive fo rmal i sms and  pars ing  
mechan isms that  are  adequate  for  the  whole range  of  word  
order  var ia t ion .  
Cons ider  a grammar  thdt  al lows a node  labeled S to  have  
daughters  labeled $, O, and  ? in any  l inear order~ and 
noth ing  else. Such  a grammar  can  be presented  w i th  a set of  
ru les such  as that  g iven in (2.1). 
(2.1) S --> $ OV,  S --> $VO,  S --> 0 SV, 
S- -> OV$,  S - -> V$O,  S - -> VO$ 
The  prob lem wi th  a grammar  such  as that  given in 
(2.1) is that  i~ needs  too  many rules to  capture  word  order  
var ia t ion  (in th is  case free word  order ) .  For  5 'words '  such  a 
grammar  will need 5! = 120 rules. Wi th  the  increase in the 
number  of words ,  such  a gra lnmar  will g row factor ia l ly .  That  
is, for  a number  of  words  it will need n/ rules. 
There  is a convYnient way  of  'co l laps ing'  rules in GPSG 
(Genera l ized Phrase  St ructure  Grammar)  of  Gazder  (1981). It 
uses metaru les  that  operate  on bas ic  rules to  generate  der ived 
rules wh ich  then  funct ion  as bas ic  rules in der ivat ions .  Thus ,  
(2.1) can  be abbrev ia ted  as (2.2). 
(2.2) Basic rule: \[_~ $ O V \ ]  
Metaru le :  \[5....X...Y...\] = :> \[S....y...X...\] 
where  X and  Y range  over  $, O, V. 
Wi th in  GPSG Pu l lmn (1982) suggests  another  so lut ion 
wh ich  also involves a metagrammar ,  t ie suggests  that  a 
grammar  such  as (2.1) can  be expressed v ia a metagrammar  
that  t reats  immediate  dominance  and  l inear precedence 
separate ly .  Pu l lum's  theory  is known as ID /LP  analys is  2 
Accord ing  to  th is  theory  grammar  (2.1) "would be specif ied by  
means  of  the  metagrammar"  given in (2.3). Similarlyj  the 
metagrammar  given in (2.4) "determines"  the  grammar  shown 
in (2.5). In (2.3) and  (2.4) i . . . . .  d iate  doml  . . . .  e s tar  . . . .  ts 
are given under  a~ and l inear  precedence  s ta tements  are given~ 
under  b. In the  case of  (2.3) however  the set of  l inear 
precedence s ta tements  is empty .  In the  case of  (2.4) $ ( O 
means  'it" any  rule in t roduces  $ and  O, $ l inear ly precedes O' .  
(2.3)a. {S- -> $ ,O,V}  b. {$}  
(2.4)a. {S- -> $ ,O,V}  h. ( *<O} 
(2.5) ( s ->.*ov ,  s ->$vo ,  s ->v$o} 
An impor tant  advantage  of  ID /LP  analys is  is that  it 
can  account  for  word  order  var ia t ion  in a genera l  way ,  
captur ing  "ana ly t i ca l  intult ion~ o f ten  h in ted  at  in the 
l i terature,  that  f ixing const i tuent  o rder  "costs"  in the same 
way that  hav ing  special  NP  case-mark ing  rules or verb 
agreement  rules does" (Pn l lum 1982: 211). The  main  
d i sadvantage  of  the  s tandard  ID /LP  f ramework  is th~:t it is 
diff icult to process  (Shieber 1983, Bar ton  1985). 
The a l te rnat ive  so lut ion proposed in th is  s tudy  t reats  the 
r igbt  hand side of  a rule as a set3  . Thus~ the grammar  in 
(2.1) can  be p . . . . .  ted in th is  format,  e i th . . . .  (2.6a) or  as 
(2.6b). The  la t ter  rule is to  be unders tood  under  the node 
admiss ib i l i ty  condi t ion .  
(2.a)a. S ->($ ,o ,v}  b. (5 $ ' ? 'v}  
Since the  r ight  hand side of  the  rule is a se G the  order  of  
$~ O and V does not  mat ter .  In pars ing ,  th is  so lut ion has 
definite advantages .  Firstly~ the  factor ia l  g rowth  of  rules is 
e l iminated.  Secondly~ pars ing  can  proceed by  check ing set 
membersh ip  or set difference. That  is, ins tead of  'o rdered  
match '  the  parser  has  to  do 'unordered  match ' .  The precise 
way  of  do ing  it will vary  f rom parser  to  parser .  We descr ibe 
one way  o f  imp lement ing  it in the ATN (Augmented  
Trans i t ion  Network  (Woods  1970, F in ln  and  Hadden 1977)) 
fo rmal i sm.  
Cons ider  the  ATN f ragment  presented  below in (2.7) for  
the  grammar  given in (2.6). Cond i t ions  on  are  are  given in . 
L ISP like s t ructures  wi th in  parenthes is .  Thus  (null $) means  'if 
65 
S-reglster is empty ' .  By the  arc WRD $ (null $), the  'word'  $ 
will be accepted if no $ has previously been found. (In natura l  
language, one can assume $ ~ Subject,  O ~ Object,  V = 
Verb, and use PUSH arc in place of WRD in the fol lowing 
d iagram.)  
(2.7) 
WRD, (N~LL 
~ :23 WRDO(NULL_  O) / / 
WRD V (NULL V) J 
~ 4 POP (NOTNULL  $)(NOTNULL O) (NOTNULL V)~ 
(2.7) parses any st r ings  generated by (2.1) by  scanning 
the input  f rom left to r ight  and checking the set membersh ip .  
Thus, in recogni t ion and  pars ing,  (2.7) correct ly reflects (2.0). 
Suppose, the input  s t r ing  is VO$. One way to see how a 
sentence is parsed is to t race  through the analysis  of the 
sentence as are sequence. This  s t r ing is accepted by  the arc 
sequence (3, 2, 1, 4). The ATN given in (2.7) can be said to 
have condit ioned mult ip le  loops. For  convenience of 
reference, we shal l  refer to ATN s t ructures  uch as (2.7) as 
'set-loops'.  Fur ther  restr ict ions on set- loops (such as (2.7)) can 
be imposed and all const i tuent  order  var ia t ions  can be parsed 
s imply by impos ing add i t iona l  condit ions on arcs. Thus,  an 
ATN parser  such as (2.8b) can parse the language generated 
by the grammar  given in (2.5). Formal ly ,  (2.5) is presented 
with a par t ia l ly  ordered set such as (2.8a) in the proposed 
f ramework.  The par t ia l  order ing is specif ied as a const ra in  
after "/"~ as in a context-sensi t lve rule contexts  are specif ied 
after "/''. 
(2.8)a. ( * ,O ,V}/$<O 
(2.8)b. 
( WRD $ _(NUL____~L 
~D O (NULL O) (NOTNULL $) 
WRD V (NULL V) 
POP (NOTNULL  $)(NOTNULL O) (NOTNULL V~ 
Suppose that  $, O, and V are nontermlna ls  which are 
fur ther  expanded by appropr ia te  rewri te rules. R ight  hand  
side of such expans ions can also show word order var iat ions  as 
shown in (2.9). 
(2.9) $ --:> {a ,b ,c} ,  O --> (d,e},  V --~> {f ,g ,h}  
So far, we have descr ibed pars ing st rategies  for 
const i tuent  order  var iat ions.  However, in natura l  language we 
often find a d iscont inuous const i tuent .  That  is, an e lement  
can be moved out  of i ts const i tuent  ( toplcal izat ion in Engl ish 
would be a good example  if VP  is a const i tuent)  which can be 
described by  categor ies w i th  holes (eg. VP /NP) .  In cases such 
as this, V IR arcs in combinat ion  with hold l ists arc used in 
ATN (Bates 1978). A l ternat ive ly ,  temporary  registers can be 
used to parse d iscont inuous const i tuents .  Temporary  
66 
registers are par t icu lar ly  su i tab le  to handle  large number  of 
'misplaced'  words that  cannot  be handled by  usual  HOLD lists 
in combinat ion  wi th  VIR arcs. We would l lke to apply  the 
general  s t rateg ies  descr ibed above to the case of Hindi which 
shows considerable word order  var iat ion.  
3. Word  Order  in Hindi 
In Hindl,  the order  of the major  const i tuents  such as $ 
(Subject),  O (direct Object) ,  I ( Indirect object),  and  V (Verb 
(+aux))  is free. For  example,  out  of the four const i tuents  
present  in (3.11.1), we can make twenty  four var iants  of the  
same senteneep all  of which are perfect ly good in Hindi as is 
obvious f rom (3.11.1-24). 
(3.11/1. mohan ne raam ko sev d laa thaa .  ($IOV / 
Mohan ag Ram to apple gave was 
"Mohan gave the apple to Ram."  
2. mohan ne raam ko d laa thaa  sev. ($IVO) 
3. mohan ne d iaa than  raam ko sev. ($VIO) 
4. mohan ne d iaa than  sev raam ko. ($VOI) 
24. d iaa thaa  sev mohan ne raam ko. (VO$I) 
To capture  the f reedom of order  of $, I, O~ and V in 
sentences uch as (3.11) We can have a rule such as (3.12) in 
the grammar  of Hindl. The V alone can s tand  as a sentence in 
Hindi since it is h ighly inf lected (see Kachru  1980). Hence 
(3.13) is more appropr ia te  for Hindi where $~ I, and O are 
given wi th in  paratheses  to show thei r  opt ional  occurrence. 
(3.12) (S ~'I'O'V } 
(3.13) ( ~ (,), (I), (o), v } 
We have been referr ing to rules such as (3.13 / as set 
rules. An ATN f ragment ,  such as (3.14) would be appropr ia te  
for (3.13 /. 
IC PUSH CNULL,I _j / / 
5 POP (NOTNULL  V) f 
(Assume appropr ia te  subnets  for $, I, O, V) 
Suppose we are pars ing (3.11.1) mohaa nc raam ko sev diaa than 
"Mohan gave the apple to Ram". I t  is accepted by the arc 
seq . . . . .  (1, 2, 3, 4, 5). The sentence given in (3.11.24) is 
accepted by the arc sequence (3, 1, 4, 2, 51 . (3.14) captures  
const i tuent  order  var ia t ion  in Hindl in a general  way. 
However, it is to be noted that  sentences uch as (3.11.1) have 
b l - t rans l t ive  (or double t rans i t ive)  V. We have to impose 
more condit ions on arc 5, POP,  to parse int rans i t ive  and 
t rans i t ive  sentences. Informal ly,  the condit ions are: (1 / If  the  
V is in t rans i t ive  then  the I and O must  be empty.  (2) If  the V 
is t rans i t ive  then  the I must  be empty.  We have implemented  
a large parser of Hindl wlth wide coverage of construction 
types including relative clauses, interrogatives, passives, 
dative subjects, compound verbs and gapping which interact 
with word order variation (see Dey 1982, 1984). 
Word order variat ion in Hindl is fairly restrictive. Thus, 
in the sentences of (3.11) the main verb must precede the 
AUX. (3.15) is unacceptable because it violates this restriction. 
(3.15) * thaa dlaa sev mohan ne raam ko. 
was gave apple Mohan ag Ram to 
Similarly, (3.16) violates the restrictlon that  the case elements 
must follow the noun (Verma 1970). 
(3.18) * m~ mohan ram ko sev diaa thaa. 
ag Mohan Ram to apple gave was 
As obvious frmn (3.15-16), all rules of tIindi are not 
'set.rules'. Thus, the subject"NP, $, cannot be expanded by 
(3.17a); rat\] . . . .  w . . . .  th . . . . . .  1 (3.17b). 
(3.17)a. {-*e NP, K } b. \[ $ NP K \] 
(Assume \[NP mohan\], \[K ne\]) 
In the modified ID/LP fl'amework we allow strict order 
rules such as (3.17b), fr . . . .  d . . . . .  I . . . . . .  h as (3.14) and 
partial order rules such as (2.8a). We also allow notions llke 
subject and object. That  means the grammar is an annotated 
PS grammar.  The parsing strategy suggested above for this 
grammar has an important consequence. It does not recognize 
VP (thab dominates V, O, I) as a constituent. It advocates a 
'flat' structure for sentences as shown in (3.1.8). 
(3.18) S 
( 1 o v 
mohan ne raam ko sev dl aa 
"Mohan gave tbe apple to Ram." 
It should be noted that  actual structural  representations 
should be given with mort  details. Some parse trees given by 
the parser are presented below: 
(3.19) (p . . . . .  (inoh . . . . . . .  aln k . . . .  dlaa thaa)) 
(S (NP-subj (NP (DEW nil) (ADJ) (N mohan)) (K-ag he)) 
(NP-ind (NP (DET nil) (ADJ) (N . . . . . .  )) (K-dat ko)) 
(NP-obj (NP (DET nil) (ADJ) (N sev))) 
(VX (ADV) (V dlaa (AUX thaa))))t 
(3.20) (parse (diaa thaa sev raam ko mohan ne)) 
(S (NP-sul,j (NP (DET nil) (ADJ) ( i  mohan)) (K-ag ne)) 
(NP-ind (NP (DET nil) (hDJ) ( i  raam)) (K-dat ko)) 
( i P -ob j  ( i l '  (DET nil) (ADJ) (N sev))) 
(VX (ADV) (V diaa (AUX thaa))))t 
It is t~o be noted that  though case words llke ne and ko 
often help to identify subjects, objects etc. the parser must 
use semantic information in order to identify them in 
sentences mlch as the ones given in (3.21-22) (see Dey 1984). 
(3.21.) (parse (mohan anDaa khaataa  hat)) 
Mohan egg eats is 
"Mohan eats an egg" 
(S (NP-subj (NP (DET nil) (ADJ) (N mohan)) (K-ag nil)) 
(NP-Ind nil (K-dat nil)) 
(NP-obj (NP (DET nil) (ADJ) ( i  anDaa))) 
(VX: (ADV) (V khaataa  (AUX hal))))t 
(3.22) (p . . . .  (anDaa mohan khaataa hal)) 
"Mohan eats an egg" 
(S (NP-subj (NP (DET nil) (ADJ) (N mohan)) (K-ag nil)) 
(NP-ind nll (K-dat nil)) 
(NP-obj (NP (DET nil) (ADJ) (N anDaa))) 
(VX (ADV) (V khaataa (AUX hai))))t 
4. Concluding Remarks 
Processing word order variation with new techniques 
within the modified ID/LP framework seems to be revealing. 
But, it is not eontext"fl'ee nnlike other ID/LP based parsers. 
Detailed comparison of I I ) /LP based parsers is a subject of 
further research. 
Footnotes: 
1. I am grateful to A. K. Joshi, A. Kroch, T. Finln, D. 
Itindle, S. Gambhlr, K. Reilly, D. Kaemmerer, K. Ryan, II. 
Bullock and the anonymous COLING-86 referees for thelr 
helpful suggestions and comments. 
2. See Uszkoreit (1982) for an implementation of ID/LP 
framework. 
3. The right hand side of a rule should be treated as a 
restricted set rather than as a pure set. The restriction can bc 
stated as follows: a membvr of a set can occur only once in the 
set unless specified otherwise. Thus, though formally the 
following two sets are equal, under the restrictions imposed 
they are notequah { $, O, V } =#= { $, O,V, $,V } 
References: 
Barton, G. \]5. Jr. 1985. "On the Complexity of ID/LP Parsing" 
Computational Linguistics, 11, 205-218 
Bates, M. 1978. "The Theory and Practice of Augmented 
Transit ion Network gramnlars". In L. Bole (ed.) Natural 
Language Communication with Computers. Spring Verlag, 
\]\]erlin: 191-259. 
Dey, P. \]982. "A Parser for Hindi". Presented to 4th South 
Asian Languages Round Table, Syracuse, 1982. 
...... 1984. Computatlonal ly Efficient and Linguistically 
Adequate Parsing of Some Natural  Language Structures. 
Ph.D. diss., University of Pennsylvania. 
Finin, T. and G. I Iadden \].977. "Augmenting ATNs". In the 
Proceedings of the 5th IJCAI. 
Gambhlr, V. 1980. Syntactic Restrictions and Discourse 
Functions of Word Order of Standard tIindl. Ph.D. 
diss., University of Pennsylvania. 
Gazdar, G. 1981. "Unbounded Dependencies and Coordinatc 
Stmlcture", Linguistic Inquiry 12, 155-184. 
Hale, K. 1983. "Warlpiri and the Grammar of Non- 
configurational Languages," Natural  Language and 
Linguistic Theory, 1.5-48. 
Kachru, Y. 1980. Aspects of Hindl Syntax. Delhi: Monohar. 
Pullum, G. K. 1982. "Free Word Order and Phrase Structure 
Rules," NELS, 12, 209-222. 
..... 1983. "Context-freeness and the Computer Processing of 
Human Languages," Prec. of the 21st ACL Conference. 
Shleber, S. 1fl83. "Direct Parsing of ID/LP Grammars," 
Lingnlstlcs and Philosophy 7:2. 
Steele, S. 1981. "Word Order Variation: A Typological Study," 
in J. Greenberg (ed.) Universals of Language, Vol. 4. 
Stanford, CA: Stanford University Press. 
Uszkorelt, H. 1982. "A Framework for Parsing Partial ly Free 
Word Worder," Proceedings of the 21st ACL Conference. 
Verma, M. K. 1971. The Structure of Noun Phrase in English 
and Hindi. Delhi: Motilal Banarsldas. 
Woods, W.A. 1970. "Transition Network Grammars for 
Natural  Language Analysis," Comm. of ACM \]3, 591-60{5. 
67 
