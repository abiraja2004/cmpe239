Proceedings of the 4th International Workshop on Cross Lingual Information Access at COLING 2010, pages 26?34,
Beijing, August 2010
Multi-Word Expression-Sensitive Word Alignment
Tsuyoshi Okita1, Alfredo Maldonado Guerra2, Yvette Graham3, Andy Way1
{CNGL1, NCLT3} / School of Computing / Dublin City University,
CNGL / School of Computer Science and Statistics / Trinity College Dublin2
{tokita,ygraham,away}@computing.dcu.ie, maldonaa@scss.tcd.ie
Abstract
This paper presents a new word align-
ment method which incorporates knowl-
edge about Bilingual Multi-Word Expres-
sions (BMWEs). Our method of word
alignment first extracts such BMWEs in
a bidirectional way for a given corpus and
then starts conventional word alignment,
considering the properties of BMWEs in
their grouping as well as their alignment
links. We give partial annotation of align-
ment links as prior knowledge to the word
alignment process; by replacing the max-
imum likelihood estimate in the M-step
of the IBM Models with the Maximum A
Posteriori (MAP) estimate, prior knowl-
edge about BMWEs is embedded in the
prior in this MAP estimate. In our exper-
iments, we saw an improvement of 0.77
Bleu points absolute in JP?EN. Except
for one case, our method gave better re-
sults than the method using only BMWEs
grouping. Even though this paper does
not directly address the issues in Cross-
Lingual Information Retrieval (CLIR), it
discusses an approach of direct relevance
to the field. This approach could be
viewed as the opposite of current trends
in CLIR on semantic space that incorpo-
rate a notion of order in the bag-of-words
model (e.g. co-occurences).
1 Introduction
Word alignment (Brown et al, 1993; Vogel et
al., 1996; Och and Ney, 2003a; Graca et al,
2007) remains key to providing high-quality trans-
lations as all subsequent training stages rely on its
performance. It alone does not effectively cap-
ture many-to-many word correspondences, but in-
stead relies on the ability of subsequent heuristic
phrase extraction algorithms, such as grow-diag-
final (Koehn et al, 2003), to resolve them.
Some aligned corpora include implicit partial
alignment annotation, while for other corpora a
partial alignment can be extracted by state-of-
the-art techniques. For example, implicit tags
such as reference number within the patent cor-
pus of Fujii et al (2010) provide (often many-to-
many) correspondences between source and tar-
get words, while statistical methods for extract-
ing a partial annotation, like Kupiec et al (1993),
extract terminology pairs using linguistically pre-
defined POS patterns. Gale and Church (1991)
extract pairs of anchor words, such as num-
bers, proper nouns (organization, person, title),
dates, and monetary information. Resnik and
Melamed (1997) automatically extract domain-
specific lexica. Moore (2003) extracts named-
entities. In Machine Translation, Lambert and
Banchs (2006) extract BMWEs from a phrase ta-
ble, which is an outcome of word alignment fol-
lowed by phrase extraction; this method does not
alter the word alignment process.
This paper introduces a new method of incorpo-
rating previously known many-to-many word cor-
respondences into word alignment. A well-known
method of incorporating such prior knowledge
in Machine Learning is to replace the likelihood
maximization in the M-step of the EM algorithm
with either the MAP estimate or the Maximum
Penalized Likelihood (MPL) estimate (McLach-
26
lan and Krishnan, 1997; Bishop, 2006). Then, the
MAP estimate allows us to incorporate the prior,
a probability used to reflect the degree of prior be-
lief about the occurrences of the events.
A small number of studies have been carried
out that use partial alignment annotation for word
alignment. Firstly, Graca et al (2007) introduce
a posterior regularization to employ the prior that
cannot be easily expressed over model parameters
such as stochastic constraints and agreement con-
straints. These constraints are set in the E-step to
discard intractable alignments contradicting these
constraints. This mechanism in the E-step is in a
similar spirit to that in GIZA++ for IBM Model
3 and 4 which only searches around neighbour-
ing alignments around the Viterbi alignment. For
this reason, this algorithm is not intended to be
used combined with IBM Models 3 and 4. Al-
though theoretically it is possible to incorporate
partial annotation with a small change in its code,
Graca et al do not mention it. Secondly, Tal-
bot (2005) introduces a constrained EM method
which constrains the E-step to incorporate par-
tial alignment into word alignment,1 which is in
a similar manner to Graca et al (2007). He con-
ducted experiments using partial alignment anno-
tation based on cognate relations, a bilingual dic-
tionary, domain-specific bilingual semantic anno-
tation, and numerical pattern matching. He did
not incorporate BMWEs. Thirdly, Callison-Burch
et al (2004) replace the likelihood maximization
in the M-step with mixed likelihood maximiza-
tion, which is a convex combination of negative
log likelihood of known links and unknown links.
The remainder of this paper is organized as fol-
lows: in Section 2 we define the anchor word
alignment problem. In Section 3 we include
a review of the EM algorithm with IBM Mod-
els 1-5, and the HMM Model. Section 4 de-
scribes our own algorithm based on the combina-
tion of BMWE extraction and the modified word
alignment which incorporates the groupings of
BMWEs and enforces their alignment links; we
explain the EM algorithm with MAP estimation
1Although the code may be similar in practice to our Prior
Model I, his explanation to modify the E-step will not be
applied to IBM Models 3 and 4. Our view is to modify the
M-step due to the same reason above, i.e. GIZA++ searches
only over the alignment space around the Viterbi alignment.
pair GIZA++(no prior) Ours(with prior)
EN-FR fin ini prior fin ini prior
is NULL 1 .25 0 0 .25 .25
rosy en 1 .5 0 0 .5 .2
that . 1 .25 0 0 .25 .25
life la 1 .25 0 0 .25 0
. c? 1 .25 0 0 .25 .25
that c? 0 .25 0 1 .25 .25
is est 0 .25 0 1 .25 .25
life vie 0 .5 0 1 .5 1
rosy rose 0 .25 0 1 .25 .2
Table 1: The benefit of prior knowledge of anchor
words.
with three kinds of priors. In Section 5 our exper-
imental results are presented, and we conclude in
Section 6.
2 Anchor Word Alignment Problem
The input to standard methods of word alignment
is simply the sentence-aligned corpus, whereas
our alignment method takes in additionally a par-
tial alignment. We assume, therefore, the avail-
ability of a partial alignment, for example via a
MWE extraction tool. Let e? denote an English
sentence, and e denote an English word, through-
out this paper. The anchor word alignment prob-
lem is defined as follows:
Definition 1 (Anchor Word Alignment Problem)
Let (e?, f?) = {(e?1, f?1), . . . , (e?n, f?n)} be a parallel
corpus. By prior knowledge we additionally
have knowledge of anchor words (e?, f?) =
{(senti, te1, tf1 , pose1, posf1 , lengthe, lengthf ),
. . ., (sentk, ten , tfn , posen , posfn , lengthe,
lengthf )} where senti denotes sentence ID,
posei denotes the position of tei in a sentence e?i,
and lengthe (and lengthf ) denotes the sentence
length of the original sentence which includes
ei. Under a given (e?, f?) and (e?, f?), our objective
is to obtain word alignments. It is noted that an
anchor word may include a phrase pair which
forms n-to-m mapping objects.
Table 1 shows two example phrase pairs for
French to English c?est la vie and that is life, and
la vie en rose and rosy life with the initial value
for the EM algorithm, the prior value and the fi-
27
Statistical MWE extraction method
97|||groupe socialiste|||socialist group|||26|||26
101|||monsieur poettering|||mr poettering|||1|||4
103|||monsieur poettering|||mr poettering|||1|||11
110|||monsieur poettering|||mr poettering|||1|||9
117|||explication de vote|||explanation of vote|||28|||26
Heuristic-based MWE extraction method
28|||the wheel 2|||?? ?||| 25||| 5
28|||the primary-side fixed armature 13|||? ? ? ?
? ?? ? ? ?||| 13||| 9
28|||the secondary-side rotary magnet 7|||? ? ? ?
? ????? ?||| 15||| 11
Table 2: Example of MWE pairs in Europarl cor-
pus (FR-EN) and NTCIR patent corpus (JP-EN).
There are 5 columns for each term: sentence num-
ber, source term, target term, source position, and
target position. The number appended to each
term from the patent corpus (lower half) is a ref-
erence number. In this corpus, all the important
technical terms have been identified and annotated
with reference numbers.
nal lexical translation probability for Giza++ IBM
Model 4 and that of our modified Giza++. Our
modified Giza++ achieves the correct result when
anchor words ?life? and ?vie? are used to assign a
value to the prior in our model.
3 Word Alignment
We review two models which address the prob-
lem of word alignment. The aim of word align-
ment is to obtain the model parameter t among
English and French words, ei and fj respectively.
We search for this model parameter under some
model M where M is chosen by IBM Models 1-
5 and the HMM model. We introduce the latent
variable a, which is an alignment function with
the hypothesis that each e and f correspond to this
latent variable. (e, f, a) is a complete data set, and
(e, f) is an incomplete data set.
3.1 EM Algorithm
We follow the description of the EM algorithm for
IBM Models of Brown et al (1993) but introduce
the parameter t explicitly. In this model, the pa-
rameter t represents the lexical translation proba-
bilities t(ei|fj). It is noted that we use e|f rather
than f |e following the notation of Koehn (2010).
One important remark is that the Viterbi align-
ment of the sentence pair (e?, f?) = (eJ1 , f I1 ), which
is obtained as in (1):
Eviterbi : a?J1 = argmaxaJ1
p??(f, a|e) (1)
provides the best alignment for a given log-
likelihood distribution p??(f, a|e). Instead of sum-
ming, this step simplifies the E-step. However, un-
der our modification of maximum likelihood esti-
mate with MAP estimate, this simplification is not
a correct approximation of the summation since
our surface in the E-step is greatly perturbed by
the prior. There is no guarantee that the Viterbi
alignment is within the proximity of the target
alignment (cf. Table 1).
Let z be the latent variable, t be the parameters,
and x be the observations. The EM algorithm is
an iterative procedure repeating the E-step and the
M-step as in (2):
EEXH : q(z;x) =p(z|x; ?) (2)
MMLE : t? = argmax
t
Q(t, told)
= argmax
t
?
x,z
q(z|x) log p(x, z; t)
In the E-step, our knowledge of the values of the
latent variables in a is given only by the poste-
rior distribution p(a|e, f, t). Hence, the (negative
log)-likelihood of complete data (e, f, a), which
we denote by ? log p(t|e, f, a), is obtained over
all possible alignments a. We use the current pa-
rameter values told to find the posterior distribu-
tion of the latent variables given by p(a|e, f, told).
We then use this posterior distribution to find the
expectation of the complete data log-likelihood
evaluated for parameter value t. This expectation
is given by
?
a p(a|e, f, told) log p(e, f, a|t).
In the M-step, we use a maximal likelihood es-
timation to minimize negative log-likelihood in
order to determine the parameter t; note that t is
a lexical translation probability. Instead of using
the log-likelihood log p(a, e, f |t), we use the ex-
pected complete data log-likelihood over all the
possible alignments a that we obtained in the E-
28
step, as in (3):
MMLE : t? = argmax
t
Q(t, told) (3)
= c(f |e; f, e)?
e c(f |e; f, e)
where an auxiliary function c(e|f ; e, f) for IBM
Model 1 introduced by Brown et al is defined as
c(f |e; f, e) =
?
a
p(a|e, f)
m?
j=1
?(f, fj)?(e, eaj )
and where the Kronecker-Delta function ?(x, y) is
1 if x = y and 0 otherwise. This auxiliary func-
tion is convenient since the normalization factor of
this count is also required. We note that if we use
the MAP estimate, the E-step remains the same as
in the maximum likelihood case, whereas in the
M-step the quantity to be minimized is given by
Q(t, told) + log p(t). Hence, we search for the
value of t which maximizes the following equa-
tion:
MMAP : t? = argmax
t
Q(t, told) + log p(t)
3.2 HMM
A first-order Hidden Markov Model (Vogel et al,
1996) uses the sentence length probability p(J |I),
the mixture alignment probability p(i|j, I), and
the translation probability, as in (4):
p(f |e) = p(J |I)
J?
j=1
p(fj|ei) (4)
Suppose we have a training set of R observation
sequences Xr, where r = 1, ? ? ? , R, each of which
is labelled according to its class m, where m =
1, ? ? ? ,M , as in (5):
p(i|j, I) = r(i? j
I
J )?I
i?=1 r(i? ? j IJ )
(5)
The HMM alignment probabilities p(i|i?, I) de-
pend only on the jump width (i ? i?). Using a set
of non-negative parameters s(i? i?), we have (6):
p(i|i?, I) = s(i ? i
?)
?I
l=1 s(l ? i?)
(6)
4 Our Approach
Algorithm 1 Overall Algorithm
Given: a parallel corpus,
1. Extract MWEs by Algorithm 2.
2. Based on the results of Step 1, specify a set
of anchor word alignment links in the format of
anchor word alignment problem (cf. Definition
1 and Table 2).
3. Group MWEs in source and target text.
4. Calculate the prior in order to embed knowl-
edge about anchor words.
5. Calculate lexical translation probabilities
with the prior.
6. Obtain alignment probabilities.
7. Ungroup of MWEs in source and target text.
Algorithm 1 consists of seven steps. We use the
Model I prior for the case where our prior knowl-
edge is sparse and evenly distributed throughout
the corpus, whereas we use the Model II prior
when our prior knowledge is dense in a partial
corpus. A typical example of the former case
is when we use partial alignment annotation ex-
tracted throughout a corpus for bilingual terminol-
ogy. A typical example of the latter case is when a
sample of only a few hundred lines from the cor-
pus have been hand-annotated.
4.1 MWE Extraction
Our algorithm of extracting MWEs is a statisti-
cal method which is a bidirectional version of Ku-
piec (1993). Firstly, Kupiec presents a method to
extract bilingual MWE pairs in a unidirectional
manner based on the knowledge about typical
POS patterns of noun phrases, which is language-
dependent but can be written down with some ease
by a linguistic expert. For example in French they
are N N, N prep N, and N Adj. Secondly, we take
the intersection (or union) of extracted bilingual
MWE pairs.2
2In word alignment, bidirectional word alignment by tak-
ing the intersection or union is a standard method which
improves its quality compared to unidirectional word align-
ment.
29
Algorithm 2 MWE Extraction Algorithm
Given: a parallel corpus and a set of anchor
word alignment links:
1. We use a POS tagger (Part-Of-Speech Tag-
ger) to tag a sentence on the SL side.
2. Based on the typical POS patterns for the SL,
extract noun phrases on the SL side.
3. Count n-gram statistics (typically n =
1, ? ? ? , 5 are used) on the TL side which jointly
occur with each source noun phrase extracted
in Step 2.
4. Obtain the maximum likelihood counts of
joint phrases, i.e. noun phrases on the SL side
and n-gram phrases on the TL side.
5. Repeat the same procedure from Step 1 to 4
reversing the SL and TL.
6. Intersect (or union) the results in both direc-
tions.
Let SL be the source language side and TL be
the target language side. The procedure is shown
in Algorithm 2. We informally evaluated the
MWE extraction tool following Kupiec (1993) by
manually inspecting the mapping of the 100 most
frequent terms. For example, we found that 93 of
the 100 most frequent English terms in the patent
corpus were correctly mapped to their Japanese
translation.
Depending on the corpus, we can use more
prior knowledge about implicit alignment links.
For example in some categories of patent and
technical documents corpora,3 we can use heuris-
tics to extract the ?noun phrase? + ?reference
number? from both sides. This is due to the fact
that terminology is often labelled with a unique
reference number, which is labelled on both the
SL and TL sides.
4.2 Prior Model I
Prior for Exhaustive Alignment Space IBM
Models 1 and 2 implement a prior for all possible
3Unlike other language pairs, the availability of
Japanese?English parallel corpora is quite limited: the NT-
CIR patent corpus (Fujii et al, 2010) of 3 million sentence
pairs (the latest NTCIR-8 version) for the patent domain and
JENAAD corpus (Utiyama and Isahara, 2003) of 150k sen-
tence pairs for the news domain. In this regard, the patent
domain is particularly important for this particular language
pair.
Algorithm 3 Prior Model I for IBM Model 1
Given: parallel corpus e?, f? ,
anchor words biTerm
initialize t(e|f ) uniformly
do until convergence
set count(e|f ) to 0 for all e,f
set total(f) to 0 for all f
for all sentence pairs (e?s,f?s)
prior(e|f)s = getPriorModelI(e?, f? , biT erm)
for all words e in e?s
totals(e) = 0
for all words f in f?s
totals(e) += t(e|f )
for all words e in e?s
for all words f in f?s
count(e|f )+=t(e|f)/totals(e)? prior(e|f)s
total(f) += t(e|f)/totals(e) ? prior(e|f)s
for all f
for all e
t(e|f ) = count(e|f)/total(f)
alignments exhaustively. Such a prior requires the
following two conditions. Firstly, partial knowl-
edge about the prior that we use in our context is
defined as follows. Let us denote a bilingual term
list T = {(s1, t1), . . . , (sm, tm)}. For example
with IBM Model 1: Let us define the following
prior p(e|f, e, f ;T ) from Equation (4):
p(e|f, e, f ;T ) =
?
?
?
1 (ei = si, fj = tj)
0 (ei = si, fj 6= tj)
0 (ei 6= si, fj = tj)
uniform (ei 6= si, fj 6= tj)
Secondly, this prior should be proper for the ex-
haustive case and non-proper for the sampled
alignment space where by proper we mean that the
probability is normalized to 1. Algorithm 3 shows
the pseudo-code for Prior Model I. Note that if
the prior is uniform in the MAP estimation, this is
equivalent to maximum likelihood estimation.
Prior for Sampled Alignment (Function) Space
Due to the exponential costs introduced by fertil-
ity, null token insertion, and distortion probability,
IBM Models 3 and 4 do not consider all (I + 1)J
alignments exhaustively, but rather a small subset
in the E-step. Each iteration only uses the sub-
set of all the alignment functions: this sampling
30
is not uniform, as it only includes the best possi-
ble alignment with all its neighbouring alignments
which differ from the best alignment by one word
(this can be corrected by a move operation) or two
words (this can be corrected by a swap operation).
If we consider the neighbouring alignment via
a move or a swap operation, two issues arise.
Firstly, the fact that these two neighbouring align-
ments are drawn from different underlying distri-
butions needs to be taken into account, and sec-
ondly, that the application of a move and a swap
operation alters a row or column of a prior ma-
trix (or indices of the prior) since either operation
involves the manipulation of links.
Algorithm 4 Pseudo-code for Prior Model II Ex-
haustive Alignment Space
def getPriorModelII(e?,f? ,biTerm):
for i in sentence:
for e in e?i:
allWordsi = length of sentence e?
for f in f?i:
if (e, f ) in biTerm:
n= num of anchor words in i
uni(e|f)i = allWordsi?nallWordsi
expSum(e|f) += uni(e|f)i ? n
else:
countSum(e|f)i += n
countSum(e|f) += count(e|f)i
for e in alle:
for f in allf :
prior(e|f) = expSum(e|f) + countSum(e|f)
return prior(e|f)
Prior for Jump Width i? One implementation
of HMM is to use the forward-backward algo-
rithm. A prior should be embedded within the
forward-backward algorithm. From Equation (6),
there are three cases which depend on whether
ai and its neighbouring alignment ai?1 are deter-
mined by our prior knowledge about anchor words
or not. When both ai and aj are determined, this
probability is expressed as in (7):
p(i? i?; I) =
?
?
?
0 (else) (7)
1 (ei = si, fj = tj for ai) and
(e?i = s?i, f ?j = t?j for aj)
When either ai or aj is determined, this probabil-
ity is expressed as in (8):4
p(i? i?; I) =
?
???
???
0 (condition 1) (8)
1 (condition 2)
1
(m?#eai?????#eai+m)
(else)
(uniform distribution)
When neither ai nor aj is determined, this proba-
bility is expressed as in (9): 5
p(i? i?; I) =
?
????
????
0 (condition 3) (9)
1 (condition 4)
m?i?
(m?#eai?????#eai+m)2
(else)
(Pascal?s triangle distribution)
4.3 Prior Model II
Prior Model II assumes that we have prior knowl-
edge only in some part of the training corpus. A
typical example is when a small part of the corpus
has a hand-crafted ?gold standard? annotation.
Prior for Exhaustive Alignment Space Prior
Model II is used to obtain the prior probability
p(e|f) over all possible combinations of e and f .
In contrast to Prior Model I, which computes the
prior probability p(e|f) for each sentence, Prior
Model II computes the prior probability globally
for all sentences in the corpus. Algorithm 4 shows
the pseudo-code for Prior Model II Exhaustive
Alignment Space.
4condition 1 is as follows:
((ei 6= si, fj 6= tj for ai) and (e?i = s?i, f ?j = t?j for aj)) or
((ei 6= si, fj 6= tj for ai) and (e?i = s?i, f ?j = t?j for aj)) or
((ei = si, fj = tj for ai) and (e?i 6= s?i, f ?j 6= t?j for aj)) or
((ei = si, fj = tj for ai) and (e?i 6= s?i, f ?j 6= t?j for aj))
?condition 2? is as follows:
((ei = si, fj 6= tj for ai) and (e?i = s?i, f ?j = t?j for aj)) or
((ei 6= si, fj = tj for ai) and (e?i = s?i, f ?j = t?j for aj)) or
((ei = si, fj = tj for ai) and (e?i 6= s?i, f ?j = t?j for aj)) or
((ei = si, fj = tj for ai) and (e?i = s?i, f ?j 6= t?j for aj))
5
?condition 3? is as follows:
((ei 6= si, fj 6= tj for ai) and (e?i 6= s?i, f ?j 6= t?j for aj))
?condition 4? is as follows:
((ei 6= si, fj 6= tj for ai) and (e?i 6= s?i, f ?j = t?j for aj)) or
((ei 6= si, fj 6= tj for ai) and (e?i = s?i, f ?j 6= t?j for aj)) or
((ei 6= si, fj = tj for ai) and (e?i 6= s?i, f ?j 6= t?j for aj)) or
((ei = si, fj 6= tj for ai) and (e?i 6= s?i, f ?j 6= t?j for aj))
31
Prior for Sampled Alignment (Function) Space
This is identical to that of the Prior Model II ex-
haustive alignment space with only a difference in
the normalization process.
Prior for Jump Width i? This categorization of
Prior Model II is the same as that of Prior Model I
for for Jump Width i? (see Section 4.2). Note that
Prior Model II requires more memory compared
to the Prior Model I.6
5 Experimental Settings
The baseline in our experiments is a standard
log-linear phrase-based MT system based on
Moses. The GIZA++ implementation (Och and
Ney, 2003a) of IBM Model 4 is used as the base-
line for word alignment, which we compare to
our modified GIZA++. Model 4 is incrementally
trained by performing 5 iterations of Model 1, 5
iterations of HMM, 5 iterations of Model 3, and
5 iterations of Model 4. For phrase extraction the
grow-diag-final heuristics are used to derive the
refined alignment from bidirectional alignments.
We then perform MERT while a 5-gram language
model is trained with SRILM. Our implementa-
tion is based on a modified version of GIZA++
(Och and Ney, 2003a). This modification is on the
function that reads a bilingual terminology file,
the function that calculates priors, the M-step in
IBM Models 1-5, and the forward-backward algo-
rithm in the HMM Model. Other related software
tools are written in Python and Perl: terminol-
ogy concatenation, terminology numbering, and
so forth.
6 Experimental Results
We conduct an experimental evaluation on the
NTCIR-8 corpus (Fujii et al, 2010) and on Eu-
roparl (Koehn, 2005). Firstly, MWEs are ex-
tracted from both corpora, as shown in Table 3.
In the second step, we apply our modified version
of GIZA++ in which we incorporate the results of
6This is because it needs to maintain potentially an ??m
matrix, where ? denotes the number of English tokens in the
corpus and m denotes the number of foreign tokens, even if
the matrix is sparse. Prior Model I only requires an ?? ? m?
matrix where ?? is the number of English tokens in a sentence
and m? is the number of foreign tokens in a sentence, which
is only needed until this information is incorporated in a pos-
terior probability during the iterative process.
corpus language size #unique #all
MWEs MWEs
statistical method
NTCIR EN-JP 200k 1,121 120,070
europarl EN-FR 200k 312 22,001
europarl EN-ES 200k 406 16,350
heuristic method
NTCIR EN-JP 200k 50,613 114,373
Table 3: Statistics of our MWE extraction method.
The numbers of MWEs are from 0.08 to 0.6 MWE
/ sentence pair in our statistical MWE extraction
methods.
MWE extraction. Secondly, in order to incorpo-
rate the extracted MWEs, they are reformatted as
shown in Table 2. Thirdly, we convert all MWEs
into a single token, i.e. we concatenate them with
an underscore character. We then run the modi-
fied version of GIZA++ and obtain a phrase and
reordering table. In the fourth step, we split the
concatenated MWEs embedded in the third step.
Finally, in the fifth step, we run MERT, and pro-
ceed with decoding before automatically evaluat-
ing the translations.
Table 4 shows the results where ?baseline? in-
dicates no BMWE grouping nor prior, and ?base-
line2? represents a BMWE grouping but without
the prior. Although ?baseline2? (BMWE group-
ing) shows a drop in performance in the JP?EN
/ EN?JP 50k sentence pair setting, Prior Model I
results in an increase in performance in the same
setting. Except for EN?ES 200k, our Prior Model
I was better than ?baseline2?. For EN?JP NT-
CIR using 200k sentence pairs, we obtained an
absolute improvement of 0.77 Bleu points com-
pared to the ?baseline?; for EN?JP using 50k sen-
tence pairs, 0.75 Bleu points; and for ES?EN Eu-
roparl corpus using 200k sentence pairs, 0.63 Bleu
points. In contrast, Prior Model II did not work
well. The possible reason for this is the misspec-
ification, i.e. the modelling by IBM Model 4 was
wrong in terms of the given data. One piece of ev-
idence for this is that most of the enforced align-
ments were found correct in a manual inspection.
For EN?JP NTCIR using the same corpus of
200k, although the number of unique MWEs ex-
32
size EN-JP Bleu JP-EN Bleu
50k baseline 16.33 baseline 22.01
50k baseline2 16.10 baseline2 21.71
50k prior I 17.08 prior I 22.11
50k prior II 16.02 prior II 20.02
200k baseline 23.42 baseline 21.68
200k baseline2 24.10 baseline2 22.32
200k prior I 24.22 prior I 22.45
200k prior II 23.22 prior II 21.00
size FR-EN Bleu EN-FR Bleu
50k baseline 17.68 baseline 17.80
50k baseline2 17.76 baseline2 18.00
50k prior I 17.81 prior I 18.02
50k prior II 17.01 prior II 17.30
200k baseline 18.40 baseline 18.20
200k baseline2 18.80 baseline2 18.50
200k prior I 18.99 prior I 18.60
200k prior II 18.20 prior II 17.50
size ES-EN Bleu EN-ES Bleu
50k baseline 16.21 baseline 15.17
50k baseline2 16.61 baseline2 15.60
50k prior I 16.91 prior I 15.87
50k prior II 16.15 prior II 14.60
200k baseline 16.87 baseline 17.62
200k baseline2 17.40 baseline2 18.21
200k prior I 17.50 prior I 18.20
200k prior II 16.50 prior II 17.10
Table 4: Results. Baseline is plain GIZA++ /
Moses (without BMWE grouping / prior), base-
line2 is with BMWE grouping, prior I / II are with
BMWE grouping and prior.
tracted by the statistical method and the heuris-
tic method varies significantly, the total number
of MWEs by each method becomes comparable.
The resulting Bleu score for the heuristic method
(24.24 / 22.48 Blue points for 200k EN?JP / JP?
EN) is slightly better than that of the statistical
method. The possible reason for this is related
to the way the heuristic method groups terms in-
cluding reference numbers, while the statistical
method does not. As a result, the complexity of
the alignment model simplifies slightly in the case
of the heuristic method.
7 Conclusion
This paper presents a new method of incorporat-
ing BMWEs into word alignment. We first de-
tect BMWEs in a bidirectional way and then use
this information to do groupings and to enforce
already known alignment links. For the latter pro-
cess, we replace the maximum likelihood estimate
in the M-step of the EM algorithm with the MAP
estimate; this replacement allows the incorpora-
tion of the prior in the M-step of the EM algo-
rithm. We include an experimental investigation
into incorporating extracted BMWEs into a word
aligner. Although there is some work which incor-
porates BMWEs in groupings, they do not enforce
alignment links.
There are several ways in which this work can
be extended. Firstly, although we assume that our
a priori partial annotation is reliable, if we extract
such MWEs automatically, we cannot avoid erro-
neous pairs. Secondly, we assume that the rea-
son why our Prior Model II did not work was due
to the misspecification (or wrong modelling). We
would like to check this by discriminative mod-
elling. Thirdly, although here we extract BMWEs,
we can extend this to extract paraphrases and non-
literal expressions.
8 Acknowledgments
This research is supported by the Science Foun-
dation Ireland (Grant 07/CE/I1142) as part of
the Centre for Next Generation Localisation
(http://www.cngl.ie) at Dublin City Uni-
versity and Trinity College Dublin. We would also
like to thank the Irish Centre for High-End Com-
puting.
References
Bishop, Christopher M. 2006. Pattern Recognition
and Machine Learning. Springer. Cambridge, UK
Brown, Peter F., Vincent .J.D Pietra, Stephen
A.D.Pietra, Robert L. Mercer. 1993. The Mathe-
matics of Statistical Machine Translation: Param-
eter Estimation. Computational Linguistics. 19(2),
pp. 263?311.
Callison-Burch, Chris, David Talbot and Miles Os-
borne. 2004. Statistical Machine Translation with
33
Word- and Sentence-Aligned Parallel Corpora. Pro-
ceedings of the 42nd Annual Meeting of the As-
sociation for Computational Linguistics (ACL?04),
Main Volume. Barcelona, Spain, pp. 175?182.
Fujii, Atsushi, Masao Utiyama, Mikio Yamamoto,
Takehito Utsuro, Terumasa Ehara, Hiroshi Echizen-
ya, Sayori Shimohata. 2010. Overview of the
Patent Translation Task at the NTCIR-8 Workshop.
Proceedings of the 8th NTCIR Workshop Meet-
ing on Evaluation of Information Access Technolo-
gies: Information Retrieval, Question Answering
and Cross-lingual Information Access, pp. 293?302.
Graca, Joao de Almeida Varelas, Kuzman Ganchev,
Ben Taskar. 2007. Expectation Maximization
and Posterior Constraints. In Neural Information
Processing Systems Conference (NIPS), Vancouver,
BC, Canada, pp. 569?576.
Gale, William, and Ken Church. 1991. A Program for
Aligning Sentences in Bilingual Corpora. In Pro-
ceedings of the 29th Annual Meeting of the Associ-
ation for Computational Linguistics. Berkeley CA,
pp. 177?184.
Koehn, Philipp, Franz Och, Daniel Marcu. 2003. Sta-
tistical Phrase-Based Translation. In Proceedings
of the 2003 Human Language Technology Confer-
ence of the North American Chapter of the Asso-
ciation for Computational Linguistics. Edmonton,
Canada. pp. 115?124.
Koehn, Philipp. 2005. Europarl: A Parallel Corpus
for Statistical Machine Translation. In Conference
Proceedings: the tenth Machine Translation Sum-
mit. Phuket, Thailand, pp.79-86.
Koehn, Philipp, H. Hoang, A. Birch, C. Callison-
Burch, M. Federico, N. Bertoldi, B. Cowan,
W. Shen, C. Moran, R. Zens, C. Dyer, O. Bojar,
A. Constantin, and E. Herbst, 2007. Moses: Open
source toolkit for Statistical Machine Translation.
Proceedings of the 45th Annual Meeting of the As-
sociation for Computational Linguistics Companion
Volume Proceedings of the Demo and Poster Ses-
sions, Prague, Czech Republic, pp. 177?180.
Koehn, Philipp. 2010. Statistical Machine Transla-
tion. Cambridge University Press. Cambridge, UK.
Kupiec, Julian. 1993. An Algorithm for finding Noun
Phrase Correspondences in Bilingual Corpora. In
Proceedings of the 31st Annual Meeting of Associa-
tion for Computational Linguistics. Columbus. OH.
pp. 17?22.
Lambert, Patrik and Rafael Banchs. 2006. Group-
ing Multi-word Expressions According to Part-Of-
Speech in Statistical Machine Translation. In Pro-
ceedings of the EACL Workshop on Multi-Word-
Expressions in a Multilingual Context. Trento, Italy,
pp. 9?16.
McLachlan, Geoffrey J. and Thriyambakam Krishnan,
1997. The EM Algorithm and Extensions. Wiley
Series in probability and statistics. New York, NY.
Moore, Robert C.. 2003. Learning Translations of
Named-Entity Phrases from Parallel Corpora. In
Proceedings of the 11th Conference of the European
Chapter of the Association for Computational Lin-
guistics. Budapest, Hungary. pp. 259?266.
Moore, Robert C.. 2004. On Log-Likelihood-Ratios
and the Significance of Rare Events. In Proceedings
of the 2004 Conference on Empirical Methods in
Natural Language Processing (EMNLP). Barcelona,
Spain, pp. 333?340.
Och, Franz and Herman Ney. 2003. A Systematic
Comparison of Various Statistical Alignment Mod-
els. Computational Linguistics. 29(1), pp. 19?51.
Resnik, Philip and I. Dan Melamed, 1997. Semi-
Automatic Acquisition of Domain-Specific Transla-
tion Lexicons. Proceedings of the 5th Applied Nat-
ural Language Processing Conference. Washington,
DC., pp. 340?347.
Talbot, David. 2005. Constrained EM for parallel text
alignment, Natural Language Engineering, 11(3):
pp. 263?277.
Utiyama, Masao and Hitoshi Isahara. 2003. Reliable
Measures for Aligning Japanese-English News Arti-
cles and Sentences, In Proceedings of the 41st An-
nual Meeting of the Association for Computational
Linguistics. Sapporo, Japan, pp. 72?79.
Vogel, Stephan, Hermann Ney, Christoph Tillmann
1996. HMM-Based Word Alignment in Statisti-
cal Translation. In Proceedings of the 16th Inter-
national Conference on Computational Linguistics.
Copenhagen, Denmark, pp. 836?841.
34
