I n te ract ion  Grammars  
Guy Perrier 
LORIA, Universitd Nancy2 
BP 239 
54506 Vandceuvre-lhs-Nancy Cedex France 
e-marl: perrier@loria.fl' 
Abstract  
Interaction Grammars (IG) are a new linguistic for- 
malism which is based on descriptions of under~ 
specified trees in the fl'amework of intuitionistic lin- 
ear logic (ILL). Syntactic omposition, which is ex- 
pressed by deduction in linear logic, is controlled by 
a system of polarized features. In this way, parsing 
amounts to generating models of tree descriptions 
and it is implemented as a constraint satisfaction 
problem. 
Introduct ion 
IG can be presented as an attempt o bring together 
flmdalnental ideas, some coming froln Tree Adjoin- 
ing Grammars (TAG) and others from Categorial 
GraInmars (CG), in order to overcome the specific 
limitations of each of these formalisms. The compu- 
tational and linguistic relevance of TAG lies in its 
adjunction operation (Joshi et al, 1975; Kroch and 
Joshi, 1985) but the simplicity of its mechanism has 
a counterpart in the inflation of the lexicons that arc 
required for expressing all grammatical phenomena 
of a language. Every time that a word is used in a 
new syntactic ontext, wlfieh can differ only by word 
order for example, a new elementary tree, which en- 
codes this context, must be added to the lexicon in 
a direct manner or by means of a lexical rule. In this 
way, lexicons quickly become colossal, very awkward 
to use and very hard to maintain. 
Recent works aim to solve tiffs problem by factoriz- 
ing linguistic information with the notions of nnder- 
specified trees and tree descriptions. These notions 
were introduced for TAG by Vijay-Shanker with the 
motivation of making adjunetion monotone (Vijay- 
Shanker, 1992). Now, they are exploited fruitfully 
in various directions: for structuring TAG lexicons 
in hierarchical systems of modules (Candito, 1999) 
or for expressing semantic ambiguity (Muskens and 
Krahmer, 1998; Egg et al, 1998) for instance. At the 
same time, these notions are a way of relaxing the 
primitive adjunetion operation in order to capture 
linguistic phenomena: such a possibility is exploited 
by (Rambow et 31., 1995) within D-Tree Grammars 
and by (Kalhneyer, 1999) within Tree Description 
~l'alnlilars. 
Unfortunately, tim counterpart of a more flexible 
framework is often over-generation a d a loss of com- 
putational efficiency in the absence of principles for 
controlling syntactic composition. By looking at 
CG, we can find some answers to this preoccupa- 
tion: a fundamental idea of CG is that grammati- 
cal constituents are viewed as consumable resources 
(Retord, 2000); these resources are divided into pos- 
itive and negative resources which are complemen- 
tary and search to neutralize themselves mutually. 
The core of CG is the Lambek Calculus (Lmnbek, 
1958): by combining resource sensitivity and order 
sensitivity, this logic is a good candidate for repre- 
senting the syntax of natural languages but at the 
same time, this combination entails a rigidity which 
limits its expressive power greatly. An appropriate 
way of relaxing this rigidity constitutes an impor- 
tant research area in CG (Moortgart, 1996). 
The principle of IG is to combine the powerflfl notion 
of under-specified tree description linked to the TAG 
ptfilosophy with control of syntactic omposition by 
a system of polarities in accordance with the CG 
philosot)hy. More precisely, the basic objects of IG 
are syntactic dcscriptions which express dependen- 
cies between syntactic onstituents in the shape of 
under-specified trees. Word order is referred to the 
same level as morphological information, which is 
represented by a system of features which are linked 
to the nodes of syntactic descriptions. Whereas a 
feature is usually a pair (attribute, value), an IG 
feature is a triplet (attribute, polarity, value) where 
polarity can take one of the three values -1, 0 or 
-t-1 and behaves like an electrostatic charge: for in- 
stance, a noun phrase which is waiting to receive 
a syntactic function in a sentence, carries a nega- 
tive feature of type fltnct while a finite verb which 
is searching for its subject, carries a positive t'ea- 
ture funct with value s@j. Attraction between these 
dual features will make possible the fact that the 
verb finds its subject and, simultaneously, the noun 
phrase finds its flmction in the sentence. (Muskens 
and Krahmer, 1998) also recognized the necessity of 
introducing the notion of polarity in tree descrip- 
600 
tions as a mechanism for controlling syntactic om- 
position; the difference with respect to IG lies in 
the granularity of the polarization wlfich is finer in 
li(l: in their proposal, the polarized objects are con- 
stituents, that is description odes, whereas in IG 
one constituent can include several features with op- 
posite polarities. 
Tile frmnework which is chosen tbr tel)resenting syn- 
tactic descriptions in this patmr is that of linear logic 
(Girard, 1987), more precisely a fragment of ILL 
(Lincoln, 1992). The resource sensitivity of linear 
logic allows one to express the fact that 1)olarized 
features behave as consumable resources in \[G: a 
positive feature has to find its dual fea.ture once and 
only once. If we try to use classical or intuitionistic 
logic for modelling IG, the contraction and weaken- 
ing rules, which are inherent in these logics, entail 
a loss of resource-sensitivity: tbr instance, a verb 
could take two subjects by appealing to the con- 
traction rule and some noun phrases wouhl not need 
to find their syntactic role in a sentence by appeal- 
ing to the weakening rule. By discarding these two 
rules, linear logic provides a Kamework that exactly 
corresponds to the "electrostati(-" laws that control 
1)olarized features. 
In this framework, i)arsing takes the shatm of log- 
ical deduction of closed syntactic dcscriptions from 
airy syntactic descriptions: a description is said to 
be. closed when it represents a completely specified 
syntactic tree where all features are neutralized. 
If linear logic provides an elegant Yamework tbr rep- 
resenting IG, it gives no method for parsing effi- 
ciently and avoiding the coufl)inatory explosion that 
may follow from the flexibility of the fi)rmalism. An 
ai~swer to this problem is given by the paradigm of 
constraint solving. Parsing a phrase can be regarded 
as generating models of the partial descrit)tion which 
is provided by a l('xicon for the words of this phrase. 
The process is monotone and can be expressed as 
a constraint satisfactio'n problem. This constraint- 
based approach was inspired by the work of (l)uchier 
and C., 1999; l)uchier and Thater, 1999) on domi- 
nance constraints. (Blache, 1999) shows the advan- 
tages of such an apI/roaeh t)oth from a linguistic and 
emnputational viewpoint with the formalism that lie 
prol)oses mid lie calls Property Grammars. 
1 Syntact i c  descr ip t ions  as l inear  
log ic  fo rmulas  
IG arc formally defined as an ILL theory. Basic 
objects are syntactic dcscriptions which arc repre- 
sented by linear logic formulas in the following form: 
Descr ::= Domin \] Feat \] Descr ? Descr \] 
Descr & Descr 
If a syntactic descrit)tion concerns the dominance 
relation between syntactic constituents, it has the 
type Domin; if it concerlm the features which are 
used for characterizing syntactic or semantic prol)- 
crties of constituents, it has the |yt)e Feat. Finally, 
a description call I)e built recursively fl'om two de- 
scriptions in two ways, which a.re expressed by tile 
two linear logic conjunctions: the multiplicative ten- 
sor (?) and the additive with (&). 
1.1 Multipl ieative and additive conjunction 
of resources in descriptions 
A description D1 ? D2 requires all resources of both 
descriptions D1 and D2 while a description DI&D2 
requires either the resources of DI or the resources 
of D., lint not 1)oth. This use of the two linear logic 
conjunctions is consistent with their left introduc- 
tion rules in the linear sequent calculus: 
F1,F%FPG FI,F t -a  ~ F2 , r t -a  &L2 
F1?lS,Ft -G ?L Flg:F2,Fk'G &el FI~F.2, F\[-G 
In this way, it; is possible to describe all syntactic 
configurations of a word with a single lexical entry 
raider the form of a syntactic description: conunon 
parts of these COtl\[iglll'al;iolls are factorized whereas 
Slmcilic parts are distributed into alternations linked 
together with the comlective with. For instance, a 
possible lexical entry for the tinite verb volt in French 
has the shal)e Dvoit = D1 ? (D2&D3) ? (D4&;DS): 
Dj contains information related to the subject which 
is coiilnloll to all uses of the verb volt; D2 expresses 
the canonical order subject-verb in the sentence that 
is headed by the vert) voit whereas Da expresses the 
reverse order for which the subject must be realized 
under some conditions, such as in the phrase Marie 
que volt ,lean; D4 exl)resses that the verb has an 
exl)licit object whereas D,5 corresl)on(ts to circum- 
stances where this object is not present, such as ill 
the sentence ,Ican volt. 
1.2 Under-specif ication of dominance 
between const ituents 
A description of type Domin has the fl)llowing form: 
Domin ::= Node > \[LNode.sl \[ Node > Node I 
Node >* Node 
LNodes ::= e I Node LNodes 
A predicate N > \[N1, . . . ,Np\]  states that the 
constituent N is decoml)osed into the sub- 
constituents N1 , . . . ,N  v. The order between these 
sub-constituents i  only used tbr identifying each 
one without any linguistic lneaning; word order 
is dealt with at the same level as morphological 
information by means of features. 
A predicate N1 > N2 expresses that N2 is all 
immediate sub-constituent of N1. Such a predicate 
is used when only partial information on tile 
sub-constituents of a phrase is available. 
A predicate N1 >* N2 expresses that N2 is embed- 
ded in N1 at an undetermined del)th. For instance, 
if we continue with description D1 related to the 
verb volt, we can assume that it contains the formula 
601 
(Na > \[N4, N~\]) ? (N4 >* No) which is interpreted 
as follows: the verb phrase Na is constituted of 
tile verb N4 and its object N~; Na represents the 
bare verb whereas N4 represents the verb which 
has been possibly modified by a clitic, a negation 
or an adverb. Under-specification f the dominance 
relation N4 >* No leaves all these modifications 
open. Under-specification of dominmme between 
constituents goes beyond TAG adjunction in that 
the nodes which are in a dominance relation do not 
necessarily have the same grmnmatical category 
and thus linguistic phenomena like wh-extraction 
can be expressed easily in this way. 
1.3 Polarized and under-specified features 
Deserit)tions of tyI)e Fcat, related to features, have 
the following fol'm: 
Feat ::= Node : Attr Pol Val \[ 
Var C Dora \[ Vat  ? Dora 
gol : := <- I  = I + 
Val ::= Coast I Vat  
A feature Node : Attr  Pol Val is a triplet composed 
of an attribute Attr, a polarity Pol and a value Val 
associated with a syntactic node Nodc. Usually, a 
thature is defined as a pair (attribute, vahle). Ill 
IG, we add a polarity to this pair so that features 
behave like electrostatic charges: a positive feature 
Attr ~ Val seeks a negative featm'e Attr +-- Val to 
neutralize it and conversely while a neutral feature 
Attr = Val only acts as a filter through constraints 
on its value Val when it; meets another feature of 
type Attr at; the sanle node. 
Ill all cases, Val is either a constant which is selected 
from an infiifite countable set Coast of feature val- 
ues or a variable which is selected fl'oln an infinite 
countable set Vat of feature variables; then, its def  
inition domain Call be constrained by two lduds of 
predicates: Val E Dora and Val 9( Dora; Dora is a 
finite set of elements taken froln Co7~8t. 
Let us illustrate this presentation with a possible 
lexieal entry for the i)roi)er noun Jean: 
Dj  ..... = (N > \[\])? 
(g :  ~,,,t = ,@ ? (N :  f~ .~t  ~ Vl) 
(N:  ord --+ 1) ? (N:  phon =' Jean')? 
(N : Ocn = m) ? (N : hum = .sg)? 
(N :pets = 3) 
Some features are neutral by nature like agreement 
features: gen=m (gender=male), num=sg (num- 
ber=singular), pets=3 (person=3). Others are po- 
larized by nature too: for instmlce, features of type 
f lmct which express syntactic functions. In the ex- 
ample above, the feature of type funct is negative 
because the noun phrase represented by N is waiting 
to receive a syntactic fllnction (subject, object.. .);  
this flmction is not determined yet and thus it is 
represented by a variable lq. 
The phonological form of a constituent is determilmd 
by a system of two features: phon which gives tile 
effective phonological form of the constituent and 
ord which gives the order in which its immediate 
sub-constituents must be concatened to build this 
phonological form. For instance, we find the tbrnnlla 
(N1 : ord -+ I/2) ? (172 C {12, 21}) in the description 
Dvoit to express that the clause which has the verb 
volt as its head and is represented by node N1 is 
a concatenation subject-verb phrase (14 = 12) or 
verb phrase-subject (172 = 21). When a node has no 
children, two cases occur: the node has an empty 
phonological form and the vahle of the feature ord is 
0 or the node is a lexical anchor and the value of the 
feature ord is 1. In this case, the feature phon is used 
tbr retrieving the effective phonological form, which 
can be verified in the (lescription D.l~an. Polariza- 
tion of phonological tbrms expresses that some con- 
stituents are capable of giving a phonological tbrm 
while others are waiting tbl" one. As the previous 
exalnples hows, this pohu'ity is not carried by the 
tbatul'e phon but by the feature ord. The interest 
of giving privilege to the tbat, ure ord with respect 
to the feature ph, on, is twofold: we can deternline 
its value for a given node without being aware, of 
the phonological form of the children, the effective 
pholmlogical form will be rebuilt step by step from 
the leaves to the root of the final syntactic tree as 
soon as possible; another interest is that features of 
type ord can be dealt with like all other features; in 
particular, we can al)ply to theln the salne type of 
constraints. 
Finally, it is interesting to inention that value shar- 
ing by different features is represented in an easy 
way by using a unique variable for tile vahles of the 
concerned features. 
2 Syntact i c  compos i t ion  as 
deduct ion  in a l inear theory  
By choosing a logical framework tbr a fornml def- 
inition of IG, we find a natural way of expressing 
syntactic eompositiou by means of deduction in lin- 
ear logic according to the 1)aradigm "parsing as de- 
duction" of CG (for a broad survey of CG see (Re- 
tord, 2000)). All interaction granunar is lexiealized 
ill the sense that all linguistic resources are stored 
in a lexicon and these resources will be coinbined 173' 
using inference rules of the ILL deductive system for 
building the acceptable sentences of the correspond- 
ing language. Since syntactic descriptions use only 
a fragment of this logic and if we choose the frame- 
work of the sequent calculus, only seven ILL rules 
are useflll: 
F1, . . . ,Fn I- F I?. . .?Fn id 
P ~- G FI, F2, P I- G 
1, P 1- G 1L Ft @F'2, P l- G @L 
F1, P N G J~'2, P k GG&L2 
FI&F2, P G &L1 /~'I&F2, r I- 
F\[t/X\], P t- G Pl 1- 17 F, I~2 l-- G V1~ cut 
V X ~; P F- Pl, P2 t- G 
602 
With respect o tile usual presentation of the ILL 
sequent cahmlus (Lincolu, 1992), a?iom id is defined 
a bit differently but this definition is equivalent o 
the original one tbr tile logical fragment used by IG. 
Rule gr. is a tirst order rule which is used here for 
instantiating a node variable with a concrete node 
or a feature variable with a concrete feature value. 
Beside these general rules, we need proper axioms 
to express properties related to dominance relations, 
feature polarities, feature values and phonological 
forms. Concerning dominance relal, ions, we have 
the following proper axiom schemes: 
N: > N2,(NI > \[1,,N2,L'\]) }- (N1 > \[L,~2~LI\]y dl 
N >* N F 1 d2 
N1 >* Na, (NI > \[L, N2,1/\]) V N2 >* N3 Q (N1 > \[L, N2,L'\]) d3 
Axiom scheme dl expresses that immediate dom- 
iuallCe is realized t)y a parent-children relation 
whereas axiom schemes d2 and d3 express that 
dominance is realized l)y finite sequences of l:arent- 
children relatkms (L an(1 L '  represent sequences of 
node variables). 
The behaviour of polarities is represented by the 
following proper axiom schemes: 
(N :A I '  V), (N :A=V)  P (N : ,41 '  V) I'1 
(N :A<-V) , (N :A -~V)  ,- (N :A=V)  v~ 
Proi)erties related to feature doinaius and vahles 
rare expressed by tile following axioln schenles: 
< {e} u D"  c '<' 
hi l)oth axiom schelnes, D rel)resellts a couel'el;e 
filtite set of feature values taken from Con.W, and U 
and \ rel)t'esent the usual operations of union aim 
difference of sets. 
Finally, three axiom schemes are used for deducing 
tile effective phouological form of a col:stil;uent from 
the order of the phonological forms of its children: 
N > \[\], (N :  o,'d = 0) ~ N > \[\] V (N :  Vho,, = ,,)Vh.1 
> \[ \], (N :  o,.,~ = 1) F N > \[~ph._, 
,) ph3 (~r > \[N 1 . . . . .  NI,\]) , O, ~'1 I- (N > \ [NI , . . . ,  Np\]) 05) 1 2 
Schemes ph~ and ph2 respectively correspond to 
empty categories and lexical anchors. 
In scheme pha, 0 is an abbreviation for 
(N :o rd  = e(c,)); a is a perlnutation on \[\[1,p~ 
which expresses an order ibr concatenating the 
phonological tbrms v l , . . . ,  vp of the children nodes 
N\ ] , . . . ,  N v of N and c(o-) is a bijective encoding of 
this permutation with an integer. /71 is an abbre- 
viatioll for (NI : phoTt = V l ) , . . .  , (j~Tp : phon = %) 
and P~ an abbreviation for the product 
(N : phon = vo.(1) . . . . .  v,,(l,)) ? (N1 : piton = 
Vl) ?''" ? (Np : ph, o?L = vI, ). 
A particular interaction grmnmar G is defined by 
its vocalmlary \]?occ. and by a lexicon gexc,; the vo- 
cabulary Poco inchldes the words used for tmilding 
the hmguage /--:a generated by this grammar and 
the lexic(m ?c:,:c; associates a syntactic description 
to each word of Foca. Now, we have to (:ombine 
the resources provkled by go:re- by means of the 
inference rules and proper axioms of the linear 
theory T which has .just; been defined to compose 
well-formed and complete syntactic structures of G 
under the shaI)e of closed syntactic descriptions. As 
a preliminary, we have to give a precise definition of 
a closed syntactic description: 
A closed syntactic description is a partic'a- 
lar syntactic description in the shape S ? F 
wh.cre S and F, respectively, represent he 
structural and feature parts of the dcserip- 
tion with the following conditions: 
1. S is a product of predicates in the form 
(,,. >  ,,here ,,., ,,.,, . . . ,  
n v represent eoncrcte syntactic nodes, 
and the structure defined by all these 
parent-children relations is a tree; 
2. F is a product of predicates in the form 
(n :a t t r  = v), where n, attr and v 
represent concrete atoms, and for each 
pair (u, attr) pre.scnt in F, there is cx- 
actly one feature (n : attr  = v) in F. 
3. For every syntactic node 7t in S, there 
is a feature (n : phon. = v) in F. 
Condition 1 guarantees that a closed syntactic 
description rel)resents a COml)letely specitied tree. 
Condition 2 gua.rantees ('oherence and neutrality of 
the feature system which is attached at each syntac- 
tic node. Condition 3 guarani;cos the phonoh)gical 
well-fornmdness of the whole syntactic sl.l'it(:t;::t'e. 
Now, let; us explain how G generates closed syntac- 
tic descriptions from n lexieal entries D , , , , . . . ,  D,~,, 
correspouding to n words Wl , . . . ,  w,, taken fi'om 
Vote;. For this, we need an additional description 
D,.om to represent he root of the final syntactic 
tree which has tile fbrm:(No >* N:) ?. . .  ? (N0 >* 
A:,) ? (No : ord ?- V0). Node No represents the root 
of the syntactic tree and N1, . . . ,  N v are the nodes 
present in descriptions Dwl , . . . ,  D,o,,. Then: 
A closed syntactic dcscr@tion D is said to 
be generated from the words w1, . . . , w,  by 
grammar G if the sequent V N V V (D,.oot? 
Dw: ? ""  ? Dw,) F D is provable in the 
theory 7- (N and {J represent all node vari- 
ables and fi'aturc variables that arc fl'cc in 
Drool, Dw: , . . . ,  Dw.).  
D describes a tree which represents the syntax of a 
phrase given by the feature phon of its root. If we 
add the predicate (No : piton = wl . . .  w, )  to D,.oot, 
we transform the generation of closed syntact;ic de- 
scriptions into parsing of the phrase wl ?. ? w,, 
603 
By continuing with the verb volt, let us give a very 
simple illustration of this mechanism. We assume 
that a lexicon provides us with three descriI)tions 
Dvoit, Dil and D.lcan which respectively eorresi)ond 
to the finite verb volt, tile personal pronoun il and 
tile proper noun Jean. As it was described in sub- 
section 1.1, Dvoit has the shape D1 ? (D2&D3) ? 
(D4&Da and it is schematized by the following di- 
agram: 
i I)1 i . - cal=s (" - - ") ord -> 12121 
, 7 : :7  . i _  , c~t=~p I 
' : -  - - " ord = 1 112/ 
lunct = subj ; ~\[ i 
4 ) cat = v 
? "" ord <- 
cat=v 6 } .... 
)hen = 'voif " o d -> 1 
! ( & 
) ! :  ;,, :, ",/ ", 
: (~)  (3) 
, \ ]  o rd :12  \] ?rd=~'1 " " - "  
( 4 ) i 
1 ,unct bj . . . .  l i ' J '
, ! 3 ) 
i ord = 12 
( 4 ) (. s ) 
cat =np / i i 
erd <- IL 
tunct -> obj 
! 
To remain readable, the diagram includes only the 
most significant features of every node. The nota- 
tion ord -~ 12121 is all abbreviation for ord --+ V 
with 17 G {12, 21} and ord +-- means that the value 
of Lhe feature ord is undetermined. 
Description Dil has a structure that is similar to 
Dvoit : 
11~ 
ord = 12 
cat = nD 
funct = subj 
7 
I 
9 
f ? 
( lo ) 
cat  = s 
\ 
funct  <- subj i 
i .  > , er =21 1 
I ! I~:!  ' - 
cat = vp 
cat = v 
cat =v ( I1 ) 
ord-> 12121 "" \] -" 
cat=ct i t  - . .  ".. "" - -  ~ / 
? . ( 12 ) ~ a+ r cat=v 
pnon = ' . '~  . . . .  - -< I 
ord=l  ~t  K J _ \ord<- / 
\] 1 . . . . .  . . . . . .  
. j -  ,,,\]+ 
typ = decl 
( 11 ') 
x"  
ord = 12 
.-( ) 
typ = "!?r . . . . .  
\[ ( u ' i  
&21 
Tile first additive component of description Dil, 
Dr&D8 represents a choice between tile absence of 
all explicit subject ill the sentence beside tile per- 
sonal pronoun il such as in tile sentence il volt Jean 
and the presence of this subject such as in tile sen- 
tence Jean voit-il ?. The second alternative ntails 
that the sentence is interrogative if we ignore topi- 
calization, which explains description Ds. 
The second additive component of description Dil, 
Dg&Dlo, represents a choice between tile declarative 
type and tile interrogative type of the sentence which 
depends on the relative order between tile verb and 
tile clitic. 
Descrit)tion D Jean is reduced to the following single 
node: 
cat = l lp  
o rd -> 1 
funct <- 
phon = ' Jean' 
From tile description V N V 1~ (D,.oot ~ D,,oit ? 
Da~.,, ? Dil), it is possible to deduce three closed 
syntactic descriptions D.,  Db and D~, which respec- 
tively represent the syntax of the grammatical sen- 
tences :il voit ,lean, voit-il Jean ? and Jean voit-il .~. 
Ill concrete terms, the deduction process that leads 
to these three solutions consists ill plugging nodes 
of the initial descriptions with tile aim of neutraliz- 
ing all polarized features while respecting dominance 
and featm'e constrains. Let us detail the resulting 
description DD by means of the syntactic tree it spec- 
ifies: 
cat = S 
typ  = dec l  II - I -7 ) phon = 'voit il Jean' 
cat  = np 
phon = ' ' 2-8 
funct = subj I 
cat=v 
phon = 'voit il' 
i 
I 
( 3-9 ) 
cat = vp 
phon = 'veil il Jean ' 
J 
I \[ I cat = np 
(4-I0-1i) (5-14) phon = ' Jean '  
I \[ i J funct = obj 
' I \ [ '  
cat=e l i !  ( 12 ) ( 6.13 ) cat=v 
phon =' i r  \] J phon ='vo i t '  
Tile closed syntactic description that specifies tlte 
tree above represents the syntactic structure of the 
sentence voit-il Jean ?. The numbers that label its 
nodes are the traces of the nodes of the descriptions 
that have been plugged in the parsing process. 
3 A constraint-based 
implementation 
From tile viewpoint of a computer scientist, a lin- 
guistic model has to show not only expressive power 
but also computational tractability. In the previous 
section, we have shown that IG computations re- 
duce to ILL proofs. For tile logical fragment that we 
consider here, three logical rules are a source of non- 
604 
determinism in proofsearcll: &L1, &L') and VL. This 
takes the shape of three kinds of choice points in tile 
t)arsing process: selecting the pertinent branch for 
every additive conjunction, identit~ying some node 
variables and instantiating t~ature variables in an 
al)t)ropriate maimer. The NP-conq)letenest of the 
implicative fragment of ILL (Kanovich, 1992) shows 
that it is hopeless to find a general parsing algo- 
r ithm for IG that works in polynomial time in the 
worst cases. Experience has shown that, fortunately, 
these worst cases rarely occur in parsing natural an- 
guages. Nevertheless, the flexibility of IO entails a 
combinatory explosion of the parsing process if we 
use a "generate and test" method and leads us to 
choose a more approt)riate method. The specifica- 
tion of our problem prompts us in a natura l  way to 
a constraint-based al)l)roach as it was suggested by 
st)me proposals for similar prol)h;ms (Duchier and 
C., 1999; Duehier and Thater, 1999). 
The t)rol)lem can be tbrmulated as follows: 
Given a s?jntactic description Do, find all 
closed syntactic descriptions D such that 
VN VV Do t- D is provable in the theory 7- 
(N and l} respectively repro.sent he node 
variables N, , . . . ,  N~ and the. fcaturcs vari- 
ables I~,..., 147~ of Do). 
A flmdame.ntal t)rot)erty of the (teduction process 
that lea(It to a solution is monotonicity to that the 
t)roblem can t)e expressed as a constraint satisfac- 
tion problem (CSP). A CSP is specitied fl:om a set 
of variables to which constraints are apl)lied. Here, 
we consider three sets of variable, s which corretl)on(t 
to tim three kin(Is of choi(:e 1)oints in the parsing pro- 
COTS;  
1. the set {N1, . . . ,N, ,}  of syntacti(" 1,o(le vari- 
a/)les; 
2. the set { l~, . . . ,  I4,, } of t'eature variables; 
3. the set {St , . . . ,Sv}  of sdection variables; ev- 
ery selection variable Si is an integer variable 
which is associated with a connective & of D0 
and which is used for indicating the rank of the 
component of the correspondent additive con- 
junction that is selected in the deduction. 
Selection and feature variables are considered as fi- 
nite domain variables, which imply that all feature 
vahms are encoded as integers (one exeel)tion is that 
features of type phon remain strings). 
Node variables arc' enco(ted indirectly via finite 
set variables by using the metho(t t)roposed in 
(Duchier and C., 1999). Every node variable 
Ni is associated with five finite set w~.riables 
cq(i), up(i), down(i), side(i) and all(i) which are 
used for locating the node i with respect o the oth- 
ers in the sys|;em of dominance relations. Because 
of the presence of additive cm\\]unctions, a node i 
which is present in tile description Do nmy be absent 
from a solution. In this case, eq(i) = {i}, alt(i) = 
~l,n~\{i}, up(i) = down(i) = side(i) = 0; in the 
case that i is present in a solution, alt(i) repre- 
tents the nodes that are not selected in the solution 
whereas tile selected nodes are distributed into the 
four sets cq(i), 'up(i), down(i) and .side(i) according 
to their relative position with respect o i. 
Constraints on the variat)les of the probhnn are di- 
vided into two parts: 
? general constraints guarantee that the solutions 
D are effective closed syntactic descriptions; 
? specific constraints guarantee that the solutions 
D are models of the initial description Do. 
3.1  Genera l  const ra in ts  
Treeness  const ra in ts  For every node i, the parti- 
tion of \[1, n~ between eq(i), up(i), down(i), .side(i) 
and all(i) guarantees that the solution is a directed 
acyclic graph (DAG). 
For expressing that all dominmme relations which 
structure a solution must only be realized by parent- 
ehihtren relations, we must introduce constraints ill 
which variables of type. cq(i) and selection variables 
appear for expressing that every selected node vari- 
able must be identified with a node variable which 
is the parent in a selected parent-children relation. 
In order to express that a solution is more than a 
DAG, that is a tree, we must add the following con- 
straint: for every selected parent-children relation, 
the sets down(j) for the children j present in this 
relation must be disjoint. Such a condition can be 
drol)ped if we want to extend the fbrmalism to take 
into ac(:ount resource thm:ing like coordination tot 
instance; in this ease, syntactic structures are no 
longer trees trot DAGs. 
Neut ra l i ty  const ra in ts  Feature neutrality of a 
solution is guaranteed by constraints which also ap- 
peal to variables of type cq(i) and selectkm vari- 
ables: for each attribute Attr, we consider two sets 
of sets in tile shape cq(i): the first corresponds to 
all selected predicates in the form (Ni : Attr +-- V) 
and the second to all selected predicates in the form 
(Ni : Attr + V). The elements of each of these 
sets must be disjoint sets and every element of the. 
first set; must be identified with one element of the 
second and conversely. 
Other general constraints related to features and 
phonological forms are trivial. 
3.2  Specif ic const ra in ts  
Such constraints are determined by Do. Doini- 
nance constraints are easily iml)lelnented by com-  
b in ing  selection variables and variables of type 
cq(i), 'up(i), down(i), side(i)(Duchier and Thater, 
1999). 
605 
FEaturE constraints concern both feature variables 
and selection variables which are all finite domain 
variables to that their implen:entation appeals to 
classical tools in the domain of constraint program- 
ining. 
3.3 A prototype parser for Ih'ench 
We have implemented a prototype parser for IS"ench. 
It it written in the language Oz (Smolka, 1995) 
which combines various aspects and modules, in- 
cluding constraint prograInming. Though the lin- 
guistic COvErage of tile lexicon is still linfited, we 
have learnt lessons from the first experiments: in 
particular, neutrality constraints play a central role 
for restricting the search space, which confirms the 
inlportancc of polarities for the computationa.1 Gtrl- 
ciency. 
Conc lus ion  
Starting from TAG and CO, we have presented a
linguistic tbrmalism which aims at better cal)turing 
the flexibility of natural language by using two no- 
tions as its basis: underspccifieation and polarities. 
In some SENSE, they correspond to two important 
properties of natural language: ambiguity and re- 
source sensitivity. 
To regard parsing as a constraint satisfaction prob- 
lem fits in with the flexibility of the formalism in 
terms of comi)utational efficiency but, at tile same 
time, it allows to go towards robustness beyond a 
traditional view of parsing in which only grammati- 
cal and completely specified structures are taken into 
a(;count.  
The success of IG does not ette.ntially depend on 
the fbrmal propErtiEs that are usually Exhibited for 
grammatical formalisms: the characterization f tile 
class of languages that are generated by thesE gram- 
mars or the complexity of general parsing algo- 
rithms. Forlnal properties matter but with respect 
to an ESSEntial goal: to Extend the linguistic coverage 
of IG from toy lexicons to massive lexical databases. 
For this, IG have some advantages by making it eas- 
ily to factorize and modularize information: such 
propErtiEs are decisive when one wants to extract 
information from a lexical database fficiently or to 
update data while maintaining the coherence of the 
whole base. 
The success of IG will also depend on their capacity 
to integrate other linguistic lEvEls than the syntactic 
level, the semantic level especially. 
References  
P. Blache. 1999. "Contraintcs ct thdories linguis- 
tiques : des Grammaircs d'Unification aux Gram- 
maires de Propridtds". ThSse d'Habilitation, Uni- 
versit5 Paris 7. 
M.-It Candito. 1999. Oryanisation modulairc ct 
paramdtrablc dc grammaircs dlcctrvniqucs lcxi- 
calisdcs. Application a'a fl'anf.ais et ?~ l'italien,. 
ThSse de Doctorat, Universitd Paris 7. 
D. Duchier and Gardent C. \]999. A constraint- 
based treatment of descriptions. In IWCS-3, Jan 
99, TillbuTy, The Netherlands. 
D. Duchier and S. Thater. 1999. Parsing with tree 
descriptions: a constraint based al)proaeh. In 
NLULP'99,Dcc 99, Las Cruccs, New Mcxico. 
M. Egg, J. Niehren, P. Ruhrberg, and F. Xu. 1998. 
Constraints over lambda structures in semantic 
underspecification. I  COLING/A CL'98, Aug 98, 
Montreal, QuEbec, Canada. 
J.-Y. Girard. 1987. LinEar logic. Th, eorctical Com- 
puter Science, 50(1):1-102. 
A. K. Joshi, L. S. Levy, and M. Takahashi. 1975. 
Tree adjunct grammars. Journal o/Computer and 
System Sciences, 10(1):136-163. 
L. Kalhneyer. 1999. Tree Description Grammars 
and Undcrspccificd Rcprcsentations. Ph.D. thesis, 
UniversitSt Tiibingen. 
M. Kanovich. 1992. Horn programming in linear 
logic is NP-comt/lete. In LICS'92, .\]~tTt 92~ Santa 
Cruz, California, pages 200-210. 
A. Kroch and A. Joshi. 1985. Linguistic relevance of 
tree adjoining grammars. Technical Rel)ort MS- 
CI-85-18, Department of Computer and Informa- 
tion Science, Uifiversity of Pemlsylvania. 
J. Lambek. 1958. The mathematics of sentence 
structure. Amcr. Math. Monthly, 65:154-169. 
P. Lincoln. 1992. Computational aspccts of linear 
logic. Ph.D. thesis, Stanford Uifiversity. 
),4. Moortgart. 1996. Categorial Type Logics. In 
J. van Benthein and A. ter Meulen, editors, Hand- 
book of Logic and Language, chal/ter 2. Elsevier. 
R. Muskens mid E. Krahmer. 1998. Talking about 
trees and truth-conditions. Ill LACL'98. Dec 98, 
Grenoble, France. 
O. Rainbow, K. Vijay-Shanker, and D. Weir. 1995. 
D-tree grammars. In ACL'95, paget 151 ~158. 
C. RetorS. 2000. Systbmes ddductifs et traite- 
Inent des langues:un panorama (let grmnmairEs 
catdgorielles. Research Report RR-3917, INRIA. 
To appear in Technique t Science Iifformatiques. 
Gert Smolka. 1995. The Oz programming model. 
In Jan van Leeuwen, editor, Computer Science 
Today, LEctUrE Notes in ComputEr SciencE, vol. 
1000, pages 324 343. Springer-Verlag, BErlin. 
K. Vijay-Shanker. 1992. Using description of trees 
in a tree adjoining grmnmar. Computational Lin- 
guistics, 18(4):481-517. 
606 
