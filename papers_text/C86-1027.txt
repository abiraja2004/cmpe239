A Parametr ic  NL Translator  
Randal l  Sharp 
Dept. of Computer Science 
Univers i ty  of Br it ish Columbia 
Vancouver, Canada 
Abstract 
This report outlines a machine translation system 
whose linguistic component is based on principles of 
Government and Binding. A "universal grammar" is 
defined, together with pal-ameters of variation for 
specific languages. The system, written in Prolog, 
parses, generates, and translates between English 
and Spanish (both directions). 
i. Introduction 
The theory of Gov~t  and Binding (GB) (Chc~sky 
1981) proposes universal principles of grammar (UG) 
that underlie all natural grammars, with the 
principles being subject to parametrization, giving 
rise to language variation. One example is the so- 
called "pro-drop" parameter of languages like 
Spanish, Hungarian, C~ineae, etc., that, among other 
things, allow '%dssing" subjects. To model such a 
theory, one needs merely (~) to define the UG along 
with an appropriate set of parameter values for each 
language, as opposed to defining totally independent 
language-specific grammars. The overall size of the 
system is thereby reduced, and adding the grammar 
for a new language ideally means simply adding its 
parameter settings. Hence the motivation for a GB 
approach to machine translation. 
To test the approach, a model of UG was constructed, 
parameters defined for Spanish and English, and 
language-specific rules added for morphology and, 
where necessary, idiosyncratic syntax. The result is 
the GB-Translator (GBT) (Sharp 1985). 
A general knowledge of GB is assumed in the 
following, as is a familiarity with Prolog, the 
language in which the GBT is implemented. 
The overall strategy of the GBT is as follows: 
(I) a. read in a sentence in the source language; 
b. perform a morphological and constituent 
analysis, building an S-structure 
representation; 
c. convert the S-structure to D- ("deep") 
structure via reverse-transformations; 
d. perfor~ lexical transfer frc~ the source D- 
structure to target D-structure; 
e. transform the D-structure to one or more S- 
structures; 
f. validate each S-structure for well-formed- 
hess; 
g. "flatten" and display only the well-form~l 
target sentences. 
Since GB is primarily a theory of syntax, no seman- 
tic processing has been introduced in the GBT. What 
is of interest here is the variety of syntactic 
forms available in diverse languages for expressing 
semantically equivalent propositions, with "equi- 
valence,, being controlled by appropriate choices of 
lexical items in the two languages. Problems of 
semantic ambiguity and structural alteration have 
not been addressed, as this relates more to trans- 
lation theory than to GB. 
An example of the system's behavior is shown below, 
where user responses are underlined: 
(2) Enter source language: 9_e_e~lish. 
Enter target language: ~ ish .  
Enter sentence in english: I believe John to 
have told the truth. 
Yo creo clue Juan ha dicho la verdad. 
Creo que Juan ha dicho la verdad. 
Enter source language: ~L3anish. 
Enter target language: ~ l i sh .  
Enter sentence in spanish: Creo que has dicho 
la verdad. 
I believe that you have told the truth. 
I believe you have told the truth. 
I believe you to have told the truth? 
2. System Structure 
The GBT contains a UG conioonent and two language- 
specific components, one for English, one for 
Spardsh. Exploiting the modular nature of GB (see 
Wehrli 1983), the UG consists of a phrase structure 
cc~nent  based on X-bar syntax (Jackendoff 1977), a 
transformational component that includes the rule 
Move Affix (=affix-hopping) and the general rule of 
Move Alpha (including the subjacency constraint), 
and a well-formedness component containing con- 
straints on surface representations. The UG, then, 
is an expression of the theories of X-bar, Case, 
Theta, Government, Binding, and Bounding (Choms\]oy 
1981) (see Fig. i). 
The l~ge-spec i f i c  ccmi0onents consist of a lexi- 
con and a grammar. The lexicon includes (i) the 
lexical entries, and (2) tables of inflections and 
contractions (e.g. Spanish del = de + el). The gram- 
mar contains the UG parameters and idiosyncratic 
transformations. Figure 2 lists the parameters and 
transformations currently implemented for each 
language. 
x-bar phrase structure rules 
Transformations 
Move Affix 
Move Alpha 
- Sttbj ace~ 
Well-Formedness Ccei0onent 
- Doubly-filled CCMP Filter 
- WH-Filter 
- Case Filter 
- Empty Category Principle 
- Bindin~ Conditions 
-- F ig.  1 UG 
124 
ENGliSH SPANISH 
Transformations 
Subj ect-AUX Inversion 
~Be ~ising 
Do Support 
It Insertion 
Cc~plementizer 
Deletion 
Paramete~ 
Pro -d~:  no 
Bounding Node: NP,S 
~_~ Governor: 
Iexicon 
Transformations 
Verb Prepos~ 
Null Subject 
Parameters 
pro-drop: yes 
Hounding Node: NP,S-bar 
__Proper Governor: V ~  
Fig. 2 Language~nents  
3. Lexicon 
Dictionary e/itries are represented as Prolog unit 
clauses: 
(3) dict (Lang, Word, Cat, Features). 
where 'Lang w is the language~ 'Word' is the lexical 
unit, 'Cat ~ is the syntactic category, and 
'Features' contains a list of morphological and 
syntactic features along with the transfer value. 
Sc~e s?~01e entries are shown below: 
(4) di~c(e,put,v, \[subcat(\[n,p\]) ,spanish(poner) \]). 
dict (e,believe,v, \[~0cat (n), sub cat (c), sdel (+), 
~nish  (o~r)  \] )? 
dict  (e, seem,v, \[subcat (c) ,sdel (+) ,theta(~), 
spanish ( ~ )  \] ). 
dict (s,poner,v, \[subcat ( \[n, p\] ), english (put) \] ). 
dict (s, c~er,v, \[subcat (n) ,subcat (c), 
english(believe) \] ) ? 
dict (s,pgxecer,v, \[subcat (c), sdel (+) ,theta(=), 
english (~)  \] ). 
~e  verbs ~_t and poner s%Lbcategorize for an NP and 
pp. Believe subcategorizes for either an NP or a 
clause, as does its Spanish equivalent, creer. The 
former has the S-bar Deletion property, while the 
latter does ~ot, allowing for an infinitival comple= 
ment for believe but not for creer (see (2) above). 
Seem and parecer do not assign thematic roles to the 
subject, ir~Lcated by the feature "theta(-)", thus 
giving rise to sentences such as It seems John has 
left/Parece que Juan ha salido. Note that since seeal 
and parecer also have the "sdel(+)" feature, they 
beth exhibit subject=raising: John seems to have 
left/ Juan_~ece haber ealido. 
Other features in the lexicon include person, 
ntm~er, gender, tense, irregular forms (e.g. 
go/went), \[?wh\], \[?pronoun\], and \[2anaphor\] (~cmlsky 
1982)o 
4. l%mase St1~cture 
The primary l~n~ase stru?:~ure rules are given in (5), 
using X-bar syntax and written in the gra~ar  
notation of Clocksin and Mellish (1981): 
(5) x2(L,C, \[\[C,F\],Spec,XllPost\] ) --> 
specifier (L, C, Spec), 
xl(L,C,Xl) , 
postadjunct (L, C, Post). 
xI(L,C, \[PreHD,HDIPostHD \] ) --> 
pz~adj unct (L, C, ~) ,  
x (L ,C ,HD,~) ,  
complements (L, SUBCATS, PostHD). 
For language L and category C, the x2 rule above 
constructs a imrse tree containing nodal information 
(category and what will become phrasal features) 
followed by the specifier, the X1 sub-structure, and 
any ~-ad juncts  (e.g. PP modifiers). The xl rule 
parses a pre-adjunct, t/le head, and the complements 
of the head, the latter tak~ frcm the subcategor- 
ization features of tJ~e head. In this way, the 
parser is head-driven (Proudian and Pollard 1985); 
the head determines the course of f~irther parsing. 
The rule in (5) is used for all major phrasal 
categories, i.e. NP,VP,AP,PP, as well as the clausal 
phrases COMP (=S-bar) ar~ INFL (~) (Stowell 1981). 
(It should be pointed out that (5) reflects head- 
initial gran~nars. A simple parameter could be 
inserted to aocommodate head-final grammars, such as 
for SOV languages like German, but this introduces 
parsing problems for Prolog. ) 
As an ex-~r~ole, the following structure is created 
:for the sente/%ce The man had seen many_~i\[~LS_ from 
his window, where the symbol $e denotes an empty 
value, and " " denotes a place-holder for features: 
(6) \[\[c,_\], Se, \[ Se, Se, 
\[\[i,_\], \[\[n,_\], the, \[ Se, man \]\], E Se, Se, 
\[\[v,_\], had, \[ $e, seen, 
\[\[n,_\], ~ny, \[ $e, things \] \]\], 
\[\[p,_\], Se, \[ $e, fz~m, 
\[\[n,_\], his, \[ Se, window \]\]\]\]\]\]\], 
\[mode, decl\] \] \] 
5. System Operation 
Following the strategy :in (i), the GH9 reads in a 
sentence (assumed to be grammatically correct), 
analyzes the ~orphology of each word, and applies 
the phrase structure rule (5) recursively to build 
the S-str~Icture. Then, all movement transformations 
are undone and features percolated to the phrasal 
node, at whidi time f~iture agreement is ch~-~ed. 
%he result is a D-structure in which all (and only) 
thematic elements are in e-marked positions, 
thereby satisfying the Theta Criterion (Chomsky 
1981). This also simplifies lexical translation (as 
opposed to trmlslating ~tween LF representations). 
125 
The transformation stage presents the most 
interesting aspect of the system, since this is 
where the principles of UG are applied. (since the 
i r~t  is assumed to be ~t ica l ,  it is not tested 
for well-formedness. ) The high~level Prolog program 
for this stage is given below: 
(7) tra~gformation(L, Dstruchure, Sstrdcture) :- 
transform (L,matrix (+), Dstructure, Sstructure), 
dbl_CC~P_filter (L, Sstructure), 
wh filter(L, Sstructure), 
case filter(L, Sstructure), 
b ~  conditions (L, Sstructure), 
ecp(L, Sstructure). 
The first action is to transform the D-structure to 
an S-structure. The "transform,, predicate is called 
recursively on each cyclic node (~-bar), beginning 
with the most deeply embedded one. The transforma- 
tions include those listed in Figure 2 above plus 
the general transformations of Move Affix and Move 
Alpha. 
The next step involves checking the resulting S- 
structure for well-formedness. (Note that the well- 
formedness conditions could execute in parallel, 
given appropriate machine architecture.) An S- 
structure that fails to pass any of the conditions 
forces backtracking into the ,,transform,, predicate. 
For example, the clause in (8a), which involves no 
movement, will be generated, but since John cannot 
be assigned a grammatical Case, it fails the Case 
Filter. Backtracking to Move Alpha results in John 
moving to the non-8-marked subject of seem (8b), 
resulting in a well-formed structure: 
(8) a. *It seems John to have left. 
b. John seems t to have left. 
Another example that illustrates how parameters 
affect generation is given by the Empty Category 
Principle (ECP), which requires traces to be 
properly governed. Given the following parameter 
settings: 
(9) proper_governor(english,v). 
proper_governor ( english, p ). 
proper_governor (spanish, v). 
proper_governor(spanish, i). 
where the last statement is interpreted as "INFL is 
a proper governor if it contains the feature 
\[+tns\]", the "ecp" statement in (7) will allow 
preposition-stranding in English but not in Spanish 
(i0), and allow "that-trace" in Spanish but not in 
Enqlish (11) : 
(i0) Which film did they leave after t? 
After which film did they leave _t ? 
Despu4s de cuil pelicula salieron ellos _t ? 
*Cu~l pelicula salieron ellos despu~s de t ? 
(11) Who seems t to have left? 
Who does it seem _t has left? 
*Who does it se~s that t has left? 
Qui~n parece t haber salido? 
Qui~n parece que t ha salido? 
A similar use of parameters controls subjacency 
within Move Alpha. To show that S-bar is a bounding 
node in Spanish, Torrego (1984) notes that Verb Pre- 
posing ~mlst occur in every clause that contains a 
wh-phrase or its trace in OCMP. In (12a), the trace 
of con ~ui~n causes inversion whereas (b) is derived 
without movement to (~MP, obviating inversion: 
(12)  
a. Con qui~n sabia Juan _t que habia hablado Maria t ? 
b. Con qui~n sabia Juan que Maria habia hablado t ? 
('With wh~ did John know that Mary had spoken?') 
The GBT system operates solely on the basis of 
syntax. In a more complete translation system, 
issues of semantics, pragmatics, and discourse must 
be dealt with, ideally by again assuming general 
principles subject to parametric variation. Never ~ 
theless, the current system i l lustrates the 
feasibility of a generalized syntactic ~nent  in 
an overall language processing device. 
7. Acknowledgements 
This paper is dedicated to the memory of Alfredo 
Hurtado. 
References 
Chfm%sky, N. (1981) lectures on Government and 
Bindinq, Dordrecht: Foris Publications. 
_ _  (1982) .B~lle CDn.cg. pts ~ Conseque/lces of the 
Theory of Gove~t  and B'iDding, MIT Press. 
Clocksin and Mellish (1981) ~ in P ro~,  
Berlin: Springer-Verlag. 
Jacke/Idoff, R. (1977) XrBar Svntax: A Studv of 
Phrase Structure, MIT Press. 
Proudian, D. and Pollard, C. (1985) "Parsing Head- 
Driven Phrase Structure G~" ,  23rd Annual 
Meetinq of the ACL, 167-171. 
sharp, R. (1985) A Model of G ~  Based on 
Principles of Government and Binding, M.Sc. 
Thesis, Ur~\[v. of British Columbia, Canada. 
81ocum, J. (1985) "A Survey of Mac/line Translation: 
Its History., Current status, and Future 
Prospects,,, ~_  tational Linquistics, 11:1-17. 
Stowell, T. (1981) Origins of Phrase Structure, 
Ph.D. dissertation, MIT. 
Torrego, E. (1984) "On I/%version in Spallish and S(xt~ 
of its Effects", _~ 15:103-129. 
Wehrli, E. (1983) "A Modular Parser for French", 
Proc. of 8th IJCAI, 686-689. 
126 
