RUSSIAN-FRENCH AT GETA : OUTLINE OF THE 
METHOD AND DETAILED EXAMPLE 
Ch. BOITET and N. NEDOBEJKINE 
GETA, UNIVERSITY OF GRENOBLE 
F-38041GRENOBLE-CEDEX 53 
Introduction 
The original version of this paper is very 
detailed. Space limitations for publication in 
COLING's proceedings have forced us to reduce it 
by a factor of five. The more detailed version 
has been proposed for publication in '~inguistics". 
This paper is an attempt to present the 
computer models and linguistic strategies used 
in the current version of the Russian-French 
translation system developed at GETA, within 
the framework of several other applications 
which are developed in a parallel way, using the 
same computer system. This computer system, 
called ARIANE-78, offers to linguists not 
trained in programming an interactive environ- 
ment, together with specialized metalanguages in 
which they write linguistic data and procedures 
(essentially, dictionaries and grammars) used to 
build translation systems. In ARIANE-78, trans- 
lation of a text occurs in six steps : morpho- 
logical analysis, multilevel analysis, lexical 
transfer, structural transfer, syntactic gene- 
ration, morphological generation. To each such 
step corresponds a computer model (non- 
deterministic finite-state string to tree trans- 
ducer, tree to tree transducer,...), a meta- 
language, a compiler and execution programs. The 
units of translation are not sentences, but 
rather one or several paragraphs, so that the 
context usable, for instance to resolve ana- 
phores, is larger than in other second- 
generation systems. 
As ARIANE-78 is independent of any parti- 
cular application, we begin by presenting its 
main features in Part I. Some of them are 
standard in second-generation systems, while 
others are original. Among these, we insist on 
the multilingual aspect of the system, which is 
quite unique, on the very powerful control 
structures embodied in the supported computer 
models (non-determinism, parallelism, heuristic 
programming), and on its interactive data-base 
aspect. 
In the second and larger part, 
we successively describe each step of this 
Russian-French application. We first present the 
underlying computer model (there are 4 of them, 
as the second, third and fourth step use the 
same one), then the organization of the linguis- 
tic data. A small text is used throughout the 
text as a standard example. Examples of trans- 
lations of larger texts appear at the end. 
I - Current GETA translation system 
The computer system ARIANE-78, together 
with appropriate linguistic data, constitutes a 
multilingual automatized translation system. 
The system is a rathersophisticated second 
generation system. It relies on classical as well 
as more original principles. 
I. C!assical second-generation principles 
Intermediate structures 
The process of translation of a text from 
a "source" language in a "target" language is 
split up into three main logical steps, as 
illustrated below : analysis, t~a~fer and 
generation. The output of the analysis is a 
"structural descriptor" of the input text, which 
is transformed in an equivalent structural des- 
criptor in the target language by the transfer 
phase. This target structural descriptor is then 
transformed into the output text by the genera- 
tion phase. Essential in our concePtion is the 
fact that analysis is performed independently of 
the target language(s). The "deeper" the ana- 
lysis, the shorter the distance between the two 
structural descriptors. Ideally, one could 
imagine a "pivotal" level, at which they would 
be the same. 
In the past, Pr. Vauquois' team tried a 
slightly less ambitious possibility \[Vauquois, 
1975\], namely to use an "hybrid" (Shaumjan) 
pivot language, where the lexical units are 
taken from a natural language, so that the 
transfer phase is reduced to a lexical transfer, 
without any structural change. As it is not 
always possible, or even desirable, to reach 
this very abstract level, one may choose not to 
go all the way up the mountain and to stop some- 
where in the middle. This is why we call our 
structural descriptors "i~termediate structures". 
Note that ARIANE-78 imposes nothing of that kind, 
both extremes are still possible, and in fact the 
linguistic teams have agreed on "multilevel" 
intermediate structures which contain very deep 
as well as low level types of information, ran- 
ging from logical relations to traces (see 
details below). 
SeParation of programs and linguistic data 
The second classical principle is to offer 
metalanguages, in order to keep the particular 
linguistic data (grammars, dictionaries) sepa- 
rated from the programs. 
--437-- 
For instance, dictionary look-up is a standard 
function, which should not be modified in any 
way when a new language is introduced in the 
System. This separation also corresponds to a 
division of work and enhances transparency : 
dictionary look-up may be optimized by the pro- 
grammers without the linguistic users ever 
being aware of it. The same goes for more com- 
plex functions, like pattern-matching in tree 
manipulating systems. In these metalanguages, 
linguists work directly with familiar concepts, 
like grammatical variables, classes, dictionaries 
and grammars. The grammar rules are rules of 
Some formal model (context free, context sensi- 
tive, transduction rules). That is, one may also 
consider such metalanguages as very high level 
algorithmic languages offering complex data 
types and associated operators. Although this 
principle of separation has been criticized as 
imposing too much "rigidity" on the users, cri- 
tics have failed to understand that this is only 
the case when the metalanguages are not adequa~. 
A good comparison may be found in classical pro- 
gramming, where for example, the compiler and 
run-time package of PL/I is separated from pro- 
grams written PL/I in exactly the same sense. 
Semantics b~ features 
The third classical principle touches 
sema~.  In a second-generation MT systems, 
semantics may be only expressed by the use of 
features (concrete, abstract, countable,...), 
which are exactly like grammatical features. The 
theoretical framework is the one of a formal 
language, with a syntax describing the combi- 
nation rules of the language units. There is no 
direct way, for instance, to relate two lexical 
units. In order for this to be possible, there 
should be a (formalized) domain, possibly re- 
presented as a thesaurus, and rules of inter- 
pretation. However, this limitation may be 
partially overcome in ARIANE-78's lexical 
transfer step. Remark also that semantic fea- 
tures may be extremely refined for some limited 
universe, and give surprisingly good results 
\[TAUM-METEO, J975\]. 
2. Principles p.roper_ to GETA's sy?tem 
We relate them to the three main princi- 
ples exposed above. 
Intermediate structures 
In ARIANE-78, we split up each of the 
three main phases into two steps. This is 
essentially for algorithmic as well as for lin- 
guistic reasons, Morphological analysis, lexic~ 
transfer and morphological generation are undoub- 
tedly very much simpler than the order steps, 
and it has seemed reasonable and linguistically 
motivated to keep them separate and to use 
simpler algorithmic models to realize them. 
However, this could not be the case in other 
environments, for example if the input would be 
very noisy (oral input). 
ARIANE-78 uses a unique kind of data- 
structure to represent the unit of translation 
from morphological analysis to morphological 
generation, namely a complex labeled tree struc- 
ture : each node of such a tree bears a value for 
each of the "grammatical variables" used in the 
current step. 
GETA's system is mu~ngua l  by design : 
an analysis cannot explicitly use information 
from the target language, and generation is 
likewise independent of the source language. 
Moreover, in a given user space, ARIANE-78 
ensures the coherence of the linguistic data 
written to construct a multilingual application. 
Computer environment 
The principle of separation of programs 
and linguistic data is strictly observed in our 
system. An additional feature is to propose 
several algorithmic models designed to be of 
maximal adequacy and generality as well as of 
minimal computational complexity. 
Functions of an integrated MT system 
include preparation of the linguistic data, 
management of the corpora and execution of the 
linguistic data over texts. ARIANE-78 provides 
a conver6atio~al environment for these functions, 
hiding implementation chores to the user. It also 
includes a spe~aZized ata-base management 
system for the texts and the linguistic files. 
Semantics 
Semantic features may be declared as nor- 
mal grammatical features in each step. At lexi- 
cal transfer, the linguist may relate several 
source and target lexical units, these relations 
being elaborated in the succeeding structural 
transfer phase. This is however certainly not 
sufficient to call the system "third generation". 
3. Organization of the translation process 
Overall schema 
The schema below shows the different steps 
of the translation process. The components of 
ARIANE-78 implementing the 4 different algorith- 
mic models appear within circles, they are lin- 
ked by double lines to rectangles corresponding 
to the linguistic data written in the associated 
metalanguage for the indicated step. Simple 
arrows indicate the flow of control. 
Organization of a step 
In each step, the linguistic data may be 
of four kinds : grammatical va~u6ables (like gen- 
der, number, semantic type), classes, describing 
useful combinations of values of variables, 
d/ct/0nar/es and grammars, containing the rules 
and the strategy to use them. 
--438--- 
N 
~tLexical I iou-rce-s-ti _ f Structu;.l 
ransfer 1------*: +targ 
llntermed. 'I ~-~ //! ~n-te-rme\[| 
/Isce itrucl I ~ ~ Ltgtitucl 
N 
f . . . . . . .  
,Result- i 
llab. tree I 
I 
t I === 
"s lg  YJx~" ' I 
~ s.tr in~ of~ ~ cnara~ter~ 
I Syntact 
generat :,1 
,1 
~.targ. text. 
,. ! 
Morpholol 
generatic 
$ 
Tgt text ' 
s~rin~ 09 _cnara~te~s 
A 
I 
O 
IN 
They are expressed in a metalanguage. 
Their syntax and cohenrency is first checked by 
the corresponding compiler, which generates a 
compact intermediate code. At run-time, this 
code is interpreted by standard "execution pro- 
grams". This approach separates the linguistic 
and algorithmic problems, and makes debugging 
and maintenance much easier. 
The complete system is operational on IBM 
compatible machines under VM/CMS. ARIANE is the 
name of the interactive monitor interfacing with 
the user. 
For more explanations about our termino- 
logy and our intermedlate structures", see 
\[15, 22, 23\]. 
II - An application to Russian-French translation 
We will use a small size text as our stan- 
dard example. Note that usual translation units 
are not sentences, but rather paragraphs. We use 
an unambiguous latin transcription. 
Input text 
? SFORMULIROVAN PRINCIP, S POMOTHQYU 
KOTOROGO OPREDELYAETSYA KRITERIJ, PRIGODNYIJ 
DLYA NELINEJNOJ TERMODINAMIKHESKOJ SISTEMYI. 
(A principle has been defined, with whose help 
one defines a criterion useful for the non 
linear thermodynamic system). 
I .  Morphological analysis 
The grammar, classes and dictionaries are 
written in the ATEF formalism \[l, 8, IO, 19\]. 
The strategy of the analyzer has been described 
in \[16\]. Its output is a "flat tree" with stan- 
dard structure and with leaves labelled by the 
masks of variables computed by the analyzer. 
I ,  ULTXT 
I 
2,ULFRA 
. . . . .  " . . . : : . : . . . .  / . . , , - .  - . .  . . .  
O O O O O O CD O O O O O O ?D 
N % 
~ g d 
. . . . . . . . . . .  ? 
2. Multilevel analysis 
This part is the most difficult. It is 
written in ROBRA \[5, 6, 7, 8, |2\], a general 
tree-transducer system. In order to build a 
whole transformational system, the linguist 
writes ~n6fo~UJ~O~ r~ (TR) and groups 
them in transformationa~ gr~mars (TG). When a 
TG is applied to an object tree, all compatible 
occurrences of its TR are executed in parallel. 
The overall flow of control is described in the 
control graph. Using a built-in backtracking 
algorithm, ROBRA finds the first possible tra- 
versal of the control graph leading to an exit 
(&NUL symbol), thereby applying each traversed 
TG to the object tree. 
Rules are grouped in grammars when they 
correspond to related linguistic phenomena, or 
when they express transformations used for a 
certain logical step of the linguistic process 
(here, multilevel analysis) or, more strategi- 
cally, when they share the same execution modes 
(e.g., iterative rules will appear in "exhaus- 
tive" grammars, others in "unitary' grammars. 
This architecture makes it possible to limit the 
interaction between rules and avoid many combi- 
natorial problems, to develop strategies and 
heuristics, and to test and modify TGs separa- 
tely (different trace parameters may be asso- 
ciated to each TG). 
Let us now give the control graph used in 
multilevel analysis of Russian, with some 
comment s. 
-439- -  
, ~ ~  INIT (E) 
; ~ ~ ~  v ~-  . 
DGa(E) $ 
~ ENON(E) 
ENON k ~ p r e s e u ~  
~- ENON2 (EH) 
GNI (E) 
? a re lat ive  
ig t h e r ~  GN2(EHP) 
R L T ( ~  ip ia l  \[ 
clause else | 
p ~ / E ! P S N (  ositlon o 
| 
SN2 (E) ~ . . .'~ . . . .  \ ~ - - ~ /  l~ there ~s an ln~inlnlve 
~ or subordinate clause 
i f  there is a non2.___._.~ /
l NALF (E) a"~lphabetical form ~ CASC(EHP) 
PHR(EP) 
/ 
i f  genit ive nominal clause ~ 
outside the clause 
GEN4 (EH) ~" C IRC (EHP) 
/< ~ - ~ , ~  isolated long 
I \ ~ form adjective 
~ ~ it there are 
subord inat~ 
"~,~lauses "~ SUBCORD (EP) 
else "~-~_  ~ 
-~- - - - - - . -~  FTR(TI) 
&NUL 
INIT is the first grammar, and is iterative (E). 
Its aim is to homogenize and to simplify the input 
tree. 
DGR is used only when there is an analytic expression 
of degree, to represent it synthetically (NG variab~). 
ENON-ENONI-ENON2 : these 3 grammars break down the 
sentences into textually marked "utterances". Commas, 
unambiguous conjonctions and relative pronouns ... 
are used. 
GNI builds simple nominal groups like Adj + N or 
Prep + N or mum + N. 
GN2 looks for further elements in the nominal groups, 
and solves certain ambiguities. 
RLT looks for the nominal antecedents of relative and 
participial clauses constructed by ENON2. 
SN searches for a personal verb as main element of the 
utterance, and for verbal modifiers, like negative and 
conditional particles or auxiliaries. 
SN2 tries to solve the adverb - short form adjective 
ambiguity and builds embedded nominal groups. 
MARQ builds all types of subordinate verbal and infi- 
nitive clauses. It further tries to solve the pre- 
vious ambiguity. 
AMB searches for the most important terms of the 
clause (subject, object, near dative), thereby 
resolving ambiguities between subject and object, 
adjectives and adverbs, etc. 
NALF treats non-alphabetical forms as appositions or 
verbal complements. 
CASC handles all genitive imbrications, by (provi- 
sionally) attaching dominated groups to non-ambiguous 
groups. 
PHR marks all strongly governed groups subordinated 
to the utterance with logical relations as agent, 
patient, attribute... If possible, this is also done 
on dependent groups. 
CIRC and GEm4 realize the distribution of preposi- 
tional and genitive nominal groups between their noun 
heads, according to several syntactic and semantic 
criteria. 
ELID searches for antecedents of pronominal expres- 
sions and isolated adjectives, and builds noun groups 
by copying the lexical unit of the antecedent. If the 
elliptic element is not a personal pronoun, it be- 
comes qualifier or determiner according to its syn- 
tactic class. The syntactic and logical functions of 
the new group are computed. 
SUBCORD is purely tactical (modification of the hie- 
rarchy of certain subordinate clauses. 
FTR copies certain information from non-terminals 
onto terminal "head" nodes, to prepare for lexical 
transfer. 
--440-- 
We give now the result of the multi- 
level analysis of our standard example. Note 
that node 5 (noun group with head node 6 
"PRINCIP") has correctly been given syntactic 
function subject and logical relation patient 
(A2). Syntactic functions of non-terminals 
appear as auxiliary lexical units (UL). 
I.ULTXT 
I 
2. ULFRA 
I 3."ENONCE" 
I 4.FORNULIRO~NOMINATIF" 
6 ~- - - - - - - '~ '~7~NONCE"  .PRINCIP 
" C l ~  8. II.OPREDELITQ 
9 . P R I P O ~ R I N C I P  
Node 3 
4: 
5: 
6: 
7: 
8: 
9: 
i0: 
ii: 
12: 
13: 
14: 
15: 
16: 
17: 
18: 
19: 
20: 
21: 
22: 
23: 
24: 
25: 
: K(AQ),MD(PRT),KI(PH),A(P),T(PAS),FM(FOC), 
LX(GOV) 
K(NM),KI(GN) ,AG(A2) ,G(M),N(S),P(3), 
LX(GOV) 
K(VB),MD(VRB),KI(PH),A(I),T(PRE),AG(A6), 
K(NM),KI(GP),G(M),N(S),ANF(RLT) 
K(PP),FT(PP) 
LX(GOV) 
LX(GOV) 
K(NM),KI(GN),AG(A2),G(M),N(S),P(3), 
LX(GOV) 
K(AQ),KI(MD),AG(A6),FM(FOL),G(M),N(S) 
K(NM),ANF(RLT),FT(DEB),G(M),N(S) 
LX(GOV) 
K(NM),KI(GN),G(F),N(S) 
K(PP),FT(PP) 
K(AQ),MD(ADJ),KI(GA),FM(FOL),NG(NE), 
LX(GOV) 
K(AQ),MD(ADJ),KI(GA),FM(FOL), 
K(AV),LX(PX) 
LX(GOV) 
LX(GOV) 
K(VG),FT(FIN) 
Remark the anaphoric resolution on node 13 
("whose"), on which the UL of the antecedent 
(PRINCIP) has been copied. Node \]3 has been 
generated in place of the absent noun. The 
nodes with "UL0" are strategical delimiters of 
utterances generated at the beginning of the 
analysis. 
25 .---o 
12. "NOMINATIF" 
13.KRITERIJ 14."ENONCE" 
1 5 . K R I T ~ I G O D E N  17."CIRC" 
18.DLYA~STEMA 
20.LINEEN 22.TERMO- 23.DINAMIKA 
G(M) ,N(S) ,P (3) ,RF (PF) ,ABS (A2,SJ) ,CPI (ACC) 
MRQ(RELAT) 
G (M) ,N (S) ,P (3) ,RF (R) ,ABS (A2,SJ) ,CPl (ACC) 
MRQ (RELAT) 
G(F) ,N(S) 
G(F) ,N(S) 
- -441  ~ 
3. Lexical transfer 
Lexical transfer is written in TRANSF. It 
essentially includes a bilingual multichoice 
dictionary of "transfer rules" accessed by the 
UL. Each rule is a sequence of 3-uples (condi- 
tion, image subtree, assignments), the last 
condition being empty (true). 
The automaton traverses the input in preorder, 
creating the object tree as follows. The UL of 
the current node is used to access the dictio- 
nary. The first triplet of the item whose con- 
dition is verified is chosen. The image subtree 
(generally consisting of only one node) is added 
to the output, with values of variables computed 
by the assignment part. 
Hence, the output tree is very similar to 
the input tree. The possibility to transform one 
input node into an output subtree may be used to 
create compound words or to create auxiliary 
nodes used in the following step (structural 
transfer) to treat idioms. 
As this model is algorithmically very 
simple, it is the only one where no trace is 
provided. The example below gives an idea of the 
metalanguage of the dictionary. 
'FORMULIROVATQ' == / /'FORMULER' 
'PRINCIP' == / /'PRINCIPE' 
'PRIPOMOTHI' == / /'A-L-AIDE' 
'NAPRIMER' == /O(I,2)/O:'XLOCF' 
1:'PAR' 
2:'EXEMPLE' 
,+VBFI, 
~RFPF. 
,~NMAS. 
,+MPCD. 
,+VIDE ; 
,ZPP ; 
,XNMMS. 
"0(1,2)" describes the image subtree for 
"NAPRIMER". The other ones are reduced to one 
node (default). "+VBF\]" says that the non-null 
values of variables in format VBF\] will be 
copied into the target node. RFPF is an 
assignment procedure. "~PP" says that all 
variables of format PP (except the UL) will be 
copied onto node \]. 
The following structure is the result of 
this step on our standard example. 
18. POUN 
1 . "TEXTE" 
2. "UIFI~" 
L 
3. "ENONCE" 
4. FORMULER 5. "SUJET" 25. ? 
6.PRINCIPE 7. "ENONCE" 
8. "C I~"  I I. DEFINIR 12. "SUJET" 
9.A-L-AIDE i0 .PRINCIPE 13 .CRITERE 14. "ENONCE" 
15. C R I ~ I R C "  
20 . LINEAIRE 22 . THERMO- 23 .DYNAMIQUE 
Node 4: KF(VB),SXF(ION),RFL(RF3) 
6: KF(NM) 
9: MPC(DE) 
i0: KF(NM) 
ii: KF(VB),SXF(ION) 
13: KF(NM) 
15: KF(NM) 
16: KF(AQ),SXF(ITE),PRG(AJQ),NGF(IN) 
20: KF(AQ),SXF(ITE),PRG(AJQ) 
23: KF(AQ),PRG(AJQ) 
24: KF(NM),G(M) 
442 
4. Structural transfer 
The algorithmic component used in this 
step is again ROBRA, which has been very briefly 
presented in 2. The aim of this step is to 
realize all transformations of contrastive 
nature, so as to produce the desired interme- 
diate target structure as output. 
PRL(EP) 
RECOP(T) 
1 
i f  n o n - s t a ~  ~RcTF(EP)  
a l 
~, , -~ preposlt ion else 
EFFAC(T) 
~ A C ~ L ( E P )  
QUALD(EP) 
ART(T) 
DERV(EP) 
DTM(T) 
&NUL 
The following gives the control graph of 
the TS written for this step in the current 
version of our translation system. 
PRL handles idioms, predicted in lexical transfer by 
generating auxiliary subtrees. It checks whether pre- 
dicted idioms are present and takes appropriate 
action. 
RECOP copies certain information (required mode, type 
of adjective, postponed preposition inversion of 
arguments) from terminal "head" nodes onto their 
fathers. 
RCTF handles non-standard government, particular uses 
of "DE", erases some prepositions, takes care of 
passive-active transformations, etc. 
EFFAC erases remaining auxiliary nodes generated in 
TL (idioms, non standard prepositions). 
ACTL handles particular idiom translations, like 
"ESLI + Inf" ~ "SI ON + Present", etc. 
QUALD handles actualization and qualifiers (modes, 
tenses, determination...), and generates the correct 
order in nominal groups. 
ART uses the remaining designators to compute the 
determination of nominal groups. 
DERV handles derivations (-ANT, -EUR, -ITE, etc.), 
negation (NON, PEU, IN...), prefixes and others. 
DTM makes the final computation of determination of 
noun groups. 
As we see, structural transfer is rela- 
tively simple in this version. However, many 
improvments are planned in our future version. 
The result of this step is given below. 
Note the modification of order in the last 
nominal group, as well as the generation of the 
impersonal "ON". 
--443 .... 
1 . "TEXTE" ! 
2. 'tULFRA" 
3. "EIONCE" 
4.ON ..... B JET" 26. ? 
7. PRINCIPE 8. "ENONCE" 
17 .UTILE 1 g."CIRC" 
1 9 . P O U ~  24~,"E  IT" 
22, TttERNO- 23. DYN~'IIQUE 25. LINEAIRE 
Nodes 4,\]2: NBR(SIN),TPN(SJA),G(M),P(3) 
5: TF (PRE) ,MF (IND) ,NBR(SIN) ,AF(1) ,RF (N) 
6, i4,18: ART(DEF) 
13: TF(PRE),MF(IND),NBR(SIN),RF(N) 
25: NGF(NON) 
5. Syntactic~generation 
ROBRA is also used in this step as algo- 
rithmic component. The aim of this step is to 
produce a tree structure where the terminal 
nodes contain all the information necessary for 
generating the output text, and to give the fi- 
nal surface order of the words. This is a cons- 
traint imposed by the nature of the algorithmic 
component SYGMOR, used in the last step. 
RC(T) 
ACI(P) 
if relative 
. . . . . . . . . . . . .  ADJ(E) pronoun 
RELATIF(H) else 
~____~AC2(EP)  
ART(E) 
if ULO 
~ A R T 2 ( E P )  
ULZERO(T) ~ 
. . . . .  ~&NUL 
RC copies variables from head nodes onto 
their fathers, and checks for number and gender 
correctness. AC! handles noun coordination, place of 
subject, and generation of preposition before infi- 
nitive, or of periphrases. ADJ handles agreement in 
gender and number between nouns, adjectives and 
articles. RELATIF chooses the relative pronoun (DONT, 
QUI, LEQUEL). AC2 handles homographs and noun 
ellipses. ART generates the correct article (UN, LE), 
and ART2 reflexive pronouns, auxiliary verbs, 
negations (NE...PAS, NON, IN-) and special punctua- 
tion marks to present alternate translations in 
case of doubt. ULZERO is strategical. 
- -444- -  
1. "TEXTE" 
2. "U!FRA" 
I 
3. "ENONCE" 
4.ON .- o 
n It 8.LE 9. PRINCIPE \]0. ENONCE 
\]l. "CIRC" ~ ~ B J E T "  
\]2.A-L-AIDE 13.DE \]4.LEQUEL \]8.LE \]9.CRITERE 
._"ENONCE" 
21 .UTILE __.~..~,~L' ' C I R~F' 
23. POUR 24. LE'-2-5. SYST~ME 26. "EPIT" 29. "EPIT' 
27 THEP.'rO MI 'F' 30.NON- 31 '.LINEAIRE 
6. Morphological generation 
This is the last step of the translation 
process. Words of the output text are generated. 
Some facilities must be provided by the algo- 
rithmic component, SYGMOR to handle elisions 
and contractions. 
SYGMOR realizes the composition of two 
transducers : the first, "tree-to-string", pro- 
duces the frontier of the object tree ; the 
second transforms this string (of masks of 
variables) into a string of characters, under 
the control of the linguistic data. These data 
are made of declaration of variables, formats 
and condition procedures, 
dictionaries (with direct addressing by the 
values of certain declared variables, whereby 
the first dictionary must be referenced by the 
UL, and a grammar. 
Each item in a dictionary gives a list 
of <condition / assignment / string> triplets, 
the last one having an empty (true) condition. 
A-L-AIDE 
AVOIR 
LEQUEL 
== / VID / hA L'AIDE 
== TPIA / VID / 'AI, 
== PSSPT/ V3H / 'EU, 
== TP3A / V3A / 'A. 
== NIB / VID / 'LAQUELLE, 
== NID / VID / 'LESQUELLES, 
== PLU / VID / 'LESQUELS, 
== / VID / 'LEQUEL. 
TPiA, PSSPT, TP3A are names of condition 
procedures, VID, V3H, V3A are names of formats. 
The apostrophs ('AI) are used in the grammar to 
make contractions. 
It should be noted that, unlike ATEF, 
SYGMOR realizes a finite-state deterministic 
automaton, thus reflecting the lesser complexity 
of the synthesis process. To process a mask, 
SYGMOR looks for the first applicable rule (at 
least one must have an empty condition), applies 
it and follows the transitions indicated, unless 
it finds an inapplicable obligatory rule. In 
this case, the system executes the special rule 
ERREUR or a default action if this rule has not 
been declared. It is thus possible to generate 
an arbitrary error string at that point. For 
instance, non translated source lexical units 
will be printed between special markers. 
The output of SYGMOR on our standard 
example is the following text, which is then 
transformed by ARIANE in a script file and 
formatted, thereby adding documentary informa- 
tion. 
Output text 
ON A FORMULE LE PRINCIPE A L'AIDE DUQUEL 
ON DEFINIT LE CRITERE UTILE POUR LE SYSTEME 
THERMODYNAMIQUE NON LINEAIRE. 
RUSSE RAPPORT 
LANGUES DE TRAITEMENT: RUS-FRA 
TEXTE D'ENTREE: 
SIMPDZIUM POSVVATtlEN YADERNOJ SPERTROSKOPII I STRUKTURE 
AIOMNOO0 YADRA ? VO VSTUPITELQNOM SLOVE PODKHERKIVAETSYA 
VA/HUAYA ROLQ . KOTORUYU SIMPOZIUH SYIGRAL V RAZVITII 
YAD\[RNOJ F IZIKI  SLADYIX YENERGIJ V 50VETSKOM SOYUZE . V 
?ODE SIMPOZIUMA OBSUZHDEN RYAD VAZHNYIX ISSEEOOVANIJ i 
OSUTHESTVLENHY|X SOVETSKIMI UKUENYIMI . V KOA~IHOSTI 
IZURHENO HESOXRAN\[NIE KUETNOSTI V YADERHYIX PROCESSAX , 
SOZDAHIE tIE)DELl NEAKSIA!Q:,UOO YADRA , SPONTANNOE DELENIE 
IZGIUPDV SVERXTYAZHLLYIX YEIEMENIOV I OONARU/HENIE YEFFEKTA 
TENEJ PRI RASSEYANII KHASTIC , '  SOORANYI UBEPITELQHYIE 
STATISIIKIiESKIE DAHNYIE , OIRAZHAYUIHIE ROST KI I IS .A  
PREI) LOZH\[HHYIX DOKLADOV ? OTMEKHAEISYA PRISUTSTVIE SREDI 
UKHASTNIKOV SPECIALISIOV IZ ZARUBLZIItIYIX STRAN . 
TEXTE DE SORTIE: 
. . . . .  ( TRADUCTION DU--I MARS 1980 I lH  12MN 37S ) . . . . .  
VERSIONS : ( A : -29 /01 /80  ; T : -29 /01 /80  I G : -21 /09 /79  ) 
LE SYMPOSIUM E2T CONSACRE A LA SPECTRDSCOPIE NUCLEAIRE ET A 
LA STRUCTURE DO NOYAU ATOMIQUE. DANS LE MOT D'FMTREE ON 
SOULIGNE LE ROLE IMPDRIAHT QUE LE SYMPOSIUM h JOUE OANS LE 
DEVELOPPEMLHT DE LA PHYSIQUE NUCLEAIRE DES FAIBLES ENERGIES 
EN UrIlON SOVIETIQUE. PENDANT LE SYMPOSIUM ON A EXAMINE LA 
SERIE DES EIUOES IHPOR\]ANTES REALISEES PAR LES SAVAtlTS 
SOVIETIQUES. EN PARTICULIER. ON h ETUD\]E LA NON- 
CONS\[RVAIION DE LA PARIIE DAMS LES PROCESSUS? PROCEDES? 
NUCLEAIRES, DIVISION SPONIANEE DES ISOTOPES DES ELEMENTS 
SUPERLOURDS ET DECOUVERTE DE L'EFFET DES OHORES PENDANT LA 
DISPERSION DES PARIICULES. OH A REUNI  LES DONNEES 
STATISIIQUES COtIVAIHCANIE QUI REFLETENT LA C~OlSSANCE DU 
HOMBRE DES RAPI'ORIS PROPOSES. ON REMARQUE LA PRESEHCE PARHI 
LES PAREICIPANIS DES SP\[CIALISTES DIS PAY5 EIRANGERS. 
--445-- 
Bibliography 
\[l\] Axtmeyer M. - Gaudey J. - Torre L. 
"Indexage morpho-syntaxique du russe". 
Juin 1979. 
\[2\] 
\[3\] 
\[4\] 
\[5\] 
\[6\] 
\[7\] 
\[8\] 
\[9\] 
Boitet Ch. "Un essai de rgponse ~ quelques 
questions th~oriques et pratiques li~es ~ la 
traduction automatique". Dgfinition d'un 
syst~me prototype. (Th~se Docteur 
Es-Sciences Math~matiques - Avril \]976). 
\[ io\]  
Boitet Ch. "Probl~mes actuels en traduction 
automatique : un essai de r~ponse". 
(COLING 76 - OTTAWA 1976). 
\ [ \ ] \ ] \ ]  
\[12\] 
Boitet Ch. "Mechanical Translation and the 
Problem of Understanding Natural Languages". 
(Table-Ronde IFIP - TORONTO - Ao~t 1977 et 
Colloque Franco-Sovi~tique MOSCOU 1977). 
Boitet Ch. "Extension de ROBRA et utilisa- 
tion de l'environnement de contr$1e inte- 
ractif g l'ex~cution", Mars 1979. 
Boitet Ch. "Automatic Production of CF and 
CS Analyzers using a General Tree-Transducer". 
(2. Internationales Kolloquium ~ber Maschi- 
helle Uebersetzung, Lexikographie und 
Analyse, - SAARBRUCKEN - 16-\]7/11/1979). 
November 1979. 
Boitet Ch. - Guillaume P.- Qu~zel-Ambrurmz M. 
"Manipulation d'arborescences et parall~- 
lisme : le syst~me ROBRA". 
(COLING 78 - BERGEN 1978). 
Chauch6 J. "Transducteurs et arborescences". 
Etudes et r~alisations de systgmes appli- 
qu~es aux grammaires transformationnelles". 
(Th&se Docteur Es-Sciences Math6matiques - 
D~cembre 1974). 
Chauch6 J. "PrEsentation du syst~me C.E.T.A." 
(G.3\]OO.A - Janvier 1975). 
Chauch~ J.-Guillaume P.-Qu6zel-Ambrunaz M. 
"Le systgme A.T.E.F\]' (Analyse des Textes en 
Etats-Finis). (G.26OO.A - Octobre 1972). 
Communication groupie. "O0 en est le GETA 
d6but 1977". (also available in English and 
German). (Colloque : Franchir la barri&re 
linguistique : LUXEMBOURG - Mai 1977). 
Guillaume P. "Le module de transformations 
d'arbres : ROBRA". (PrEsentation des carac- 
t6ristiques externes de la grammaire com- 
pl6tant celles du mod&le C.E.T.A.). 
(G.3200.A - Mars \]978). 
\[13\] 
\[14\] 
\[15\] 
\[16\] 
\[17\] 
\[18\] 
\[19\] 
\[20\] 
\[21\] 
\[22\] 
\[23\] 
Jaeger D, "SYGMOR". (SYst~me de Ggngration 
MORphologique). (G.3300.A - Mars 1978). 
Jaeger D. "SYGMOR". Nouvelle version. 
Ex6cuteur en Assembleur 360. Avril \]979. 
Ngdobejkine N. "Niveaux d'interpr6tation 
dans une traduction multil ingue : applica- 
tion g l'analyse du russe". (COLING 76 - 
OTTAWA 1976). 
N6dobejkine N. "Application du systgme 
A.T.E.F. h l'analyse morphologique de 
textes russes". (International Conference 
on Computational Linguistics - PISA \]973). 
Qu6zel-Ambrunaz M. "ARIANE. Syst~me inte- 
ractif pour la traduction automatique mul- 
tilingue". (Version II). 
(G.34OO.A - Mars 1978). 
Qu6zel-Ambrunaz M. "Transfert en ARIANE-78. 
Le module TRANSF". Novembre 1979. 
Qu6zel-Ambrunaz M. - GUILLAUME P. "Analyse 
automatique de textes par un systgme 
d'~tats-finis". (International Conference 
on Computational Linguistics - PISA 1973). 
Thouin B. "Syst~me informatique pour la 
g~nEration morphologique de langues natu- 
relles en ~tats-finis". 
(COLING 76 - OTTAWA \]976). 
Vauquois B. "La traduction automatique 
Grenoble". Dunod - 1975 - Documents de 
Linguistique Quantitative n ? 24. 
(en librairie). 
Vauquois B. "Automatic Translation. A 
survey of Different Approaches". 
(COLING 76 - OTTAWA \]976), 
Vauquois B. "L'~volution des logiciels et 
des modules linguistiques pour la traduc- 
tion automatique". (Colloque Franco- 
Sovi6tique - MOSCOU - Dgcembre \]977). 
--446 
