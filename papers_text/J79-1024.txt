American Journal of Computational Linguistics M i  crof i che 2 4 
T H E  S Q A P  D A T A  B A S E  
F O R  
N A T U R A L  L A N G U A G E  I N F O R 8 M A T I O N  
Jacob Palme 
Research Institute of National Defense 
Operatians Research Center 
Stockholm 80, Sweden 
Copytight  J975 by the Association fqr Computat ional  L i n g u i s t i c s  
ABSTRACT 
The Swedish Question Answering Pro j ect (SQAP) aims at 
handli~g many digferent kinds of facts, and nat only facts in a 
small dpecial application area. The SQAP data base consists of 
a network of nodes correspdnding to objects, properties, and 
events in the real.world. Deduction can be performed, and deduc- 
tion rules can be input i n  natural language and stored in the 
data base. 
This report describes the data base, specially focusing on 
problems in its desbn ,  both problems which have been solved and 
problems which are not yet solved. 
Specially full treatment is given to the data base repre- 
sentation df natural language noun phrases, and to the represen- 
Gation of deduction fules in the data base in the ? o m  D? data 
base "patterns" 
SWEDISH ABSTRACT 
SQAP-projektet (Swedish Question Answering Project  = 
Svenska projektet fur fragebesvarande system) syftar till att 
kunna hantera mllnga olika slags fakta i datorn, inte bara fakta 
inom ett litet speciellt t i l lhpningsomr8de.  Databasen bestar 
av e t t  dtwrk av noder som svarar mot obj ekt , egenskape~ och 
htlndelser i verkligheten. Slutsatsdragning kan garas, och- 
slutsatsdragningsregler kan ges i naturligt sprdk och lagras 
i databasen. 
Denna r appor t  beskriver databasen, med specie11 tonvikt pa 
problem vid dess konstruktion, bade sadana problem som vi lest 
och sddana som vi Hnnu inte lust. 
Speciellt utrforligt behandlas representation av substanti'v- 
kon.strukt3oner i databasen, samt hur slutsatsregler kan repre- 
senterqs soh monster i databasen. 
FOAP rapport C 8376-M3CE5), Septemer 1973, revised July 1975. 
Contents : Page 
Introduction 
Natural language representat ion 
Introduction %o ou r  data base 
ObJects, events and predicates 
Quantifiers on the  s h o r t  r e l a t i o n  
Deduction i n  the  data  base 
Variables 
Keys 
Dummies 
Questions 
Example of what our system can d o  
The EQUAL r e l a t l o n  
Natural ldnguage noun phrases 
At t r ibutes  on noun phrases 
Composite objects  
Conjunct ions between noun phrases in the 
general s ens e 
P lu ra l  nouns 
F i t t i n g  composite objects  i n t o  the sentence 
Noun phrases with jus t  a number and nothing 
more 
18, Some examples of t r ans la t ions  of sentences 
with plural nouns 
19, Problems with the  dual representat ion o f  
nouns 
20. Equality between composite objects  
21. Relations between predicates 
22. Event nodes 
23. Put t ing  restrictions on equal i ty  
23b. Quant i f ie rs  o r  event nodes 
24. Deduction pa t te rns  and na tura l  language 
if-clauses 
4 
25. Ques t l o n s  
26. DUMMIES = temporary variables for data 
base merging 
2 7 .  DU.;MMIES which r e f e r  t o  VABIABLES 
28. The problem q f  dual representatlob 
2 9 ,  What o u r  syatem can do and cannot do 
30. A short comparison with other systems 
31 Acknowledgements 
32.  B l b l l  ogra~hy 
3 3 .  Index 
5 
0. Introduction 
This paper describes the  na tura l  language da ta  base s t ruc tu re  
used i n  the  SQ,AP system    we dish Question Answering system). 
Much o f  t h a t  system i s  already working, but the  paper does 
not only describe the solut ions  t o  solved problems. D i f f i c u l t i e s  
and unsolved problems are a l so  presented, since I f e e l  t h i s  
i s  important t o  fu r the r  progress. 
One of the goals of the  SQAP projec t  was t o  c rea te  a question- 
answering system capable o f  handllng f a c t s  o f  many d i f f e ren t  
kinds. The system should thus not be r e s t r i c t e d  t o  a small 
special  application area. 
1. . Natural language representat ion 
There i s  an obvious need f o r  computers with a capabi l i ty  t o  
converse i n  na tura l  human languages. Natural lmguages are 
more general-purpose than most a r t i f i c i a l  languages, which 
means t h a t  you can t a l k  about a wider subject  a rea  i f  you use 
natura l  ldnguages. Natural languages can be used by everyone 
without specia l  t ra fn ing ,  s o  computers t a lk ing  na tu ra l  language 
can make more people able t o  use more d i f f e ren t  computer 
f a c i l i t i e s .  F inal ly ,  a r i z i n g  par t  o f  computer usage i n  the 
fu ture  will be unintelligent processing of na tura l  language 
t e x t s ,  and such systems can be improved i f  the processing is 
not wholly un in te l l igen t .  
There a r e  also  wellknown d i f f i c u l t i e s  with na tura l  languages 
f o r  computers. Natural language i s  c lose ly  connected t o  human 
knowledge. Therefore, na tura l  l a n e a g e  sentences can only be 
understood by a m m  o r  a computer with fac tua l  howledge about 
the subject  matter and with the a b i l i t y  t o  reason w,ith those 
fac t s .  To disambiguate such wellknown examples as 
"The p i g  was i n  the pentf (~ar- ille el 1964) o r  !!He went t o  the 
park with the girlu ( ~ c h a n k  1969) the  computer must have an 
underlying knowledge about various kinds of "pens" , about where 
"the girlw was previously and s o  On. 
6 
Also, the same thing can be sa id  i n  many d i f fe ren t  ways, and 
a computer with natural  language capabi l i t i es  must be able t o  
understand t h i s ,  s o  tha t  fo r  example it can see the s imi lar i ty  
between "Find the  mean income of unmarried women with a t  l e a s t  
two bhildren.lf and llSearch through -bhe personell f i l e .  For 
each individual who i s  a w o m a n ,  who i s  not married, and who 
has a number of children greater  -khan two,  accumulate income 
t o  calculate the  mean.11 
Theref ore, a computer undexst anding natural  language must 
have a data  base with basic fac tual  knowledge about the w o r l d  
i n  general or abouf the subject matter which the compvter i s  
t o  be used f o r .  
This data  base i s  needed t o  understand ambiguous sentences, 
but also t o  in te rpre t  the sentences in to  executable data  
processing commands. 
The requirements on such a data  base are : 
- You should be able t o  s to re  a wlde var ie ty  of d i f ferent  
kinds of  fac t s .  Natural languages are very general-purpose. 
s o  the data base should also be general-purpose. 
- You should be able t o  use this data  base t o  make deductions. 
The capabil i ty t o  do simple and natural  deductions f a s t  i s  
more important than the capabi l i ty  t o  make very a d v ~ c e d  and 
longdrange deductions. Since the data  base w i l l  be la rge ,  an 
impor t an t  p a r t  o f  deduction will be the select ion of the re- 
levant f a c t s  a ~ d  rules out o f  the large mass of facts not 
needed f o r  one special  deduction. 
The data  base can be .more o r  l e s s  close t o  natural  language. 
A data base c l o s e  t o  natural  language makes input t rans la t ion  
eas ie r ,  and also the l o s s  of nuances during the input t rans la t ion  
7 
w i l l  be smaller .  But the data  base must on the other hand have 
a logical  structure which i s  sui table  f o r  deduction knd fact 
searching. 
One model o f  natural  language knowledge i s  the following: The 
knowledge consists of "conceptst1 and of r u l e s  r e l a t i n g  these 
concepts t o  each other. A typical  concept might be " John1' , 
T r A l l  young menrf, ltThe event when John meets M a x y  i n  the pa.rkn 
o r  "The month of July, 1973". The concepts are re la ted  by 
ru les ,  which can be very simple re la t ions  ( l i k e  the re la t ion  
between "111 young ment1 and the property ffyoungn) or complex 
patterns of concepts ( ~ i k e  the ru le  "If Mary i s  weak and 
t i r e d ,  and she meets a strong b r u t a l  man, then she w i l l  be 
frightened.") These rules form a network l inking all concepts 
together. 
This model o f  natural  language i s  close t o  tha t  often used by 
psychologists i n  t ry ing t o  explain the working o f  the intel l igence 
i n  the human mind. 
fPhe SQAP system uses a data base of that kind. The model may at 
first seem simple and straightfbrwazd. When you try to produce 
a worldng question-a,nsw&ring system, you w i l l  however find that 
there a r e  many difficulties and complications with such a data 
base. Thia report presents the raBe,% wortant of the problems 
we have m e t ,  and in some cases also  our solut ions.  1 believe 
that o%her producer8 of natural language system w i l l  sooner 
or  later encounter the same problem, and they may then benefit 
from our experience as presented in this  paper. 
8 
2, Zntroduution t o  our data base, 
During the 1960:s, several researchers independently and simul- 
taneously came up with -&he same basio (idea of organizir@ such a 
data base - Sandewall 1965, Simmons 1971 , 'Shapiro 1971 . So6e of 
them were influenced by the caae gqanunar of Fillmore 196'8. 
The idea is that the data base is organized i n t o  nodes, each node 
represent ing  a  concept .  In na tmal  language,  t h e  prepositions 
a r e  used  to , r ep re sen t  s h o r t  s imple and d i r e c t  r e l a t i o n s  between 
concepts "John i s  - in t h e  bed",  "The fire w a s  lit & Marytt 
In  the d a t a  b a s e ,  t h e  i d e a  o f  p r e p o s i t i o n s  i s  extended so  
that all aimple a d  d i r e c t  r e l a t i o n s  between concepts  a r e  
r e p r e s e n t e d  by i m p l i c i t  p r e p o s i t i o n s .  ( ~ u s t  as you could say 
t h a t  t h e r e  i s  a a  i m p l i c i t  p r e p o s i t i o n  Itby" i n  t h e  phrase  "Mary 
lit the fire" .) 
Yore complex ru l e s  o r  r e l a t i o n s  between concepts are represented 
by ex t r a  concepts. Thus there i s  a concept f o r  the  event ItMary 
l i t  the f i re1 '  and t h i s  concept i s  r e l a t e d  t o  "Maryw, Itthe f l r e u  
and "act  of lightingv i n  a structure like that i n  f igu re  1. 
Acts of lighting, T CASE 
#Mary lit the fixe, 
)Mary) #The firer, 
Figure 1 
This s t ruc ture  has four  concepts l inked together by three 
"prepositiona,lIt relations : CASE, BY and OBJ. From now on, I 
will i n  this paper c a l l  such r e l a t i o n s  ltshort re la t ionsf1 .  
The data  base i s  organized so t h a t  t he  deduction r u l e s  can 
follow the  shor t  re lakions i n  both d i r ec t ions ,  that i s  go 
from "M+ryI1 t o  ItMary lit the f i r e t 1  o r  from "Ma,z?y l i t  the f ireff  
t o  "Mary". 
3 .  Objects, events m d  prdicates 
Noun phrases i n  natural language usual ly  r e f e r  t o  one o r  a 
s e t  of  objects i n  the  r e a l  world, l i k e  f~Stockholmll o r  " h r e r y  
house lin Swedent1 o r  "The nice m a n  with a bicycle1v. In our 
system each such concept i s  represented by a node i n  the  data 
10 
base ,  which could be c a l l e d  an ob jec t  node. 
Each o b j e c t  node i s  a s soc i a t ed  w i t h  one o r  more p r e d i c a t e  
nodes express ing  p r o p e r t i e s  of t h a t  objec t .  In  our data base, 
w e  mark p r e d i c a t e s  w i t h  the  p o s t f i x  ct*Pcr. Thus, t h e  phrase 
"An always happy g i r l "  would i n  our  data base be represented 
l i k e  in figure 2 :  
HAPPY-P GIRL-P 
))A happy girl)) 
A statement l i k e  "There is ad a l w a y s  happy g i r l r f  or "One g i r l  
1 s  always happy" w o u l d  be represented i n  t h e  same way, with an 
object node and t w o  s h o r t  r e l a t i o n 6  on ~t t o  t h e  t w o  predicates, 
ATTR to the a d j e c t i v a l  p r e d i c a t e ,  PRED t o  t h e  nominal p red ica t e .  
If w e  meet t h e  n a t u r a l  language phrase "One g i r l  i s  n i c e  
todaytT, then  we cannot r ep re sen t  i t  as simply. We have t o  
affix a t i m e  t o  the r e l a t i o n  between the  girl and HAFPY*Pcc. 
One way t o  do t h i s  would be t o  always have t h e  a b i l i t y  t o  add 
ertrs short relations to  existing sho r t  r e l a t i o n s ,  !Phis would 
require that short  r e l a t i ons  'are represented i n  the data base 
in a form where there is a place ta add a list o f  extra shos t  
relat ions,  and this would triple the size of the data base, 
Tnstead we have an expanded form o f  those s h o r t  r e l a t i o n s  t o  
which we want to add other relations, This expanded form xs 
only used when it i a  needed, the non-expanded form i s  used 
when there are no added shor t  r e l a t i o n s ,  The expanded form 
f o r  the PRED short re la t lon  is a node of  the type "eventtt. 
WOne girl is happy todayw will thus be repreaented like in 
figure 3. 
T CASE Figure 3 
))One girl is happy today)) 
The advantage of having such an e x t r a  concept i n  the  d a t a  
base i s  that we can ea s i l y  add more shor t  r e l a t i o n s  t o  t he  
event node llOne g i r l  i s  happy t o d q " ,  f o r  example t o  r ep re sen t  
"in the school" or "becautse of the weather" or "according t o  
w h a t  Tom said"  . 
Since we want t o  deal  with t r u e  statements,  hypothet ical  
statements and statements belonging to some person's b e l i e f  
s t r u c t u r e ,  we always add a r e l a t i o n  t o  an event node ind i -  
c a t i n g  which b e l i e f  s t ruc ture  i t  belongs t o ,  t r u e  events be- 
long t o  the s e t  "Tfl#3+Sf1 of all t r u e  statements.  Since the  
relation V A R T  TRUE*Sn is so common, we represent it in 
pictures with the earth sign of electric charts 1 A . 
-
.. 
The statement "John believes that Mary loves h i m "  would thus 
be represented like in figure 4t 
12 
))John believes that Mary loves him)) 
BELIEVE-P LOVE-P 
John believes that)) OB 1 ))...Mary loves himn 
Figure 4 
Note that there  i s  an ea r th  sign on the true event,  but no 
e a r t h  s i g n  on the event belonging t o  Johnrs b e l i e f  s t rucWre .  
Note t h a t  predica tes  and r e l a t i o n s  i n  na tura l  language a re  
o f ten  not represented d i r e c t l y  as short r e l a t l o n g  i n  our 
d a t a  base. !'John i s  the f a t h e r  of Angelica" i s  thus not rep- 
resented by a shor t  r e l a t i o n  "FATHER" from "Johnv t o  "Angelicav 
but ra ther  with an event node like i n  f igure 54 
FA ER-P r'lm 
Figure 5 %John is the father of Angelican 
4 &  Quantifiers on the s h o r t  re1at:ors. 
Every n o d e  i n  o u r  data base can stand f o r  a s e t  of o b j e c t s  
instead of f o r  just a single o b j b c t .  Thus we can represent 
" A 1 1  n ice  girlsv w i t h  a node represent ing the  s e t  of a l l  nice 
girls . 
This means that we need quantifiers on the shor t  r e l a t i o n s ,  
t o  be able t o  express re la t ionsh ips  between sets .  
Tf there is a short re la t ion  R between two s e t s  A and B, 
then the relamtion R might not  be t rue  between any member of 
A and any member of B. We have several cases: 
!Fhese and 0 t h ~  cases axe represented in our data base 
with three qu.an,tifiers ALL, SOME and ITS, The difference 
belmeen SOME and 12% is shown by the difference between Ucle 
second w d  the th i rd  example. One quantifier is placed on 
each end of the re l&t ion,  The four  examples above will thus 
in our data base look 1;ike this r 
A) (ALL A, R, ALL B) 
iv) (SOME A, R,*ITS B) 
14 
The difference between ITS and SOME can be understood if you look 
at t h e  statement 'Wvery man i s  i n  a ca rv  Th i s  can mean that 
ffEvery m a n  Is i f ls ide  one single car" o r  i t  can mean ! 'For e v e r y  
m a n  there  i s  one car i n  which he i s .  The f i r s t  ph~ase might 
i n  our data base be represented  as 
'%very m a n M  ALL I N  SOME 
while the second might be represented as 
"Every m a n u  ALL IN IT 
T h e ~ e  are simple r u l e s  t o  mmipulate. the quantifiers when the 
deduct ion Pules chain f r o m  node t o  n o d e  in the  data base. 
T h i s  i s  descr ibed  i n  Sandewall 1969. 
In %he following, if no quantifier is marked on a shor t  re la t ion  
in a figure, then ALL is i m p l i c i t .  
15 
5 ,  Deduction in the data base 
The  data base does n o t  contain a l l  t r u e  statements explicitly, 
some of %hem have t o  be deduced when needed, Basically all 
deduction rules can be seen as p a t t e r n  matching, You haue a 
pattern swing for example t ha t  Vf somethipg h o t  is near 
something inflammable then the irnflammable will catch f i r e " .  
Then we h'ave sbme actual situation, explicit o r  deduced, e.g. 
"The burnine cigaret te  is thrown i n  the p e t r o l  t ankn .  In our 
data base, as in figure 6 .  
NEAR-P 
CASE 
BY 
n ~ f  something hot is near something inflammable, 
then the irnflammable will catch fire}) 
,something inflammable, 
THROW-P 
CASE 
INTO > f l h e  burning cigarette 
rthe petrol tank, is thrown into the 
petrol tankn 
OBJ 
 the cigarette)) 
1, 6 
Before using t he  deduction r u l e ,  we must match the pattern to 
t h e  actual s i tua t ion .  The p-at tern can contain many inter- 
connected r i d e s ,  and t h e  reality may not at first resemble 
the p a t t e r n  directly, deduction may be necessary to see the 
resemblance. 
The simplest deduction ru le  possible i s  just a p a t t e r n  o f  
t w o  sho r t  r e l a t i ons  from ,which a third can  be deduced: "If 
A R1 B and B R2 C then A R3 C", a simple example: "If A is 
subset of B ,  and B is subset of C, then A is subset of Ctf. 
Since such rules l i n k  toge ther  nodes through a chain o f  sho r t  
r e l a t i o n s ,  they are c a l l e d  chaining rules. Spme chaining rules 
require side r e l a t i o n s  on B to the fullfilled, for example 
"A BY B, and A CASE C implies B R E D  CI1, but only if A is a 
true event. 
This is described in Sandewall 1969 and in Makila 1972. 
6 .  Variables  
The simplest kind of deduction pattern involves just one node. 
Such a node i s  calleC a var iab le ,  F o r  example, VARIABLES are 
use& in  the translation of 'Wery intelligent man is a bad 
so ld ierv  which is represented l i k e  in f igure 7; 
INTELLIGENT-P MAN-P TtE TTED DEF BAD-P T ATTR DEF DEF 
,Every intelligent mann < ALL EQUAL IT #Every bad soldier)) 
sEvety intelligent man is a bad sol diem 
17 
Y.a.riables have a new quan t i f i e r  on them, DEF. This indicates 
that this s h o r t  r e l a t i o n  i s  p a r t  o f  the def in i t ion  of  t h a t  
variable. The var iable  '%very i n t e l l i g e n t  m a n t t  above corresponds 
t o  the s e t  of all objects  which s a t i s f y  the def in i t ion .  T h i s  
means that  ad soon as w e  f i n d  an object i n  t he  da ta  base f o r  
which we know o r  can deduce that  i t  s a t i s f i e s  the  d e f i n i t i o n ,  
t h e n  we know that it be longs  t o  the VARIABLE Above, and w e  
can thus deduce tha t  i t  i s  a bad soldier .  
7. Keys 
Sometimes the deduction requires a p a t t e r n  of  more than one 
node,  Such patterns are  c a l l e d  keys, The sentence "If a 
motorboat meets a sa i l ingboat ,  then the m o t o r b o a t  must s t e e r  
away from the  sai l ingboatn w i l l  i n  our data base be represented 
like in f igure  8. 
MOTORBOAT-P 
>steer away)) 
na motorboat, 
A T H A T  
MgF- - 
- 1  DEF 
THAT IFTHEN DEF 
FROM / THAT 
I DEF PRED \L S AILINGBOAT-P 
Figure 8 
nIf a motorboat meets a sailingboat, 
then the motorboat mdst steer away 
from tke sailingboatn 
18 
To the  left is the  pattern o f  th ree  nodes corinected by sholit 
relations w i k h  DEF on b o t h  ends o f  the r e l a t i ons .  This  shows 
t h a t  they are part of a key. To the r igh t  is the deduced 
statement, connected t o  the center  of the  key with an IFTHm 
shor t  re la t ion .  Note t h a t  there  i s  a new quantifier THAT above. 
This quantifier means that we should single out just that 
actual  object which was matched t o  t h a t  p a r t  of the key. We 
do not want t o  say t ha t  "Every motorboat meeting a sailingboat 
must s t e e r  away from every sai l ingboat  being met by a m o t o r -  
boa tv ,  and therefore w e  must s ingle  out the matched object only. 
Natural language sentences often refer t o  previously mentioned 
ent i t i e s  with conetructa l ike  "hew or old  mann. O u r  
system w & l l  first translate a sentence into an independent 
data base f r w e n t .  An assimilation program w i l l  then merge 
t h i s  fragment with the data base. O t h e r  systems of ten  m&e 
%his assimilation during the input t rans la t ion .  They mould 
then avoid some, but not all, of our problems, but would 
get  some other problems instead. 
For this merging we create temporary variables and keys 
during input translation. The sentence "The m a n  always with the 
gun is in the forestw is thus t rans la ted  i n t o  figure 9: 
nThe man with the gun is in the forestr 
GUN-P MAN-P 
T PRED DEF 
FOREST-P 
PRED 
DEF 
DEF WITH DEF 'IN 
>the gunL >>the man )) ' ., )>the forest)) 
19 
The merging program w i l l  use spec ia l  deduction rules f o r  these  
temporary var iables ,  which we call DUMMIES. After merging, the  
D ~ ~ I E S  usually merge with some previous node i n  the data base, 
and they thus become CONSTANTS o r  VARIABLES depending on t h e  
type of  that previous node. 
9. Questions 
Questions to a computer can  require short  o r  l o n g  answers. 
There are for example yes-no questions like rtIs  a man with a 
balooh coming?" which in our data  base will be represented 
l i k e  in f igure  10. 
BALO0N.P MAN-P 
PRED 
DEF 
HIS a man wtth a baloon coming? n 
ITS WITH DEF 
na bbaloom < COME-P 
where we put a question-mark on one-relation t o  show that 
the  program s h a l l  try t o  &educe tha t  relation from the prevjious 
howledge. 
Other questions requiw as answer a l i s t  of o b j e c t s ,  f o r  
example "Which o f  you can dr ive  a carn  or a description o f  
a deduction chain ('%@yt1 o r  a description o f  an 
algorithm (tvhowu questions). We have-not ye t  t r i e d  to represent  
such questions in our data base structure. 
20 
10, Example o f  what our system can do 
T h i s  exmple shows a s e t  of f a c t s  and questions, such tha t  
our system can answer t h e  questions based on the f a c t s .  
The input language to our system is not f u l l  natural english. 
the language is slightly simplified. me sentences in the 
example are mitten in this simplified englieh, 
A g i r l  i s  a young woman,  A boy i s  a young man, A woman i s  a 
human female. A m a n  i s  a-human m a l e .  Every young man i s  a boy. 
Every s p o r t s  cax i s  fast and expensive . Every fast  car i s  
dangerous. Anybody - with an expensive oar i s  r i ch ,  Every 
rich woman is frigh-bened by every poor nan, 
If a woman i s  meeting a man and she i s  fsightened by him but 
she i s  loved by him, then she w i l l  be despising him. If a man 
i s  loving a woman and she i s  despising him, then he i s  depressed.  
If a man i s  depressed and he i s  driving a ca r ,  then he i s  
senseless and i r r a t iona l .  If a senseless man is drkving a 
dangerous car,  then he is dangerous, and all t r a f f i c  i s  in 
deadly pe r i l .  
Everyone - on a public s t r e e t  i s  txa f f i c ,  
M a z y  is a mature girl, - with a sports  tax, Eliza i s  a pretty 
girl - with l o n g  hair.  The mature g i r l  is ugly. 
I$ the ugly arl, rich? 
John is a man, H e  i s  young and poor. He  i s  loving every fast 
car and every girl - w i t h  a fast car. 
1s the pre t ty  g i r l  loved by John? Is the r i c h  and ugly g i r l  
loved by; John? 
If E l i z a  had been a g i r l  - nith a f a s t  car,  then would she 
be loved by John? 
Mary i s  meeting John and he i s  driving her  ca r .  Is the  poor 
boy, dangerous? 
I I . The EQUAL r e l a t i o n s  
The Q U A L  re la t ion  between h o  singular elements means tlzt they 
me identical, However, s inoe  we can pu t  quantifiers on the 
E&UAL re la t ion,  we can alsa. use it for many s e t  relationships, 
Some exmaples: 
ALL A QUAC ALL B means tha t  the se ts  A and B me equal and 
contain not more than one element each. 
ITS A EQUAL ALL B means t h a t  A i s  a subset  of B. 
ITS A EQUAL ITS B means t h a t  A and B overlap. 
ALL A NOT EQUAL ALL B means t h a t  A and B a.re d i s j o i n t .  
StNE A EQUAL ALL A means t h a t  A i s  not  empty. 
ALL A NOT EQUAL ALL A means tha t  A i s  empty. 
SOME A EQUAL ALL A means t h a t  A i s  s ingu la r ,  that i s  contains 
exactly one member. 
Natural language noun phrases are  t r a n s l a t e d  i n t o  nodes marked 
as singular i n  t he  da ta  base,  i f :  
a) The noun phrase i s  not  p lu ra l .  
b )  The noun phrase i s  not t r a n s l a t e d  i n t o  a VARIABLE i n  the  
d a t a  base. 
c )  The noun phrase i s  in terprekea  i n  t he  special  sense ( l i k e  
"A m a n  i s  walking on the  s t r e e t u )  and not  i n  t he  genera l  
sense (like ~ h r e r y  man i s  a-male humanll). 
Data base nodes are marked as non-empty i f  they are of  the  
type predica tes  (like "the act o f  l ight ingT1 which w e  call LIGHT*P) . 
22 
12. Na%wal lan~uane noun phrases 
mere are many data base construata which correspond t o  natural 
language noun phrases. Noun phrases create many problems with 
their attributes, with composite objects which have several 
parts a.8.o. A number of chapters w i l l  discuss problem~l with 
representing that kind of facts. The necessary data base 
concepts are discussed, rather than the translation problems. 
Singulm noun phraaes without con Junctions a re  usually t r ans la ted  
i n t o  one object-type node, A n  exception t o  t h i s  i s  some simple 
sentences i n  which noun-phrases are t r ans la ted  t o  predicate-type 
nodes, see chapter 21. 
This object-type node can be a CONSTUT, a DUMMY o r  a VARIABLE. 
CONSTANTS are created f o r  simple pos i t ive  sentences l i k e  I1A 
m a n  i s  walking on a s t r e e t m t f  Note however, t h a t  i n  an i f - s t a t e -  
ment or  a, quest ion,  the  noun-phrases ins tead must be i n t e r -  
preted as VARIABGEs, e . g .  "If a man i s  walking on a s t r e e t ,  
then, .  o r  I f I s  a man wdking  on a s t r ee t?" .  In  these cases,  
"at mault1 does not  introduce a new conrjtant , but represents  a 
simple search pa t t e rn  t o  be used i n  deduction, and VARIABLES 
a r e  used f o r  such search pa t te rns  i n  our da ta  base system. 
For general-sense statements,  the  nonians are  usua l ly  t rans la ted  
t o  VARIABLES. Example: W v e r y  good g i r l  w i l l  k i s s  every brave 
soldier ."  These VARIABLES can be used i n  l a t e r  deduction, t o  
f i n d  out  what happens if a good g i r l  meets a brave soldier .  
Noun-phrases beginning with "them o r  "thid" o r  "thatf1 o r  some 
s imi la r  determiner are usual ly  t r ans la ted  t o  DUMMIES. Here a 
search must be made i n  the  da t a  base f o r  some previously known 
node t o  merge the  DUMMY with, 
Pronouns l i k e  "hen o r  l 1 i t V  o r  I1hertt are  a l s o  t r ans la ted  i n t o  
DUMMIES, f o r  t he  same reason. 
The noun word i-bself ind ica tes  a proper ty  of t h a t  noun (e.g. 
?tmmvf i nd ica tes  the sex and species  of "a manvv). A predicate  
W * F  i s  therefore  c rea ted ,  and 'la m a n n  ge t s  a r e l a t i o n  ?RED 
.t,o MAN*P 
Adjectives do nbt  always ind ica te  proper t ies  which a r e  general ly 
t r u e  f o r  the  noun phrase. They can mean m a n y  th ings  Examples: 
The good teacher ex he teacher which i s  good as a t e ache r ) ,  
The b ig  a n t  ex he ant which i s  b i g  f o r  an ant) ,  
The red house ex he house which i s  red). 
Therefore, a weaker r e l a t i o n  ATTR i s  used from a noun t o  i t s  
adject ives.  
Names are  a v e r y  spec ia l  kind of psedicates ,  ,and therefore  
a specia l  r e l a t i o n  NARlE goes from a  noun node t o  i t s  name. 
When a  name such as r f J ~ h n r l  o r  tfCambridgev i s  used, w e  want 
t o  iden t i fy  t h i s  with some previously know rfJohnv o r  lrCambridgeff 
Ln the  data base, But we cannot give the  node i t s e l f  the  name 
"Johnn o r  trCa;mbridge", s ince t he r e  m a y  be more than one "Johnv 
and lfCambridge" i n  the  d a t a  base, Therefore, the  last-mentioned 
which f i t s  %he descr ip t ion  i s  found, jus t  as  f o r  other  DUMMIES, 
"The always O l d  Johnf1 w i l l  t h e ~ e f  ore f o r  example i n  our data 
base be translated i n t o  the  DUMMY i n  f igure  2 1 .  
JOHN-P 
*The always O l d  John* 
Figure I 1 
24 
We have a spec ia l  r u l e  f o r  VARIABLES with bnly one PRED as a 
de f in i t i on ,  where t h i s  PRED goes t o  a predicate whose name 
comes from the  input sentence. This var iab le  ge t s  the  same 
name, but with l f *Sw i n  the end. Thus, "Every manu i s  t~?ans la ted  
t o  W * S  h-9 W * P  
This spec ia l  r u l e  i s  not r e a l l y  necessary, but has two advantages: 
a) The da ta  base becomes more ~ e a d a b l e ,  
b)  The da ta  base rout ines  will immediately see t h a t  a l l  W * S  
nodes created by several  d i f fe ren t  sentences can be merged 
i n t o  one, without having t o  do any deduction. 
You could sw tha t  W * P  i s  the property of being a man, 
while M.AN*S i s  the  s e t  of all men. 
12b. At t r ibutes  on noun phrases 
This s ec t i on  describes things which a r e  not ye t  implemented 
i n  the  SQAP program when t h i s  i s  wr i t ten  (May 1974) 
For severa l  reasons, attributes on a noun phrase cannot always 
be represented by a d i r ec t  r e l a t i o n  from the noun phrase t o  
the a t t r i b u t e .  
Sometimes two o r  more a t t r i b u t e s  on a noun phrase a r e  re la ted.  
I f  you say ?.riend of Nixonn then t h i s  person i s  n o t  always 
a f r i end  (he may not be a f r iend of ~ c ~ o v e r n )  and he is not 
always "of Nixon" (he may not be "a son of N,ixonv although he 
i s  sure ly  a son). If we represented the  two a t t r i b u t e s  tha t  
he is  a f r i end  and t h a t  he i s  "of Nixon" as two separate 
independent re la t . ions  on h i s  object node, then the  data base 
deduction rules  would not properly understand sentences l i k e  
"A f r i end  of Nixon is an  enemy of McGovernff. The deduction 
25 
rules would wrongly deduce t h a t  since t h i s  object  independently 
has the  a t t r i b u t e  of being a f r i end  and t he  a t t r i b u t e  of  being 
"of McGovernI1, the  object  i s  a f r i end  o f  McGovern. 
To avoid t h i s  erroneous conclusion we must have only one 
s ingle  outgoing relation f r o m  the  object  t o  t h e  composite 
property of being "a f r i e n d  of Nixon". The statement "A friend 
of Nixon is an enemy of  McGovernV might thus be represented 
like i n  fkgure I 1  b 
FRIEND-R ENEMY-P 
HA friend of Nixonu SUBSET ) enemy of McGovernr 
where t w o  new ttevenktt nodes are introduced f o r  being a f r i end  
of Nixon and being an enemy o f  McGovern. It seems as i f  only 
the preposition "off1 and no o ther  prepos i t ion  i n  engl ish c rea tes  
t h i s  problem. 
The s a m e  klnd of r e p r e s e n t a t i o n  can be used t o  c o r r e c t l y  
represent  a statement l i k e  "A big ant is a s m a l l  animaltt ,  
see figure llc. 
BIG-P ANT-P SMALL-P. ANIWI 
$ DEF $VBSP"T 
nA big antr > %A small anirndn 
Figure I l c  
Another reason why attributes cannot always be represented 
as direct relations on the noun i s  t h a t  t h e  a t t r i b u t e  may be 
restricted in time or space o r  i n  some other way. If w e  input 
the noun phrase "A hungm g i r l u  then the mmputer creates an 
object for this girl. But we may thereafter learn t h a t  the 
g i r l  eats and i s  not hungry any more. Thus t h e  same object, 
a t  a l a t e r  time, does not any more have the a t t r i b u t e  of being 
hungry. Here again, we must in-kroduce an EVENT pode for the 
fact that the girl is hungry as shown in figwre l l d .  
HUNGRY-P 
AT-TIME 
..**a GIRL-P 
figure 'lld 
27 
In most. cases, the same time-restriction appliels  t o  attributes 
as t o  the main verb in the sentence. If we say "A h u n g q  g i r l  
ate a c o l d  buf fe t  in a sundrenched meadow on a w a r m  summer 
dayw then the  time and space r e s t r i c t i a n s  a r e  valid for all 
the attributes on the vqrlous nouns in Che sentence. In such 
m e s ,  the  data base cou1.d be simplified if we introduced a 
special "situationv node t o  represent the  time and space, 
and then used a new s h m t  relation SIT from the  various event  
nodes t o  this situation, This would be even moxe useful if a 
series of  sentences all apply t o  the same situation. 
Prepositional attributes m y  also be situation r e s t r i c t e d  as 
for tHe sentence "An angly man with a @;lln is coming at ten 
olclockvT,  where the man at another time may not be "with a 
-nu. This might be represented  as shown in f igu re  I le.  
ANGRY -P MAN-P 
%Being an angry m WITH 
t 
pa gunw 
(The situation-restricted event) 
figure l l e  
28 
If the  computer is  t o l d  that "Every english s p i n s t e r  who 
comes i n t o  the church i s  awed1' then the computer can deduce 
that Eliza i s  awed if it knows tha t  Eliza is english, is a 
spinster, and i s  cornin$ i n t o  the church, all a t  the  same time. 
13ut i f  E l i z a  was an english s p i n s t e r  f i v e  years ago,  and 
comes into the church today, then we cannot make t h l s  deduction. 
T h i s  can be solved in two ways. El ther  the  data base represen- 
tation of  "Every english sp ins t e r  who comes i n t o  the church 
i s  awed" i s  changedinto "If at  a c e r t a i n  time, an english 
spinster comes i n t o  the  church, then she i s  awed" o r  else the 
deduction rules a r e  changed s o  t h a t  the time-limitat:ions are 
imp l i c i t l y  carried a l o n g  and combined during deduction. 
13. Composite objects  
There is a need t o  describe the  f a c t  t h a t  objects  can be par t s  
of other  0bjec . t~ .  We , therefore introduce the  node type com- 
posite object.  A composite object consis ts  of a known o r  un- 
h o w n  number o f  elements, which may o r  m a y  not be similar. 
If we know which the  elements o f  a composite object  are ,  then 
we use the  ELENIENT shor t  r e l a t i o n  from the composite t o  one 
o r  more of i t s  par t s .  
Example: Vohn and Mary are married." would be t rans la ted  i n t e  
f igure  12. 
JOHN-P MARY -P 
NAME 
DEF 
MARRIED-P 
PRED 
>John and Mary are married, 
One might suggest that conjunctions between noun phr&ses are 
translated as two sepasate indenpendent o b j e c t  nodes, "John 
and M a z y  axe married" w6uld thus be $ranslated in the same 
w~ a,s !'Johq is married and Mary i s  ma,rriedw . However, t h i s  
i s  &v%ously not  the same thing. Sometimes the difference i s  
perhaps not there, f o x  example when we say  "John and Nary  a r e  
humanv'. But the aafest way is t o  create a composite object. 
This of course requires deduction r u l e s  to decide when a pro- 
perty on a composite can be transferred t o  i t s  elementary parts. 
T M s  can almost a l w a y s  be done, but not i n  some oases ,  fo r  
example if we say ''John and Mary t-ogether are heavier than 
Peter." But in such cases hhere is usually some indication in 
natural language, like the word "togetherv indicat ing tha t  
the property of the composite cannot be transferred t o  i t s  
elements, 
Look again at the picture above showing the t r ans la t ion  of 
"John and M a z y  are married." 
30 
ALL -the fiodes with DEF on %hem above m e  DUMMIES, This m e a n s  
that we first search for a previous-mentioned node with a 
flWAME: JOHN*Pw r e l a t i o n  on it. If one i s  found,  lr Johnf1  w i l l  
merge w i t h  i t ,  otherwise "JohnI1 w i l l  become a new constant 
and the DEF i s  changed t o  ALL. The same th ing  i s  done f o r  ItMaryl' 
Thereafter, when klJc)hnw and "Mary1' have been found i n  t h e  data 
base, we te t o  i den t i fy  TfJohn and Maryff, that i s  t o  find in 
the aata base at node whose t w o  elementary pa r t s  are just 
'1 Johnt1 and "Maryw, I f  such a node i s  found, Vohn and Maryv 
will merge w i t h  it, ,  otherwise "John and Maryq1 becomes a new 
constant and the DEF quant i f i e r s  a r e  ohanged t o  ALL. 
T h i s  process ensures t h a t  if we f i r s t  say IIJohn and Mary are 
rnazriedoFr and then say "John and Mary are going to separate.lf 
then the  two statements will r e f e r  t o  the  same d a t a  base node 
"John and Maryu f o r  both sentences, 
There i s  a r i s k ,  however, i f  we s a y  "John and M a r y -  and t h e i r  
son m e  a and then s a y  "John and M a r y .  are going t o  
London." Then the  da ta  base might wrongly iden t i fy  llJohn and 
M a r y w  i n  the  second sentence with the composite llJohn and 
Mary and *t;heiw sonv1 i n  the  f irst  sentence, and thus wrongly 
conclude that the son i s  coming along t o  London. To stop t h i s ,  
we might require  that i f  there  are ELEMENT r e l a t i o n s  on a 
node, these must poin t  out all the  elements, and not some o f  
them. Thus the  data base would h o w  that llJohnqf and llMaryll 
axe the only elements of the composite "John and M a r y q 1 ,  and 
therefore  cannot I d e n t i f y  t h i s  with l1Sohn and Mary and t h e i r  
sont1 . 
The data base a l so  ought t o  have a deduction rule which auto- 
matical ly  can conc'lude that theye i s  a PART r e l a t i o n  between 
two composites, if all elements of the f irst  composite are 
also  elements o f  t he  second, 
3 1 
14. Conjunctions between noun phrases i n  the generdl sense 
In the previous chapter I pointed out the ambiguity between 
sentences l'ike "John and Mary are married" and "John and M a s y  
are humann where the first sentence says that the composite 
was nsrr ied,  while the second said  t ha t  the elements indi- 
vidually were humans. I a lso  said tha t  such sentences could 
always be translated t o  composites, since properties of 
composites can i n  general be trasferred by deduction t o  the 
elementaq parts.  
This is not so easy in the general sense, see the following 
examples : 
"A11 men and women are getting married." 
"All men and women, a.re happy. 
"Every man and woman standing together are a maxried couple." 
l l A l l  men and women are young people." 
Noun phrases i n  the general sense m e  t rans la ted  i n t o  VARIABLES 
i n  the data base, and these VARIABIiES are later used during 
deduction. In most  o f  the sentences above, the best translation 
is t o  create am indiv idual  variable f o r  each element, but no 
variable f o r  my composite. If we s a y  " A l l  men and women are 
happyu what we mean i s  "Create a VARIABLE containing all men, 
and another VARIABLE containing all women, and put the  pro-  
perty of being happy on all members o f  both var iables .  " We 
do certainly not m e a n  "Create a VARIABLE of man-human couples, 
and put the proper ty  of being happy on a l l  such  couple^.^^ 
In the general sense, conjuncted nouns m e  therefore not 
combined ihto comwsite objects. An exception i s  when there  
i s  some special indication t h a t  such a combination i s  wanted, 
like the word lltogetherlv i n  the third example sentence above. 
32 
15. Plural  nouns 
Plural  nouns do not simply i n d i c a t e  a s e t  o f  s ingu la r  ob jec t s ,  
There aze a l so  p rope r t i e s  which belong t o  the composite of 
all t h e  elements together .  One of these  i s  t h e  property of 
b e ~ n g ~ l u r d ,  t h a t  i s  of having m o r e  than one element. I f  w e  
say "Two horses  a re  running;", then each horse i s  not  p l u r a l ,  
neither i s  each horse two, i t  i s  the  composite which has 
these  two proper t ies .  
Plural nouns  must theyefore o f t en  be translated i n t o  composite 
ob jec t s  i n  t h e  d a t a  base, s ince  r e l a t i o n s  on s e t s  in  our data 
base a lway-s  refer t o  the lndivjdual members of the s e t ,  not 
t o  t h e  s e t  as a whole. 
A n  excep-[;ion from t h i s  ru l e  i s  phrases i n  t he  general  sense 
' l i ke  "A11 men a r e  male humanstt. Rere the  p l u r a l i t y  is of 
l i t t l e  importance, and no composite object  i s  c rea ted  at 51- 
put t r ans l a t ion .  
Therefore,  when a p l u r a l  r e f e r s  t o  all objects  with a c e r t a i n  
proper ty ,  then a v a r i a b l e  i s  c rea t ed ,  but when the  plural noun 
phrase r e f e r s  t o  some spec ia l  c o l l e c t i o n  o f  o b j e c t s ,  then a 
composite objec t  i s  created.  
W e  introduce t h e  new r e l a t i o n  NTlM which goes f r o m  a composite 
ob jec t  t o  t he  numeral of it. W e  a l s o  introduce t h e  r e l a t i o n  
COMPLW w h i c h  goes from a composite object  t o  a predicate  
which appl ies  no t  necessar i ly  t o  the  composite, but which 
appl ies  t o  all i t s  elements. Examples i n  figure 13, 
HORSE-P 
COMPLEX I' 
1 HORSE-P 
))Some horses)) 
Figure 13 
T h i s  means that the data base must be able t o  make deductions 
on numbers, e,g,  t o  deduct that i f  a composite has the r e l a t i on  
NUM 2, then the re la t ion  NOT NUM 1 can be deduced. This i s  
necessary e .g .  t o  merge these sentences i n t o  the  da ta  base 
in a correct way:  
IVTwo horses a e  coming. One o f  the _horses i s  sick." 
To identify Ifthe horsest1 Ln the  second sentence w i t h  "two 
horsesv i n  the  f i rs t  sentence, deduction must i n f e r  NOT NUM I 
from NTTM 2. 
There m a y  a l s o  Be a need t o  have i n  the da ta  base management 
a routine for counting the number of elementary p a r t s  o f  a 
composite, so t h a t  the NTTM numeral can be deduced i f  a l l  pa r t s  
a r e  known. 
16. Fitting composite objec ts  i n to  the  sentence 
The gener@ rule i s  t ha t  when two conjuncted nouns have been 
t ransla ted i n t o  a composite object ,  then i t  i s  t h i s  composite 
objects and not i t s  pwts which i s  f i t t e d  in to  the sentence 
framework. 
34 
This i s  obviously the correct  translation e , g ,  when you say 
"The road  between Stockholm and Gothenburg" where Hbetweenqq 
refers t o  the composite, but not t o  the elementary par t s  
singularly.  he road between Stockholmn i s  not right). 
However, f o r  a phrase l i k e  ttEvery man and woman i n  the ci tyt1 
w e  do not want t o  find only couples of men and women, s o  
general sense noun phrases are not  t rans la ted  into my com- 
pos i tes  at all, The  pmts a r e  f i t t e d  sepazately i n t o  the 
sentence framework instead,  
If w e  say !?The fa ther  and the mother of Mary is comingn, then 
obviously it is the composite which i s  llcomingtt, but it i s  
n o t  so obvious tha t  " o f f T  r e fe r s  t o  the composite. Sytppose that  
w e  previously i n  the  da ta  base have g o t  a f a t h e r  of  Mary and 
a mother o f  M a r y ,  but  no com~osite of these t w o ,  "The fatherf1 
and !'The mother" are t rans la ted  i n t o  two DUMMIES, and we f.irst 
search to i den t i fy  these i n  the data base, before t ry ing  t o  
identify t h e  composite. But when we t r y  t o  ident i fy  "The father"  
w e  do not w a n t  t o  f i nd  the c loses t  previous-menthioned f a the r ,  
we w m t  t o  find the closestprevious-menthioned father o f  Mary. 
Therefore, the r u l e  f o r  preposit ions ia that t o  the left, they 
r e f e r  t o  the elementary parts but t o  the right they r e f e r  t o  
the composite. 
Se example in figure A4, 
Example: "The road and railway between Stockholm and Gothenburg 
i s  blockedetf 
STOCKHOLM-P 
RAILWAY -P 
T PRED T NAME DEF DEF ))~tockholm)) 
))The railway)) 
TWEEN 
DEF DEF 
BLOCKE<PRED )The rdad and railway)) a~tockholm and Gothenburgr 
I 
))The road)) 
ELEME DEF 
DEF 
PRED 
DEF 
ELEMENT 
ROAD-P 
DEF 
NAME 
GOTHENBURG-P 
Figure 14 
A s  seen from the p i c tu re ,  between goes from the  elementary 
p a r t s  Itthe roadtf and "the railway" t o  the  composite objec t  
IIS t ockholm and Gothenburg" . 
17. Noun ,phYases with j u s t  a number and nothing more 
Some na tu ra l  languages contains const ructs  where a noun phrase 
cons i s t s  of only a number, usua l ly  followed by a preposi t ion.  
Example "One of the  horsesf1 o r  "Two of t he  horses f f ,  
Rere ,  as  usual "one" c r ea t e s  a s ingu la r  s e t ,  while any number 
except 'bonen c rea tes  a composite object ,  The r e l a t i o n  "ofn  i s  
i n  t h i s  case t r ans l a t ed  i n t o  
Noun phrase 
before the  
!I Of I t  
A composite object 
N o  coapasi-be object 
36 
Noun phrase a f t e r  the "ofu 
A composite object No composite object 
PART ELEMENT ITS 
REV ELEMENT' EQUAL ITS 
Examples : 
Two of the  horses: PART 
One o f  the horses: REV ELENIENT 
Two of dl horses: E L m T  ITS 
One of all horses: EQUAL ITS 
18, S-ome examples of t rans la t ions  o f  sentences with p l u r a l  nouns 
ILL-P HOR-P 1 
DEF 
ELEMENT 
))the horses)) 
(DUMMY) 
))One of the horses is ill)) Figure 1 5  
))two)) 
(DUMMY) 
))Two of the horses are ill)) Figure 16 
Figure 17 
))The girls)) > >;iSwdln;) 
DEF INSIDE EQUAL 
))The girls - in  wede en are beautiful)) 
1 LINE-P TRUE-S MAK-P 
M ~ T  NUM\ 1 COMPLEX PART\ / CASE 1 DEF 
))the lines)) ))are ... p 
(DUMMY) BY 
/ 
son 
EQUAL PATTERN-P 
 the lines are making a pattern)) 
HIGH-P HUMIDITY-P RAINY-P DAY-P 
))The humidity)) 
(DUMMY) 
INSIDE 
TROPIC-P <- rthe tropics)) 
PRED DEF Figure 19 
))The hurnldi t~  on rajny days - in the tropics is high)) 
COME-P PARENT-P 3 STUDENT-P 
PRED rparents of)) ))the three students)) (VARIABLE) (DUMMY) 
ELEMENT 
DEF DEF 
nall parents)) 
(VARIABLE) (VARIABLE) 
))All parents of each of the three students are coming)) 
Figure 20 
39 
Figure 21 
E AT-P ))John is eating three eggs, and one of them is rotten)) 
EGG-P 
>John is eating...)) 
- >)three eggs)) 
rr 
C 
(M ergc 
JOHN-P 
) SOME ))them)) (DUMB \ nar -. 4 
NOT NUM LA 1 
EQUAL I 
ROTTEN-P 
))John is eating three eggs, and two of them are rotten)) 
Figure 22 
40 
19. Problems with t he  dual representa-tl,ioa of nouns 
A s  has been explained above, nouns must sometimes be t rans la ted  
t o  s ingular  s e t s  ( f o r  special  sense singular nouns), t o  defined 
s e t s  ( f o r  general sense nouns) o r  t o  composite objects  ( f o r  
most p lu ra l  nouns). This dual i ty  1s n e c e s s w ,  but it also 
w i l l  make deduction more d i f f i c u l t ,  since the deduction ru les  
must be able t o  make inferences from: the composite t o  i t s  
pa r t s ,  The deduction ru les  must a l s o  sometimes be able t o  
c rea te  arudlliary composites o r  audlljlrggr non-composi tes. 
Example I: "One man and three women are coming. How many men 
and how m a n y  women are coming?" Here, deductian w i l l  probably 
have t o  create a help-composite f o r  the s ingle  man, since ~ n l y  
composites have numeral on tnem, and the question asks f o r  
t h i s  numeral. 
Example 11: ?!One o r  &ore men i s  comingDV The na tura l  t ransla-  
t i o n  of  t h i s  i s  i n t o  a composite object w i t h  MTM t o  "One o r  
more1!. But i f  we l a t e r  learn,  o r  can deduce from the data  
base, t ha t  it i s  only a single m a n ,  thep a s ingular  non- 
composite node probably has t o  be created. 
Example 111: "Soldiers are cme l .  This i s  because they a r e  scared." 
In  t he  first sentence, I1soldiersV1 i s  used i n  the general sense 
and thus a defined s e t  i s  created, But i n  the  second sentence, 
the  t r ans la t ion  w i l l  f i r g t  t r a a s l a t e  "theyll i n t o  a DUMMY looking 
f o r  a composite object ,  When the routine fo r  merging the 
second sentence i n to  the data  base f inds the defined s e t  f o r  
t!soldierslv,  it must recognize t h a t  a DUMMY looking for a com- 
pos i te  object can merge with a non-composite defined s e t  i n  
the  data base. 
An even more oomplex problem f o r  the deduction routines w i l l  
occur i f  we say "Two of the horses i n  the  s t ab le  m e  sick. Is 
any horse i n  the s t ab le  sick?!! which w i l l  be t rans la ted  l i k e  
i n  f igure  23. 
S ICK-P 2 1 HORSE-P 
>>two f...>> PART v ))the horses)) 
))Two of the horses in the stable are sick> 
SICK-P 
TF ))any horse)) 
SICK-S / E L  \j:: 
HORSE-P >)the stable)) 
>Is any horse in the stable sick?)) 
Figure 23 
The ques t i on -answer ing  r o u t i n e  w i l l  be asked t o  a r n s w e r  the  
question "ITS EQUAL" ( that  is: SUBSET) and t o  do t h i s  it m u s t  
i n  some way r e c o g n i z e  that  a m e m b e r  o f  the defined set SICK*S 
i s  an element o f  the compos i t e  "two of1?, and thus is sick. 
20. Equality between composi te  oob j e c t s  
The natural lanmage phrase "The father and the mother is 
John and M a z y "  canno t  be  t ranslated w i t h  an EQUAL r e l a t i o n  
between t h e  two compos i t e s  for "the father and the motherw 
and 'I3oh.n and Mary". EQUAL says t h a t  all members of  t w o  s e t s  
42 
a re  t h e  same s o  such a t r a n s l a t i o n  would say that the re  i s  
a composite object  which has four  elementary p a r t s  : "the 
f atherlt  , V h e  motherw, Johnft and t f M ~ t t a  
Therefore a new r e l a t i o n  S W  i s  introduced i n t o  the  da t a  
base. S M  goes between two composite objec ts ,  o r  between a 
composite object  and a non-composite object .  SAME says t h a t  
both object  nodes represent  the  same r e a l i t y ,  bu t  viewed 
from d i f f e r e n t  viewpoints,  described by a d i f f e r e n t  s e t  of 
descriptions, 
"John and M a z y  a r e  a masricd couplett w i l l  a l s o  be t r ans l a t ed  
with a SAME r e l a t i o n  between the  two nodes. "John and Mary" 
i s  a compos5te ob jec t ,  and "a  married coupleu i s  a non-composite, 
and EQUAL would the re fo re  mean that a node can be both com- 
p o s i t e  and hon-composite a t  the same time, To avoid t h i s  con- 
fus ion ,  t he  SAME. r e l a t i o n  i s  used. 
SBME i s  thus used t o  ind ica te  a r e l a t i o n  between t w o  d i f f e r en t  
descr ip t ions  of t he  same r e a l i t y .  But SAMl3 cannot be used 
between a composite object  and a defined s e t  containing i t s  
elementary pa r t s .  ELEMENT might be used here ,  bu t  ELEMENT re- 
f e r s  t o  one of t h e  p a r t s ,  not  t o  a l l  the  par t s .  Pherefore a 
new r e l a t i o n  OBJGOMPLEX i s  used. OBJCOMPLEX r e f e r s  f rom a 
composite object  t o  a s e t  of a l l  i t s  pa r t s .  
&ample: "TWQ g i r l s  a re  c i t i z e n s  of Norway" would be t r ans l a t ed  
l i k e  i n  f i gu re  24, 
ALL OBJCOMPLEX ITS 
,The two glrlsn )Citizens of Norway, 
(A composite DUMMY) ' (A defined set VARIABLE) 
))TWO guls are cituens of Norway)) 
43 
Second example: "All people in t h e  roam aro t h d  two gi r l s t t  
is translated i n t o  f i g u r e  25; 
OB JCOMPLEX 
~ 1 1  people in the ))The two girls~ 
room)) (A non-composite (A composite DUMMY) 
VARIABLE) 
))All people in the room are the two gjrlsr 
Figure 25 
predicate complement noun 
composite 
Subject noun 
non-composite 
composite non-composite 
SAME OB JCOMPLEX 
REV EQUAL 
OB JCOMPLEX 
R e l a t i o n s  between predicates 
Predicates form an hierarchical  structure, e .g. VERTEBRATE*P 
is a s p e c i a l  case of ANIMAL*P, HUMAN*P is a special  case of  
VERTEBRATE*P, KMG*P is a s p e c i a l  case o f  HUMAN*P a.s.0. 
To ind ica te  this w e  use the r e l a t i o n  SWPFED, as in figure 26. 
KING-P q HUMAN- 9 VBRTE- 
BRATE-P 
'-3 ANIMAL-I? 
Figure 26 
44 
This means t h a t  some simple sentences can be t r a n s l a t e d  as 
r e l a t i o n s  between p red ica tes ,  F o r  example, the  sentence "Every 
man i s  a burrianu can be t r a n s l a t e d  l i k e  i n  f i g u r e  27. 
MAN-P SUBPRED ) HUMAN-P #Every man is humanr 
Figure 27 
which i s  much simpler than the  o ther  t r a n s l a t i o n ,  in f igure  28. 
MAN-P 
PRED 
DEF 
HUMAN-P 
P PRED BEF 
MAN-S <-) HUMAN-S 
EQUAL ITS 
Figure 28 ))Every man is human)) 
To be able t o  give th is  simple t r a n s l a t i o n  t o  adjectival 
pred ica tes ,  w e  a l s o  have the  sho r t  r e l a t i o n  SUBATTR, s o  t h a t  
"Every man i s  a male humanTt can be t r ans l a t ed  t o  figure 29 .  
! h e  difference between SUBAT'fR and SUBPRED is " c e  same as bebeen 
ATTXi and PRED in f i g u r e  11. In the  above case, there is no semantic 
22. Event nodes difference. 
Many n a t u r a l  language phrases combine several  nodes (ob j ec t s ,  
defined se t s ,  i n t o  a statement which can have 
l i m i t a t i o n s  i n  space, i n  time, i n  i t s  t r u t h  va lue ,  and which 
can have a c m s e ,  a r e s u l t  e t c .  
45 
The c e n t r d  node i n  the  t r ans l a t i on  of such phrases is the 
event node. Went nodes are used i n  our system not only 
for typical  events l i k e  "John went t o  Dhe cinema with Maryff 
but a l s o  for more sustained lfeventstl l i k e  tlJohn i s  the fiancee 
of M a r y f 1  o r  even "John i s  the  f a the r  of M a r y t f  
The most important r e l a t i ons  on an event node a r e  BY t o  the  
subject  CASE t o  the  predicate ,  OBJ  t o  the  object ,  and PART 
vaiidi ty 
to the- e n ~ m m t  . Example: "John i s  riding the bikev is 
t rans la ted  as i n  f igure  30. 
RIDE-P 
JOHN-S BIKE-S 
DEF 
bike)) 
TRUE-S 
Figure 30 
,John is riding the bike, 
From a valid &vent node ( t h a t  i s  a t  the  time and place o f  
the event e tc . )  the deduction procedures can deduce e.g, a 
PRED re la t ion  f rom "Johnft t o  'RDE*~', and these deduced re-  
l a t i ons  a r e  v e r y  useful i n  l a t e r  deduction. There i s  a l s o  a 
symmetric r e l a t i on  OBJPRED from the  object t o  the  predicate.  
If we can deduce t h a t  some object has OBJPRED t o  a predicate 
l i k e  m ~ * p ,  then w e  can deduce that that object i s  being 
ridden, that is  that the predicate RDED+P ( the  passive of 
~ W P )  is appliable t o  the object. 
46 
We can therefore draw the  following f igure  31 o f  re la t ions :  
Figure 31 
PASS 
RIDE-P -> RIDED-P 
CAS 
BY OBJ 
fi~ohn)) <-b ))is ridingr k-> ,the biken 
))John is riding the bike)) & pThe bike is ridden by Johnm 
including implicit short relations 
A l l  of these r e l a t ions  do not have t o  be produced f o r  every 
sentence, since some of them can be deduced f r o m  some others 
by chaining r u l e s  l i k e  : 
X BY Y & Y CASE Z implies X PRED It 
X PASS Y & Z PASSCASE P implies Y CASE X 
Several more t r i ang le s  i n  the figure form such chaining ru l e s ,  
although not all of them. ( ~ v e n  if John is riding and the 
bike i s  ridden, we cannot  the re fo re  conclude that John i s  
r id ing  just t h a t  bike). All the chawing r u l e s  involving the 
event node aze t rue  only when that event node i s  t r u e ,  or 
v a l i d  when the event node i s  va l id ,  
If the data base contains a verb both i n  zctive and passive 
form,  then there must be a r e l a t i o n  PASS between them t o  per- 
m i t  deduction. Since passive fo rms  are less common than ac t ive ,  
this PASS r e l a t i b n  is generated whenever a passive verb appears. 
MAN-P DEPRESSED-P PASS <- DEPRESS-P 
.The always depressed man3 (DUMMY) 
Figure 32 
The  d i r e c t  r e l a t i o n  OBJPRED f r o m  "the always depressed mann to 
DEPRESS*P i s  thus n o t  c r ea t ed  by input translation, but it 
can of course e a s i l y  be deduced. 
I n  the  same way, "The b ike  i s  r idden  by John" i s  translated 
l i k e  i n  f i gu re  33, 
[ T ~ F . ~ - P  IC PASS 
\ RIDE-P 
I PASSCASE 
))The bike is ridden by John)) JOHN-P 
BIKE-P 
DEF 
Figure 33 
48 
The CASE r e l a t i o n  f r o m  t he  event t o  R I D W  i s  no t  output 
e x p l i c i t l y ,  but  can o f  course e a s i l y  be deduced. 
One could argue tha t  we could avoid pass ive verbs  a l toge the r  
i n  our data  base by always us ing  t h e  CASE and OBJPRED r e l a -  
tions. There are two arguments against t h l s :  
a) 1.t i s  valuable  always t o  have t h e  r e l a t l o n  PRED f rom a 
noun t o  all prope r t i e s  on that  noun, It i s  not  systemat ic  
t o  need t h e  r e l a t i o n  OBJPRED t o  some p roper t i e s ,  
b)  Our represen ta t ion  makes i t  very  easy t o  represent statements 
like "Someone who i s  k i l l e d ,  i s  deadu simply by KILLED*P 
SUBATTR DW*P which otherwise would have t o  be represented 
by a VARIABLE i n  t h e  way i n  f i g u r e  34. 
))Someone who 1s k~lled,  is deadr 
KILL-P DEAD-P Y;,gEDl PED 
))Someone who is killed)) 
Figure 34 
23. P u t t i n g  r e s t r i c t i o n s  on equa l i t y  
One can see event nodes as a way o f  adding r e s t r i c t i o n s  i n  
time and space e t c  on PRED r e l a t i o n s .  The event nodes are 
necessary because our d a t a  base does not  permit us t o  put 
short  r e l a t i o n s  on s h o r t  r e l a t i o n s .  
Sometimes there,  i s  a need t o  extend the  SUBSET r e l a t i o n  i n  
the same way. PRED and SUBSET are very si..milar r e l a t i o n s ,  
49 
although PRED goes t o  a p r e d i c a t e ,  SUBSET t o  a n  ob jec t  s e t .  
Since SUBSM! i s  a spec ia l  case of the  EQUAL relation, it i s  
r e a l l y  t h e  EQUAL r e l a t i o n  which w e  want t o  extend into an 
event.  We t h e r e f o r e  introduce a new r e l a t i o n  OBJCASE so that 
y BY X & Y OBJCASE Z implies X EQUAL Z whenever t h e  event Y 
is t r u e  o r  valid. The r e l a t i o n s  thus  form t h e  t r i a n g l e  i n  
f i g u r e  35. 
Figure 35 
EQUAL 
The OBJCASE relation i s  used when n a t u r a l  language equality 
has +o be t r a n s l a t e d  i n t o  relations between ob jec t  nodes. 
AII example i s  given i n  f i g u r e  3 6 .  
))Every evening, John is a singer in the clubn 
JOHN-P 
NAME 
DEF 
Figure 36 
))Every evening)) 
AT-TIME / SINGER-P 
>>...is...>> 
DEF 
))John)) ))singer in the clubr 
club)) 
50 
From t h i s  network, we can deduce t h a t  if the  event i s  v a l i d ,  
e.g. i n  t h e  evening, then llJohnlf i s  a SUBSET o f  " s inge r  i n  
the  clubt1. 
Since all r e l a t i o n s  expand into a chaining r u l e  with EQUAL: 
"X R Y & "Y EQUAL Z implies X R Z" and s ince  EQUAL can be 
expanded i n t o  an event node using BY and OBJCASE, t h i s  can be 
used t o  expand any s h o r t  r e l a t i o n  into an event node. For 
example, "After  1972,  B r i t a i n  i s  a p a r t  of EECM r e q u i r e s  us 
t o  expand t h e  PART r e l a t i o n  between B r i t a l n  and EEC i n t o  an 
event ,  t o  be ab le  t o  add a time l i m i t a t i o n  t o  t h a t  PART 
r e l a t i o n .  T h i s  can easz ly  be done by expanding EQUAL i n t o  
BY x OBJCASE i n  t h e  way i n  f i g u r e  37, 
x ~ f t e r  1972, Britain is a part of EECr 
$RT DEF 
- 
- ))the set of 
d 
of EEC)) 
all parts 
Figure 37 
5 1 
23b. Quantifiers on event nodes 
Consider the sentence ItA girl 1 s  givlng every man a flower". 
This sentence could be interpreted in the following way: 
"There is a set of events, one for each man. One and the 
same girl is giving a different flower in each such event1'. 
In our data base, this i s  represented like this: 
MAN-8 (Variable) GIVE-P f as .  
DEF 
,a girl)) f- pa girl is givmg .... n (variable) ) FLOWER-s 
BY DEF 
k:.T 
DEF OBJ ITS (Variable) 
TRUE-S 
figure 37a 
I n  the  t g m s l a t i o n  above, the  two noun phrases "a girl" and 
"a flower" are interpreted in different w a y s .  "a girl" i s  
interpreted as one single girl, while "a flower" is interpreted 
as a set of di f feyenl  flowers, one for each man. 
These two interpretations of "au are c a l l e d  r e spec t ive ly  the  
singular sense and the distributed sense. Other determiners 
than Itaft have the same ambiguity, for example "someM. 
lfa car r f  in the sentence "Every man is in a car" can be 
interpreted in the singular sense (one single car) or in 
the distributed sense (one car f o r  each man). 
In the singuhr sense the interpretation will be: 
figure 37b 
MAN-S CAR-P 
Py 
))Every man is in a car, (Constant) 
TRUE-S ))a car}} (Constant) PD 
And in the distributed sense the  interpretation will be: 
MAN-S CAR-P 
rEvery man is in a carn (Variable) / 
'$% ITS / DEF 
TRUE-S ra carp (Variable) 
figure 37c 
One can note t h a t  w e  can later r e f e r  back to the c a r  only 
with the singular sense interpretation. Example: "Every man 
is in a car .  The car drove away1'. This also corresponds t o  
the  .interpretations in the f igures  above,  where only  the 
singular sense prov ides  a node to refer back t o .  
Such a back-referencing could thus be used to disambiguate 
this kind of ambiguous sentence.  
If you compare t h e  two f igures  above,  an i m p o r t a n t  d i f f e r e n c e  
is -that -t;he event node is a constant i n  the  singular sense, 
a variable in t he  distributed sense. 
The t r a n s l a t i o n  r u l e  i s  t h a t  i f  a l l  the  noun phrases marked 
with "a" o r  "some" a r e  t o  be in t e rp re t ed  i n  tke  s ingu la r  sense ,  
then the event can become a constant .  If, however, one of 
t he  noun phrases marked with Itat' o r  i s  t o  be i n t e r -  
p re ted  i n  the  d i s t r ibu ted  sense ,  then we must have one copy 
of the  event node f o r  each copy o f  t he  d i s t r i b u t e d  noun, s o  
the event must become a va r i ab le ,  
I f  the  event i s  t r ans l a t ed  as a var iab le ,  then the  q u a n t i f i e r s  
on t h e  r e l a t i o n s  between the event and t h e  noun phrases should be: 
DEF-ALL t o  s ingu la r  sense and constant nouns, 
DEF-ITS t o  d i s t r i b u t e d  sense nouns, 
ITS-ALL t o  nouns marked with a general q u a n t i f i e r  l i k e  lteverylf 
o r  "allt1 o r  'leach". 
Examples : 
"A man and a woman are  everyone - in t h e  housen 
na man and a woman) < SAME ITS 
I \ 
#a man)) ))a woman)) 
))everyone in the house)) (Variable) Fm 
rthe house)) (Dummy) 1 DEF 
MAN-P WOMAN-P 
figure 37d 
JPRED 
HOUSE-P 
54 
"In every city, some woman is in a hospitalu 
CITY-P 
CITY -S (Variable) 
JNSID. 
WOMAN-S (variable) <- ))is....)) r::ED ITS BY y & g E  
WOMAN-P HOSPITAL-S (Variable) 
HOSPITAL-P figure 37e 
24. Deduction patterns and na tura l  language if-clauses 
A natural  language statement like "If the  weather i s  rainy 
and a person outdoors  and t h e  person i s  n o t  wearing any 
ra incoat ,  then the  persoh  will become wet." introduces de- 
duct ion rules into the data base. These rules are only v a l i d  
if a p a t t e r n  o f  f ac t s  in t he  data base can fit into the 
pattern c r e a t e d  by the deduction rule. 
Such deduction rule patterns are called keys in our system. 
Af te r  merging i n t o  the data base, t h e  s ta tement  above m a y  
l o o k  like in figure 38 .  
WEAR-P 
WEATHER-P 
7 P . m  DEF 
OU DOOR-P T:: 
... . 
/I -\ DEF 
- 
RAINY-P \ 
/7XMT c o N D  
))any raincoat)) 
RAINCOAT-P 
I-> WET-P 
CASE 
))If the weather ts rainy and a person is outdoors and the person is not 
wearing any raincoat, then the person will become wet, 
Figure 38 
A new quan t i f i e r  "THAT" i s  introduced above. The reason f o r  
this i s  t h a t  if there  axe two d i f f e r e n t  persons, one who i s  
outdoors, and another who i s  not  wearing a r a incoa t ,  then we 
do not w a n t  t o  conclude than any of them necessa r i ly  will 
become wet. W e  therefore  have t o  s ing le  out i n  the  data base 
one person and t w o  events i n  which t h i s  person i s  the  subject .  
One o f  the  events should say t h a t  he i s  outdoors, the  o ther  
t h a t  he i s  not wearing a raincoat.  W e  therefore have a key 
o f  one person and t w o  events,  which have t o  be f i t t e d  with 
f a c t s  i n  the data base when the deduction rule  i s  used. 
The q u a n t i f i e r  HTHATvl r e f e r s  f rom a conclusion t o  the  deduction 
pa t te rn  key. It means t o  s ing le  out t h a t  member o f  the referred 
s e t  t o  which the  whole pa t te rn  has been matched, 
I n  the  f igure  above, lithe weather i s  rainyf1 i s  not  p a r t  of 
the  pattern, B u t  i n  r e a l i t y ,  there  i s  i n  *he na tu ra l  lavllguage 
t e x t  an impl i c i t  time and place indica t ion:  "If, a t  a certain 
place,  a t  a ce r t a in  time.. .I1  and this place and time w i l l  f i t  
the  weather i n t o  the  pa t te rn  key. 
O u r  program does not y e t  handle such impl ic i t  time and place 
indica t ions .  
There are t w o  shor t  r e l a t i o n s  f o r  "imply" i n  our d a t a  base: 
COND and IFTHEN, COND r e f e r s  t o  necessazy condit ions,  IFTREN 
t o  s u f f i c i e n t  conditions. To handle cause and e f f e c t  pa t terns ,  
and t h e  resulting s t ruc tu re  of s i t u a t i o n s  depending on each 
other ,  probably more such r e l a t i o n s  are  necessary,  but  we 
have n o t  introduced them yet. 
A somewhat simpler nota t ion  i s  avai lable  f o r  some simple cases.  
T h i s  i s  the COP short relation, which r e f e r s  t o  a hypothetical  
copy. Thus, the bridge i s  loat. and weak, then i t  w i l l  breakvv 
can be t r ans l a t ed  l i k e  i n  figure 39, 
COP DEF 
n t he br idgedf. 
DEF PRED 
>)...lS* *.> 
DEF :::? 
LOW-P 
WEAK-P 
))then.,,)) 
Figure 39 
BREAK-P 
rlf the bridge is low and weak, then it will breakx 
Thus, if-statements i n  natural  language introduce a pat tern  
key of variables ,  connected with DEF-DEF re la t ions .  And the 
conclusion r e fe r s  t o  this pat tern  with re la t ions  with the 
quantifier THAT on the pat tern end. 
A n a t ~ r d  language if-statement i n  a question is t rans la ted  
in a quite d i f fe ren t  way. The statement "If the weather is 
rainy and John i s  outdoors, w i l l  he then be wet?" i s  t rans la ted  
l i k e  th i s :  "Add the  temporary facts t ha t  the weather i s  rainy 
and that John is ouet;do-ors into the data base. Thereafter t r y  
t o  .deduce if he w i l l  be wet. When the question has been answered, 
then remove the  tempwary f a c t s  from the data base again. 
CQ-ed to other natural language systems, one characteristic 
of o m  systiem~is +he representation of deduc%ion rules as vari- 
able patterns in the data base. Other often used representations 
m e  
a) Predicate cslculus clauses. 
b) Exeautable programs in some spacial  programming language. 
'Phe advantage with our  system is that the representation of 
deduction ru les  is so closely integrated with the represen- 
h t f o n  of facts* The simplest deduction ru les ,  the chafning 
rdle8, sihply are d e s  for traversing the data base graph 
from node .t;o node. The more complex deduction rules are 
patteras very similar t o  the data base facts which these 
petterns are t o  match during dedGotion. 
If a predicate cslculus representation is used, then 
efficient deduction requires some algorithm f o r  selecting 
.%hose clauses which might match the clauses in the deduction 
W e .  mas, tihe pattern matching problem isr not avoided, 
and an ef$f'cienf deduction algorithm probably w i l l  hwe to 
have an underlying netwoxk pattern similar to ours, although 
not so vis ible .  
b e  advantage with predicate calculus representation is  
however that the theory of deci&%ility is much fuller 
aeveloped fhr that representation than for ours. 
Ekecatable programs in some special programing la,nguage 
is potentidly a more powerful representation than ours. 
Heuristic d e s  guiding the order of the dedkction search 
w e  easier to include into such a deduction rule, However, 
the power in an a c h l  system is of course limited to the 
set of pro@ams which the input translator can generate. 
&my of t h e  programs will probably in r ea l i t y  not contain 
anything else thsn our chaining r u l e s ,  variables and patterns, 
and such system will also require some mere or less hidden 
underlying network to select rules and facts o f  interest 
dusing a certain deduction process. 
On the outemnost surface l eve l ,  we have until now only  iwgle- 
mented yes-no questions in; our system. Other kinds of 
qnes t iona u;m however appear as sub-ques tions during the 
deduction, proceso. A question is f n many ways similar t o  
a natural lrtoguaere if-statement, Iri both cases ,  a pattern 
of variables i s  created, aad we w a n t  to identify this 
patte;m with the data base. 
59 
A typ ica l  question l i k e  "Is John f a the r  of a b lond gir l1!  will 
thus be t ransla ted like in f i g u r e  40. 
JOHN-P 
NAM 
DEF 
I-= *t 
BY? ITS 
DE DEF 
h e  father)) I-, aall blond girlsr 
DEF OF ITS 
Figure 40 nIs john father of a blond girl?)) 
I n  t h i s  simple case, there was no need t o  introduce pat tern  
keys of more than one variable, s o  the  .translation was very 
simple. One cen t ra l  r e l a t i o n ,  in t h i s  case the  BY relation, 
i s  marked with a question-mark, w h i c h  means t h a t  it is t h i s  
relakion which deduction should try i jo; prove.  
The processing of a question therefore  usual ly begins with 
the introduct ion of  temporary da ta  ( i n  t h i s  case the  VARIABLE 
for r lal l  blond g i r l s1 '  and the VARIABLE for "all fathers of  
blond g i r l s f f )  and then on a s ing le  quostion r e l a t i o n  t o  prove. 
T h i s  i s  what o u r  system i s  capablle o f  today. However, some 
complex questions will crea te  patterns where par t  of t h e  
pak t em re fe r s  t o  o the r  pa t te rns ,  just as f o x  if-statements 
i n  the  previous sect ion of  t h i s  paper. 
Look f o r  example at  the question l11s the f a t h e r  of a l l  the 
children o f  any o f  Johnt s daughters married to t h a t  daughter?f1 
In the t r ans l a t ion  of th is  question there  w i l l  be a VARIABLE 
for !'the fa therw and a VARIABLE f o r  " tha t  daughterv. And these 
t w o  VARIABLES must pairwise match, It i s  not enough t o  find 
that the father i s  married, not even enough t o  find that he 
i s  married t o  one of John's daughters, He must be married 
t o  just that daughter whose chi ldren are a l l  a l so  h i s  children.  
60 
The t r a n s l a t i o n  w i l l  t he re fore  have t o  be something l i k e  i n  
f i g u r e  41. 
JOHN-P 
NAME 7 DEF 
DAUGH*TER-P MARRIED-P FATHER-P 
))John> f- ,that daugh- rC__ be .IS..)) 2 rthe fathcrn OF DEI! 
ten) DEF TO DEF DEF BY D 
Figure 41 
CHH.,D-P <- pa l l  the childrenr 
PRED DEF ))Is the father of all the children of any of ~ o h n ' s  
daughters married to  that daughter? r 
Look a t  t h e  OF r e l a t i o n  from " the  f a t h e r n  t o  " a l l  t he  ch i ld renn .  
This OF r e l a t i o n  should s ing le  out j u s t  the  ah i ld ren  of his 
w i f e ,  no t  the  ch i ld ren  of a l l  h e r  s i s t e r s .  We have not y e t  
found out how t o  do this. We hope that t h i s  complex kind of 
ques t ions  will not  be  common. 
26. DUMMIES = t e m p o r w  v a r i a b l e s  f B r  d a t a  base merging 
A shart presentation of the concept of a DU?@fY was made in 
~ e c t i o n  8.  I)lDdIdI:ES and problems with them w i l l  be more fully 
t reated here. 
When n a t u r a l  language uses cons t ruc t s  l i k e  "HeVt  o r  " the manw 
o r  "this object  in t h e  sk;yV thm t h i s  usua l ly  r e f e r s  t o  something 
which t h e  r ec i eve r  i s  supposed t o  know already. Often,  the  
t h i n g  r e f e r r e d  t o  has been mentioned a shor t  time ago in the 
previous n a t u r a l  1 anguage input .  
We the re fo re  in t roduce  a spec i a l  kind o f  VARIABLE. This is  
call-ed a DUMMY. An ordinary VARIABLE i s  kept i n  t he  d a t a  
base t o  be used a t  some l a t e r  time f o r  deduc.tion. A DUMMY 
causes an immediate search i n  the  data base f o r  a matching 
previous ly  known objec t .  
6 I 
The order o f  t h i s  search i s  i m p o r t a n t .  If t he re  are  severa l  
previous objec ts  matching the desc r ip t ions ,  t he  last-mentioned 
one s h a l l  usually be found. However, the  subjec t  usua l ly  goes 
before o t h e r  noun phrases. I f  w e  say llI? a c a r d  i s  below 
$ 1  
mother  card,  then i t  cannot be seen." then r e f e r s  t o  
the  subject  " a  ca rdw,  not t o  t h e  p repos i t iona l  %nother  card" 
even though this was mentioned l a t e r .  
Our program w i l l  therefore  make a l i s t ,  the so-called CURRENT 
list, of  previous-mentioned ob j e e t s .  This i s  searched back- 
wards. 
We have a t  present t w o  search rout ines  f o r  DUMMY matching, 
the "theu rou t ine  and the  t l t h i s "  rout ine.  One d i f fe rence  
between them i s  that i f  no matching node i s  found, the  " th i s t1  
rout ine  w i l l  ask the  user t o  rephrase h i s  statement. The "thet1 
rout ine  will i n  t h a t  case accept t h a t  t h i s  i s  something which 
the  user  knows, but  not the  computer. It w i l l  t he re fore  en te r  
a new node i f  no previous-mentioned i s  found. 
k e  pxoroblem whlch we 80 fsr liare not completely solved is how 
t o  do with patterns of DUMMIES. If we soy "the behind Johnw 
then there sre two nstttrd way8 t o  translate this i n t o  oar  
da$a base t 
a) &o DWOBIE8, one independent (for "~ohn") and another 
bependent (for "=the man") as in figure 42. 
MAN-P 
PRED 
DEF 
JOHN-P 
NAME 
DEF 
,The mann %%> uJohn, 
DEF BEHIND ALL 
Figure 42 nThe man behind Johnn 
6 2  
b) A pattern key of t a o  mnfually depenqent DUBMtES, whexe 
q E 3 '  BEElXD ALLw 5n the figure 42 is uhanged to "DEF BEfflMD DEF", 
'Fhe first translation + a  n e o e 8 8 ~  in those oases where only 
one of the D U M K E  hes a match in  the data baae, e,g. for a 
atatement like "Lf a man is  l a t e ,  then the m a n  behind h i m  is 
even later." Here, there is  no previously known man, and the 
seoond translation w i k h  the pattern key would not match "a manw 
in the if-ata%ement at all .  
Horevez, if solution a) i s  adopted, this  text  will not be 
treated correotly *A man d t h  a dog is ooming. Another d o ~ i s  
barking. The man with the dog i s  frightened." Solution a) 
w i l l  f i r s t  f i n d  the other dog, and then crea te  a new m a n  
who i s  with t h a t  other dog, and l e t  t h a t  other man be 
frightened. A more complex algorithm may be necessary t o  
solve t h i s  problem. 
Another example which w i l l  cause d i f f i c u l t y  i s  
"John and h i s  brother  are i n  the wood, H i s  brother  i s  leaving." 
I f  no DUMMY pat tern  key i s  created,  then "his" i n  the  second 
sentence w i l l  i den t i fy  with "brother" i n  the previous sentence. 
"His brotherH i n  the  second sentence w i l l  then iden t i fy  with 
" H i s  b ro ther ' s  brothern i n  the f i r s t  sentence, which i s  not 
correc t .  
27. DUMMIES which re fe r  t o  VARIABLES 
Look a t  the na tura l  language sentence " I f  a l i o n  meets an 
elephant, then the  elephant w i l l  run t o  the fores t . "  
There are  two DUMMIES i n  the  main clause,  "the elephantv and 
"the f ores t f t  . "The e lepbmtv  w i l l  match the VARIABLE created 
by "an elephm"ct i n  the  if-clause. ?'The forestl1 w i l l  match a 
previously known, probably CONSTANT fo res t .  
6 3  
In  general ,  only a f t e r  doing t h e  refer-back search i n  t h e  
da ta  base w i l l  we know whether a DUMMY w i l l  match a VARIABLE 
o r  a 'CONSTANT. 
I f  a DUMMX matches a VARIABLE, then t h a t  DUMMY may be adding 
def in i t i ons  t o  t h a t  VARIABLE. Look f o r  example a t  the  sen- 
tence " I f  a l i o n  meets an elephant ,  -and i f  t h e  l i o n  sees  t h e  
elephant,  then. . . Here, the  DUMMIES i n  the  second phrase 
w i l l  add t o  t h e  pa t te rn  key being b u i l t  up ,  and thus add t o  
t h e  de f in i t i ons  of t he  VARIABLES Ifa l i on t r  and "an elephant t f ,  
This means t h a t  there  are two  kinds of DEF-marked relations 
on DUMMIES, Phe f i r s t  of them are  those which axe t o  be used 
during the  refer-back search. And t h e  second a re  those which 
a re  t o  be added t o  the  VARIABLE, i f  the  DlJMMY matched a 
var iab le ,  In our system, we in tend t o  d i s t ingu i sh  between 
these  by f i r s t  g iv ing the  r e l a t i o n s  which a re  t o  be used i n  
the  refer-back search. Then the  refer-back search i s  done, 
a d  t h e r e a f t e r  the  r e l a t i o n s  are given which add DEF-s t o  
the  de f in i t i on  of the  matched VARIABLE. 
Another i n t e r e s t i n g  case i s  where the re  are two  DUMMIES, one 
dependent on t h e  o ther ,  and one of them matches a VARJXBLE. 
Look f o r  example at- the  sentence "If a g i r l  i s  i n  t rouble ,  
then her  mother w i l l  be angryeff Here, "heru becomes a,n in-  
depen-dent DUMMY, while Ither mothern becomes a dependent DUMMY. 
The jtherff DDMEdY w i l l  match the VARIABLE "a g i r l f f  i n  the  if- 
clause. The DUMMY Ither motheru w i l l  not f i n d  any match a t  
all. And the  i n t e r e s t i n g  t h i n g  i s  t h a t  because the  independent 
D m  matched a VARIABLE, the dependent DUMMY Ifher motherv 
which matches nothing should i n  t h i s  case not  crea%e a new 
CONSTANT but a new VARIABLE. For every d i f f e ren t  g i r l ,  t he re  
i s  a d i f f e r e n t  mother who will be angry, so a CONS'PBNT w i l l  
not do. 
64 
This means t h a t  the "the" qwnmy algorithm must be able t o  
decide i f  a CONSTANT o r  a VARIABLE i s  t o  be created when a 
DUMMY f ihds  no exp l i c i t  match, 
28, The problem of dual representation 
We have of course during the wri t ing of the SQAP system 
encountered many problems, For some o f  them we have found 
solut ions,  f o r  some not ,  Many o f  the problems have &ready 
been presented i n  th i s  paper, and those problernswhich belong 
more t o  input "canslation o r  -t;o deduction than t o  da t a  base 
s t ruc ture  do not f i t  i n t o  the subject o f  t h i s  paper, 
Looking a t  the  problems we have met, there seems t o  be one 
problem which recurs several  times, Th,is i s  the f a c t  t ha t  
the  same na tura l  language construct can be represented i n  
several  ways i n  our data  base, We have found t h a t  t h i s  i s  
unavoidable, since one yepresentation i s  necessary i n  some 
cases and another i n  other cases. But on the other hand, t h i s  
difference i n  representation w i l l  make the deduction d i f f i c u l t ,  
including the deduction during the merging of new t e x t  into 
a prevfous da ta  base, 
One solut ion t o  th is  problem i s  t h a t  when there  i s  two d i f fe ren t  
representat ions,  then f o r  sentences giving one o f  them, both 
of them is  created includ'ing the relat ionship between them. 
This solut ion i s  used f o r  the dual i ty  of the representation 
of nouns. The noun tfbooku corresponds i n  our da ta  base both 
t o  the  predioate BOOK*P (=the property of being a book) and 
t o  the defined s e t  BOOK*S (=the s e t  of a l l  books). But when- 
ever BOOK*S i s  crea-bed i n  input t r a s l a t i o n ,  BOOK*P i s  also 
created and the r e l a t ion  BOOKW DEF PRED BOOK*P i s  created, 
(1f t h i s  already ex i s t s  i n  the data base, then o f  course the 
same th ing i s  not put there twice.) 
65 
This means t h a t  whenever both BOOMP and BOOK*S occurs i n  our 
da t a  base, the r e l a t ion  between them a l s o  ex i s t s .  
Another example where the same solut ion i s  used i s  act ive 
and passive verbs. Whenever a  passive predicate ,  e. g. KILLEDXP 
is  put i n to  the  da ta  base, w e  a lso  put i n  the  act ive form 
KILL*P and the r e l a t ion  between them: KILL*P PASS KILLEID*P. 
In t h i s  war we ensure tha t  i f  both KILL%P and KILLED*P are 
i n  our  data  base, then the r e l a t i o n  PASS between them i s  
a l s o  there. 
The same solut ion could be used, but would be cumbers~me and 
memoryconsuming i n  o the r  cases. For example, a  number of 
objects  can be regarded b o t h  as a  composite object  and as a  
s e t ,  f o r  which we have two d i f f e ren t  representation.  There 
i s  a  short r e l a t ion ,  OBJCOMPLEX, i n  our system, f rom a composite 
object t o  a  s e t  of a l l  i t s  par ts .  But t h i s  r e l a t i o n  cannot 
solve the whole problem, and it  would also be very cumbersome 
always t o  have t o  put out both representations f o r  ce r t a in  
phrases. This i s  discussed fu r the r  i n  sect ion 19 of t h i s  
paper. 
Another problem of t h i s  kind i s  t h a t  our  system i s  very much 
based on the idea  t h a t  simple f a c t s  should be s tored i n  a  
simple w a y  a d  more complex f a c t s  i n  ,a more complex way. "A 
man is a maJ.en i s  therefore i n  our data  base s tored like i n  
f igure  43. 
MAN-P ' > MALE-P 
SUBPRED 
BA man is a male)) 
Figure 43 
66 
In t h i s  case, a re la t ion  between the predicates was enough. 
But f o r  the s l igh t ly  more complex statement ffEvery human male 
i s  a manff, a defined se t  i s  necessary as i n  f igure 44. 
HUMAN-P MALE-P 
))Every human male)) ,a> MAN-P 
))Every human male 1s a man)) 
Figure 44 
If there i s  some l imi ta t ion  i n  tru-bhfulness o r  v a l i d i t y ,  e.g.  
a time-limit, then the PRED must be expandad t o  REV BY times 
CASE, e.g. f o r  the phrase tfEvery human male was that  year a 
soldier" ,  i n  figure 45. 
HUMAN-P MALE-P 
))..was.,)) 
,Every hqman male)) <-I \/ SOLDIER-S 
BY A- CASE 
- 
r* 
rEvery human male was. that year a soldier)) 4 
The d i f f i cu l ty  with t h i s  i s  tha t  when a new f a c t  is going t o  
be added t o  o l d  f a c t s ,  then the expanded version may be necessary. 
A l s o ,  a question may be asking f o r  the expanded version, and 
the deduction routines m a y  then have t o  do the expanding 
during deduction, which i s  surely possible; but d i f f i c u l t  t o  
manage i n  an ef f ic ien t  way, 
67 
Example: IIEvery male i s  an animal. If he i s  humm, then he i s  
also  a m a n . "  
Here, I1helI i n  the second sentence creates an object ,  the data 
base merging routine will f i n d  it d i f f i c u l t  t o  understand 
t h a t  t h i s  refers t o  the nmalelT i n  $he previous sentence, s ince 
this  Ivmalett was t ransla ted as a predicate, not as an object,  
29. What our system can do and cannot d o  
Our system can at  l e a s t  par t ly  manage the following natural 
language constructs: Nouns, a r t i c l e s ,  quant i f iers ,  adject ives ,  
numerals, rnos-l; pronouns, the conjunction rqandI1 , passive and 
act ive  verbs, objects,  predicate complements, genitive, pre- 
posi t ional  a t t r ibu tes  and adverbials, i f-clauses,  yes-no 
questions. 
Some o f  the things w e  a r e  not ready with ye t  are other con- 
junctions than "andtf, r e l a t ive  pronouns, in terrogat ive  
pronouns, negation, awcilliazy verbs other than l lben,  com- 
pazative adjectives. 
We do not yet  try t o  resolve ambiguity by reference t o  the 
data base. 
The kind of f a c t s  which our system can handle are basical ly  
a passive description o f  a t m e  s e t  o f  f a c t s  about the vorld .  
We can thus not ye t  handle properly  a description of a  sequence 
o f  events changing the world step by s tep.  Neither can we 
handle properly facts which are  part of someone's bel ief  
structure, Statements about statements cannot be handled ( e . g .  
"This i s  a d i f f i o u l t  problemf1 o r  "This should not be construed 
t o  mean that..."). 
68 
30. A shor t  comparison w i t h  other systems 
Shapiro '1971, Simmons 1971 and others have presented systems 
very s i m 5 . l ~  to our ,  Most okher systems do not have quant i f iers  
on the shor t  re la t ions as we have, and we f e e l  t h a t  t h i s  
is an addition which adda to the power of the rep~esentation. 
Special in our system may also be t h a t  one s h o r t  relation 
o m  be extented when necessary into an event. This saves 
much m e m o r y  compared to repmsenta t ions  where the fullest; 
form is always used, even though i t  is in most cases not 
needed. It is for example true t h a t  fox a statement like 
tha t  in figure 3, there may be doube about only t h e  BY 
relation, o r  only the AT-TJ3D3 relation, or only the CASE 
relation. (we may be sure that g i r l  is happy", but  not 
so sure about the day, or we rnay be sure  that there is 
happiness today, but not sure where. ) A full representation 
would therefore require a place t o  insert doubt on my 
short relation, whether there is doubt or not, and t h i s  
would double the data base size.  
In our  system, the deduction rule can f o r  any node in the 
data base f ind a l l  outgoing and incoming s h o r t  relations 
directly, and fo l low t h e m .  In-spi.t;e of this, w e  can s t o r e  
a whole s h o r t  relation in j u s t  64 bits(t-o 24-bit adresses 
plus 16 additional bits). 'Phis compact representation 
increases the efficiency of systems storing the data 
base in v i r t u a l  memories. 
T h e  basic ideas  for our s p t e m  w e r e  i n i t i a l l y  conceived by 
Erik Sandewall and w e r e  presented in his papers  in the 
bibliography. 
69 
Our system was developed as a team-work between me, Er ik  
Sandewall and Kalle Makkil'd. I have been working with input 
t rans la t ion ,  K d l e  Makila with da ta  base managment and 
deduction, and Erik Sandewall has guided us i n  our work. 
It i s  d i f f i cu l t  t o  pinpoint who solved each of  our problems, 
s h c e  they were solved through discussions from which a 
so lu t ion  sooner o r  later emerged. 
S i v  Sjijgren has been working w i t h  the problem of adapting 
our system t o  the  swedish and espermto languages, 
32. Bibliography 
The most important papers f o r  understanding our work a re  
marked with an asterisk. 
Bar-Hillel , Yehoshua, 1964 : Language and Information, 
Addison-Wisley , Reading, 1964. 
Pillmore, Ch, J, : The Case f o r  Case, In  Universals 
i n  Linguistic Theory, ed Back, E. 
e t  al , H o l t  Rinehkd Winston 
Inc.,  1968. 
* Makila, K d l e  1972: Deduction procedures i n  a question 
aswer ing  system, FOA P rapport 
C 8 3 1 0 - ~ 3 ( ~ 5 ) ,  January 1972. 
Makila, K d l e  1973: Experience of  assimilation and 
deduction i n  a semantic ne t  ( t o  
be published). 
* Pdme, Jacob 1970A: Making Computers Underst and Natural 
Language, 108 P rapport C 8257-11 (64) ,  
July 1970, also i n  Artificial 
Intel l igence and Heurist ic Programming 
(ed.  Pindler , ~ e l t z e r )  Bdinburgh 
University Press 1971. 
* Palme, Jacob 1970B: A simplified English f o r  Question 
Answering FOB P rapport C 8256-11 (64), 
December 1970. 
* Palme, Jacob 1971A: A Natural Language Pazsing Program for 
Question Answering, FOA P rapport 
C 8268-1 1 (64), February 1971. 
Palme, Jacob 1971B: Inet;ernal Structure of  the  SQAP Natural 
Language Parser, FOA P rapport C 8286- 
11(64), April 1971, 
* Palme, Jacob 1972.A: Syntax and dictionary f o r  a computer 
english. FOA P rapport C 831 2 - ~ 3 ( ~ 5 ) ,  
February 1972, 
Pdme, Jacob 1972B: From paxsing tree,  t o  predicate calculus 
a prelimin suurvey. FOA P rapport 
C! 8313-M3(3, February 1972. 
* Palme, Jacob 1973: The SUP data base f o r  natural  language 
information, F0M Rapport, Seyt ember 1 973. 
Sandewall, Erik 1965 : 
* Sandewall, Erik 1969 : 
* Sandewall, Erik and 
Mails, Kalle 1970: 
* Sandewall, Erik 1971 : 
Schank, R.C. and 
Tes t le r ,  L.G. , 19698 
Shapiro , S t u m t  Charles 
1971 : 
Simmons, R.F. , 1971 r 
Sj-en, Siv 1970: 
Sj'dgren, Siv I971 : 
Representation of f a c t s  i n  a 
computer question answering 
systems. Uppsala University,  
Computer Science dept . 1965. 
A set-oriented property s t ruc ture  repre- 
sentat ion fo r  binary r e l a t ions ,  SPB. In 
Machine Intel l igence 5 ,  Edinburgh University 
Press,  1970, also as Uppsala University 
Computer Sciences department Report nr 24. 
A Data Base $"ccture f o r  a 
Question-Answerin S stem. FOA P 
rapport C 8265-11764$, Nove mber 1970. 
Formal Methods i n  the Design of 
Question-Answe~iklg Systems. 
A r t i f i c i a l  Inte l l igence vol. 2 
(1971) pp 129-145. 
A Conceptual Dependency Parser 
f o r  Natural Language, Internat ional  
Conference on Conputational 
Linguist ics,  1969. 
The MIND system: A Data Structure 
f o r  Semantic Information Processing. 
Rand, Santa Monica, Ca. 90406 USA, 
report  R-837-PR. 
Natural Language f o r  Ins t ruct ional  
Communication. In  A r t i f i c i a l  Inte l l igence 
and Heurist ic  P r o g r m i n g ,  ed F ind le r ,  
N.V. e t  a l ,  Edinburgh ~ n i v e g i t ~  Press 
Eh sy-htax f o r  datamaskinell analys 
av esperanto. FOB P rapport C 8264-1 1(64), 
Oktober 1970% 
Utkast t i l l  en syntax f o r  data- 
maskinell analys av svenska, FOB P 
rapport C 831 4 - ~ 3  ( ~ 5 ) ,  Februari 1971 . 
33.  I n d e x  
Abstract . . . . . . . . . . . . .  1 
Accordingto ........... I t  
Acknowledgements . . . . . . . . .  08 
Address  of author . . . . . . . . .  1 
Adject ive  . . . . . . . . . . . . .  23 
Agent . . . . . . . . . . . . . . .  8. 9 
A l l  . . . . . . . . . . . . . . . .  13. 31 
ALL s h o r t  r e l a t i o n  . . . . . . . .  13. lo. 53 
. . . . . .  Ambiguity. r e so lv ing  of 5 
And . . . . . . . . . .  ..2U. 3 4  
ATTH s h o r t  r e l a t i o n  . . . . . . . .  10. 23 
A t t r i b u t e  ........m.... 23
A t t r i b u t e  p r o p e r t y  . . . . .  I O  
Author . . . . . . . . . . .  1
Back-referencing i n  t e x t  . .  18. 30. 40. 60 
Uar-Hil le l  - . . . . . . . . m e .  5 .  70 
. . . . . . . .  be ..e....08. 1 1  
B e c a u s e o f  . . . . . . . . . . . .  1 1  
B e l i e f  s t r u c t u r e  . . . . . . . .  1 1 .  12 
Between . . . . . . . . . . . . . .  34 
BEThEEN shor t  r e l a t l o n  . .  35 
Bibl iography . . . . . . . . . . .  70 
By . . . . . . . . . . . . . . . . 8 .  47 
UY s h o r t  r e l a t i o n  . . . . . . . . .  9. 12. 17 
BY. definition . . . . . . . . . .  4h 
Case grammar . . . . . . . .  8
CASE short relation . . .  9. 12. 17. 4 8  
Chain ing  r u l e  f o r  BY. OBJCASE. EQUAL . . 48 
Chaining r u l e s  f o r  YREU. CASE* BY e t c  . . . 4 6  
C h a i n i n g .  i n fe rence  method . . . .  16 
Comparison be tween  SQAP and o t h e r  systems . . 68 
COMPLEX sho r t  relation . 32 
. COMPLEX. example of use . 36. 3 8 .  41 53 
Compos i t eob jec t  ......... 28. 31 
Composite ob jec t .  number of e l emen t s  i n  . . 32 
Composite ob j ec t .  problem w i t h  . 6 5  
Composite ob.jects. related by b*isl* . . 43 
. . . . . .  Concepts and r e l a t i o n s  7 
CONL, s h o r t  r e l a t i o n  . . . . . . .  55.  56 
CONl). example of use  . . . .  57 
Condi t i .on .  . . . . . . . . . . . .  50 
Condit ional  s ta tement  i n  n a t u r a l  language . . 15. 17. 22. 
54. 62 
Conjunction . . . . . . . . . . . .  28. 31 
Constant.  c r ea t ed  from dummy . . .  I9 
CONSTANT. node c l a s s  e r n . . . .  22 
C o n t e n t s  . . . . . . . . . . . . .  3 
COP short r e l a t l o n  . . .  56 
COP. example of use  . . . . . . . .  57 
Couple  . . . . . . . . . .  . . 3 1  
Data base model  . . . , . . . . . .  7 
Data base. need f o r  . . . . . . . .  6 
Data base. requirements on . . . .  6 
Deduction . . . . . . . . . . . . .  15. 16 
Deduc t  ion  p a t t e r n  . . . . .  17. 54 
Deduction ru l e s  f o r  PHEU. CASE. BY e t c  . . .  46 
Deduction. use of q u a n t i f i e r s  i n  . 14 
UEF q u a n t i f i e r  . . . . . . . . . .  16. 17. 18. 19. 24. 53 
Demonstration example . . . . . . .  20 
O i s jo in t  s e t s  . . . . . . . . . . .  21 
Dis t r ibu ted  sense of "a" . .  . . .  51 
Dual r ep re sen t a t i on  . . . . . . . .  64 
Dummies. r e l a t i o n s b e t w e e n  . . . .  61 
Dummy t o  v a r i a b l e  r e l a t i o n s  . 62 
L)ummy. composite . . . .  42 
Dummy. example o f  use  . 3 6 .  37. 38. 47 
Dummy. node c l a s s  . . . . . . .  18. 19. 22. 30. 40. 60 
. . . . . . . . . . . . . . .  Each 13 
ELEMENT short r e l a t i o n  . .  28.  36. 42 
ELEMENT. example of use . . .  35. 36 
Elements. number of . . . . . . . .  32 
Enemyof . . . . . . . . . . . . .  24 
EQUAL between composite objects . 41 
EQUAL shor t  r e l a t i o n  . . . . . . .  16. 21. 36. 41. 43 
. EQUAL example of use . . .  36. 37 
EQUALITY. pu t t i ng  r e s t r i c t i o n s  on . 4 8  
Event. node c lass  . . . . . . . . .  9.  26 
E v e n t s .  r e l a t i o n s  between . . . . .  12 
Every  . . . . . . . . . . . . .  9 .  13. 17. 18. 21. 22. 
24. 31. 51. 66 
E v e r y  i n  f r o n t  of con junc ted  nouns . . 34 
E x a m p l e .  . . . . . . . . . . . .  2 0  
E x i s t e n t i a l  q u a n t i f i e r  . . . .  ,, 13, 14 
Expansion of s h o r t  r e l a t i o n s  . 10 
F a c t u a l  d a t a  base, n e e d  f o r  . . . .  6 
F a t h e r  . . . . . . . . . . . . . .  12 
F i l lmore  , . . . . , . . . . . .  8, 7 0  
F i r s t  o r d e r  p r e d i c a t e  c a l c u l u s  . . 13, 58 
Fr iend  o f .  . . . . . . . . . . . .  24 
Genera l  s e n s e  i n t e r p r e t a t i o n  of nouns . . 21, 22, 31, 40  
boa1 , , . o . . . o . . m ~ . ~ ~ 5  
H 0 * . e . . 2 2 9 6 0  
I ~ e r . . . . . . . . , . . , . . . 2 2 , 6 0  
H i e r a r c h i c a l  s t r u c t u r e  . . , , , . 43 
Him. . . . . . . . . . . . . . .  2 2 , 6 0  
 HOW.......,,.......^^ 
Hypo the t i ca l  c o n d i t i o n  . .  56 
Hypothe t i ca l  statements  . , . . , , 1 1 ,  12 
I f  . . . . . . . . . . .  
IFTHEN s h o r t  r e l a t i o n  . . 
I m p l i c i t  q u a n t i f i e r  . . .  
I n  . . . . . . . . . . .  
I n d e x , .  . . . . . . . .  
. . . . . . . .  In fe rence  
I n f e r e n c e  p a t t e r n  . , . . 
In f e r ence  r u l e s  f o r  PHEU, 
. . . . . . . . .  I n s i d e  
I n t r o d u c t i o n  - . . . . .  
IS  . . . . . . . . . . .  
uIs81  r e l a t i n g  composi tes  
I t  . . . . . . . . . . .  
. . . . .  ITS q u a n t i f i e r  
. 1 17, 2 2 ,  54, 5 6 ,  62  
. . . . .  17, 18, 56 
. . . . .  14 
0 o 8 ,  1 1 ,  53 
, , . , , 7 2  
. 15, 16 
- o . - .  17, 54 
. .  CASE, BY e tc .  46  
, . . , . 5 3  
5 
. .  8, 1 1  
. . . . .  43 
, . . , . 2 2  
13, 14, 16, 19, 41 9 5 3 ,  
59  
. . . . . . . . . . . . . . . .  Key 17 
Knowledge and language unders tand ing  , . 5 
Knowledge, need f o r . .  . . . . . .  6 
. . . . . .  Limitation on t r u t h i t y  66 
. . . . . . . . . . . . . .  Makila  16. 69. 70.  71 
Name e m . . . . . . . m . . . . .  23 
. . . . . . . .  NAME s h o r t  r e l a t l o n  23 
. . . . . . .  NAME. example of use  37  
Nomen . . . . . . . . . . . . . . .  23 
. . . . . . . .  NOT. example of use 37. 41 
. . . . . . . . . . .  Noun phrases  22 
. . . . . . . . . . .  Noun. p l u r a l  3 2  
. . . . . . . .  NUM s h o r t  r e l a t i o n  32 
. . . . . . . .  NUM. example of use 37. 38. 41 
. . . . . . . . . . . . . .  Number 3 , 3 4 0  
. . . . . . . . . . . . . .  Numeral 33. 35. 39. 4 0  
. . . . . . . .  OBJ s h o r t  r e l a t i o n  9. 12. 17 
. . . . . . . . . .  O B J .  d e f i n i t i o n  46 
. . . . . .  OBJCASE. example of use 48 
. . . . .  OBJCOMPLEX shoat relation 42. 65 
OBJCOMPLEX. example of u s e  . . . .  43 
O b j e c t  of t h i s  r e s e a r c h  . . . . . .  5 
Object .  node c l a s s  . . .  9 
. . . . . .  OBJPRED shordt r e l a t i o n  45. 47 
OUJPRED. d e f i n i t i o n  . . . . .  46 
. . . . . . . . . . . . . . . .  Of 24. 34. 35. 3 6 .  39 
OF shor t  r e l a t i o n  . . . .  60 
Openquest ions . . .  I 9  
Over l app ing  se t s  . . . . .  21 
Packing of d a t a .  . . . . . . . . .  68 
Palme . . . . . . . . . . . . .  70 
Pa r t  . . . . . . . . . . . . . .  . 2 8 . 3 0 .  36 
PASS. d e f i n i t i o n  . . . . . . . . .  46 
PASS. example of use . . .  47 
PASSCASE. d e f i n i t i o n  . . . . . . .  46 
PASSCASE. examnle of use . 47 
Passive sense . . . . . . . . . . .  47. 48 
P a t t e r n  f o r  inference . . . . . . .  17. 55 
P a t t e r n  fo r  ques t ions  . . .  58 
P a t t e r n  matching . . . . . .  15 
Positive sentences . . . . . . .  22 
PHElI stwrt r e l a t i o n  . . . , , . 1 O  
PHED, d e f i n t i o n  . . . . . . . . . .  46 
PHEU, example of use . . . . . .  41 
PHEL), r e s t r i c t i o n  on . . . . . . .  4f3 
Predicate  c a l cu lu s  . . . . . . . .  5C! 
Predicate  c a l c u l u s ,  F i i r s t  order . . 13 
Predicate  nodas+ r e l a t i o n s  between , , 4 4  
Pred ica te ,  node c l a s s  . . . . . . .  9, 21 
Prepos i t ions  seen a s  r e l a t i o n s  . . 8 
Problems . . . . . . . . . . . . .  6 4  
Pronouns, back-referencing of . . .  l C ,  60 
Pronouns, persona1 . . . . . . . .  22 
P r o p e r t y  . . . . . . . . . . . . .  10, 23 
Ouant i f i e r  . . . . . . . . . . . .  13, 14 
. . . . . . . .  Ouant i f i e r  on event 51 
. . . . . . .  Q u a n t i f i e r ,  implicit 14 
Ouan t i f i e r ,  use of i n  deduction . . 14 Question . . . . . . . . . . . . .  19, 5U 
Quest ion,  example of translation . 59 
Refer-back iin t e x t  . m . . . . . .  30, 40,  60 
Refer-back wiitn siintjular and distriibutecl nouns . . 52 
References . , . . . . , . . . . .  70 
Heferenciincy . . . . . . . . . . . .  18 
Relat ions  between concepts . . , . 7 
Relatiions between Events . .  12 
Relatiions between s e t s  . 13 
Relatiions on s h o r t  relations . . 10 
Relat ions ,  long. . .  . . . . . . .  12 
Helatiions, shor t  . . . . . . . . .  9 
Requirements o n  data base s t r u c t u r e  . . 6 
Hestriictions of t h e  SQAP sys tem . 67 
Res t r i c t i ons ,  i n  time . . . . . . .  26, 27 
SAME relat i ion between compos;ites . 4 1 ,  42 
. . . . . . . .  SAME short  r e l a t i o n  43 
. . . . . . .  SAME, example of use 53 
. . . . . . . . . . . . .  Sandewall 8, 14,  16, 68, 69, 71 
. . . . . . . . . . . . . .  Schank 5, 71 
S e t . . . . e . . . . , . m m . , . 1 3  
Set relat i ions . . . . . . . . . . .  21 
S e t s ,  diisjoiint, overlappiing, s ingu la r  . . 2 1 
. . . . . . . . . . . . . . . .  Sex 22 
. . . . . . . . . . . . . .  Snapiro 8. 68.  71 
S t l ~  . . . . . . m . . . 2 ) 2 .  60 
. . . . . . . . . .  Short  relations 9 
. . .  Snort relations. expansion of 10 
. . .  Short relations. relations on 10 
. . . . . . . . . . . . . .  Simmons 8. 68.  71 
. . . . . . .  Singular sense of @'aw 51 
Singular s e t s  . . . . . . . . . . .  21 
. . . . . . . .  SIT short relation 20. 27 
Situation . . . . . . . . . . . . .  20. 27 
S i z e  of data base. reduction . . .  10 
Sjogren . . . . . . . . . . . . . .  69.  71 
Some . . . . . . . . . . . . . . .  13. 33 
SOIAE quan t i f i e r  . . . . . . . . . .  13. 14. 19 
. . . . . . .  SOME. example of use 37 
S ~ c e  r e s t r i c t i o n s  . . . . . .  26. 27 
Special sense of noun interpretation . . 2 1 .  4 0  
Species  . . . . . . . .  22 
S t ruc tu re  of da ta  base. requirements on . . 6 
Sub-question . . . . . . . . . . .  58 
SUUATTR short  rrelation . . . . . .  44. 48 
SUBPHED short relation . . . . . .  43 
SUBSET . . . . . . . . . . . m . .  16. 41 
SUBSET. restriction on . . . . . .  48 
SUPEHSET . . . . . . . . . . . . .  l o  
Swedish a b s t r a c t  . . . .  2 
Table of contents . . . . . . . .  3 
Temporal r e s t r i c t i o n  . . . . . . .  50 
. . . . . . . . . . . . . .  T e s t l e r  71 
That . . . . . . . . . . . . . . .  22 
THAT quantifier . . . . . . . . . .  17. 18. 55 
The . . . . . . . . . . . . . . . .  22 
. . . . . . . . . . . . . . .  T h e y  40 
. . . . . . . . . . . . . . .  T h i s  22 
T ime  . . . . . . . . . . . . .  66 
Time restrict ion . . . . . .  26. 27. 50 
Today . . . . . . . . . . . . . . .  I1 
. . . . . . . . . . . . . . .  True 1 1  
TRUE*S - * . ~ e e - . ~ e ~ - * . I l  
T r u t h i t y .  l i m i t a t i o n s  on . TI. I2 . 66 
. . . . . . . . . .  
 TWO.^.... 33 
Uniqueness of representation . 64 
Universal quantifier . . . . . . .  13 
. . . .  Variable to dummy relations 62 
. . .  Variable. created from d u m y  19 
........ Variable. example of 38 
Variable. in t r a n s l a t i o n  of ques t ion  . . 59 
. . . . . . .  Variable. node class 16. 17. 22. 42 
. . . . .  VAHIAULEs n e v e r  s i n l u l a r  21 
Var iab les .  conjunctions between . . 31 
. . . . . . .  Var iab les .  temporary 18 
. . . . . . . . . .  Virtual memory 63 
. . . . . . . . . . . . . . .  Which 19 
. . . . . . . . . . . . . . . .  vtny 19 
. . . . . . . . . . . . . . .  w i t h  0. 19. 27 
. . . . . . . . . .  Yes-no question 19. 58 

