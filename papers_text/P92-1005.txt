MONOTONIC  SEMANTIC  INTERPRETAT ION*  
Hiyan Alshawi and Richard Crouch 
SRI International 
Cambridge Computer Science Research Centre 
23 Millers Yard 
Cambridge CB2 1RQ, U.K. 
hiyan~cam, sri. corn rc~cam, sri. corn 
ABSTRACT 
Aspects of semantic interpretation, such as quan- 
tifier scoping and reference resolution, are often 
realised computationally b non-monotonic opera- 
tions involving loss of information and destructive 
manipulation of semantic representations. The 
paper describes how monotonic reference resolu- 
tion and scoping can be carried out using a re- 
vised Quasi Logical Form (QLF) representation. 
Semantics for QLF are presented in which the de- 
notations of formulas are extended monotonically 
as QLF expressions are resolved. 
1. INTRODUCTION 
The monotonicity property of unification based 
grammar formalisms is perhaps the most impor- 
tant factor in their widespread use for grammatical 
description and parsing. Monotonicity guarantees 
that the grammatical nalysis of a sentence can 
proceed incrementally by combining information 
from rules and lexical entries in a nondestructive 
way. By contrast, aspects of semantic interpreta- 
tion, such as reference and quantifier scope reso- 
lution, are often realised by non-monotonic opera- 
tions involving loss of information and destructive 
manipulation ofsemantic representations. A 'two- 
level' approach to semantic interpretation tends to 
result (Bronneberg el al. 1980), where an initial, 
underspecified representation is transformed into 
a separate, specified, representation. 
The goal of the work described here is to pro- 
vide a model for semantic interpretation that is 
fully monotonic in both linguistic and contextual 
aspects of interpretation, and which employs just 
one level of semantic representation - -  Quasi Log- 
ical Form (QLF). Contextual resolution of under- 
*This work on the Core Language Engine was carried 
out under CLARE, a collaborative project involving BP 
Research, British Aerospace, British Telecom, Cambridge 
University, SRI International nd the UK Defence Research 
Agency. The project is funded in part by the UK Depart- 
ment of Trade and Industry. 
specified QLF expressions involves the instantia- 
tion of QLF meta-variables. The semantics for the 
QLF formalism makes the denotation of a QLF 
formula a partial function to truth-values, with 
resolution leading to a monotonic extension of the 
denotation function. We believe that there are 
several advantages to the approach taken, includ- 
ing: 
? Order independence of resolution operations 
? Production of partial interpretations 
? Simpler interactions between phenomena 
? Reversibility for synthesis/generation 
The QLF formalism is a development of Alshawi 
1990. As before, underspecified QLFs are pro- 
duced on the basis of a unification grammar. Pre- 
viously, QLF resolution was only partially mono- 
tonic; full monotonicity required changes to the 
original QLF formalism and the resolution and 
scoping processes. These changes have been im- 
plemented in a further development of the Core 
Language Engine (Alshawi 1992), although we will 
ignore most implementation issues in the present 
paper. 
The paper is organized as follows. Section 2 
provides the syntax of the QLF language and Sec- 
tion 3 gives some illustrative xamples of mono- 
tonic QLF resolution. Sections 4and 5 present the 
semantics of the QLF formalism. Section 6 dis- 
cusses the relationship between monotonic inter- 
pretation, Pereira's categorial semantics (Pereira 
1990), and context change approaches to seman- 
tics. Section 7 mentions ome benefits of using 
QLF-like representations i  implementing natural 
language systems. 
2. SYNTAX OF  MONOTONIC  QLF  
We give here a syntactic description of the QLF 
constructs for terms and formulas 1.
1The notation we use in implementations is lightly dif- 
ferent but equivalent to that presented here. 
32 
A QLF term must be one of the following 
? a term variable: X, Y, . . .  
? a term index: +i, +j, . . .  
? a constant erm: 7, maryl,  . . .  
? an expressions of the form: 
term ( Idx, Cat, Re str, Quant, Reft ) 
The term index, Idx, uniquely identifies the term 
expression. Cat is a list of feature-value equations, 
for example <type=pro ,num=sing , . . .  >. Rest r  is 
a first-order, one-place predicate. For a resolved 
term, Quant will be a generalized quantifier (a car- 
dinality predicate holding of two properties) and 
Reft ,  the term's 'referent', will be a constant or 
term index. For an 'unresolved' term, Quant and 
Reft  may be meta-variables (_x,_y,. . . ) .  (QLF 
terms may also be functional applications, though 
we will ignore these here). 
A QLF formula must be one of the following 
? the application of a predicate to arguments: 
P red icate  (Argument 1 , . . . ,  A r~mentn)  
? an expression of the form: 
fo rm(Category ,  Rest r i c t ion ,  l~es o lu t  ion) 
? a formula with scoping constraints: 
Scope :Formula 
P red icate  is a first or higher-order predicate, in- 
cluding the usual logical operators and, not,  etc. 
An argument may be a term, a formula or a 
lambda abstract. Lambda abstracts take the form 
Var'Body where Body is a formula or an abstract 
and Vat is a variable ranging over individuals or 
relations. Rest r i c t ion  is a higher-order predi- 
cate. Reso lut  ion is a formula (the 'referent' of the 
form expression), or is a meta-variable if the form 
expression is unresolved. Scope is either a meta- 
variable when scoping information is underspeci- 
fled or a (possibly empty) list of term indices e.g. 
\ [+ i ,+ j \ ]  if term +i outscopes +j. The terms iden- 
tified by the indices must occur within Formula. 
The degree to which a QLF is unresolved cor- 
responds approximately to the extent to which 
meta-variables (appearing above as Quant, ReSt ,  
Scope, and Resolution) are  instantiated to 
the appropriate kind of object level expressions 
(though see Section 5 for an explicit characteri- 
zation of unresolved QLFs and partial interpreta- 
tions.) 
3. EXAMPLE QLF  RESOLUTIONS 
Resolution of QLFs through the instantiation of 
recta-variables has been applied to a wide range 
of phenomena. These include pronouns, definite 
descriptions, implicit or vague relations, ellipsis 
and temporal relations (see Alshawi 1990 for an 
account of some kinds of reference resolution in 
an earlier QLF formalism). For concreteness, we 
present a few illustrative examples of monotonic 
QLF resolution 2. We do not at tempt o describe 
the mechanism by which the resolutions are cho- 
sen. 
It will become vident hat the notation is closer 
to (the syntactic structure of) natural language 
than is the case for traditional ogical formalisms. 
For example, terms usually correspond to noun 
phrases, with information about whether e.g. they 
are pronominal, quantified or proper names in- 
cluded in the term's category. This makes the 
QLF representation easier to read than it might 
seem at first, once its initial unfamiliarity is over- 
come.  
Quant i f i ca t ion :  Every boy met a tall girl illus- 
trates the representation of quantification. The 
basic QLF analysis might be (ignoring tense): 
_s:meet(term(+b,<type=q,lex=every>,boy,_q,x), 
term(+g,<type=q,lex=a>, 
Y'and(girl(Y),tall(Y)),_r,_y)). 
A resolved structure could be obtained by instan- 
tinting the quantifier meta-variables _q and _r 
to fo ra l l  and ex is ts  3, and the scoping meta- 
variable s to \[+b,+g\] for the 'Y3' reading: 
\[+b,+g\]: 
meet(term(+b,<type=q,lex=every>, 
boy,forall,+b), 
term(+g,<type=q,lex=a>, 
Y'and(girl(Y),tall(Y)),exists,+g)). 
In a restriction-body notation for generalized 
quantifiers, the truth conditional content of this 
resolved expression corresponds to 
forall(B,boy(B), 
exists(G,and(girl(G),tall(G)), 
meet(B,G))). 
Anaphora :  Every boy claims he met her illus- 
trates the treatment of anaphora (in a context 
2Al though the QLF  f ramework can support  a variety 
of a l ternat ive semant ic  analyses for specific phenomena,  to 
provide concrete i l lustrat ions one or other  analysis needs to 
be chosen. In the following examples,  it should be possible 
to separate part icu lar  analyses from the general po ints  we 
wish to make about  monoton ic  interpretat ion.  
3The benefits of being able to resolve determiners  to 
quanti f iers are discussed in Alshawi  1990. For example,  
determiners  like some (plural) could be resolved to collec- 
tive or d istr ibut ive quantif iers,  three could be interpreted as 
mean ing  either 'exact ly three'  or 'at least three' ,  and  if need 
be, bare plurals like dogs could be variously interpreted as 
mean ing  'some dogs',  'all dogs'  or 'most  dogs'.  
33 
where Mary is assumed to be salient) 4
Unresolved: 
_sl:claim( 
term(+b,<type=q,lexfevery>,boy,_ql,_x), 
_s2:meet(term(+hl,<type=pro,lex=he>, 
male,_q2,_y), 
term(+h2,<type--pro,lex=her>, 
female,_q3,_z))). 
Resolved: 
\[+b\]:claim( 
term(+b,<type=q,lex=every>, 
boy,forall,+b), 
\[+hl\]:meet(term(+hl,<type=pro,lex=he>, 
male,exists,+b), 
term(+h2,<type=pro,lex=her>, 
female,exists,mary))). 
The pronominal term for her is resolved so that it 
existentially quantifies over female objects ident~ 
cal to mary. The 'bound variable' pronoun he has 
a referent coindexed with its antecedent, +b. The 
scope of +h2 is leK unspecified, since exactly the 
same truth conditions arise if it is given wide or 
narrow scope with respect o every boy or he. 
Vague Re lat ions :  An unresolved QLF expres- 
sion representing the noun phrase a woman on a 
bus might be a term containing a form that arises 
from the the prepositional phrase modification: 
term(+w,<lexsa,..>, 
X'and(woman(X), 
form(<type=prep,lex=on>, 
R'R(+w,term(+b,<lex=a,..>, 
bus ,_q2,_b) ) ,  
_f)), 
_ql ,_w).  
Informally, the form is resolved by applying its re- 
striction, R 'R( . . .  ) to an appropriate salient pred- 
icate, and instantiating the form's meta~variable, 
f ,  with the result. In this case, the appropriate 
predicate might be inside, so that _f is instant~ 
ated to 
inside(+w,term(+b,<lex=a,..>,bus,_q2,_b)). 
Tense: One way of treating tense is by means of 
a temporal relation form in the restriction of an 
event term. For John slept we might have: 
_s :s leep( term(+e,<type=event>,  
E - form(<type=tre l , tense=past>,  
R 'and(event(E) ,R(E) ) ,  
_t) ,  
_ql ,_e) ,  
term(+j,<type=name>, 
J 'name( J , ' John ' ) , _q2,_ j ) ) .  
4 Here we simplify the issues arising out of tile semantics 
of intensional, sentential complement verbs like claim. 
Since the tense on the temporal relation category 
is past, the resolution says that the event occurred 
before a particular speech time, t7: 
\[+el : 
sleep( 
term(+e, <type=event>, 
E~f orm (<type=trel, t enseffipast >, 
R'and(event (E) ,R(E) ), 
and (event (E), precede (E, t7) ) ), 
exists ,+e), 
t erm(+j, <typefname>, 
J'name (J, ' John ' ), exists, j ohnl ) ). 
The resolution and(event (E)  ,p recede(E , tT ) )  
is the result of applying the form's restriction 
K 'and(event  (E),  R(E)) to a contextually derived 
predicate, in this case E l 'p recede(E l , tT ) .  
QLF is not committed to an event based treat- 
ment of tense. An alternative that has also been 
implemented is to treat the verbal predication 
s leep( . . . )  as a temporal form, whose category 
specifies tense and aspect information. 
Ell ipsis: A more complex example, involving el- 
lipsis and quantification, is provided by 
Each boy claimed he was clever, and so 
did John. 
A partially resolved QLF, but one in which the 
ellipsis is still unresolved, might be as follows (ig- 
noring tense and event variables): 
and( 
claim (term (+b, <lex=every>, 
boy ,ex i s ts  ,+b),  
clever (term (+h, <lexfhe>, 
male, exists ,+b) ) ), 
f orm (<type=vpellipsis>, 
P'P (term (+j ,<typefname>, J 'name(J ,  ' John' ) ,  
ex i s ts ,  john) ) ,  
_e) ) .  
This is a conjunction of the QLF for the an- 
tecedent clause (Each boy claimed he was clever 
under a bound pronoun reading) with a form ex- 
pression for the verb phrase ellipsis. Solutions for 
instantiating the meta~variable _ for the ellipsis 
are the result of applying a property Pl, derived 
from the antecedent clause, to the term with in- 
dex +j. The sentence has two readings: a sloppy 
reading where John claims that he is clever, and a 
strict one where John claims that each of the boys 
is clever. The choice between a strict or sloppy 
reading depends on how the term he is reinter- 
preted in the ellipsis resolution. Intuitively, strict 
identity involves referring to the same object as 
before, whereas sloppy identity involves referring 
to a relevantly similar object. 
In QLF, a strict reading results from re- 
interpreting the ellipsis pronoun as co-indexed 
with the original, i.e. taking Pl to be: 
84 
X'ciair .  (X, c lever  (+h)). 
Constraints on legitimate scoping (Section 5) force 
+b and +h to take wide scope over both the an- 
tecedent and ellipsis. The sloppy reading results 
from re-indexing the ellipsis pronoun so that it has 
the same restriction and category as the original, 
but is resolved to +j and has a new index +hl. 
This corresponds to taking P1 to be: 
X~claim (X, c lever  (t erm (+hl, <lex=he> 
male, exists,+j))). 
More generally, in Crouch and Alshawi 1992 we 
explore the claim that solutions to verb phrase el- 
lipsis have the general form: 
P1 = X l ' . .X i 'S \ [X l / s l  . . . .  X i / s i  . . . .  tn /sn \ ] .  
That  is, P1 is formed out of an antecedent clause 
QLF S by abstracting over the 'parallel elements' 
s l . . s i ,  perhaps with some additional substitu- 
tions for terms s i+ l . . sn  in S (E\[a/b\]  is the ex- 
pression E with a substituted for b). This seems 
to be sufficient to cover the range of examples 
treated by Dalrymple, Shieber and Pereira (1991), 
but that is a specific linguistic claim about verb 
phrase ellipsis in English and not central to the 
present paper. 
4. SEMANTICS  FOR QLF  
In this section we outline the semantics of the QLF 
language in a way that is as close as possible to 
classical approaches that provide the semantics in 
terms of a function from models to truth values. 
The main difference is that denotation functions 
will be partial functions for some unresolved QLF 
formulas, reflecting the intuition that these are 
'partial interpretations'. The denotation of a QLF 
expression will be extended monotonically as it is 
further resolved, a fully resolved formula receiving 
a total function as its denotation. The semantics 
is not intended to describe the resolution process. 
Before giving evaluation rules for the QLF lan- 
guage, we first present a simplified version of the 
semantics for fully instantiated QLF expressions. 
This is for expository purposes only; the full QLF 
semantics does not depend on the simplified ver- 
sion. 
4.1 S IMPL IF IED SEMANTICS  
We will use the notation \[\[~.\]\]m for the truth value 
of an expression ~. with respect o a model m (but 
will leave m implicit), m includes an interpretation 
function I for mapping constants and predicates 
into domain individuals and relations. Also left 
implicit is a function assigning values to variables, 
which is required for the evaluation of lambda ab- 
stracts as characteristic functions. 
Constructs in the 'standard'  predicate logic sub- 
set of QLF receive their semantics with the usual 
evaluation rules, for example: 
? \[\[P(al . . . . .  an)\]\] = 1 iff I (a l )  . . .  I(an) are in 
the relation I(P), and 0 otherwise. 
? \[\[and(F1,F2)\]\] = 1 iff \[\[F1\]\]=I and \[\[F2\]\]=l, 
and 0 otherwise. 
The evaluation rule for a formula F with a scop- 
ing variable instantiated to \ [ I , J  . . . .  \] and con- 
taining a term T----term(I,C,R,Q,A) is as follows: 
? \ [ \ [ \ [ I , J  . . . .  \] :F\]\]=I iff \[\[Q(R' , F ' ) \ ] \ ]= I ,  and 0 
otherwise, where 
R' is X'(and(R(X),X=A))\[X/ I \ ] ,  and 
F '  is X ' ( \ [ J  . . . .  \] :and(F,X=A))\[X/T, X/I\] 
This evaluation rule states that a formula with a 
scoping constraint list may be evaluated by 'dis- 
charging' the term for the first index on the list 
with respect to a formula with a reduced scop- 
ing constraint. The rule discharges the term by 
abstracting over occurrences of the term and its 
index, and applying the generalized quantifier Q 
to the term's restriction and the abstract derived 
from the formula. In Section 5 we will say more 
about the ramifications of adopting this type of 
quantifier evaluation rule. Note that this rule is 
also applicable to resolved terms such as pronouns 
for which q has been resolved to ex is ts  and T is 
a constant or a scoped variable. 
The denotation assigned to a resolved formula 
form(C, R, F '  ) in which the resolution variable has 
been instantiated to a formula F '  is simply: 
? \ [ \ [ form(C,R,F ' ) \ ] \ ]=l  iff \[\[F'\]\]=I, and 0 other- 
wise. 
4.2 QLF  SEMANTICS  
As mentioned earlier, the denotation of a formula 
F in the QLF language will be a possibly par- 
tial function (\[\[... \]\]) from models to truth values. 
Again we use the notation \[\[F\]\]m for the truth 
value of a formula F with respect to a model m 
(explicit reference to a variable assignment func- 
tion is again suppressed). For interpretation to be 
monotonic, we want \[\[G\]\] to be an extension of \[\[F\]\] 
whenever G is a more resolved version of F, and in 
particular for \[\[G\]\] to be total if G is fully resolved. 
We will define \[\[...\]\] for QLFs in terms of a re- 
lation W between formulas, models and truth val- 
ues. Evaluation rules will be given for W(F,m,v), 
but since more than one rule may apply (or a rule 
may apply in more than one way), W will in gen- 
eral be a relation. The relationship between \[\[... \]\] 
and W for a formula F is as follows: 
35 
? \[\[F\]\]m=l iff W(F,m,1) but not W(F,m,0); 
? \[\[F\]\]m:0 iff W(F,m,0) but not W(F,m,1); 
? \[\[F\]\]m undefined iff W(F,m,1) and W(F,m,0). 
Henceforth we will leave the model argument m 
implicit. The evaluation rules for W will generally 
take the form 
W(F,v) if W(F',v) 
where F'  contains one fewer unresolved expression 
than F (so that it is possible for the process of rule 
application to terminate). The use of if rather 
than iffin these rules means that it is possible for 
rules producing more than one value v to apply 
and hence for \[IF\]\] to be partial. 
The model provides an interpretation function 
I mapping constants and predicates to individual 
and relations. We will also need to assume a rela- 
tion S(C,H) (for 'salient') between QLF categories 
C and QLF expressions H standing for individuals, 
quantifiers, or predicates, but the precise nature of 
the salience relation and the way it changes during 
a discourse are not important for the evaluation 
rules for QLF given here. The intuitive motiva- 
tion for S is that the category in an unresolved 
QLF expression restricts the set of possible refer- 
ents for that expression. S is discussed further in 
Section 5. We are now in position to present he 
evaluation rules, which we number Q1, Q2, etc. 
For standard connectives we have the obvious 
evaluation rules, for example, 
Q1 W(and(F,G),I) if W(F,1) and W(G,1). 
Q2 W(and(F,G),0) if W(F,0) or W(G,0). 
Q3 W(not (F) ,l) if W(F,0). 
Q4 W(not(F),0) if W(F,1). 
Two rules applicable to a formula F containing a
term with uninstantiated referent and quantifier 
meta-variables: 
Q5 W(F ,v ) i f  W(F\[existsl_q,h/_z\],v) 
W(RCA) ,1), 
where: 
F is a formula containing the term 
T=term( I  ,C ,R ,_q ,_ r ) ,  and 
h is term such that S(C,A). 
and 
Q6 W(F,v) if W(F\[Q/_q, I /_r\] ,v) ,  
where: 
F is a formula containing the term 
T=term(l,C,R,_q,_r), and 
Q is a quantifier such that S(C,Q). 
(The substitutions for the meta-variables _r and 
_q are to be read as part of the evaluation rule.) 
A rule applicable to a formula F in which a (pos- 
sibly unscoped) quantified term occurs: 
Q7 W(F,v) if W(Q (R ' ,F ' )  ,v), 
where: 
F is a formula containing the term 
T=term( I ,C ,R,Q,A) ,  
R' is X" (and(R(X), X=A) ) IX/I\], and 
F' is X'(a_nd(F,X=A))\[X/T, X/I\]. 
A rule applicable to a formula with an instantiated 
seoping constraint 
Q8 W(EI, J  . . . .  \] :F,v) if W(Q(R' ,F ' ) ,v) ,  
where: 
F is a formula containing the term 
T=term(I,C,R,Q,h), 
R' is X'(and(R(X),X=A))\[X/I\], and 
F' is X ' ( \ [ J  . . . .  \] :and(F,X=A))\[X/T, X/I\]. 
We also need a trivial rule for a formula with an 
uninstantiated scoping constraint so that it re- 
duces to application of other rules: 
Q9 W(_s:F,v) if W(F,v). 
Two rules are applicable to form expressions, cor- 
responding to the cases of an uninstantiated or 
instantiated resolution meta-variable: 
Q10 W(F,v) if W(F\[R(P)/_r\],v) 
where: 
F is a formula form(C,R,_r )  
P is a predicate such that S(C,P). 
Q l l  W( for ra(C,R,F ' ) ,v ) i f  W(F',v) 
where F' is a QLF formula. 
In a more complete description of the semantics 
we would also have to state that the evaluation 
rules provided give the only way of determining 
membership of the relation W. 
5. NOTES ON THE SEMANTICS  
Monoton lc l ty :  In this paper we are using 
monotonicity in two senses which (by design) turn 
out to be consistent. The first is a syntactic no- 
tion for QLF representations (instantiation rather 
than destructive manipulation), while the second 
is semantic: 
1. 
2. 
F1 is a more resolved version of F2 if F1 can be 
obtained by instantiating zero or more meta- 
variables in F2. 
F1 is a less partial interpretation than F2 if 
\[IF1\]\] is an extension of \[\[F2\]\]. 
The claim of monotonicity for QLF is that for for- 
mulas F1 and F2, if F1 is a more resolved version 
of F2 then F1 is a less partial interpretation than 
F2. 
36 
Scoping Const ra in ts :  The quantification 
rules, (Q7) and (Q8), (i) select a term from a for- 
mula, (ii) discharge all occurrences of the term and 
its index in the formula and the term's restriction, 
replacing them by a variable, and (iii) apply the 
term's quantifier to the discharged restriction and 
formula. The difference between (QT) and (Q8) is 
simply that the latter also discharges the head of 
the scoping list, in this case by removing it rather 
than by replacing it. (Keep in mind that the dis- 
charge and replacement operations take place at 
the level of the evaluation rules for QLF; they are 
not applied to the QLF expressions representing 
natural language meanings themselves). 
As with Lewin's scoping algorithm, (Lewin 
1990), there are no constraints built explicitly into 
the QLF semantics on where a quantification rule 
for a term may be applied, or indeed on the num- 
ber of times it may be applied. However, several 
constraints arise out of (a) the absence of any se- 
mantic rules for evaluating isolated terms, term 
indices or scope lists, and (b) the requirement that 
a term be selected from a formula so that its quan- 
tifier is known. 
The emergent conditions on legitimate scoping 
are 
1. No term may be quantified-in more than once: 
The first application of the quantifier rule dis- 
charges the term. Subsequent applications of 
the rule lower down in the evaluation would 
fail to select an undischarged term. 
2. When a term's index occurs in a scope list, the 
quantifier ule for the term must be applied 
at that point: It must be applied to discharge 
the head of the scope list, and by (1) above 
cannot additionally be applied anywhere lse. 
3. All occurrences of a term's index must oc- 
cur within the scope of the application of the 
term's quantifier ule: The quantification rule 
will only discharge indices within the formula 
to which it is applied. Any occurrences of 
the index outside the formula will be undis- 
charged, and hence unevaluable. 
4. If a term R occurs within the restriction of 
a term H, and R is to be given wide scope 
over the restriction, then R must also be given 
wide scope over H: Otherwise, suppose H is 
given wide scope over R. Term H will first be 
discharged, replacing the term, and with it its 
restriction, in the formula to which the rule 
is applied. Then the quantification rule for R 
needs to be applied to the discharged formula, 
but the formula will not contain an occurrence 
of the term R, making the rule inapplicable. 
The last two constraints have often been at- 
tributed to restrictions on free variables and vacu- 
ous quantification. The attribution is problematic 
since open formulas and vacuously quantified for- 
mulas are both logically well defined, and without 
suspect appeal to the syntax of the logical formal- 
ism they cannot be ruled out as linguistically ill- 
formed. By contrast, QLF makes these violations 
semantically unevaluable. 
Unscoped Terms:  When a term's index is not 
mentioned in any scope list, the term may be 
quantified in at any point within the formula. For 
anaphoric terms whose referent has been resolved 
to some individual constant, it does matter where 
the quantification rule is applied; since the term 
existentially quantifies over things identical to a 
single object, the scope of the quantification is im- 
material. It is thus convenient to leave anaphoric 
terms like this unscoped in QLF. Although this 
makes the QLF look (syntactically) as though it is 
not fully resolved, semantically it is. For other un- 
scoped terms, alternative applications of the quan- 
tifier rule may well lead to distinct truth condi- 
tions, and in these cases the QLF is genuinely un- 
resolved. 
Context  Dependence:  Fully resolved QLFs 
are context-independent i  the same sense that 
holds for closed formulas in traditional predicate 
logic (i.e. if the interpretation of the constant 
symbols in the language is fixed). Unresolved 
QLFs behave more like open formulas, and there is 
an analogy between assignments o unbound vari- 
ables in predicate logic and possible resolutions of 
meta-variables admitted by the salience relation 
S. S(C,H) should be thought of as providing QLF 
expressions whose denotations are possible refer- 
ents for unresolved expressions with category C. 
(It would have been possible to define S as a direct 
relation between categories and referents, but this 
complicates the statement of its role in resolution 
and in the semantic definitions.) We used S above 
in the definition of QLF semantics, but it is also 
central to NL processing: being able to compute S
can clearly play an important role in the process of 
reference resolution during NL interpretation and 
in the process of building descriptions during NL 
synthesis. (The computational nalogue of S was 
implemented as a collection of 'resolution rules' in 
Alshawi 1990.) 
An important question is what to allow as possi- 
ble expressions in the range of S. One observation 
is that as the range is widened, more NL resolu- 
tion phenomena are covered. A rough summary is 
as follows: 
? constants: intersentential pronouns 
? predicate constants: compound nouns, prepo- 
sitions 
37 
? quantifiers: vague determiners 
? indices: bound variable, intrasentential pro- 
nouns  
? predicates built from NP restrictions: one- 
anaphora 
? predicates built from previous QLFs: inter- 
sentential ellipsis 
? predicates built from current QLF: intrasen- 
tential ellipsis 
6. RELATED APPROACHES 
Viewed from a slightly different perspective, 
monotonic interpretation has a number of points 
of contact with Pereira's categorial semantics 
(Pereira 1990). Put briefly, in categorial seman- 
tics, semantic evaluation is represented as deduc- 
tion in a functional calculus that derives the mean- 
ings of sentences from the meanings of their parts. 
Considerable mphasis is placed on the nature of 
these semantic derivations, as well as on the fi- 
nal results of the derivations (the 'logical forms' 
of sentences). 
One significant advantage of this approach is 
that constraints on legitimate scoping emerge nat- 
urally from a consideration of permissible deriva- 
tions of sentence meaning, rather than arising arti- 
ficially from syntactic onstraints imposed on log- 
ical forms. Derivations involving quantified terms 
first introduce an assumption that allows one to 
derive a simple term from a quantified term. This 
assumption is later discharged by the application 
of a quantifier. Conditions on the appropriate in- 
troduction and discharge of assumptions in natu- 
ral deduction systems impose restrictions on the 
way that quantifiers may legitimately be applied. 
For example, a quantifier assumption may not be 
discharged if it depends on further assumptions 
that have not themselves been discharged. This 
prevents the occurrence of free variables in logical 
form, but without appeal to the syntax of logical 
form. 
The discharge of terms and term indices when 
evaluating QLF closely parallels the discharge of 
quantifier assumptions in categorial semantics. In- 
deed, the terms and the indices are precisely the 
assumptions introduced by quantified expressions, 
and which need to be discharged. Furthermore, 
the different orders in which quantifier assump- 
tions may be discharged in categorial derivation 
correspond to the choices that the quantifier ules 
permit for discharging quantified terms. 
Where monotonic interpretation and categorial 
semantics part company is on the degree of ex- 
plicitness with which semantic derivations are rep- 
resented. In categorial semantics, derivation is a 
background process that builds up logical forms, 
but is not explicitly represented in the semantic 
formalism. By contrast, the annotation of QLFs 
with scope lists provides an extra level of informa- 
tion about how the derivations proceed. In partic- 
ular, they indicate which evaluation rules should 
be applied where. 
QLF thus provides a (usually partial) specifica- 
tion of a semantic derivation, showing (a) what the 
initial 'premises' are (roughly, lexical meanings, al- 
though these too may only be partially specified), 
and (b) the rules by which the 'premises' are com- 
bined. QLF resolution amounts to further instan- 
tiating this specification. This view of QLF can be 
contrasted with Logical Form as it is normally un- 
derstood, which represents the results of carrying 
out a semantic derivation. 
The difference between specifying a derivation 
and carrying it out is what makes resolution order 
independent in monotonic interpretation. Making 
a resolution to QLF only specifies when and how 
an expression should be evaluated uring seman- 
tic derivation; it does not carry out that part of 
the derivation. Where no distinction is drawn be- 
tween making a resolution and carrying out the 
corresponding step of the derivation, the order of 
resolution can be important. Thus, for Dalrymple, 
Shieber and Pereira (1991), where this distinction 
is not drawn, the precise interleaving of scope and 
ellipsis resolution determines the interpretation of
the sentence. In QLF, resolutions dictate the order 
in which various steps of the derivation are carried 
out, but the resolution order does not reflect the 
derivation order. 
Distinguishing between specifying and perform- 
ing a derivation also means that a monotonic 
treatment of ellipsis resolution does not need to 
resort to higher-order unification. Dalrymple, 
Shieber and Pereira use higher-order unification 
to 'unpick' the composition of constituent mean- 
ings obtained in the semantic derivation from the 
ellipsis antecedent. Some of these meanings are 
then put back together to produce a predicate that 
can be applied to the ellipsis arguments. Since 
monotonic resolution does not carry out the final 
composition of meanings, but merely sets out con- 
ditions on how it is to take place, there is no need 
to unpick composed meanings and put them back 
together again. 
It is worth pointing out that monotonic inter- 
pretation is compatible with approaches to mean- 
ing as a transition between contexts or information 
states, and where the order in which transitions 
are made is significant (e.g. Veltman 1991). In 
such a framework, monotonic interpretation would 
amount to making decisions about which transi- 
tions to take when, but would not involve putting 
those decisions into action. The monotonicity in 
38 
monotonic interpretation thus refers to the way in 
which alternative derivations of sentence meanings 
may be chosen, but not to the semantic effects of 
those sentence meanings. 
7. IMPLEMENTATION BENEF ITS  
A description of the language processing mecha- 
nisms to which we have applied the monotonic 
semantics model is beyond the scope of this pa- 
per. However, we believe that the QLP represen- 
tation presented here brings significant advantages 
to implementing mechanisms for reference resolu- 
tion, scoping, preference and generation. 
Re ference  and  Scoping: The order indepen- 
dence of resolution operations allows for a variety 
of control structures in implementing a resolution 
mechanism. We find it convenient to make a bot- 
tom up pass through QLFs making reference res- 
olutions, followed by a stage of scoping resolution, 
and to iterate over this should any of the resolu- 
tions introduce further unresolved expressions. 
The salience relation S can be implemented as 
procedures that search for properties, objects or 
indices in context. Scoping proceeds imply by 
the non-deterministic instantiation ofscoping con- 
straints, subject to the restrictions imposed on 
evaluable QLFs (Section 5), plus techniques for 
ignoring logically equivalent scopings, as for ex- 
ample described by Moran (1988). 
P re ference  and  D isambiguat ion :  A resolved 
QLF preserves all the information in the original 
unresolved QLF, and also records the correspon- 
dence between resolved and unresolved expres- 
sions. This makes it possible to define preference 
metrics that can be used for ranking alternative 
interpretations independently of the search strate- 
gies used to derive them. For example, in the case 
of scoping, these metrics can combine information 
about how far a quantifier was 'raised' with infor- 
mation about the surface form of its determiner. 
Preference ranking over alternative resolutions fa- 
cilitates automatic disambiguation of input. Inter- 
active disambiguation can make use of generation 
from resolved QLFs for confirmation by a user. 
Generat ion :  There is a strong connection be- 
tween monotonicity and reversibility in language 
processing systems. Monotonicity of unification 
means that algorithms uch as head-driven gener- 
ation (Shieber et al1990) can be applied to gram- 
mars developed for analysis. We use a variant 
of this algorithm for generating from QLFs, and 
the monotonicity of semantic interpretation means 
that the grammar used for generating from un- 
resolved QLFs (the normal 'output'  of the gram- 
mar) can also be used for generation from resolved 
QLFs. 
In parallel to the distinction between grammat- 
ical analysis (of NL into unresolved QLFs) and 
interpretation, we make the distinction between 
grammatical synthesis (of NL from QLFs) and de- 
scription. Description is the process of deriving 
a QLF from which synthesis proceeds by taking 
a fact (e.g. a database assertion) as input. We 
hope to report on our approach to description else- 
where. However, one of the principles of QLF- 
based description is that while interpretation i - 
stantiates referent fields in underspecified QLFs, 
description involves instantiating category and re- 
striction fields for QLFs in which referent fields 
are already instantiated. The preference metrics 
applied to rank alternative interpretations can be 
applied equally well to ranking resolved QLFs pro- 
duced by a nondeterministic description process, 
so there is a sense in which the preference mecha- 
nism can also be made reversible. 
REFERENCES 
Alshawi, H. 1990. "Resolving Quasi Logical Forms". 
Computational Linguistics 16:133-144. 
Alshawi, H., ed. 1992 (in press). The Core Language 
Engine. Cambridge, Massachusetts: The MIT 
Press. 
Bronneberg, W.J.H.J., H.C. Bunt, S.P.J. Landsber- 
gen, R.J.H. Scha, W.J. Schoenmakers and E.P.C. 
van Utteren. 1980. "The Question Answering 
System PHLIQAI". In L. Bole (ed.), Natural 
Language Question Answering Systems. Macmil- 
lan. 
Crouch, R. and H. Alshawi. 1992. "Ellipsis and Dis- 
tributivity in Monotonic Interpretation", Techni- 
cal Report, SRI International, Cambridge, UK. 
Dalrymple, M., S. M. Shieber, and F. C. N. Pereira. 
1991. "Ellipsis and Higher-Order Unification". 
Linguistics and Philosophy, 14:399-452. 
Lewin, I. 1990. "A Quantifier Scoping Algorithm with- 
out a Free Variable Constraint", Proceedings of 
COLING 1990. 
Moran, D. B. 1988. "Quantifier Scoping in the SRI 
Core Language Engine". Proceedings of the 26th 
Annual Meeting of the Association for Computa- 
tional Linguistics, 33-40. 
Pereira, F. C. N. 1990. "Categorial Semantics and 
Scoping", Computational Linguistics 16:1 1-10. 
Shieber, S. M., G. van Noord, F. C. N. Pereira, and 
R. C. Moore. 1990. "Semantic-Head-Driven Gen- 
eration". Computational Linguistics 16:30-43. 
Veltman, F. 1990. "Defaults in Update Semantics", in
H. Kamp (ed), Conditionals, Defaults and Belief 
Revision, DYANA deliverable R2.5.A. 
39 
