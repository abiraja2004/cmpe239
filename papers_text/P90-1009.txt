DESIGNER DEF IN ITES  IN LOGICAL  FORM 
Mary  P. Harper* 
School  of E lect r i ca l  Eng ineer ing  
Purdue  Un ivers i ty  
West  La fayet te ,  IN 47907 
Abst ract  
In this paper, we represent singular definite noun 
phrases as functions in logical form. This represen- 
tation is designed to model the behaviors of both 
anaphoric and non-anaphoric, distributive definites. 
It is also designed to obey the computational con- 
straints suggested in Harper \[Har88\]. Our initial 
representation f a definite places an upper bound 
on its behavior given its structure and location in 
a sentence. Later, when ambiguity is resolved, the 
precise behavior of the definite is pinpointed. 
1 Introduct ion 
A goal of natural language research is to provide 
a computer model capable of understanding En- 
glish sentences. One approach to constructing this 
model requires the generation of an unambiguous 
internal representation for each sentence before at- 
tempting to represent subsequent sentences. Natu- 
ral language systems that attempt o guess the in- 
tended meaning of a sentence without considering 
subsequent sentences usually make no provision for 
recovery from incorrect guesses ince that would re- 
quire storing information about the ambiguity of the 
sentence. Hence, this approach may require the pro- 
cessing of several sentences before enough informa- 
tion is available to determine the intended meaning 
of the sentence being represented. However, in or- 
der to make the inferences necessary to resolve some 
ambiguities, ome internal representation is needed 
for both the current sentence as well as subsequent 
sentences. A more powerful approach is to leave 
the ambiguity unresolved in an intermediate r pre- 
sentation until the necessary information has been 
processed. We adopt this second approach, which 
advocates mapping parsed sentences into an inter- 
mediate level of representation called logical form 
*This paper contains results from the author's the- 
sis in the Computer Science Department at Brown Uni- 
versity. The paper has benefited from discussions with 
Eugene Charniak, Kate Sanders, Leora Morgenstern, 
Tom Dean, Paul Harper and Frederic Evans. The work 
was supported in part by the NSF grants IST 8416034 
and IST 8515005, ONR grant N00014-79-C-0529, and 
AFOSR grant F49620-88-c-0132. 
62 
\[SP84; All87; Har88\]. Logical form partially spec- 
ifies the meaning of a sentence based on syntactic 
and sentence-level information, without considering 
the effect ofpragmatics and context. Later, as more 
information becomes available, the representation f 
the sentence is incrementally updated until all am- 
biguities have been resolved. 
In the literature, two sources of ambiguity have 
been handled using logical form, quantifier scop- 
ing (see \[SP84; Al187\]) and pronoun resolution (see 
\[Har88; Har90\]). In this paper, we will discuss the 
use of logical form for handling the ambiguities in 
the meanings of singular definite noun phrases. But 
first, it will be useful to briefly review the logical 
form for pronouns. 
2 Pronouns  in Logical Form 
Pronouns are a source of underspecification in a sen- 
tence which can be handled in logical form. The 
antecedent of a pronoun cannot be immediately de- 
termined when the sentence containing it is parsed. 
Contextual and syntactic onstraints combine to al- 
low a listener/reader to decide on the antecedent for 
a certain pronoun. In Harper \[Har88; Har90\], we 
devised a logical form representation for pronouns. 
This representation divides the process of deter- 
mining the meaning of a pronoun into two phases. 
First, the representation for the pronoun is deter- 
mined using only syntactic and sentence-level infor- 
mation. Then, once the antecedent is determined, 
a feat which often requires pragmatic and contex- 
tual information available in subsequent sentences, 
we provide a way to update our logical form to in- 
dicate this information. 
Our logical form representation for pronouns was 
designed with two goals in mind. First, we required 
our representation to be compatible with the goal of 
devising a computational model of language com- 
prehension. In fact, we defined three constraints 
for using logical form in a computational framework 
(from \[Har88\] and \[Harg0\]). 
1. Compactness  Const ra int :  Logical form 
should compactly represent ambiguity. 
2. Modu lar i ty  Const ra in t :  Logical form 
should be initially computable from syntax 
and local (sentence-level) semantics. In par- 
ticular, logical form should not be dependent 
on pragmatics, which requires inference and 
hence, internal representation. 
3. Formal  Cons istency Constra int :  Further 
processing of logical form should only disam- 
biguate or further specify logical form. Logical 
form has a meaning. Any further processing 
must respect hat meaning. 
First, the compactness constraint captures the spirit 
of logical form as presented by Allen \[Al187\]. Sec- 
ond, if the modularity constraint is violated, the 
value of computing logical form is lost. Finally, the 
formal consistency constraint keeps us honest. Ini- 
tially, logical form provides a composite representa- 
tion for a sentence. However, as more information 
becomes available, then the meaning of the sentence 
will be incrementally updated until all ambiguity is 
resolved. We cannot modify logical form in any way 
that contradicts its original meaning. 
The second goal of our approach was to accu- 
rately model the linguistic behavior of pronouns 
while obeying our logical form constraints. Since 
pronouns have a range of behaviors between vari- 
ables on the one hand and constants on the other, 
the initial logical form for a pronoun must be com- 
patible with both extremes (to model the range of 
pronoun behaviors and to be consistent with the 
compactness and formal consistency constraints). 
Hence, we provided a composite representation for 
a pronoun, one compatible with any possible an- 
tecedent i can have given its position in a sentence. 
Pronouns in a sentence are represented as part of 
the process of providing logical form for that sen- 
tence. We enumerate the important features of a 
sentence's representation. 
1. A sentence is represented as a predicate- 
argument structure, with subjects lambda 
abstracted to handle verb phrase ellipsis. 
Lambda operators are necessary for handling 
examples of verb phrase ellipsis. The second 
sentence in Example 1 is a sentence with verb 
phrase ellipsis (also called an elided sentence). 
Example  1 
Trigger Sentence: Fredi loves hisi wife. 
Elided Sentence: Georgej does too. 
Meanings : 
a. George loves Fred's wife. 
b. George loves George's wife. 
Assuming that the meaning of the elided verb 
phrase is inherited from the representation f 
the trigger sentence's verb phrase, then the the 
pronoun his in the trigger verb phrase must be 
able to refer indirectly to the subject Fred in 
63 
order for the sloppy reading of the elided sen- 
tence (i.e., George loves George's wife) to be 
available. All sentences are potentially trig- 
ger sentences; hence, we lambda abstract he 
syntactic subjects of all sentences (following 
Webber \[Web78\] and Sag \[Sag76\]). 
2. The logical roles of all noun phrases in a sen- 
tence are identified by position in logical form 
(logical subject first, logical object second, log- 
ical indirect object third, etc.). 
3. We represent universal noun phrases as univer- 
sally quantified (and restricted) variables and 
indefinite noun phrases as existentially quanti- 
fied (and restricted) variables (following Web- 
her \[Web78\]). 
4. Quantifier scope ambiguity is handled in the 
same way as in Allen \[All87\]. Initially, we place 
quantifiers in the predicate-argument struc- 
ture (except for subjects). Later, when infor- 
mation becomes available for making scoping 
decisions, quantifier scoping is indicated (dis- 
cussed in Harper \[Har90\]). 
A composite representation for a pronoun is pro- 
vided once the parse tree for the sentence contain- 
ing it is available. When the parse tree is provided, 
we can determine all of the quantified noun phrases 
that are possible antecedents for a pronoun in the 
sentence (see l~einhart \[Rei83\]). Hence, we repre- 
sent a pronoun initially as a function of all of the 
variables associated with noun phrases that are pos- 
sible antecedents for or distribute over possible an- 
tecedents for the pronoun. To handle verb phrase 
ellipsis, the argument list must also include the 
lambda variables corresponding to syntactic sub- 
jects. A pronoun is represented as a uniquely-named 
function of all lambda variables (associated with 
subjects) which have scope over it in logical form, 
any non-subject quantified variables corresponding 
to noun phrases that c-command the pronoun (fol- 
lowing Reinhart \[Rei83\]), and any quantified noun 
phrase not embedded in a relative clause but con- 
tained in a noun phrase that c-commands the pro- 
noun. The lambda variable of a quantified subject 
subsumes the subject's quantified variable because 
the lambda operator abstracts the quantified vari- 
able. Our logical form representation for pronouns 
summarizes all of the operators that can directly 
affect their final meanings. Hence, the representa- 
tion is useful for limiting the possible antecedents 
of a pronoun. For example, a pronoun function can 
take a universal noun phrase as its antecedent if and 
only if the universal variable (or the variable corre- 
sponding to the lambda operator that abstracts the 
universal variable) is included in the function's ar- 
gument list. 
Consider a simple example to demonstrate the 
initial representation f the following sentence. 
Example  2 
Every teacher gave every student his paper. 
Yx: (teacher x) 
x, A(y)(give y (paper-of (hisa y z)) 
\[Vz: (student z) z\]) 
The syntactic subject of the sentence is univer- 
sally quantified, and the restriction on the quan- 
tifier is indicated after the colon 1. The syntac- 
tic subject of the sentence is abstracted from the 
predicate-argument structure representing the sen- 
tence. Hence, the verb phrase, represented as a 
lambda function, is separable from the subject. The 
subject's position is maintained in the lambda func- 
tion by the lambda variable. Notice that the defi- 
nite noun phrase his paper is represented here as 
a function of the pronoun. Shortly, we will pro- 
vide a more general representation for definite noun 
phrases. Notice that the pronoun his is represented 
as a function of subject's lambda variable plus the 
universal variable corresponding to every student. 
This list of arguments corresponds to the opera- 
tors for noun phrases that can be antecedents for 
the pronoun given the syntactic onstraints or can 
distribute over possible definite antecedents. No- 
tice that the subject's lambda variable subsumes the 
subject's universal variable. The reader should note 
that quantifier scoping is not indicated in our initial 
logical form (following Allen \[Al187\]). 
The representation for the pronoun in 2 is a 
composite representation, that is it indicates all of 
the operators that can affect its final meaning. In 
fact, before the final meaning of the sentence can 
be given, the antecedent for the pronoun must be 
determined and made explicit in our logical form. 
Though the process of determining antecedents for 
pronouns is beyond the scope of this paper, when a 
pronoun's antecedent is known (requiring additional 
pragmatic information), the logical form containing 
it must be updated in a way compatible with its 
initial representation (because of the formal consis- 
tency constraint). Suppose that we decide that the 
antecedent for his in example 2 is every student, 
then the logical form is be modified as shown in 3. 
1The colon following the quantifier is syntactic sugar 
which expands the restriction differently depending on 
the type of quantifier. If a sentence is represented as3x: 
(R x) (P x), then the meaning is 3x (and (R x) (P x)). 
If a sentence is represented asVx: (R x) (P x), then it 
is expanded as vx (if (R x) (P x)). 
Example  3 
Every teacherl gave every student./ hisj paper. 
VX: (teacher x) 
x, A(y)(and (give y (paper-of (his1 y z)) 
\[Vz: (student z) z\]) 
(= (hisl y z) z)) 
This update is compatible with the pronoun's initial 
representation. We are indicating that the function 
(his1 y z) is really the identity function on z. In 
Harper \[Har88\], we fully specify how logical form 
is updated when a pronoun's antecedent has been 
determined. 
3 Def in i tes :  Behav iors  to 
Cover  
In the rest of this paper, we develop our logical form 
representation for singular definite noun phrases. 
As for pronouns, we wish to obey our computational 
constraints while providing a good model of definite 
behavior. Consider the behaviors of definit.es we 
wish to cover. 
Like pronouns, definite noun phrases can be 
anaphoric. Anaphoric definites can either depend 
on linguistic antecedents (in either the same or pre- 
vious sentences) or can denote salient individuals in 
the environment of the speaker/hearer (also called 
deictic use). Because of our logical form constraints, 
in particular because of the compactness and for- 
mal consistency constraints, the initial representa- 
tion for a definite noun phrase must be compatible 
with the representations of its possible antecedents. 
Definite noun phrases can have intrasentential n- 
tecedents as in example 4. 
Example  4 
Every boy~ saw (hisl dog)j before the beastj 
saw himi. 
64 
In this case, the definite noun phrase acts like a 
universally quantified variable (adopting the behav- 
ior of its antecedent in much the same way as a 
pronoun). 
Definites, unlike pronouns, can also have a com- 
plex syntactic structure. Pronouns and other noun 
phrases can be attached to a definite noun phrase 
in different ways. First, consider the effect em- 
bedded pronouns have on definite noun phrases. 
While simple definites (which are not intrasentential 
anaphors) seem to act like constants when they oc- 
cur in a sentence with a universal noun phrase (e.g., 
5a), definite noun phrases with embedded pronouns 
often cannot be described as constants (e.g., 5b). 
Example  5 
a. Every boy loves the woman. 
b. Every boy loves his mother. 
The meaning of his mother depends on how the pro- 
noun is resolved. If the antecedent for his is found 
in another sentence, then his mother could be rep- 
resented as a constant. In contrast, if every boy is 
the antecedent for his, then the universal quanti- 
fier corresponding to every boy distributes over his 
mother. When a quantifier distributes over a defi- 
nite, the definite changes what it denotes based on 
the values assigned to the quantified variable. 
Embedded quantified noun phrases can also dis- 
tribute over a definite noun phrase, preventing it 
from acting like a constant. For example, the uni- 
versal possessive noun phrase distributes over the 
definite in the following sentence. The definite in 
this case cannot be described as a constant. 
Example  6 
George loves every man's wife. 
However, not all embedded quantified noun phrases 
can distribute over a definite. When quantified noun 
phrases are embedded in relative clauses attached 
to a definite noun phrase, they cannot distribute 
over that noun phrase. This constraint (related to 
the complex noun phrase constraint, first noted by 
\[Ros67\]) prohibits quantifiers from moving out of a 
relative clause attached to a noun phrase. For ex- 
ample: 
Example  7 
George saw the mother who cares for every boy. 
In this case, the mother who cares for every boy de- 
notes one specific mother. In such cases, the univer- 
sal cannot distribute over the definite it is attached 
to or have scope over other quantified noun phrases 
outside of the relative clause. 
Thus, the meaning of a definite noun phrase is 
affected by its structure, whether it contains pro- 
nouns, and whether or not it is used anaphorically. 
If used anaphorically, it should behave in a way con- 
sistent with its antecedent, just like a pronoun. If it 
contains pronouns, then its meaning should depend 
on the antecedents chosen for those pronouns. If 
it contains embedded quantified noun phrases (not 
subject o the relative clause island constraint), then 
those embedded noun phrases may distribute over 
the definite. 
In the remainder of this paper, we introduce our 
logical form representation for definites. We discuss 
the initial representation f definites, which must be 
able to encompass all of the above definite behav- 
iors. We also describe the ways this logical form is 
updated once ambiguity is resolved. 
4 Our Representation of 
Definite Noun Phrases 
In this section, we develop a representation for def- 
inites in logical form. The logical form represen- 
tation for a definite noun phrase presents a chal- 
lenge to our approach. To be consistent with the 
modularity constraint, we must provide an initial 
representation for a definite noun phrase that can 
be generated before we know the antecedents for 
any embedded pronouns or before we know the def- 
inite's antecedent (if it is anaphoric). To obey the 
compactness and formal consistency constraints, we 
must initially represent a definite so it is consistent 
with all the ways it can possibly act. As more in- 
formation becomes available about the meaning of 
the definite noun phrase, we must be able to update 
logical form in a way compatible with its initial rep- 
resentation. Our logical form for a definite must be 
a composite representation compatible with its pos- 
sible behaviors. We cannot provide different initial 
representations for a definite depending on use, oth- 
erwise we violate the compactness constraint. Ad- 
ditionally, unless our initial representation is com- 
patible with all possible behaviors, we could violate 
the formal consistency constraint when we update 
logical form. 
We represent a definite as a named function of 
all of the variables associated with operators that 
can affect its meaning. This representation satis- 
fies our constraints by combining the advantages of
definite descriptions (discussed in Harper \[Har90\]) 
with the functional notation we introduced to rep- 
resent pronouns. Each definite function is defined 
by a unique name (i.e., defwith a unique integer ap- 
pended to it), a list of arguments, and a restriction. 
The restriction of a definite function is derived from 
the words following the determiner. The argument 
list of the function consists of the variables associ- 
ated with lambda operators that have scope over its 
position, any variables associated with non-subject 
quantified noun phrases that could bind a pronoun 
in that position, and any quantified variables asso- 
ciated with embedded quantified noun phrases that 
are not embedded in a relative clause attached to 
a noun phrase 2. Because a definite function has a 
unique name, we can differentiate two occurrences 
of the same definite noun phrase, in contrast o def- 
inite descriptions \[RusT1\] (for more information on 
the shortcomings of definite descriptions and defi- 
nite quantifiers, see \[Harg0; Hin85\]). 
2We should also add that a sententially attached PP 
with a quantified object can quantify over a definite as 
well (as in, In every car, the driver turned the steering 
wheel. This sentence is tricky because we seem to be 
attaching the PP to both of the NPs while leaving the 
quantifier to distribute over both definites). 
65 
Consider the initial representation of a sentence 
containing a definite noun phrase before the an- 
tecedent of an embedded pronoun is known: 
Example  8 
Every man showed every boy his picture. 
VX: (man X) 
x, A(y) (show y 
((defl y z) I 
(and (picture (dell y z)) 
(possess (his2 y z) 
(dell y z) ))) 
\[Vz: (boy z) z\]) 
The representation of this sentence is very similar 
to example 2 except for the representation of the 
definite noun phrase. Notice that his picture is rep- 
resented as a function called defl. The restriction 
of the function is the conjunction of statements fol- 
lowing the vertical bar. The vertical bar is syntactic 
sugar and should be expanded like the colon in an 
existential's restriction (but not until the definite's 
final meaning is determined). The argument list of 
the function consists of the variables y and z 3. No- 
tice that the pronoun his is also represented as a 
function of y and z. Anything that  can affect the 
pronoun his picture will also affect the meaning of 
the definite noun phrase. 
Because a definite function is a composite rep- 
resentation for all possible meanings of a definite 
noun phrase, we must restrict the function in cer- 
tain ways before a final interpretation for the sen- 
tence is available (or before deriving the meaning of 
an elided sentence from a trigger verb phrase con- 
taining a definite function, as discussed in \[Har90\]). 
The initiM representation of a definite places an up- 
per and lower bound on the definite's behavior. The 
lower bound is a constant, while the upper bound 
is the initial representation. These bounds must be 
tightened to settle on a final interpretation for the 
definite. We provide two methods to pinpoint a def- 
inite function. If the definite is used anaphorically, 
we equate the definite function with some value con- 
sistent with its antecedent. Otherwise, we apply a 
constraint hat  limits the argument list of the func- 
tion to include only necessary variables. 
If a definite is used anaphorically, it can be 
equated with some value depending on its an- 
tecedent (just like pronoun functions in \[Har88\]). 
For example, if the antecedent of a definite noun 
phrase occurs in another sentence, we would equate 
the definite function with a discourse entity. An- 
tecedents for definite noun phrases can also occur 
3As in the representation of pronouns, we omit the 
variable x from the argument list because the lambda 
operator for y abstracts x, so y is the more general 
argument. 
within the same sentence. An intrasentential refer- 
ence to an antecedent requires the definite function 
to have an argument list compatible with the rep- 
resentation of the antecedent 4. Consider the initial 
representation of a sentence containing a potentially 
anaphoric definite shown in 9. 
Example  9 
Every man told his mother's psychiatrist about 
the old lady's diary. 
Vx: (man x) 
x, A(y) (tell 
Y 
((defl y) i 
(and (psychiatrist (defl y)) 
(possess 
( (def2 y) 
(and (mother (def2 y)) 
(possess 
(his3 y) 
(def2 y)))) 
(defl y)))) 
(about 
((def4 y) I 
(and (diary (def4 y)) 
(possess 
((defs y) l 
(old-lady (def5 y))) 
(def4 y)))))) 
Suppose the antecedent for his is every man and 
the antecedent for the old lady is his mother. Then 
we can augment he logical form, as shown in 10. 
66 
4It is unusual for a definite to have an antecedent 
corresponding to one of its arguments unless the vari- 
able corresponds to a quantified noun phrase which is 
not embedded in a relative clause but is embedded in 
another noun phrase. When the antecedent is repre- 
sented as a function, its argument list must be a subset 
of (or it must be possible to limit it to be a subset of) 
the arguments of the anaphoric definite for the equality 
to be asserted. 
Example  10 
Every manj told (his) mother's)i psychiatrist 
about the old lady's~ diary. 
Vx: (man x) 
x, A(y)(tell 
Y 
((dell y) I 
(and (psychiatrist (dell y)) 
(possess 
((def2 y) I 
(and (mother (def2 y)) 
(possess (hisa y) 
(def2 y)) 
(or (= (hisa y) y) 
(= (his3 y) x)))) 
(dell y)))) 
(about 
((def4 y) \[ 
(and (d ia ry  (def4 y))  
(possess 
((def5 y) I 
(old- lady (def5 y)))  
(def4 y)) 
(= (def5 y) (def2 y)))))) 
This example would be very difficult for an ap- 
proach that uses either definite descriptions or def- 
inite quantifiers. Either approach would represent 
the old lady in a way equivalent o replacing the 
representation by a constant, because of uniqueness. 
Hence, any update of those representations to indi- 
cate the anaphora would violate formal consistency. 
Our approach, however, can easily handle the ex- 
ample. 
The other way to pinpoint a definite function ap- 
plies once antecedents for embedded pronouns are 
known and once we know whether quantifiers cor- 
responding to embedded quantified noun phrases 
(not embedded in relative clauses attached to noun 
phrases) should distribute over the definite. Con- 
sider the initial representation of the sentence in 8. 
The definite function defl is a function of all of the 
variables that can potentially cause it to change. 
However, once we know the antecedent for its em- 
bedded pronoun, the argument list of the function 
should be limited. To limit the argument list, we 
make use of the insights gained from definite de- 
scriptions. Because of the uniqueness assumption, 
any definite description that does not contain vari- 
ables bound by outside quantifiers acts like a con- 
stant. On the other hand, if a pronoun embedded 
in a definite description adopts the behavior of a 
universally quantified variable, then the definite de- 
scription will change what it denotes depending on 
the instantiation of that variable. Hence, we con- 
clude that a definite function should only change 
as a function of those variables bound by operators 
outside of its restriction (ignoring its own argument 
list). 
67 
Once antecedent and embedded quantifier infor- 
mation is available, we can limit the argument list to 
precisely those arguments that are bound by opera- 
tors outside of the restriction. If a pronoun function 
in the restriction of the definite function is equated 
with a variable bound outside its restriction or with 
another function which must be a function of a cer- 
tain variable (based on its own restriction), then 
the argument must be retained. Additionally, other 
arguments that are free in the restriction must be 
retained (these correspond to embedded quantified 
noun phrases whose quantifiers are moved out of 
the restriction). Once we know the necessary ar- 
guments, we replace the original function by a new 
function over those arguments. By using this argu- 
ment reduction constraint, we limit the initial com- 
posite representation of a definite noun phrase to its 
final meaning (given pronoun and quantifier infor- 
mation). 
Consider how we would limit the function 
(defl y z) from example 8 following pronoun res- 
olution. If we decide that the antecedent of his is 
every boy, then we would update the logical form, 
as shown in 11. 
Example  11 
Every man showed every boyi h is i  p ic ture .  
Vx: (man x) 
x, A(y)(show y 
((defl y z) \[ 
(and (picture (dell y z)) 
(possess (his2 y z) 
(defl y z)) 
(= (his2 y z) z ) ) )  
\[Vz: (boy z) z\]) 
By using our argument reduction constraint, we can 
replace the function (defl y z) by a function of z 
(since (his2 y z) is replaced with the variable z), as 
shown in 12. 
Example  12 
Every man showed every boyl h is i  p ic ture .  
Vx: (man x) 
x, A(y)(and (show 
Y 
((defl y z) \] 
(and (picture (defl y z)) 
(possess (his2 y z) 
(dell y z)) 
(= (his2 y z) z))) 
\[Vz: (boy z) z\]) 
(= (dell y z) (def3 z))) 
Equality here is equivalent o replacing the first 
function with the second value. Because of this fact 
and because of the meaning of the vertical bar in 
the restriction of the function, this representation 
can be simplified as shown in 13. 
Example  13 
Every man showed every boyi hisi p icture.  
Vx: (man x) 
x, A(y)(and (show y 
(def3 z) 
\[Vz: (boy z) z\]) 
(picture (def3 z)) 
(possess z (def3 z))) 
To handle the readings where his is anaphorically 
dependent on other noun phrases, our approach 
would be similar. 
Our representation of pronouns has several 
strengths. First, the representation provides useful 
information to a semantic routine concerning possi- 
ble intrasentential ntecedents for the definite. Ai'- 
gument lists limit what can be the antecedent along 
with other factors like number and gender agree- 
ment and antecedent limitations particular to deft- 
nites. To demonstrate a strength of this approach, 
consider the initial representation of the following 
sentence: 
Example  14 
Fred told the teacher who discusses every 
student with his mother to record her response. 
((dell) \] (name (dell) Fred)), 
A(x) (tell 
x 
((def2 x) I 
(and (inst (def2 x) teacher) 
(de f2  x ) ,  
A (y) (discuss 
Y 
\[V(z) :
( inst  z student) z\] 
(with 
((def3 X y Z) I 
(and 
(inst 
(def3 x y z) 
? mother) 
(possess 
\ [ (de f2  x ) ,  
A (w) ( record  
w 
( (de f5  x w) \[ 
(and ( inst  (defs x w) 
response) 
(possess 
(her6 x w) 
(defs x w))) ) ) \ ] )  
antecedent for her. If the antecedent for his is every 
student, then his mother cannot be the antecedent 
for her. This accessibility problem results because 
the universal in the relative clause (i.e., every stu- 
dent) cannot have scope over her response, hence, 
his mother is not a good antecedent for her 5. Notice 
that (her6 x w) is not immediately compatible with 
the representation for his mother (i.e., (def3 x y z)). 
Before we can assert that his mother is the an- 
tecedent for her we must pinpoint the meaning of 
that noun phrase, that is, we must determine the 
antecedent for his. Then depending on our choice, 
the final meaning of his mother may or may not be 
accessible to the pronoun. Hence, we can explain 
why some definites in relative clauses are accessible 
to pronouns in the matrix sentence and others are 
not. C-command oes not accurately predict when 
definites are accessible as antecedents for anaphoric 
expressions. This is not surprising, given the fact 
that the final meaning of a definite determines its 
accessibility, and determining this meaning may re- 
quire resolving pronouns and scoping ambiguities. 
In this paper, we have introduced a composite 
representation for definite noun phrases with two 
ways to update their meaning as more informa- 
tion becomes available. This approach is consistent 
with the three compntational constraints discussed 
in section 2, and also provides a good model of deft- 
nite behavior. We refer the reader to Harper \[Har90\] 
for discussion of a wider variety of examples. In 
particular, we discuss examples of verb phrase el- 
lipsis, Bach-Peters entences, and definite donkey 
sentences \[Gea62\]. Our approach has been imple- 
mented and tested on a wide variety of examples. 
The logical form for pronouns and definites is pro- 
vided as soon as a parse tree for the sentence is 
available. Then, the logical form for the sentence 
is incrementally updated until all ambiguities have 
been resolved. Logical form is very useful in the 
search for pronoun and definite antecedents. For 
more on the implementation see \[Harg0\]. 
(his4 x y z) One shortcoming of our approach is our inabil- 
(def3 x y z ) ) ) ) ) ) ) ) i ty  to provide a single logical form for a sentence 
with structural ambiguity. One possible solution to 
this problem (which we are currently investigating) 
is to store partial logical forms in a parse forest. As 
more information is processed this intermediate r p- 
resentation will be incrementally updated until the 
parse forest is reduced to a single tree containing 
Here the meaning of her response depends on the 
antecedent for her. What then are legal antecedents 
for her in this sentence? Certainly, the teacher is a 
fine candidate, but what about his mother. We can- 
not tell immediately whether his mother can be the 
5Strictly speaking, universal noun phrases cannot 
bind across sentences. However, speakers ometimes al- 
low a universal to be the antecedent for a singular pro- 
noun outside of its scope. Such pronouns are not usu- 
ally understood as giving a bound variable reading. See 
Webber \[Web78\] for a discussion of this issue. A simi- 
lar treatment can apply to definites which change as a 
function of a universal. 
68 
one logical form. 
5 Past Approaches 
Our work has benefited from the insights gained 
from other approaches to definite noun phrases in 
the literature. We considered both definite de- 
scriptions introduced by Russell \[Rus05\] and defi- 
nite quantifiers (used by many including \[Web83\]) 
for representing definite noun phrases. Neither 
representation allows us to handle intrasentential 
anaphoric definites while obeying our computational 
constraints. However, the in-place definite descrip- 
tion is excellent for modeling definite subjects in 
verb phrase ellipsis and for capturing the behaviors 
of distributive definite noun phrases. On the other 
hand, a definite quantifier is not a good represen- 
tation for a definite subject in verb phrase ellipsis 
(the strict meaning of The cat wants its toy. The dog 
does too cannot be provided because quantifiers do 
not have scope across sentences). In fact, to make 
the definite quantifier a feasible representation, we 
would have to make the binding properties of a def- 
inite quantifier different han the binding proper- 
ties of a universal. Hornstein \[Hor84\] suggests that 
definite quantifiers have different binding properties 
than universals. His approach fails to consider how 
the process of pinpointing the meaning of a defi- 
nite affects its ability to bind a pronoun. For more 
discussion of the strengths and weaknesses of these 
approaches, ee Harper \[Har90\]. 
Other approaches to handling definites include 
the work of \[Hei82; Kam81; Rob87; Kle87; PP88\]. 
Each approach differs from ours both in scope and 
emphasis. We build an intermediate meaning for a 
sentence using only the constraints dictated by the 
syntax and local semantics and incrementally up- 
date it as we process contextual information. The 
work of Pollack and Periera \[PP88\] also attempts to 
gradually build up a final interpretation of a sen- 
tence using their semantic and pragmatic discharge 
interpretation rules. However, our representation 
of a definite noun phrase locally stores information 
about those quantifiers in the sentence that can po- 
tentially quantify over it, while Pollack and Periera's 
representation does not. The approaches of \[Hei82; 
Kam81; Rob87; Kle87\] require a large amount of 
contextual information before the representation f 
a sentence can be given (leading to a violation of 
our constraints). 
References 
\[Al187\] James Allen. Natural Language Understand- 
ing. The Benjamin/Cummings Publishing 
Company, Menlo Park, CA, 1987. 
\[Gea62\] Peter T. Geach. Reference and Generality. 
Cornell University Press, Ithaca, 1962. 
69 
\[Har88\] 
\[Har90\] 
\[Hei82\] 
\[Hin85\] 
\[Hor84\] 
\[Kam81\] 
\[Kle87\] 
\[PP88\] 
\[Rei83\] 
\[RobS7\] 
\[Ros67\] 
\[Rus05\] 
\[Rus71\] 
\[Sag76\] 
\[SP84\] 
\[Web78\] 
\[Web83\] 
Mary P. Harper. Representing pronouns in 
logical form : Computational constraints and 
linguistic evidence. In The Proceedings of the 
7th National Meeting of AAAI, 1988. 
Mary P. Harper. The representation of noun 
phrases in logical form. PhD thesis, Brown 
University, 1990. 
Irene Heim. The Semantics of Definite and In- 
definite Noun Phrases. PhD thesis, University 
of Massachusetts, 1982. 
Jaakko Hintikka. Anaphora and Definite 
Descriptions: Two applications of Game- 
Theoretical semantics. D. Reidel Publishing 
Oompany, Boston, 1985. 
Norbert Hornstein. Logic as Grammar: An 
Approach to Meaning in Natural Language. 
MIT Press, Cambridge, MA, 1984. 
Hans Kamp. A theory of truth and semantic 
representation. In Jeroen Groenendijk, Theo 
Janssen, and Martin Stokhof, editors, Formed 
Methods in the Study of Language, volume 1. 
Mathematische Centrum, Amsterdam, 1981. 
Ewan Klein. VP ellipsis in DR theory. In 
J. Groenendijk, D. de Jongh, and M. Stokhof, 
editors, Studies in Discourse Representation 
and the Theory of Generalized Quantifiers. 
Foris, Dordrecht, 1987. 
Martha E. Pollack and Fernando C.N. Pereira. 
An integrated framework for semantic and 
pragmatic interpretation. In The Proceedings 
of the 26th Annual Meeting of the Association 
for Computastional Linguistics, 1988. 
Tanya Reinhart. Anaphora and Semantic In- 
terpretation. Croom Helm, London, 1983. 
Craige Roberts. Modal Subordination, 
Anaphora, and Distributivity. PhD thesis, 
University of Massachusetts, 1987. 
John R. Ross. Constraints on Variables in 
Syntax. PhD thesis, MIT, 1967. 
Bertrand Russell. On denoting. Mind, 14:479- 
493, 1905. 
Bertrand Russell. Reference. In J. F. Rosen- 
berg and C. Travis, editors, Readings in the 
Philosophy of Language. Prentice-Hall, Inc., 
Englewood Cliffs, New Jersey, 1971. 
Ivan A. Sag. Deletion and Logical Form. PhD 
thesis, MIT, 1976. 
L. K. Schubert and F. J. Pelletier. From En- 
glish to Logic : Context-flee computation of 
'conventional' logical translations. American 
Journal of Computational Linguistics, 10:165- 
176, 1984. 
Bonnie L. Webber. A Formal Approach to Dis- 
course Anaphora. PhD thesis, Harvard, 1978. 
Bonnie L. Webber. So what can we talk about 
now? In M. Brady and R. Berwick, edi- 
tors, Computational Models of Discourse. MIT 
Press, Cambridge MA, 1983. 
