\]'H E <C,A>,T FRAMEWORK IN EUROTRA : A THEORETICALLY COMMITTED NOTATION FOR MT 
n.J. Arnold: 
S.Krauwer: 
fl. Rosner: 
L. des Tombe: 
G.B. Varile: 
Univers i ty  of Essex, Colchester, Essex, CO4 3S~, UK. 
University of Utrecht, Trans 14, 3512 OK Utrecht ,  NL. 
ISSCO, 54, Route des Acacias, 1227 Geneva, Switzerland. 
University of Utrecht, Trans 14, 3512 3K Utrecht, NL. 
Commission of the European Communities, L-292~ Luxembourg. 
A~ s~t r_a c L. 
This paper" describes a model fu r  MT, developed within 
the Eurotra M\[ project, based on the idea of r.o_omj\]osi- 
tional translation, by describing a basic, experimen- 
tal notation which embodies the idea. The introduc- 
tion provides background, section 1 introduces the 
basic ideas and the notation, and section 2 discusses 
some of the theoretical and practical implications of 
the model, including some concrete extensions, and 
some more speculative discussion. 
As Kay (1985) has emphasised, machine translation 
today is always experimental in nature. We think a 
number" of things follow from this, among them the 
need for clear and rather strong theoretical pr incip- 
les which can be treated as hypotheses for testing. 
The idea is, nf course, that such testing is revea- 
ling i rrespective of the confirmation or disconfirma- 
tion of the hypotheses. Furthermore, especially 
where projects of considerable size are concerned, 
clear and exp l i c i te ly  stated theoretical principles 
are necessary for the ~ommoi2 understanding of the 
problem. 
We assume that it is possible to distinguish a number 
of different levels of description for MT theories 
(programmes, systems, etc), where in general, the 
relation between levels is that lower levels are 
motivated, or evaluated with respect to higher le- 
vels. The aim of this stratification is to introduce 
a kind of modularity, so that it is possible to 
preserve stability while responding to changing per- 
ceptions of 'the MT problem'. We distinguish the fo l -  
lowing levels of description: 
MuB: A set of executable programs, and descriptions 
of a set of languages and the relations between them. 
Mul: A set of substantive theories of representation, 
and a set of languages in which linguistic descrip- 
tions are expressed. 
Me2: The basic theory of translat ion, general theory 
of ( l inguist ic )  representation & computational appa- 
ratus. 
Mu3: The basic principles, aims, goals, characteris- 
tic assumptions, the 'spirit' of the enterprise. 
The purpose o~ the paper is to discuss the Mu2 level, 
concentrating on the basic theory or model of trans- 
lation. Tbe approach will be to describe a family of 
abstract, special purpose 'MT machines' by describing 
the syntax and semantics of a very basic notation for 
MT. We will make some assumptions about representa- 
tion and user languages for concreteness, but they 
will be simplified, and unrealistic in the main. Next 
we examine the model of translation by making expli- 
cit some of the theoretical commitments impl ic i t  in 
the notation, discussing some i ts  attract ions,  and 
weaknesses, and sketching some possible remedies for 
the la t te r .  Section 1 wi l l  present the notation, 
with some relevant background, section 2 wi l l  discuss 
the commitment he notation makes. 
L~_\[EE_EELEE\[_!,odel of t rans la t ion .  
The ideas described in th is  section were f i r s t  pre- 
sented at the the Colgate Conference on Methodologi- 
cal Issues in MT (Arnold et al  Des Tombe et al 
1985). A key idea in what follows is an interpreta- 
tion of the idea that translation is a 'compositio- 
nal' process. To our knowledge, the f i r s t  applica- 
tion of this  idea in MT is in the work of Jan Lands- 
bergen in the Rosetta project (of Landsbergen 19B4). 
The fundamental problem of MT is to find a notation, 
with an associated interpreter ,  for describing the 
translation relations between texts in d i f ferent  
languages in a 'natural' way. Since i t  seems impos- 
sible to provide such a notation for relating texts 
to texts directly, the standard response is to decom- 
pose the problem 'hor izonta l ly '  into a sequence of 
steps, as in : 
(I) TL G - - -  RL I ~~- RL 2 - - -  RL 3 . . .  RL n .... TL T 
where TLs and TLT are source and target text lan- 
guages, and the RL i are representat ion  languages (or 
levels of representation, as they are often called) 
of some sort. (Notice that in what follows me wil l  
systematically use the term 'language' ambiguously 
for both natural languages and representation lan- 
guages). Giw!n such a picture one natural ly thinks 
of the languages that are input and output of trans- 
fer, but far the purpose of this  discussion they 
could be any pair of representation languages at 
all. What is crucial to this discussion is the as- 
sumption that MT characteristically involves more 
than one representation language. This point is worth 
stressing. The following discussion will be couched 
in terms of a representational theory (Mull that 
involves several specific levels of representation. 
We believe that this is motivated, but the interest 
of the general model in no way depends on the ex- 
istence of these levels. 
Given this ,  one is obviously lead to consider (a) the 
nature of the representation languages, and (b) the 
nature of the relations between the representation 
languages themselves, and between the representation 
languages and the text languages. 
We wi l l  not  d iscuss  the nature  of the representat ion  
languages here in any detail  (see Arnold et al 
#anuary 1985, for detailed discussion), hut i t  seems 
important that they should he: 
297 
(i) DifLe\[eE~atin~L: This is required i f  the system 
is to preserve whatever properties are preserved 
under" 'correct t rans la t ion ' .  I f  two (unambiguous) 
texts are not translation equivalents i.e. if they 
differ ~ith respect to these properties, then the 
representation languages must be rich enough to pro- 
v ide  different representations fo r  them. 
( i i )  Learnab le  (speci f ic  and indepmndently def i -  
nable): By 'learnable' we mean simply that it must be 
possible fat" linguists (who eust  state the relations 
between a language and its neighbeurs, ultimately in 
the farm of an executable description) to be able to 
understand that relation: for any given text they 
should be able to determine the appropriate repre- 
sentation, and vice versa: the intuitive semantics of 
the representation language should be accessible to 
them. This normally means that the representational 
theory should be rather specific and constrained. It 
also means that an independent specification of the 
language should be available. To take the most pro- 
blematic case, consider the writer of the generation 
component in a multilingual MT system, where the only 
definition of the input representation language is 
that provided by the transfer components themselves. 
The task seems clearly impossible. 
(iii) ~E_EELE~E~_E;  Tb is  is the  most straightfor- 
ward, and the most commonly appealed to requirement 
for the adequacy of representation languages. It 
must at least be easier to relate the representation 
languages than it is to relate the text languages. 
It is this requirement that usually rules out natural 
lenguages (e.g. Latin) as representation languages, 
and motivates representation languages which are 
highly structured. 
We will not be concerned oith particular representa- 
tion languages that have been proposed in Eorotra 
but, for the purposes o{ exposition, it is worth a 
brief description of the ~ind of representation lan- 
guages (levels) we will assume in what .follows. We 
wi l l  assume there are three such languages (apart 
f rom leve ls  such as actual, and normalized text): 
(a) A surface constituent/morphological structure 
level of a rather standard kind, allowing more than 
one x-bar projection of the major lexical categories 
(see Arno ld  et al ~anuary  1985) .  This level is 
usually called ECS (Eurotra Constituent Structure). 
(b) fi level which represents syntactic relations or 
dependency, and information about syntactic category. 
This level involves structures where each (non-co- 
ordinate) construction contains a primitive item 
which is the head, or governor ( 'gov ' )  of the other 
elements of the construction (this amounts to a sti- 
pulation that there can be no more than one projec- 
tion of lexical categories: X I syntax, in effect). 
Th is  level is usually called ERS (Eurotra Relational 
St ructure) .  
(c) A level which represents semantic relations/de- 
pendency, and thus contains an indication of semantic 
relations (case or :beta roles). Like the syntactic 
relational level, we will take this to be an X I 
level, it is intended to abstract away f rom surface 
syntactic phenomena that are net relevant to transla- 
tion, and to re-interpret some syntactic characteris- 
tics semantically (egg. replacing tense marking by an 
indication of time reference). This level is normally 
298 
called Interface Structure (18), since it provides an 
interface between analysis and transfer, and transfer 
and generatinn components? 
Turning now to the relations between ttlese languages, 
as regards the text<->representation language rola- 
tion, there is very little to say in an HT context 
that does not arise elsewhere in computational lin- 
guistics, where pars ing  and generat ion  are  two of  the  
major areas of research. It is the relation between 
the representation languages that concerns MT speci- 
fically. We think the falloeiog three conditions are 
important: 
(i) compositimnal ity 
(ii) directness (primitiveness, 'one-shut-ness') 
(iii) simplicity (statable in a ~imple way) 
Idioms apart, the translation of complex expressions 
is normally based in some systematic may on the 
translations of their parts -- normal translation is 
in some sense 'co,n~ositiona\['.  Of course, i t  is only 
because of this that the translation relation is 
productive at all, and if one is looking for" princip- 
les, it seems reasonable to require something like 
this of  the relation between the  representational 
languages also. \]'he following gives a slightly more 
precise sense to th i s  idea: 
Translation is compositional when the translation 
of a complex expression is some (reasonably 
straightforward) function of the translation o-I the 
basic expressions it contains, plus the translation 
of their mode of combination. 
Condition ( i i )  'directness' of- 'primitiw~ness' is 
simply intended to exclude illicit representational 
levels between those officially sanctioned: what it 
says is that the RLi -RL  j relation must he direct, or 
primitive, and cannot  he mediated by other undec la red  
representational levels. Such a conditimn helps to 
maintain clarity (and learnability), and giw-~s con- 
tent to the other conditions. 
A more ferea\] reconstruction of these ideas (along 
the lines suggested in Hontague (1974)) eight be as 
follows. 
We begin by defining compositional translation as a 
relation between 'g rammars '  (generative dev ices )  
specifying languages, rather than languages directly, 
thus making the RLi-RL J relationship parasitic on the 
relation between tbe  cor respond ing  'grammars'. In- 
stead of (I), we are thinking of a picture like (2), 
where a 'vertical' dimension has been added 
(2) B 1 . . . .  G 2 . . . .  . . .  __ G n 
lILs - - -  RL l RL2 RLn . . . .  TL f 
Compositional translation of two representation l an -  
guages RL i and RLj is then defined by a pair of 
relations T and T -i ('translators') between the 6 i 
and 8j (generat ive  devices, grammars) specifying 
(generating, enumerating) RL i and RLj. 
We take a generative device 8 to be a pair, <C,I\]> 
where C is a finite set of constructors ('rules' 
defining the class of complex expressions), and 
A is a finite set of atoms (basic expressions). 
We say that translation from L i to Lj is ELE_LEt~Y. 
?omL0ositional if tilere is mapping T from 6i=<Ci,Ai> 
to 8j=<Cj,Aj> such that: 
(i) T leaps A i into Aj, and 
( i i )  there is a mapping t from C i into Cj such 
that if u = <c : u1,...,Un> , 
then T(u) = <tc | T (U l ) , . , . , T (Un) )  
As will become apparent, these definitions imply a 
very res t r i c Jve  theory  of translation, one which is 
much too strtlog to be usable. However', before dis- 
cussing its inadequacy, we mill make the ideas invol- 
ved more concrete by describing a notation for Gs and 
Ts mhich is strongly committed to these ideas, and 
by discussing a very simple example of the use of the 
notation, fhe description is rough and not precisely 
formalised, bmt should give an idea of the issues 
involved. 
Notation for constructors and atoms: 
atom ::= (name, feature description) 
constructor::= (name,feature description)\[argspec*\] 
argspec::= (name, feature description) 
(In fact, atoms are simply constructors with ar i ty ~, 
but we will preserve the intuitive distinction here). 
The feature theory we assume here is extremely 
simple: a feature description is a set of attribute- 
va lue  pa i rs .  fhe ' name'  i s  . just  a d is t ingu ished  fea -  
tu re  represent ing  the  in tu i t i ve  l ingu is t i c  bas i s  of 
the language being described (thus, it might be a 
syntactic category, a syntactic relation, or a seman- 
tic relation as appropriate). Notice that  this name 
need not be unique. Each const ructor  has in addition 
a unique abbreviatory const ructor  name which is used 
by the T-rules. 
The language I_ generated by a G is a set of well- 
formed object (wfo's) such that: 
Every atom i s  a mfo; and i f  c n is a const ructor  
of arity n, and each of el, . . . ,  U n is a wfo, 
then c n : Ul, ..., u n is a wfo. 
This very simple syntax for Gs will lead to over'-" 
generation .... for + example, it mill allow np const ruc -  
to rs  wi th  two arguments as a wfo, even i f  the f i r s t  
argument is a verb,  and the second is a prepos i t ion .  
For this reason we supplement the purely syntactic 
description uith a semantics based on applying con- 
structors to arguments. We will thus normally be 
concerned only with the subset mfos that are also 
constructs~ in the following sense: 
Every atom i~i a construct~ a const ructor  applied k~ 
some argumellt~i yields a const ruct  providing the argu'- 
ments EEL~_~ with the appropr ia te  argspecs of th~ 
constructor. 
Examples (for' a constituent structure language): 
atom~: aexampl e = (example, {cat=n, oum=sing}) 
athi~ ~ ,~: ( th i s ,  {cat=det ,  oum=sing}) 
const ructor :  
Cop= (no, {num=X, per=3}) \[( , {cat=det ,  num=X}) 
( , {cat=n,  num=X})\] 
const ruct  Cnp: athis aexampl e = 
(np, {num=siog, per=5}) 
\[(this, {cat=dmt, num=sing}), 
(e?ample, {cat=o, num=sing})l 
The syntax and semantics of fs  i s  rough ly  as fo l loms.  
Syntactically v a T-rule is of the form: lhs ==> rhs, 
where ihs and rhs are atoms or constructors of source 
and target language Gs respectively. For example, the 
following might be T-rules relating a level based on 
syntactic relations with one based on semantic rela- 
tions for the atoms corresponding to the verbs like 
and !kit. (They are both assumed to assign subject and 
object relations to their dependents syntactically. 
They are assumed to assign respectively, experiencer 
and patient, and agent and patient to their semantic 
dependents? Since the loading linguistic idea at 
both levels is relational, and the nature of the 
relation cannot be determined for constructs in iso- 
lation, the name feature  of atoms and const ructors  i s  
'blank' at these levels). 
(3) ( ,(word=like, cat=wv frame=subj-ubj}) ==> 
(._v {word=like, cat=v, f rame=exp-pat})  
(4) ( ,{word , :h i t ,  cat=v,  f rame=sub j -ob j} )  ==> 
(.., {word=hi t ,  cat=v,  f rame=agent -pat})  
The semantics of this is that all source language 
atoms wit(oh unify with the lhs are translated to all 
target Language atoms whieh unify with the rhs. 
|he following might be a constructor to constructor 
T-rule for the same two levels : 
(51 C~ubj-oh j =:~> Cexp-.pa t
meaning that any source language construction built 
by applying Csubj..ob j to some arguments ul, ... u n is 
translated by applying Cexp_pa t to the translations 
of el, , . . i  On 
This syntax and semantics for T~rules implements the 
idea of strict compositiooality defined above. 
This model is elegant, but inadequate, givml the way 
natural languages appear to be. What s t r i c t  composi- 
tionality requires is at least a rather strong homo- 
morphism between the languages related by a T. It is 
easy to find examples where this looks implausible. 
For example, consider the common need to re-order 
members of a construction in translation~ or the need 
to ~liminate 'formal' items which are a part of 
constructions in one language (one level) but not in 
another (perhaps re-expressing some information they 
carry as part of a feature), as in (6); or the kind 
of simple s t roc tmra l  change i nwHved in going from a 
level which has both 5 and VP constructions to one 
mhich has verb, subject, and object as members of a 
single construction (7); or' the need to re-analyse an 
item which is part of nee constraction in one lan- 
guage, as part of another construction in translation 
(8).  
(&) \[S for jules to understand i t  \] =~> 
\ [S \ [ - f in i te \ ]  jules understand i t  \] 
(7) \[S jules \[vp hit sandy \]\] ==2 
\[S hit jules sandy \] 
(8) \[ rely \[pp on sandy \ ] \ ]  ==> 
\[ re ly -on  \[np sandy \ ] \ ]  
Of cuurse,  one could eas i ly  vary assumptions about 
representations so that these examples disappear~ but 
other examples conflicting with the new assumptions 
will be just as easy to find. Notice that though, 
299 
for simplicity, we have chosen examples that are 
close to the surface of one language (English), there 
are many examples of this  kind between languages: 
(9) \ [ jules zwemt graag\] ==>\[julesi l kes\ [e i  to swim\]\] 
"jules swims l i k ing ly '  
(10} \[give\[a hand to X\]\] ==> \[(helpen { }),X\]  
(11) \[n apple se l ler \ ]  ==> \[np vendeur \[pp de pommes\]\] 
'Lexical holes" such as English exhibits with respect 
to Dutch (English has no adverb ' l i k ing ly"  to trans- 
late rag_raacL) , and idioms such as qive.a hand wi l l  
normally give rise to the need for non-st r ic t ly  com- 
positional translations, for obvious reasons. As a 
more general example, it is often the case that what 
is expressed I ex ica l ly  or syntactically in one lan- 
guage is expressed morphologically in another .  
Thus, modality is often expressed by inflection in 
Romance languages, and by combinations of separate 
lexi~al items in Germanic languages, and correspon- 
dences between compounds in Germanic languages, and 
syntactic constructions in Romance languages (as in 
(11}) are very common. Treating this  kind of thing 
will certainly lead to non-strictly compositional 
translations somewhere. 
The solution to th is  problem adopted by Landsbergen 
(1984) in Rosetta is to 'tune' the Gs to each other, 
thereby ensuring that they are homomorphic, and that 
something close to s t r i c t  compositionality can be 
preserved. (In fact,  Landsbergen requires the trans- 
lat ion relation to be symmetric, so the grammars turn 
out to be isomorphic). This preserves  the elegance 
of the model, but at the expense of the elegance of 
the l ingu is t ic  theories and descriptions (the Mul and 
MUD), which become extremely complex, and potent ia l ly  
unusable .  For example, i t  requires give a hand t E 
and ~ ,  and ~ ,  and like to to be treated 
alike. Providing a systematic and general character- 
isation of a theory  of representation which allows 
this seems h igh ly  problematic. What one expects is 
that the representational theory wi l l  become unlearn- 
able in the sense described above. A second objec- 
tion to this  approach is the obvious one that i t  
eliminates the modularity that is potentially avail- 
able with this model (each G can be thought of as a 
module, e.g . ) .  This reduces its attractiveness from 
a deve lopmenta l  point of view, particularly where 
multi - l ingual MT involving large numbers of lan- 
guages, or wide coverage (hence collaboration of 
l a rge  numbers of ind iv idua ls )  i s  env isaged.  
For these reasons, we have preferred to explore an 
al ternat ive approach, which involves allowing some 
relaxations of s t r i c t  compositionality. The fo l -  
lowing th ree  relaxations have been proposed : 
(i) To allow variables on either side of T rules : 
(12) e.g. c27 \[ I ,  2, 3 \] ==> c38 \[ 2, 3 \] 
with the meaning: translate any expression formed by 
applying c27 to th ree  arguments by an expression 
formed by applying c38 to the translation of the 
second and third arguments. This relaxation allows 
for re-orderings, deletions, and reduplications by T- 
rules, and seems an entirely natural extension of 
s t r i c t  compositienality. 
( i i )  To allow functions made up of constructors, 
atoms, and variables of the appropriate Gs on either 
300 
side of T-rules, e.g. 
(13} e.g. c S \ [ I ,  Cvp \[2, 3\]\] ==> Csubj/obj \[2, I ,  3\] 
Notice that since the output of such a translation 
rule is s t i l l  an expression in the target language 
( i .e .  an expression bui l t  by applying target G con- 
structors to target constructs), th is  relaxation 
still yields 'one shot' translation. 
(iii) To allmw the choice of the target constructor 
(function) to be dependent on properties of the argu- 
ments involved. For example, one does not want a l l  
\[v ppl constructions to be treated l ike rel__el_y~_.gn_ in 
(8), and the exceptional translation behaviour of 
idioms, and constructions involving lexical holes is 
clearly dependent on the presence of particular pro- 
perties within constructions (e.g. the presence of 
particular lexical items): 
(14) e.g. c35 \[1, 21f l=vt,  3\] ==> c46 \ [ i ,  2, 31f2=v2\] 
with the meaning: translate constructions formed by 
applying c35 to three arguments by constructions 
formed by applying c46 to their  translations, provi- 
ding the second argument of c35 unif ies with a fea- 
ture description where the attribute fl has the value 
vl, and the translation of the third argument unifies 
with a feature description where the at t r ibute  f2 has 
the value v2. 
Though there is no provision for wild notational 
dev ices  such as path variables, these relaxations 
greatly increase the power of the notation, to an 
extent which is problematic, given our methodology. 
We would naturally like to impose restrictions, so 
that we can preserve the idea that in compositional 
translation the translation of a whole is some 'rea- 
sonably straightforward' function of the translation 
of i ts  parts. One poss ib i l i ty  is to impose special 
restr ict ions (or a l ternat ive ly  res t r i c t  some relaxa- 
tions) to certain translators (e.g. one would like 
the transfer translators to be as near as possible 
restricted to some kind of atom-atom translator) .  
More generally, one might require that at most one 
side of a T-rule be a function (in the sense of 
relaxation (b l ) ,  or to require that context sensitive 
T-rules may only refer to attr ibutes of particular 
arguments (e.g. attr ibutes of the heads of construc u 
tions, perhaps, or to only allow them to test for the 
presence of particular lexical items among their 
arguments). There are interesting methodological and 
empirical problems involved in trying to find approp- 
riate restrictions, but we will not pursue them here, 
since (as will appear in the following section), the 
notation is s t i l l  res t r i c t ive  enough for there to be 
a theoretical commitment which d~serves discussion. 
2. The theoretical commitments of the model. 
The attractiveness of our model as a framework for 
practical and theoretical MT derives from i ts  modula- 
r i ty  and i ts  orderliness in the main .  Pract ical ly ,  
i t  ensures that translation proceeds via a series of 
representations which are described exp l i c i t l y ,  and 
which there fore  have to be capable of systematic 
description, and it ensures that the language gene- 
rated by app ly ing  a sequence of translators is always 
a subset of a language that has been exp l i c i t l y  
described. It thus comes as close as possible to 
excluding 'hybrid' representations, and ensuring that 
representations languages will be 'learnable'. More- 
over, the separation of Gs and Ts~ and the use of a 
semantics based on unification provides a high degree 
of declarativeness, and the homogeneity and uniformi- 
ty of the model may be of practical benefit. The 
separation of Gs and Ts also provides a high degree 
of modularity, so, e.g. di f ferent  Gs can in principle 
be developed in parallel, and the effects of modifi- 
cations may often be localised to one G and the 
adjacent Ts. This is developmentally at t ract ive.  
Methodologically and theoret ical ly  the model is at- 
t ract ive in a number of ways. The complexity of T- 
rules provides a very simple and effect ive evaluation 
metric against which to judge competing proposals 
about representational levels (so it is relatively 
easy to find arguments why there  should or should not 
be intermediate representations of a certain sort). 
And it provides a level of abstraction at wbich 
linguists and implementers can communicate easily. 
However, perhaps the most important advantage of the 
model is that it decomposes the 'problem of MT', and 
provides a framework for investigating some interes- 
ting and apparently manageable sub-problems. Some 
of these are discussed in a pre l iminary  way here. 
This notation, and hence the model that i t  instan- 
tiates, in effect provides a context free grammar 
notation augmented by a simple feature theory based 
on unification, and (via the T rules) tbe capacity 
for cer ta in  transformations. We have no demonstra- 
tion of the weak genenerative capacity of the nota- 
t ion, but one suspects i t  Js at least as powerful as 
the notations of LF6 (Kaplan & Bresnan 1982), or rUG 
(Kay 19857. Taking fu l l  advantage of re laxat ions  
(a)-(c) below may well yield Turing machine capacity. 
While this makes i t  l i ke ly  that the notation provides 
some treatmeot of al l  t rans lat ional ly  relevant pheno- 
mena, it i!i still rather restricted as regards des- 
criptive or expressive capacity, and there is no 
guarantee that the treatment will be 'natural', ap- 
propriate, or even practically usable. 
One approach to the issue of usability is the provi- 
sion of user" friendly abbreviations (e.g.)~ and it is 
fairly easy to imagine some conventions which would 
take this hasic (Mu2) notation and make i t  more 
usable as a programming language for linguists (i.e. 
a Mul 'user  language ' ) .  
Some of the major modifications to the model which 
have been proposed include: 
(a) The introduction of special versions of construc- 
tor application in place of unification, for example, 
in the treatment of co-ordinate constructions. The 
properties of co-ordinate constructions are partly 
determined by the fact that they inherit  the common 
features  of the i r  e lements,  so the feature  descr ip -  
t ion  of the ~:onstruction should be the generalisation 
(roughly self consistent intersection of the feature 
descriptions) of the elements, rather than their 
uni f icat ion.  
(b) The introduction of Kleene star to avoid deeply 
recursive structures in the treatment of construc~ 
times which allow arbitrary numbers of arguments 
(e.g. most constructions can include an indef in i te ly  
large number of PP modifiers). Since the syntax of 
6s requ i res  specific reference to the arity of con- 
strutters ,  the obvious may of dealing with this  phe ~ 
nomena in the basic notat ion  i s  to have recurs ive  
constructors (e.g. a constructor that combines an np 
and a pp to form an np)~ yielding structures such as: 
(iS) np 
np pp 
np pp 
np pp 
This treatment is not obviously incorrect, but it is 
not necessarily the most in tu i t ive ly  sat isfactory 
treatment either, and i t  can have the undesriable 
effect of burying the lexical heads of constructions 
arb i t ra r i l y  fa r  down ins ide  them. 
(c) A closely related point is that the model des- 
cribed is committed to representation languages where 
members of const ruct ions  are s t r i c t ly  ordered ( \ [c32:  
a ,b \ ]  is a d i f fe rent  ob jec t  from \[c32: b,a \ ]  - -  e.g.  
the la t ter  may fa i l  to unify to give aconstruct, 
while the former succeeds). This may not always be 
very natural, especially where relat ional  languages 
are concerned: since the elements of constructions 
are distinguished by their roles, they do not also 
need to be distinguished positionally. 
A number of modifications along these lines are heing 
discussed in the project. They are not onproblematic 
(or even obviously correct), for example, (b) and (c) 
above both suggest that constructors be treated as 
operations on sets, rather than lists of arguments. 
Apart from changing the formal nature of construc- 
tors, a problem will arise in going from unordered 
representation languages to ones which are ordered, 
motivating an extension to the T-rule notation. Ne- 
vertheless, they seem to within a reasonable distance 
of (and hence compatible with) the essentials of the 
basic model. 
A consequence of the CFG basis of the model is that 
constructs are always hierarchical objects similar to 
tree structures (each application of a constructor 
yields a new l eve l  of structure, in tu i t ive ly ) .  The 
model is most naturally applied in the description of 
linguistic phenomena that can be thought of hierar- 
chically, and in translating between languages that 
capture such phenomena. Thus, i t  is natural ly ap- 
plied in the description of phrase and relat ional 
structures (though cf above), and given the uni f ica-  
tion based semantics, in dealing with phenomena such 
as agreement between members of constructions. 
Moreover, though the 'naturalness' of the treatment 
is perhaps more questionable, it provides interes- 
ting, and apparently workable accounts of a number of 
phenomena that are not obviously hierarchical.  For 
example: i t  is reasonably easy to see hem the relaxa- 
tions of s t r i c t  colapositionality allow a treatment of 
functional control and unbounded syntactic dependen- 
cies (Arnold et al  1985 sketches a crude~ but 
straightforward treatment exploit ing the poss ib i l i ty  
of having functions composed of target 6 constructors 
and var iab les  in T~ru les ) .  
301 
One cart also envisage a treatment of  pronominal refe- 
rence (which is naturally thought of in terms of cn- 
indexation across trees, rather than in hierarchical 
terms) within this model along the following lines. 
Suppose every construct is assigned a unique index, 
and every non-atomic construct is augmented by two 
lists (which we wi l l  refer to jo in t ly  as the ala 
lists): 
(i) an antecedent list, of the indices of the paten-  
tial antecedents the construct contains; 
(it) an an_o~phor list, of the indices nf the 
potentially anaphoric items the construct contains. 
We will say that a member of the antecedent list and 
a member of the anaphor list are 'compatible' provi- 
ding they do not differ with respect to the relevant 
i nherent  linguistic properties (such as number and 
gender). Every time a constructor is applied to some 
arguments, the a/a lists of the arguments are inspec- 
ted: 
(i) if two arguments have compatible items on their 
lists, then art indication that these two items are  
bound to each other is added to the construct that 
results; 
(it) the indices of the arguments, and members of the 
arguments '  a la  l i s t s  a re  used to  form the  re levant  
a la  lists of the construct. 
Apart from testing for inherent properties of antece-  
dents  and anapbors, structural conditions can be 
imposed, e .g .  the c-command condition can be imposed 
by allowing members of antecedent lists to be trams-- 
lured 'upwards' tn only one construct. This seems 
to provide a basic method for expressing all the 
antecedent-anaphor relations, in so far as they are 
grammatically determined, at least. 
It is a natural consequence of the CFG basis of the 
notation that, under" this treatment of antecedemt- 
anaphor  relations, objects do not themselves contain 
an indication of their antecedents (or  anaphors). 
Instead, this information is present in the construct 
that contains them. For the same reasons, the  nota- 
tion involves an interesting commitment in some kinds 
of context senstive translation. 
Consider, for example, the translation of the verb 
know into French, which (for simplicity) we wi l l  take 
to be ~avoir if there is a semtential complement, and 
connaitre if there is a nominal complement, i.e. in 
s tandard  rewrite notation: 
(16) a. know -> cunnaitre I _ np-obj 
b. know -> savoir I__ s-obj 
Our notation has no direct analogue to this sort of 
statement: t i re  contex~ sensitivity has to be taken 
care of in the translation of the construction con- 
taining the verb. Suppose c32 is the English con- 
structor which builds the IS representation of Oules 
knows S v and suppose that English-French transfer 
contains the following T- ru les :  
(17) a. know ==> connaitre 
b. know ==> savoir 
c. c32 ==> of 36 
Then c32:  know, Jules, S wi l l  produce both of: 
(18) (4) Cf~6: connaitre Oules  S' 
302 
(ii) cf36: savoir Jules S' 
and what one expects is that unif ication in (i) (or 
some later translation of ( i ) )  will fail to produce a 
conetruct (e.g, because of 36 checks the Syntactic 
category of its third argument). This seems a very 
natural account for cases such as these, where the 
target G contains the information for making the 
right cho ice ,  But one cannot expect this always to be 
so (e.g. where the information required is only part 
of the source language), and in such cases context 
sensitive T-rules will be required (of relaxation (c) 
above) .  It is clear that this notation is committed 
to such cases being less common, at least. 
As already noted, this model provides for a high 
degree of modularity in principle. In fact, the  
degree of modularity is rather extreme: not only are 
individual Gs modules, but individual constructors 
and atoms are  modules also. Though the  use of a 
feature theory allows some general)motions to be 
captured, the degree of modularity means that many 
generalisations that hold 'horizontally' (across lan- 
guages), and ' ve r t i ca l l y '  (within languagesl are 
missed. 
The most obvious case of horizontal generalisations 
are 'invariances' and default translations across 
languages. For example, one does not expect the 
va lue  of  the  attribute which identifies individual 
lexical items to change normally during analysis and 
generation, and the simplest and most restrictive 
view of transfer would be that nnly this attribute 
changes. Similarly, one knows that syntactic sub- 
jects normally correspond to semantic agents, and 
vice versa. 
Within individual languages some capacity to capture 
generalisations across constructors is a prerequisite 
of some of the modifications mentioned above (in 
particular, CF type treatments of unbounded dependen- 
cies depend on some such mechanism if massive redun- 
dancy is to be avoided). More generally, one would 
like to be able to state conventions (about e.g. the 
percolation of attributes from heads of cnnstructions 
to constructions) once and for all, rather than ha.- 
ring to state them separately in each constructor, 
and there are various defaults which could make con- 
struction of Gs easier (e.g. the default case is that 
verbs  have regu lar  morpho logy) .  
Here we will briefly describe a fairly simple exten- 
sion of the basic notation which is capable of dea- 
ling with these phenomena: ~E~ect~_EE__EuleE I which 
describe (relations betweenl classes of constructs by 
stating part ial  descriptions of (pairs of) con- 
structs. The following are examples: 
(19> 
(20) 
(21) 
(_, {cat=v, morph-form=regulat }) 
( , {cat=X, ...})l (gov, {cat=X, o..}) 
(_, {cat=s, tense=vl}) \[3 ==> 
(_, {time=v2}) \ [ \ ]  
The idea being that such rules can be used to ' in -  
ject" generalisations into existing constructors, 
atoms, or \[-rules. The normal problem with such 
'meta" devices as these is controlling their interac- 
tion. A very simple way of avoiding this would be to 
adopt the following semantics: applying an injection 
rule l to a rule (atom, constructor, or T-rule) R 
succeeds if I unifies with R, in which  case the 
un i f i ca t ion  EgEl(;c~s R. Th is  semant ics  means that  
injection rules cannot affect the cardimality t~f the 
role set, but it greatly simplifies the form and 
umntent nf the ru les  that  must be wr i t ten ,  and pro-  
v ides  a perspicnous way of otat iug  cer ta in  general J . - -  
sa t ions .  
As stated, injection rule (19) is intended to unify 
miLh a l l  atmms that haw~, cat=v, and to add in the 
i n fo rmat ion  that  they have regu lar  morphology. No.- 
l i ce  that  th i s  in jec t ion  rul~., w i l l  fail to app ly  tu 
any atom that  a l ready  has it d i f fe rent  spec i f i ca t ion  
fo r  morph-forla,  so there  is a ~.;traightformard way of 
trnatiug exceptions ouch as irregular verb morpholo- 
gy, (20) is a vpry simple example of a percolation 
injection. When applied to the coustructors of a 
relational l eve l  f;, it will ensure that  the category 
of the head (gov) of a construct, is percolated to tllo 
const ruct ion?  hgain~ exceptions t:au he .~; t ipo lated in 
i ud iv idua l  coest ru~tors .  (21) is intended to state a 
cer respoudenee between tense=v l ,  and t ime=v2,  arid 
will i n jec t  th i s  relation!~hip into a l l  T-Pu les  that  
translate seotences~ 
It is appropriate to end by mentioning the mest 
obvious open questions, since they suggest the direc- 
T:ion which future work should take.  
(i) We have not yet investigated tlm implications of 
the model for robustness, arid while the model has 
been set up uo that  T-rules should he reversible to a 
l a rge  extent~ we have i nsu f f i c ient  practical ex- 
perience wit l l  it to know how far this potential can 
he explo i ted. .  
( i t )  Perhaps the most obv iuos  theoretical commitment 
is that the notation is linguistic \]u nature, He- 
signed for representing linguistic knowledge (it 
would not be a very natural method fo r  representing 
more general ' rea l  world' knowledge). We think this 
is appropriate in HT, which is fundamentally about 
relating l.i_ttt~lEi_stic objects. However, as many exam- 
ples indicate, there is an important role for gener~il 
knowledge in HT, and this must be accommodated some- 
where.? No doubt var ious  compromises are possihle~ 
antl there is certainly room in the model fur s~ch 
quasi-linguistic entities as semaotic features, but 
taking the model serioosly involves rejecting know- 
ledge representation languages as levels per so. The 
ro le  of general  knowledge representat iens  cannot 
therefore be a step in translation, and can only  be 
to provide a method of chmosing between alternative 
representations at linguistic levels. 
(iii) \]his leads directly to another  point: the 
framework provides a number nf mayo of coping with 
nun-determinism (filtering hy target Gs, context 
sensitive T--rules, e.g.), but there is no method fur 
the explicit comlJarisun of competing representations 
(e .g .  as in ' p re ference  semantics' Milks ( tP" lB)) ,  and 
to prov ide  such a method seetas heyond the scope of 
the model we have described. Practically~ it is not 
clear whether thi,.i is a problem or not, however~ an 
appruach which is censistent mith the general spirit 
o~ the model might he to define a cumber of 'choice' 
levels, at which ~:bmices between alternatives would 
be made (tS is the obvious candidate), fie would 
require G and T rules tu be set up se that all alter- 
native representations at these levels would he 
translatimn~lly equivalent~ uo that choice could be 
arbitrary. 
( i v )  We have assumed an extremely simple feature 
theory (e.g. ~'ae have not allowed attribute~ to take 
features as values). It is clear that a more sophis- 
ticated theory is desirable~ and ~ome work has been 
dmee in this direction witllin the  model? llomever~ 
what is not clear is how the extra descriptive paper 
of an extended feature theory  affects the 'pragma- 
t i cs '  of l.he model .... the  way the model should be 
used fo r  l i ngu is t i c  descr ip t ion .  
Investigation mf this model is still at an {:arty 
s tage~ and much of the abowe i s  specu la t ive  mr sche- 
matic.  However, desp i te  i t s  p re l iminary  !;taLus, we 
feel the  approach  described here i5 pr ( Imis iug ,  alto we 
hmpe we have said enuugh to show why ~e feel it is 
worthy of attention. 
More information on the Eurot ra  project can be found 
in e.g.  King & Perschke (1982) and King et  a l  (198U)o 
Wet ___ . _er  enc es 
D. J . t / rnn ld ,  L.aaBpaert & L.des fombe "ELS-3: Eurotra 
Linguistic ,qpecifications ( January 1985)" l:ur el:to 
Report ETL-5, DGXIII) CgC Luxembourg. 
D.d. Arnold, L . Jaspaer t ,  R.amhnsun, S.Krauwer~ H.Ros- 
her ,  L. des Tembe, G.B. Var i le ,  & S. Warwick "~ l.ltll 
View ef the (C~8>, 1 fframewmrl." in Euretra" in . _..Prouee- 
~i.ng>_>.( tl!e ~_qd.DrEg!:~ 9fi fl>-~TetiE~L1 & !'lgttLmO~llogi7 
Eat ~s>ges. ._  in ~!.aEIIuIE .l\[.~vsl<~t_i~k.pf _ N~j?eEaJ, ~.~U~: 
e ga.tLgS~ Co lgate  I ln iv . ,  Hami l tun~ N.Y, 1985, ppo 1-14. 
R.Kaplan & J. Bresmau "Lexical Functional Grammar: a 
Formal System for  Grammatical Representation" in The 
!~e,~t&l IZ.Epz~>En}.~ti.m.L!~k._~Eam(,Lati&_,,kl!h:zl:~t.,~,>, a. 
Bresoan led) ,  HIT P ress ,  19112. 
H.Kay "Funct iona l  Unification Grammar= a Formalism 
for  MT" in Erpc~LeEi0fjs gf j;0_L!N.~} gE Stanford ,  Ca l i -  
fornia~ 1984, pp, 75-7II.  
H. King, R.L.aohnson & L.des Tombe "Eurotra: a Multi- 
lingual sys tem under Deve lopment"  in !~gmp!_LtatioA!al. 
L.ingEi.~Lt*E>, 11 :2 -3 ,  1985, pp. 15.5-169. 
H.King & SoPerschke "Eurotra & its Objectives" in 
Mo.!__ti\[.iEqg.? , 1 :1 ,  19~2, pp. 27-32.  
~l. Lands bergen " Isomorphic  Grammars and the i r  Use in 
t im Roset te  Translation System" to  appear in  H~u:hig(.' 
!.r_~J!~.La_t.t_g\[L!_!.l\]E_~L~t~ At: __t ~)__~_ _ ~ ~1% , ~ll. Kilig ted) ,  Kdin-- 
burgh Univ. Press. 
R.l . lontague Eo.rlEal Pbjj~_osgl/!Ly_, Yale Un ivers i ty  P ress ,  
1974. 
L? des Tmmbe, b . J .A rno ld ,  L. Jaspaer t ,  R. John,.mr~, 
S,Krauwer~ M.Rmsner, I\],Bo Var i le  v & !\], Warwick "t\] 
P re l iminary  Linguistic Framework for  Eorot ra  (dune 
!985)"  in \[{rp_~.!.tE0j_ntkE_?2_t_bE gon2erenE~_p.n _T!Lgpcgt,7 
cal & Methodological Issues in Machine Translation of 
N a t_ ~ E,!!___L~.P_R u_ iLEE~L., Cmlgate  Un iv . ,  Hami I t ch ,  N,Y. 
1985~ PP. 283-288.  
Y.Wilks "Making Preferences Mere Active" in AI ____dour- 
E~!I, II:3, 1978, pp. 197723. 
303 
