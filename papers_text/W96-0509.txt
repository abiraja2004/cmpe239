Generating 'Distributed' Referring Expressions: 
an Initial Report 
Barbara Di Eugenio* 
Computat iona l  Linguistics 
Department  of Phi losophy 
Carnegie Mellon University 
Pittsburgh, PA, 15213, USA 
d ieugen i0andrew,  cmu. edu 
Johanna D. Moore 
Department of Computer  Science, and 
Learning Research and Development Center 
University of P i t tsburgh 
Pittsburgh, PA, 15260, USA 
jmooreOcs,  p i t t .  edu 
Carolyn Penstein Ros~ 
Computat ional  Linguistics 
Department of Phi losophy 
Carnegie Mellon University 
Pittsburgh, PA, 15213, USA 
Carolyn_.Penstein_Rose0cs.  cmu. edu 
1 In t roduct ion  
Consider some possible ways in which S (the 
Speaker) may ask H (the Hearer) to bring her an 
ironing board that is located in the basement: 
(la) Bring me the ironing board in the base- 
ment. 
(1t)) Bring me the ironing board ffom the base- 
ment. 
(lc) Co down to the basement and bring me 
the iwning board. 
Arguably, only in (la) is the location ? of the 
ironing board (the basement) included in the 
NP whose head is ironing board. 1 In (lb), ? 
is a modifier to the verb, from the basement. 
In (lc), ? is just an expectation, derived from 
knowledge about performing a bring action, and 
from the relation between the two actions - -  go 
? Di Eugenio and Penstein Ros6 were partially sup- 
ported by Carnegie Mellon Faculty Development Fund 
# 1-13709. 
LIn the appropriate context, (la) could also be inter- 
preted as asking H to bring the ironing board into the 
basement, where S is (or will be, at the time H executes 
the action). We currently neglect this possibility. 
down to the basement is a substep in the plan 
that achieves bring S the ironing board. 
In these examples, the referring expression i  
the NP is not sufficient o uniquely identify the 
intended referent, but it is its linguistic ontext 
that adds other necessary constraints. This is 
the reason why we call these referring expres- 
sions distributed. To our knowledge, while many 
researchers have worked on generating refer- 
ring expressions, e.g. \[Appelt, 1985\], \[Kronfeld, 
1990\], \[Dale, 1992\], \[Pattabhiraman d Cer- 
cone, 1990\], 2 distributed referring expressions 
have not been addressed yet. 
Note that the whole linguistic context must 
be taken into account while generating (lc): 
this is shown by the redundant and infelicitous 
(2) Go down to the basement and bring me the 
ironing board in the basement. 
Besides planning knowledge about the action 
that a certain verb denotes; lexical knowledge 
about that verb also comes into play. Consider 
2Space \[infitations don't allow us to discuss other re- 
searchers' approaches. 
33 
the contrast between (lc), (3a) aald (3b): 
(3a) Go down to the basement and take the 
ironing board uJith you 
(3b) Go down to the basement and put the iron- 
ing board away 
Arguably the same abstract plan - -  that we'll 
refer to as Fetch - -  may achieve bring x to y, 
take x to y and put x (away) into y: namely, 
go to where x is, get hold of it, and take it to 
y. However, these verbs differ from a lexical 
semantics point of view, and different expecta- 
tions are generated in the three cases. In (lc) H 
expects the ironing board to be in the basement: 
the expectation is strong enough that even if a 
second ironing board is either in sight or salient 
ill the discourse when S utters (lc), H won't 
ground a the referent of tile NP the ironing board 
to the one in sight (although e may presumably 
ask "Isn't that tile one you need?"). In (3a), the 
NP the ironing board must refer in the current 
context, by being either visible or salient in the 
discourse. (3b) is yet a different (:ase: H will 
either ground the NP the ironing board to the 
salient one, if there is one, otherwise he will de- 
lay such grounding until he is in tile basement. 
ill this paper, we describe our first steps to- 
ward generating such referring expressions. Tile 
implementation and experimentation are cur- 
rently underway. 
2 Towards  a so lu t ion  
Our solution is based on the integration of 
a principled discourse planner, LONGBOW 
\[Young and Moore, 1994; Young et al, 1994\], 
with a formalism that represents both lexical 
semantic knowledge about verbs and planning 
knowledge about tim actions that the verbs de- 
note \[Di Eugenio, 1993: Di Eugenio and Web- 
ber, 1996\]. 
LONGBOW is an extension to partial-order 
causal link (POCL) planners, in which a plan 
3Note the difference between referring and grounding: 
an NP refers in the discourse, but it is grounded to an 
entity in the world. 
is represented as a set of partially-ordered steps 
connected by caalsal inks. LONGBOW extends 
POCL planners by introducing action decompo- 
sition. The representation of a plan operator is 
divided into an action operator, that captures 
preconditions and effects, and a possibly empty 
set of decomposition operators: each decompo- 
sition operator epresents a single layer expan- 
sion of a composite step, that provides a partial 
specification for tile subplan that achieves the 
parent step's effects given its preconditions. 
Representation Formalism. Di Eugenio's 
system is able to interpret examples such as 
(lc): it infers the relation between the actions in 
tile two conjuncts 4 and the expectations under 
which tile relation holds. Di Eugenio's system 
is crucially based on a formalism composed of 
two KBs. Tile first, the action taxonomy, stores 
lexical semantic knowledge about verbs - -  the 
semantic primitives are derived from Concep- 
tual Structures \[.lackendoff, 1990\]; the second, 
tim plan library, contains recipes \[Pollack, 1986\], 
i.e. common sense planning knowledge about 
the actions that tile verbs in the action taxon- 
omy refer to. Both are implemented in CLAS- 
SiC \[Brachman et al, 1991\], a description logic 
based system: the terms defined in the action 
taxonomy are used in tile recipes in the plan 
library. Among the defined recipes is Fetch. 
Advantages of the two systems. 
First, LONGBOW keeps clear track of depen- 
dencies among steps by means of causal links. 
if stepl establishes an effect which is a precon- 
dition P2,i for step2, a causal link is created 
between step1 and step2. If a third step stepa 
has a precondition p.%j which is identical to P~,i, 
and if no intervening step has undone p2,i, 5 then 
another causal link will be established between 
stepl and stepa, thus keeping (:lear track of de- 
pendencies among steps. This (:larity can be ex- 
ploited e.g., to awfid generating the redundant 
4Di Eugenio's algorithm actually works on purpose 
clauses, rather than on p~posive conjunctions. 
'~LONGBOW, being based on UCPOP, is able to re- 
solve such threats when they arise. 
34 
(2), as discussed below. 
Second, LONGBOW allows to distinguish be- 
tween intended and. side effects: an effect is in- 
tended if it plays a causal role in a plan \[Young 
and Moore, 1994\]. This is very important from 
a discourse planning point of view: first, the in- 
tentions of the speaker have been widely recog- 
nized ms flmdaanental in both discourse interpre- 
tation and production \[Grosz and Sidner, 1986: 
Moore aald Pollack, 1993\]. Second, if H reveals 
that an intended effect of previous discourse was 
not achieved, S should try to achieve that effect 
again; this is not the case for side effects. 
Third, Di Eugenio's KR system allows ex- 
pressing subtle lexical distinctions ms the ones 
underlying bring and take. It also maintains 
a well specified connection between lexical def- 
initions and the pertinent planning knowledge. 
Finally, there is a natural mapping of Di Eu- 
genio's recipe representation to LONGBOW's. 
which facilitates their integration. 
3 The  generat ion  process  
Examples such as (lc), (an) and (3b) can be 
generated by assuming that the first conjunct is 
a step in a plan to achieve the second conjunct. 6 
Here, we focus on (lc) and on intensional de- 
scriptions of parameters: the expectation i (h:) 
arises because in the Fetch recipe, the initial lo- 
cation of the object to be moved, the basement 
in our examples, is defined only intensionally. 
The parameter depend in INFORM-REF in 
Fig. 1 - -  one of the discourse operators we 
are experimenting with - -  is used when a pa- 
rameter is described intensionally. If no such 
dependency exists, a simpler INFORM-REF 
operator is invoked. In tile Action operator 
of INFORaM-REF, the actual description for 
param is computed by the flmction unique-desc. 
The description will be a conjunction of descrip- 
tors d/; if a di consists of a unary predicate ap- 
plied to param (SIMPLE(d/)), no recursive (:all 
to INFORM-REF is necessary; however, if di is 
6We haven't addressed yet wh~l the system decides to 
expand the domain plan in this way. 
COMPLEX, i.e. describes a relation REL be- 
tween param and other objects, INFORM-REF 
must be recursively called to provide a descrip- 
tion for OTHER-PARAM (di). 7 
INFORaM-REF establishes two effects: that 
the agent is able to identify param, and also 
able to identify depend. Thus, when the plan- 
ner generates the first conjunct ct = Go down 
to the basement, in the context of the plan 
for \[3 = bring S the ironing board. INFORM- 
REFa, s is invoked to generate the description 
the basement: it establishes that the agent is 
able to identify tile basement, and also that 
the agent recognizes tile dependency between 
the basement and the object to be moved. 
When planning to generate f3, INFORM-REF,& 
is called to generate the description the iron- 
ing board in the basement, and thus, INFOR_M- 
REFz2 is recursively called to establish the ef- 
fects that the agent identifies the basement, and 
the locational dependency between basement 
and ironing board. However, such effects have 
already been established, so this step won't be 
expanded; rather, the appropriate causal rink 
will be generated, 9 thus "explaining" why the 
expectation that the ironing board is in the 
basement comes about. Thus, no redundant de- 
scription of tile kind illustrated in (2) will be 
generated. Note that out method doesn't rest 
on 0/being generated before \[3: if the order were 
reversed, INFORM-REFo2 would be expanded, 
and INFORM-REFa wouldn't. However, the 
appropriate causal links would still be estab- 
lished. 
4 Conc lus ions  
We see our work ms synthesizing several themes: 
tile generation of referring expressions; the spe- 
t in this case, we must avoid infinite regress, that may 
arise when using relations in deriving referring expres- 
sions, as discussed by \[Dale and Haddock, 1991\]. 
8The subscript is meant to distinguish different in- 
stantiations of INFORM-lZEF in the plan. 
'aThe new causal ink will link INFORM-REF~ and 
whatever other step would have been using INFORM- 
R.EFz~'s effects as preconditions. 
35 
Action 
Header: INFORM-REF(S, H, param, depend) 
Preconditions: ~ ABLE(H, idendfy(param)) 
Effects: ABLE(H, identify(param)) A ABLE (H, identify (depend)) 
Decomposition 
Header: 
Constraints: 
Steps: 
INFORM-REF(S, H, param, depend) 
3 unique-desc(H, param, depend, dlA...Ad~) 
Start, '4 d,, SIMPLE(d~): INFORM(S, H, d,), 
'? d~, COMPLEX(d~): INFORM(S, H, REL(d,)), 
INFORM-REF(S, H, OTHER-PARAM(d~), d~), 
Final 
,Figure 1: The INFORM-REF  operator  
cific demands  of instructional text: and issues 
of Knowledge Representat ion,  among which the 
need to represent both  lexical and planning 
knowledge about  action verbs. 
We still have quite some work to do. The inte- 
grat ion of the two systems is current ly raider- 
way, and so is the imp lementat ion  and refine- 
ment  of the discourse operators  (some of the 
domain operators,  are those a lready defined in 
Di Eugenio's  KR  system).  We also have to ;~dd 
bring and take to the a~:tion taxonomy. 
References 
\[Appelt, 1985\] Douglas Appelt. Planning English Sen- 
tences. Studies in Natural Language Processing. Cam- 
bridge University Press, 1985. 
\[Brachman etal., 1991\] Ronald Brachman, Deborah 
McGuinness, Peter Patel-Schneider, Lori Alperin 
Resnick, and Alexander Borgida. Living with CLAS- 
SIC: When and How to Use a KL-ONE-like Language. 
In .John F. Sowa, editor, Principles of Semantic Net- 
works -- Explorations in the Representation f Knowl- 
edge, pages 401-456. Morgan Kaufmann, 1991. 
\[Dale and Haddock, 1991\] Robert Dale and Nichol~Ls 
Haddock. Content determination i the generation 
of referring expressions. Computational Intelligence, 
7(4):252--265, 1991. 
\[Dale, 1992\] Robert Dale. Generating Referrin 9Expres- 
sions. ACL-MIT Series in Natural Language Process- 
ing. The MIT Press, 1992. 
\[Di Eugenio and Webber, 1996\] Barbara Di Eugenio 
and Bonnie Lynn Webber. Pragmatic Overloading in 
Natural Language Instructions. International Journal 
of Expert Systems, Special Issue on Knowledge Rep- 
resentation and Reasoning for Natural Language Pro- 
cessing, 9(2), March 1996. To appear. 
\[Di Eugenio, 1993\] Barbara Di Eugenio. Understanding 
Natural Language Instructions: a Computational Ap- 
proach to Purpose Clauses. PhD thesis, University of 
Pennsylvania, December 1993. Technical Report MS- 
CIS-93-91. 
\[Grosz and Sidner, 1986\] Barbara Grosz and Candace 
Sidner. Attention, Intentions, and the Structure of 
Discourse. Computational Linguistics, 12:175-204, 
1986. 
\[Jackendoff, 1990\] Ray Jackendoff. Semantic Structures. 
Current Studies in Linguistics Series. The MIT Press, 
1990. 
\[Kronfeld, 1990\] Amichai Kronfeld. Reference and Com- 
putation. Studies in Natural Language Processing. 
Cambridge University Press, 1990. 
\[Moore and Pollack, 1993\] Johanna Moore and Martha 
Pollack. A Problem \['or RST: the Need tbr Multi- 
Level Discourse Analysis. Computational Linguistics, 
18(4):537-544, 1993. 
\[Pattabhiraman and Cercone, 1990\] T. Pattabhiraman 
and Nick Cercone. Selection: Salience, relevance 
and the coupling between domain-level tasks and text 
planning. In Proceedings of the Fifth International 
Workshop on Natural Language Generation, Pitts- 
burgh, Pennsylvania, pages 79-86, 1990. 
\[Pollack, 1986\] Martha Pollack. Inferring Domain Plans 
in Question-Answering. PhD thesis, University of 
Pennsylvania, 1986. 
\[Young and Moore, 1994\] R. Michael Young and Jo- 
hanna D. Moore. DPOCL: A Principled Approach to 
Discourse Planning. In Seventh International Work- 
shop on Natural Language Generation, pages 13-20, 
Kennebuakport, Maine, 1994. 
\[Young et al, 1994\] R. Michael Young, Martha E. Pol- 
lack, and Johanna D. Moore. Decomposition and 
causality in partial order planning. In Second Interna- 
tional Conference on Artificial Intelligence and Plan- 
ning Systems, 1994. 
36 
