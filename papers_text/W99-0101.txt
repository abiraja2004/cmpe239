, 
O 
@ 
O 
O 
O 
O 
O 
@ 
O 
O 
O 
O 
O 
O 
O 
O 
@ 
O 
O 
O 
@ 
O 
O 
O 
O 
O 
O 
O 
@ 
O 
O 
O 
O 
O 
O 
O 
O 
O 
O 
An Integrated Approach to Reference and Presupposition 
Reso lu t ion  
Rober t  T. Kasper ,  Pau l  C. Davis~ and Cra ige  Rober ts  
Department of Linguistics 
Ohio State University 
222 Oxley Hall 
1712 Neil Avenue 
Columbus, OH 43210" 
e-mail: (kasper~ pcdavis, croberts}@ling.ohio-state.edu 
Abstract 
We describe an approach to resolving definite de- 
scriptious and pronominal anaphora s subcases of 
a general strategy for presupposition satisfaction. 
Generally, apresupposition is satisfied in a context 
if the context contains aspecific type of information 
and is organized in such a way that this information 
can be retrieved by the interlocutors. The model 
of discourse context we develop assumes that dis- 
course structure is organized around astack of ques- 
tions under discussion, which plays a crucial role in 
narrowing the search for referents and other presup- 
posed information. The algerithmA for maintaining 
the discourse structures and retrieving presupposed 
information are presented and illustrated by several 
example dialogues in which human users interact 
with an agent omake hotel reservatious. 
I In t roduct ion  
"Any theory of referring expressions must take into 
account the discourse context in which they ot~ur. 
Indeed, previous research as shown that the hier- 
archical organization of discourse is fundamentally 
related to the rderence resolution process. In this 
paper, we show how a highly structured discourse 
model, in conjunction with a treatment ofreferring 
expressions as presuppmitional, enables us to de- 
velop a common strategy for z~olving a number of 
reference resolution problems, such as pronominal 
anaphora nd definite descriptions. We also out- 
line how this approach extends to a larger group of 
phenomena which we take to be presuppositional,. 
including domain restriction, ellipsis, and lexically 
and syntactically triggered presuppositions. All of 
these constructions are presuppositional in a broad 
sense, in that their use assumes that certain infor- 
marion can be retrieved from the discourse context. 
RecoL, nlzing the structure of the discourse will there- 
fore play a crucial role in narrowing the search 
for referents and other presupposed information. 
We will illustrate our approach with four example 
human-computer dialogues, hown below. SYS in- 
dicates the utterances spoken by the computer sys- 
tem. 
Example I illustrates a case of pronominal 
anaphora resolution (it in (8)), in which recowniT.ing 
the hierarchical structure of the discourse is crucial 
for identifying the antecedent, which was introduced 
many utterances earlier. The overall topic of the 
conversation is the question of where the user 
can find a hotel for June 15th in New York, and 
th|8 snper-question both facilitates and constrains 
the intexpretafion of fl in (8). This example is 
similar to the well-known examples of long-distance 
anaphora in task-oriented dialogues described by 
Grosz (1981). Our approach is consistent with pre- 
vious research that uses the intentional structure of 
discourse to determine a set of potential antecedents 
for pronominal  anaphora. The following examples 
will illustrate how a broader ange of reference 
and presuppositional constructions may also be 
addressed by using the discourse structure to guide 
the search for relevant information. 
Example L
1) USER: rm lookln~ for a hotel for June lSth in 
New York. 
2) SYS: What part of the city would you prefer? 
3) USEI~ Manhattan, ear Central Park. 
4) SYS: How many nights? 
5) USF~ Just 1. 
6) SYS: Will anyone be traveling with you? 
7) USEI~ No. 
8) USEP~ Oh, I want it to have a swimming pool 
too. 
" Paul C. Davis is the recipient et ~ a Motorola Partnemhipe 
in Research Grant. 
Example II shows a definite description, the 
hotel in (7), whose referent can only be uniquely 
determined with respect o the indefinite hotel de- 
scription (a hotel close to Madison Square Garden) 
in the question under discussion (1): 
Example II. 
1) USER: I want to make a reservation at a hotel 
close to Madison Square Garden. 
2 )  SYS: What dates will the reservation be for? 
3) USER: March 3rd and 4th. 
4) SYS: Wouldyou like a single room? 
5) USER: Yes. 
6) USER: Also, I'll need a conference room on 
the 4th. 
7) USER: I'd prefer it if the hotel had one. 
Example HI involves a contextually determined 
domain restriction, with a quantificationai deter- 
miner every, innstrating that domain restriction 
must be handled in a ~imilar way for a broader 
class of expressions than those which are normally 
regarded as rderring expr_~-_qjons or presupposition 
triggers. 
Example HI." 
I) USEI~ Does the Holiday Inn have any vacan- 
cies for 
a) Tuesday, 12/4- Friday 12/7? 
b) Thursday, 12/6 - Saturday 12/87 
2) SYS: Yes, several. 
3) USER: Do they have a breakfast buffet 
every mor~;=g? 4) SYS: 
a) Yes, Monday through Friday. 
b)  No. There's a breakfast buffet Monday 
through 
Friday, but none on Saturday. 
Finally, in example IV we give a glimpse into 
our larger research program, where an elliptical 
question (3) must be resolved with respect o the 
question under discussion, in addition to estab- 
lishing the reference of the deflm'te description the 
Marrio~ where the context might contain more 
than one hotel with that name~ 
E~-mple IV. 
I) USER: Which hotels near the airport have 
vacancies? 
2) SYS: The Holiday Inn and Sheraton have 
vacancies. 
3) USER: How about the Marriott7 
4) SYS: No, the airport Marriott doesn't have any 
vacancies. 
The remainder of the paper is organized as follows. 
In section 2 we discuss our assumptions about the 
structure Of discourse and the related background 
literature. In section 3, we present algorithms which 
we have developed in a partially completed imple- 
mentation of a natural language dialogue system 
where users interact with an automated hotel reser- 
vation booking system. In section 4, we discuss the 
use of the algorithms and discourse structures to 
resolve the reference and presupposition problems 
shown in the above examples. In the final section, 
we highlight he contributions of our approach and 
discuss future plans related to this research. 
2 Background: Discourse Structure 
We assume the general theoretical framework of 
Roberts (1996), where discourse is formally charac- 
terized as a game of intentional inquiry. As in Grosz 
& Sidner (1986), discourse is organized by the in- 
terlocutors' goals and intentions and the plans, or 
strategies, which conversational participants develop 
to achieve them. Following Stalnaker (1979), the pri- 
mary goal of the language game is communal inquiry, 
i.e., interlocutors attempting to share information 
about heir world, with the repository of that shared 
information characterized asthe interlocutors' com- 
mon groun~ CG. The set of acceptable moves in the 
game are defined by the (conventional nd conver- 
sational) rules of the game, and are classified on the 
basis of their relatio_n~blp to the goals. Ignoring im- 
peratives, there are two main types of moves (see 
also Carlson 1983): questions and assertions. If a 
question is accepted by the interlocutors, this com- 
mits them to a common dis(x)ur~ goal, l~lding a sat- 
isfactory (asserted) answer; like the commitment to 
a goal in Planning Theory, thiA strong commitment 
persists until the goal is satJ'~ed or else shown to be 
unsatisfi~le. The accepted question becomes the 
immediate topic of discussion, the quest/on under 
discussion. An assertion is a move which proposes 
an addition of information to the CG. 
Roberts defines the structure of a discourse at 
a given point, its Information Structure, as a tu- 
pie which includes (among other things) the ordered 
set of moves in the discourse (M), CG, and the set 
of the questions currently under discussion at that 
point (QUD). The QUD is ordered by order of ute 
? terance and is updated in a stack-!i!~ f~b!on, I with 
questions popped when they are answered (or de- 
f.-mined to be practically unanswerable). The or- 
dered set of questions under disc~-_~f~on corresponds 
to the hierarchical intentional structure of the dis- 
course. The QUD in this structure constitutes the 
set of d/sco,rse goa/s of the interlocutors; the dis. 
course goals are only a subset of the set of common 
.goals of the interlocutors, their domain goals, and 
1 However, all elements ofthe QUD list are accessible dur. 
ing the interpretation f an utterance. Only the top element 
is wr/table, but any entry is readable. 
2 
@ 
0 
0 
0 
O 
0 
O 
0 
0 
0 
0 
0 
@ 
0 
@ 
0 
@ 
0 
0 
0 
@ 
0 
0 
0 
0 
O 
0 
0 
0 
0 
0 
0 
0 
0 
0 
the discourse goals ar e subordinate to, and subserve 
the domain goals. Hence, the requirement that in- 
terlocutors stick to the question under discussion is 
just an instance of the more general commitment 
to plans; and in turn, in a fully integrated theory 
we would expect hat domain goals and plans would 
influence interpretation as directly as the discourse 
goals represented by the questions under discussion. 
Any move in a discourse game is interpreted with 
respect to the Information Structure of the discourse 
at that point. There are two main aspects to the 
interpretation of any given move: its presupposed 
content and its proffered content, the latter includ- 
ing what is asserted in an assertion and the non- 
presupposed content of questions and commands. 
When an utterance presupposes a proposition p, 
then in order for the utterance to be felicitous in the 
context, p must be entailed by the CG (Staluaker 
1979). But in addition, any move in a discourse 
is interpreted by interlocutors under the Gricean 
met, a-presupposition f Relevance, with Relevance 
formally defined as follows in Roberts' framework: 
(1) A move m is Relevant o the question under 
discussion q iff (i) m is an assertion such that 
CGU{m} entails a partial answer to q, or (ii) m 
is a question whose complete answer contextu- 
ally entails a partial answex to q. 
(10)) tells us that the interpretation of an as- 
sertion will be constrained so as to yield a partial 
answer (possibly via contextual entailment) o the 
question under discussion. (l(ii)) tells us that the 
Q UD in a felicitous Information Structure is con- 
strained by Relevance so that each question on the 
QUD must address the (prior) question below it on 
the stack. Of course, (1) correctly predicts a vari- 
ety of classical Gricean conversational implicatures, 
now characterizable as contextual entailments. But 
Roberts argues that Relevance is also crucial in pre- 
supposition resolution, broadly construed to include 
anaphora resolution, the interpretation of ellipsis, 
and domain restriction (Roberts 1995), as well as 
lexically and syntactically triggered presuppositions. 
We will also assume the general approach to 
anaphora resolution argued for in Roberts (1999). 
The CG is augmented with.a set of discourse refer- 
ents familiar to the interlocutors, the Domain of the 
discourse context. All definite NPs, including pro- 
nouns and demonstratives as well as definite descrip- 
tions using the, presuppose both weak \[amiliariQI 
and informational uniqueness. Weak famifiarity (cf. 
the slightly different notion of familiarity in H_m'~ 
1982) is the theoretical realization of anaphoricity, 
and is licensed by existential entailments ofthe com- 
mon ground, not requiring an explicit NP antecedent 
or even perceptual salience of the intended referent: 
(2) Weak Familiarity: A discourse referent i i s  
weakly familiar in a context C (i E Domain(C) 
and C encodes the information that i has prop- 
erties Pi . . . .  , Pk) iff the Common Ground of C 
entails the existence of an entity with properties 
P~, . . . , Pk. 
Informational uniqueness only requires that the 
discourse referent which satisfies the defmite's famil- 
iarity presupposition be unique among the discourse 
referents in the context in satisfying the definite's 
descriptive content. These two constraints sufllce to 
characterize the presuppositional content of definite 
descriptions: 
(3) Presupposit ions of  Definite Descriptions 
(informal): Given a context C, use of a definite 
description NPi presupposes that there is a dis- 
course referent weakly familiar in C which is the 
unique weakly familiar discourse referent which 
satisfies the (possibly contextually restricted) 
descriptive content of NP/. 
Unlike Russell's (1905) theory, this does not gen- 
erady entail semantic uniqueness, although in cer- 
tain special contexts it will yield the same effect via 
pragmatic means. Definite descriptions may have 
their descriptive content contextually enriched in the 
same way that domain restriction works for oper- 
ators generally, i.e., via Relevance to the question 
under discussion. This will be illustrated in our dis- 
cussion of example 4below. Many apparent counter- 
examples to the presupposition f uniqueness for def- 
inite descriptions are solved by appeal to this prin- 
cipled contextual enric\]~ment, as discussed at length 
in Roberts (1999). Pronouns carry an additional 
presuppomtion f maxima\] salience: 
(4) Presupposit ions o f  Pronmmm (informal): 
Given a context C, use of a pronoun Pros pre- 
suplz3ses that there is a discourse referent i in 
C which is the unique weakly familiar discourse 
referent that is both maximally salient and sat- 
isfies the descriptive content suggested by the 
person, number and gender of Proi. 
This amounts to an additional, conventional re- 
striction on the search space for pronominal an- 
tecedents, implemented along the general lines sug- 
gested by Grosz & Sidner, and explains the differ- 
ential distribution of pronouns and definite descrip- 
tions. We will discuss how m~-~dmal s lience is im- 
plemented in terms of the QUD stack in ?4. These 
presuppositional constraints result in a straightfor- 
ward theory of anaphoric reference which explains a 
broad range of data and can be extended to a treat- 
ment of demonstrative NTs as definites, as well. 
- 3 
process_utterance (U) 
"/:1:1. 1. Determine contextual ly  in terpreted meaning. 
ULF = parse(U) 
(CULF, CDRS) = determine.L'ULF(ULF, Level) 
7.Y.~ 2. Update discourse s t ructures .  
I f  presupposi t ions remain, 
attempt o accommodate hem by adding information from system database to  CG. 
I f  accommodation fa i l s  (sys?em has no information or system informat ion i s  
incons is tent  g i th  CG), indicate non-acceptance of move. 
I f  U is  an asser t ion:  
assert CULF to  CG, 
update QDL of C~D\[top\] (i.e., merge CDRS into CDRS of QDL) 
If U is a question: 
push new QDL entry <ULF, CULF, CDRS> onto QUD 
~7, 3. Call back-end appl icat$on. 
Perform SYSTEM act ion (e .g . ,  query or update database) 
Perform SYSTEM dialogue move i f  necessary (e. g . ,  generate a response) 
O 
O 
O 
O 
O 
O 
O 
O 
O 
O 
O 
O 
@ 
O 
O 
O 
O 
determine~lLF (U, Level) 
i f  atomic_formula(U) 7, contains no presuppos i t ional  operators 
re~urn (U, {}) 
e lse (U must contain an operator) 
return resolve_term(U, Level ? 1) 
Figure 1: Presupposition resolution algorithm 
3 Reso lu t ion  A lgor i thms 
In Figures I, 2, and 3 (shown later in ?4.4), we 
show simp/ified, pseudo-coded versions of the al- 
gorithm~ which drive the presupposition resolution 
process. Of central importance in this process is 
the maintenance of the QUD stack. Each entry on 
the stack is represented by a Question Data Log 
(QDL), an ordered triple which contains the utter- 
ance's logical form (ULF), its Contextually Under- 
stood LF (CULF), and a set of current discourse 
referents (CDRS). QDL entries represent i~orma- 
tion about units of discourse structure which roughly 
correspond to the discourse segments developed by 
Grosz and Siduer. 
Process.utterance is the top-level function in- 
yoked for each discourse utterance. The utterance 
is parsed to yield a logical form representing its 
context-independent meaning (ULF). This ULF is 
further processed by det~e-CULF ,  the. goal of 
which is to produce a refined logical form (CULF) 
and a set of discourse referents (CDRS) by.resolv- 
ing presuppositions with respect o the current con~ 
text. Presuppositions are represented in the logical 
form by certain operators~ including def ,  pronoun, 
(for wh-questions), and WH.EllJ.peis. The terms 
introduced by these operators, as., well as other 
general i~ quantifier terms, are processed by the 
resolve_~erm function (see Figure 2). The set of 
presuppesitional operators listed in this algorithm 
covers the exmnples tlmt we will discuss, but is not 
intended to be exhaustive. After resolve_term has 
processed a presuppositional term, the variable that 
it binds will appear on the CDRS list, and will ei- 
ther be identified with a set of referents from the 
common ground or be tmanchored (indicated by the 
empty set or '?'). Once the CULF and CDRS are 
determined, the discourse structures, including the 
CG and QUD, are updated, depending.on the type of 
conversational move (i.e., assertion or question). Af- 
ter the dialogue model has been updated, the CULF 
is sent to the back-end application (e.g., to query or 
update its database), and the system may generate 
utterances as need~L 
The algorith _,~ presented here have been hnple- 
mented in Common Lisp, using the Loom knowl- 
edge representation framework (MacGregor (1991)) 
to maintain the common ground and background 
knowledge of the hotel application domain. Sev- 
eral components, e.g., the emtchtsubst i tu te  and 
add_domain.resCriction functions, have not yet 
been implemented in a fully general way, and cur- 
rently handle only simplified cases. The e~amp\]es 
discussed in the next section demonstrate how the 
r~olution procedure works. 
4 
O 
O 
O 
O 
O 
e 
O 
O 
O 
O 
O 
O 
O 
O 
O 
O 
O 
O 
resolve_term(Term, Level) .  
Let OP = top- level  operator of Term 
VAR = top- leve l  var iable of Term 
RESTR = top- level  res t r i c t ion  of Term 
NS = top- leve l  nuclear scope of Term 
~ Process embedded formulas ins ide-out 
(RESTR1, CDRS.R) = determine_CULF(RESTR, Level) 
(NS1, CDRSJS) = determine_CULF(NS, Level) 
i f  OP i s  a non-presupposttional operator: -.- 
DomainRestr = add_domain_restriction(VAR, RESTR1, QUD) 
return (OP\[VAR,DomainRestr,NS1\], CDRS.R U CDRS.NS) 
else (handle according to OP type) 
case OP=pronoun: ~ must be anaphoric reference 
RANKEDJIEFERENTS = r~-k~ccessible.referents(QUO, RESTR1) 
REFERENT3ET=mmx4mAI.elements(RANKEDJIEFERENTS) 
I f  sinKleton(REFERENT.SEr), 
~assume REFERENT.SET= {INST}, subst i tu te  INSTfor VAR in NS1 
reEurn(NSI\[VAR->INST\], {(VARREFERENT.SET)} U CDRS.NS) 
? else report no sa l ient  re ferents  or fa i lu re  of Uniqueness presupposit ion 
case OP=def: Z possible anaphoric reference 
REFERF2tT~'ET = all_accesstble~eferents(QUD, RESTRI) 
I f  singleton(REPEBENT.qET), 
return(NSI\[VAR->INST\], {(VAR~.SL~r)}U CDRS_NS) 
else i f  I~_SL~\ [  > 1, 
repor? fa i lu re  of uniqueness presupposit ion 
else Z no sa l ient  antecedent, re t r ieve  re ferent  from common ground 
DomatnRestr : add.domaiu.restrictton(VAR, P~..~I'R1, QUD) 
REPERENT.qET : retrieve_referents(VAR, DomainRestr, CG) 
I f  singleton(REFERENT.SET), 
return (0P\[VL~,DomaLuRestr,NS1\], {(VAR REFE:RFJ~_qL~I')} U CDRS? U CDRSJ~S) 
else i f  laUEaE~r.S~I > I ,  
report fa i lu re  of uniqueness presupposit ion 
else ~ attempt ?o acco,-,odate la ter  
return (OP\[VAR,DomainRestr,NS1\], {(VAR {})} U CDRS.RU CDRSJ/S) 
case ~: 
DomLinRestr - add.domatn_restriction(VAR, RESTR1, QUD) 
case non-top- levelORnon-question: X non-prasupposRional 
return (OP\[VAR,DomdnRestr,NS1\], CDRS.RU CDRS_NS) 
case eh-question: ~presupposes some object sa t i s f ies  DomatnRestr 
~-qET  = retrieve_referents(VAR, DomatnRestr, CG) 
return (OP\[VAR,DomainRestr,NS1\], {(Vat REFEREMT-qET)} U CDRS.R U CDRS_NS) 
case polar-question: 
return (OP\[VAR,DoBainRestr,NS1\], CDRS_NS) 
case WHll ltpsis: 
resolveJ~H_Ellipsis(Term, Level) 
shown in Figure 3 
Figure 2: resolve_term a/gorithm 
. , L  
4 Discussion of Examples 
In this section, we discuss the examples given in 
the introducti6h, and highlight how the presuppo- 
sition resolution algorithms can be used to resolve 
pronouns, definites, and quantifiers in general (i.e., 
reference related presuppositions, under our view) 
as well as other presuppositional phenomena, such 
as elliptical questions. 2 We illustrate the crucial 
changes which take place to the QUD data struc- 
tures, allowing effective resolution of referents and 
presuppositions. 
While the Utterance LF (ULF) describes only the 
literal content of an utterance, the CULF, along with 
the CDRS, can be thought of as a record of what 
the utterance r ally means, in the context in which 
it is said. For example, the following (ULF, CULF, 
CDRS) triple illustrates the QDL structure that re- 
suits from question (2) of Example II (What dates 
will the resereation be for.~: 
(A\[z, date(z), d~/\[I/, reserv,ztion(y),/or.time(y, z)\]\], 
Air, date(z),def\[y, re,ervat/on(y) A 
3\[z, hotd(z) ^  r~.ar(z, ~SG), atJoc(zl, z)\], 
fo~+me(m =)\]\], 
{(x:,hte ?)(y.'mm-mtion ?)}) 
Each disc?urse referent in the set of CDRS is 
shown in the form (var iable:type insCance). 
One fact to keep in mind when viewing the examples 
is that questions always produce a new QDL entry 
? on top of the QUD stack, and therefore a new CULF 
and CDRS, while answers may update the CDRS of 
the current entry on top of the QUD stack, but never 
produce a new one. 
4.1 Pronomhm! Anaphora: Example I
We will focus on the resolution of the pronoun it 
in the final utterance (8). We claim that at any 
time there is a set of accessible entities in the dis- 
course, and when a pronoun is used in a discourse 
felicitously (i.e., as constrained by Relevance), there 
needs to be a unique maximally salient discourse ref- 
erent for the pronoun belonging to this set of acces- 
sible entities. Under our approach; the set of ac- 
cessibh entities is represented by the union of the 
CDRS sets of all entries on the QUD stack. Salience 
is a partial ordering on this set determined primarily 
by two factors. First, the members of the CDRS of 
" each entry on the QUD stack are more salient than 
those for all entries below it on the stacL Second, 
the relative salience of discourse referents within the 
CDRS of a single QDL entry is determined by local 
constraints, uch as those given by centering theory 
(cf. Grosz, et.al. (1995)), or the theory of focusing 
~The careful reader will note that these dialogues con- 
taln additional reference r solution problems, uch as one- 
anaphora (example II) and a nonplural ntecedent forthe~/ 
(example III), etc., not discussed here for brevity. 
developed by Suri and McCoy (1994). Our overall 
approach could be adapted to use any theory of local 
coherence to determine a partial ordering over the 
CDRS within a discourse segment corresponding to 
a single QUD,  but it is similar to Suri and McCoy's 
approach in allowing the CDRS of prior questions 
to be stacked. Further explanation of how center- 
ing constraints can be integrated with our approach 
is given by Roberts (1998). In our implementa- 
tion of pronoun resolution (see Figure 2), the func- 
tion r=-lr .accessible_referents gives the partial 
ordering of the accessible entities from the QUD, fil- 
tering out all entities that are incompatible with the 
agreement features of the pronoun, which are rep- 
resented in the restriction component of a pronoun 
term. 
In processing this dialogue, the system treats (I) 
as a question (requests and statements ofneed and 
desire should be coerced to questions), and produces 
(CDRS I), which is the set of discourse referents 
mentioned in sentence (1). 
(CDRS 1) 
{(x:person user)(y:hotel ?)(z:date D1)(w~.city NYC)} 
As the system attempts to find out more specific in- 
formation (imagine that it is filling out a template), 
it asks subquestions, such as (2), (4), and (6). After 
each subquestion, a new entry is added on top of the 
QUD stack, and therefore a new CDRS as well, e.g., 
the set of discourse referents in the top QUD entry 
aRer (2) is (CDRS 2). 
(CDRS 2) ((w:city NYC)(x:area ?)(y.-perso n nser)} 
When a subquestion is answered, as in (3), the 
CDRS of the current QUD is updated, e.g., the ref- 
erent (x:area ?) becomes (x:area Manhattan), and 
a new referent introduced in the answer is added: 
(z:area CentralPark). However, once a question 
is completely answered it is popped off the stack. 
Thus, after (3) is completely processed as an answer 
to (2), the stack is popped, and subquestious are 
also popped after processing (5) and (7). Therefore, 
when we arrive at (8), the QUD stack is just as it was 
aRer (I), since all of the intervening subquestions 
have been popped. This approach accounts for the 
observation ~ more recently mentioned entities, 
such as Manhattan or Centre/Park, are less likely as 
antecedents for/t  than those from (CDRS 1), which 
are closer in terms of hierarchical discourse struc- 
ture. 
In order to determine the antecedent for it, 
r~-k~ccess ib le . re ferents  only has to consider 
(CDRS I), returning a subset from which (x:person 
user) is removed, because a person, being animate, 
does not match the restrictions of /L Thus,  the 
search for possible antecedents has been significantiy 
0 
0 
0 
O 
O 
0 
0 
@ 
@ 
@ 
0 
0 
O 
O 
@ 
0 
O 
0 
0 
0 
O 
6 
O 
O 
O 
O 
@ 
O 
O 
O 
@ 
O 
O 
@ 
O 
O 
O 
@ 
O 
O 
@ 
O 
O 
O 
O 
O 
O 
O 
@ 
0 
constrained by using the CDRS associated with the 
QUD. Among the remaining .elements, the most 
likely antecedent is (y:hotel ?), which we call an 
unanchored iscourse referent, since it is not yet 
bound to an actual instance of a hotel. This might 
be ranked highest by some versions of centering the- 
ory, because it is a direct complement of the verb, 
while the other referents were introduced by adjunct 
phrases (for June 15th and in New York). In general, 
however, pragmatic plausibility must be considered 
as an additional filter when determining whether a 
candidate is a potential antecedent. For example, 
(z:date D1) can be ruled out because it is not plau- 
sible for dates to have swirpmlng pOOlS. 
4.2 Definite Descriptions: Examples I I - IV  
Although definite descriptions can often be identi- 
fied with antecedents from the CDRS in essentially 
the same way as pronouns (since the set of CDRS is 
a subset of the CG Domain), they are not required 
to corder with a maximally salient discourse refer- 
ent. Therefore, our algOrithm specifies three ways 
for a definite reference to be resolved. First, we check 
whether the CDRS accessible on the QUD stack con- 
rains a unique element that matches the restriction 
of thedefinite operator. Second, if there is no salient 
antecedent ofthe appropriate type, then we attempt 
to find a unique entity in the CG which satisfies the 
restriction. Third, if this fails, we use acco_m_moda- 
tion where possible to introduce an entity from the 
application's databs-qe into the CG. 
In example II, we focus on the resolution of the 
hotel in sentence (7). We first look for an appropri- 
ate antecedent in the CDRS ac _ce_~J'___'ble on the QUD 
stack, as in our treatment of pronominal anaphora, 
so we need to trace the stack for this dialogue. A re- 
quest is made by the user in (1), followed by a series 
of specific questions generated by the system. The 
QUD after (1) has the following CDRS: 
(CDRS 1) ((x.person user) ~ o n  ?) 
(,:hotel ?) (w~.place MSG)} 
Subquestious are asked in (2) and (4) and an- 
swered in (3) and (5), respectively, so the QUD stack 
is pushed and popped, but at (6), it is at the same 
state as it was after (1}. (6) is interpreted as a re- 
quest, so a new entry with (CDP~ 6) is pushed onto 
the QUD on top of the QDL for (1). 
(cvRs  e} ' 
{(x:pe~son user) (v:conf-room ?) (u:date D4)} 
In order to interpret the d~finlte description 
anaphorically, we search for discourse referents 
whose type satisfiesthe xplicit hotel restriction 
within the set of all accessible CDRS, viz., the union 
of CDRS 6 and CDRS 1. Since this set contains ex- 
actly one referent (z) which matches the hotel type, 
the uniqueness presupposition is satisfied" and z is 
selected from CDRS 1 as the antecedent. 
It is also possible for a definite description to 
have no explicit antecedent, as in the Marriott 
in sentence (3) of example IV. In such cases, 
an empty set of referents will be retttrned by 
all_accessible-referents, and our algorithm will 
attempt to retrieve a referent from the common 
ground. Before resolution, the content of this de- 
scription is DEF 3, in which the variable ?NS is a 
placeholder for the unspecified nuclear scope of the 
def operator. 
(DEF 3) 
de/\[y, Hotel(y) ^ Na..ed(~, M a,','iotO, ?.s\] 
The restriction of this term is obtained from the 
lexical entry for Marriott, which contains the infor- 
mation that it refers to a hotel, in addition to speci- 
fying its name. Although we rely on domain-specific 
knowledge in assuming that it refers to a hotel, we 
believe this assumption is reasonable, because the 
proper names for hotels can be automatically ac- 
quired from the hotel database used by the applica- 
tion. 
Now suppose that there are a number of Mar- 
riotts in the area. In an empty discourse context, 
this reference would have an unsatisfied uniqueness 
presupposition, so the system would need to ask 
the user which Marriott was intended. However, in 
this case, uniqueness can be established by search- 
ing the QUD for an appropriate domain restriction, 
which can be conjoined with the explicit restriction 
given in (DEF 3). Since doma/n restrictions can 
be contextually supplied for most restricted oper- 
ators, we interpret (DEF 3) as if there were an addi- 
tional conjunct, which is schematically represented 
by Qvn.arara(z) in (DF.~" 3')3 
(DEF 8') 
cle/~, (Hotel(y)ANamed(y, Ma~/at"t)AQUD.REST.(Z)), 
?Ns\] 
As in our treatment of anaphora, the key to con- 
straining the search for an appropriate domain re- 
striction is the QUD structure of the discourse. The 
entry on top of the QUD corresponds to question (I) 
of example IV, whose CULF is (simpli~ed): 
(CD~F 1) A\[z, Hotd(z)^Ne~r(z, Airport), 
3Iv, De~(y), So~V~=~uO-(-, y)\]\] 
To determine whether any implicit domain restric- 
tion can be added to the Marriott, our algorithm 
Calls add.domain_resl:r$ction t  search the QUD 
for predicates that match the same basic type as the 
SWe do not actually include an explicit conjunct for the 
domain restriction i our implemented logical forms, because 
an implicit domain restriction may be added to virtually any 
restricted operator, as motivated by Roberts (1995), and it 
is of course possible for no new information to be added by 
domain restriction. 
7 
explicit restriction, HOteL In (CULF 1) it finds the 
restriction Hotd(z) A Near(z, Airport), which can 
be added in place of the virtual QUD_RESTR(X) con- 
junct in (DEF 3') to further restrict he domain for 
the Marriott. This restriction (DEF 3") is then used 
by ret r ieve . re ferents  to find a matching referent 
in the CG. 
(DEF 3") clef\[y, Hotel(y) A Named(y, Marriott) 
^ Near(y, Airport),?NS\] 
It is important o note that the familiarity pre- 
supposition for a definite description does not re- 
quire its referent to be previously mentioned in the 
discourse. In sentence (1) of Example HI, the ref- 
erent for the Holiday Inn does not yet exist in our 
representation f the common ground, because the 
system initially has no knowledge that the user 
is aware of any particular Holiday Inns. In such 
cases, no objects are returned from the CG by 
retr ieve_referents,  and the definite presupposi- 
tional term will remain with an unknown referent 
in the Output of determine.CULF. Our approach to 
accommodation for such unsatisfied presuppositions 
(in step 2 of process_ul;terance) is to look for a 
referent in the application'S private database of facts 
about he domain of hotels, since this database rep- 
resents all of the world knowledge that the system 
has available. If it finds a unique hotel named Holi- 
day Inn, we can assume this hotel satisfies the user's 
presupposition. On the other hand, if it turns out 
that there are either no hotels named Holiday Inn 
in the database, or multiple Holiday Inns, the sys- 
tem could report he failure of these presuppositions, 
rather than giving an uninformative simple negative 
answer to the user's question (1). 
4.3 Generalized Dom~|n Rest r i c t ion :  
Example H I  
Consider next the quantificational de f iner  ever// 
in sentence (3) of example HI. It should be clear 
that the user is not ~.qld~ about every morning for 
all time, hut only about all mornings during the 
planned trip. As with definite descriptions, our algo- 
rithm allows the restriction of most operators with 
semantically contentfifl restrictions i to be further 
specified by information from the QUD, so the in- 
terpretation of every morn/rig will differ depending 
on whether the dialogue began with question (la) 
or (Ib). Now, if it is the case that the Holiday Inn 
has a breakfast buffet on weekdays only, it is imp0r- 
rant for the system to answer (3) appropriately, asin 
(4s) and (4b), depending upon the context created 
by (h) and (Ib). 
4Domain restriction isnot usually applicable to pronouns 
and other expressions that have little explicit content, be- 
cause these expressions depend on recovering a salient an- 
tecodent in order to determine the type of the refenmt, rather 
than searching for a l~ icu la r  type of object in the common 
ground. 
To determine the domain restriction for ev- 
ery morning, add_domain.xestrict ionsearches the 
QUD for predicates that match the same basic type 
as the explicit restriction, morning. In this case, we 
take the basic type to be a temporal entity, so it 
will search for temporal descriptions in the QUD. s 
By using the QUD stack to constrain the search, ev- 
ery Will quantify over any temporal entities that are 
found at a level of discourse structure closest o the 
current segment, but crucially not over every tern- 
? poral entity in the entire common ground. Thus, to 
determine the response in:(4a), only the date range 
mentioned in (la) is relevant, and a positive response 
can be given, since the question relates to weekdays. 
In (4b) however, the date range includes a Saturday, 
so the system should generate a negative response. 
4.4 Elliptical Questions: Example IV  
Example IV is a somewhat more complex dia- 
logue, including an elliptical question as well as sev- 
eral definite descriptions. It illustrates how our ap- 
proach generalizes ~ the larger class of presuppo- 
sitional constructions which we identified in the in- 
. troduction. Let. us focus on the interpretation of 
sentence (3), How about he Marriottg., which is as- 
signed the following ULF: 
(ULF 8) Wa_~Up,i,\[~,~(~), 
~\[x -, (de/\[y, Uotd(y) ^  Na~(y ,  ~a~) ,  ?.s\])\]\] 
is a variable referring to some contextually 
salient question, and the de6nlte description cor- 
respondlnE to the Marriott is to be substituted for 
some term (X) within ~b. Recall that the variable 
?NS is a placeholder for the ,,n~ecified nuclear scope 
of the def operator. 
our  algorithm processes the logical form of an ut- 
terance ins/de-out, i.e., the embedded context res- 
olution problems are handled first, so it first re- 
solves the de/ term corresponding to the Mar,'/o~ 
as we discussed in ?4.2 on definite descriptions, and 
add_domain.restriction produces the refined de- 
scription (DEF 3"): 
(DP.F 3") de/Iv, Hoed(y) ^  Na,~d(y, Ma.~)  
^ Near(y, Airport),TNS\] 
Next, the top.level Wh.dlip~ris term in (ULF. 3) 
is resolved, according to the resolve.Y~ ~l l ips i s  
algorithm of Figure 3. ~ must be a question, sowe 
retrieve the question on top of the QUD stack, and 
attempt o identify ~ with its CULF (CULF 1). 
(C'Ur_,F '9 A\[=, H~d(z) ^  JV~,-(z, Airport), 
3~1, Date(y), Has V acancyOn( z, y ) ~ 
SA complete explanation of this situation might require 
the system to infer the domain goals of the user. However, 
when the QUD contains some descriptions of the appropriate 
? type, we can use them as an approximate domain restriction, 
thereby avoiding the computational expense of full plan in- 
ference. 
8 
O 
0 
O 
0 
0 
0 
@ 
O 
0 
0 
@ 
0 
@ 
0 
0 
0 
0 
0 
0 
0 
0 
O 
0 
Q 
0 
0 
0 
@ 
@ 
m 
I 
$ 
O 
O 
O 
O 
O 
@ 
O 
O 
O 
O 
O 
O 
O 
O 
0 
O 
@ 
O 
O 
O 
O 
O 
O 
O 
O 
O 
O 
O 
O 
O 
O 
O 
O 
O 
O 
O 
O 
O 
r esoive_WH_Ellipsis (Term, Level) 
7,7,7, Assume nuclear scope of Ter~n is  of the form: ~\[01dExpr->NevExpr\] 
vhile QUD stack is not empty { 
QUD-CULF = CULF of QUD\[top\] 
QUD-CDRS = CDRS of GUD\[Cop\] 
(NewExpr, CDRS1) = determlne.CULF(NewExpr, Level) 
if NewExpr is a generalized quanClfier, 
let SubsCLF = march, substitute (QUD-CULF, resCricCion(NevExpr), NewExpr) 
else (NewExpr iS a predicate) 
l e t  SubstLF ffi matchksubstiCute(QUD-CULF, NevExpr, NevExpr) 
i f  null(SubstLF) 
or SubstLF is  not Snterpretable as a subquestion of ~ID-CULF, 
pop(QUV) 
else rectum (SubsCLF, priorizy_union(CDRSl, QUD-CDRS)) 
7,7,7, priority-union(X,Y) is  l ike  set  un$on, but vhen some members of X 
7,7,Y, and Y have the  same type ,  on ly  the  member of  X i s  inc luded  Sn the  resu l t .  } 
Figure 3: resolve_WH_Ellipsis algorithm 
We must now find a term within (CULF 1) for which 
the term corresponding to the Marriott can be sub- 
stituted. Our matchksubscitute algorithm looks 
for terms whose restrictions pecialize a common 
basic type, so it again findsthe restriction on the 
(top-level) A-term containing the Hote/predicate in 
(CULF 1): 
~\[z, sots(z) ^  Nes,(~,Ai~po~), ...\] 
The operator and restriction of this term are re- 
placed by those from (DEF 3") and the variables 
are -nlSed, but the nuclear scope of (DEF 3") is un- 
specified, so the nuclear scope of (CULF 1) rem~ 
unchanged in the result: 
(3") clef\[z, Hotd(z ) A Named(y, M,rr/ott) 
A Near(z, AiT7x~t), 
3\[y, D.ze(~), S .aVo~.q~.(z ,  y)\]\] 
(3") is (almost) the CULF for How about he Mar- 
r/ottf, but it must be noted that it should be inter? 
preted as a polar question, since the A-term char- 
acteristi? of a wh-question has been replaced by a 
definite descriptione 
Thus, both the elliptical question and the domain 
restriction of the definite description are processed 
by the same overall strategy. They are interpreted 
by incorporating information contained in the ques- 
tion under discussion. 
5 Conclusions 
We have described an integrated approach to re- 
solving presuppositions, which includes pronominal 
and definite reference resolution Central to our ap- 
proach is the maintenance of discourse structures, 
especially the QUD stack, which captures the hier- 
archical organization of the discourse. By identify- 
8When all top-level ),-terms in a Wh-question have been 
replaced, it is interpreted asa polar question. 
ing the presuppositions a sociated with each kind of 
construction, and recovering presupposed informa- 
tion from a unified discourse information structure, 
the search space for relevant contextual information 
is restricted in a general way. 
Re~li~i-g the full potential of this approach to 
discourse structure requires recoL,,i~.in~ the question 
under discussion even when it is not stated explic- 
itly as a question. We have found that requests and 
statements of need and desire should be coerced to 
questions, but a general implementation f this coer- 
cion process remains to be completed. An even more 
challenging problem involves inferring the domain 
goals of the user that are related to the question un- 
der discussion. As will be readily apparent to most 
researchers in NLP, these problems are intertwined 
with larger AI problems, such as plan recognition, 
which are beyond the scope of this paper, but must 
ultimately be solved or approximated in any realis- 
tic application. As noted in our discussion of domain 
restriction (?4.3), it is sometimes possible to extract 
some explicitly mentioned content from the QUD 
which is relat~ to the user's domain goals, but we 
recoL,-i~e that this is only an apprarlmate solution. 
Although we have shown several examples where 
this approach to discourse structure is successful, 
a comprehensive empirical evaluation still needs to 
be performed to dete _rm_in_e how frequently partic- 
ular presupposition problems occur in actual cor- 
pora, and to assess what proportion of the actual oc- 
currences are resolved effectively by our algorithms. 
The first part of this evaluation could be addressed 
by searc~inf a corpus for expressions that trigger 
presuppositions, but assessing the actual perfor- 
mance of the algorithms on existing corpora would 
be more diMcult, because it would require the ac- 
quisition of background knowledge about other do- 
9 
mains than the hotel reservation application that we 
are currently working on. 
References 
Lauri Carlson. 1983. Dialogue Games: An Approach 
to Discourse Analysis. Reidel, Dordrecht. 
Barbara Grosz and Candace Sidner. 1986. Atten- 
tion, intentions, and the structure of discourse. 
Computational Linguistics, 12(3):175-204. 
Barbara J. Grosz, Aravind K. Joshi, and Scott Wein- 
stein. 1995. Centering: A framework for modeling 
? the local coherence of discourse. Computational 
Linguistics, 21(2):203-225. 
B.J. Grosz. 1981. Focusing and description in nat- 
ural language dialogues. In B. Webber A. Joshi 
and I. Sag, editors, Elements ol Discourse Un- 
derstanding, pages 84-105. Cambridge University 
Press, New York. 
Irene Heim. 1982. On the Semantics of Definite and 
Indefinfle Noun Phrases. Ph.D. thesis, University 
of Massachusetts atAmherst. 
Robert M. MacGregor. 1991. Using a description 
classifier to enhance deductive inference. In Pro- 
ceedings of the Seventh IEEE Conference on AI 
Applications, pages 141-147. 
Craige Roberts. 1995. Domain restriction in dy- 
namic semantics. In A. Kratzer E. Bach, E. Je- 
linek and B.H. Partee, editors, Quantification i  
Natural Languages. Kluwer Academic Publishers. 
Craige Roberts. 1996. Information structure in 
discourse: Towards an integrated formal the- 
ory of pragmaties. In Jae-Hak Yoon and 
Andreas Kathol, editors, OSU Working Pa- 
pers in Linguistics, Vol 4g: Paper8 in Se- 
mantics. (also available vis the Internet 
at ftp://Zing, ohio-atal~e, du/pub/rober~a/ 
infostructure, ps). 
Craige Roberts. 1998. The place of centering 
in a general theory of anaphora resolution. In 
A.K. Joshi M.A. Walker and E.F. Prince, editors, 
Centering Theory in Discourse.. Clarendon Press, 
Oxford. 
Cralge Roberts. 1999 (to appear). Unique- 
ness in definite noun phrasm. I, in~isti~ and 
Philosophy. (also available via the Internet 
at f~P:// l ing, ohio-~a~e, du/pub/rober~ s/ 
uniquenees.ps). 
Bertrand Russell. 1905. On denotlug. Mind, 
66:479-493. 
Robert Stalnaker. 1979. Assertion. In Peter Cole, 
editor, Syntaz and 8ema~i~, Volume 9. 
Linda Z. Suri and Kathleen F. McCoy. 1994. 
Raft/rapt and centering: A comparison and dis- 
" cussion of problems related to processing complex 
sentences. Computational Linguistics, 20(2):301- 
317. 
10 
0 
0 
0 
0 
0 
0 
0 
0 
0 
@ 
0 
0 
O 
0 
0 
O 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
