COLING 82, J. Horeck) (ed.) 
North-Holland Publishing Company 
? Academia, 1982 
A METRIC SPACE DEFINED ON ENGLISH 
AND ITS RELATION TO ERROR CORRECTION 
James Bradford 
School  of Computer  Science 
Acadia  Unfvers?ty  
Wol fv i l le ,  Nova Scot ia 
Canada 
A d istance funct ion is proposed that maps  pairs of 
str ings to the real  numbers. It has been shown that 
g iven suitable constra ints  the funct ion is a metr ic  
over the free monoid  generated from a set of gr~um~ 
mat ica l  symbols. The necessary  constra ints  modi fy  
the metr ic  so that it maps pairs of str ings to a 
latt ice of real numbers. Thus for each str ing the 
metr ic  def ines a countable set of nested ne ighbour -  
hoods. This aspect of the space has proved useful  
for the correct ion of certa in kinds of grammat ica l  
errors that occur in Engl ish  sentences. An Engl ish 
parser  was wr i t ten that used the metr ic  to propose 
correct ions to a var iety  of ungrammat ica l  sentences. 
Exper ience with the program suggests that in many 
cases the intuit ive not ion of grammat ica l  s imi lar i ty  
corresponds c losely  to the mathemat ica l  def in i t ion of 
nearest  ne ighbour  in the space. 
I. Int roduct ion 
Consider  a str ing of grammat ica l  symbols which has been produced by 
lexical  analysis.  Each symbol in the str ing corresponds to a word 
in the or ig inal  sentence. The str ing wi l l  be analysed by a parser  
which compares the sequence of symbols to sequences speci f ied by 
some grammar, G. If the compar ison succeeds then the or ig inal  sen- 
tence is accepted as grammatical .  L Otherwise,  it is re jected and 
error  correct ion is required. 
Def in i t ion:  Given a grammar G and a str ing S composed of gramma- 
t ical  symbols from some alphabet A then S is ungrammat ica l  if it is 
not conta ined in L(G), the language generated by G. 
Ungrammat ica l  in this sense refers to any sentence that was not an- 
t ic ipated by the grammar. In many systems it is poss ib le  for a 
user to produce a proper Engl ish sentence wi th in  the appropr iate  
domain of d iscourse and sti l l  have the sentence re jected by the 
parser. This is usual ly  at t r ibuted to "holes in the grammar."  
This paper wi l l  descr ibe a technique for correct ing ungrammat ica l  
input. The class of errors t reated includes both genuine gramma~ 
tical  errors and those resu l t ing from "holes." One of the assump-  
t ions tested by this work is that a s ign i f icant  class of errors can 
be reso lved by examinat ion  of syntact ic  structure alone. 
43 
44 J. BRADFORD 
An ungrammat ica l  sentence is v iewed as a grammat ica l  sentence that 
has been t ransformed by  one or more error operat ions.  
Def in i t ion:  An error operat ion involves e i ther  (a) an insert ion of 
a word, (91 a de~I -on  of a word, or (c) an a l terat ion of the word 
sequence. 
In general ,  the damage done by a single error operat?on is local and 
does not s ign i f i cant ly  a l ter  the gloSal  structure.  
Thus a compar ison of the respect ive  s t ructures  of the two sentences 
is used as the bases for a measure of theZr s imi lar i ty.  This ap -  
p roach  is based on ear l ier  work by F ischer  and Wagner.  ~ The error 
correct ion st rategy rests on a measure  which  expresses  s t ructura l  
s imi lar i ty  as a numer ica l  distance. If the parser~s analys is  of a 
of a given sentence fa~is then a search  is made for its nearest  
grammat ica l  neighbour.  As var ious  a l ternat ives  are found they are 
presented to the user. The user may elect to cont inue the search, 
accept  the cor rector~s  proposal  or abandon the search and rephrase 
the input. 
The class of errors that can be corrected by a measure  of s t ructura l  
s imi lar i ty  are those re lated to word arrangement.  Word ar rangement  
is descr ibed by an augmented t rans i t ion network  in which  the cond- 
i t ions on the arcs are tota l ly  relaxed. Such a net is ca l led a 
recurs ive  t rans i t ion network and it def ines a context  free language~ 
Thus the c lass of errors t reated by this  technique are cal led 
context  free errors. 
2. The Measure - In formal ly  
The basis of the d is tance funct ion is a value cal led the ' t rans form-  
at ion cost. In essence the t rans format ion  cost gives an ind icat ion  
of the number of changes required to convert  one str ing of grammat-  
ical symbols into another. The changes are cons idered under two 
categor ies,  rear rangement  and edit ion. The cost of a t ransformat ion  
is the sum of the cost of rear rangment  and cost  of edit ion. 
The rear rangement  cost measures  the amount of d isorder  of one 
str ing re lat ive to another. Many def in i t ions  are poss ib le  but most  
y ie ld asymmetr ica l  costs. One that does not, cons iders  common sub- 
str ings between the two given strings. The cost is based on the 
number  of gaps between the substr ings.  For example,  if the two 
given str ings match exact ly  then the rear rangement  cost is zero 
because the two str ings match w i thout  gaps. 
The edi t ion cost  cons iders  the symbols that occupy the gaps between 
s u b s ~  In order to t ransform one str ing into another  the sym- 
bols  not part  of common substr ings  in the f irst  must  be removed and 
those in the second that are not common must  be inserted into the 
first. The edi t ion cost is the sum of the costs  of inser t ion  and 
delet ion.  C lear ly  the potent ia l  for asymmetry  exists  here as well.  
However,  if the cost of insert ion is equal  to the cost of de let ion  
for any given symbol  then symmetry fo l lows as a consequence.  
The most  s ign i f icant  e lement  of the formal descr ip t ion  of Eta's 
d is tance measure is the concept  of a match set. Suppose we cons ider  
two sequences of words (actual ly str ings of grammat ica l  svmbols, 
A METRIC SPACE DEFINED ON ENGLISH 45 
each corresponding to a word). The A-sequence wi l l  be the input and 
the B-sequence wi l l  be a sentence in the grammar - hencefor th  ca l led 
the test sentence. Thus a match set M wi th  respect  to A and B des- 
cr ibes a pa l r lng between words in the input and words in the test 
sentence. If the two sentences match exact ly  and are both of length 
n then the match  set denot ing  the best  match wi l l  be: (1,1) , (2,2) ,  
. . . ,(n,n). Not ice that the integers compr is ing each ordered pair  
are the pos i t ions  of words in the two respect ive sentences.  
The rearrangement  cost (which measures  the d isorder  of one sentence 
re lat ive to another) is computed from M. A l though the cost is re- 
lated to the number of common substr ings of words shared by the two 
given sentences the actual  cost is computed by count ing gaps between 
substr ings.  For example,  suppose two sentences have no words in 
common. Since there are no shared substr ings the word order of the 
two sentences are not re lated and thus the rearrangement  cost is 
zero (hence the ent i re t ransformat ion cost wi l l  der ive from the edit  
cost). If the two sentences were ident ica l  then in this case as 
wel l  there wi l l  ex ist  a match set y ie ld ing a rearrangment  cost of 
zero. 
The edit  cost is a lso computed from the match  set M. In a manner  
s imi lar  to the F ischer /Wagner  measure  it is assumed that each gram- 
mat ica l  symbol has two assoc iated unit  costs, the cost of insert ion 
and the cost of delet ion.  The under ly ing idea is t -~  ~ter  the 
input  has ~-6en rearranged to match the test  sentence then nonmatch-  
ing symbols in the input are removed and unmatched symbols in the 
test sentence are inserted into the modi f ied  input. In pract ice it 
is the sum of the unit  costs  that is used as the edit  cost. Because 
of the nonnegat iv i ty  and nondegeneracy  requi rements  for a metr ic  the 
unit  ed i t  costs must  be posit ive.  
3. The Measure - Formal ly  
Notat ion I. If A is a set then the card ina l i ty  of A is denoted 
IAi- 
2.  If m = (i,j) is an ordered pair  of integers then D(m) 
= i and R(m) = j 
= ... 3. -Ifs S. wh~e l~ i~ is a sequence of symbols then s<i > 
l 
Def in i t ion 1 ~-latch Set, M 
If A and B are given str ings then a match set M wi th  respect  to A 
and B is a set of ordered pairs  of integers wi th  the fo l lowing pro-  
pert ies.  If m,n eM and m~n then i. Dfm) e\[l, IAI\] 
2. D(m)~ D(n) 
3. R(m) e\[l, IBI\] 
4. R(m)~ R(n) 
5. m= (a, b) ?A<a>=B<b> 
Def in i t ion 2 Inverse Match Set~ M T1 
If M is a g iven match set w i th  respect  to two str ings A and B then 
M -I is a match set w i th  respect  to B and A such that 
1. IM-II=IMII 
2. meM?3n~M-  where (i)D(m)=R(n) ( i i)R(m)=D(n) 
46 J. BRADFORD 
Notat ion If a,b and n are integers such that a+b<2n then 
a+nb = ~a+b if a+b<n 
\[a+b-n if a~b>n 
Not ice that if a+b~2n then 
a+ b = \[(a+b-l) mod n\]+l n 
Def in i t ion 3 Successor  Funct ion,  succ(m) 
If M is a match set wi th  respect  to two str ings A and B and if IAI 
= a, IBl=b and (i , j )eM then succ(( i , j ))  = (i+al,J+bl) 
Recal l  that the rear rangement  cost is based on the number  of gaps 
between substr ings.  A gap is detected by means of a successor  
function. The successor  of an ordered pair  is the pair  produced by 
increment ing  each e lement  of the in i t ia l  pair  by i. Thus the suc- 
cessor of (2,3) is (3,4). 
An unusual  aspect  of the successor  funct ion is that for any g iven 
sentence, the f i rst  word is def ined to be the successor  of the last. 
For example, if the length of the two sentences was n, then the suc- 
cessor  of (n,n) is def ined to be (i,i). A metr ic  must  y ie ld  a dis-  
tance from a str ing to i tsel f  of zero. This is the reason under-  
ly ing the successor  funct ion 's  "wrap around" character ist ic .  
Def in i t ion 4 Gap Set, G 
If M is a g iven match set then G is def ined by G={mlmeMAsucc(m)kM} 
Def in i t ion  5 Rear rangement  Cost, ~(M) 
If M is a match set and G the assoc iated gap set then ~(M)=IG \[ 
Convent ion 1 states that  the cost of insert ing or de let ing any gram- 
mat ica l  symbol is constant.  In other  words the cost of a unit  edi t  
operat ion is independent  of the symbol being edited. 
Convent ion 1 Let E be an a lphabet  of symbols and c be a pos i t ive  
real constant.  Convent ion 1 requires VSeZyINS(s)=TDEL(s)=c 
Recal l  that the edit  cost between two str ings A and B is based on 
the unit  costs of insert ing and de let ing symbols not common to both 
strings. A def in i t ion  of the edit  cost, F(A,B,M) based on this is 
g iven in reference 3. For two str ings A and B and a g iven match set 
M, Lemma 1 estab l i shes  the equiva lence of a more convenient  def in i t ion.  
The proof  of Lemma 1 is a lso given in reference 3. 
Lemma 1 If M is a match set wi th  respect  to two str ings A 
and B and if convent ion 1 is in force then F(A ,B ,M)=( IA I+IB I -21MI )c  
Def in i t ion  6 Trans format ion  Cost, TCOST(A,B,M) 
If M is a match set wi th  respect  to two str ings A and B then TCOST 
(A,B,M)=~(M)+F(A,B,M) 
Def in i t ion 7 Match Set of Min imal  Cost 
If UAB is the class of al l  match sets with respect  to A and B then 
A METRIC SPACE DEFINED ON ENGLISH 47 
a match set MeUAR is said to be a match set of minimal cost (or sim- 
ply "minimal") i~f 
TCOST(A,B,M)= min (TCOST(A,B,N)) 
NeUAB 
Definition 8 Edit Distanc~ ~- Eta,n(AFB ) 
Let A and B be strings and M be a minimal match set with respect tc 
A and B. Then ~(A,B)=TCOST(A,B,M) 
Example Let A,B and C be strings of letters A = abcd, B = 
bdac, C = aab 
Suppose VseZ yINS(s)=TDEL(s) = 1 
Notice that Ml={ (i,3), (2,1),(3,4),(4,2)}is minimal 
Let meM1 
m 
1,3 
2,1 
3,4 
4,2 
succ  (m) 
2,4 
3,2 
4,1 
1,3 
Hence G ={(1,3),(2,1),(3,4)} 
~(MI)=3, F(A,B,MI)=0 
TCOST(A,B,MI)=3 
Thus n(A,B)=3 
Similarly ~(A,C)=4 
and q(B,C)=5 
Theorem 1 If Convention 1 applies then (Z*,~) 
space. In particular, if A,B~eZ* then 
i. q (A,B) >0-- 
2. n(A,A)=0 and A~B-~(A,B)>0 
3. q(A,B)=q(B,A) 
4. D (A,C) &q (A,B)+n (B,C) 
succ (m)EMI? 
4. Conclusions 
False 
False 
False 
True 
is a metric 
A program called Eta (for Error Tolerant Analysis) was written to 
test the effectiveness of the measure. For a given grammar, G the 
program searches the metric space in the neighbourhood of the input 
until a sentence contained in L(G) is found. This sentence is given 
to the user for confirmation. If the program's proposal is rejected 
then the search is continued. The neighbourhood searched by the 
program consists of the set of strings of grammatical symbols within 
a given distance of the input. By progressively enlarging this dis- 
tance a partial ordering is applied to the strings in L(G). Thus 
the user sees alternatives from "near" (structurally similar to the 
input) to "far" (structurally dissimilar). 
Experience with the program suggests that many common grammatical 
errors can be corrected by relatively short dialogues with the user. 
Frequently an acceptable alternative ~s proposed w~thin three or 
four interactions. 
The extent to which the alternatives proposed by Eta are "likely" is, 
of course, subjective. Nevertheless, the measure does yield alter- 
natives that are structural ly similar to input that would otherwise 
48 J. BRADFORD 
defy analysis. In the majority of the cases seen, grammatical 
errors do leave much of a sentence's structure intact. Since there 
is no fixed limit on the number of alternatives that may be presented 
even pathological cases are correctable with patience. 
\[1\] 
\[2\] 
\[3\] 
References 
Fischer, M. J. and Wagner, R. A., The String to String 
Correction Problem, Journal of the ACM, Vol. 21, no. I. 
January 1974, 168 - 173. 
Woods, W. A., Transit ion Netword Grammars for Natural 
Lanuage Analysis, Ccmuntunications of the ACM, Vol. 13, 
no. i0, October 1970, 591 - 606. 
Bradford, J. H., The Eta Interface - An Error Correcting 
Parser for Augmented Transit ion Networds, Ph.D. Thesis, 
Dpeartment of Computer Science, University of Waterloo, 
1982. 
