Annotating Anaphoric and Bridging Relations with MMAX
Christoph Mu?ller and Michael Strube
European Media Laboratory GmbH
Villa Bosch
Schlo?-Wolfsbrunnenweg 33
69118 Heidelberg, Germany
fchristoph.mueller, michael.strubeg@eml.villa-bosch.de
Abstract
We present a tool for the annotation of
anaphoric and bridging relations in a cor-
pus of written texts. Based on differences as
well as similarities between these phenom-
ena, we define an annotation scheme. We
then implement the scheme within an anno-
tation tool and demonstrate its use.
1 Introduction
Anaphoric and bridging relations between discourse
entities are of major importance for establishing and
maintaining textual coherence. Consider the follow-
ing examples, taken from the Heidelberg Text Corpus
(HTC). The HTC is a collection of 577 short texts de-
scriptive of the city of Heidelberg, which have been
collected at our lab for a tourist information system in
the course of the DeepMap project (Malaka & Zipf,
2000).
Im Gegensatz zu anderen Sta?dten steht [das Heidelberger
Stadttheater] nicht an herausgehobener Stelle, sondern [es]
fu?gt sich in die Stra?enflucht ohne Vorplatz ein. [Der
Haupteingang] zeigt noch das alte Arkadenmotiv mit den
flachen Segmentbo?gen. (HTC002)
In contrast to other cities, [the Heidelberg theatre] is not
situated at a particularly exposed position, but [it] blends in
with the street. [The main entrance] still shows the original
motif of the arcades with the flat segments.
In the first sentence, [das Heidelberger Stadtthe-
ater] is introduced into the universe of discourse, and
then referred to anaphorically by means of the pro-
noun [es]. In the next sentence, there is a bridging re-
lation between the entities denoted by [der Hauptein-
gang] and [das Heidelberger Stadttheater]. 1
Note that in each example it is the fact that the sec-
ond discourse entity is either a definite NP or a pro-
noun that triggers the attempt to establish a relation
1Note that in this analysis (which is only one of two that
are possible here), [das Heidelberger Stadttheater] is at the
same time the antecedent to an anaphoric and a bridging ex-
pression.
to some previous entity: Normally, the use of a def-
inite NP respectively a pronoun presupposes that the
entity thus denoted has either already been introduced
into the universe of discourse or is assumed to be fa-
miliar to the reader. This is the case in the anaphori-
cally used pronoun in the first sentence. In the second
sentence, the relation between the two discourse enti-
ties [das Heidelberger Stadttheater] and [der Hauptein-
gang] is less obvious: The second one does not denote
the same entity as the first, but an entity that the second
one is a part of.
The ability to automatically resolve these kinds of
relations is an important feature of text understand-
ing systems. For both the training as well as the
evaluation of these systems, manually annotated cor-
pora are required. The creation of these corpora in
turn has a number of preliminaries. The phenom-
ena anaphor, bridging and the closely related concept
of antecedence need to be sufficiently defined (Sec-
tion 2). On the basis of this definition, an annotation
scheme needs to be developed (Section 3). Finally, an
annotation tool is required which implements the an-
notation scheme in a robust and efficient way. We re-
view a selection of existing tools, then present MMAX
(Multi-Modal Annotation in XML), our versatile Java
tool (Section 4), and we demonstrate how the annota-
tion scheme for anaphoric and bridging relations can
be implemented in MMAX (Section 5).
2 Definition
In general, anaphoric as well as bridging relations hold
between specifying expressions. These are those ex-
pressions that specify (i.e. are used to refer to) a
particular extra-linguistic entity. In what follows, we
briefly discuss the approach of (Vieira & Poesio, 2000)
and present our own definition. Since (Vieira & Poe-
sio, 2000) address the problem of bridging annotation,
they try to find an operational and easily applicable
definition. This is the main motivation for choosing
(Vieira & Poesio, 2000) (and not e.g. (Clark, 1975),
who introduced the term bridging) as the background
of our discussion. In the following discussion, two
features of pairs of specifying expressions will be im-
portant. The first one is cospecification (Sidner, 1983),
also known as coreference, a relation holding between
two or more specifying expressions which specify the
same extra-linguistic entity. The second important fea-
ture is identity of the head noun. This feature is appli-
cable to full NPs only and simply states that in a pair
of NPs the head of each is realized by the same noun.
Anaphor. In (Vieira & Poesio, 2000), only those
relations are classified as anaphoric in which both
cospecification and identity of the head noun is given. 2
Consequently, their rather strict definition contains but
one type, which the authors call direct anaphor. In
contrast to this, we take only cospecification to be a
necessary condition for anaphor. In case that iden-
tity of the head noun is also given, we call this direct
anaphor as well. We believe, however, that additional
sub-types of anaphor should be defined depending on
the type of the anaphoric expression. Along these
lines, we further distinguish pronominal anaphors, and
those in which the object specified by the second ex-
pression is standing in a conceptual IS-A (or hyponym-
hyperonym) relation to the object specified by the first
one. Consider the NP [das Bauwerk] in the follow-
ing example, which denotes a super-concept of [dem
Geba?ude].
Seit 1972 befindet sich das Romanische Seminar in [dem
Geba?ude Seminarstra?e 3]. [Das Bauwerk] wurde 1847
[...] errichtet. (HTC010)
Since 1972, the Romance Seminar is situated in [the build-
ing Seminarstra?e 3]. [The structure] was built [...] in
1847.
Bridging. Due to their strict definition of anaphor,
the term bridging is applied rather widely in (Vieira &
Poesio, 2000). First, those expressions are classified
as bridging which cospecify with their antecedent, but
which do so not by means of an identical, but a differ-
ent head noun. Finally, also non-cospecifying expres-
sions are classified as bridging as long as they stand
in some lexical relation (i.e. hyponymy, meronymy
or co-hyponymy) to their antecedent. The respec-
tive bridging sub-types are introduced by the authors
accordingly. Our approach, in contrast, classifies
as bridging only those expressions which are non-
cospecifying and which stand in some conceptual rela-
tion to their antecedent. At this time, we consider the
following relations to be relevant: cause-effect, part-
whole, and entity-attribute, for which we give the fol-
lowing examples:
Deshalb wurden [verschiedene Untersuchungen] [...]
vorgenommen. [Das Ergebnis] (cause-effect) war die Er-
stellung von Leitlinien fu?r die gestalterische Behandlung des
2It must be added here that (Vieira & Poesio, 2000) con-
sider definite NPs only, and in particular no pronouns.
[Hortus Palatinus]. Danach plante man, [die Zwischen-
terasse] (part-whole) [...] wiederherzustellen. (HTC113)
Therefore, [various examinations] [...] were conducted.
[The result] (cause-effect) was the production of guidelines
for the design of the [Hortus Palatinus]. After that, plans
were made to restore [...] [the middle terrace] (part-whole).
The Concept of Antecedence. In pairs of anaphoric
or bridging expressions, one member is regarded as
the antecedent of the other. In fact, the task of resolv-
ing such a relation is often identified with finding the
antecedent. While there are certainly cases where it is
possible to find exactly one antecedent to a given ex-
pression, there are also cases where this decision is not
obvious. This is true for anaphoric as well as bridging
antecedents: Consider the case of an NP that has been
introduced into the universe of discourse, and that is
referred back to anaphorically twice by means of a
pronoun. We believe that it is not at all clear what is to
be regarded as the antecedent of the second pronoun,
since one could argue for the NP on the grounds of its
semantic explicitness, or for the first pronoun on the
grounds of its being the more recent cospecifying en-
tity. The same is true with bridging expressions. In the
example in Section 1, one could regard the pronoun
[es] as the bridging antecedent of [der Haupteingang]
as well.
Preliminary Conclusion. Our definition of anaphor
and bridging developed so far can be summed up as
follows: Anaphoric relations can be observed between
cospecifying expressions. A pair of antecedent and
anaphor is always cospecifying, while on the other
hand, given a set of (more than two) cospecifying ex-
pressions, determining the antecedent to a given ex-
pression is not necessarily trivial. Anaphors can be
further differentiated according to the nature of the
lexical items taking part in the relation. Bridging re-
lations, in contrast, occur between non-cospecifying
expressions only. Here, the criterion for division into
sub-types is the conceptual relation between the enti-
ties denoted by the expressions taking part in the re-
lation. Finally, it is possible for an expression to be
antecedent to more than one anaphoric and / or bridg-
ing expressions at the same time, while we believe that
the reverse, i.e. one expression having more than one
antecedent, is not possible.
3 Annotation Scheme
The first step in the development of an annotation
scheme is the definition of the relevant markables, i.e.
the class of entities in the text between which the rela-
tions to be annotated can possibly occur. It is in terms
of these markables (with their attributes) and labelled
relations between markables that the annotation itself
is expressed.
In Section 2, we already roughly defined what
counts as a markable by stating that anaphoric and
bridging relations hold between specifying expres-
sions. To further distinguish, we introduce the at-
tribute np form which allows to differentiate between
the following subclasses: Proper noun, definite NP, in-
definite NP, personal pronoun, possessive pronoun and
demonstrative pronoun. In addition, other grammati-
cal features of markables, like agreement or the gram-
matical role they play, might also be of interest. We
capture these in two respective attributes, for which we
specify a closed list of possible values to be assigned
during annotation. These possible values are the com-
bination person/number/gender for the first and sub-
ject, object and other for the second attribute.
In a given pair of expressions it is the way in which
the second expression relates to the first one that de-
termines whether an anaphoric or a bridging relation
exists. It is natural, therefore, to represent this infor-
mation on this second markable and only there. More-
over, this is the only way to allow for the represen-
tation of cases in which one markable is antecedent
to several others. Since we rule out the possibility of
one markable being anaphor or bridging expression to
more than one antecedent, this information is easily
represented by means of an attribute which identifies
the markable as an anaphor or a bridging expression.
We add a further attribute for the respective relation?s
sub-type. For anaphoric expressions, the possible val-
ues for this attribute include direct, pronominal and
IS-A, and for bridging expressions part-whole, cause-
effect and entity-attribute, respectively.
Finally, the annotation of an anaphoric or bridg-
ing markable has to be complemented with informa-
tion on which markable is its antecedent. This can
be accomplished by supplying the markable with a
further attribute. However, selecting the correct an-
tecedent from several candidates can contain a consid-
erable amount of interpretation on the part of the anno-
tator. This is highly undesirable, because it is likely to
force arbitrary decisions which in turn can introduce
error and inconsistency into the annotation. It would
be preferable, therefore, if the explicit identification of
the antecedent would be optional. We do this by sup-
plying in our annotation scheme a means to represent
cospecification. With this additional representation,
the annotation of anaphoric relations in our annotation
scheme is a two-step process: Upon encountering an
anaphoric markable and setting its general attributes,
the markable is first annotated as being cospecifying
with all other markables already in this set of cospeci-
fying expressions. This is the only mandatory annota-
tion, and together with the information that the mark-
able is of the anaphoric type it perfectly well repre-
sents the anaphoric relation. The second, optional step
consists in the specification of the markable?s exact an-
tecedent. By separating the annotation of anaphoric
relations in this way, the concept antecedent becomes
free to be used only in those cases where it is both
relevant and unambiguously decidable. It is impor-
tant to note that no relevant information appears to be
lost here: Supplied that the linear order of markables
within the text is preserved, it should be possible to es-
tablish an antecedent to any anaphoric expression from
a set of cospecifying expressions annotated within the
scheme described above. Moreover, the important
task of evaluating the annotation scheme is not af-
fected either, because common evaluation algorithms
for anaphor annotations (Vilain et al, 1995) do not de-
pend on antecedence information, but treat anaphoric
expressions as cospecifying equivalence classes.
What is even more important is that by the same
means we can render optional the explicit specifica-
tion of bridging antecedents as well. Two cases can be
distinguished here: Whenever only a single candidate
for antecedence exists, specifying it is trivial. Thus,
the only cases where uncertainty as to the correct an-
tecedent of a bridging expression can arise appear to
be those in which multiple cospecifying candidates are
available. Since bridging (as we define it) is a relation
not between lexical items, but between extra-linguistic
entities, and since cospecification is a transitive rela-
tion, a bridging relation can be sufficiently expressed
by specifying any of the candidates. The major dif-
ference to the annotation of anaphoric relations is that
in case of bridging, the selection of an antecedent is
mandatory, but can be made at random, because what
is really selected is not the markable but the extra-
linguistic entity that it specifies.
4 Annotation Tool
This section deals with the question how the annota-
tion scheme developed in the previous section can be
implemented in a real annotation tool. Before present-
ing our own tool MMAX, we briefly review a selection
of already existing tools.
4.1 Existing Tools
The Discourse Tagging Tool (DTTool) (Aone & Ben-
nett, 1994) is a Tcl/Tk program for the annotation
and display of antecedent-anaphor relations in SGML-
encoded multilingual texts. While this field of applica-
tion makes it a potential candidate for the implementa-
tion of our scheme as well, this is not the case, mainly
because the tool lacks the possibility of assigning ar-
bitrary combinations of attributes and possible values
to markables, a feature that obviously is needed for the
representation of different types of relations.
CLinkA3 (Ora?san, 2000) is a more recent Java tool
3http://www.wlv.ac.uk/sles/compling/software/
for coreference annotation. In this case, it is a more
structural constraint which prevents our annotation
scheme from being implemented in this tool. This
constraint results from the fact that CLinkA was built
to implement the annotation scheme proposed in the
MUC-7 Coreference Task Definition (Hirschman &
Chinchor, 1997). In this scheme, cospecification is ex-
pressed in terms of antecedence only, a concept which
we have shown to be problematic, and which our anno-
tation scheme therefore avoids. Another problem with
CLinkA is that it does not seem to support additional
user-defined attributes either.
The Alembic Workbench4 is an annotation tool
which, among other tasks, directly supports cospecifi-
cation annotation. In contrast to DTTool and CLinkA,
it also allows for the extension of the tag set, so that
in principle the handling of different coreference phe-
nomena is possible. The tool (like the other two men-
tioned before) processes SGML files, into which an-
notation tags are inserted directly during annotation.
We regard this approach to annotation as a drawback,
because it mixes the basic data (i.e. the texts to be an-
notated) with the annotation itself. This can give rise
to problems, e.g. in cases where alternative annota-
tions of the same data are to be compared.
Referee, a Tcl/Tk program for coreference annota-
tion (DeCristofaro et al, 1999), is better in this respect
in that it writes the annotations to a separate file, leav-
ing the annotated text itself unaltered. The format of
this annotation file, however, is highly idiosyncratic,
rendering very difficult the subsequent analysis of the
annotation. Moreover, this tool also represents cospec-
ification in terms of antecedence only, making it im-
possible to annotate the former without specifying the
latter. On the other hand, Referee directly supports the
definition of user-definable attributes.
Finally, the MATE Workbench5 is the most ambi-
tious tool that we considered for the implementation
of our annotation scheme. It has been developed in
Java as a highly customizable tool for the XML-based
annotation of arbitrary and possibly non-hierarchical
levels of linguistic description. From a theoretical
point of view, the MATE Workbench would thus be
an ideal platform for the implementation of our anno-
tation scheme. In practical terms, however, we found
the performance of the program to be rather poor, ren-
dering it practically unusable as soon as a certain cor-
pus size was reached.
4.2 MMAX, an XML Annotation Tool
Since we found the existing tools that we considered
to be insufficient for the task of implementing our an-
notation scheme, we decided to develop our own tool.
4http://www.mitre.org/technology/alembic-workbench/
5http://mate.nis.sdu.dk
MMAX6 is written in Java for reasons of platform
independence. It processes XML-encoded text cor-
pora which make use of standoff annotation (Thomp-
son & McKelvie, 1997). Using this technique al-
lows us to keep apart the basic data and the annota-
tion. XML support in Java is realized by means of the
Apache7 implementations of an XML parser and XSL
stylesheet processor.
4.2.1 The Data Model
In MMAX, written texts are represented in XML in
terms of base-level and supra-base level elements. For
each of these element types, Document Type Defini-
tions (DTDs) exist which describe the structure of a
well-formed element. In the following, we give DTD
fragments and discuss their semantics.
A word is the most straightforward base level ele-
ment for a written text. Apart from the representation
of the word itself, each element of this type has an ID
attribute which serves to uniquely identify the word
within the text.
<!ELEMENT words (word*)>
<!ELEMENT word (#PCDATA)>
<!ATTLIST word id ID #REQUIRED>
The sequence of words which as a whole constitutes
the complete text can be divided with respect to two
criteria, a formal and a pragmatic one: Each word is
part of a particular (formally defined) text, which con-
sists of sentences, which in turn may be grouped into
paragraphs. Each sentence has an ID and a span8
attribute which is a pointer to a sequence of word el-
ements. In addition, every text can have an optional
headline, which consists of any number of sentences.
The formal structure of a text is described by the fol-
lowing DTD:
<!ELEMENT text ((headline?),
((paragraph+) | (sentence+)))>
<!ELEMENT headline (sentence*)>
<!ELEMENT paragraph (sentence*)>
<!ATTLIST paragraph id ID #REQUIRED>
<!ELEMENT sentence (EMPTY)>
<!ATTLIST sentence id ID #REQUIRED>
<!ATTLIST sentence span CDATA #REQUIRED>
In pragmatic terms, on the other hand, a text can be
regarded as a discourse, consisting of a series of dis-
course segments. Again, each discourse segment has
an ID and a span attribute, as well as a function at-
tribute indicative of its communicative function. This
pragmatic structure can be translated into a DTD as
follows:
<!ELEMENT discourse (discourse_segment*)>
<!ELEMENT discourse_segment (EMPTY)>
<!ATTLIST discourse_segment id ID #REQUIRED>
<!ATTLIST discourse_segment span CDATA #REQUIRED>
<!ATTLIST discourse_segment function CDATA #IMPLIED>
6http://www.eml.villa-bosch.de/english/research/nlp/
7http://www.apache.org
8We use our own attribute here instead of the href at-
tribute as defined in XPointer, because our element differs
from the latter both in semantics and implementation.
4.2.2 Markables
In MMAX, the XML elements representing mark-
ables possess a set of attributes which is only partly
pre-defined: A closed set of fixed system attributes
is complemented by an open set of user-definable at-
tributes which depend on the annotation scheme that
is to be implemented.
System Attributes. Each markable has an ID at-
tribute which uniquely identifies it. In addition, a span
attribute is needed as well which maps the markable
to one or more word elements. Finally, we intro-
duce a type attribute the meaning of which will be de-
scribed in the next subsection. Two additional system
attributes serve to express the relations between mark-
ables. We argue that two basic relations are sufficient
here.
The first is an unlabelled and unordered relation be-
tween arbitrarily many markables, which can be inter-
preted as set-membership, i.e. markables standing in
this relation to each other are interpreted as constitut-
ing a set. Note that the interpretation of this relation
is not pre-defined and needs to be specified within the
annotation scheme. In order to express a markable?s
membership in a certain set, a member attribute is in-
troduced which has as its value some string specifica-
tion. Set membership can thus be established/checked
by unifying/comparing the member attribute values of
two or more markables.
The second is a labelled and ordered relation be-
tween two markables, which is interpreted as one
markable pointing to the other. Note that here, again,
the nature of this pointing is not pre-defined. However,
there is a structural constraint imposed on the pointing
relation which demands that each markable can point
to at most one other markable. Since there is no con-
straint as to how many different markables can point
to another one, n:1 relations can be represented. A
pointer attribute is required for the expression of the
pointing relation. The range of possible values for this
attribute is the range of existing markables? IDs, with
the exception of the current markable itself.
The DTD fragment for markables and their system
attributes looks as follows:
<!ELEMENT markables (markable*)>
<!ATTLIST markable id ID #REQUIRED>
<!ATTLIST markable span CDATA #REQUIRED>
<!ATTLIST markable type CDATA #REQUIRED>
<!ATTLIST markable member CDATA #IMPLIED>
<!ATTLIST markable pointer IDREF #IMPLIED>
User-definable Attributes. It is by means of its
user-definable attributes that a markable obtains its
semantic interpretation within an annotation scheme.
But even within a single scheme, it may be required
to discriminate between different types of markables.
In MMAX, the type attribute is introduced for this pur-
pose. This attribute does not have any pre-defined pos-
Figure 1: Pair of bridging expression and antecedent
sible values. Instead, a list of these has to be supplied
by the annotation scheme. For each of these values,
in turn, a list of relevant attributes and possible values
has to be defined by the user. Depending on which of
the mutually exclusive type attributes is assigned to a
given markable during annotation, only the attributes
relevant to this type will be offered in a separate at-
tribute window for further specification.
5 Implementation
We utilize the system attribute type to discriminate be-
tween the three basic classes of markables, i.e. nor-
mal9, anaphoric and bridging ones. The respective
attributes and possible values for these mutually ex-
clusive markable types can directly be adopted from
the annotation scheme. Note that a subset of these
is in fact identical for each type (np form, agreement
and grammatical role), while other attributes? possible
values vary with the type of markable: For anaphoric
markables, e.g., the sub-types direct, pronominal and
IS-A are relevant, which make no sense for bridging
expressions, and vice versa. This is directly supported
by the adaptive attribute window. Figure 1 shows the
attribute window in response to the selection of a value
for the type attribute.
Cospecification between two or more markables is
expressed by means of an identical member attribute.
This value, though at this time realised as a string
of the form set XX only, can be interpreted as what
has been called universe entity, elsewhere, e.g. in
the Mate Dialogue Annotation Guidelines10. Adding
9Normal markables are those that are either not part of
any relation or serve as the antecedent only.
10http://www.ims.uni-stuttgart.de/projekte/mdag
Figure 2: Annotation of an anaphor
a markable to a set of cospecifying markables is ac-
complished in two steps: First, the set as a whole is
selected by left-clicking any of its members. As a re-
sult, all members are displayed in a different color, the
selected one in addition being highlighted. The mark-
able to be added is then right-clicked, and the desired
action chosen from a popup menu. Figure 2 shows this
situation. Note that the attribute window has changed
in response to the selection of the value anaphoric
for the type attribute. Specifying the antecedent to
an anaphoric expression is done as follows: First,
the anaphoric markable is selected by left-clicking it.
The desired antecedent is then right-clicked. Finally,
selecting the appropriate menu item from a popup
menu causes the anaphoric markable to point to its an-
tecedent. The antecedent and the anaphoric respec-
tively bridging expression are displayed in a differ-
ent colour whenever the latter is selected. Note that
by combination of the member and pointer attributes,
cospecification and bridging can be represented simul-
taneously, which may be needed in cases of long-
distance anaphor and short-distance bridging.
6 Outlook: Multi-modal Corpora
The definitions of the phenomena anaphor and bridg-
ing presented in this paper as well as the annotation
scheme developed were tailored mainly to the needs of
written texts. This bias is apparent both in the way we
defined markables as well as in the attributes that we
specified for them. In addition, our conception of an-
tecedence was also influenced by it in that the notion
of linear order (as can be observed between words in
a written text) was at least implicit in it. All phenom-
ena, however, are not limited to the domain of writ-
ten text: They also occur in spoken language and di-
alogue. What is even more important: The means by
which they are accomplished there include non-verbal
elements like gazes and in particular pointing gestures.
It is not at all clear yet if and how traditional defini-
tions of phenomena like anaphor or bridging can be
transferred to multi-modal corpora. In particular, phe-
nomena like cross-modal anaphor and bridging need
to be studied in more detail. As a step in this direc-
tion, we have already applied MMAX to the annota-
tion of cospecification in multi-modal corpora (Mu?ller
& Strube, 2001).
Acknowledgements. We thank Lutz Wind for giv-
ing feedback on previous versions of MMAX. We also
thank the two anonymous reviewers for their useful
comments. The work presented here has been partially
funded by the German Ministry of Research and Tech-
nology under grant 01 IL 904 D/2 (EMBASSI) and by
the Klaus Tschira Foundation.
References
Aone, C. & S. W. Bennett (1994). Discourse tagging tool
and discourse-tagged multilingual corpora. In Pro-
ceedings of the International Workshop on Sharable
Natural Language Resources (SNLR), Ikoma, Nara,
Japan, 10?11 August, 1994, pp. 71?77.
Clark, H. H. (1975). Bridging. In Proc. of TINLAP-1, pp.
169?174.
DeCristofaro, J., M. Strube & K. F. McCoy (1999). Build-
ing a tool for annotating reference in discourse. In
ACL ?99 Workshop on the Relationship between Dis-
course/Dialogue Structure and Reference, University
of Maryland, Maryland, 21 June, 1999, pp. 54?62.
Hirschman, L. & N. Chinchor (1997). MUC-7
Coreference Task Definition, http://www.
muc.saic.com/proceedings/.
Malaka, R. & A. Zipf (2000). Deep Map: Challenging
IT research in the framework of a tourist information
system. In Proceedings of the International Confer-
ence on Information and Communication Technologies
in Tourism (ENTER 2000), Barcelona, Spain, 26-28
April, 2000.
Mu?ller, C. & M. Strube (2001). MMAX: A tool for the an-
notation of multi-modal corpora. In Proceedings of
2nd IJCAI Workshop on Knowledge and Reasoning in
Practical Dialogue Systems, Seattle, Wash., 5 August
2001.
Ora?san, C. (2000). ClinkA a coreferential links annotator. In
Proc. of LREC ?00, pp. 491?496.
Sidner, C. L. (1983). Focusing in the comprehension of defi-
nite anaphora. In M. Brady & R. Berwick (Eds.), Com-
putational Models of Discourse, pp. 267?330. Cam-
bridge, Mass.: MIT Press.
Thompson, H. S. & D. McKelvie (1997). Hyperlink seman-
tics for standoff markup of read-only documents. In
Proceedings of SGML Europe ?97, Barcelona, Spain,
May 1997.
Vieira, R. & M. Poesio (2000). An empirically-based system
for processing definite descriptions. Computational
Linguistics, 26(4):539?593.
Vilain, M., J. Burger, J. Aberdeen, D. Connolly &
L. Hirschman (1995). A model-theoretic coreference
scoring scheme. In Proceedings fo the 6th Message
Understanding Conference (MUC-6), pp. 45?52.
