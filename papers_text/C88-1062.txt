VOCNETS - A TOOL FOR HANDLING F INITE VOCABULARIES  
Hans KARLGREN 
KVAL Ins t i tu te  for In format ion  Sc ience 
SSdermalms torg 8 
S- l l6 45 S tockho lm 
Sweden 
J~rgen KUNZE 
Academy of Sc iences  of the GDR 
Prenz lauer  P romenade 149-152 
Berl in,  DDR - 1100 
German Democrat ic  Repub l i c  
Abst rac t  
A method  is p roposed  for s tor ing  a 
f in i te  vocabu lary  in a manner  wh ich  makes it 
conven ient  to recogn ize  words  and subst r ings  
of words.  The representat ion ,  wh ich  can be 
generated  automat ica l ly  from a l ist of words 
or f rom g iven representat ions  of other  sets 
by means  of which  the vocabu lary  has been 
de f ined  through set or s t r ing  operat ions ,  has 
the form of a mod i f ied  f in i te -s ta te  grammar,  
a form e l iminat ing  the mul t ip l i ca t ive  e f fects  
of con junct ion ,  complementat ion ,  etc.,  on the 
node sets of convent iona l  f in i te -s ta te  
representat ions .  
0. Background 
Trad i t iona l ly ,  l ingu is ts  descr ibe  sent-  
ences,  and in f lec ted  and der ived  word  forms 
by means of rules, whereas  vocabu lar ies  are 
accounted  for by enumerat ion .  But even for 
the purpose  of spec i fy ing  a g iven lex icon or 
the vocabu lary  of a g iven p iece of text  we 
f ind mere enumerat ions  inconven ient  to access 
and not very  i l luminat ing.  We want  answers 
to be read i ly  g iven to quest ions  l ike whether  
a g iven s t r ing  is a member  (or a pref ix ,  a 
suff ix,  some other  subst r ing  or sequence of 
subst r ings  of a member) ,  ~or wh ich  e lements  of 
some set of s t r ings  have such propert ies .  
That is, we want  to ar range the lex ica l  data 
so that it is easy  to per form Boo lean  and 
s t r ing  operat ions  on sets of words.  
We there fore  in t roduce  a grammar- l i ke  
representat ion  for a f in i te  vocabu lary ,  
spec i fy ing  it as is, i.e. , w i thout  
exaggerat ion  or omiss ion,  w i th  no c la im on 
the l ingu is t i c  s tatus  of the set descr ibed  or 
the ru les const ructed  to spec i fy  it. No 
pred ic t ion  about potent ia l  s t r ings  outs ide  
the g iven set is suggested.  The 
representat ion  can be a lgor i thmica l ly  der ived  
from a l ist  of the words  in the vocabu lary .  
The proposed  too\]  appears  to have 
theoret i ca l  as we\ ] \ ]  as computat iona l  mer i ts .  
1. Task  
We thus requ i re  a method  for repre-  
sent ing  a v o c a b u 1 a r y V of s t r ings  
over  on a 1 p h a b e t A (of letters,  
phonemes,  morphemes  or other  atoms), where  
* A is smal l  compared  to the vocabu lary  V 
(say, 30 aga inst  30 000 or 300 000), 
* the vocabu lary  V, though large, is f inite, 
* V has a "structure"  in the sense that, 
typ ica l ly ,  a s t r ing  in V conta ins  subst r ings  
inc luded  in other  s t r ings  in V. 
We want  the representat ion  to 
* permit  conven ient  r e t r i e v a 1 of 
s t r ings  and subst r ings  of st r ings in V, 
* be a lgor i thmica l ly  const ructed  on s u c- 
c e s s i v e i n p u t of s t r ings  in V, 
or, if V is de f ined  through B o o 1 e a n or 
s t r i n g o p e r a t i o n s on other  
sets, be der ivab le  from operat ions  on repre-  
sentat ions  of these more e lementary  sets, 
* be reasonab ly  c o m p a c t for pract ica l  
computat iona l  app l icat ions .  
2. Mod i f ied  F in i te -S ta te  Representat ion  
We have chosen to represent  vocabu lar ies  
as mod i f ied  f in i te -s ta te  gra~aars,  wh ich  we 
shal l  cal l  vocnets.  
A vocnet  wi l l  inc lude a f inite d i rec ted  
graph w i th  edges, a r r o w s, l abe l led  w i th  
e lements  of the a lphabet  A. Such a graph 
wi l l  spec i fy  a vocabu lary  over  the a lphabet  A 
if we mark  a subset  S of the nodes as source 
nodes and def ine  as an accepted  word the 
concatenat ion  of the labels  of such paths 
th rough the graph from nodes in S as arr ive 
under  cer ta in  side cond i t ions  at a set of 
nodes wh ich  fu l f i l l s  g iven target  cond i t ions .  
We do not assume a vocnet  to be 
determin is t i c  in the sense that for any node 
i and s t r ing  ~ there exist  on ly  one node j 
such that ~ is a path  from i to j. Shou ld  
we in t roduce  such a res t ra in t ,  it can be 
proven  that  it is lost a l ready  under  regu lar  
operat ions  on the vocabu lar ies ,  ioe., that 
this a t t rac t ive  feature wi l l  be absent  from a 
vocnet  der ived  in the manner  we propose  for 
the union, concatenat ion  set or closure of 
the vocabu lar ies ,  for wh ich  determin is t i c  
vocnets  had been introduced.  
P recaut ions  had to be taken to keep the 
mechan ica l ly  generated  representat ions  
compact .  In par t icu lar ,  it was essent ia l  to 
e l im inate  the we l l -known mul t ip l i ca t ive  
e f fect  on the number  of states a r i s ing  when 
s tandard  f in i te -s ta te  grammars  are combined  
by in tersect ion  and complementat ion .  
3. Def in i t ion  of vocnet  graphs 
A vocnet  graph U = <A, N, C', C"> 
quadrup le ,  where  
is a 
A is an a lphabet  of a t o m s a, b; c, ... 
N is a set of n o d e s h, i, j, k, .o. 
C' and C" are mapp ings  of A into N ~N.  
We def ine  C(x) = C'(x) u C"(x) as the 
set of c a t e g o r i e s of "the atom x. 
We def ine  ti le product  C 4 o C~ of two 
category  sets C~ and C~ as 
C~ o C~ ={(i, j ) IBk (i, k )e  C~^(k~ j) ? C~I 
and the category  set for a s t r ing  ~ : x ~ as 
c(~)  = C(x) o c (~)  
We shal l  say that the atom x C o n- 
n e c t s the set M1 to the set M2 in U iff 
e i ther  M2 is the set of al l  j for wh ich  there  
is a node i in MI such that (i, j )~ C'(x)r  
or M2 is the set of all j for wh ich  there is 
a node i in M1 such that (i, j )~  C"(x).  
306 
We shal l  a \ ]so say that a s t r ing  & = x 
connects  Ml to M2 if there is some set M3 
such that x connects  M1 to M3 and ~ connects  
M3 to M2? 
By :introducing two kinds of arrows,  one 
can so to speak synchron ize  para l le l  paths:  
the res t ra in t  that  in every  path the ar row 
assoc ia ted  w i th  one pos i t ion  in a s t r ing 
wi l l  haw! to be of the same kind can be 
u t i l i zed  to par t i t ion  the graph into zones 
wh ich  cor respond to segments  of the str ings,  
if one k ind of arrows,  i n t r a z o n e 
arrows (tliose in C') join nodes w i th in  the 
same zone and another  kind, i n t e r- 
z o n e arrows (those in C")~ join nodes in 
one zone w i th  nodes in another  zone. A 
s t r ing  can then be seen as cons is t ing  of 
segments  separated  by junctures,  where  each 
segment  J s assoc ia ted  wi th  para l le l  in t razone 
ar row sequences  and each juncture  wi th  
para l le l  in terzone arrows. 
4? Def in i t ion  of Vocnets  
A vocnet  G is a t r ip le  <U, S, P>~ where  
S ~N is a non-empty  set of s o u r c e 
nodes 
P(M) is ~t t a r g e t c o n d i t i o n on 
node sets M, P(M) be ing  a propos i t ion  over 
e lementary  cond i t ions  of the form that M 
over laps  w i th  some subset  E of N, say 
(M~E\ ]  ~: ~)A  ~(MoE~>2 ? ~). 
The sets E1 and E2 here form the 
t a r g e t a r e a s of G. 
The un ion of al l  min imal  sets M for 
wh ich  P(M) is true in the vocnet  G wi l l  be 
ca l led  the t a r g e t s e t T of G. 
A vocnet  G def ines  the language L(G): 
\[ (* I ~M ~N and ~ connects  S to the 
non-empty  node set M and P(M) is true\] 
Whereas  for a s t r ing  to be accepted  by a 
convent iona l  f in i te -s ta te  grammar it is 
enough ~hat it is assoc ia ted  wi th  one 
permi t ted  path through the graph, a s t r ing  
wi l l  be accepted  by a vocnet  if it is 
assoc ia ted  w i th  a set of s imu l taneous  paths, 
each lead ing from a source  node to a target  
node, these target  nodes forming a permi t ted  
combinat ion  M (i.e., M is not empty  and P(M) 
i.S true).  
The vocnet  may conta in  spec ia l  e x i t 
c h e c k e r s. An exit  checker  is a dummy 
zone, cons is t ing  of exact ly  one node 
connected  to i tse l f  by an ar row in C' for 
each atom in A. By us ing ex i t  checkers ,  
local  cond i t ions  for zones can be accounted  
for in the target  cond i t ions  for the who le  
vocnet? The exit  checkers ,  in a way, wi l l  
then fre~,ze the zone exit  cond i t ions  so that 
they remain  access ib le  for ver i f i ca t ion  when 
the who le  graph has been passed through. 
5. Genexat ion  of Vecnets  from List  of Words 
A vocnet  for a g iven vocabu lary  can be 
generateo  a lgor i thmica l ly  in the fo l low ing  
manner?  
Words  are entered  one by one. For each 
new word  un ique new nodes are introduced:  if 
the new word is x^xz.. ,  x~ , each let ter  x~ 
is g iven  the new category  (kT  ,k~+A), where  
no k~. ex is ted  before.  
C lear ly ,  this p rocedure  wi l l  c reate  a 
vocnet  wh ich  wi l l  account  for all and on ly  
the words  given? The set of nodes, however,  
wi l l  typ ica l ly  be much larger  than necessary,  
but it can be reduced  - a f ter  one word  has 
been entered  or af ter  the inser t ion  of 
severa l  words  - by appropr ia te  fus ion of 
nodes; cf. sect ion  8 infra. 
6. Set Operat ions  on Vocabu lar ies  
In the :following, it wi l l  be assumed 
that the vocabu lar ies  cons idered  are st r ings  
over  the same a lphabet  A, that none of them 
inc ludes  the empty  str ing, and that the 
vocnet  graphs  wh ich  we combine  have d i s junct  
sets of nodes. 
6.1 Complement  Format ion  
G iven  a vocnet  G1 for a language LI, the 
vocnet  G for the complement  L is g iven 
immediate ly  by rep lac ing  P1 by its negat ion  
G = < UI, SI, ~ PI>, 
Jf G1 is complete  in the sense that for any 
st r ing there  ex ists  some path beg inn ing  in an 
e lement  of SI. If G1 is not complete  in this 
sense, it can be made complete  at the expense  
of add ing  one more node. 
6.2 Un ion 
In a vocnet  G = <U, S, P> for the un ion 
of L(GI) and L(G2) the vocnet  graph U is 
formed d i rec t ly  through union of the e lements  
of U1 and U2, and P is formed through 
d is junct ion :  
U = <A, N1 uN2,  C I '~ C2', C l "u  C2"> 
S = SI u $2 
P(M) <:> PI(M) v P2(M) for M ~ N. 
6.3 In tersect ion  
In a vocnet  G for L(GI) ~ L(G2),  U and S 
are formed as in the case of un ion and 
P(M) <=> Pl(M) A P2(M) for S ~ N. 
Thus, one and the same vocnet  graph wi l l  
serve as a component  in vocnets  de f in ing  
d i f fe rent  languages.  
7. S t r ing  Operat ions  on Vocabu lar ies  
7.1 Concatenat ion  
The concatenat ion  set V of V1 and V2, 
i.e., the set V of st r ings cons is t ing  of a 
s t r ing in Vl, spec i f ied  by the vocnet  GI, 
concatenated  wi th  one in V2, spec i f ied  by the 
vocnet  G2, is de f ined  by a vocnet  G 
G = <U, SI, P> 
where  
U = <A, NI+uN2, C I 'u  C2', C l "+u C2"u  C12"> 
P(M) <=> QI(M) A P2(M) 
Here 
NI+ is N1 w i th  the add i t ion  of exit  checkers:  
if G1 has the target  areas El, ?'2,..., NI+ 
wi l l  conta in  the exit  checkers  fl, f2, ..., 
C I"+ is CI" w i th  the add i t ion  of arrows for 
each atom from each node in Ep to the exit  
checker  fp, 
CI2"(x)  is tile set of all ar rows (i, j) w i th  
i ~ T1 and j 6 N2 for wh ich  (h, j) ~ Cl '(x) for 
some h & $2. 
QI(M) is the f rozen vers ion  of PI(M),  w i th  
fl, f2, ..., subst i tu t ing  El, E2, ... 
The vocnet  graphs U1 and U2 have thus 
been in tegrated  as zones into the new vocnet  
graph. A few exit  checkers  have been  added 
307 
to permit  express ing  the res t ra in ts  on the 
pass@ge through the zone U1 as target  
cond i t ions  on the to ta l i ty  of G. Thanks to 
the use of exit  checkers  the complex i ty  of 
the target  cond i t ion  P of G in terms of the 
number  of target  areas is not the product  of 
the complex i t ies  of Pl and P2 but less than 
the i r  sum. 
7.2. Rest r i c ted  I terat ion  and Invo lu t ion  
The languages  L(GI) u L(GI )Zu. . .  u L(GI) q 
and L(GI)q (q = ~ 2) may be represented  as 
vocnets  that are const ructed  in a s imi la r  way 
as for concatenat ion ,  w i th  GI in the role of 
G2, but the exit  checkers  have to be 
s t ra t i f i ed  so that we may count the depth  d 
of the concatenat ion .  There fore  C"(x) 
conta ins  bes ides  the categor ies  exp la ined  in 
7.1 all  pairs  (dfp, d*~fp) for l~d  ~q- l .  
The target  cond i t ion  for res t r i c ted  
i te ra t ion  is 
P(M) <:> PI(M) A (Mn\ [q f l ,q f2  .... \] = ~) A 
( q-A PI(M) => ... => 4PI(M)) 
and for the p- th power  of L(GI) 
P(M) <=> PI(M) A (Mr \ [q f \ ] ,q f2  .... \] = ~) A 
~'API(M) A ... A ~PI(M). 
Here, ~ PI(M) are the f rozen s t ra t i f i ed  
target  cond i t ions  of GI. 
7.3. Decatenat ion  
G iven  one vocnet  G1 (say for words 
beg inn ing  wi th  a pref ix)  and another  vocnet  
G2 (say for p re f ixes  and pref ix  sequences) ,  
we search  a vocnet  G (say for words  s t r ipped  
of the i r  pref ixes)  such that ~& L(G\] iff 
~4a~A2 ( ~ & L(GI) A 0~2C-L(G2)A 
The fo l low ing  vocnet  G wi l l  sa ts i fy  our 
requ i rement  : 
G = <UI, S, PI> 
where  S is the un ion of al l  sets M ~NI  for 
wh ich  S1 is connected  to M in G1 by some 
s t r ing  conta ined  in L(G2).  
8. Equatab i l i ty  and Node Fus ion 
Vocnets  generated  wi th  the incrementa l  
a lgor i thm descr ibed  in sect ion  5 above 
typ ica l ly  conta in  more  nodes than a min ima l  
vocnet  for the same language. S imi lar ly ,  
vocnets  der ived  from other  vocnets  tend to be 
h igh ly  redundant .  
Compact ing  of a g iven vocnet  can be 
a lgor i thmica l ly  per fo rmed as fol lows.  
We shal l  say that nodes in a vocnet  G 
are e q u a t a b 1 e if they can be 
ident i f ied  w i thout  a f fec t ing  the language 
def ined  by G. 
The fo l low ing  de f in i t ions  permi t  us to 
f ind pai rs  of equatab le  nodes. 
We f i rst  de f ine  some equ iva lence  
re la t ions  between nodes. 
The nodes i and j are p r e c e- 
d e n c e e q u i v a 1 e n t in a vocnet  
graph U iff for all k and x 
(k, i )~  C'(x) <=> (k, 
and 
(k, i) G C"(x) <=> (k, 
j) ~ C'(x) 
j) 6 C-(x) 
The nodes J and j are 
s i o n e q u i v a 1 e n t 
graph U iff for all k and x 
s U C C e s- 
in a vocnet  
(i, k) e C' (x) <=> (j~ k) 6 C' (x) 
and 
(i, k) ~C"(x )  <=> (j, k )eC ' (x )  
The nodes i and j are s o u r c e 
e q u i v a 1 e n t in a vocnet  G iff 
i&S  <=> j&S  
The nodes i and j are t a r g e t 
e q u i v a 1 e n t in a vocnet  G iff for 
any subset  M of N 
P(M u {i}) <:> P(M u \[ j}). 
Now tile nodes i and j are 1 e f t 
e q u i v a 1 e n t in a vocnet  G iff they 
are precedence  and source equiva lent ,  rPhey 
are r i g h t e q u i v a 1 e n t in a 
vocnet  G iff they are success ion  and target  
equ iva lent .  They are e q u a t a b I e if - 
but not necessar i l y  on ly  if - they are left  
or r ight  equiva lent .  
By success ive  fus ion of pa i rw ise  
equatab le  nodes vocnets  can be - not rare ly  
d ras t i ca l l y  - compacted.  It should  be noted v 
however,  that equatab i l i ty  is not an 
equ iva lence  re la t ion  and that reduct ion  of a 
g iven vocnet  graph does not y ie ld  a un ique 
resu l t  but depends on the cho ice  of node 
pairs  to ident i fy  in each step of the 
procedure .  
9. Paras i tes  
By p a r a s i t e s of a language L 
we shal l  mean str ings wh ich  are not members  
of L nor subst r ings  of members  of L. 
C lear ly ,  if w i th  the vocnet  G t i le  set 
C (~ ) is empty, ~ is a paras i te  of L(G)~ 4, 
is not a member  nor wi l l  it become a member  
whatever  is appended at e i ther  end. 
We shal l  say a node i in a vocnet  G is 
g e n u i n e if there is some st r ing  o< 
assoc ia ted  w i th  a path from a source node in 
G v ia  i to a node in some M, such that 
connects  S to M and P(M) is true. 
If al l  nodes in a notvec are genu ine  r a 
s t r ing  4. is a paras i te  iff C(o< ) is empty. 
The vocnet  wi l l  then of fer  us an assoc ia t ive  
ca lcu lus  for recogn iz ing  paras i tes  (and 
s t r ings  wh ich  const i tu te  the beg inn ing  of a 
word  or the end of a word).  
A node i is ingenu ine  if no path leads 
from nodes in S to i or from i to nodes of To 
If P(M) has the s imple  form that M must  
over lap  w i th  some g iven target  set, a node i 
is ingenu ine  on ly  if the preced ing  cond i t ion  
is fu l l f i l led.  
i0. Node E l iminat ion  
Ingenu ine  nodes can be removed from the 
graph U w i thout  a f fec t ing  the language 
accepted  by G = <U, S, P>. 
Success ive  e l im inat ion  of ingenu ine  
nodes and fus ion of equatab le  node may lead 
to cons iderab le  compress ion  and s impl i -  
f i ca t ion  of a given vocnet.  It should  be 
observed  that the final, i r reduc ib le  resu l t  
of such compress ion  is not independent  of the 
cho ice  at each stage of what  reduct ion  
operat ion  to perform. 
308 
