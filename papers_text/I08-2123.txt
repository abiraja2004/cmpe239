A Co-occurrence Graph-based Approach for
Personal Name Alias Extraction from Anchor Texts
Danushka Bollegala ?
The University of Tokyo
7-3-1, Hongo, Tokyo,
113-8656, Japan
danushka@mi.ci.i.u-
tokyo.ac.jp
Yutaka Matsuo
National Institute of Advanced
Industrial Science and
Technology
1-18-13, Sotokanda, Tokyo,
101-0021, Japan
y.matsuo@aist.go.jp
Mitsuru Ishizuka
The University of Tokyo
7-3-1, Hongo, Tokyo,
113-8656, Japan
ishizuka@i.u-
tokyo.ac.jp
Abstract
A person may have multiple name aliases
on the Web. Identifying aliases of a name
is important for various tasks such as in-
formation retrieval, sentiment analysis and
name disambiguation. We introduce the no-
tion of a word co-occurrence graph to rep-
resent the mutual relations between words
that appear in anchor texts. Words in an-
chor texts are represented as nodes in the
co-occurrence graph and an edge is formed
between nodes which link to the same url.
For a given personal name, its neighboring
nodes in the graph are considered as can-
didates of its aliases. We formalize alias
identification as a problem of ranking nodes
in this graph with respect to a given name.
We integrate various ranking scores through
support vector machines to leverage a robust
ranking function and use it to extract aliases
for a given name. Experimental results on a
dataset of Japanese celebrities show that the
proposed method outperforms all baselines,
displaying a MRR score of 0.562.
1 Introduction
Searching for information about people in the Web is
one of the most common activities of Internet users.
Around 30% of search engine queries include person
names (Guha and Garg, 2004). However, an indi-
vidual might have multiple nicknames or aliases on
?Research Fellow of the Japan Society for the Promotion of
Science (JSPS)
the Web. For example, the famous Japanese major
league baseball player Hideki Matsui is often called
as Godzilla in web contents. Identifying aliases of
a name is important in various tasks such as infor-
mation retrieval (Salton and McGill, 1986), senti-
ment analysis (Turney, 2002) and name disambigua-
tion (Bekkerman and McCallum, 2005).
In information retrieval, to improve recall of a
web search on a person name, a search engine can
automatically expand the query using aliases of the
name. In our previous example, a user who searches
for Hideki Matsui might also be interested in re-
trieving documents in which Matsui is referred to
as Godzilla. People use different aliases when ex-
pressing their opinions about an entity. By aggre-
gating texts written on an individual that use various
aliases, a sentiment analysis system can make an in-
formed judgment on the sentiment. Name disam-
biguation focuses on identifying different individu-
als with the same name. For example, for the name
Jim Clark, aside from the two most popular name-
sakes - the formula-one racing champion and the
founder of Netscape - at least ten different people are
listed among the top 100 results returned by Google
for the name. Although namesakes have identical
names, their nicknames usually differ. Therefore, a
name disambiguation algorithm can benefit from the
knowledge related to name aliases.
We propose an alias extraction method that ex-
ploits anchor texts and the links indicated by the
anchor texts. Link structure has been studied
extensively in information retrieval and has been
found to be useful in various tasks such as rank-
ing of web pages, identification of hub-authority
865
sites, text categorization and social network extrac-
tion (Chakrabarti, 2003). Anchor texts pointing to
an url provide useful semantic clues regarding the
resource represented by the url.
If the majority of inbound anchor texts of an
url contain a person name, then it is likely that
the remainder of the anchor texts contain informa-
tion about aliases of the name. For example, an
image of Hideki Matsui on a web page might be
linked using the real name, Hideki Matsui, as well
as aliases Godzilla and Matsu Hide. However, ex-
tracting aliases from anchor texts is a challenging
problem due to the noise in both link structure and
anchor texts. For example, web pages of extremely
diverse topics link to yahoo.com using various an-
chor texts. Moreover, given the scale of the Web,
broken links and incorrectly linked anchor texts are
abundant. Naive heuristics are insufficient to extract
aliases from anchor texts.
Our main contributions are summarized as fol-
lows:
? We introduce word co-occurrence graphs to
represents words that appear in anchor texts
and formalize the problem of alias extraction
as a one of ranking nodes in the graph with re-
spect to a given name.
? We define various ranking scores to evaluate
the appropriateness of a word as an alias of a
name. Moreover, the ranking scores are inte-
grated using support vector machines to lever-
age a robust alias detection method.
2 Related Work
Hokama and Kitagawa (2006) propose an alias ex-
traction method that is specific to Japanese lan-
guage. For a given name p, they search for the query
* koto p 1 and extract the words that match the aster-
isk. However, koto is highly ambiguous and extracts
lots of incorrect aliases. Moreover, the method can-
not extract aliases when a name and its aliases ap-
pear in separate documents.
Anchor texts and link structure have been em-
ployed in synonym extraction (Chen et al, 2003)
and translations extraction (Lu et al, 2004). Chen
et al (2003) propose the use of hyperlink structure
1koto is written in hiragana and and means also known as
Hideki MatsuiGodzilla Matsu Hide
????
Yankees baseball
sportsNew York
Figure 1: Co-occurrence graph for Hideki Matsui
within a particular domain to generate a domain-
specific thesaurus. First, a set of high quality web-
sites from a given domain is selected. Second, sev-
eral link analysis techniques are used to remove
noisy links and the navigational structure of the web-
site is converted into a content structure. Third,
pointwise mutual information is applied to identify
phrases within content structures to create a domain
specific thesaurus. They evaluate the thesaurus in a
query expansion task. Anchor texts written in differ-
ent languages that point the same object have been
used in cross-language information retrieval (CLIR)
to translate user queries. Lu et al (2004) extend this
idea by associating anchor texts written using a piv-
otal third language to find translations of queries.
3 Method
3.1 Outline
We introduce word co-occurrence graph, an undi-
rected graph, to represent words that appear in an-
chor texts. For each word that appears in the vocabu-
lary of words in anchor texts, we create a node in the
graph. Two words are considered as co-occurring if
two anchor texts containing these words link to the
same url. An edge is formed between two nodes if
the words represented by those nodes co-occur. Fig-
ure 1 illustrates a portion of the co-occurrence graph
in the proximity of Hideki Matsui as extracted by
this method from anchor texts.
Representing words that appear in anchor texts
as a graph enables us to capture the complex inter-
relations between the words. Words in inbound an-
chor texts of an url contain important semantic clues
866
regarding the resource represented by the url. Such
words form a clique in the co-occurrence graph,
indicating their close connectivity. Moreover, co-
occurrence graphs represent indirect relationships
between words. For example, in Figure 1 Hideki
Matsui is connected to New York via Yankees.
We model the problem of extracting aliases as
a one of ranking nodes in the co-occurrence graph
with respect to a real name. Usually, an individual
has just one or two aliases. A name alias extraction
algorithm must identify the correct aliases among a
vast number of related terms for an individual.
3.2 Word Co-occurrence Graph
Let V be the vocabulary of words wi that appear
in anchor texts. The boolean function A(ai, wi) re-
turns true if the anchor text ai contains the word wi.
Moreover, let the boolean function L(ai, ui) to be
true if the anchor text ai points to url ui. Then two
words wi, wj are defined to be co-occurring in a url
u, if A(ai, wi) ? A(aj , wj) ? L(ai, u) ? L(aj , u) is
true for at least one pair of anchor texts (ai, aj). In
other words, two words are said to co-occur in an url
if at least one inbound pair of anchor texts contains
the two words. Moreover, we define the number of
co-occurrences of wi and wj to be the number of
different urls they co-occur.
We define word co-occurrence graph, G(V,E)
(V is the set of nodes and E is the set of edges) as an
undirected graph where each word wi in vocabulary
V is represented by a node in the graph. Because
one-to-one mapping pertains between a word and a
node, for simplicity we use wi to represent both the
word and the corresponding node in the graph. An
edge eij ? E is created between two nodes wi, wj if
they co-occur. Given a personal name p, represented
by a node p in the co-occurrence graph, our objec-
tive is to identify the nodes that represent aliases of
p. We rank the nodes in the graph with respect to
p such that more likely a node is an alias of p, the
higher the rank it is assigned. According to our def-
inition, a node that lies n hops away from p has an
n-order co-occurrence with p. Considering the fact
that a single web page might link to many pages with
diverse topics, higher order co-occurrences with p
(i.e. nodes that appear further from p) are unreliable
as aliases of p. Consequently, we limit C(p), the set
of candidate aliases of p, to nodes which are directly
Table 1: Contingency table for a candidate alias x
x C(p)? {x}
p k n? k n
V ? {p} K ? k N ? n?K + k N ? n
V K N ?K N
connected to p in the graph. In Figure 1 candidates
of Hideki Matsui fall inside the dotted ellipse.
3.3 Ranking of Candidates
To evaluate the strength of co-occurrence between
a candidate alias and the real name, for each candi-
date alias x in C(p) we create a contingency table
as shown in Table 1. In Table 1, the first row repre-
sents candidates of p and the first column represents
nodes in the graph. Therein, k is the number of urls
in which p and x co-occur, K is the number of urls
in which at least one inbound anchor text contains
the candidate x, n is the number of urls in which
at least one inbound anchor text contains p and N is
the total number of urls in the crawl. Next, we define
various ranking scores based on Table 1.
Simplest of all ranking scores is the link frequency
(lf ). We define link frequency of an candidate x as
the number of different urls in which x and p co-
occur. This is exactly the value of k in Table 1.
Link frequency is biased towards highly frequent
words. A word that has a high frequency in anchor
texts can also report a high co-occurrence with p.
tfidf measure which is popularly used in information
retrieval can be used to normalize this bias. tfidf is
computed from Table 1 as follows,
tfidf(nj) = k log NK + 1 .
From Table 1 we compute co-occurrence mea-
sures; log likelihood ratio LLR (Dunning, 1993),
chi-squared measure CS, point-wise mutual infor-
mation PMI (Church and Hanks, 1991) and hyper
geometric distribution HG (Hisamitsu and Niwa,
2001). Each of these measures is used to rank candi-
date aliases of a given name. Because of the limited
availability of space, we omit the definitions of these
measures.
Furthermore, we define popular set overlap mea-
sures; cosine measure, overlap coefficient and Dice
coefficient from Table 1 as follows,
867
cosine(p, x) = k?n+?K ,
overlap(p, x) = kmin(n,K) ,
Dice(p, x) = 2kn+K .
3.4 Hub weighting
A frequently observed phenomenon on the Web is
that many web pages with diverse topics link to so
called hubs such as Google, Yahoo or Amazon. Be-
cause two anchor texts might link to a hub for en-
tirely different reasons, co-occurrences coming from
hubs are prone to noise. To overcome the adverse ef-
fects of a hub h when computing the ranking scores
described in section 3.3, we multiply the number
of co-occurrences of words linked to h by a factor
?(h, p) where,
?(h, p) = td? 1 . (1)
Here, t is the number of inbound anchor texts of
h that contain the real name p, d is the total num-
ber of inbound anchor texts of h. If many anchor
texts that link to h contain p (i.e., larger t value)
then the reliability of h as a source of information
about p increases. On the other hand, if h has many
inbound links (i.e., larger d value) then it is likely
to be a noisy hub and gets discounted when mul-
tiplied by ?(<< 1). Intuitively, Formula 1 boosts
hubs that are likely to be containing information re-
garding p, while penalizing those that contain vari-
ous other topics.
3.5 Training
In section 3.3 we introduced 9 ranking scores to
evaluate the appropriateness of a candidate alias for
a given name. Each of the scores is computed
with and without weighting for hubs, resulting in
2? 9 = 18 ranking scores. The ranking scores cap-
ture different statistical properties of candidates; it is
not readily apparent which ranking scores best con-
vey aliases of a name. We use real world name-alias
data to learn the proper combination of the ranking
scores.
We represent each candidate alias as a vector of
the ranking scores. Because we use the 18 rank-
ing scores described above, each candidate is repre-
sented by an 18-dimensional vector. Given a set of
personal names and their aliases, we model the train-
ing process as a preference learning task. For each
name, we impose a binary preference constraint be-
tween the correct alias and each candidate.
For example, let us assume for a name wp we
selected the four candidates a1, a2, a3, a4. With-
out loss of generality, let us further assume that a1
and a2 are the correct aliases of p. Therefore, we
form four partial preferences: a1 ? a3, a1 ? a4,
a2 ? a3 and a2 ? a4. Here, x ? y denotes
the fact that x is preferred to y. We use ranking
SVMs (Joachims, 2002) to learn a ranking function
from preference constraints. Ranking SVMs attempt
to minimize the number of discordant pairs during
training, thereby improving average precision. The
trained SVM model is used to rank a set of candi-
dates extracted for a name. Then the highest ranking
candidate is selected as the alias of the name.
4 Experiments
We crawled Japanese web sites and extracted anchor
texts and urls linked by the anchor texts. A web
site might use links for purely navigational purposes,
which convey no semantic clue. To remove naviga-
tional links in our dataset, we prepare a list of words
that are commonly used in navigational menus, such
as top, last, next, previous, links, etc and remove
anchor texts that contain those words. In addition
we remove any links that point to pages within the
same site. All urls with only one inbound anchor text
are removed from the dataset. After the above men-
tioned processing, the dataset contains 24, 456, 871
anchor texts pointing to 8, 023, 364 urls. The aver-
age number of inbound anchor texts per url is 3.05
and its standard deviation is 54.02. We tokenize
anchor texts using the Japanese morphological an-
alyzer MeCab (Kudo et al, 2004) and select nouns
as nodes in the co-occurrence graph.
For training and evaluation purposes we manually
assigned aliases for 441 Japanese celebrities. The
name-alias dataset covers people from various fields
868
Table 2: Mean Reciprocal Rank
Method MRR Method MRR
SVM (RBF) 0.5625 lf 0.0839
SVM (Linear) 0.5186 cosine 0.0761
SVM (Quad) 0.4898 tfidf 0.0757
SVM (Cubic) 0.4087 Dice 0.0751
tfidf(h) 0.3957 overlap(h) 0.0750
LLR(h) 0.3879 PMI(h) 0.0624
cosine(h) 0.3701 LLR 0.0604
lf(h) 0.3677 HG 0.0399
HG(h) 0.3297 CS 0.0079
Dice(h) 0.2905 PMI 0.0072
CS(h) 0.1186 overlap 0.0056
of cinema, sports, politics and mass-media. The ma-
jority of people in the dataset have only one alias
assigned. For each real name in the dataset we ex-
tract a set of candidates using the proposed method.
We then sort the real names in the dataset accord-
ing to the number of candidates extracted for them.
We select the top 50 real names with the greatest
number of candidate aliases for evaluation purposes
because recognizing the correct alias from numerous
candidates is a more challenging task that enables us
to perform a strict evaluation. On average a name in
our evaluation dataset has 6500 candidates, of which
only one is correct. The rest of the 391 (441 ? 50)
names are used for training.
We compare the proposed method (SVM) against
various baseline ranking scores using mean recip-
rocal rank (MRR) (Baeza-Yates and Ribeiro-Neto,
1999). The MRR is defined as follows;
MRR = 1n
n?
i=1
1
Ri . (2)
Therein, Ri is the rank assigned to a correct alias and
n is the total number of aliases. The MRR is widely
used in information retrieval to evaluate the rank-
ing of search results. Formula 2 gives high MRR to
ranking scores which assign higher ranks to correct
aliases.
Our experimental results are summarized in Ta-
ble 2. The hub weighted versions of ranking scores
are denoted by (h). We trained rank SVMs with
linear SVM (Linear), quadratic SVM (Quad), cubic
SVM (Cubic) and radial basis functions (RBF) SVM
(RBF) kernels. As shown in Table 2, the proposed
SVM-based method has the highest MRR values
among all methods compared. The best results are
obtained with the RBF kernel (SVM RBF). In fact
for 21 out of 50 names in our dataset, SVM (RBF)
correctly ranks their aliases at the first rank. Con-
sidering the fact that each name has more than 6000
candidate aliases, this is a marked improvement over
the baselines. It is noteworthy in Table 2 that the
hub-weighted versions of ranking scores outperform
the corresponding non-weighted version. This jus-
tifies the hub weighting method proposed in sec-
tion 3.4. The hub-weighted tfidf score (tfidf(h)) has
the best MRR among the baseline ranking scores.
For polynomial kernels, we observe a drop of preci-
sion concomitant with the complexity of the kernel,
which occurs as a result of over-fitting.
Table 3 shows the top-three ranked aliases ex-
tracted for Hideki Matsui by various methods. En-
glish translation of words are given within brackets.
The correct alias, Godzilla, is ranked first by SVM
(RBF). Moreover, the correct alias is followed by
the last name Matsui and his team, New York Yan-
kees. In fact, tfidf(h), LLR(h) and lf(h) all have the
exact ranking for the top three candidates. Hide,
which is an abbreviated form of Hideki, is ranked
second by these measures. However, none con-
tains the alias Godzilla among the top three candi-
dates. The non-hub weighted measures tend to in-
clude general terms such as Tokyo, Yomiuri (a pop-
ular Japanese newspaper), Nikkei (a Japanese busi-
ness newspaper), and Tokyo stock exchange. A close
analysis revealed that such general terms frequently
co-occur with a name in hubs. Without adjusting
the co-occurrences coming from hubs, such terms
invariably receive high ranking scores, as shown in
Table 3.
Incorrect tokenization of Japanese names is a
main source of error. Many aliases are out-of-
dictionary (unknown) words, which are known to
produce incorrect tokenizations in Japanese mor-
phological analyzers. Moreover, a name and its
aliases can be written in various scripts: Hiragana,
Katanaka, Kanji, Roman and even combinations of
multiple scripts. Some foreign names such as David
even have orthographic variants in Japanese: da-
bid-do or de-bid-do. Failing to recognize the differ-
ent ways in which a name can be written engenders
wrong preference constraints during training.
869
Table 3: Top ranking candidate aliases for Hideki Matsui
Method First Second Third
SVM (RBF) (Godzilla) (Matsui) (Yankees)
tfidf(h) (Matsui) (Hide) (Yankees)
LLR(h) (Matsui) (Hide) (Yankees)
cosine(h) (Matsui) (Yankees) (Hide)
lf(h) (Matsui) (Hide) (Yankees)
HG(h) (Matsui) (Yankees) (Hide)
Dice(h) (Matsui) (Yankees) (Hide)
CS(h) (Matsui) (Major league) (player)
lf (Tokyo) (Yomiuri) (Nikkei)
cosine (Yomiuri) (Tokyo stock exchange) (Matsui)
tfidf (Yomiuri) (Tokyo) (Tokyo stock exchange)
Dice (Yomiuri) (Tokyo stock exchange) (Matsui)
overlap(h) (play) (Godzilla) (Steinbrenner)
PMI(h) (play) (Godzilla) (Steinbrenner)
LLR (Yomiuri) (Tokyo stock exchange) (jiji.com)
HG (Yomiuri) (Tokyo stock exchange) (Matsui)
CS (jiji.com) (Tokyo stock exchange) (Yomiuri)
PMI (Komdatzien) (picture) (contents)
overlap (Komdatzien) (picture) (contents)
5 Conclusion
We proposed a method to extract aliases of a given
name using anchor texts and link structure. We cre-
ated a co-occurrence graph to represent words in an-
chor texts and modeled the problem of alias extrac-
tion as a one of ranking nodes in this graph with re-
spect to a given name. In future, we intend to apply
the proposed method to extract aliases for other en-
tity types such as products, organizations and loca-
tions.
References
R.A. Baeza-Yates and B.A. Ribeiro-Neto. 1999. Modern
Information Retrieval. ACM Press / Addison-Wesley.
R. Bekkerman and A. McCallum. 2005. Disambiguat-
ing web appearances of people in a social network. In
Proc. of the World Wide Web Conference (WWW? 05),
pages 463?470.
S. Chakrabarti. 2003. Mining the Web: Discovering
Knowledge from Hypertext Data. Morgan Kaufmann.
Z. Chen, S. Liu, L. Wenyin, Ge. Pu, and W. Ma. 2003.
Building a web thesaurus from web link structure.
In Proc. of the 26th annual international ACM SI-
GIR conference on Research and development in in-
formaion retrieval, pages 48?55.
K. Church and P. Hanks. 1991. Word association norms,
mutual information and lexicography. Computational
Linguistics, 16:22?29.
T. Dunning. 1993. Accurate methods for the statistics of
surprise and coincidence. Computational Linguistics,
19:61?74.
R. Guha and A. Garg. 2004. Disambiguating people in
search. In Stanford University.
T. Hisamitsu and Y. Niwa. 2001. Topic-word selection
based on combinatorial probability. In Proc. of NL-
PRS?01, pages 289?296.
T. Hokama and H. Kitagawa. 2006. Extracting
mnemonic names of people from the web. In Proc.
of 9th International Conference on Asian Digital Li-
braries (ICADL?06), pages 121?130.
T. Joachims. 2002. Optimizing search engines using
clickthrough data. In Proc. of the ACM conference on
Knowledge Discovery and Data Minning (KDD).
T. Kudo, K. Yamamoto, and Y. Matsumoto. 2004. Ap-
plying conditional random fields to japanese morpho-
logical analysis. In Proc. of EMNLP?04.
W. Lu, L. Chien, and H. Lee. 2004. Anchor text mining
for translation of web queries: A transitive translation
approach. ACM Transactions on Information Systems,
22(2):242?269.
G. Salton and M.J. McGill. 1986. Introduction to Mod-
ern Information Retreival. McGraw-Hill Inc., New
York, NY.
P. Turney. 2002. Thumbs up or thumbs down? seman-
tic orientation applied to unsupervised classification of
reviews. In Proc. of the ACL, pages 417?424.
870
