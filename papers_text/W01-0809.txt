Generation of Vietnamese for French-Vietnamese and English-
Vietnamese Machine Translation
DOAN-NGUYEN Hai
Groupe de recherche sur l'asym?trie des langues naturelles,
Universit? du Qu?bec ? Montr?al, H3C-3P8, Canada.
E-mail: c1322@er.uqam.ca
 and
Laboratoire d'Analyse et de Technologie du Langage (LATL)
Facult? des Lettres, Universit? de Gen?ve
2, rue de Candolle, CH-1211 Gen?ve 4, Switzerland
Abstract
This paper presents the implementation
of the Vietnamese generation module
in ITS3, a multilingual machine
translation (MT) system based on the
Government & Binding (GB) theory.
Despite well-designed generic
mechanisms of the system, it turned out
that the task of generating Vietnamese
posed non-trivial problems. We
therefore had to deviate from the
generic code and make new design and
implementation in many important
cases. By developing corresponding
bilingual lexicons, we obtained
prototypes of French-Vietnamese and
English-Vietnamese MT, the former
being the first known prototype of this
kind. Our experience suggests that in a
principle-based generation system, the
parameterized modules, which contain
language-specific and lexicalized
properties, deserve more attention, and
the generic mechanisms should be
flexible enough to facilitate the
integration of these modules.
1 Introduction
Although Vietnamese is now spoken by about
80 millions people in the world, there has not
been much work on machine translation (MT)
from and to this language, except some English-
Vietnamese MT implementations (eg. Doan-
Nguyen, 1994) of minor success. As far as we
know, there has been yet no similar
implementation for French-Vietnamese MT.
This paper presents the implementation of the
generation module for Vietnamese in ITS3, a
multilingual MT system developed at the
Laboratoire d'Analyse et de Technologie du
Langage (LATL), University of Geneva.
Together with the generation module, we
construct bilingual lexicons, and thus obtain
prototypes of French-Vietnamese and English-
Vietnamese MT.
As Vietnamese is very different from European
languages, the implementation of the generation
module for Vietnamese based on the generic
mechanisms of ITS3 poses non-trivial problems.
We present here some main problems and their
solutions, such as the construction of
Vietnamese noun phrases (NPs), verb phrases
(VPs), adverbial phrases (AdvPs), relative
clauses, etc.
2 Brief description of ITS3
ITS3 (Wehrli, 1992; Etchegoyhen & Wehrli,
1998; L'haire & al, 2000) can now translate
from French to English and vice versa. Modules
for other languages such as German, Italian, are
under development. ITS3 is a principle-based
system, linguistically inspired by the
Government & Binding (GB) theory. (See eg.
Haegeman (1994) for an introduction to GB,
Berwick & al (1991) for principle-based
systems). The system chooses the classical
analysis-transfer-generation approach of MT
(see Hutchins & Sommers, 1992). ITS3 works
on single isolated sentences. A sentence in the
source language is analyzed into a logico-
linguistic structure, called pseudo-semantic
structure (PSS). After a lexical transfer phase,
this PSS is passed to the generation phase,
which finally produces the sentence in the target
language. By default, ITS3 gives a unique
solution, the best one.
Let's take an example of French-English
translation to illustrate the process. The analysis
phase consists of two steps: GB-based syntax
analysis and PSS construction. Syntax analysis
is carried out by the IPS parser (Wehrli, 1992),
which builds the X-bar structure of the sentence,
using many filtering constraints (on thematic
roles, on cases, etc.) to reduce overgeneration.
(1)
 
La maison a ?t? vendue.
(2)
 
[TP [DP la [NP maison]]i [T' a [VP ?t?
[VP vendue [DP ei]]]]]
A PSS is then derived from the syntax analysis
results (Etchegoyhen & Wehrli, 1998).
Components of the sentence are represented in
corresponding frame-liked structures. For
example, a clause gives rise to a PSS of type
CLS, which contains the main verb or adjective
(the Predicate slot) and other information on
tense, mood, voice, etc., as well as the PSS's of
its arguments and adjuncts (the Satellites).
Similarly, a noun phrase gives rise to a PSS of
type DPS, which contains, besides the main
noun (the Property slot), its number, gender,
referential index for binding resolution, etc. A
PSS thus contains abstract linguistic values for
"closed" features (tense, mood, voice, number,
gender, etc.), and lexical values for "open"
features (CLS Predicate, DPS Property, etc.).
PSS[{ }
   CLS[
      Mood           : real
      Tense          : E = S
      InfoFunction   : categorical
      Modality       : undefined
      Aspect         : (non
progressive, perfective)
      Voice          : passive
      Causative      : not causative
      Negation       : not negated
      Utterance type : declaration
      Predicate      : vendre
    ]CLS
   Satellites  {
      PSS[{ }
         Theta role       : theme
         DPS[
            Property         : maison
            Operator         : the
            Number           : singular
            Gender           : feminine
            Ref. index       : i
          ]DPS
       ]PSS
     }
 ]PSS
In the lexical transfer phase, the lexical units in
the PSS are replaced by those in the target
language, using frequency data for translation
selection. In the generation phase, a generic
engine called GBGEN (Etchegoyhen & Wehrle,
1998; Etchegoyhen & al, 1999) cooperates with
language-specific modules to construct the
output from the PSS in three steps. First, D-
structure generation maps the PSS into an X-bar
structure in a top-down fashion (see 3a). Next,
S-structure generation carries out movements
and bindings (3b). Finally, morphological
realization is done (3c), and the result is output,
as in (3d).
(3)
 
(a) [CP [TP [VP aux [VP aux [VP sell [DP
the [NP house]]i]]]]]
(b) [CP [TP [DP the [NP house]]i [T' [VP aux
[VP aux [VP sell [DP ei]]]]]]]
(c) [CP [TP [DP the [NP house]]i [T' [VP has
[VP been [VP sold [DP ei]]]]]]]
(d) The house has been sold.
Note that ITS3 does only lexical, and not
structural, transfer. This approach can therefore
be considered as half transfer half interlingual. It
is not the purpose of this paper to discuss the
pros and cons of the transfer and interlingual
approaches in MT. See eg. Gdaniec (1998) for
discussions about advantages of a particular
transfer-based MT system, and Dorr (1993) for
an interlingual one. The latter, also based on
GB, concentrates on treating mismatches across
languages, an issue less considered in ITS3. It
needs however to use very complex
representations for its interlingual approach,
hence is not likely to become a practical system.
As for the specification issue, ITS3 chooses to
be purely procedural. All generic engines and
language-specific modules are written in
Modula-2. Procedure templates are designed so
that one can fill in language-specific parameters
when adding a new language. However, this is
not always straightforward, as one will see in the
integration of Vietnamese below. In general, any
development requires to read, understand, and
often modify some parts of the huge code. This
is an important reason why a declarative
approach would be preferred (see eg. Emele &
al, 1992; Nicolov & Mellish, 2000).
Unfortunately, we do not have at our disposal
any declarative system with high-quality French
analysis. Also, as best as we know, there are no
parallel French-Vietnamese or English-
Vietnamese corpora built so far to think of
statistical or example-based MT approaches.
ITS3 is one among few systems that can do
French syntax analysis with large lexical and
grammatical coverage. It can therefore serve our
main purpose to develop a prototype of French-
Vietnamese MT in a short term.
3 Generation of Vietnamese
In this section, we present the problems and our
solutions for constructing Vietnamese NPs, VPs,
AdvPs, relative clauses, etc. in ITS3. Below we
will use generalized notions of NP and VP in
GB, that of DP and TP, respectively.
3.1 DP construction
3.1.1 Vietnamese noun categorizers
Many Vietnamese nouns have to be preceded by
a "categorizer" to form an NP. For example,
knowing that    	 
   	    , we
cannot translate "a cat" into   	 
   , but
 	 
 fiffffifl   
. Here "  " needs the
categorizer "con". A categorizer is also a noun,
giving some vague idea on the semantic class of
the noun which requires it. For example, almost
every noun designating an animal needs "con".
However, there seems to be no general rule to
determine the categorizer for a particular noun.
We therefore specify the categorizer for each
noun in the Vietnamese lexicon. This
information helps to form Vietnamese NPs
appropriately, eg. "a cat" gives rise to
(4)
 
[DP 	 
  [NP con [NP   ]]],
but "a language" to
(5)
 
[DP 	 
  [NP !  " ! $# % ]],
because " !  " ! $# %    needs no categorizer.
3.1.2 Plural DPs
One important task in DP construction for many
languages is to assure agreement (on number,
gender, etc.). Vietnamese words are
morphologically invariant with respect to all
these concepts. For plural DPs, we need to add
an appropriate determiner: a quantifier if it is
specified ("two students" = [DP & $')(+*),.-/'  &
0
'1 "
!232

 "some students" = [DP 0  +'4(+*),5-/'  &
0
'1 "
!232 ), or "  & # %! " otherwise ("(the) students"
= [DP  & # %!  [NP -/'  & 0 '1 " !232 ).
3.1.3 Determiners
GBGEN supposes a 1-1 mapping in which a
determiner in a language corresponds to a
universal operator and vice versa, eg.:
English French Operator
each chaque every
this, these ce, cette, ces demonstrative
no aucun, aucune no
"Ces chats", eg., is analyzed into a PSS like
(note the Operator slot):
DPS[
      Property         : chat
      Operator         : demonstrative
      Number           : plural
      Ref. index       :
]DPS
After "chat" is replaced by "cat", this gives [DP
these [NP cats]]. This model does not apply
totally to Vietnamese DPs. Some operators
correspond to a determiner as prescribed by the
model. Some do not, but require instead an
adjective after the noun, and some others need
both a determiner and an adjective.
Operator English/
French
Vietnamese
every each cat/
chaque
chat
   
	  

  
demonstrative
(singular)
this cat/
ce chat
  fffifl 
 ffi   "! #$ 
demonstrative
(plural)
these cats/
ces chats
   &%(' )
 "*  

+ , - 
 "! #$ 
no no cat/
aucun
chat
  .&%" /fi (*  

+ , - 
 "! #fi 
3.1.4 Strategy for Vietnamese DP construction
It turns out to be somewhat problematic to
construct Vietnamese DPs in the generic model
of GBGEN. First, the procedure template for
deriving the determiner from the DPS Operator
slot does not expect that there may be an
adjective after the noun. Modifying this
procedure template would lead to many
obligatory changes in modules for all other
languages of the system. Moreover, this would
not mean that the template be generic enough
for every human language. Second, the generic
model does not evidently foresee a facility for
treating Vietnamese categorizers. We therefore
found more convenient to develop a specialized1
procedure for Vietnamese DP construction. This
allows a safe treatment of Vietnamese DPs
while still respecting the available system.
This procedure computes the determiner and
post-nominal adjective from the Operator and
Number slots of the DPS. A DP is then projected
from the determiner. Its NP complement is built
from the main noun (the Property slot in the
DPS). If the noun needs a categorizer, which is
given in its lexical entry, the NP will be of
structure [NP Categorizer [NP Main]],
otherwise it will be only [NP Main]. Finally, the
post-nominal adjective is added as a
complement of the NP.
3.2 TP construction
The principal strategy of GBGEN for TP
construction is to create the following general
                                                     
1
 As understood in object-oriented paradigm.
frame, and attempt to fill it gradually with
appropriate elements:
[TP [T' Modal [VP Perfective [VP Passive [VP
Progresive [VP Main]]]]]]
where Modal, Perfective, Passive, and
Progressive stand for auxiliary verbs
representing respectively the modal, perfective,
passive, and progressive aspects of the TP, and
Main is the main verb. See example (3) above.
This model seems to work at least with French
and English. However, Vietnamese has many
differences from these languages on verbal
notions and on VP formation, as will be
presented in the following.
3.2.1 Tenses and aspects
In Vietnamese, verbs are not conjugated, and
tense and aspect are generally understood in
context. "He sleeps", "He slept", "He is
sleeping" eg., can all be translated in suitable
contexts into "02135467198;: < ". To explicit the tense
and aspect, Vietnamese uses some adverbs as
shown below.
He sleeps [TP [NP 9=?>A@fiB CEDF G
H
I JK
He slept [TP [NP 9=L>A@fi CED M;! )  G
H
I JK
He will sleep [TP [NP 9=N>A@fiO CED PRQ )  G
H
I JK
He is sleeping [TP [NP 9=S>A@fiT CED M;!U (*  G
H
I JK
He has slept [TP [NP 9=L>A@fi CED M;! )  G
H
I JK
There are some cases where it is difficult to have
a concise translation in Vietnamese, eg. "He has
been sleeping" may be translated into "0V13L46
W
6 XY198;: < " (past tense emphasized) or "0V13+46
W
69198ff198;: < " (progressive aspect emphasized)2.
We choose the one that seems preferable, eg. the
second sentence for this example.
                                                     
2
 It is impossible to say *"Z\[]_^ `ffia` bca`d[effi[efif g " or
*"Z\[]h^ `Ta`[eTad` b;[efif g ".
3.2.2 Negation and modality
The Negation slot of a CLS specifies whether it
is in negative form or not. The Modality slot
contains an abstract value for the modality of the
verb, eg. possibility corresponds to English
"can" and French "pouvoir", obligation to
"must" and "devoir". GBGEN foresees an
orthogonal combination of negation and
modality; it inserts "not" after the modal verb
for English, or "ne" and "pas" around it for
French. In Vietnamese, one generally adds the
adverb "    " before the verb to form a
negation.
	

    
	ffflfiffi


	 
   !#"%$ &('*)  
	ff,+
-../
fiffi


	0
    21#/3.4 56 
	ff
7
fiffi
.

	(8
   !#"%$ &('*)  21#/3.49  
	ff
7../
fiffi
.

Evidently, this orthogonal model will have
trouble in translation, because a modal verb in
negative form may have different logical
interpretations from one language to another.
For example, "must" = ":, ; ", " =<>ffi@? / fiffi  " =
"   :, ;   ", but
(10)
 
I must not run.
cannot be translated into "   !#"A$ &('*) :, ;
  ", which means "I don't have to run". The
right translation should be
	CBB@
   !#"%$ &('*) DEF G  
using another modal, " DEF G ".
At the moment, the specifications in the PSS
does not allow to determine the logical
interpretation of a negated modal verb. In
waiting for an improvement of GBGEN on this
issue, we implement a temporary solution which
helps to translate negative modal verbs from
English and French, specifically, to Vietnamese.
The appropriate Vietnamese negative modal
verb form is derived not only from the Modality
slot of the interested CLS, as done in GBGEN,
but also by examining its Negation slot.
3.2.3 Passive
Passivization is realized in Vietnamese by
adding " DEF G " or " HI " before the verb. " J%I " is
used when the subject suffers a bad effect from
the action, otherwise " DEF G " is used. We put
" DEF G " or " HI " in the specifier component of the
VP, ie. [Spec, VP]. The choice of " DEF G " or " HI "
for a verb is considered as a lexical one, and
stored in the Vietnamese lexicon.
(12)
 
Le chat a ?t? tu?. (The cat was killed.)
	CB@K
 L*MNLOPMRQ6
<
4 STUVL6WD X-LY#M Z[ LY\W
34 ]^/4 UUUU
(14)
 
Le livre a ?t? ?crit par John. (The book
was written by John.)
	CB@_
 L*M`LOPMba
ffi
4 5
?
31cU*L7VWD XflLY#M dfe#g h@i
LY\Wj@34 ]^/4.LM%M`HF ;kUUUUU
3.2.4 Translations of be/?tre
The lexical transfer procedure in ITS3 does not
take into account the interaction between the
components of the sentence when it translates
the lexical units in the PSS. In particular, the
English "be" is always translated into the French
"?tre", and vice versa. However, to translate
be/?tre into Vietnamese, one has to distinguish
between at least three cases3.
He is a student lnmoqpffrts2uVv#s2wnx y{z | s2}nx~?? ?Gp
??
mo>?
?ff? ?
m ]]]
He is intelligent lnmoNpffr?s2uVvns2wnx ??T??ff? s2lnx
p{o*?
?
m? ~
?
mo.?C??
 ( /3*?  is
optional.)
This flag is of
this country
?
r ?=?? ??m*r ??bs2u6vs2wnx ??C????fly{z |
???T???y{z |? s2x?x??? ?r?m?? ??
m*r ?G???C? (Here /3*? ? ?  S  or even
/3*??? 
?
 are all possible and
optional.)
For the first case, it suffices to test the theta role
of the complement of the verb in the PSS, which
should be THEME, to have the right translation
" ?  S ". In the last two cases, whether using " /3*? "
or " ?  S " ??%m ?? p{o ? ? is too delicate to explain, as it
concerns pragmatic issues. We decide to put
                                                     
3
 We ignored to treat, eg., the case of be + infinitive
("He is to do it", "?????? ? ???*?? ? ? ? ?c?b?7? ? ??fl?@? ? ").
"(   )" for the second case where the
complement is an AP, and "(   /   	 " for all other
cases.
3.2.5 Strategy for Vietnamese TP construction
From the discussion above, it seems not very
natural to follow the construction order of
GBGEN in building Vietnamese TPs, neither to
reuse some of its pre-designed procedure
templates, such as selecting auxiliary verbs. We
need rather to implement a different strategy. At
first, a simple frame [TP [T' [VP ...]]] is built as
D-structure. Verbal information, such as tense,
aspect, modality, negation, is gathered from the
PSS as much as possible. The complete TP is
then constructed based on the combination of
gathered information, and in an order particular
to Vietnamese. The adverb representing the
tense/aspect of the clause, if exists, will occupy
the head position of the TP. The modal, passive,
and main verb make up layers of VPs in the TP.
Values of negation and modal are computed
together. The maximal frame looks like:
[TP [T' Tense [VP Negation [V' Modal [VP
Passive [V' Main]]]]]]
For example, for the sentence
(16)
 
Il n'a pas pu ?tre tu?. (He could not be
killed.)
the past tense gives " 
  ", the negation and the
modality combine and give "     "4, and
the passive gives "  " by consulting the lexical
entry of the verb " fiff flffi  ":
	 fi!
  "$#%&"(')%+*,- ./$ff0"1#32(
 ,"546%7"548295 
  :"546%;6"5482<fiff flffi fi5ff /9/9/9/9/9/
In particular, if the main verb is a translation of
be/?tre (checked with a bit in the lexical entry),
its complements will be examined to give the
right translation.
                                                     
4
 " =9>@? ACB5DFE >@G H " is a concise and more frequent form of
" =9>@? ACB5D I ? JE >@G H " (see example (9)).
3.3 Other constructions
3.3.1 AdvP location
In ITS3, a large set of adverbs and, more
generally, adverbial phrases (AdvPs) are
classified into semantic groups, specified by a
value. For example, English "much" and French
"beaucoup" are assigned the abstract value
degree. GBGEN uses this information to locate
the generated AdvP in an appropriate position.
This generic approach is not perfect. For
example, the equivalent adverbs "where"
(English), "o?" (French), and " K LM
 (N "
(Vietnamese) all have the where value, and
would be moved to [Spec, CP] of the
subordinate clause. This would give a bad
Vietnamese sentence (20). The correct one is
(21).
(18)
 
I know [CP [AdvP where]i [C' [TP he
[T' [VP sleeps [AdvP ei]]]]]].
(19)
 
Je sais [CP [AdvP o?]i [C' [TP il [T'
[VP dort [AdvP ei]]]]]].
POQ
  R1#fi (ffSff flffi 
[CP [AdvP TVU3WX YffiZ ]i [C' [TP
[ .
[T' [VP 
fiN L
[AdvP ei]]]]]] \
POfi 
  #fi (ff]ff flffi  "$#% ^ . "$#32$"546% fiN L "V*,_`$%
T	U@WX YffiZ
/9/(/9/
\
This example shows that AdvP location should
be language-specific and lexicalized. The
generic procedure is in fact just a specialized
one valid for some class of languages. It is not
difficult here to imitate it for a treatment of
AdvP location specific to Vietnamese.
3.3.2 Negative words
Translating structures with negative words, such
as "jamais" = "never" = " 5 abfiff.K @c ,
"rien" = "nothing" = " 5 ed1fPfffid1 L1c , etc. into
Vietnamese is problematic. A straightforward
application of the generic engine might yield
exactly the opposite meaning, eg.:
(22)
 
Je / ne dors jamais. (I never sleep.)
POg
  R #fi (ff hi5  j k0lnm
YCop;qX
m
p6rVT s
fiN L
\
Pt
 uff v
 fi  
t
$`55w:v$<x
\

                                                     
5
 We recall that in Vietnamese the adverb " =9>@? ACB5D " is
inserted before the verb to form a negation.
The right sentence should be
 
  	
  ffflfiffi  !" #%$
The same problem was known in French-
English translation, and cured in GBGEN by
realizing the English sentence not in negative
but in affirmative form. This solution does not
work for Vietnamese:
(25) Je / n'?cris rien. (I write nothing.)
(26) *  	
'&()
+* ,.-  fl/10'2 ff3540687 .
(27) Tu / ne dois jamais / courir trop vite.
(You must never run too fast.)
(28) *9: /;<& =>;3? #fl
 @ A/<ffflfiffi & B';3? CEDGF")?+H
 /;3? /; $
The right translations for (25) and (27) should
be, respectively:
 /I3
  	
J& @  ()
+* ,.- 0'2 ffK54<0'L7 . (I do not
write anything.)
 MNO
 9: /; & @ P/Gfffiffi QROS CTB & B';3? CEDUF")?+H
 /;3? /; $
 'V
QROS CTB
V

 WU")W6*6XY
  W6-Z*6?X[]\
V
=>;3? #fl

V
$_^*T*
M
$

$
 `
Our solution here is to keep the verb in the
negative form, and use the "indefinite"
counterparts " a ?/b!
S c
V d
" B6?+H
e!f:B6? #
V
, etc. of the
expressions " g ; 	L ! a ?/h!
S c
V d
" g ; 	L !iB6?+H
/!fB6? #
V
,
etc6. The structure of eg. the translation (24) is
thus
 Mj)
 k'l  	
 k'em8konl  fl/ konl _ffflfiffi konpm
 !" #%qEqEqqEqEr
where " g ; 	L !
V
and " a ?/!
S c V  are two different
constituents. Note however that this solution
gives a less good but still acceptable translation
of (27), that of V 9: /;
g
; 	L !QROS CTB sffflfiffi B';3? CED
F")?+Ht /;3? /;
V
. We could have done better, but at
the cost of much more complicated
programming.
                                                     
6
 Just as "anything" to "nothing" in English.
3.3.3
 
Wh-movements
Vietnamese wh-questions do not need a wh-
movement as in English:
(32) Whom have you seen ?
(33) 9: /;uQ? vt-+;3? ,wD ff x ("whom"="ai")
We therefore block the wh-movement procedure
in GBGEN in constructing wh-questions.
However, there is a case where a movement is
preferred and realized, that of why7.
(34) Pourquoi il ne dort pas ? (Why doesn't
he sleep?)
(35) 9: /;y-?
g
; 	L !  !" # z% {|ff~} x
(Acceptable)
 MO
 ? {|ff}E ? /;<-?
g
; 	L !  !" #px  (Preferred)
3.3.4
 
Relative clauses
To form a relative clause in Vietnamese, one can
generally add an optional complementizer " ? ? c "
before the clause. We decide to put "   ? ? c  " for
subject relative clauses, and " ? ? c " for object
relative clauses, as it is more acceptable to drop
" ? ? c " in the former case than in the latter.
(37) The student / who has seen the cat / is
John.
 M?O
 ?K!ROS c8
5W'
  /;G()
+* 	L <&_kT?tl[kT?um
 
?
? c

k6l?Q? v
-+;3? ,wDuB'3 
?
* c]3qEqEq>&e? ? c>?o;3 /$ ?
(39) The student / whom you see / is John.
 NO
 ?K!ROS c8
@W'
  /;1()
+* 	L i&?kT?tlPkT?um
?
? c?k6lP? /;
-+;3? ,wD)qEqEq>&e? ? c>?o;3 /$
The translation of adjunct relative clauses which
begin with a preposition from French or English
into Vietnamese is difficult. In general, we need
to keep the preposition at the end of the relative
clause, rather than move it to the beginning as
GBGEN proposes:
(41) La fille / avec qui John parle / est Mary.
(42) The girl / with whom John talks / is
Mary.
                                                     
7
 This is done by the AdvP location procedure (see
section 3.3.1).
8
 If " ?:? ? " is dropped, it is a sort of garden-path
sentence. But this is common in Vietnamese, and
may be an interesting subject to study.
 
  	
 fffiflffi "!$#% &' (')+* , .-  
/
102#43
  5
fi6%$ffi
58759
:
5;75
6$<fl
5>=
5 ?
10'-%0
5;75
:fl1- @
5;75
fifl"ffi "!$#% &'
5
3

At the moment, we cannot deal with cases where
a paraphrase is needed for a correct translation.
Knowing that "without"=" @ 	A
Bffi fl ",
(44)
 
The girl / without whom John cannot
work / is Mary.
 C
 D  	E
1F GH@ 	A
I:fi% J-  KL6M% &Nffi
OQPSR T>U"VXWMR
-  
/
"02#43
 "Y4
  	Z
4[ "% \]!^@ 	A
_ffi fl
 
ffi  	Z \K#


@ 	A
B:fi% J[-  K`6M% &Nffia-  
/
102#43
(The girl / that if she is not there, John
cannot work / is Mary.)
4 Results
The implemented generation module for
Vietnamese can realize almost all structures that
can be generated from the intermediate PSSs.
Many of them are of course not yet perfect, but a
French-Vietnamese translation test on a sample
of French sentences of many different syntactic
structures gave encouraging results. We did not
consider tests on English-Vietnamese
translation, because the English analysis module
in ITS3 has not yet been well developed.
We have not been able to do a large-scale test on
real corpora yet, because our lexicons are still
small (about 400 entries for each bilingual
lexicon, among them many functional words
(prepositions, adverbs, pronouns, conjunctions)).
However, tests are not necessarily restricted by
the size of the lexicons, because if a source
language word is not found in the bilingual
lexicon, it is still retained in the PSS during the
lexical transfer phase. This word will then
appear in the target language sentence exactly at
the position of its supposed translation.
As it is well known, lexicon building requires
huge investments on human work and time. One
can use methods of (semi-)automatic acquisition
of dictionary resources (see eg., Doan-Nguyen,
1998) to obtain quickly a large draft of
necessary lexicons, provided that such resources
(eg. a French-Vietnamese dictionary text file)
exist. In the worst case, a human will verify and
complete this draft, but in general this is still
much cheaper than developing a lexicon from
scratch. We did not, unfortunately, have any of
these resources. Nevertheless, we profited much
from a French-English lexicon draft extracted
from ITS3's lexicons: much lexical information
in its entries can be reused in the corresponding
Vietnamese entries (eg. the part-of-speech, the
verb theta grid). Moreover, English translations
of a French word, as well as French translations
of an English word, help to choose correct
corresponding Vietnamese translations.
5 Discussion
Although not totally perfect, ITS3, and in
particular GBGEN, show to be good systems for
multilingual MT. They have a solid linguistic
theoretical base, a modular computational
design, and a surprising performance. Besides
the problems presented in this paper, we find
convenient to use many available procedure
templates, such as PP construction, movements
and bindings. In particular, ITS3 is able to do
robust, high-quality, and broad-coverage
syntactic analysis for French. Our experience
can be seen as a test on integrating an "exotic"
language into the sytem.
As we have shown above, many difficulties in
implementing the generation module for
Vietnamese stem from "mismatches" between
Vietnamese grammatical notions and the model
of the generic engine GBGEN. It is largely
agreed that designing a generic, flexible, and
efficient system for pratical applications of
multilingual generation and MT is a very
difficult problem. Our experience suggests that
in a principle-based generation system such as
GBGEN, the parameterized modules, which
contain language-specific and lexicalized
properties, should be of more importance. The
flexibility of a generic system consists in
designing good "slots" so that modules for a
new language can be plugged in systematically
and conveniently.
As discussed in section 2, a declarative approach
may be very beneficial for system development,
including genericity and flexibility. The
programming paradigm is also an important
factor. The LATL has recently begun to
reengineer ITS3 in an object-oriented language,
which facilitates the development of the system
while still guanratees its performance9.
Apart from the generation phase, the quality of
an MT system depends heavily on the analysis
modules. The construction of the PSS from the
syntactic analysis of the input sentence is of
crucial importance. We find that this is a real
bottleneck in ITS3: in many cases, despite a
good syntactic analysis, the translation fails
because of a bad PSS construction. PSS
construction is obviously a very difficult task, as
it is in fact a kind of translation, that goes from a
syntactic structure into a logical formalism. See
eg. Alshawi (1992) for a similar task, ie.
translating English sentences into a logical
representation.
6 Conclusions
With the Vietnamese generation module and the
lexicons developed, we have implemented first
prototypes of French-Vietnamese and English-
Vietnamese MT. As we know best, this is the
first time a French-Vietnamese MT prototype is
realized.
Our future work is to develop the lexicons,
improve the implemented module, and test it on
real corpora for a more precise evaluation. We
also envisage doing Vietnamese GB-based
analysis in the framework of ITS3.
Acknowledgements
I am grateful to the Agence Universitaire de la
Francophonie whose scholarship allowed me to
carry out this project. This research has also
been supported by the Social Sciences and
Humanities Research Council of Canada (grant
# 412-97-0016), for the "Asymmetry and
Natural Language Processing Project", awarded
to professor Anne-Marie Di Sciullo, in the
D?partement de Linguistique at Universit? du
Qu?bec ? Montr?al (UQAM). Eric Wehrli,
Thierry Etchegoyhen, Luka Nerima, Anne
Vandeventer, and all members of LATL,
reserved for me precious help and friendship
during my work in Geneva. I would like also to
thank Eric Wehrli, Nicolas Nicolov, Nikolay
Vazov, and the EWNLG-01 reviewers for
                                                     
9
 Eric Wehrli, personal communication.
helpful comments on earlier versions of this
paper, and finally, Anne-Marie Di Sciullo for
her support to this research.
References
Berwick R., Abney S., & Tenny C., editors (1991)
Principle-Based Parsing: Computation and
Psycholinguistics. Kluwer Academic Publishers.
Alshawi, H. (1992) The Core Language Engine. MIT
Press.
Doan-Nguyen H. (1993) The English-Vietnamese
Translation Machine-88. Proceedings of
HoChiMinh City Mathematics Consortium -1993,
HoChiMinh City, pp. 217-222.
Doan-Nguyen H. (1998) Accumulation of Lexical
Sets: Acquisition of Dictionary Resources and
Production of New Lexical Sets. Proceedings of
the 17th International Conference on
Computational Linguistics and 36th Annual
Meeting of the Association for Computational
Linguistics, COLING-ACL '98, Montreal, pp 330-
335.
Dorr B. (1993) Interlingual Machine Translation: A
Parameterized Approach. Artificial Intelligence,
Vol. 63, N. 1-2, pp. 429-492.
Emele M., Heid U., Moma S. & Zajac R. (1992)
Interactions between Linguistic Constraints:
Procedural vs. Declarative Approaches. Machine
Translation, Vol. 7, N. 1-2, pp. 61-98.
Etchegoyhen T. & Wehrli E. (1998) Traduction
automatique et structures d'interface. Actes de la
Conf?rence sur le Traitement Automatique du
Langage Naturel, TALN '98, Paris.
Etchegoyhen T. & Wehrle, T. (1998) Overview of
GBGen. Proceedings of the 9th International
Workshop on Natural Language Generation,
Niagara-on-the-lake, Canada.
Etchegoyhen T., Wehrle T., Mengon J. &
Vandeventer A. (1999) Une approche efficace ? la
g?n?ration syntaxique. Le syst?me GBGen. Actes
du 2?me colloque francophone sur la G?n?ration
Automatique de Textes, GAT '99, Grenoble.
Gdaniec C. (1998) Lexical Choice and Syntactic
Generation in a Transfer System: Transformations
in the New LMT English-German System. In
Farwell D. & al (ed.) Machine Translation and the
Information Soup, Third Conference of the
Association for Machine Translation in the
Americas, AMTA '98, Langhorne, PA, USA, pp.
408-420.
Haegeman L. (1994) Introduction to Government &
Binding Theory, 2nd Edition. Blackwell, Oxford
(UK) and Cambridge (USA), 701 p.
Hutchins J. & Sommers L. (1992) An Introduction to
Machine Translation. Academic Press, London.
L'haire S., Mengon J. & Laenzlinger C. (2000) Outils
g?n?riques et transfert hybride pour la traduction
automatique sur Internet. Actes de la Conf?rence
sur le Traitement Automatique du Langage
Naturel, TALN '2000, Lausanne.
Nicolov N. & Mellish C. (2000) PROTECTOR:
Efficient Generation with Lexicalized Grammars.
Recent Advances in Natural Language Processing,
John Benjamins, pp. 221-243.
Wehrli, E. (1992) The IPS system. Proceedings of the
14th International Conference on Computational
Linguistics, COLING '92, Nantes, pp. 870-874.
