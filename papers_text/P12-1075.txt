Proceedings of the 50th Annual Meeting of the Association for Computational Linguistics, pages 712?720,
Jeju, Republic of Korea, 8-14 July 2012. c?2012 Association for Computational Linguistics
Unsupervised Relation Discovery with Sense Disambiguation
Limin Yao Sebastian Riedel Andrew McCallum
Department of Computer Science
University of Massachusetts, Amherst
{lmyao,riedel,mccallum}@cs.umass.edu
Abstract
To discover relation types from text, most
methods cluster shallow or syntactic patterns
of relation mentions, but consider only one
possible sense per pattern. In practice this
assumption is often violated. In this paper
we overcome this issue by inducing clusters
of pattern senses from feature representations
of patterns. In particular, we employ a topic
model to partition entity pairs associated with
patterns into sense clusters using local and
global features. We merge these sense clus-
ters into semantic relations using hierarchical
agglomerative clustering. We compare against
several baselines: a generative latent-variable
model, a clustering method that does not dis-
ambiguate between path senses, and our own
approach but with only local features. Exper-
imental results show our proposed approach
discovers dramatically more accurate clusters
than models without sense disambiguation,
and that incorporating global features, such as
the document theme, is crucial.
1 Introduction
Relation extraction (RE) is the task of determin-
ing semantic relations between entities mentioned in
text. RE is an essential part of information extraction
and is useful for question answering (Ravichandran
and Hovy, 2002), textual entailment (Szpektor et al,
2004) and many other applications.
A common approach to RE is to assume that rela-
tions to be extracted are part of a predefined ontol-
ogy. For example, the relations are given in knowl-
edge bases such as Freebase (Bollacker et al, 2008)
or DBpedia (Bizer et al, 2009). However, in many
applications, ontologies do not yet exist or have low
coverage. Even when they do exist, their mainte-
nance and extension are considered to be a substan-
tial bottleneck. This has led to considerable inter-
est in unsupervised relation discovery (Hasegawa et
al., 2004; Banko and Etzioni, 2008; Lin and Pantel,
2001; Bollegala et al, 2010; Yao et al, 2011). Here,
the relation extractor simultaneously discovers facts
expressed in natural language, and the ontology into
which they are assigned.
Many relation discovery methods rely exclusively
on the notion of either shallow or syntactic patterns
that appear between two named entities (Bollegala et
al., 2010; Lin and Pantel, 2001). Such patterns could
be sequences of lemmas and Part-of-Speech tags, or
lexicalized dependency paths. Generally speaking,
relation discovery attempts to cluster such patterns
into sets of equivalent or similar meaning. Whether
we use sequences or dependency paths, we will en-
counter the problem of polysemy. For example, a
pattern such as ?A beat B? can mean that person A
wins over B in competing for a political position,
as pair ?(Hillary Rodham Clinton, Jonathan Tasini)?
in ?Sen Hillary Rodham Clinton beats rival Jonathan
Tasini for Senate.? It can also indicate that an athlete
A beat B in a sports match, as pair ?(Dmitry Tur-
sunov, Andy Roddick)? in ?Dmitry Tursunov beat
the best American player Andy Roddick.? More-
over, it can mean ?physically beat? as pair ?(Mr.
Harris, Mr. Simon)? in ?On Sept. 7, 1999, Mr. Har-
ris fatally beat Mr. Simon.? This is known as poly-
semy. If we work with patterns alone, our extractor
will not be able to differentiate between these cases.
Most previous approaches do not explicitly ad-
dress this problem. Lin and Pantel (2001) assumes
only one sense per path. In (Pantel et al, 2007),
they augment each relation with its selectional pref-
712
erences, i.e. fine-grained entity types of two ar-
guments, to handle polysemy. However, such fine
grained entity types come at a high cost. It is difficult
to discover a high-quality set of fine-grained entity
types due to unknown criteria for developing such
a set. In particular, the optimal granularity of en-
tity types depends on the particular pattern we con-
sider. For example, a pattern like ?A beat B? could
refer to A winning a sports competition against B, or
a political election. To differentiate between these
senses we need types such as ?Politician? or ?Ath-
lete?. However, for ?A, the parent of B? we only
need to distinguish between persons and organiza-
tions (for the case of the sub-organization relation).
In addition, there are senses that just cannot be de-
termined by entity types alone: Take the meaning
of ?A beat B? where A and B are both persons; this
could mean A physically beats B, or it could mean
that A defeated B in a competition.
In this paper we address the problem of polysemy,
while we circumvent the problem of finding fine-
grained entity types. Instead of mapping entities to
fine-grained types, we directly induce pattern senses
by clustering feature representations of pattern con-
texts, i.e. the entity pairs associated with a pattern.
This allows us to employ not only local features such
as words, but also global features such as the docu-
ment and sentence themes.
To cluster the entity pairs of a single relation pat-
tern into senses, we develop a simple extension to
Latent Dirichlet Allocation (Blei et al, 2003). Once
we have our pattern senses, we merge them into
clusters of different patterns with a similar sense.
We employ hierarchical agglomerative clustering
with a similarity metric that considers features such
as the entity arguments, and the document and sen-
tence themes.
We perform experiments on New York Times ar-
ticles and consider lexicalized dependency paths as
patterns in our data. In the following we shall use
the term path and pattern exchangeably. We com-
pare our approach with several baseline systems, in-
cluding a generative model approach, a clustering
method that does not disambiguate between senses,
and our approach with different features. We per-
form both automatic and manual evaluations. For
automatic evaluation, we use relation instances in
Freebase as ground truth, and employ two clustering
metrics, pairwise F-score and B3 (as used in cofer-
ence). Experimental results show that our approach
improves over the baselines, and that using global
features achieves better performance than using en-
tity type based features. For manual evaluation, we
employ a set intrusion method (Chang et al, 2009).
The results also show that our approach discovers re-
lation clusters that human evaluators find coherent.
2 Our Approach
We induce pattern senses by clustering the entity
pairs associated with a pattern, and discover seman-
tic relations by clustering these sense clusters. We
represent each pattern as a list of entity pairs and
employ a topic model to partition them into different
sense clusters using local and global features. We
take each sense cluster of a pattern as an atomic clus-
ter, and use hierarchical agglomerative clustering to
organize them into semantic relations. Therefore, a
semantic relation comprises a set of sense clusters of
patterns. Note that one pattern can fall into different
semantic relations when it has multiple senses.
2.1 Sense Disambiguation
In this section, we discuss the details of how we dis-
cover senses of a pattern. For each pattern, we form
a clustering task by collecting all entity pairs the pat-
tern connects. Our goal is to partition these entity
pairs into sense clusters. We represent each pair by
the following features.
Entity names: We use the surface string of the en-
tity pair as features. For example, for pattern ?A play
B?, pairs which contain B argument ?Mozart? could
be in one sense, whereas pairs which have ?Mets?
could be in another sense.
Words: The words between and around the two
entity arguments can disambiguate the sense of a
path. For example, ?A?s parent company B? is dif-
ferent from ?A?s largest company B? although they
share the same path ?A?s company B?. The former
describes the sub-organization relationship between
two companies, while the latter describes B as the
largest company in a location A. The two words to
the left of the source argument, and to the right of the
destination argument also help sense discovery. For
example, in ?Mazurkas played by Anna Kijanowska,
pianist?, ?pianist? tells us pattern ?A played by B?
713
takes the ?music? sense.
Document theme: Sometimes, the same pattern
can express different relations in different docu-
ments, depending on the document?s theme. For
instance, in a document about politics, ?A defeated
B? is perhaps about a politician that won an elec-
tion against another politician. While in a document
about sports, it could be a team that won against an-
other team in a game, or an athlete that defeated an-
other athlete. In our experiments, we use the meta-
descriptors of a document as side information and
train a standard LDA model to find the theme of a
document. See Section 3.1 for details.
Sentence theme: A document may cover several
themes. Moreover, sometimes the theme of a doc-
ument is too general to disambiguate senses. We
therefore also extract the theme of a sentence as a
feature. Details are in 3.1.
We call entity name and word features local, and
the two theme features global.
We employ a topic model to discover senses for
each path. Each path pi forms a document, and it
contains a list of entity pairs co-occurring with the
path in the tuples. Each entity pair is represented
by a list of features fk as we described. For each
path, we draw a multinomial distribution ? over top-
ics/senses. For each feature of an entity pair, we
draw a topic/sense from ?pi . Formally, the gener-
ative process is as follows:
?pi ? Dirichlet(?)
?z ? Dirichlet(?)
ze ? Multinomial(?pi)
fk ? Multinomial(?ze)
Assume we have m paths and l entity pairs for each
path. We denote each entity pair of a path as e(pi) =
(f1, . . . , fn). Hence we have:
P (e1(pi), e2(pi), . . . , el(pi)|z1, z2, . . . , zl)
=
l?
j=1
n?
k=1
p(fk|zj)p(zj)
We assume the features are conditionally indepen-
dent given the topic assignments. Each feature is
generated from a multinomial distribution ?. We
use Dirichlet priors on ? and ?. Figure 1 shows the
graphical representation of this model.
S
p
?
e(p)
f
?
?
z
?
n
Figure 1: Sense-LDA model.
This model is a minor variation on standard LDA
and the difference is that instead of drawing an ob-
servation from a hidden topic variable, we draw
multiple observations from a hidden topic variable.
Gibbs sampling is used for inference. After infer-
ence, each entity pair of a path is assigned to one
topic. One topic is one sense. Entity pairs which
share the same topic assignments form one sense
cluster.
2.2 Hierarchical Agglomerative Clustering
After discovering sense clusters of paths, we employ
hierarchical agglomerative clustering (HAC) to dis-
cover semantic relations from these sense clusters.
We apply the complete linkage strategy and take co-
sine similarity as the distance function. The cutting
threshold is set to 0.1.
We represent each sense cluster as one vector by
summing up features from each entity pair in the
cluster. The weight of a feature indicates how many
entity pairs in the cluster have the feature. Some
features may get larger weights and dominate the co-
sine similarity. We down-weigh these features. For
example, we use binary features for word ?defeat?
in sense clusters of pattern ?A defeat B?. The two
theme features are extracted from generative mod-
els, and each is a topic number.
Our approach produces sense clusters for each
path and semantic relation clusters of the whole data.
Table 1 and 2 show some example output.
3 Experiments
We carry out experiments on New York Times ar-
ticles from years 2000 to 2007 (Sandhaus, 2008).
Following (Yao et al, 2011), we filter out noisy doc-
uments and use natural language packages to anno-
tate the documents, including NER tagging (Finkel
et al, 2005) and dependency parsing (Nivre et al,
2004). We extract dependency paths for each pair of
named entities in one sentence. We use their lemmas
714
Path 20:sports 30:entertainment 25:music/art
A play B
Americans, Ireland Jean-Pierre Bacri, Jacques Daniel Barenboim, recital of Mozart
Yankees, Angels Rita Benton, Gay Head Dance Mr. Rose, Ballade
Ecuador, England Jeanie, Scrabble Gil Shaham, Violin Romance
Redskins, Detroit Meryl Streep, Leilah Ms. Golabek, Steinways
Red Bulls, F.C. Barcelona Kevin Kline, Douglas Fairbanks Bruce Springsteen, Saints
doc theme sports music books television music theater
sen theme game yankees theater production book film show music reviews opera
lexical words beat victory num-num won played plays directed artistic director conducted production
entity names - r:theater r:theater r:hall r:york l:opera
Table 1: Example sense clusters produced by sense disambiguation. For each sense, we randomly sample 5 entity
pairs. We also show top features for each sense. Each row shows one feature type, where ?num? stands for digital
numbers, and prefix ?l:? for source argument, prefix ?r:? for destination argument. Some features overlap with each
other. We manually label each sense for easy understanding. We can see the last two senses are close to each other.
For two theme features, we replace the theme number with the top words. For example, the document theme of the
first sense is Topic30, and Topic30 has top words ?sports?.
relation paths
entertainment A, who play B:30; A play B:30; star A as B:30
sports
lead A to victory over B:20; A play to B:20; A play B:20; A?s loss to B:20; A beat B:20; A trail B:20;
A face B:26; A hold B:26; A play B:26; A acquire (X) from B:26; A send (X) to B:26;
politics
A nominate B:39; A name B:39; A select B:39; A name B:42; A select B:42;
A ask B:42; A choose B:42; A nominate B:42; A turn to B:42;
law A charge B:39; A file against B:39; A accuse B:39; A sue B:39
Table 2: Example semantic relation clusters produced by our approach. For each cluster, we list the top paths in it,
and each is followed by ?:number?, indicating its sense obtained from sense disambiguation. They are ranked by the
number of entity pairs they take. The column on the left shows sense of each relation. They are added manually by
looking at the sense numbers associated with each path.
for words on the dependency paths. Each entity pair
and the dependency path which connects them form
a tuple.
We filter out paths which occur fewer than 200
times and use some heuristic rules to filter out paths
which are unlikely to represent a relation, for exam-
ple, paths in with both arguments take the syntac-
tic role ?dobj? (direct objective) in the dependency
path. In such cases both arguments are often part
of a coordination structure, and it is unlikely that
they are related. In summary, we collect about one
million tuples, 1300 patterns and half million named
entities. In terms of named entities, the data is very
sparse. On average one named entity occurs four
times.
3.1 Feature Extraction
For the entity name features, we split each entity
string of a tuple into tokens. Each token is a fea-
ture. The source argument tokens are augmented
with prefix ?l:?, and the destination argument tokens
with prefix ?r:?. We use tokens to encourage overlap
between different entities.
For the word features, we extract all the words be-
tween the two arguments, removing stopwords and
the words with capital letters. Words with capital
letters are usually named entities, and they do not
tend to indicate relations. We also extract neigh-
boring words of source and destination arguments.
The two words to the left of the source argument are
added with prefix ?lc:?. Similarly the two words to
the right of the destination arguments are added with
prefix ?rc:?.
Each document in the NYT corpus is associated
with many descriptors, indicating the topic of the
document. For example, some documents are la-
beled as ?Sports?, ?Dallas Cowboys?, ?New York
Giants?, ?Pro Football? and so on. Some are labeled
715
as ?Politics and Government?, and ?Elections?. We
shall extract a theme feature for each document from
these descriptors. To this end we interpret the de-
scriptors as words in documents, and train a standard
LDA model based on these documents. We pick the
most frequent topic as the theme of a document.
We also train a standard LDA model to obtain
the theme of a sentence. We use a bag-of-words
representation for a document and ignore sentences
from which we do not extract any tuples. The LDA
model assigns each word to a topic. We count the
occurrences of all topics in one sentence and pick
the most frequent one as its theme. This feature
captures the intuition that different words can indi-
cate the same sense, for example, ?film??, ?show?,
?series? and ?television? are about ?entertainment?,
while ?coach?, ?game?, ?jets?, ?giants? and ?sea-
son? are about ?sports?.
3.2 Sense clusters and relation clusters
For the sense disambiguation model, we set the
number of topics (senses) to 50. We experimented
with other numbers, but this setting yielded the best
results based on our automatic evaluation measures.
Note that a path has a multinomial distribution over
50 senses but only a few senses have non-zero prob-
abilities.
We look at some sense clusters of paths. For
path ?A play B?, we examine the top three senses,
as shown in Table 1. The last two senses ?enter-
tainment? and ?music? are close. Randomly sam-
pling some entity pairs from each of them, we find
that the two sense clusters are precise. Only 1% of
pairs from the sense cluster ?entertainment? should
be assigned to the ?music? sense. For the path ?play
A in B? we discover two senses which take the
most probabilities: ?sports? and ?art?. Both clus-
ters are precise. However, the ?sports? sense may
still be split into more fine-grained sense clusters. In
?sports?, 67% pairs mean ?play another team in a
location? while 33% mean ?play another team in a
game?.
We also closely investigate some relation clusters,
shown in Table 2. Both the first and second relation
contain path ?A play B? but with different senses.
For the second relation, most paths state ?play? re-
lations between two teams, while a few of them
express relations of teams acquiring players from
other teams. For example, the entity pair ?(Atlanta
Hawks, Dallas Mavericks)? mentioned in sentence
?The Atlanta Hawks acquired point guard Anthony
Johnson from the Dallas Mavericks.? This is due to
that they share many entity pairs of team-team.
3.3 Baselines
We compare our approach against several baseline
systems, including a generative model approach and
variations of our own approach.
Rel-LDA: Generative models have been suc-
cessfully applied to unsupervised relation extrac-
tion (Rink and Harabagiu, 2011; Yao et al, 2011).
We compare against one such model: An extension
to standard LDA that falls into the framework pre-
sented by Yao et al (2011). Each document con-
sists of a list of tuples. Each tuple is represented by
features of the entity pair, as listed in 2.1, and the
path. For each document, we draw a multinomial
distribution over relations. For each tuple, we draw
a relation topic and independently generate all the
features. The intuition is that each document dis-
cusses one domain, and has a particular distribution
over relations.
In our experiments, we test different numbers of
relation topics. As the number goes up, precision in-
creases whereas recall drops. We report results with
300 and 1000 relation topics.
One sense per path (HAC): This system uses
only hierarchical clustering to discover relations,
skipping sense disambiguation. This is similar to
DIRT (Lin and Pantel, 2001). In DIRT, each path
is represented by its entity arguments. DIRT cal-
culates distributional similarities between different
paths to find paths which bear the same semantic re-
lation. It does not employ global topic model fea-
tures extracted from documents and sentences.
Local: This system uses our approach (both sense
clustering with topic models and hierarchical clus-
tering), but without global features.
Local+Type This system adds entity type features to
the previous system. This allows us to compare per-
formance of using global features against entity type
features. To determine entity types, we link named
entities to Wikipedia pages using the Wikifier (Rati-
nov et al, 2011) package and extract categories from
the Wikipedia page. Generally Wikipedia provides
many types for one entity. For example, ?Mozart? is
716
a person, musician, pianist, composer, and catholic.
As we argued in Section 1, it is difficult to determine
the right granularity of the entity types to use. In our
experiments, we use all of them as features. In hier-
archical clustering, for each sense cluster of a path,
we pick the most frequent entity type as a feature.
This approach can be seen as a proxy to ISP (Pantel
et al, 2007), since selectional preferences are one
way of distinguishing multiple senses of a path.
Our Approach+Type This system adds Wikipedia
entity type features to our approach. The Wikipedia
feature is the same as used in the previous system.
4 Evaluations
4.1 Automatic Evaluation against Freebase
We evaluate relation clusters discovered by all ap-
proaches against Freebase. Freebase comprises a
large collection of entities and relations which come
from varieties of data sources, including Wikipedia
infoboxes. Many users also contribute to Freebase
by annotating relation instances. We use coreference
evaluation metrics: pairwise F-score and B3 (Bagga
and Baldwin, 1998). Pairwise metrics measure how
often two tuples which are clustered in one seman-
tic relation are labeled with the same Freebase label.
We evaluate approximately 10,000 tuples which oc-
cur in both our data and Freebase. Since our sys-
tem predicts fine-grained clusters comparing against
Freebase relations, the measure of recall is underes-
timated. The precision measure is more reliable and
we employ F-0.5 measure, which places more em-
phasis on precision.
Matthews correlation coefficient (MCC) (Baldi et
al., 2000) is another measure used in machine learn-
ing, which takes into account true and false positives
and negatives and is generally regarded as a bal-
anced measure which can be used when the classes
are of very different sizes. In our case, the true nega-
tive number is 100 times larger than the true positive
number. Therefor we also employ MCC, calculated
as
MCC = TP?TN?FP?FN?
(TP+FP )(TP+FN)(TN+FP )(TN+FN)
The MCC score is between -1 and 1. The larger the
better. In perfect predictions, FP and FN are 0, and
the MCC score is 1. A random prediction results in
score 0.
Table 3 shows the results of all systems. Our ap-
proach achieves the best performance in most mea-
sures. Without using sense disambiguation, the per-
formance of hierarchical clustering decreases signif-
icantly, losing 17% in precision in the pairwise mea-
sure, and 15% in terms ofB3. The generative model
approach with 300 topics achieves similar precision
to the hierarchical clustering approach. With more
topics, the precision increases, however, the recall
of the generative model is much lower than those
of other approaches. We also show the results of
our approach without global document and sentence
theme features (Local). In this case, both precision
and recall decrease. We compare global features
(Our approach) against Wikipedia entity type fea-
tures (Local+Type). We see that using global fea-
tures achieves better performance than using entity
type based features. When we add entity type fea-
tures to our approach, the performance does not in-
crease. The entity type features do not help much
is due to that we cannot determine which particular
type to choose for an entity pair. Take pair ?(Hillary
Rodham Clinton, Jonathan Tasini)? as an example,
choosing politician for both arguments instead of
person will help.
We should note that these measures provide com-
parison between different systems although they
are not accurate. One reason is the following:
some relation instances should have multiple la-
bels but they have only one label in Freebase.
For example, instances of a relation that a per-
son ?was born in? a country could be labeled
as ?/people/person/place of birth? and as ?/peo-
ple/person/nationality?. This decreases the pairwise
precision. Further discussion is in Section 4.3.
4.2 Path Intrusion
We also evaluate coherence of relation clusters pro-
duced by different approaches by creating path in-
trusion tasks (Chang et al, 2009). In each task, some
paths from one cluster and an intruding path from
another are shown, and the annotator?s job is to iden-
tify one single path which is out of place. For each
path, we also show the annotators one example sen-
tence. Three graduate students in natural language
processing annotate intruding paths. For disagree-
ments, we use majority voting. Table 4 shows one
example intrusion task.
717
System
Pairwise B3
Prec. Rec. F-0.5 MCC Prec. Rec. F-0.5
Rel-LDA/300 0.593 0.077 0.254 0.191 0.558 0.183 0.396
Rel-LDA/1000 0.638 0.061 0.220 0.177 0.626 0.160 0.396
HAC 0.567 0.152 0.367 0.261 0.523 0.248 0.428
Local 0.625 0.136 0.364 0.264 0.626 0.225 0.462
Local+Type 0.718 0.115 0.350 0.265 0.704 0.201 0.469
Our Approach 0.736 0.156 0.422 0.314 0.677 0.233 0.490
Our Approach+Type 0.682 0.110 0.334 0.250 0.687 0.199 0.460
Table 3: Pairwise and B3 evaluation for various systems. Since our systems predict more fine-grained clusters than
Freebase, the recall measure is underestimated.
Path Example sentence
A beat B Dmitry Tursunov beat the best American player, Andy Roddick
A, who lose to B Sluman, Loren Roberts (who lost a 1994 Open playoff to Ernie Els at Oakmont ...
A, who beat B ... offender seems to be the Russian Mariya Sharapova, who beat Jelena Dokic
A, a broker at B Robert Bewkes, a broker at UBS for 12 years
A meet B Howell will meet Geoff Ogilvy, Harrington will face Davis Love III
Table 4: A path intrusion task. We show 5 paths and ask the annotator to identify one path which does not belong to
the cluster. And we show one example sentence for each path. The entities (As and Bs) in the sentences are bold. And
the italic row here indicates the intruder.
System Correct
Rel-LDA/300 0.737
Rel-LDA/1000 0.821
HAC 0.852
Local+Type 0.773
Our approach 0.887
Table 5: Results of intruding tasks of all systems.
From Table 5, we see that our approach achieves
the best performance. We concentrate on some in-
trusion tasks and compare the clusters produced by
different systems.
The clusters produced by HAC (without sense dis-
ambiguation) is coherent if all the paths in one rela-
tion take a particular sense. For example, one task
contains paths ?A, director at B?, ?A, specialist at
B?, ?A, researcher at B?, ?A, B professor? and ?A?s
program B?. It is easy to identify ?A?s program B?
as an intruder when the annotators realize that the
other four paths state the relation that people work
in an educational institution. The generative model
approach produces more coherent clusters when the
number of relation topics increases.
The system which employs local and entity type
features (Local+Type) produces clusters with low
coherence because the system puts high weight on
types. For example, (United States, A talk with B,
Syria) and (Canada, A defeat B, United States) are
clustered into one relation since they share the argu-
ment types ?country?-?country?. Our approach us-
ing the global theme features can correct such errors.
4.3 Error Analysis
We also closely analyze the pairwise errors that we
encounter when comparing against Freebase labels.
Some errors arise because one instance can have
multiple labels, as we explained in Section 4.1. One
example is the following: Our approach predicts that
(News Corporation, buy, MySpace) and (Dow Jones
& Company, the parent of, The Wall Street Journal)
are in one relation. In Freebase, one is labeled as
?/organization/parent/child?, the other is labeled as
?/book/newspaper owner/newspapers owned?. The
latter is a sub-relation of the former. We can over-
come this issue by introducing hierarchies in relation
labels.
Some errors are caused by selecting the incorrect
sense for an entity pair of a path. For instance, we
put (Kenny Smith, who grew up in, Queens) and
(Phil Jackson, return to, Los Angeles Lakers) into
718
the ?/people/person/place of birth? relation cluster
since we do not detect the ?sports? sense for the en-
tity pair ?(Phil Jackson, Los Angeles Lakers)?.
5 Related Work
There has been considerable interest in unsupervised
relation discovery, including clustering approach,
generative models and many other approaches.
Our work is closely related to DIRT (Lin and Pan-
tel, 2001). Both DIRT and our approach represent
dependency paths using their arguments. Both use
distributional similarity to find patterns representing
similar semantic relations. Based on DIRT, Pantel
et al (2007) addresses the issue of multiple senses
per path by automatically learning admissible argu-
ment types where two paths are similar. They cluster
arguments to fine-grained entity types and rank the
associations of a relation with these entity types to
discover selectional preferences. Selectional prefer-
ences discovery (Ritter et al, 2010; Seaghdha, 2010)
can help path sense disambiguation, however, we
show that using global features performs better than
entity type features.
Our approach is also related to feature parti-
tioning in cross-cutting model of lexical seman-
tics (Reisinger and Mooney, 2011). And our sense
disambiguation model is inspired by this work.
There they partition features of words into views and
cluster words inside each view. In our case, each
sense of a path can be seen as one view. However,
we allow different views to be merged since some
views overlap with each other.
Hasegawa et al (2004) cluster pairs of named en-
tities according to the similarity of context words in-
tervening between them. Hachey (2009) uses topic
models to perform dimensionality reduction on fea-
tures when clustering entity pairs into relations. Bol-
legala et al (2010) employ co-clustering to find clus-
ters of entity pairs and patterns jointly. All the ap-
proaches above neither deal with polysemy nor in-
corporate global features, such as sentence and doc-
ument themes.
Open information extraction aims to discover re-
lations independent of specific domains (Banko et
al., 2007; Banko and Etzioni, 2008). They employ
a self-learner to extract relation instances, but no
attempt is made to cluster instances into relations.
Yates and Etzioni (2009) present RESOLVER for
discovering relational synonyms as a post process-
ing step. Our approach falls into the same category.
Moreover, we explore path senses and global fea-
tures for relation discovery.
Many generative probabilistic models have been
applied to relation extraction. For example, vari-
eties of topic models are employed for both open
domain (Yao et al, 2011) and in-domain relation
discovery (Chen et al, 2011; Rink and Harabagiu,
2011). Our approach employs generative models
for path sense disambiguation, which achieves better
performance than directly applying generative mod-
els to unsupervised relation discovery.
6 Conclusion
We explore senses of paths to discover semantic re-
lations. We employ a topic model to partition en-
tity pairs of a path into different sense clusters and
use hierarchical agglomerative clustering to merge
senses into semantic relations. Experimental results
show our approach discovers precise relation clus-
ters and outperforms a generative model approach
and a clustering method which does not address
sense disambiguation. We also show that using
global features improves the performance of unsu-
pervised relation discovery over using entity type
based features.
Acknowledgments
This work was supported in part by the Center
for Intelligent Information Retrieval and the Uni-
versity of Massachusetts gratefully acknowledges
the support of Defense Advanced Research Projects
Agency (DARPA) Machine Reading Program under
Air Force Research Laboratory (AFRL) prime con-
tract no. FA8750-09-C-0181. Any opinions, find-
ings, and conclusion or recommendations expressed
in this material are those of the authors and do not
necessarily reflect the view of DARPA, AFRL, or
the US government.
References
Amit Bagga and Breck Baldwin. 1998. Algorithms for
scoring coreference chains. In The First International
Conference on Language Resources and Evaluation
Workshop on Linguistics Coreference.
719
Pierre Baldi, S?ren Brunak, Yves Chauvin, Claus A. F.
Andersen, and Henrik Nielsen. 2000. Assessing the
accuracy of prediction algorithms for classification: an
overview. Bioinformatics, 16:412?424.
Michele Banko and Oren Etzioni. 2008. The tradeoffs
between open and traditional relation extraction. In
Proceedings of ACL-08: HLT.
Michele Banko, Michael J Cafarella, Stephen Soderland,
Matt Broadhead, and Oren Etzioni. 2007. Open in-
formation extraction from the web. In Proceedings of
IJCAI2007.
Christian Bizer, Jens Lehmann, Georgi Kobilarov, So?ren
Auer, Christian Becker, Richard Cyganiak, and Se-
bastian Hellmann. 2009. DBpedia - a crystallization
point for the web of data. Journal of Web Semantics:
Science, Services and Agents on the World Wide Web,
pages 154?165.
David Blei, Andrew Ng, and Michael Jordan. 2003. La-
tent Dirichlet Allocation. Journal of Machine Learn-
ing Research, 3:993?1022, January.
Kurt Bollacker, Colin Evans, Praveen Paritosh, Tim
Sturge, and Jamie Taylor. 2008. Freebase: a collabo-
ratively created graph database for structuring human
knowledge. In SIGMOD ?08: Proceedings of the 2008
ACM SIGMOD international conference on Manage-
ment of data, pages 1247?1250, New York, NY, USA.
ACM.
Danushka Bollegala, Yutaka Matsuo, and Mitsuru
Ishizuka. 2010. Relational duality: Unsupervised ex-
traction of semantic relations between entities on the
web. In Proceedings of WWW.
Jonathan Chang, Jordan Boyd-Graber, Chong Wang,
Sean Gerrish, and David Blei. 2009. Reading tea
leaves: How humans interpret topic models. In Pro-
ceedings of NIPS.
Harr Chen, Edward Benson, Tahira Naseem, and Regina
Barzilay. 2011. In-domain relation discovery with
meta-constraints via posterior regularization. In Pro-
ceedings of ACL.
Jenny Rose Finkel, Trond Grenager, and Christopher
Manning. 2005. Incorporating non-local informa-
tion into information extraction systems by gibbs sam-
pling. In Proceedings of the 43rd Annual Meeting of
the Association for Computational Linguistics (ACL
?05), pages 363?370, June.
Benjamin Hachey. 2009. Towards Generic Relation Ex-
traction. Ph.D. thesis, University of Edinburgh.
Takaaki Hasegawa, Satoshi Sekine, and Ralph Grishman.
2004. Discovering relations among named entities
from large corpora. In ACL.
Dekang Lin and Patrick Pantel. 2001. DIRT - Discovery
of Inference Rules from Text. In Proceedings of KDD.
J. Nivre, J. Hall, and J. Nilsson. 2004. Memory-based
dependency parsing. In Proceedings of CoNLL, pages
49?56.
Patrick Pantel, Rahul Bhagat, Bonaventura Coppola,
Timothy Chklovski, and Eduard Hovy. 2007. ISP:
Learning Inferential Selectional Preferences. In Pro-
ceedings of NAACL HLT.
Lev Ratinov, Dan Roth, Doug Downey, and Mike Ander-
son. 2011. Local and global algorithms for disam-
biguation to Wikipedia. In Proceedings of ACL.
Deepak Ravichandran and Eduard Hovy. 2002. Learning
surface text patterns for a question answering system.
In Proceedings of ACL.
Joseph Reisinger and Raymond J. Mooney. 2011. Cross-
cutting models of lexical semantics. In Proceedings of
EMNLP.
Bryan Rink and Sanda Harabagiu. 2011. A generative
model for unsupervised discovery of relations and ar-
gument classes from clinical texts. In Proceedings of
EMNLP.
Alan Ritter, Mausam, and Oren Etzioni. 2010. A La-
tent Dirichlet Allocation method for Selectional Pref-
erences. In Proceedings of ACL10.
Evan Sandhaus, 2008. The New York Times Annotated
Corpus. Linguistic Data Consortium, Philadelphia.
Diarmuid O Seaghdha. 2010. Latent variable models of
selectional preference. In Proceedings of ACL 10.
Idan Szpektor, Hristo Tanev, Ido Dagan, and Bonaven-
tura Coppola. 2004. Scaling web-based acquisition of
entailment relations. In Proceedings of EMNLP.
Limin Yao, Aria Haghighi, Sebastian Riedel, and Andrew
McCallum. 2011. Structured relation discovery using
generative models. In Proceedings of EMNLP.
Alexander Yates and Oren Etzioni. 2009. Unsupervised
methods for determining object and relation synonyms
on the web. Journal of Artificial Intelligence Research,
34:255?296.
720
