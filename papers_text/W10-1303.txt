Proceedings of the NAACL HLT 2010 Workshop on Speech and Language Processing for Assistive Technologies, pages 19?27,
Los Angeles, California, June 2010. c?2010 Association for Computational Linguistics
Implications of Pragmatic and Cognitive Theories on the 
Design of Utterance-Based AAC Systems 
 
Kathleen F. McCoy Jan Bedrosian Linda Hoag 
Dept. of Computer 
 and Information Sciences 
Dept. of Speech Pathology and 
Audiology 
Dept. of Communication 
Sciences and Disorders 
University of Delaware Western Michigan University Kansas State University 
Newark, DE 19716, USA Kalamazoo, MI 49008, USA Manhattan, KS 66506, USA 
mccoy@cis.udel.edu jan.bedrosian@wmich.edu lhoag@ksu.edu 
 
 
Abstract 
Utterance-based AAC systems have the poten-
tial to significantly speed communication rate 
for someone who relies on a speech generat-
ing device for communication. At the same 
time, such systems pose interesting challenges 
including anticipating text needs, remember-
ing what text is stored, and accessing desired 
text when needed. Moreover, using such sys-
tems has profound pragmatic implications as a 
prestored message may or may not capture 
exactly what the user wishes to say in a par-
ticular discourse situation. In this paper we 
describe a prototype of an utterance-based 
AAC system whose design choices are driven 
by findings from theoretically driven studies 
concerning pragmatic choices with which the 
user of such a system is faced. These findings 
are coupled with cognitive theories to make 
choices for system design.  
1 Introduction 
There are more than 3.5 million Americans with 
disabilities who cannot effectively use speech to 
communicate (Beukelman & Mirenda, 2005). 
There are many conditions that can result in such 
severe speech impairments including cerebral pal-
sy, autism spectrum disorders, multiple sclerosis, 
amyotrophic lateral sclerosis (ALS), brain-stem 
stroke, Parkinson?s disease, and traumatic brain 
injury (TBI). Any one of these conditions can have 
a negative effect on the quality of life of these 
people. The field of Augmentative and Alternative 
Communication (AAC) has, especially over the 
last ten years, dramatically enhanced access to 
communication for these individuals through the 
use of high-tech systems. These electronic systems 
allow the entering of text that is then converted to 
natural-sounding synthetic speech. While the popu-
lation using AAC systems is quite diverse with 
regard to their linguistic and cognitive skills, here 
we focus on AAC systems for cognitively high-
functioning literate adults with motor impairments.   
Even with a focus on this population, the com-
munication rates of people who use AAC systems 
differ greatly based on their motor abilities and 
available interface choices (Trnka et al, 2009). 
Nevertheless, overall communication rates are 
slow to the extent that they are acknowledged as 
one of the most problematic areas of AAC interac-
tions.  Rates of 10-15 words per minute have been 
identified as upper limits for letter-by-letter selec-
tion on a keyboard (e.g., Wobbrock & Myers, 
2006)?a significant contrast to 130-200 words per 
minute for spoken communication. These slow 
rates and long pauses continue to be a major bar-
rier to the social, educational, and vocational suc-
cess, particularly when communicating with 
unfamiliar partners who have little or no expe-
rience in conversing with someone who uses AAC. 
One method that holds a great deal of promise 
for enhancing communication rate is the use of 
systems that offer a selection of prestored messag-
es. With these systems, a phrase or full sen-
tence/utterance can be selected at once. In such 
systems, sometimes called utterance-based AAC 
systems, people compose whole utterances in ad-
vance and store them for later use. These systems 
appear to be best suited for situations where rela-
tively predictable conversational routines take 
place.  Examples include short, transactional ex-
changes in stores, restaurants, or other public plac-
es where services are provided. 
Although it might appear that utterance-based 
technology could solve the problem of slow com-
19
munication, at least in these predictable exchanges, 
the individual who uses these prestored messages 
must deal with additional challenges to use the 
prestored messages that have been stored in their 
system. Users must be able to: 1) remember that 
they have messages prestored that are appropriate 
for a given situation; 2) remember where these 
messages are stored; and 3) access the desired 
prestored messages with few keystrokes. In addi-
tion, it must be recognized that the prestored mes-
sages are not always going to exactly fit the 
communicative situation in which the user finds 
him/herself (e.g., a prestored message may not 
have enough information for the needs of the part-
ner).This results in a fourth challenge to the user?
to decide if it is better to use the message as stored, 
or either edit or construct a new one. Each chal-
lenge, or trade-off choice, directly affects commu-
nication rate.  
An adequate solution to these challenges has 
proven elusive over the years, despite a long tradi-
tion of research in utterance-based technologies 
(e.g., Todman, 2000; Todman & Alm, 1997; Tod-
man et al, 2008; Vanderheyden et al, 1996). What 
has been lacking is a design process that employs a 
theoretical framework (or perspective) dealing 
with conversation conventions, empirical evidence 
to identify priorities, and systematic testing to de-
termine whether the design enables the communi-
cator to achieve the goals of an interaction.  
A hierarchy of conversational rule violations 
based on a series of experimental studies has a 
great deal of potential to positively influence the 
design of future utterance-based technologies. In 
this paper we first describe a set of such studies 
and the resulting hierarchy. We then discuss the 
implications of this hierarchy on the design of an 
utterance-based AAC system, while integrating 
considerations from cognition and Natural Lan-
guage Processing. Finally, we present our partially 
implemented prototype system and describe plans 
for evaluating this technology. 
2 Theoretical Background 
To shed light on the design of future utterance-
based technologies, studied conversational trade-
off choices that a person faces when using an ut-
terance-based system in goal-directed public situa-
tions with service providers who are unfamiliar 
with AAC, and how the particular choices made 
affect the attitudes and conversational behaviors of 
these providers (Bedrosian et al, 2003; Hoag et al, 
2007; Hoag et al, 2004, 2008; McCoy, et al, 
2007). We were interested in determining which 
message choices resulted in the most favorable 
attitudes and conversational responses leading to 
the success of the AAC customer?s goal in these 
transactional exchanges.  
Notice that no matter how well a user anticipates 
text need, it is inevitable that some prestored mes-
sages are not going to exactly fit the pragmatic 
context in which the user finds him or herself. Four 
public situations (i.e., bookstore, movie theater, 
small convenience store, hair salon) where such 
mismatches could occur were studied in a series of 
investigations. Possible pragmatic mismatches 
were characterized in terms of rule violations ac-
cording to Grice (1975) who articulated a set of 
classic conversational maxims that implicitly guide 
people in exchanging information. Using video-
taped interactions across experiments, these viola-
tions were scripted in messages that involved 
trade-off choices between prestored message use 
and real time message construction. Specifically, 
the trade-offs examined in these investigations 
were between speed of message delivery and a 
message with either: 1) repetitive information with 
repetitive words or phrases; 2) excessive informa-
tion, with more information than was needed by 
the listener but where the information was still top-
ically relevant; 3) inadequate information, lacking 
some of the information needed by the listener, or 
4) partly relevant information, where some of the 
content was not topically relevant. An example of 
such a trade-off involved the message choice of a 
quickly delivered (i.e., 4 seconds) prestored mes-
sage with excessive information or one that was 
delivered slowly (i.e., 90 seconds) to allow editing 
of the excessive information. 
In essence, these experiments simulated situa-
tions where the user was faced with a choice: 
whether to quickly deliver a prestored message that 
was not exactly what was desired because of the 
pragmatic mismatch, or whether to take the time to 
edit the message so that it was exactly what was 
needed. The experiments looked at goal oriented 
situations with unfamiliar partners. This is an ex-
tremely important set of circumstances where the 
attitudes and actions of the communication partner 
can greatly affect whether or not the user can inde-
pendently meet his or her goals. 
20
The experimental hypothesis was that there ex-
isted a hierarchy of conversational maxims involv-
ing the maxims of speed, relevance, repetition, and 
Informativeness, such that adherence to some of 
these maxims would result in more positive eval-
uations by public service providers than others. 
With regard to the results of the experiments, simi-
lar hierarchies of conversational rule violations  
were found across experiments, such that some 
violations, regardless of degree or particular public 
setting, were indeed consistently responded to 
more or less favorably than others. Consistently at 
the bottom of the hierarchy (i.e., responded to least 
favorably in all experimental situations, and with 
less success in meeting the target customer?s goal) 
were quickly delivered messages with only partly 
relevant information. The finding places a high 
priority on selecting entirely relevant messages. As 
such, it suggests the development of a system ar-
chitecture that makes it easy and fast to retrieve 
entirely relevant messages and difficult to retrieve 
messages that are only partly relevant to the cur-
rent exchange.  
On the other hand, consistently at the top of the 
hierarchy were quickly delivered messages with 
repetitive information. These messages were re-
sponded to the most favorably and with much suc-
cess in meeting the target customer?s goal. The 
limited negative impact of the messages with repe-
tition indicated that modification of system design 
to remedy this message flaw would yield less bene-
fit for the user.  
The other trade-off choices, the fast inadequate 
message, the slow adequate message, and the fast 
excessive message, occupied the middle of the hie-
rarchy across the experiments, although their posi-
tions with regard to each other were not exactly the 
same. Thus, the implications of these findings for 
system design are a little less clear, but suggest that 
users given options to edit or easily construct mes-
sages with respect to Informativeness.  
In sum, these findings have several important 
implications for future utterance-based technolo-
gies. A system design must provide a mechanisms 
to maximize the availability of situationally rele-
vant prestored messages.  Additionally, utterance-
based technologies must be integrated seamlessly 
into an AAC system design that allows these pres-
tored messages to be easily edited for their exces-
sive or inadequate information.  Finally, this 
design must also support the on-line construction 
of new messages, while still easily accessing pres-
tored messages when appropriate.  
3 Prototype Development 
The research findings cited above, particularly 
those regarding the critical role of relevance in 
conversation, led to the underlying structure of the 
prototype we are in the process of developing. 
Specifically, we are interested in a prototype that 
will support relevant conversation in familiar rou-
tine exchanges with relatively predictable content, 
such as those that occur in public settings, as it is 
these types of exchanges that provide the best situ-
ations in which to use prestored text. Schank and 
Abelson (1977) suggested that people develop 
mental scripts in such familiar situations (e.g., 
going to a restaurant), and that these scripts 
(representing typical sequences of events) are ac-
cessed by people in order to act appropriately in 
these situations, and understand/interpret what is 
being said. Each script consists of a series of 
scenes (subevents) that previous experience has led 
one to expect to occur. According to the cognitive 
theory, when faced with a new situation (e.g., 
going to a new restaurant), a person can pull up 
his/her mental script and step through the scenes in 
order to participate appropriately.  
We propose an underlying organizational struc-
ture for prestored utterances that leverages this 
mental script notion from cognitive science, as it 
nicely supports the Bedrosian, Hoag, McCoy, and 
Bedrosian findings about relevance. A slightly dif-
ferent notion of scripts has been used in previous 
research in utterance-based technologies (e.g., Dye 
et al, 1998; Alm et al, 2000). The notion referred 
to here is inspired by the early work of Vander-
heyden (1995). In particular, in our prototype sys-
tem the prestored utterances are organized 
(grouped and ordered) according to scenes within a 
script. For example, a ?going-to-a-restaurant? 
script may have scenes associated with entering, 
ordering drinks, ordering entree, paying, etc. Asso-
ciated with each of these scenes are the prestored 
utterances appropriate for use during that scene 
(e.g., utterances pertaining to entering might in-
clude, ?Hello.? ?Fine, thank you.?, ?Non-
smoking.?). 
Not only would this organization ensure the re-
levance of utterances to the current situation, but it 
would also significantly aid the user in remember-
21
ing where these messages are stored so that they 
can be accessed. Essentially the user could direct 
the system to step through messages appropriate 
for each scene of a given script as he/she is actual-
ly experiencing the scene. The utterance-based sys-
tem would have a ?now point? which corresponds 
to the scene in which the user is currently located 
in the script. Utterances useful for the conversation 
during that scene are easily available using very 
few keystrokes. Moreover, because the script mir-
rors the way a user thinks about a typical situation 
and how it flows from one scene to the next, the 
interface could lead the user to utterances appro-
priate for the next scenes to be encountered. Thus, 
users do not need to remember exactly which ut-
terances are stored; they need only to activate the 
appropriate scene in the script to be shown relevant 
messages that can be selected, as well as other 
scenes that may follow. 
At the same time, this underlying structure can 
also provide time-saving benefits to the user with 
respect to entering text. This is in part because of 
its hierarchical organization [see Figure 1, influ-
enced by Vanderheyden (1995)]. At the top of any 
given hierarchy, are the most general scripts which 
can be used in a multitude of new situations (e.g., a 
new type of restaurant that the user has never gone 
to). As shown in the figure, the most general script 
here involves a ?going-to-a-restaurant? script with 
scenes containing ?general purpose text?. For in-
stance, in the ordering scene, slot fillers appropri-
ate for many different kinds of restaurants are 
shown. Below this script, are scripts that pertain to 
more specific types of restaurants (only two are 
explicitly shown in the figure). In these scripts, 
notice some scenes and text are inherited verbatim 
from above, but text may also be added to or mod-
ified as appropriate for the situation and according 
to the preferences of the user. By inherited we 
mean that one or more scenes, with the corres-
ponding messages, from the most general script 
would automatically be made available in the more 
specific instances. Unavailable in other prestored 
text systems, this feature is a significant benefit to 
users, because they only have to enter the informa-
tion one time at the highest level of the hierarchy, 
and yet they will have access to it again in other 
scripts further down in the hierarchy.  
Another advantage of the inheritance is that it 
results in a consistent organization of messages 
across scripts. When accessing any script within 
the restaurant hierarchy, for example, not only can 
users expect to find the entering scene that was 
inherited from the ?parent? script, they can also 
expect to find the prestored utterances ?Hello? and 
?Fine, thank you? near the beginning of that scene. 
This illustrates a memory enhancement feature of 
this system that is not available in other prestored 
text systems ? consistency in placement of mes-
sages from one particular script to another. Over-
all, this underlying organizational structure, which 
we will refer to as a deep structure, represents a 
significant change in the way that utterance-based 
systems in AAC have been designed. With respect 
to appearance, or surface structure, some current 
systems may have, for example, a restaurant 
?page? consisting of a grid of small rectangular 
boxes forming rows and columns across the com-
puter screen. Although each box would contain a 
prestored message appropriate for use in a restau-
rant, there is no deep structure specifying how the 
messages on that page should be organized 
(grouped and ordered) nor how the messages might 
be related (the notion of consistency) to those 
stored on other pages. The only organizing prin-
ciple is that these messages are ?things I can say in 
a restaurant.? If the messages are not ordered (ei-
ther by row or column) in a way that steps the user 
through a scripted sequence of events for a given 
situation, the user must search through a set of 
messages, some of which are unlikely to occur at 
that stage in the interaction. This search process, 
which is likely to include irrelevant messages, may 
slow down the selection process and negatively 
impact the rate of communication. Even if health 
providers or manufacturers programmed messages 
in these boxes to follow such a sequence, this 
would still remain a surface structure ?fix.? The 
strength of our prototype is the deep structure?the 
machinery?such that the consistent location of the 
messages can be easily remembered and accessed 
in a few keystrokes to enhance communication 
rate. Additionally, the hierarchical advantage of the 
deep structure provides the user with a choice of 
scripts (depending on the specificity of the situa-
tion), and saves the user time and energy in enter-
ing text, making the user more independent in 
meeting individual communication needs. 
 
22
 
Figure 1: Hierarchical Script Representation 
 
23
4 Communicating with the system 
In this section we discuss the user interface and 
what the user does in order to actually communi-
cate using the system which has been our focus to 
date. Future work will investigate issues in enter-
ing prestored text into scripts and adapting the 
scripts to the individual user. In a situation where 
the user anticipates using prestored text, he or she 
will be taken to a window menu where the desired 
script (and scene) can be selected. The user may 
then navigate to the script that best fits the actions 
in which he or she is about to engage.  Upon se-
lecting the script, the user will be taken to a screen 
such as that displayed in Figure 2. 
The large window at the top is the display win-
dow. This is where the words of the utterances se-
lected by the user to be spoken will be displayed. 
There is a clear button to clear the display window 
(on the left of the display) and a speak button (the 
arrow on the right-hand-side of the display) that 
causes the display window contents to be sent to 
the speech synthesizer to be spoken. 
The next area of the display helps users keep 
their place and navigate within the chosen script. 
First is the scene map which is a numerical repre-
sentation of the scenes in the current script. From 
this, for instance, users can see that the script they 
have selected contains seven scenes, and the scene 
they are currently performing is scene number one 
which corresponds to the ?enter? scene. The num-
ber of the current scene is colored differently than 
the rest. Below the scene map is a line of tabs, un-
der which are boxes containing prestored text that 
can be selected by the user. In this case, the text for 
the first five scenes of the script are displayed (or 
partially displayed). These scenes are named ?en-
ter?, ?drinks?, ?appetizer?, ?soup/salad?, and 
?entr?e?.  Under each of these scene-name tabs is 
the list of possible prestored utterances associated 
with the scene. For example, there are three pieces 
of text displayed that would be appropriate for the 
?enter? scene. As is the case with the scene-map, 
the current scene (tab and utterances) is colored 
differently from the others so that it is more salient 
to the user. 
Under the boxes are four tabs which bring up 
overlays with some general prestored text that 
might be needed at any time during the script. Ask-
ing for some assistance, talking with the waiter, 
small talk with the table mate, and quickfires are 
just some examples of the kinds of pages that 
might be accessible. Finally, at the bottom of the 
page are some navigation buttons for navigating in 
the device. Here we see buttons that allow the user 
to go to the device home page, move the script 
backward and forward, and go to a page containing 
a keyboard so a novel utterance can be composed. 
The system is set up in a way that allows users 
to select text that they might need while perform-
 
Figure 2: View of Interface with "Entering Scene" Active 
24
ing an action as they step through a scene. Thus, it 
is assumed that the user would select text in left-to-
right order with the left-most scene being the ac-
tive scene (i.e., the scene the user is currently per-
forming).  The user may select one of the boxes in 
the active scene, and the text would be automati-
cally put up into the display window at the top. 
The speak button (arrow in the upper-right corner) 
is used to actually say the desired text. The user 
could select and speak any number of utterances in 
the active scene without any significant changes in 
the display. If the actions the user is performing 
have progressed to the next scene, then the user 
may navigate to the appropriate text in two dif-
ferent ways. First, the user could click on the 
scene map or displayed tabs to have the context 
shift to the new scene. Once selected that scene 
tab and associated text boxes will be shown on 
the left-hand-side of the device. Second, if the 
utterance that the user wishes to say is currently 
visible on the screen, the user may simply select 
that utterance. In this case, in addition to putting 
the utterance in the display window making it 
ready to be spoken, the screen will automatically 
scroll over to display the scene from which the 
utterance was chosen on the far left (revealing 
subsequent scenes to the right of it on the 
screen). Figure 3 displays an example of this kind 
of movement, resulting from the user selecting the 
?I?ll have the nachos? text from the appetizer scene 
displayed in Figure 2. Notice that the scenes have 
been shifted over--the appetizer scene (scene 3) is 
now the active scene, and the text associated with 
the button is now in the display window. 
 
Figure 3 illustrates another feature of the system 
? slot fillers that are specific to a script or scene. 
Notice that ?nachos? is colored differently than the 
other words in this prestored text. This is an indica-
tion that it is a slot-filler and that other options for 
filling that slot are available. To edit that text, the 
user clicks on the highlighted word in the display 
window, and a window such as that in Figure 4 is 
displayed. The user may then select the filler 
he/she desires, and it will replace ?nachos? in the 
display.  
The system described is currently being imple-
mented. Yet to be integrated is a facility that will 
enable more extensive editing of the text in the 
display window and the specifics of easy access to 
typing via an on-screen keyboard (for instances 
where the user wishes to type an utterance from 
scratch rather than using a prestored utterance). 
5 Planned Evaluation 
Two separate comparative efficacy evaluations 
will be conducted to test both the efficiency and 
effectiveness (Schlosser, 1999) of the prototype 
system in contrast to a differently organized pres-
tored text system. In each evaluation, efficiency 
will involve a comparison of the two systems, in a 
training session, with respect to user learning va-
riables (e.g., which system is learned faster, with 
less instruction time, fewer errors/trials). Effec-
tiveness will involve a comparison, in a virtual 
public setting environment with a service provider 
as the partner, dealing with user behavior changes 
and satisfaction (e.g., which system results in faster 
rates of prestored message selection, goal attain-
ment, more satisfaction) and partner attitude and 
Figure 3: Shifting scenes by selecting text from 
appetizer scene 
 
Figure 4: Editing a slot-filler 
25
behavior changes (e.g., which system leads to more 
positive attitudes toward the user, more effective 
conversational behaviors in meeting user goals).  
In the first efficacy evaluation, typically speak-
ing, nondisabled adults will be the participants, 
eliminating bias due to the fact that they will have 
had no previous experience using AAC systems. A 
randomized controlled trial will be employed whe-
reby participants will be assigned to either the pro-
totype system group or the standard system group. 
Each system will contain the same prestored mes-
sages, and the same virtual public setting will be 
used in each group. Results will be used to refine 
the training phase and modify the prototype soft-
ware if necessary. In the second evaluation, a sin-
gle subject experimental design involving an 
adapted alternating treatment design will be em-
ployed with cognitively intact, literate, adult partic-
ipants who currently use prestored text systems. 
Although such a design would expose each partici-
pant to each system (i.e., the prototype system and 
the standard system), carryover effects are elimi-
nated due to counterbalancing the order of the two 
conditions across participants, ensuring that there 
are two equivalent and functionally independent 
instructional sets for the conditions (Schlosser, 
1999) (in this case, the instructional sets would 
involve two virtual public settings and correspond-
ing prestored messages), and counterbalancing the 
sets between conditions.    
6 Related Work 
Storing and retrieving full utterances has been the 
focus of a long tradition of work; Todman et al 
(2008) contains a nice overview of some of these 
systems. The ScripTalker system (Dye et al 
1998a) is closest in theory to our system wit per-
haps the biggest difference being the variety of 
utterances available (and the fact that their proto-
type seemed more geared toward people with low 
literacy skills. While the overall architecture did 
rely on the notion of scripts, the actual utterances 
stored was one per task the user might want to per-
form. I.e., the scripts themselves were linguistic in 
nature. Similar uses were found in other work from 
that same group, for instance see (Alm et al 1995) 
and (Dye et al 1998). In contrast we target users 
with higher literacy skills and more variety in the 
prestored text they might want to have available. 
The script is used to organize the messages but 
there are many messages available within a partic-
ular scene.  
Other work such as the Talk System (Todman & 
Alm, 1997) is intended for social conversation and 
the organization is quite different. As its intention 
is so different, one would expect the stored content 
to need to be updated very often in order to keep it 
current. This is in contrast to the relatively endur-
ing nature expected in the types of conversations 
we envision. 
Another notable system is the FrameTalker 
Project (Higgenbotham & Lesher, 2005) uses a 
looser notion of communication contexts. Our hy-
pothesis is the structure used there does not impose 
enough organization over the utterances, especially 
in the type of situations we envision for use. The 
Contact system is a system that combines notions 
from both Talk and the FrameTalker projects. 
Finally, Langer & Hickey (1997) describe a 
whole utterance system that retrieved utterances 
related to keywords via a keyword search on a 
large database of utterances. In contrast, our sys-
tem would provide access to presumably a series of 
utterances relevant to the current situation. 
7 Conclusions 
AAC systems that use prestored text have a great 
deal of potential to speed communication rate and 
improve attitudes of unfamiliar speaking partners 
towards AAC users in public goal-oriented situa-
tions. In this work we applied empirical evidence 
summarized in a hierarchy of conversational rule 
violations (Bedrosian et al 2000) to identify im-
portant principles of successful interaction with 
AAC text. We then attempted to match appropriate 
NLP technologies with these principles in order to 
develop a different viewpoint for an AAC system 
that used prestored text. Our design is based on 
schema-theory (Schank & Abelson, 1977) and en-
forces a structure over the prestored text that will 
minimize irrelevant text and constrain the rest of 
the text so as to facilitate remembering what text is 
stored while minimizing keystrokes needed to se-
lect the text. 
Acknowledgments 
We would like to thank Tim Walsh who is respon-
sible for many of the interface design choices and 
for implementing the prototype system. This work 
is supported by NIH grant #5 R01 DC003670-06. 
26
References  
Alm, N., Morrison, A., & Arnott, J.L. (1995). A com-
munication system based on scripts, plans, and goals 
for enabling non-speaking people to conduct tele-
phone conversations. In Proceedings of the IEEE In-
ternational Conference on Systems, Man and 
Cybernetics. 
Alm, N., Neumann, H., & van Balkom, H. (2000). 
Scripts on an AAC system. In Proceedings of CSUN 
2000, Northridge, CA.  
Bedrosian, J. L., Hoag, L. A., & McCoy, K. F. (2003). 
Relevance and speed of message delivery trade-offs 
in augmentative and alternative communication. 
Journal of Speech, Language, and Hearing Research, 
46, 800-817. 
Beukelman, D. R., & Mirenda, P. (2005). Augmentative 
and alternative communication: Supporting children 
and adults with complex communication needs (3rd 
ed.). Baltimore, MD: Paul H. Brookes Pub. Co. 
Dye, R., Alm, N., Arnott, J. L., Murray, I.R., & Harper, 
G. (1998a). SrtipTalker - An AAC System Incorpo-
rating Scripts.In Proceedings of the TIDE Congress 
(Technology for Inclusive Design and Equality). 
Dye, R., Alm, N., Arnott, J. L., Harper, G., & Morrison, 
A. (1998). A script-based AAC system for transac-
tional interaction. Natural Language Engineering, 4, 
57?71.  
Grice, H. P. (1975). Logic and conversation. In P. Cole 
& J. Morgan (Eds.), Syntax and semantics: Vol. 3 
Speech acts (pp.41-58). New York: Academic Press. 
Higginbotham, D.J. & Lesher, G. (2005). The Frame-
talker Project: Building an Utterance-Based Commu-
nication Device. In Proceedings of CSUN 
Technology and Persons with Disabilities Confe-
rence. 
Hoag, L., Bedrosian, J., & McCoy, K. (2007, Novem-
ber). Effects of maxim violation degree on a hie-
rarchy in AAC. Poster presented at the American 
Speech-Language-Hearing Association Convention, 
Boston, MA. 
Hoag, L. A., Bedrosian, J. L., McCoy, K. F., & Johnson, 
D. (2004). Informativeness and speed of message de-
livery trade-offs in augmentative and alternative 
communication. Journal of Speech, Language, and 
Hearing Research, 47, 1270-1285. 
Hoag, L. A., Bedrosian, J. L., McCoy, K. F., & Johnson, 
D. E. (2008). Hierarchy of conversational rule viola-
tions involving utterance-based augmentative and al-
ternative communication systems. Augmentative and 
Alternative Communication, 24, 149-161.  
Langer, S. & Hickey, M. (1997). Automatic Message 
Indexing and Full Text Retrieval for a Communica-
tion Aid. In Proceedings of Natural Language 
Processing For Communication Aids a Workshop 
Associated with ACL 1997, Madrid, Spain. 
McCoy, K. F., Bedrosian, J. L., Hoag, L. A., & Johnson, 
D. (2007). Brevity and speed of message delivery 
trade-offs in augmentative and alternative communi-
cation. Augmentative and Alternative Communica-
tion, 23, 76-88. 
Schank, R. C., & Abelson, R. P. (1977). Scripts, plans, 
goals and understanding: An inquiry into human         
knowledge structures. Hillsdale, NJ: Erlbaum. 
Schlosser, R. W. (1999). Comparative efficacy of inter-
ventions in augmentative and alternative communica-
tion. Augmentative and Alternative Communication, 
15, 56-68. 
Todman, J. (2000). Rate and quality of conversations 
using a text-storage AAC system: A training study. 
Augmentative and Alternative Communication, 16, 
164-179.  
Todman, J., & Alm, N. (1997). TALK Boards for social 
conversation. Communication Matters, 11, 13-15. 
Todman, J., Alm, N., Higginbotham, J., & File, P. 
(2008). Whole utterance approaches in AAC. Aug-
mentative and Alternative Communication, 24, 235-
254. 
Trnka, K., McCaw, J., Yarrington, D., McCoy, K.F. , & 
Pennington, C. (2009) User interaction with word 
prediction: The effects of prediction quality. ACM 
Transactions on Accessible Computing (TACCESS), 
1,17-34. 
Vanderheyden, P. B. (1995). Organization of pre-stored 
text in alternative and augmentative communication 
systems: An interactive schema-based approach. 
Technical Report #AAC9501, Applied Science and 
Engineering Laboratories, Wilmington, DE.  
Vanderheyden, P.B.,  Demasco, P.W., McCoy, K.F., & 
Pennington, C.A. (1996). A preliminary study into 
Schema-based access and organization of reusable 
text in AAC. In Proceedings of RESNA '96 19th An-
nual Conference, June. 
Wobbrock, J. & Myers, B. (2006). From letters to 
words: Efficient stroke-based word completion for 
trackball text entry. In Proceedings of the ACM 
SIGACCESS Conference on Computers and Acces-
sibility (ASSETS), pp. 2 
27
