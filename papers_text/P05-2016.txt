Proceedings of the ACL Student Research Workshop, pages 91?96,
Ann Arbor, Michigan, June 2005. c?2005 Association for Computational Linguistics
Dependency-Based Statistical Machine Translation
Heidi J. Fox
Brown Laboratory for Linguistic Information Processing
Brown University, Box 1910, Providence, RI 02912
hjf@cs.brown.edu
Abstract
We present a Czech-English statistical
machine translation system which per-
forms tree-to-tree translation of depen-
dency structures. The only bilingual re-
source required is a sentence-aligned par-
allel corpus. All other resources are
monolingual. We also refer to an evalua-
tion method and plan to compare our sys-
tem?s output with a benchmark system.
1 Introduction
The goal of statistical machine translation (SMT) is
to develop mathematical models of the translation
process whose parameters can be automatically esti-
mated from a parallel corpus. Given a string of for-
eign words F, we seek to find the English string E
which is a ?correct? translation of the foreign string.
The first work on SMT done at IBM (Brown et al,
1990; Brown et al, 1992; Brown et al, 1993; Berger
et al, 1994), used a noisy-channel model, resulting
in what Brown et al (1993) call ?the Fundamental
Equation of Machine Translation?:
E? =
argmax
E P (E)P (F | E) (1)
In this equation we see that the translation prob-
lem is factored into two subproblems. P (E) is the
language model and P (F | E) is the translation
model. The work described here focuses on devel-
oping improvements to the translation model.
While the IBM work was groundbreaking, it was
also deficient in several ways. Their model trans-
lates words in isolation, and the component which
accounts for word order differences between lan-
guages is based on linear position in the sentence.
Conspicuously absent is all but the most elementary
use of syntactic information. Several researchers
have subsequently formulated models which incor-
porate the intuition that syntactically close con-
stituents tend to stay close across languages. Below
are descriptions of some of these different methods
of integrating syntax.
? Stochastic Inversion Transduction Grammars
(Wu and Wong, 1998): This formalism uses a
grammar for English and from it derives a pos-
sible grammar for the foreign language. This
derivation includes adding productions where
the order of the RHS is reversed from the or-
dering of the English.
? Syntax-based Statistical Translation (Yamada
and Knight, 2001): This model extends the
above by allowing all possible permutations of
the RHS of the English rules.
? Statistical Phrase-based Translation (Koehn
et al, 2003): Here ?phrase-based? means
?subsequence-based?, as there is no guarantee
that the phrases learned by the model will have
any relation to what we would think of as syn-
tactic phrases.
? Dependency-based Translation ( ?Cmejrek et al,
2003): This model assumes a dependency
parser for the foreign language. The syntactic
structure and labels are preserved during trans-
lation. Transfer is purely lexical. A generator
builds an English sentence out of the structure,
labels, and translated words.
91
2 System Overview
The basic framework of our system is quite similar
to that of ?Cmejrek et al (2003) (we reuse many of
their ancillary modules). The difference is in how
we use the dependency structures. ?Cmejrek et al
only translate the lexical items. The dependency
structure and any features on the nodes are preserved
and all other processing is left to the generator. In
addition to lexical translation, our system models
structural changes and changes to feature values, for
although dependency structures are fairly well pre-
served across languages (Fox, 2002), there are cer-
tainly many instances where the structure must be
modified.
While the entire translation system is too large to
discuss in detail here, I will provide brief descrip-
tions of ancillary components. References are pro-
vided, where available, for those who want more in-
formation.
2.1 Corpus Preparation
Our parallel Czech-English corpus is comprised of
Wall Street Journal articles from 1989. The English
data is from the University of Pennsylvania Tree-
bank (Marcus et al, 1993; Marcus et al, 1994).
The Czech translations of these articles are provided
as part of the Prague Dependency Treebank (PDT)
(Bo?hmova? et al, 2001). In order to learn the pa-
rameters for our model, we must first create aligned
dependency structures for the sentence pairs in our
corpus. This process begins with the building of de-
pendency structures.
Since Czech is a highly inflected language, mor-
phological tagging is extremely helpful for down-
stream processing. We generate the tags using
the system described in (Hajic? and Hladka?, 1998).
The tagged sentences are parsed by the Charniak
parser, this time trained on Czech data from the PDT.
The resulting phrase structures are converted to tec-
togrammatical dependency structures via the proce-
dure documented in (Bo?hmova?, 2001). Under this
formalism, function words are deleted and any in-
formation contained in them is preserved in features
attached to the remaining nodes. Finally, functors
(such as agent or patient) are automatically assigned
to nodes in the tree ( ?Zabokrtsky? et al, 2002).
On the English side, the process is simpler. We
japan automobile dealers association... ...
NNP NNP NNPS NN
japan automobile dealers association... ...NNP NNP NNPS NN
SPLIT
N N A N
CZ3
CZ2
CZ1
... obchodn??k japonsky? ...automobilasociace
EN2
EN1
EN2
EN1
EN3
Figure 1: Left SPLIT Example
parse with the Charniak parser (Charniak, 2000)
and convert the resulting phrase-structure trees to a
function-argument formalism, which, like the tec-
togrammatic formalism, removes function words.
This conversion is accomplished via deterministic
application of approximately 20 rules.
2.2 Aligning the Dependency Structures
We now generate the alignments between the pairs
of dependency structures we have created. We be-
gin by producing word alignments with a model very
similar to that of IBM Model 4 (Brown et al, 1993).
We keep fifty possible alignments and require that
each word has at least two possible alignments. We
then align phrases based on the alignments of the
words in each phrase span. If there is no satisfac-
tory alignment, then we allow for structural muta-
tions. The probabilities for these mutations are re-
fined via another round of alignment. The structural
mutations allowed are described below. Examples
are shown in phrase-structure format rather than de-
pendency format for ease of explanation.
92
BUD
CZ2
CZ1
bear stearns
N NN
spolec?nost
EN1
EN2
... stearns ...
NNP NNP
bear
... ...
Figure 2: BUD Example
? KEEP: No change. This is the default.
? SPLIT: One English phrase aligns with two
Czech phrases and splitting the English phrase
results in a better alignment. There are three
types of split (left, right, middle) whose proba-
bilities are also estimated. In the original struc-
ture of Figure 1, English node EN1 would align
with Czech nodes CZ1 and CZ2. Splitting the
English by adding child node EN3 results in a
better alignment.
? BUD: This adds a unary level in the English
tree in the case when one English node aligns
to two Czech nodes, but one of the Czech nodes
is the parent of the other. In Figure 2, the Czech
has one extra word ?spolec?nost? (?company?)
compared with the English. English node EN1
would normally align to both CZ1 and CZ2.
Adding a unary node EN2 to the English results
in a better alignment.
? ERASE: There is no corresponding Czech node
for the English one. In Figure 3, the English has
two nodes, EN1 and EN2, which have no corre-
sponding Czech nodes. Erasing them brings the
Czech and English structures into alignment.
? PHRASE-TO-WORD: An entire English
phrase aligns with one Czech word. This
operates similarly to ERASE.
NNJJ WDT VBD NNP
NNJJ WDT VBD NNP
ERASE ERASE
A N P V N
CZ2
CZ1
ktery?... rok srpen ...fiska?ln?? zar???
EN4
EN3
EN2EN1
year began august ...which... fiscal
EN4
EN3
year began august ...which... fiscal
Figure 3: ERASE Example
3 Translation Model
Given E , the parse of the English string, our trans-
lation model can be formalized as P (F | E). Let
E1 . . . En be the nodes in the English parse, F be
a parse of the Czech string, and F1 . . .Fm be the
nodes in the Czech parse. Then,
P (F | E) =
?
FforF
P (F1 . . .Fm | E1 . . . En) (2)
We initially make several strong independence as-
sumptions which we hope to eventually weaken.
The first is that each Czech parse node is generated
independently of every other one. Further, we spec-
ify that each English parse node generates exactly
one (possibly NULL) Czech parse node.
P (F | E) =
?
Fi?F
P (Fi | E1 . . . En) =
n?
i=1
P (Fi | Ei)
(3)
An English parse node Ei contains the following
information:
? An English word: ei
? A part of speech: tei
? A vector of n features (e.g. negation or tense):
< ?ei [1], . . . , ?
e
i [n] >
93
? A list of dependent nodes
In order to produce a Czech parse node Fi, we
must generate the following:
Lemma fi: We generate the Czech lemma fi de-
pendent only on the English word ei.
Part of Speech tfi : We generate Czech part of
speech tfi dependent on the part of speech of
the Czech parent tfpar(i) and the corresponding
English part of speech tei .
Features < ?fi [1], . . . , ?
f
i [n] >: There are several
features (see Table 1) associated with each
parse node. Of these, all except IND are typi-
cal morphological and analytical features. IND
(indicator) is a loosely-specified feature com-
prised of functors, where assigned, and other
words or small phrases (often prepositions)
which are attached to the node and indicate
something about the node?s function in the sen-
tence. (e.g. an IND of ?at? could indicate a
locative function). We generate each Czech
feature ?fi [j] dependent only on its correspond-
ing English feature ?ei [j].
Head Position hi: When an English word is
aligned to the head of a Czech phrase, the
English word is typically also the head of its
respective phrase. But, this is not always the
case, so we model the probability that the En-
glish head will be aligned to either the Czech
head or to one of its children. To simplify,
we set the probability for each particular child
being the head to be uniform in the number
of children. The head position is generated
independent of the rest of the sentence.
Structural Mutation mi: Dependency structures
are fairly well preserved across languages, but
there are cases when the structures need to be
modified. Section 2.2 contains descriptions
of the different structural changes which
we model. The mutation type is generated
independent of the rest of the sentence.
Feature Description
NEG Negation
STY Style (e.g. statement, question)
QUO Is node part of a quoted expression?
MD Modal verb associated with node
TEN Tense (past, present, future)
MOOD Mood (infinitive, perfect, progressive)
CONJ Is node part of a conjoined expression?
IND Indicator
Table 1: Features
3.1 Model with Independence Assumptions
With all of the independence assumptions described
above, the translation model becomes:
P (Fi | Ei) = P (fi | ei)P (t
f
i | t
e
i , t
f
par(i))
?P (hi)P (mi)
n?
j=1
P (?fi [j] | ?
e
i [j]) (4)
4 Training
The Czech and English data are preprocessed (see
Section 2.1) and the resulting dependency structures
are aligned (see Section 2.2). We estimate the model
parameters from this aligned data by maximum like-
lihood estimation. In addition, we gather the inverse
probabilities P (E | F ) for use in the figure of merit
which guides the decoder?s search.
5 Decoding
Given a Czech sentence to translate, we first pro-
cess it as described in Section 2.1. The resulting de-
pendency structure is the input to the decoder. The
decoder itself is a best-first decoder whose priority
queue holds partially-constructed English nodes.
For our figure of merit to guide the search, we use
the probability P (E | F ). We normalize this us-
ing the perplexity (2H ) to compensate for the differ-
ent number of possible values for the features ?[j].
Given two different features whose values have the
same probability, the figure of merit for the feature
with the greater uncertainty will be boosted. This
prevents features with few possible values from mo-
nopolizing the search at the expense of the other fea-
tures. Thus, for feature ?ei [j], the figure of merit is
FOM = P (?ei [j] | ?
f
i [j]) ? 2
H(?ei [j]|?
f
i [j]) (5)
94
Since our goal is to build a forest of partial trans-
lations, we translate each Czech dependency node
independently of the others. (As more conditioning
factors are added in the future, we will instead trans-
late small subtrees rather than single nodes.) Each
translated node Ei is constructed incrementally in the
following order:
1. Choose the head position hi
2. Generate the part of speech tei
3. For j = 1..n, generate ?ei [j]
4. Choose a structural mutation mi
English nodes continue to be generated until ei-
ther the queue or some other stopping condition
is reached (e.g. having a certain number of possi-
ble translations for each Czech node). After stop-
ping, we are left with a forest of English dependency
nodes or subtrees.
6 Language Model
We use a syntax-based language model which was
originally developed for use in speech recognition
(Charniak, 2001) and later adapted to work with a
syntax-based machine translation system (Charniak
et al, 2001). This language model requires a for-
est of partial phrase structures as input. Therefore,
the format of the output of the decoder must be
changed. This is the inverse transformation of the
one performed during corpus preparation. We ac-
complish this with a statistical tree transformation
model whose parameters are estimated during the
corpus preparation phase.
7 Evaluation
We propose to evaluate system performance with
version 0.9 of the NIST automated scorer (NIST,
2002), which is a modification of the BLEU sys-
tem (Papineni et al, 2001). BLEU calculates a score
based on a weighted sum of the counts of matching
n-grams, along with a penalty for a significant dif-
ference in length between the system output and the
reference translation closest in length. Experiments
have shown a high degree of correlation between
BLEU score and the translation quality judgments
of humans. The most interesting difference in the
NIST scorer is that it weights n-grams based on a
notion of informativeness. Details of the scorer can
be found in their paper.
For our experiments, we propose to use the data
from the PDT, which has already been segmented
into training, held out (or development test), and
evaluation sets. As a baseline, we will run the
GIZA++ implementation of IBM?s Model 4 trans-
lation algorithm under the same training conditions
as our own system (Al-Onaizan et al, 1999; Och and
Ney, 2000; Germann et al, 2001).
8 Future Work
Our first priority is to complete the final pieces so
that we have an end-to-end system to experiment
with. Once we are able to evaluate our system out-
put, our first priority will be to analyze the system
errors and adjust the model accordingly. We recog-
nize that our independence assumptions are gener-
ally too strong, and improving them is a hight pri-
ority. Adding more conditioning factors should im-
prove the quality of the decoder output as well as re-
ducing the amount of probability mass lost on struc-
tures which are not well formed. With this will come
sparse data issues, so it will also be important for us
to incorporate smoothing into the model.
There are many interesting subproblems which
deserve attention and we hope to examine at least a
couple of these in the near future. Among these are
discontinuous constituents, head switching, phrasal
translation, English word stemming, and improved
modeling of structural changes.
Acknowledgments
This work was supported in part by NSF grant
IGERT-9870676. We would like to thank Jan Hajic?,
Martin ?Cmejrek, Jan Cur???n for all of their assistance.
References
Yaser Al-Onaizan, Jan Curin, Michael Jahr, Kevin
Knight, John Lafferty, Dan Melamed, Franz-
Josef Och, David Purdy, Noah A. Smith, and
David Yarowsky. 1999. Statistical machine
translation: Final report, JHU workshop 1999.
www.clsp.jhu.edu/ws99/projects/mt/final report/mt-
final-report.ps.
95
Adam L. Berger, Peter F. Brown, Stephen A. Della Pietra,
Vincent J. Della Pietra, John R. Gillett, John D. Laf-
ferty, Robert L. Mercer, Harry Printz, and Lubos? Ures?.
1994. The Candide system for machine translation. In
Proceedings of the ARPA Human Language Technol-
ogy Workshop.
Alena Bo?hmova?, Jan Hajic?, Eva Hajic?ova?, and Barbora
Hladka?. 2001. The Prague Dependency Treebank:
Three-level annotation scenario. In Anne Abeille?, ed-
itor, Treebanks: Building and Using Syntactically An-
notated Corpora. Kluwer Academic Publishers.
Alena Bo?hmova?. 2001. Automatic procedures in tec-
togrammatical tagging. The Prague Bulletin of Math-
ematical Linguistics, 76.
Peter F. Brown, John Cocke, Stephen A. Della Pietra,
Vincent J. Della Pietra, Fredrick Jelinek, John D. Laf-
ferty, Robert L. Mercer, and Paul S. Roossin. 1990. A
statistical approach to machine translation. Computa-
tional Linguistics, 16(2):79?85.
Peter F. Brown, Stephen A. Della Petra, Vincent J.
Della Pietra, John D. Lafferty, and Robert L. Mer-
cer. 1992. Analysis, statistical transfer, and synthesis
in machine translation. In Proceedings of the Fourth
International Conference on Theoretical and Method-
ological Issues in Machine Translation, pages 83?100.
Peter F. Brown, Stephen A. Della Pietra, Vincent J.
Della Pietra, and Robert L. Mercer. 1993. The math-
ematics of machine translation: Parameter estimation.
Computational Linguistics, 19(2):263?311, June.
Eugene Charniak, Kevin Knight, and Kenji Yamada.
2001. Syntax-based language models for statistical
machine translation. In Proceedings of the 39th An-
nual Meeting of the Association for Computational
Linguistics, Toulouse, France, July.
Eugene Charniak. 2000. A maximum-entropy-inspired
parser. In Proceedings of the 1st Meeting of the North
American Chapter of the Association for Computa-
tional Linguistics.
Eugene Charniak. 2001. Immediate-head parsing for
language models. In Proceedings of the 39th Annual
Meeting of the Association for Computational Linguis-
tics, pages 116?123, Toulouse, France, July.
Martin ?Cmejrek, Jan Cur???n, and Jir??? Havelka. 2003.
Czech-English Dependency-based Machine Transla-
tion. In EACL 2003 Proceedings of the Conference,
pages 83?90, April 12?17, 2003.
Heidi Fox. 2002. Phrasal cohesion and statistical ma-
chine translation. In Proceedings of the 2002 Confer-
ence on Empirical Methods in Natural Language Pro-
cessing (EMNLP 2002), July.
Ulrich Germann, Michael Jahr, Kevin Knight, Daniel
Marcu, and Kenji Yamada. 2001. Fast decoding and
optimal decoding for machine translation. In Proceed-
ings of the 39th Annual Meeting of the Association for
Computational Linguistics.
Jan Hajic? and Barbora Hladka?. 1998. Tagging Inflec-
tive Languages: Prediction of Morphological Cate-
gories for a Rich, Structured Tagset. In Proceedings of
COLING-ACL Conference, pages 483?490, Montreal,
Canada.
Philip Koehn, Franz Josef Och, and Daniel Marcu. 2003.
Statistical phrase-based translation. In Proceedings of
the Human Language Technology and North Ameri-
can Association for Computational Linguistics Con-
ference, Edmonton, Canada, May.
Mitchell P. Marcus, Beatrice Santorini, and Mary Ann
Marcinkiewicz. 1993. Building a large annotated cor-
pus of English: The Penn Treebank. Computational
Linguistics, 13(2):313?330, June.
Mitchell Marcus, Grace Kim, Mary Ann Marcinkiewicz,
Robert MacIntyre, Ann Bies, Mark Ferguson, Karen
Katz, and Britta Schasberger. 1994. The Penn Tree-
bank: Annotating predicate argument structure. In
Proceedings of the ARPA Human Language Technol-
ogy Workshop, pages 114?119.
NIST. 2002. Automatic evaluation of machine trans-
lation quality using n-gram co-occurrence statistics.
www.nist.gov/speech/tests/mt/doc/ngram-study.pdf.
Franz Josef Och and Hermann Ney. 2000. Improved sta-
tistical alignment models. In Proceedings of the 38th
Annual Meeting of the Association for Computational
Linguistics, pages 440?447.
Kishore Papineni, Salim Roukos, Todd Ward, and Wei-
Jing Zhu. 2001. Bleu: A method for automatic evalu-
ation of machine translation. Technical report, IBM.
Dekai Wu and Hongsing Wong. 1998. Machine trans-
lation with a stochastic grammatical channel. In Pro-
ceedings of the 36th Annual Meeting of the Association
for Computational Linguistics, pages 1408?1414.
Kenji Yamada and Kevin Knight. 2001. A syntax-based
statistical translation model. In Proceedings of the
39th Annual Meeting of the Association for Compu-
tational Linguistics.
Zdene?k ?Zabokrtsky?, Petr Sgall, and Sas?o Dz?eroski. 2002.
Machine learning approach to automatic functor as-
signment in the Prague Dependency Treebank. In Pro-
ceedings of LREC 2002 (Third International Confer-
ence on Language Resources and Evaluation), vol-
ume V, pages 1513?1520, Las Palmas de Gran Ca-
naria, Spain.
96
