THE LEX ICAL  SEMANTICS  OF  COMPARATIVE  
EXPRESS IONS IN A MULT I -LEVEL  SEMANTIC  
PROCESSOR 
Duane E. O lawsky  
Computer  Science Dept. 
University of Minnesota 
4-192 EE /CSc i  Building 
200 Un ion  Street SE  
Minneapol is ,  MN 55455 
\ [o lawsky~umn-cs .es .umn.edu\]  
ABSTRACT 
Comparative xpressions (CEs) such as "big- 
ger than" and "more oranges than" are highly 
ambiguous, and their meaning is context depen- 
dent. Thus, they pose problems for the semantic 
interpretation algorithms typically used in nat- 
ural language database interfaces. We focus on 
the comparison attribute ambiguities that occur 
with CEs. To resolve these ambiguities our nat- 
ural language interface interacts with the user, 
finding out which of the possible interpretations 
was intended. Our multi-level semantic processor 
facilitates this interaction by recognizing the oc- 
currence of comparison attribute ambiguity and 
then calculating and presenting a list of candi- 
date comparison attributes from which the user 
may choc6e. 
I I PROBLEM DESCRIPT ION.  
Although there has been considerable work on the 
development of natural language database inter- 
faces, many difficult language interpretation prob- 
lems remain. One of these is the semantic inter- 
pretation of comparative expressions such as those 
shown in sentences (1) through (3). 
(1) Does ACME construct bet ter  buildings than 
ACE? 
(2) Does ACME construct buildings faster than 
ACE? 
(3) Are more  oranges than apples exported by 
Mexico? 
To interpret a comparative xpression (CE) a 
'natural language processor must determine (1) 
the entities to he compared, and (2) the at- 
tribute(s) of those entities to consider in per- 
forming the comparison. The selection of com- 
parison attributes is made difficult by the high 
level of lexical ambiguity exhibited by compara- 
tive predicates. For example, what pieces of data 
should be compared to answer query (1)? If the 
database contains information about foundation 
type, structural characteristics, wiring, and in- 
sulation, any of these attributes could be used. 
Similarly, when comparing orange and apple ex- 
ports as in query (3), we might compare numeric 
quantity, weight, volume, or monetary value. To 
further complicate matters, the plausible compar- 
ison attributes for a comparative predicate change 
with the arguments to which that predicate is ap- 
plied. Table 1 shows several examples of likely 
comparison attributes to use with the predicate 
"bigger" depending on the types of entity that 
are being compared. Since the system must de- 
termine for a comparative predicate the lexical 
definition intended by the user, this problem is, 
at heart, one of lexical ambiguity resolution. 
The problems discussed so far are similar to the 
well known vagueness and context sensitivity of 
adjectives (although they occur here even in sen- 
tences without adjectives such as (3)). Any pro- 
posed method of CE interpretation should also 
treat several other phenomena that are unique 
to comparatives. These are bipredicational com- 
parisons, cross-class comparisons, and pairability 
constraints. Bipredlcational comparisons in- 
volve two predicates, as shown in example (4) (the 
169 
Table 1: Examples of argument sensitivity in the 
meaning of ~bigger". 
Argument ype 
hotels number of rooms 
hospitMs number of beds 
houses square feet 
number of rooms, or 
number of bedrooms 
wheat farms number of acres 
d~iry farms number of cows 
countries number of people, 
or  land ~rea 
cars length, 
curb weight, 
passenger space, or 
passenger limit 
predicates are in boldface), and they use a differ- 
ent comparison attribute for each argument of the 
comparative. 
(4) John's car is wider than Mary's car is long. 
Bipredicational CEs have strong pa i rab i l l ty  
const rn ;n ts  (Hale 1970). That  is, there are re- 
strictions on the pairing of predicates in s bipred- 
icational CE. Example (5) gives a sentence 
that is semantically anomalous because it violates 
palrability constraints. 
(5) ? Bob's car is wider than it is heavy. 
A crc~s-class comparison involves arguments of 
radically different ypes as shown in (6). 
(6) Is the Metrodome bigger than Rona ld  
Reagan? I 
Interpreting this comparison requires that we find 
a stadium attribute and a person attribute which 
are in some sense comparable ( .g. stadium-height 
and person-height). Pairability constraints also 
apply indirectly to cross-class comparisons as can 
be seen in the oddness of (7). 
I Although this is am unusual comparison to request, it is 
perfectly un~ble ,  and the literal interpretation is 
easily answered. As pointed out to me by Karen Rysn, 
temce (6) has several po~ible metaphoric nterpretations 
(e.g. "Does the Metrodome get more news coverage than 
IRonaid Reapn?"). In this paper we will generally ignore 
metaphm-ic intcrpretatiom. HoweveF, using the approach 
we describe below, they could be handled in much the same 
way as the more liter, d ones. 
(7) ? The party was longer than my car. ~- 
Although we have only one predicate ("longer") in 
this sentence, it is difficult to find a comparable 
pair of attributes. The attribute describing the 
length of a party is not comparable to any of the 
attributes describing the length of a car. 
When faced with ambiguous input a natural 
language interface has two options. In the first 
one, it guesses at what the user wants and pro- 
rides the answer corresponding to that guess. In 
the second, it interacts with the user to obtain a 
more completely specified query. Although Op- 
tion 1 is easier to implement, it is also inflexible 
and can lead to miscommunication between the 
user and the interface. With Option 2, the system 
lets the user select the desired interpretation, re- 
suiting in greater flexibility and less chance of mis- 
understanding. It is the second option that we are 
exploring. To carry out Option 2 for CE interpre- 
tation the system must present o the user a list of 
the permissible comparison attribute pairs for the 
given CE. In Section 3 we will see how pairabil- 
ity constraints can be used to delimit these pairs. 
Comparatives add significant expressive power to 
an interface (Ballard 1988), and it is therefore im- 
portant that reliable techniques be developed to 
resolve the lexical ambiguities that occur in CEs. 
2 PRIOR WORK.  
For purposes of discnssion we will divide compara- 
tive expressions into the following commonly used 
classes: adject iva l ,  adverb ia l ,  and adnomlna l ,  
where the comparative element is based on an ad- 
jective, an adverb, or a noun, respectively. See 
(1)--(3) for an example of each type. Within 
linguistics, adjectival comparatives are the most 
studied of these three varieties. (See (Rusiecki 
1985) for a detailed description of the various 
types of adjectival comparative.) For work on 
the syntax of CEs see (Bresnan 1973), (Pinkham 
1985) and (Ryan 1983). Klein (1980), (1982) 
presents a formal semantics for adjectival CEs 
without using degrees or extents. It would be diffi- 
cult to apply his work computationally since there 
is no easy way to determine the positive and neg- 
ative extensions of adjectives upon which his the- 
ory rests. Hoeksema (1983) defines a set-theoretic 
2Scnt~mce (7) can perhaps be interpreted metaphori- 
cally (perhaps with humorotm intent), but it se~ns more 
difficult to do so than it does with (6). It is certainly hard 
to im~ what truth conditions (T) might have! 
170 
semantics for adjectival comparatives based on 
primitive grading relations that order the domain 
with respect o gradable adjectives. HIS primary 
concern is the relationship of comparatives to co- 
ordination and quantification, and he pays little 
attention to lexical ambiguities. Cresswell's work 
(Cresswell 1976) handles both adjectivals and ad- 
nominals and is closer in spirit to our own (see 
Section 3.1). It contains analogs of our Codomain 
Agreement Principle, mappings and base orders. 
The main difference is that whereas Cressweli al- 
ways uses degrees, we also allow base orders to be 
defined directly on the domain entities. 
Most of the work done on lexical ambiguity 
resolution (e.g. (Hirst 1984) and (Wilks 1975)) 
has focussed on homonymy (when words have a 
small number of unrelated meanings) rather than 
polysemy (when words have many closely related 
meanings) as occurs with CEs. The techniques 
developed for homonymy depend on large seman- 
tic differences between meanings and thus are not 
as useful for CEs. 
Although comparatives are frequently used as 
examples in the NLP literature (e.g. (Hendrix, 
Sacerdoti, Sagalowicz, and Slocum 1978), (Mar- 
tin, Appelt, and Pereira 1983) and (Pereira 
1983)), no one has presented a detailed treatment 
of the ambiguities in the selection of comparison 
attributes. Most NLP researchers provide neither 
a detailed explanation of how they treat compar- 
atives nor any characterization f the breadth of 
their treatment. Two exceptions are the recent 
papers of Ballard (1988) and Rayner and Banks 
(1988). The former treats adjectival and adnomi- 
hal comparatives, and is primarily concerned with 
the interpretation of expressions like "at least 20 
inches more than twice as long as". The selection 
of comparison attributes is not discussed in any 
detail. Rayner and Banks (1988) describe a logic 
programming approach to obtaining a parse and 
an initial logical formula for sentences containing 
a fairly broad range of CEs. They do not dis- 
cuss lexical semantics and thus do not deal with 
comparison attribute selection. 
This paper is an abbreviated version of a longer 
paper (Olawsky 1989), to which the reader is re- 
ferred for a more detailed presentation. 
3 SOLUTION APPROACH.  
In ~his section we describe a rule-based semantic 
processor that follows Option 2. To provide for 
user-controlled comparison attribute selection we 
augment the common lexical translation process 
(e.g. (Bronnenberg, Bunt, Landsbergen, Scha, 
Schoenmakers, and van Utteren 1980) and (Ryan, 
Root, and Olawsky 1988)) with a Mapping Selec- 
tor that communicates with the user and returns 
the results to the rule-based translator. The im- 
plementation of the approach described here is in 
progress and is proceeding well. 
3.1  Semant ic  Descr ip t ion  o f  Com-  
parat ives .  
We base our approach on the semantic interpreta- 
tion of a comparative predicate as a set-theoretic 
relation. A comparison defined by the relation 7~ 
is true if the denotations of the first and second 
arguments of the comparative predicate (i.e. its 
subject and object 3) form an element pair of 7~. 
It is tempting to claim that comparatives should 
be defined by orders rather than relations (we call 
this the Compar i son  Order  Claim). However, 
it can be shown (Olawsky 1989) that the compar- 
ison relation Lw for a bipredicational comparative 
like longer than ...  wide is neither asymmetric nor 
antisymmetric 4, and hence, Lw is not an order. 5
Comparison relations are not defined directly in 
our semantic description. Instead they are speci- 
fied in terms of three components: a base order,  
a sub ject  mapping,  and an ob ject  mapping.  
The base order is a set-theoretic order on some do- 
main (e.g. the obvious order on physical engths). 
The subject mapping is a mapping from the do- 
main of the denotation of the subject of the CE 
to the domain of the base order (e.g. the map- 
ping from a rectangle to its length). The object 
mapping is defined analogously. Let comparison 
relation ~ be defined by the base order B, and the 
subject and object mappings M, and Mo. Then 
(a,b) E 7~ if and only if (M,(a),Mo(b)) E B. It 
should be noted here that comparison attribute 
selection is now recast as the selection of subject 
and object mappings. 
3Our rea~ns for calling the first and second arguments 
of a CE the subject and object are syntactic and beyond 
the scope of this paper (see (Ryan 1983)). 
4It is ~ euy to show that Lt# is nontransitive. 
SKleln ((1980), p. 23) and Hoel~enm ((1983), pp. 410- 
411) both make clalms lmilar (but not identical) to the 
Comparmon Order Claim. It seems to us that bipred- 
icationak pose a problem for Hoeksema's analysis (see 
(Olawaky 1989)). Klein appears to relax his assumptions 
slightly when he deals with them. Cresswell (1976) dearly 
avoids the Comparison Order Claim. 
1'7'1 
By definition, the subject and object mappings 
must have the same codomain, and this codomain 
must be the domain of the base order. We call this 
the Codomain Agreement Principle, and it is 
through this principle that pairability constraints 
are enforced. For example, when interpreting the 
CE in sentence (5), we must find a subject map- 
ping for the width of Bob's car and an object map- 
ping for its weight, and these mappings must have 
the same codomain. However, this is impossible 
since all width mappings will have LENGTH as 
a codomain, and all weight mappings will have 
WEIGHT as a codomain. The Codomain Agree- 
ment Principle also helps explain the interpreta- 
tion of sentences (6) and (7). 
Before concluding this section we consider the 
semantic description of CEs in TEAM ((Grosz, 
Haas, Hendrix, Hobbs, Martin, Moore, Robinson, 
and Rosenschein 1982) and (Martin, Appelt, and 
Pereira 1983)), comparing it to ours. Since com- 
parative xpressions were not the main focus in 
these papers, we must piece together TEAM's 
treatment of CEs from the examples that are 
given. In (Grosz, Haas, Hendrix, Hobbs, Mar- 
tin, Moore, Robinson, and Rosenschein 1982), the 
CE "children older than 15 years" is translated 
to ((*MORE* OLD) child2 (YEAR 15)) where 
"*MORE* maps a predicate into a comparative 
along the scale corresponding to the predicate" (p. 
11). This implies that TEAM requires the same 
nmpping to be used for both the subject and ob- 
ject of the comparative. That would not work well 
for bipredicational CEs, and could also lead to 
problems for crose-claes comparisons. In (Martin, 
Appelt, and Pereira 1983) the examples contain 
predicates (e.g. salary.of and earn) which, on the 
surface, are similar to mappings. However, in con- 
trast to our approach, it does not appear that any 
special significance is given to these predicates. 
There is nothing in either paper to indicate that 
the many types of CEs are consistently translated 
to a base order, subject mapping and object map- 
ping as is done in our systerrL Furthermore, there 
is nothing analogous to the Codomain Agreement 
Principle discussed in either paper." Now, we move 
on to a presentation f how the semantic descrip- 
tion presented above is applied in our system. 
3.2 Genera l  Comments .  
We use a multi-level semantic processor (see 
(Bates and Bobrow 1983), (Bronnenberg, Bunt, 
Landsbergen, Scha, Schoenmakers, and van Ut- 
teren 1980), (Grosz, Haas, Hendrix, Hobbs, Mar- 
tin, Moore, Robinson, and Rosenschein 1982), 
(Martin, Appelt, and Pereira 1983) and (Ryan, 
Root, and Olawsky 1988) for descriptions ofsimi- 
lar systems). At each level queries are represented 
by logic-based formulas (see (Olawsky 1989) for 
examples) with generalized quantifiers ((Barwise 
and Cooper 1981), (Moore 1981) and (Pereira 
1983)) using predicates defined for that level. The 
initial level is based on often ambiguous English- 
oriented predicates. At the other end is a de- 
scription of the query in unambiguous database- 
oriented terms (i.e. the relation and attribute 
names used in the database). Between these lev- 
els we have a domain model evel where formulas 
represent the query in terms of the basic entities, 
attributes and relationships ofthe subject domain 
described in a domain model. These basic con- 
cepts are treated as unambiguous. Linking these 
levels are a series of translators, each of which is 
responsible for handling a particular semantic in- 
terpretation task. 
In this paper we restrict our attention to the 
translation from the English-oriented level (EL) 
to the domain model level (DML) since this is 
where CEs are disambiguated bychoosing unam- 
biguous mappings and base orders from the do- 
main model. To perform its task the EL-DML 
translator uses three sources of information. First, 
it has access to the domain model, a frame-based 
representation f the subject domain. Second, it 
uses the semantic lexicon which tells how to map 
each EL predicate into a DML formula. Finally, 
this translator will, when necessary, invoke the 
Mapping Selector--a program that uses the se- 
mantic lexicon and the domain model to guide 
the user in the selection of a comparison attribute 
pair. 
For our semantic formulas we extend the usual 
ontology of the predicate calculus with three new 
classes: sets, mass aggregations, and bunches. 
Sets are required for count noun adnominal com- 
paratives (e.g. "Has ACME built more ware- 
houses than ACE?") where we compare set cardi- 
nalities rather than entity attribute values. Given 
a class of mass entities (e.g. oil), a mass aggre- 
gation is the new instance of that class result- 
ing from the combination of zero or more old in- 
stances. For example, if John combines the oil 
from three cans into a large vat, the oil in that 
vat is an aggregation of the oil in the cans. It is 
not necessary that the original instances be phys- 
ically combined; it is sufficient merely to consider 
172 
them together conceptually. Mass aggregations 
are needed for mass noun adnominal compara, 
tires. Finally, we define the term bunch  to refer 
ambiguously both to  sets and to ma~ aggrega- 
tions. Bunches are used in EL where mass aggre- 
gations and sets are not yet distinguished. Sets, 
mass aggregations and hunches are described in 
semantic formulas by the *SET.OF ~, *MASS- 
OF*, and *BUNCH-OF* relations, respectively. 
These relations are unusual in that their second 
arguments are unary predicates erving as char- 
acteristic functions defining the components of 
the first argnment---a set, aggregation or hunch. 
For example, (*MASS-OF* rn (Awl(wheat wJJ)) is 
true in case m is the aggregation of all mass enti- 
ties ? such that Awl(wheat w)/(e) is true (i.e. e is 
wheat). 
3.3 Base Orders and Mappings. 
EL and DML formulas contain, for each CE, a 
base order and two mappings. Two sample EL 
base orders are more and less. DML base orders 
are typically defined on domains such as VOL- 
UME, and INTEGER, hut they can also be de- 
fined on domains that are not usually numeri- 
cally quantified such as BUILDING-QUALITY, 
or CLEVERNESS. More and less are ambiguous 
between the more specific DML orders. 
Most EL mappings /~ correspond one-for-one 
with an English adjective (or adverb). They are 
binary relations where the first argument is an 
entity ? from the domain and the second is the 
degree of ~-ness that e possesses. For example, 
if bi~ is an EL mapping, then in (bi~ e b), b is 
the degree of bigness for e. Of course, bif is sm- 
hignous. In contrast o adjectival and adverbial 
CEs, all adnominais use the ambiguous EL map- 
ping *MUCH-MANY* which pairs a bunch with 
its size. 
In most cases, a DML mapping is a relation 
whose first argument is an entity from some class 
in the core of the domain model and whose second 
argument is from the domain of a base order. In 
the mapping predication (DM_w-storage-rolume 
w v) the first argument is a warehouse, and the 
second is a volume. DM.w-storage.volurne could 
serve as the translation of big ~ when applied to a 
warehouse. CEs based on count nouns generally 
use the *CARDINALITY* mapping which is like 
other mappings except that its first argument is 
a set of entities from a domain model class rather 
than a member of the class. The second argument 
is always an integer. Mass noun comparatives re- 
quire a slightly different approach. Since we are 
dealing with a mass aggregation rather than a set, 
the *CARDINALITY* mapping is inapplicable. 
To measure the size of an aggregation we com- 
bine, according to some function, the attribute 
values (e.g. weight or volume) of the components 
of the aggregation, s Thus, the mappings used for 
mass adnominal comparatives are based on the 
attributes of the appropriate class of mass enti- 
ties. 
3.4 EL-DML Translation Rules. 
As stated above, EL and DML are linked by 
a translator that uses rules defined in the se- 
mantic lexicon (see (Olawsky 1989) for sample 
rules). These rules constitute definitions of the 
EL predicates in terms of DML formulas. Our 
system employs three kinds of translation rules-- 
Trans, MTrans, and BTrans. Trans  rules have 
four components: a template  to he matched 
against an EL predication, an EL context  spec- 
if ication, a DML context  specif ication, and 
the DML t r~r~lat lon of the EL predication. ~ 
The context specifications are used to resolve am- 
higuities on the basis of other predications in 
the EL formula and the (incomplete) DML for- 
mula. A rule is applicable only if its context 
specifications are satisfied. Although a predica- 
tion in an EL context specification must unif~ 
with some predication in the context, subsuml>- 
tion relationships are used in matching DML 
context specifications. Thus, the DML context 
specification (DM.huilding b) will be satisfied by 
(DM_wareho~ae b) since DM_building subsumes 
DM.warehouse. MTrans  rules are intended for 
the translation of subject and object mapping 
predications from EL to DML. They have two ex- 
tra components that indicate the base order and 
the mapping to he used in DML. This additional 
information is used to enforce the Codomain 
Agreement Principle and to help in the user inter- 
action described in Section 3.5. Finally, BTrans  
eAlthough the ~regat ion  function would likely be 
SUM for attributes uch as weight, volume, and value, 
othor functions are poesible. For example, AVERAGE 
might be used for & nutritional-quallty attribute of an agri- 
cultural commodity. The aggregation function is not ex- 
plicltly reflected in our system until the database l vel 
7Trans rules are nearly identical to the lexical trans- 
lation rules used in the ATOZ system (Ryan, Root, and 
Olawsky 1988). However, our rules do have some addi- 
tional features, one of which will be discussed below. 
173 
rules are used to translate *BUNCH-OF* predi- 
cations to DML. 
One noteworthy feature of our translation rules 
is that they can look inside a functional A- 
argument o satisfy a context specification, s We 
call these A-context  speci f icat ions,  and they 
may be used inside both EL and DML context 
specifications for rules of all three types. How- 
ever, it is only in BTrans rules that they can occur 
as a top level specification. Top level A-context 
specifications (e.g. (Ab \[(DM.building b)\])) are 
matched to the functional argument of the rele- 
vant *BUNCH-OF* predication. This match is 
performed by treating the body of the A-context 
specification as a new, independent context spec- 
ification which must be satisfied by predications 
inside the body of the functional argument. In 
Trans and MTrans rules, a A-context specifica- 
tion can occur only as an argument of some 
normal predicational context specification. For 
example, the specification (*MA$$-OF*b (Ac 
\[(DM_commodi~y c)\])) can be used in any DML 
context specification. It checks whether b is a 
mass of some commodity. Just as standard con- 
text specifications provide a way to examine the 
properties of the arguments of a predication being 
translated, A-context specifications provide a way 
to determine the contents of a bunch by inspect- 
ing the definition of its characteristic function. 
Before continuing, we compare our context 
matching mechanism to the similar one used 
in the PHLIQA1 system (Bronnenberg, Bunt, 
Landsbergen, Scha, Schoenmakers, and van Ut- 
teren 1980). This system uses a typed seman- 
tic language, and context checking is based en- 
tirely on the type system. As a result, PHLIQA1 
can duplicate the effect of context specifications 
like (DM.building b) by requiring that b have 
type DM_buildin~. However, PHLIQA1 can- 
not handle more complex specifications such as 
((DM_building b) (DM.b-owner bACME)) since 
there is no semantic type in PHLIQA1 that would 
correspond to this subset of the buildings in the 
domain. 9 The same comments apply to A-context 
specifications which can be declared in PHLIQA1 
$This is an extension to the rules used in ATOZ (Ryan, 
Root, and Olawsky 1988) which do not Allow functions M 
arguments and therefore never need this kind of context  
checking. 
9One could p~-haps modify the PHLIQA1 world model 
to  contain such subclasses of buildings, but this would 
eventually lead to a very complex model It would also 
be difficult or impo~ible to keep such a model hierarchical 
in structure. 
by specifying a functional semantic type. That 
is, (Ab (DM_building b)) is written as the type 
DM_buildin$ ---, truthvalue, a function from build- 
ings to truth values. As with standard context 
specifications, (Ab (DM_building b) (DM_b-owner 
b A CME)) cannot be expressed as a type re- 
striction. Thus, the context specifications used 
in PHLIQA1 offer less discrimination power than 
those used in our system. 
There is one other difference regarding A- 
context specifications that should be noted 
here. The context specification (Ab (DM_budding 
b)) will be satisfied by the expression (A w 
(DM.warehouse w)). However, in PHLIQA1 the 
type DM_building --* truthvalue will not match 
the type DM~warehouse-* truthvalue. From this, 
we see that PHLIQA1 does not use subsumption 
information in matching A-context specifications, 
while our system does. 
3 .5  T rans la t ion  and  Mapp ing  Se-  
lec t ion .  
When translating an input sentence containing a
comparative expression from EL to DML, the sys- 
tem first applies Trans and Btrans rules to trans- 
late the predications that do not represent map- 
pings or base orders. Next, comparison attributes 
must be selected. The system recognizes compar- 
ison attribute ambiguity when there is more than 
one applicable MTrans rule for a particular EL 
mapping predicate. We define a cand idate  map-  
p ing as any DML mapping that, on the basis of an 
applicable MTraus rule, can serve as the transla- 
tion of a mapping in an EL formula. Assume that 
for an EL predication (big ~ w a) in a given context 
there are three applicable MTrans rules trans- 
lating big' to the three DML mappings DMow- 
storage-volume, DM.w-storage-area, and DM_b- 
total-area, respectively. All three of these DML 
mappings would then be candidates with either 
VOLUME or AREA as the corresponding base 
order. 
The system examines the semantic lexicon to 
determine a list of candidate mappings for each 
EL mapping. A candidate is removed from one 
of these lists if there is no compatible mapping in 
the other list. Compat ib le  mapp ings  are those 
that allow the Codomain Agreement Principle to 
be satisfied, and they are easily identified by ex- 
amining the base order component of the MTrans 
rules being used. All of the remaining candidates 
174 
in one of the lists are presented to the user who 
may select a candidate mapping. Next, the se- 
mantic processor presents to the user those can- 
didates for the other EL mapping that are com- 
patible with her first choice. She must select one 
of these remaining candidates as the translation 
for the second mapping. Based on her choices, 
two MTraus rules (one for each EL mapping) are 
applied, and in this way the EL mapping predica- 
tions are translated to DML formulas. Once this 
is completed, the processor can easily translate 
the EL base order to the DML base order listed in 
both of the MTraus rules it used (with any neces- 
sary adjustments in the direction of comparison). 
4 COMMENTS AND CONCLU-  
SIONS. 
We are currently examining some additional is- 
sues. First, once candidate mappings are ob- 
tained, how should they be explained to the user? 
In the present design text is stored along with 
the declaration of each mapping, and that text is 
used to describe the mapping to the user. This ap- 
proach is somewhat limited, especially for adnom- 
inal comparatives given their flexibility and the 
relatively small information content of the *CAR- 
D INAL ITY  ~ mapping. A more general technique 
would use natural language generation to explain 
the semantic import of each mapping as applied 
to its arguments. Perhaps there are compromise 
approaches between these two extremes (e.g. some 
kind a pseudo-English explanations). 
Second, it seems desirable that the system could 
work automatically without asking the user which 
mappings to use. Perhaps the system could 
choose a mapping, do the query, present he re- 
suits and then tell the user what interpretation 
was assumed (and offer to try another interpreta- 
tion). This works well as long as either (a) the sys- 
tem almost always selects the mapping intended 
by the user, or (b) the cost of an incorrect choice 
(i.e. the wasted query time) is small. If the sys- 
tem frequently makes a poor choice and wastes 
a lot of time, this approach could be quite an- 
noying to a user. Crucial to the success of this 
automatic approach is the ability to reliably pre- 
dict the resources required to perform a query so 
that the risk of guessing can be weighed against 
the benefits. A similar issue was pointed out by 
an anonymous reviewer. We noted in Section 1 
that for sentence (3) (repeated here as (8)) 
(8) Are more oranges than apples exported by 
Mexico? 
the comparison could be based on quantity, 
weight, volume, or value. If the answer is the 
same regardless of the basis for comparison, a
"friendly" system would realize this and not re- 
quire the user to choose comparison attributes. 
Unfortunately, this realization is based on exten- 
sional rather than intentional equivalence, and 
hence, the system must perform all four (in this 
case) queries and compare the answers. The extra 
cost could be prohibitive. Again, the system must 
predict query performance r source requirements 
to know whether this approach is worthwhile for 
a particular query. See (Olawsky 1989) for more 
information on further work. 
To summarize, we have examined a number of 
issues associated with the semantic interpretation 
of comparative expressions and have developed 
techniques for representing the semantics of CEs 
and for interacting with the user to resolve com- 
parison attribute ambiguities. These techniques 
will work for adjectival, adverbial, and adnomi- 
hal comparatives and for both numerically and 
non-numerieally based comparisons ( ee (Olawsky 
1989) for more on this). We are presently com- 
pleting the implementation f our approach in 
Common Lisp using the SunView x? window sys- 
tem as a medium for user interaction. Most pre- 
vious techniques for handling lexical ambiguity 
work best with homonymy since they depend on 
large semantic differences between the possible in- 
terpretations of a lexieal item. Our approach, on 
the other hand, does not depend solely on these 
semantic differences and handles polysemy well. 
5 ACKNOWLEDGEMENTS.  
I wish to thank the University of Minnesota Grad- 
uate School for supporting this research through 
the Doctoral Dissertation Fellowship program. I
also want to thank Maria Gini, Michael Kac, 
Karen Ryan, Ron Zacharski, and John Carlis for 
discussions and suggestions regarding this work. 
Re ferences  
BMlard, Bruce W. June 1988 A General Compu- 
tational Treatment of Comparatives for Natural 
Language Question Answering. In: ~6th Annual 
X?SunView is a trademark of Sun Microsystenm, Inc. 
175 
Meeting of the Association for Computational Lin. 
guisticz. Buffalo, NY. 
Barwise, Jan and Cooper, Robin. 1981 Generalized 
Quantifiers and Natural Language. Linguistics 
and Philosophy 4(2): 159-219. 
Bates, Madeleine and Bobrow, Robert J. 1983 Infor- 
mation Retrieval Using s Transportable Natural 
Language Interfxce. In: Research and Develop- 
ment in Information Retrieval: Proceedings of the 
Sixth Annual International A CM SIGIR Confer- 
ence, Bethesda, Md. New York: 81-86. 
Bresnan, Joa~n W. 1973 Synte~x of the Comparative 
Clause Construction i English. Linguistic Inquiry 
4(3): 275-343. 
Bronnenberg, W. J. H. J.; Bunt, H. C.; Lxndsber- 
gen, S. P. J.; Schx, R. J. H.; Schoenmakers, W. J.; 
and van Utteren, E. P. C. 1980 The Question- 
Answering System PHLIQA1. In: Bolc, L., Ed., 
Natural Language Question Answering Systems. 
Macmillan. 
Cresswell, M. J. 1976 The Semantics of Degree. In: 
Pxrtee, Barbara, Ed., Montague Grammar. Aca- 
demic Press: 261-292. 
Grmz, Barbaxa; Haas, Norman; Hendrix, Gary; 
Hobbs, Jerry; Martin, Paul; Moore, Robert; 
Robinson, Jane; and Rosenschein, Stanley. 
November 1982 DIALOGIC: A Core Natural- 
Language Processing System. Tech. Note 270, 
Artificial Intelligence Center, SRI International, 
Menlo Park, California. 
Hale, Austin. 1970 Conditions on English compara- 
tive clause pairings. In: Jacobs, R. A. and Rosen- 
bourn, P., Eds., Readings in English Transforma- 
tional Grammar. Ginn & Co., Waltham, Mass.: 
30-50. 
Hendrix, Gaxy G.; Sacerdoti, Earl D.; Sagalowicz, 
Daniel; and Slocum, Jonathan. 1978 Develop- 
ing a Natural Language Interface to Complex 
Dxt~. A CM Transactions on Database Systems 
3(2): 105-147. 
Hirst, Graeme John. May 1984 Semantic Interpreta- 
tion Against Ambiguity. PhD thesis, Computer 
Science Dept., Brown University. 
Hoeksema, Jack. 1983 Negative Polarity and the 
Comparative. Natural Language and Linguistic 
Theory 1: 403-434. 
Klein, Ewxn. 1980 A Semantics for Positive and Com- 
parative Adjectives. Linguistics and Philosophy 4: 
1-46. 
Klein, Ewan. 1982 The Interpretation of Adjectival 
Comparatives. Linguistics 18: 113-136. 
Martin, Paul; Appelt, Douglas; and Pereirx, Fer- 
nxndo. 1983 Transportability and Generality in a 
Natural-Language Interface System. In: Proceed- 
ings of the Eighth International Joint Conference 
on Artificial Intelligence, Karisruhe, West Ger- 
many. William Kaufmxnn, Inc., Los Altos: 573- 
581. 
Moore, Robert C. 1981 Problems in Logical Form. 
In: Proceedings of the 19th Annual ~\[eeting. As- 
sociation for Computational Linguistics, Stanford, 
Ca/ifornia: 117-124. 
Olawsky, Duxne E. April 1989 The Lexical Seman- 
tics of Comparative Expressions in a Mull-Level 
Semantic Processor. Technical Report CSci TR 
89-19, Computer Science Dept., University of Min- 
nesota, Minneapolis, MN. 
Percirx, Fernxndo. 1983 Logic for Natural Language 
Analysis. Technical Note 275, Artificial Intelli- 
gence Center, Computer Science and Technology 
Division, SRI International, Menlo Park, Califor- 
nlx. Ph.D. dissertation, Department of Artificial 
Intelligence, University of Edinburgh. 
Pink, ham, Jessie Elizabeth. 1985 The Formation of 
Comparative Clauses in French and English. Gar- 
land Publishing Inc, New York. Also available 
from Indian~ University Linguistics Club, Bloom- 
ington, IN, August 1982. 
P~yner, Mxnny and Banks, Amelie. June 1988 Pars- 
ing and Interpreting Comparatives. In: ~6th An- 
nual Meeting of the Association for Computational 
Linguistic. Buffalo, NY. 
Rusiecki, Jan. 1985 Adjectives and Comparison in 
Englidt: A Semantic Study. Longman Inc., New 
York. 
Ryem, Karen L.; Root, Rebecca; and Olawsky, Duxne. 
February 1988 Application-Specific Issues in NLI 
Development for a Diagnostic Expert System. In: 
Association for Computational Linguistics Second 
Coherence on Applied Natural Language Process- 
ing. Austin, Texas. 
Ryxn, Karen L. 1983 A Grammar of the English 
Comparative. PhD thesis, University of Min- 
nesota. Reproduced by Indiana University Lin- 
guistics Club, Bloomington Indiana, 1986. 
Wilks, Yorick. 1975 An Intelligent Analyzer and Un- 
derstander of English. CACM 18(5): 264-274. 
176 
