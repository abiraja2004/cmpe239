ANSWERS AND QUEST IONS:  PROCESSING MESSAGES AND 
QUERIES*  
Catherine N. Ball, Deborah Dahl, Lewis M. Norton, Lynette Hirschman, Carl Weir, Marcia Linebarger 
Unisys Corporation 
Paoli Research Center 
P.O. Box 517, Paoli PA  19301 
ABSTRACT 
This paper describes issues in adapting the PUNDIT  system, designed originally for message processing, 
to a query-answering system for the VOYAGER application. The resulting system, whose architecture and 
capabilities are described here, represents a first step towards our goal of demonstrating spoken language 
understanding in an interactive problem-solving context. 
INTRODUCTION 
The application which we describe in this paper is a natural anguage interface to VOYAGER, an expert 
system which provides navigational ssistance for the area between MIT and Harvard 1. The application 
is well-suited to exploring the role of natural anguage understanding in an interactive problem-solving 
context: the expert system knows enough about its domain to allow extended problem-solving dialogue, 
e.g. for a user to find a hotel near MIT, find a nearby Italian restaurant, and get directions from the hotel 
to the restaurant (see below). 
Our ultimate goal is to process spoken input, and indeed, dialogue is, to use the terms of \[Bib88\], a 
stereotypically oral genre. A reasonable strategy for incrementally arriving at this goal is to begin with 
typed input. This approach allows us to explore general issues in handling dialogue, and further allows 
us to look at ways in which characteristics of the genre, aspects of the task, the informational structure 
of the utterance and the discourse context can all be used to limit the search space for spoken language 
recognition. 
The following dialogue illustrates a typical problem-solving session with VOYAGER (note: utterances la- 
belled 'VFE' are contributed by the VOYAGER front-end, discussed shortly). 
User :  I s  there  a hote l  near  MIT? 
VFE : I ' l l  ask  Voyager . . .  
Vgr  : Z can ' t  determine  i f  ob jec ts  SLre near  someth ing .  
I ' l l  t ry  to  f ind  the  neares t  one .  
The neares t  hote l  to  NIT i s  Mar r io t t .  
Mar r io t t  i s  l ocated  a t  the  in tersect ion  o f  Broadway St reet  and  Th i rd  
S t reet .  
User :  I s  there  an  I ta l ian  res taurant  near  the  hote l7  
VFE : I ' l l  ask  Voyager . . .  
Vs r  : I can ' t  determine  i f  ob jec ts  a re  nesL~ someth ing .  
I ' l l  t ry  to  f ind  the  neares t  one .  
The neares t  I ta l ian  RESTAURANT to  Mar r io t t  i s  Ber tucc i ' s .  
*This  work has  been suppor ted  by DARPA contract  N00014-89-0-0171, admln ls tered  by the O~ce of  Naval  Research.  
1The VOYAGER sys tem has  been made available to us  by Victor Zue of MIT ,  to whom we acknowledge our  grat i tude.  The  
vers ion of  VOYAGER descr ibed in this  paper  is the  June  89 version. The  capabi l i t ies of  VOYAGER have since been slgDJflcant|y 
extended,  and  all d lscuss ion of  VOYAGER in this  paper  appl ies ordy to this  par t i cu lar  vers ion of the  system.  
60 
Ber tucc i ' s  i s  l ocated  a t  799 Na in  S t reet .  
User :  Hoe do I ge t  to  the  res taurant  f rom the  Nazr?ot t?  
VFE : I ' l l  ask  Voyager . . .  
Vgr :  I ' l l  t ry  to  f ind  the  best  way to  get  f rom Ne~rr io t t  to  Ber tucc i 'e .  
S ta~:t  f rom Na~r io t t  on Broadeay  St reet .  
? f te r  you  c ross  C la~k St reet ,  take  the  next  le f t  onto  Windsor  S t reet .  
There  i s  a t ra f f i c  l ight  there .  
? f te r  you  pass  Schoo l  S t reet  on the  r ight ,  take  the  next  r ight  onto  
Na in  S t reet .  There  i s  a t ra f f i c  l ight  there .  
Ber tucc i ' s  i s  about  fo r ty  yards  doen  on youx  r ight  s ide .  
User :  Hoe long  wou ld  that  take?  
(etc . )  
MESSAGE PROCESSING AND QUEST ION-ANSWERING 
The PUNDIT  natural language processing system was initially developed in the context of message-processing 
applications. Because PUNDIT  is a modular system, typical potting tasks include the creation of a domain- 
specific lexicon, knowledge base, and semantics rules. Another common feature is basic extensions to 
handle constructions which are part of the standard written language, but which have not previously 
appeared in the data (e.g. comparatives, superlatives, address expressions). More interesting are the 
extensions occasioned by basic differences between messages and face-to-(inter)face conversational inter- 
action. 
Basic Differences Between Messages and Voyager Dialogue 
To fully characterize these differences requires representative data from naturally-occurring messages and 
task-oriented dialogue. We have the former; it is our plan to collect the latter, possibly using PUNDIT + 
VOYAGER as a data collection vehicle. For present purposes, we may highlight some of the observed if- 
ferences and similarities. Our message corpora consist largely of short narratives in what has been called 
telegraphic style (cf. \[GK86\]). As a consequence, we find frequent agentless passives, noun-noun com- 
pounds, nominalizations, run-on sentences, and zeroing of determiners, ubjects, copula, and prepositions. 
Explicit pronouns and dummy subjects are raze, as are interrogatives, indirect questions, imperatives, and 
conditionals. Where temporal relations are explicitly marked, they are commonly marked by preposed 
time adverbials. Modals are raze. 
In contrast, our initial corpus of user inputs to VOYAGER shows, not surprisingly, that interrogatives and 
imperatives are more frequent han statements. The types of zeroing seen in telegraphic narrative do not 
occur in the corpus 2, nor do nominalizations and run-ons. Passives are rare. Dummy it and there are 
common, as are I and you, and (in the context of questions about restaurants) they. Preposing (other than 
wh-movement) does not occur. Modals are common. Many of these differences are p~edicted by considering 
the two genres to be at opposite ends along Biber's textual dimensions of 'involved versus informational 
production', narrative vs. non-narrative concerns', and 'abstract vs. non-abstract information' \[Bib88\]. 
We plan to take advantage of such differences to tune the system for the VOYAGER task. 
In terms of discourse structure, we might expect here to be radical differences between messages and dia- 
logue, but in fact here there are interesting similarities. The basic interactional unit in VOYAGER dialogue 
can be characterized as the request-response pair (e.g. Where are you? At MIT.). A similar request- 
response structure appears in messages containing labelled discourse segments (or header fields) , e.g. 
Fa i led  Par t :  system tape.  Cause of Fa i lu re :  tape ,as  wound backwards. Here, the message 
originator can be viewed as answering the implicit questions What part failed? What caused the failure ? 
2Nevertheless,  ell iptical quest ions and  answers are certainly seen in task-or lented dialogue, e.g. North:  \[It meant  to\] ... 
basical ly clear up  the record. Nields: Did you? North:  Tried to. Nields: Then?  North:  No ... \[Scr87\] 
61 
\[Bal89\] discusses our approach to handling such structured messages as a series of  quest ion/answer pairs, 
and we were able to extend this approach to dialogue. 
The interactional structure of  monologue and dialogue is, of  course, quite different. To provide the control 
structure for dialogue, we extended a query front-end (QFE) which had been developed for database query 
applications. The result is a general dialogue manager which can be used for a variety of  interactive 
applications. 
SYSTEM ARCHITECTURE 
The system contains four major  components:  the VOYAGER front-end (VFE), PUNDIT,  a query translat ion 
and interface module (QTIP), and the VOYAGER expert system. The first three components are currently 
running on Sun workstations under Quintus Prolog, and VOYAGER, which is written in Lisp, runs on a 
Symbolics machine. A simplified system flow diagram is shown in Figure 1. 
query /Response  
USER 
Response /Query  
I 
t 
I 
___V___  
VFE \[ 
t 
I 
I I 
I I 
\[ I 
I I 
I I 
t I 
user  input 
+ Context  
. . . . . . . . . .  > I I 
NewContext  \[ PUNDIT I 
< . . . . . . . . .  I I 
New I n fo  
+ Context  
. . . . . . . . . . . . .  > 
Response/ 
er rors  
< . . . . . . . .  
\] I funct ion  ca l l s  
I QTIP \[ . . . . . .  . . . - - ->  
\[ I response  
I . . . . . .  I<  . . . . .  . . . - - -  
Vgr resp .  
+ Context  I J 
. . . . . . . . . . . . . .  > \[ PUNDIT I 
NewContext \[ \[ 
< I \[ 
V 
0 
Y 
A 
G 
E 
R 
Figure 1: PUNDIT -~- VOYAGER System Flow 
VFE is a dialogue manager,  which uses PUNDIT and QTIP as resources to interpret and respond to the 
user's requests. As discussed below, VOYAGER is also a conversational participant, whose utterances must 
62 
be analyzed and integrated into the discourse context. VFE administers the turn-taking structure, and 
maintains a higher-level model of the discourse than that available to PUNDIT. This level of knowledge 
enables it, for example, to call the parser in different modes, depending on preceding discourse (see below). 
VFE alSO keeps track of the current speaker and hearer, so that PUNDIT's Reference Resolution component 
can correctly interpret I and you. 
PUNDIT, as described in (\[HPD+89\], \[PDP+86\], \[Dah86\]), provides syntactic, semantic, and pragmatic 
interpretation. The input to PUNDIT is currently text, and the output is a set of semantic representations 
and other predications representing the discourse context (the DISCOURSE LIST), and a list of entities in 
focus, ordered by saliency (the FOCUS LIST). 
QTIP'S function is to translate PUNDIT representations into LISP function calls, to pass these to VOYAGER, 
and to return VOYAGER'S response to VFE. QTIP also incorporates ome knowledge about VOYAGER'S 
capabilities which enables it to trap certain types of queries for appropriate action by VFE. For example, 
VOYAGER cannot answer direction requests with an unspecified starting point, unless it knows where the 
user is. In this case, QTIP informs VFE that it must elicit the user's location. As another example, VOYAGER 
cannot answer questions about whether a class of objects is located on a street. QTIP traps such questions, 
and VFE informs the user: 
User :  I s  there  a subway s ta t ion  on Church  St reet?  
VFE : Sor ry ,  Voyager  can ' t  determine  whether  someth ing  i s  on a s t reet .  
QTIP a l so  monitors the state of the machine-machine interface to VOYAGER, and notifies VFE when the 
link is down or VOYAGER is not loaded; VFE then notifies the user. 
The final component is the VOYAGER expert system, a version of which has been made available to us by 
MIT. VOYAGER includes a generation component, and one of our initial issues was how to deal with its 
output. Clearly, it would be a poor sort of interactive system that did not allow for ordinary anaphoric 
and definite reference to entities introduced in the course of the conversation, e.g. to Royal East in the 
example below: 
A: I s  there  a res taurant  near  here?  
B: . . .  The neaxest  res tauxant  to  HIT i s  Roya l  East  . . .  
?:  What k ind  of  food  does  i t  serve7  
However, in order to integrate VOYAGER'S conversational contribution into the discourse context, we were 
faced with the choice of (a) modifying VOYAGER to return some semantic representation of its utterances 
(together with information relevant o focusing), or (b) simply treating VOYAGER as an ordinary con- 
versational participant, and using PUNDIT to analyze what VOYAGER said. The latter proved the most 
expedient course of action. Though not the most efficient approach in the long run, it has the unexpected 
benefit of allowing us to look at issues on both sides of the dialogue. 
MAINTAIN ING THE D ISCOURSE CONTEXT 
Interactive systems must provide for the strategies by which speakers refer to what has been previously 
discussed, e.g. one-anaphora: 
Q1. Is there a restaurant that serves seafood near MIT? ... Q2. Is there one near Harvard? 
A system which does not handle anaphoric and definite references requires unnatural behaviour on the 
part of the user, who will be forced to refer to all entities as though they were brand-new in the discourse, 
e.g. Q2': 
Q2'. Is there a restaurant that serves seafood near Harvard? 
63 
But it is clearly not sufficient o allow reference only to what the user has said, for the system's response 
forms part of the user's discourse context, as illustrated above and below. 
These points, of course, are not specific to the application or domain, but adhere to language and dia- 
logue. For this reason, the discourse processing facilities of PUNDIT ate largely embodied in the domain- 
independent Reference Resolution module. This module, which required no significant extensions for the 
VOYAGER application, is capable of handling a variety of referential strategies. In the following annotated 
dialogue, we illustrate some of the capabilities of Reference Resolution and the importance of understand- 
ing both sides of the dialogue. 
! User :  
2 VFE : 
3 Vgr : 
I s  there  a res taurant  near  Harvard  ? 
I ' l l  ask  Voyager . . .  
I can ' t  determine  i f  ob jec ts  a re  near  someth ing .  
I ' l l  t ry  to  f ind  the  nearest  one .  
The nearest  res taurant  to  Harvard  Un ivers i ty  i s  Border  Care .  
Border  Care  i s  located  a t  32 Church  St reet .  
Comments :  VOYAGER's response is processed by PUNDIT and integrated into the discourse 
context. As a result, the Border Cafe enters the list of entities in focus, and is thus available 
for anaphoric reference in (4) below. 
4 User :  What k ind  o f  food  does  i t  serve  ? 
8 VFE : X ' l l  ask  Voyager . . .  
6 Vgr : Border  Care  serves  Mex ican  food .  
Comments :  i t -  the user is referring to the Border Care, an entity introduced by VOYAGER in 
turn (3). Reference Resolution quickly finds this entity, which is at the head of the Focus List. 
7 User :  How do I get  there?  
8 VFR : X' l l  ask  Voyager . . .  
Where  are  youY 
9 User :  At NIT .  
10 VFE : Ok. I w i l l  te l l  Voyager . . .  
11 Vgr : MIT i s  located  in  the  area  o f  77 Massachuset ts  Avenue.  
I ' l l  t ry  to  f ind  the  beet  way to  got  f rom HIT to  Border  Care .  
I f  your  car  i s  on the  same s ide  of  the  s t reet  as  NITp s tar t  d r iv ing .  
Take the  next  le f t  onto  Hassachuset ts  Avenue.  There  i s  a t ra f f i c  l ight  
there .  
A f te r  you  c ross  Garden  St reet ,  take  the  next  r ight  onto  Church  St reet .  
Border  Care  i s  about  one e ighth  mi le  down on your  le f t  s ide .  
Comments :  there in (7) is interpreted as an anaphoric reference to a salient location. Note the 
clarification dialogue (VOYAGER will need to know the starting point), where VFE becomes the 
querier. Since there is a salient wh-query in the context (Where are you?), VFE anticipates a 
short response s and calls the parser and semantics in a special mode. The user's short response 
is analyzed and bound to the variable in the query (where), and VFE creates a new proposition: 
The user is at MIT. This information, together with the translation of the original query (How 
do f get there?) is passed to VOYAGER. 
3For purposes of the present discussion, a short response is one which is not a complete sentence, e.g. What im your name f
Mary Smith vs. My name ia Mary Smith. See \[Hiz79\] for a discussion of short responses. 
64 
12 User :  Nhat ' s  the  phone  number?  
13 VFE : I ' l l  ask  Voyager . . .  
14 Vgr  : The te lephone  number of  Border  Care  i s  864-6100.  
Comments :  the phone number is a definite reference to an inferrable entity (cf. \[Pri81\]). There 
is no previously mentioned telephone number, and yet it is a stereotypic assumption that certain 
classes of objects, e.g. commercial establishments, have phone numbers. This information is 
encoded in our knowledge base. Reference Resolution looks for previously-mentioned entities 
that have the property of having phone numbers, and finds the Border Care. 
15 User :  
16 VFE : 
17 Vgr : 
I s  there  a subway s top  near  the  res taurant?  
I ' l l  ask  Voyager . . .  
I can ' t  determ?ne i f  ob jec ts  evce near  someth ing .  
I ' l l  t ry  to  f ind  the  neares t  one .  
The neexest  subway s top  to  Border  Cage i s  Haxvaxd  Sta t ion .  
Harvard  S ta t ion  i s  located  a t  the  in tersect ion  o f  Nassachuset ts  
Avenue  and  Church  S t reet .  
Comments :  the restaurant is a definite reference to the Border Cafe. Note that it would not 
be correct to look for the last explicit mention of a restaurant, for this algorithm would find 
the restaurant introduced in turn 1: Is there a restaurant near Harvard. 9 Instead, Reference 
Resolution looks for the salient entity of type  restaurant, and finds the Border Cafc. 
CURRENT COVERAGE AND ISSUES 
Current coverage on our training corpus of 174 VOYAGER inputs is 57%; that is, 100 of the utterances are 
correctly processed by VFE, PUNDIT and QTIP, and are sent to VOYAGER. We plan to increase coverage 
to 90%, and will then test the system on a more extensive corpus of spontaneous queries, collected by 
MIT. In addition, we plan to collect and analyze samples of task-orlented ialogue, in order to evaluate 
the system performance in providing a co-operative interface for interactive problem-solving. 
One of the issues which we anticipate addressing is the interpretation of additional types of questions, e.g. 
short questions. For example, the notions of focus and open proposition (cf. \[Pri86\]) seem crucial to the 
interpretation of sequences such as Are there any bars around MIT?  ... How about clubs? ... Restaurants?. 
We also intend to further explore the relationship between the information structure of the question and 
the answer, in order to optimize the processing of the answer. For example, when VFE asks a clarification 
question such as Where are you?, we construct an open proposition whose variable is typed as a location 4. 
We can therefore anticipate a cohesive response from the user in which the open proposition is satisfied 
by a location. A short response is maximally cohesive (M IT  or At  MIT) ,  and we currently anticipate the 
possibility of this type of response, and call the parser first for an NP fragment, and then (if that fails) for 
a PP fragment. We could go farther by expecting certain types of prepositional phrases, namely location 
expressions (e.g. By subway would be an incoherent response). For the long response ( I  am at MIT) ,  
we may expect the focus to be accented, and the material corresponding to the open proposition to be 
de-accented. Such expectations should prove useful for speech recognition. 
These are not only important research issues, but we believe them to have a direct bearing on the ult imate 
performance of the system, in terms of user satisfaction and time to accurately complete the task. 
4Intult ively,  an  open propos i t ion is an  express ion conta in ing an  unbound variable. 
65 
References  
\[Ba189\] Catherine N. Ball. Analyzing explicitly-structured discourse in a limited domain: Trouble 
and failure reports. In Proceedings of the DARPA Speech and Natural Language Workshop, 
Philadelphia, PA, February 1989. 
\[Bib88\] Douglas Biber. Variation Across Speech and Writing. Cambridge University Press, Cambridge, 
1988. 
\[DahS6\] Deborah A. DaM. Focusing and reference resolution in PUNDIT. In Proceedings of the 5th 
National Conference on Artificial Intelligence, Philadelphia, PA, August 1986. 
EGK86\] Ralph Grishman and Richard Kitteridge, editors. Analyzing Language in Restricted Domains: 
Sublanguage Description and Processing. Lawrence Erlbaum, New Jersey, 1986. 
\[Hiz79\] Henry Hiz. Difficult questions. In Henry Hiz, editor, Questions, pages 211-226. Reidel, Dor- 
drecht, 1979. 
\[HPD+89\] Lynette Hirschman, Martha Palmer, John Dowding, Deborah Dahl, Marcia Linebarger, Re- 
becca Passonneau, Pran~ois-Michel Lang, Catherine Ball, and Carl Weir. The pundit natural- 
language processing system. In AI Systems in Government Conference. Computer Society of 
the IEEE, March 1989. 
\[PDP+86\] Martha S. Palmer, Deborah A. Dalai, Rebecca J. \[Schiffman\] Passonneau, Lynette Hirschman, 
Marcia Linebarger, and John Dowding. Recovering implicit information. In Proceedings of the 
~#h Annual Meeting of the Association for Computational Linguistics, Columbia University, 
New York, August 1986. 
\[Pri81\] Ellen F. Prince. Toward a taxonomy of given-new information. In Peter Cole, editor, Radical 
Pragmatics. Academic Press, New York, 1981. 
\[PriSg\] Ellen F. Prince. On the syntactic marking of presupposed open propositions. In Papers from 
the Parasession on Pragmatics and Grammatical Theory at the ~nd Regional Meeting of the 
Chicago Linguistic Society, 1986. 
\[SetS7\] Federal News Service. Taking the Stand: The Testimony of Lieutenant Oliver L. North. Pocket 
Books, New York, 1987. 
66 
