GENERATING PRECONDIT ION EXPRESSIONS 
IN INSTRUCTIONAL TEXT 
Ke i th  Vander  L inden 
ITR I ,  Un ivers i ty  of  Br ighton  
Lewes  Road 
Br ighton ,  BN2 4AT 
UK 
In ternet :  knv l@i t r i .b ton .ac .uk  
Abst ract  
This study employs a knowledge intensive corpus 
analysis to identify the elements of the commu- 
nicative context which can be used to determine 
the appropriate lexical and grammatical form of 
instructional texts. IMAGENE, an instructional 
text generation system based on this analysis: is 
presented, particularly with reference to its ex- 
pression of precondition relations. 
INTRODUCTION 
Technical writers routinely employ a range of 
forms of expression for precondition expressions in
instructional text. These forms are not randomly 
chosen from a pool of forms that say "basically 
the same thing" but are rather systematicaUy used 
based on elements of the communicative context. 
Consider the following expressions ofvarious kinds 
of procedural conditions taken from a corpus of in- 
structional text: 
( la )  If light flashes red, insert credit card again. 
(Airfone, 1991) l 
( lb )  When the 7010 is installed and the battery 
has charged for twelve hours, move the 
OFF/STBY/TALK \[8\] switch to STBY. 
(Code-a-phone, 19891) 
( l c )  The BATTERY LOW INDICATOR will 
light when the battery in the handset i~ low. 
(Excursion, 1989) 
( ld )  Return the OFF/STBY/TALK switch to 
STBY a/ter your call. (Code-a-phone, 1989) 
( le )  1. Make sule the handset and base 
antennas are fully extended. 2. Set the 
OFF /STBY/TALK SWITCH to Talk. 
(Excltrsion, 1989) 
As can be seen here, procedural conditions 
may be expressed using a number of alternative 
l In this paper, a reference wiU be added to the 
end of all examples that have come directly from the 
corpus, indicating the ma~uual from which they were 
taken. 
lexical and grammatical forms. They may occur 
either before or after the expression of their related 
action (referred to here as the issue of slot), and 
may be linked with a variety of conjunctions or 
prepositions (the issue of linker). Further, they 
may be expressed in a number of grammatical 
forms, either as actions or as the relevant state 
brought about by such actions (called here the ter- 
minating condition). Finally, they may or may not 
be combined into a single sentence with the ex- 
pression of their related action (the issue of clause 
combining). 
Text generation systems nmst not only be ca- 
pable of producing these forms but must also know 
when to produce them. The study described here 
has employed a detailed corpus analysis to address 
these issues of choice and has implemented the re- 
sults of this study in IMAGENE, an  architecture for 
instructional text generation. 
CORPUS ANALYSIS 
The corpus developed for this study contains ap- 
proximately 1000 clauses (6000 words) of instruc- 
tions taken from 17 different sources, including in- 
struction booklets, recipes, and auto-repair man- 
uals. It contains 98 precondition expressions, 
where the notion of precondition has been taken 
from Rhetorical Structure Theory (Mann and 
Thompson, 1988): and in particular from RSsner 
and Stede's modified relation called Precondition 
(1992). This relation is a simple amalgam of the 
standard RST relations Circumstance and Condi- 
tion and has proven useful in analyzing various 
kinds of conditions and circumstances that fre- 
quently arise in instructions. 
The analysis involves addressing two related 
issues: 
1. Determining the range of expressional forms 
commonly used by instructional text writers; 
2. Determining the precise comnnmicative context 
in which each of these forms is used. 
42  
Text 
Level 
lnquirh's 
IMAGENE 
System Network 
-\] Sentence Builder 
"1 
PENMAN 
I I 
Figure 1: The Architecture of IMAGENE 
Instructhmal 
Text 
Determining the range of forms was a matter 
of cataloging the fl~rms that ~mcurred in the cor- 
pus. Example (1) shows exemplars of the major 
forms found, which include present tense action 
expressions (la), agentless passives (lb), relational 
expressions of resultant states (lc): phrasal forms, 
(ld), and separated iml,erative forms (le). 
Determining the functional context in whidl 
each ~,f the forms is used inw~lves identifying corre- 
lations between the contextual features of commu- 
nicative context on the -he hand, and the lexical 
and grammatical form on the other. I focus here 
on the range of lexical and gralnmatical forms cor- 
responding to the precondition expressions in the 
corpus. The analyst begins by identifying a fea- 
ture of the communicative context that appears 
to correlate with the variation of some aspect of 
tlle lexical and grammatical forms. They then at- 
tempt to validate the hypothesis by referring to 
the examples in the corpus. These two phases are 
repeated until a good match is achieved or until a 
relevant hypothesis cannot be found. 
IMAGENE 
The analysis has resulted in a number of identified 
covariations which have been coded in the Sys- 
tem Network formalism from Systemic-Functional 
Linguistics (Halliday, 1976) and included in the 
IMAGENE architecture. The system network is 
basically a derision network where each choice 
point distinguishes between alternate features of 
the communicative context. It has been used ex- 
tensively in Systemic Linguistics to address both 
sentence-level and text-level issues. Such networks 
are traversed based on the appropriate features of 
the comnmnicative context, and as a side-effect, 
of this traversal, linguistic structures are con- 
structed by realization ~statemcnts which are as- 
sociated with each feature of the network. These 
statements allow several types of manipulation of 
the evolving text structure, including the insertion 
of text structure nodes, grammatical marking of 
the nodes, textual ordering, and clause combin- 
ing. Currently, the network is traversed manually; 
the data structures and code necessary to auto- 
matically navigate the structure have not been im- 
plemented. This has allowed me to focus on the 
contextual distinctions that need to be made and 
on their lexical and grammatical consequences. 
The general architecture of IMAGENE, as de- 
picted in Figure 1. consists of a System Network 
and a Sentence Building routine, and is built on 
top of the Penman text generation system (Mann, 
1985). It transforms inputs (shown on the left) 
into instructional text (shown on the right). 
The following sections will detail the results 
of the analysis for precondition expressions. It 
should be noted that they will include intuitive 
motivations for the distinctions made in the sys- 
tem network. This is entirely motivational; the de- 
terminations made by the systems are based solely 
on the results of the corpus analysis. 
PRECONDIT ION SLOT 
In the corpus, preconditions are typically fronted, 
and therefore the sub-network devoted to precon- 
dition expression will default to fronting. There 
are four exceptions to this default which are illus- 
trated here: 
(2a) The BATTER?*" LOW INDICATOR will 
light when the battery is the handset is low. 
(Excursion, 1989) 
43 
Local 
Nt~cleus >Precond 
Act- 
Topic 
Not-Local 
Figure 2: The Precondition Slot Selection Network 
(2b) Return the OFF/STBY/TALK switch to 
STBY after your call. (Code-a-phone, 1989) 
(2c) The phone will ring only if the handset 'is 
on the base. (Code-a-phone, 1989) 
(2d) In the STBY (standby) position, the phone 
will ring whether the handset .is on the base or 
in another location. (Code-a-phone, 1989) 
The slot selection fi~r example (2a) couht go 
either way; except that it is the first sentence in 
a section titled ':Battery Low Indicator", mak- 
ing the discussion of this indicator the local topic 
of conversation, and thus the appropriate theme 
of the sentence. This distinction is made in the 
portion of the system network shown in figure 2. 
This sub-network has a single system which dis- 
tinguishes between preconditions associated with 
actions referring to thematic material and those 
associated with non-thematic material. The re- 
alization statement, Nucleus>Precond, indicates 
that the main action associated with the condi- 
tion (called the nucleus in RST terminology) is to 
be placed before the precondition itself. 
The slot determinations for the remainder of 
example (2) are embedded in system networks 
shown later in this paper. Example (2b) is the 
example of what I call rhetorical demotion. The 
action is considered obvious and is thus demoted 
to phrase status and put at the end of its imme- 
diately following action. Examples (2c) and (2d) 
show preconditions that are not fronted because of 
the syntax used to express the logical nature of the 
precondition. In (2c), the condition is expressed as 
an exclusive condition which is never fronted. One 
could, perhaps; say "?? Only if the handset is on 
the base, will the phone ring." 2 but this form is 
never used in the corpus. Neither is the condition 
form in (2d) ever fronted in the corpus. 
2The "??" notation is used to denote a possible 
form of expression that is not typically found in the 
corpus; it does not indicate ungrammaticMity. 
PRECONDIT ION L INKER 
Preconditions are marked with a number of link- 
ers, illustrated in the IoUowing examples: 
(3a) Lift the handset and set the 
OFF/STBY/TALK \[8\] switch to TALK. When 
you hear dial tone, dial the number on the 
Dialpad \[4\]. (Code-a-phone, 1989) 
(3b) If you have touch-tone service, move the 
TONE/PULSE SWITCH to the Tone position. 
(Excursion, 1989) 
(3c) I. Make sure the handset and base 
antennas are fully extended. 2. Set the 
OFF/STBY/TALK SWITCH to Talk. 
(Excursion, 1989) 
The systems largely dedicated to selecting 
precondition linkers are shown in figure 3. 3 
Two parallel systems are entered, Condi t ion-  
P robab i l i ty  and Changeab le -Type .  
Cond i t ion -Probab i l i ty  distinguishes ac- 
tions which are probable from those which are not. 
Highly probable actions are typicaUy marked with 
':when". Those actions which are not highly prob- 
ably are marked with "If" or some similar linker, 
as determined by the Complex i ty  system and its 
descendants. 
The Complex i ty  system is entered for ac- 
tions which are not probable and not changeable. 
It determines the logical nature of the precondi- 
tions and sets the linker accordingly. The three 
possible linkers chosen by this sld:)-network are 
':if"; "only if", or "whether . . .  o r . . .  ". 
P recond-When is entered when the action 
is conditional and further is highly probable. The 
occurrence of the dial tone in example (3a) is part 
of a sequence of actions and is conditional in that it 
nlay not actually happen, say if the telephone sys- 
tem is malflmctioning in some way, but is ntmethe- 
less highly probable. P recond-Nomina l  is en- 
tered immediately after P recond-When when- 
ever the precondition is being stated as a nom- 
inalization. It overwrites the linker choice with 
':after" in only this case. 
Preconditions that the user is expected to be 
able to change if necessary and which come at 
the beginning of sections that contain sequences 
of prescribed actions are called Change.able pre- 
conditions. Example (3c) is such a case. Here, the 
reader is expected to check the antennas and ex- 
tend them if they are not already extended. This 
3In the figure, the bold-italic on(htious attached to 
the front of these systems denote conditions that hold 
on entry (e.g., ConditionM-Action is a condition trite 
on the entry of Condition-Probability), They axe nec- 
essary because the networks hown are only portions 
of a much larger network. 
44 
Conditional-Action 
Probable 
Not-Probable 
Changeable 
Mark(make-sure) 
Changeable- 
Procedural-Sequence and 
Not-Concurrent and 
(Obvious or Not.Coordinate) 
Not-Changeable 
PrecoItd>Nucleus 
Precond -When 
Mark(when) 
Nominal.Available J 
Simplex 
Complexity 
Complex 
Precond-Nomin',d 
Mark(after) 
Exclusivity 
Alternativeness 
Exclusive 
Mark(only-i39 
Nucleus> Precond 
Not-Exclusive 
Mark(~ 
Alternatives 
Mark(whether- 
or-nol) 
Not- 
Alternatives 
Mark( iJ9 
Figure 3: The Precondition Linker Selection Network 
type of precondition is marked as a "Make sure" 
imperative clause by Changeab le -Type .  
PRECONDIT ION FORM 
As noted above, preconditions can be expressed 
as either a terminating condition or as an action. 
The choice between the two is made by the form 
selection sub-networks: hown in figures 4 and 5. 
This choice depends largely upon the type of ac- 
tion on which the precondition is based. The ac- 
tions in the corpus can be divided into five cate- 
gories which affect the grammatical form of pre- 
c(mdition expressions: 
? Monitor Actions; 
? Giving Actions; 
? Placing Actions; 
? Habitual Decisions; 
? Other Actions. 
The first four actions are special categories 
of actions that have varying act and terminating 
condition forms of expression. The last category, 
other actions: encompasses all actions not falling 
into the previous four categories. The sub-network 
which distinguishes these forms is shown in figure 
4. This section wiU discuss each category in turn: 
starting with the following examples of the first 
four action types: 
(4a) Listen for dial tone, then dial AREA 
CODE + NUMBER slowly (Airfone, 1991) 
(4b) If you have touch-tone service: move the 
TONE/PULSE SWITCH to the Tone position. 
(Excursion, 1989) 
(4c) The phone will ring only if the handset is 
on the base. (Code-a-phone, 1989) 
(4d) / f  you leave the OFF /STBY/TALK \[8\] 
switch in TALK: move the switch to PULSE: 
and tap FLASH \[6\] the next time you lift the 
handset; to return to PULSE dialing mode. 
(Code-a-phone, 1989) 
Monitor actions, as shown in example (4a), 
concern explicit commands to monitor conditions 
in the environment. In this case, readers are being 
commanded to listen for a dial tone: with the un- 
derlying assumption that they will not continue on 
45 
Previous- 
Act-Type 
Monitor 
MarI~pr~$era) 
~a~im~)  ( Procedural-Giving 
\] Made(present) 
Giving " ~ M~*4ha*ing) 
Primitive-Giving 
Made(is-required) 
Habitual-Decision 
Mark(present) 
Mark{act) ( Procedural-Placing 
\] Made(present) 
Made(locative) 
Placing ~ Primitive-Placing 
Made(locative) 
Other 
Figure 4: The Precondition Form Selection Net- 
work 
with the instructions unless one is heard. Giving 
and Placing actions, however, tend to be expressed 
as terminating conditions, as shown in (4b) and 
(4c). The corpus does not include active forms 
of these actions: such as "?? If the phone com- 
pany has given you touch-tone service, do . . . "  or 
"?? Do ...  if you have placed the handset on the 
base." An Habitual decision is a decision to make 
a practice of performing some action or of per- 
forming an action in some way. When stated as 
preconditions, they take the present ense form in 
(4d). Taken in context, this expression refers not 
to a singular action of leaving the OFF /STBY/ -  
TALK switch in TALK position; but rather to the 
decision to habitually leave it in such a state. The 
singular event would be expressed as "If you have 
left the OFF /STBY/TALK switch in TALK, do 
. . . "  which means something quite different from 
the expression in (4d) which is stated in present 
tense. 
The bulk of the preconditions in the corpus 
(70.4%) are based on other types of actions. These 
types are distinguished in figure 5. In general, the 
Other Effective Action systems are based on the 
actor of the action. Reader actions are expressed 
either as present ense passives or as present ense 
actions, depending upon whether the action has 
been mentioned before or not. These distinctions 
are made by the gates Repeated-Reader  and 
Not -Repeated-Reader .  An example of the for- 
mer can be found in (5a), (':When the 7010 is in- 
stalled"). In the corpus, such expressions of ac- 
tions already detailed in the previous text take 
the present ense, agentless passive form. If the 
reader action is not a repeated mention, a simple 
present ense active form is used, as in example 
(5b). 
(5a) When the 7010 is installed and the battery 
has charged for twelve hours, move the 
OFF/STBY/TALK \[8\] switch to STBY. 
(Code-a-phone, 1989) 
(5b) / f  you make a dialing error, or want to 
make another call immediately, FLASH gives 
you new dial tone without moving the 
OFF /STBY/TALK switch. (Code-a-phone, 
1989) 
The Act -H ide  system and its descendants 
are entered for non-obvious, non-reader actions. 
There are four basic forms for these precondition 
expressions, examples of which are shown here: 
(6a) If light flashes red, insert credit card again 
(Aiffone, 1991) 
(6b) When you hear dial tone, dial the number 
on the Dialpad \[4\]. (Code-a-phone, 1989) 
(6c) The BATTERY LOW INDICATOR will 
light when the battery in the handset is low. 
(Excursion, 1989) 
(6d) When instructed (approx. 10 sec.) remove 
phone by firmly grasping top of handset and 
pulling out. (Airfone, 1991) 
Act -H ide  distinguishes actions which are 
overly complex or long duration and those that 
are not. Those which are not will be expressed 
either as present ense actions, as the one in ex- 
ample (6a), if the action form is available in the 
lexico-grammar. Act ive-Avai lab le  makes this 
determination. If no action form is available, then 
Incept ion -Status  i entered. If the inception of 
the action is expected to have been witnessed by 
the reader, then the present ense sensing action 
form is used, as shown in example (6b). 
Terminat ion -Ava i lab i l i ty  is entered either 
if the action is to be hidden or if the inception of 
the action was not expected to be experienced by 
the reader. In these cases, the relational form of 
the terminating condition is used if it is available. 
An example of this is shown in example (6c). The 
long duration action of the battery draining is not 
expressed in the relational form used there. If the 
relational form is not available, the present ense, 
agentless passive is specified, as shown in example 
(6d). 
Finally, if an action being expressed as a pre- 
condition is considered obvious to the reader, the 
nominalization is used, provided its nominalized 
form is available in the lexicon. Example (ld) is 
an example of such an expression. 
46 
Not.Obvious-Action and 
Reader-Action 
/ 
/ 
Repeated-Reader 
Mark(present) 
Mark(pc~*'sive ) 
Not-Repeated-Reader 
Mark(present ) 
Mark(act) 
Not-Obvious-Action and 
Non-Reader.Action 
Hid* 
Active- 
Not-Hide 
Hide 
Available 
Mark(acO 
Mark(present) i 
\] Experienced 
\] Mark(sena'ing) 
Mark(present) 
Not-Available Stat-~ 1 
Not-Experienced-~ Termination. 
Availability 
Figure 5: The Other Effective Actions Selection Network 
Available 
Mark(relational) 
Mark(present) 
Not-Available 
Mark(passive) 
Mark(present) 
VERIFY ING IMAGENE'S  
PRESCRIPT IONS 
This study has been based primarily on an analysis 
of a small subset of the fitll corpus: namely on the 
instructions for a set of three cordless telephone 
manuals. This training set constitutes appro~- 
mately 35% of the 1000 clause corpus. The results 
of this analysis were implemented in IMAGENE and 
tested by manually re-running the system network 
for all of the precondition expressions in the train- 
ing set. These tests were performed without the 
Penman realization component engaged: compar- 
ing the text structure output by the system net- 
work with the structure inherent in the corpus 
text. A sample of such a text structure: showing 
IMAGENE:s output when run on the actions ex- 
pressed in the text in example (7)., is shown in fig- 
ure 6. The general structure of this figure is reflec- 
tive of the underlying RST structure of the text. 
The nodes of the structure are fitrther marked with 
all the lexical and grammatical information rele- 
vant to the issues addressed here. 
(7) Wh, en the 7010 i.~ installed and the battery 
has charged for twelve hours; move the 
OFF/STBY/TALK \[8\] switch to STBY. The 
7010 is now ready to use. Fully extend the 
base antenna \[12\]. Extend the handset antenna 
\[1\] for telephone conversations. (Code-a-phone, 
1989) 
Statistics were kept on how well IMAGENE:s 
text structure output matched the expressions 
in the corpus with respect to the four lexical 
and grammatical issues considered here (i.e.: slot: 
form; linker: and clause combining). In the ex- 
ample structure, all of the action expressions are 
specified correctly except for the Charge action 
(the second clause). This action is marked as a 
present ense passive, and occurs in the corpus in 
present perfect form. 
In fi|ll realization mode: IMAGENE translates 
the text structure into sentence generation com- 
mands for the Penman generation system: produc- 
ing the following output for example (7): 
(8) PiOten the phone is installed, and the battery 
is charged, move the OFF /STBY/TALK 
switch to the STBY position. The phone is now 
~eady to use. Extend the base antenna. Extend 
the handset antenna for phone convez:~ation. 
As just mentioned, this text identical to the 
original with respect o the four lexical and gram- 
matical issues addressed in the corpus study with 
47 
*IG-Text* 
I I I n 
I I 
Ready-to-use J New_~ Extend-Hands t Converse 
Precondition Form: Relational /Sentence Form: Imper. Form: Nominal 
Tense: Present 
~New New- Linker: For Sentence 
? Move . Continue- 
Form: Imper. Sentence Sentence 
Install Charge J ont inue-  
Form: Passive Form: Passiv~.1" Sentence 
Linker: When Linker: And 
Tense: Present Tense: Present 
" , , . _ . f  
Continue- 
Sentence 
Figure 6: A Sample Text Structure 
the exception of the second clause. There are other 
differences: however; having to do with issues not 
addressed in the study; such as referring expres- 
sions and the expression of manner. A corpus 
study of these issues is yet to he performed. 
The overall results are shown in table 7 (see 
Vander Linden, 1993b for the results concerning 
other rhetorical relations). This (:hart indicates 
the percentage of the prec.ndition examples for 
which IMAGENE:s predic:tions matched the c(~rpus 
for each of the four lexical and grammatical issues 
considered. The values for the training and testing 
sets are differentiated. The training set results 
indicate that there are patterns of expression in 
cordless telephone manuals that can he identified 
and implemented. 
The system's predictions were als. tested on 
a separate and m(~re diverse portion ,,f the cor- 
pus which includes instructions for different ypes 
of devices and processes. This additional testing 
serves both to disallow over-fitting of the data in 
the training portion: and to give a measure of how 
far beyond the telephone domain the predictions 
can legitimately he applied. As (::an be seen in fig- 
ure 7; the testing set results were not as good as 
those for the training set. hut were still well above 
random guesses. 
100 
90 
80 
70 
60 
50 
40 
Preconditions 
30 
20 
10 
0 
\ [ \ ]  Training Set \ [ \ ]  Testing Set 
Figure 7: The Accuracy of IMAGENE's Realizations 
for Precondition Expressions 
48 
CONCLUSIONS 
This study has employed a knowledge intensive 
corpus analysis to identify the elements of the 
communicative context which can be used to de- 
termine the appropriate l xical and grammatical 
form of precondition expressions in instructional 
texts. The methodology provides a principled 
means for cataloging the use of lefical and gram- 
matical forms in particular egisters, and is thus 
critical for any text generation project. The cur- 
rent study of precondition expressions in instruc- 
tions can be seen as providing the sort of register 
specific data required for some current approaches 
to register-based text generation (Bateman and 
Paris. 1991). 
The methodology is designed to identify co- 
variation between elements of the communicative 
context on the one hand and grammatical form 
on the other. Such covariations, however: do not 
constitute proof that the technical writer actu- 
ally considers those elements during the genera- 
tion process; nor that the prescribed form is ac- 
tually more effective than any other. Proof of ei- 
ther of these issues would require psycholinguistic 
testing. This work provides detailed prescriptions 
concerning how such testing could be performed: 
i.e.: what forms should be tested and what con- 
texts controlled for: but does not actually perform 
them (cf. Vander Linden: 1993a). 
The analysis was carried out by hand (with 
the help of a relational database): and as such was 
tedious and limited in size. The prospect of au- 
tomation: however: is not a promising one at this 
point. While it might be possible to automati- 
call)' parse the grammatical nd lexical forms: it 
remains unclear how to automate the determina- 
tion of the complex semantic and pragmatic fea- 
tures relevant o choice in generation. It might 
be possible to use automated learning procedures 
(Quinlan: 1986) to construct the system networks~ 
but this assumes that one is given the set of rele- 
vant features to start with. 
Future work on this project will include at- 
tempts to automate parts of the process to facili- 
tate the use of larger corlmra, and the implemen- 
tation of the data structures and code necessary 
to automate the inquiry process. 
ACKNOWLEDGMENTS 
This work was done in conjunction with Jim Mar- 
tin and Susanna Cumming whose help is grate- 
fitlly acknowledged. It was supported by the 
National Science Foundation under Contract No. 
IRI-9109859. 
REFERENCES 
Airfone (1991). Inflight Entertainment ~ In\]orma- 
tion Guide. United Airlines. 
Bateman: J. A. and Paris: C. L. (1991). Con- 
straining the development of lexicogrammati- 
cal resources during text generation: towards 
a computational instantiation of register the- 
ory. In Ventola, E.: editor: Functional and 
Systemic Linguistics Approaches and Uses: 
pages 81 106. Mouton: Amsterdam. Selected 
papers from the 16th International Systemics 
Congress: Helsinki: 1989. 
Code-a-phone (1989). Code-A-Phone Owner's 
Guide. Code-A-Phone Corporation; P.O. Box 
5678, Portland, OR 97228. 
Excursion (1989). Excursion 3100. Northwestern 
Bell Phones. A USWest Company. 
Halliday, M. A. K. (1976). System and Function in 
Language. Oxford University Press, London. 
edited by G. R. Kress. 
Mann. W. C. (1985). An introduction to the Nigel 
text generation grammar. In Benson, J. D.; 
Freedle; R. O.: and Greaves, W. S.: edi- 
tors, Systemic Perspectives on Discourse, vol- 
ume 1; pages 84 95. Ablex. 
Mann, W. C. and Thompson, S. A. (1988). Rhetori- 
cal structure theory: Toward a fimctional the- 
ory of text organization. Text: An Interdisci- 
plinary Journal for the Study of Text, 8(2). 
Quinlan: J. R. (1986). Induction of decision trees. 
Machine Learning; 1:81 106. 
RSsner, D. and Stede; M. (1992). Customizing 
RST for the automatic production of techni- 
cal manuals. In Dale: R., Hovy: E., RSesner: 
D., and Stock, O., editors, Aspects of Au- 
tomated Natural Language Generation; Lec- 
ture Notes in Artificial Intelligence 587: pages 
199 214. Springer Verlag: Berlin. Proceedings 
of the 6th International Workshop on Natu- 
ral Language Generation, Trento, Italy; April, 
1992. 
Vander Linden~ K. (1993a). Generating effective in- 
structions. In Proceedings of the Fifteenth An- 
nual Conference of the Cognitive Science So- 
ciety, June 18 21, Boulder: CO, pages 1023 
1028. 
Vander Linden: K. (1993b). Speahnng of Actions: 
Choosing Rhetorical Status and Grammatical 
Form in Instructional Text Generation. PhD 
thesis, University of Colorado. Available as 
Technical Report CU-CS-654-93. 
49 
