SYSTEM SUPPORT IN CHINESE DATA ENTRY 
Joseph E. Grimes 
Cornell University, Ithaca NY, USA 
Summary 
Our aim is a viable software system 
to support language data processing 
involving non-alphabetic symbols, 
specif ical ly the Chinese characters. The 
key to the system is the exploitation of 
certain linguistic relationships between 
pairs of those characters in sequence. 
In the development vehicle for this 
system, independent modules of data are 
linked by pointers at two critical 
interfaces. The first links an input 
recognizer to a process that recognizes 
signif icant pairings. The second links 
both recognizers to a character 
generator. 
Chinese typists are readily trained 
to end the input sequence that 
identifies the first character of a pair 
with a special delimiter for pairs 
rather than the usual delimiter. The 
pairs delimiter alerts the system to 
look up the pairing potential of the 
first character. Then it matches the 
second character of the pair against 
that potential. The result is automatic 
contextual disambiguation performed on 
input codes that otherwise might not 
identify characters uniquely. 
Overview 
Up to now, devices for typing 
Chinese characters or for entering them 
into computers have not been widely 
successful. The problem is not one of 
storing character shapes in a computer 
or of reproducing them once they are 
stored; it is rather a problem of 
designating quickly which of a large 
number of accessible shapes should be 
reproduced. 
The companion paper by Paul King on 
human factors and l inguistic 
considerations shows that a satisfactory 
solution can be worked out by paying 
attention not just to the graphic shapes 
involved, but to the characterist ics of 
the Chinese language that stand behind 
those graphic shapes and their 
combinations. 
The solution has three components. 
First, it is possible to use nonunique 
strings of key strokes to identify the 
shape of a character; that is, many of 
the identifiers in King's Cornell Code 
identify two or more characters. Second, 
since often in Chinese it is a 
two-character sequence that is 
signif icant rather than the individual 
characters that make it up, access to 
information about such pairings makes it 
possible to eliminate, or at least 
reduce, the ambiguity inherent in the 
use of nonunique identifiers. Third, in 
the residual cases where it is still not 
clear which of several characters or 
character pairs is intended, it has 
proved adequate to display the 
possibi l i t ies and interrupt the operator 
to ask her to indicate which one she 
wants by typing the number of that one 
on the screen before her. 
The results of this approach to 
Chinese data entry are encouraging. 
Speakers of Chinese with a middle school 
education or better learn the keyboard 
with about half an hour's instruction. 
After a two week training session or its 
equivalent, the median speed is around 
40 characters per minute and the best 
speeds are above 50. The error rate by 
that time approaches zero, and residual 
errors are correctible by means of a 
cursor editor that is built into the 
system. Operators can type for several 
hours at a time without fatigue. 
The software system that makes this 
behavior possible is not part icularly 
complex. It derives its power from the 
amount of information about the Chinese 
language that it holds in compact form 
in its internal store: specifically, 
information about the most likely 
character pairings in Chinese. 
Requirements 
To create this system we began with 
two overall requirements. The first was 
that it be modular, so that any 
component of it could be worked on 
without disturbing the other components, 
and so that it could be implemented on a 
variety of physical configurations. Each 
of the stored data structures is 
manipulated not only by the main data 
entry program, but also by util ity 
programs that make it possible to add 
new characters to the repertoire (for 
example, to put together a specialized 
vocabulary for a particular 
application), or to augment the number 
of pairings that the system recognizes. 
Modularity also makes it possible to 
change output character fonts as 
desired. 
. . . .  283 
Chinese Data Entry Gr imes 
The second requi rement  was, of 
course, that all funct ions of the system 
be accompl ished at a speed that would 
permit  typists to achieve their best 
per fo rmance  without any l imit being 
imposed on them. In the disk or iented 
prototype,  this requ i rement  involved 
paying special  at tent ion to min imiz ing 
disk accesses when search ing  through 
chains of pointers.  
The prototype embodies a th i rd  
requ i rement  that product ion vers ions 
wil l  not have to meet: each typist 's  
per fo rmance  needs to be logged in a way 
that slows nothing down. An internal 
c lock puts t imes and character  codes 
into a buffer that is wr i t ten to a log 
file from time to time. A ut i l i ty  
program later compares the log with a 
stored vers ion of what was to be typed. 
From that compar ison it determines  the 
er ror  rate. From the t iming in format ion 
it determines  the typing rate. The 
results  of this ut i l i ty  are made 
ava i lab le  to another that plots the 
per fo rmance  of all typists  being tested 
as a funct ion of time. 
Stored in format ion 
There are two kinds of in format ion 
that the system uses in decid ing which 
character  the typist wants: a fi le of 
ident i f iers ,  and a file of pair ings.  The 
ident i f ier  fi le is used to find a direct  
match to str ings typed in from the 
keyboard.  A successfu l  match against  the 
ident i f ier  f i le y ie lds one or more 
Chinese te legraph codes ( four-digit  
numbers) that represent  all the 
characters  that that ident i f ier  could 
stand for. The file of pair ings,  on the 
other hand, tel ls what other characters  
could fo l low a given character  in a 
c lose-kn i t  re la t ionsh ip  to it when it 
comes f irst in a pair. 
The ident i f ier  fi le is organized as 
a B*-t ree with var iable length entr ies.  
This type of s t ructure keeps the number 
of d isk  accesses needed to match an 
ident i f ier  near the theoret ica l  minimum, 
with the result  that it can be traversed 
very rapidly. It has the addi t ional  
advantage that it can be implemented in 
such a way that the disk blocks nearest  
the root are kept in a core buffer area, 
thereby e l iminat ing outr ight  some of the 
disk accesses that would be needed in a 
full search. Since the tree is formed 
at the time when ,new ident i f iers  are 
being introduced into the system by a 
ut i l i ty  program, the complex steps 
needed to keep the B*-tree in balance 
are performed only at a time when speed 
is not a factor. 
The result  of a match between an 
ident i f ier  and the B*-tree is a str ing 
of one or more te legraph code numbers.  
These are the same four-d ig i t  numbers 
that have been used for years to 
transmit  Chinese characters  over 
te legraph lines. They are def ined by a 
standard code book. The str ing of one or 
more te legraph codes that comes from the 
ident i f ier  fi le represents  all the 
Chinese characters  whose shape matches 
the ident i f ier  string. This string of 
codes is held in an internal buffer,  
where later stages of the process work 
on it. 
The fi le of pa i r ings  is the heart 
of the system and the focal point of the 
patent  that has been f i led on it. It 
cons is ts  of two parts: index and 
contents.  The index is der ived by 
apply ing an ar i thmet ic  funct ion to the 
te legraph code that is desired,  y ie lding 
a f ixed of fset  from the beginning of the 
file. At that of fset  is stored an 
internal pointer to where the contents  
begin. This makes poss ib le  a rapid 
second access to a nearby locat ion on 
the disk. The contents,  stored at the 
second locat ion,  are var iab le  in length; 
they are a str ing of te legraph codes 
that ident i fy  all the characters  that 
are known to pair with the character  
whose te legraph code forms the or ig inal  
search argument;  that is, all the 
characters  whose sequent ia l  re la t ionsh ip  
to the first character  is s ign i f i cant  in 
Chinese.  
The system also stores graphic  
in format ion  that def ines character  
shapes for d isp lay on the screen and for 
pr int ing.  The shape in format ion is 
indexed just as it is in the file of 
pair ings,  using the te legraph code of 
each character  as a pointer.  The same 
a lgor i thm that is used for the file of 
pa i r ings  converts  the te legraph code to 
a f ixed disk offset,  and at the pos i t ion 
on the disk that is so indicated, the 
in format ion is found that tel ls where 
the actual graphic  in format ion begins 
later in the same file. 
The form of the graphic  in format ion 
or its d isp lay is of no d irect  concern 
to the se lect ion logic; it can be 
treated as a c luster of a data structure 
that is pointed to, together with the 
processes necessary  to handle it. We 
have implemented both vector  and raster 
d isp lays,  and with in each mode any 
ava i lab le  font can be cal led up s imply 
by naming the appropr ia te  character  
file, s ince all are accessed through the 
same pointer structure.  
-284  ? 
Chinese Data Entry Gr imes 
Processes 
Three major  processes select the 
Chinese character  the typist wants. The 
first recognizes the ident i f ier  string 
that is typed in, using the B*-tree 
structure of the ident i f ier  file. The 
second process is invoked whenever a 
character  pair is typed in. It 
recognizes all pa i r ings that match both 
ident i f iers  in the pair in order. The 
third process is invoked only if more 
than one poss ib le  result  remains after 
the f irst two processes have finished; 
it gets the typist 's attent ion and asks 
her to make a decision. 
The process that recognizes an 
ident i f ier  f inds an exact match in a 
B*-tree of known identi f iers.  If no 
match is poss ib le  it gets the operator 's  
attent ion:  either the identi f ier was 
typed wrong, or it is not yet in the 
system. In either case something else 
needs to be typed. 
When a pair is typed in, the string 
up to the special  del imiter  for pairs is 
taken as the first ident i f ier  and 
matched separate ly  from the string for 
the second identi f ier,  which comes 
between the special del imiter  and the 
final del imiter.  For each identi f ier,  
the ident i f ier  file yields a string of 
four-d ig i t  te legraph codes, one for each 
of the Chinese characters  that that  
ident i f ier  can represent. In about one 
case out of nine, there is only one 
te legraph code for an identi f ier.  
Frequent ly,  however,  there are two; and 
the number sometimes goes as high as 
f i f teen te legraph codes for one 
identi f ier.  
When a pair of characters  is typed 
in using the special  del imiter  to 
separate them, the presence of that 
de l imi ter  act ivates the second process 
that recognizes known pair ings.  This 
process goes through the string of 
te legraph codes that correspond to the 
f irst ident i f ier .  For each telegraph 
code in that string, it looks in the 
file of poss ib le  pair ings to see what 
other codes might form possible pair ings 
with the first one. The process then 
goes through the te legraph codes that 
correspond to the second ident i f ier  to 
see if any of them actual ly  does form a 
pair ing with the first. If one does, 
that pair of te legraph codes is copied 
into a special array which the third 
process uses for its final select ion. 
If on the other hand the pair ing 
the typist reacts to is not yet in the 
file of pair ings,  the third process is 
automat ica l ly  appl ied to . the first 
character  of the pair so that it can be 
d isambiguated manual ly ,  then to  the 
second member of the pair separate ly  for 
the same process. 
If the process that recognizes 
ident i f iers  f inds only one telegraph 
code for an ident i f ier ,  and there is no 
pair ing,  then that te legraph code is 
accepted as the correct  representat ion 
for the character  the typist intended. 
If there is a pair ing, but after the 
second process is over only one pair of 
te legraph codes has been found, those 
two can be taken as the characters  the 
typist  intended. 
Somet imes,  however,  an unpaired 
character  ident i f ier  corresponds to two 
or more telegraph codes, and the 
dec is ion as to which code is intended 
has to be made by the typist. Much more 
rarely, two paired ident i f iers  match 
more than one pair of te legraph codes in 
the second process, and the decis ion as 
to which pair of characters  is intended 
has to be made by the typist. It is also 
poss ib le  for a legit imate pair ing to not 
yet be in the file of pair ings,  so that  
each of the two characters  the typist 
typed has to be presented separate ly  for 
a decis ion.  
In all these cases the third 
process interrupts the typist by 
emitt ing an audible signal to indicate 
that she needs to divert  her attent ion 
from what she is typing to the quest ion 
posed on the screen in front of her. 
The screen displays the entire list of 
poss ib i l i t ies ,  either single characters  
or pairs of characters.  She in return 
types a number to tell the process which 
one of them she wants: "2" for the 
second one displayed, "5" for the fifth, 
and so forth. 
All the te legraph codes that are 
found by the three processes of matching 
ident i f iers ,  resolving pairs, and 
decid ing among a l ternat ives  go into an 
output buffer in the form of character  
str ings that represent  the four-d ig i t  
te legraph codes. The contents of this 
buffer  are avai lable for any one of 
several  subsequent  processes. 
The first process that operates on 
the output string of te legraph codes is 
an editor that al lows a cursor to be 
moved through the string to the place 
where some change is to be made. The 
editor then al lows delet ions and 
insert ions to be made wherever the 
cursor is located. All d isplay On the 
screen, of course, is in the form of the 
- -285  
Chinese Data Entry Gr imes 
Chinese characters  that correspond to 
the stored te legraph codes; the codes 
themselves  are never seen by the typist. 
The edited str ing can be stored on 
a magnet ic  medium, sent over a 
communicat ions  line, or formatted 
ver t i ca l l y  or hor i zonta l ly  to be sent to 
a pr int ing device. All these processes 
are convent ional .  They give the Chinese 
data entry system the potent ia l  of being 
used as a computer  terminal,  a 
communicat ions  terminal ,  an off l i ne  
data entry device, or even a simple 
of f ice typewriter .  
The work on which this paper was 
based received support  from the NCR 
Corporat ion .  
- -286  - -  
