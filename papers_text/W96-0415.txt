A generative perspective on verbs and their readings 
Manf red  Stede" 
Tedmische Utfiversitiit Berlin 
Uiuversity of Toronto 
Abst ract  
We sketch the architecture of a sentence gen- 
eration module that maps a language-neutral 
"deep" representation to a language-specific 
sentence-semantic specification, which is 
given to a front-end generator. Lexicaliza- 
t, ion is tlm main instrument tbr the mapl~ing 
step, and we examine the role of verb seman- 
tics in the process. In particular, we propose 
a set of rules that derive a range of verb alter- 
nations from a single base form, which is one 
source of lexical paraphrasing in the system. 
1 Overv iew 
This paper examines the role of several as- 
pects of verb semantics for natural language gen- 
eral,ion. We assume a scenario of producing sen- 
tences in multiple languages from a common under- 
lying representation~although the problems of mul- 
tilinguality will not be an explicit topic here. Section 
2 briefly describes the architecture of an implemented 
generator, called MOOSE, and characterizes the two 
levels of representation i volved:, a language-neutral 
level for representing various kinds of events, and a 
language-specific level of semantic sentence specifica- 
tion, which largely corresponds to the level of'sentence 
plans' used in systems based on a linguistic upper 
model, specifically PENMAN \[Bateman et el. 1990\]. 
The lexicon of a target language is the primary vehi- 
cle for mapping from one level to the other. Then, 
sections 3 and4 discuss our primary topic: verb se- 
mantics. First, a treatment of several Aktionsart fea- 
tures is proposed, and the role of valency in the tipper 
model idea is examined, and improvements suggested. 
Section 4 proposes a set of rules for systematically 
computing alternations (or diatheses) of a verb from 
a single base form. 
4 
*For their helpful comments and suggestions for improv- 
ing this paper, I thank two anonymous reviewers. Au- 
thor's address: TU Berlin, Proiekt KIT-VMll, Sekr. FR 5- 
12, Franklinstr. 28/29, D-10587 Berlin, Germany. Email: 
st edelcs. ~u-berl in. de 
141 
2 Two-s tep  sentence  generat ion  
The MOOSE sentence generator grew out of expe- 
riences with building the TECHDOC system \[RSsner, 
Stede 1994\], which produces instructional text in mul- 
tiple l:mguages from a common representation. Specif- 
ically, MOOSE accounts for the fact that events can 
receive different verbalizations even in closely related 
languages such as English and German. It is designed 
as a sentence generation module that pays attention to 
language-specific lexical idiosyncrasies, and that can 
be incorporated into a larger-scale text generator. 
2.1 MOOSE in a nutshe l l  
For this brief description of the system architec- 
ture, see figure 1. The generator assumes a language- 
neutral level of event representation, the situation 
specification or SitSpec. Using parts of t, he target lexi- 
con (see section 2.3), the lexical options for verbalizing 
the SitSpec are determined. For verbs, the applicable 
alternations and extensions are computed (see section 
4) and added to the set of options. Then a language- 
specific semantic specification SemSpec is constructed 
in accordance with generation parameters pertaining 
to brevity and stylistic tbatures. The SemSpec is then 
handed over to a surface generator: Penman \[Pen- 
man Group 1989\] for English, and a variant developed 
at FAW Uhn for German. As opposed to the 'tradi- 
tional' Penman idea, the domain model in which the 
input SitSpec is represented has been de-coupled from 
the linguistic upper model, in order to achieve variety 
in verbalization that would otherwise not be possible 
\[Stede and Grote 1995\], MOOSE is implemented in
Macintosh Common Lisp and uses MacPenman; a full 
description of the system is given in \[Stede 1996\]. 
2.2 Leve ls  o f  representat ion  
A central assumption of the research reported here 
is that the "deepest" level of representation is in gen- 
eral not a linguistic representation; i stead, we assume 
a domain model of some sort, implemented in a KI=I. 
language. Thus, an explicit transition between instan- 
tinted domain knowledge and a language-specific se- 
mantic sentence representation is seen as the central 
step in generation. 

E/G 
~ 0  Dow~in O ~  0 M del 
0 ~ 0  Generation . ?.. ,, -'" " ' , ?  Paramelem English 
.............. SitSpec . \  Well-formed, 
O preferred SemSpee ~> German 
LI ... Ln sentence 
0cxical options) 
Denotation\] Dem,tation I Denotation E 
CotmotatioD\] Coneotati,,~ Conn,,tati,,n I Add altematiolt,;, 
Partial \[ Partial | Partial C extelt~itnu~ 
ScmSpee\] SemSpee \]Se,nSpec O 
Alternation~ Alternationa ~ Alternations N 
MorphSyM orphSynt I MorphSynt 
Figure 1: MOOSE system architecture 
S i tSpec  A SitSpec is meant o be neutral between the 
target languages and between particular paraphrases. 
It is organized along a variant of the ontological cate- 
gories proposed by Vendler \[1967\] and developed fur- 
ther, inter alia, by Bach \[1986\]. We have extended 
Bach's ontology by breaking up events so that their 
internal structure is explicitly represented (similar to 
Pustejovsky's \[1991\] proposal): An event is composed 
of a pre-state (holding before the event commences), 
a post-state (holding when the event is over), and an 
optional activity that brings the transition about. An 
event without such an activity is a mere state tran- 
sition, e.g., The room lit up. An event including an 
activity is a culmination; as an example, consider the 
event of oil draining from an engine, which is given 
here in an abbreviated KL-ONE notation (roles names 
in capital letters, instance names in lower-case): 
(event  1 (PRE-STATE 
(fill-statel (VALUE 'not-empty) 
(CONTAINER enginel )
(CONTENT oi l l )  ) 
(ACTIVITY 
(move-I (OBJECT oill) 
(PATH (pathl (DESTIBATIO~ tankl))))) 
(POST-STATE 
(fill-state2 (VALUE 'empty) 
(CONTAINER enginel)))) 
Figure 2 shows the overall taxonomy of situation 
types. Subsumed by the general ontological system, a 
domain model is defined that holds the concepts rele- 
vant for representing situations in a technical sample 
domain and that specifies the exact conditions for the 
141 
SITUATION 
STATE ACTIVITY EVE~4T 
PROTRACTED- MOMENT.- CULMINATION TRANSITION 
ACTIVITY ACTIVITY / ~ 
PROTRACTED.- MOMENT.- 
CUt.MI\]~ATION CULMINATION 
Figure 2: Situation types in the ontology of MOOSE 
well-formedness of situations. It is implemented in the 
KL-ONE language LOOM \[MacGregor, Bates 1987\]. 
SemSpec  The level of SemSpecs is motivated by the 
notion of "upper modelling" \[Bateman et al 1990\] 
and is a subset of the input representation language 
that was developed for Penman, the sentence plan lan- 
guage (SPL) \[Kasper 1989\]. As opposed to a general 
SPL term, a SemSpec must contain only upper model 
concepts and no domain concepts--recall that the do- 
main model in MOOSE is not subsumed by the upper 
model. Furthermore, since our system takes lexical- 
ization as the decisive task in mapping a SitSpec to 
a SemSpec, the UM concepts referred to in a Sem- 
Spec must be annotated with : lex  expressions; thus, 
a SemSpec is a lexicalized structure. Accordingly, we 
see the upper model as a taxonomy of lexical classes. 
SemSpecs are constructed from SitSpecs by select- 
~ O  Domain Model 
O ~  SitSpec 
0 
o<=_o <_o L 
Denotation I t~not~tion I Denotation E 
co,n,\[ x 
Connotatiot~ Connotatior~ Colmolation I 
Partial / Partial \[ Partial C SemSpec SemSpec I SemSpec \[ 0 
Alternation~ Altffnafio~ Alternations N 
MorphSyn| MorphSynt I MorphSynt 
Generation 
Par aletera ~ ,  
~ )  L1 ... Ln f }  
(lexical options} 
<) 
Add alCemaliotL% exten.~iolLS 
? .....-'"'" English 
Well-formed, ~ sentence 
complete, ) i PENMAN_E/G preferred SemSpec German 
sentence 
Figure 1: MOOSE system architecture 
SitSpec A SitSpec is meant o be neutral between the 
target languages and between particular paraphrases. 
It is organized along a variant of the ontological cate- 
gories proposed by Vendler \[1967\] and developed filr- 
ther, inter alia, by Bach \[1986\]. We have extended 
Bach's ontology by breaking up events so that their 
internal structure is explicitly represented (similar to 
Pustejovsky's \[1991\] proposal): An event is composed 
of a pre-state (holding before the event commences), 
a post-state (holding when the event is over), and an 
optional activity that brings the transition about. An 
event without such an activity is a mere state tran- 
sition, e.g., The room lit up. An event including an 
activity is a culmination; as an example, consider the 
event of oil draining from an engine, which is given 
here in an abbreviated KL-ONE notation (roles names 
in capital etters, instance names in lower-case): 
(eventl (PRE-STATE 
( f i l l - s ta te l  (VALUE 'not-empty) 
(C0|TAI|ER enginel) 
(CO|TE|T o i l l ) )  
(ACTIVITY 
(move-1 (OBJECT oi l l )  
(PATH (path1 (DESTI|ATIOH tank1))))) 
(POST-STATE 
(fill-state2 (VALUE)empty) 
(CO~TAIIER engine1)))) 
Figure 2 shows the overall taxonomy of situation 
types. Subsumed by the general ontological system, a
domain model is defined that holds the concepts rele- 
vant for representing situations in a technical sample 
domain and that specifies the exact conditions for the 
142 
SITUATION 
STATE ACTIVITY EVENT 
PROTRACTED- MOMENT.- CULMINATION TRANSITION 
ACTIVITY ACTIVITY / 
PROTRACTED.- MOMENT.- 
CU L.M\[NATION CULMINATION 
Figure 2: Situation types in the ontology of MOOSE 
well-formedness of situations. It is implemented in the 
KL-ONE language LOOM \[MacGregor, Bates 1987\]. 
SemSpec The level of SemSpecs is motivated by the 
notion of "upper modelling" \[Bateman et al 1990\] 
and is a subset of the input representation language 
that was developed for Penman, the sentence plan lan- 
guage (SPL) \[Kasper 1989\]. As opposed to a general 
SPL term, a SemSpec must contain only upper model 
concepts and no domain concepts--recall that the do- 
main model in MOOSE is not subsumed by the upper 
model. Furthermore, since our system takes lexical- 
ization as the decisive task in mapping a SitSpec to 
a SemSpec, the UM concepts referred to in a Sem- 
Spec must be annotated with : lex expressions; thus, 
a SemSpec is a lexicalized structure. Accordingly, we 
see the upper model as a taxonomy of lexical classes. 
SemSpecs are constructed from SitSpecs by select- 
ing a UM-process and mapping SitSpec ,:dements to 
participant roles of that process, so that all elements 
of the SitSpec are covered. This choice of process 
and participants in effect establishes a perspective on 
the situation; SitSpec is underspecified in this respect. 
SemSpec is still underspecified with regard to, for ex- 
ample, constituent order and lexical choice between 
near-synonyms (that have the same semantics with 
respect to SitSpec yet differ in terms of style, collo- 
cational restrictions, etc.). These and other decisions 
are made, on the basis of verbalization parameters, by 
the surface generators. 
2.3 The  ro le  o f  the  lex icon  
MOOSE is designed with the goal of strong lexical 
paraphrasing capabilities in mind. Therefore, its lex- 
icon is rich in information so that lexical choices can 
be made on the basis of various generation parame- 
ters (which are not discussed in this paper). A lexical 
entry in MOOSE has the following components: 
Denotat ion  A partial SitSpec that defines the ?,p- 
plicability condition of the lexeme: if its denotation 
subsumes ome part of the input SitSpec, then (and 
only then) it is a candidate lexical option for the ver- 
balization. 
Cover ing  The subset of the denotation odes that 
are actually expressed by the lexeme. One of the con- 
straints for sentence production is that every node be 
covered by some lexeme. 
Par t ia l  SernSpec (PSemSpec) The contribution 
that the lexeme can make to a sentence SemSpec. 
By means of shared variables, the partial SemSpec is 
linked to the denotation. 
Connotat ions  Stylistic features pertaining to for- 
mality, floridity, etc. See \[DiMarco et al 1993\]. 
Sal ience ass ignment  (for verbs only): A specifi- 
cation of the different degrees of prominence that the 
verb assigns to the participants. 
A l te rnat ion  ru les (for verbs only): Pointers to 
lexical rules that represent alternations the verb can 
undergo (see section 4). 
Morphosyntact i c  features  Standard features 
needed by the surface generator to produce correct 
utterances. 
,v~- . . . . .  I ,~f the SitSpec--SemSpec mapping is the 
production of a ~o,-,e .... , ,'-' .. -: ~... 7, ~" 
the partial SemSpecs (PSemSpecs) associated with a 
subset of the lexical options, such that the lexemes in 
this subset collectively cover the entire SitSpec. This 
unification process is driven by the candidate verbs; 
their PSemSpec consists of an upper model process 
and the mappings from situation elements to process 
participants, which is achieved by co-indexing with 
positions in the denotation. By means of sharing this 
143 
information between denotation and PSemSpec, the 
lexicon entries serve as a "bridge" between the SitSpec 
to be verbalized and the intermediate representation 
SemSpec; thus, the role of the lexicon in MOOSE is 
somewhat similar to that in DIOGENES \[Nirenburg 
and Nirenburg 1988\]. 
Importantly, the denotation of a lexeme need not be 
a single concept; instead, it, can be a complete configu- 
ration of concepts and roles (cf. Horacek \[1990\]). This 
is necessary since we want to break up the internal 
event structure in the representation of verb mean- 
ing. Consequences are higher computational cost in 
finding lexical options, but also a higher flexibility in 
finding different, verbalizations of the same event. As 
an example, consider the denotation of the causative 
reading of to fill: 
(event (PRE-STATE (fill-state (VALUE (not 'full)) 
(CONTAINER A) ) ) 
(ACTIVITY (CAUSER B)) 
(POST-STATE (fill-state (VALUE < D ~full >) 
(CONTAIIIER A) 
(C0~TENT C) ) ) )  
The variables are bound to instances or atomic values 
of the SitSpec when the two are matched against each 
other. The filler of the VALUE role in the POST-STATE 
appears in angle brackets because it is a default value, 
which we do not discuss further here, though. The 
accompanying partial SemSpec of to fill contains the 
same variables: 
(x / d i rec ted-act ion  : lox  fill 
:actor B :actee h :inclusive C <:destination D>) 
When the denotation is matched against a SitSpec, 
the variable bindings are propagated to the partial 
SemSpec; and when it is unified with the partial Sem- 
Specs corresponding to the other elements, a complete 
SemSpec results, from which PENMAN produces a 
sentence like .Jill filled the tank with oil. (If the VALUE 
is different from 'full, it also gets verbalized, such as 
in Jill filled the tank to the second mark.) 
3 Verb  semant ics  
3.1 Akt ionsar t  
qince wrh denotations are complex enough to re- 
flect certain parts of event structure, they can be re- 
lated to the notion of Aktionsart: the verb-inherent 
features characterizing (primarily) the temporal distri- 
bution of the event denoted. The variety of phenom- 
ena in Aktionsart are far from clear-cut, and there is 
no generally accepted and well-defined set of features. 
In the following, we use the terms given by Bussmann 
\[1983\] and discuss only those Aktionsart features that 
are directly relevant for us because they relate types 
of  SITUATIONS to denotations of verbs. Thus, within 
the context of our system, we define Aktionsart fea- 
tures in terms of patterns of verb denotations. The 
following table lists the correspondences. 
Akt ionsar t  \[ Denotat ion  pat tern  
s ta t ive  ( s ta te  X) 
durative (protracted-act ivity X) 
semelfactive (moment aneous-act ivity X) 
transformative (event (PRE-STATE X) 
(POST-STATE not-X) ) 
resultative (event (ACTIVITY X) 
(POST-STATE Y) 
causative (activity (CAUSER X) ) 
Simple cases are stative verbs like to own or to 
know. Durative verbs characterize continuous occur- 
fences that do not, have internal structure, like to 
sleep, to sit. In the class of non-durative verbs we 
find, amongst others, the opposition between itera- 
tire and semelfactive ones. The former are durative 
activities that result from repeating the same occur- 
rence. In contrast, a semelfactive verb denotes a single 
occurrence, thus in our system a MOMENTANEOUS- 
ACTIVITY, as for example to knock. Transformative 
verbs involve a change of some state, without a clearly 
recognizable vent that would be responsible for it: 
The room lit up. The denotation of such verbs thus in- 
volves a pre-state and a post-state, which is the nega- 
tion of the former. In our ontology, these are TRANSI- 
TIONS. Resultative verbs, on the other hand, charac- 
terize situations in which something is going on and 
then comes to an end, thereby resulting in some new 
s ta te  (CULMINATIONS in our ontology). Their denota- 
tion includes an activity and a post-state. In the liter- 
ature, such verbs are often also called inchoative. 1 The 
final verb-inherent feature we use is the well-known 
causative, which reflects the presence of a CAUSER in 
the denotation. 
3.2 Va lency  
Valency, as introduced by Tesnigre \[1959\], refers to 
the distinction between actants and circumstantials 
(central participants associated with the verb versus 
temporal, locational, and other circumstances). This 
separation is in principle widely accepted, but views 
differ on where to draw the line and how to motivate 
it. The notion of valency was further developed pre- 
dominantly in German linguistics, with a culmination 
point being the valency dictionary of German verbs 
1 The term ' inchoative'  is used to cover a radmr broad range 
of phenomena,  including the beginning of an event (e.g., to in- 
/'/ame) or its coming to an end. We think the term is overloaded 
and prefer to use ' resultat ive'  for the latter group. 
by Helbig and Schenkel \[1973\]. They made an addi- 
tional distinction between 'obligatory' and 'optional' 
actants; Somers \[1987, ch. 1\] proceeded to propose six 
different levels of valency binding. He also pointed out 
that there are different opinions on the type of entities 
that are subject to a verb's valency requirements: dif- 
ferent authors describe them by syntactic lass, some 
by semantic deep cases, and some by their fimction 
(subject, object, etc.). 
In our approach, which is driven by the (practi- 
cal) needs of MLG, we aim at encapsulating syntac- 
tic matters in the front-end generators and here look 
at valency in the SitSpec-SemSpec mapping: When 
characterizing the linking between SitSpec elements 
and SemSpec participants/circumstances, w  describe 
valency in terms of upper model concepts. 
We wish to distinguish cases like the following: 
? Tom disconnected the wire {from the plug}. To 
disconnect requires a SOURCE,  but it can be omit- 
ted in a suitable specific context. 
? Sally ate. While to eat usually requires a direct 
object,, it can also be used intransitively due to 
the strong semantic expectation it creates on the 
nature of the object- - independent of the context. 
? Tom put the book on the table. To put requires a 
DESTINATION, and it cannot be omitted, no mat- 
ter how specific the context. 
? The water drained from the tank" {in the garage}. 
Locative circumstances like in the garage are not 
restricted to particular verbs and can occur in 
addition to PATHS required by the verb. 
Adopting the three categories proposed by Helbig 
and Schenkel \[1973\], we distinguish between obligatory 
and optional participants on the one hand, and cir- 
cumstances on the other. The criterion of optionality, 
as indicated above, singles out the obligatory comple- 
ments. But how, exactly, can we motivate the distinc- 
tion between optional participants and circumstances 
in our framework? By relating the PSemSpec to the 
SitSpec, via the denotation. In the disconnect case, for 
instance, the two items CONNECTOR and CONNECTEE 
are both integral elements of the situation. The sit- 
uation would not be well-formed with either of them 
absent, and the domain model encodes this restric- 
tion. Therefore, both elements also occur in the de- 
notation of to disconnect, and a co-indexed variable 
provides the link to the PSemSpec. Only when build- 
ing the sentence SemSpec is it relevant o know that 
the CONNECTEE can be omitted. The CONNECTEE in 
the denotation therefore must have its counterpart in 
the PSemSpec--that is the SOURCE, but there it is 
marked as optional (see figure 6 below). 
144 
With circumstances, the situation is different: A 
SitSpec is complete and well-formed without the in- 
formation on, for instance, the location of an event. 
Hence, a verb's denotation cannot contain that infor- 
mation, and it follows that it is not present in the 
PSemSpec, either. 
3.3 Verbs  and  the  upper  mode l  
Now, since our instrument for ensuring the well- 
formedness of PSemSpecs and SemSpecs is the upper 
model, we need to inspect the role of valency infor- 
mation in the UM. On the one hand, Bateman et el. 
\[1990\] are well aware of the problems with ascribing 
simple valency patterns to verbs, but for the prac- 
tical implementation of Penman and the UM, some 
strict--and simplifying--category distinctions had to 
be made. Thus, all participants of process types, as 
listed above, are coded in LOOM as obligatory roles. 
Circumstances, on the other hand, are in the UM 
coded as LOOM relations, and there are no restric- 
tions as to what circumstances can occur with what 
processes. Spatio-temporal information is generally 
seen as a circumstance. Concerning the linguistic re- 
alizations, Penman and the UM in their present form 
essentially go back to the Tesnb~rian suggestion that 
participants are realized as nominal groups (with some 
obvious exceptions, as in say that x), and circum- 
stances as prepositional phrases or as adverbs. 
But neither this syntactic division corresponding to
participants and circumstances (direct or indirect ob- 
ject versns adverbs or prepositional phrases) nor the 
UM's semantic postulate that spatio-temporal aspects 
are circumstances hold in general. Regarding spa- 
tial relationships, we find verbs that specifically re- 
quire PATH-expressions, which cannot be treated on 
a par with circumstances: Recall to put, which re- 
quires a direct object and a DESTINATION. Causative 
to pour requires a direct object as well as a PATH with 
either a SOURCE, or a DEST INAT ION,  or both: pour 
the water from the can into the bucket. Some verbs, 
as is well-known, can occur with either a PATH (Tom 
walked into the garden) or with a PLACE (Tom walked 
in the garden), and only in tile garden can here be 
treated as a circumstance. And to disconnect requires 
a direct object ,(the entity that is disconnected) and 
a SOURCE (the entity that something is disconnected 
from), which can be omitted if it is obvious from the 
context: Disconnect ile wire! 
The upper model in its present, form cannot, make 
distinctions of this kind. It is not, possible to specify 
a PATH expression, which will be realized as a prepo- 
sitional phrase, as an obligatory participant. About 
to disconnect (in the causative reading), which is a 
MATERIAL-PROCESS, tile UM can only state that the 
145 
roles ACTOR and ACTEE must be filled, but not the fact 
that there is another entity involved--in the domain 
model called the CONNZCTEZ--which is verbalized as 
a SOURCE.  Moreover, the UM does not know that the 
CONNECTEE is optional in the verbalization; it does 
not distinguish between obligatory and optional par- 
ticipants. 
As a step forward to a more fine-grained distinction 
between participants and circumstances, we differenti- 
ate between requirements of process types (as coded in 
the UM)  and requirements of individual verbs, which 
are to be coded in the lexical entries. In a nutshell, 
valency (as a lexical property) needs to supplement 
the participant/circumstance requirements that can 
be stated for types of processes. To encode the va- 
lency information, we use the partial SemSpec of a 
lexicon entry. The participant roles stated there are 
either obligatory or optional, in which case they are 
marked with angle brackets: 
to d isconnect  
PSS: (x / d i rected-act ion 
:actor A :actee B < :source C >) 
With obligatory participants, the verb is only applica- 
ble if the elements denoted by these participants are 
present in the SitSpec. Optional participants need not 
necessarily be included in the verbalization: If they are 
present in the SitSpec, they may be omitted if there is 
some good reason (e.g., a stylistic preference); if they 
are not present in the SitSpec, the verb can be used 
anyway. 
4 A l te rnat ions  and  extens ions  
Having explained denotations and PSemSpecs, 
specifically for verbs, we can now deal with the task 
of accounting for the different alternations a verb can 
undergo. A generator needs to know that a verb like 
to fill can occur in a variety of configurations: Water 
filled the tank, The tank filled with water, Tom filled 
the tank with water. The most, comprehensive source 
of information on verb alternations i the compilation 
by Levin \[1993\]; we inspect some of the more promi- 
nent, alternations listed there and characterize them 
in terms of changes in denotation and valency of the 
verbs. 
4.1 A l te rnat ions  as mean ing  extens ions  
A simple way of treating alternations i using a sep- 
arate lexical entry for every configuration, but that 
would clearly miss the linguistic generalizations. In- 
stead, we wish to represent he common "kernel" of 
the different configurations only once, and use a set 
of lexical rules to derive the alternation possibilities. 
Jackendoff \[1990\] is concerned with this problem for a 
number of alternations; pecifically, in his LCS frame- 
work he seeks to explain the relationships between sta- 
tive, inchoative, and causative readings of a verb (such 
as those of to fill given above). In Jackendoff's anal- 
ysis, the forms are derived sequentially by embedding 
in the primitives INCH and CAUSE, respectively: 
? stative: BE(\[Thin9 \](A}, \[INa \[Thing \]A \]) 
? inchoative: INCH \[BE(\[Thin9 \](A), lINd \[Thing \]A 
\])\] 
? causative: CAUSE(\[Thi,g \]A, INCH \[BE(\[Th~,g 
\](A), \[IN,, \[Z,,i,g \]a \])\] 
For our NLG purposes, the idea of deriving complex 
verb configurations from more basic ones is attractive, 
but it is necessary that we relate verb meaning to our 
explicit treatment of event structure, instead of mask- 
ing that structure with a primitive like INCH. The 
idea is to see verb alternations not just as relations be- 
tween different verb forms, but to add directionality to 
the concept of alternation and treat them as functions 
that map one into another. From this viewpoint, there 
are two groups of alternations: (1) Alternations that 
do not affect the denotation of the verb. Examples are 
the passive or the substance-source alternation (The 
tank leaked oil; Oil leaked from the tank): The truth 
conditions do not change. (2) Alternations that do 
change the denotation of the verb. 
The critical group is (2), because if we derive verb 
configurations from others and rewrite the denotation 
in this process, it has to be ensured that the pro- 
cess is monotonic. Therefore we define the direction- 
ality for group (2) to the effect that an alternation 
always adds meaning: the newly derived form commu- 
nicates more than the old form--the denotation gets 
extended. This notion is different from the standard, 
non-directional way in which alternations are seen in 
linguistics; to label the difference, we call alternations 
of group (2) eztensions. In this section, we will in- 
troduce a number of extension rules for which we can 
give a clear definition in terms of Aktionsart features, 
as they were introduced in section 3.1. These rules 
extend the denotation of a verb and rewrite its PSem- 
Spec in parallel to reflect the change in valency; the 
result is a new verbalization option, which can (lifter 
from the previous one in terms of coverage or attri- 
bution of salience (not discussed here). The rules will 
be conveniently simple to state, thanks to the upper 
model, which provides the right level of abstraction 
from syntax. 
We illustrate our goal with an example. If a SitSpec 
encodes the situation of Tom removing all the water 
146 
from a tank, then the verb to drain is a candidate 
lexeme. While it can appear in a number of different 
configurations, we wish to match only one of its forms 
against the SitSpec, though. This is the most basic 
one, denoting an ACTIVITY: The water drained from 
the tank. Here, the case frame of the verb has to 
encode that from the tank is an optional constituent. 
Now, an extension rule has to systematically derive 
the CAUSATIVE  form: Tom drained the water from the 
tank. And also from the first configuration, another 
rule derives the RESULTATIVE reading, which adds the 
information that the tank ended up empty: The tank 
drained of the water. Here, of the water is an optional 
constituent. To this last form, a causative xtension 
can apply and yield Tom drained the tank of the water. 
To compute these configurations automatically, we 
define an alternation or extension rule as a 5-tuple 
with the following components: 
NAM: a unique name; 
DXT: extension of denor.ation; 
C0V: additions to the covering-list; 
R0C: role changes in PSemSpec; 
NR0: additional PSemSpec roles and fillers. 
The DXT contains the denotation subgraph that the 
new verbalization has in addition to the old one. The 
syntax is, of course, the same as that of the deno- 
tation of a lexical entry. Specifically, it can contain 
variables; these can co-occur in the C0V list: the items 
that the new verbalization covers in addition to those 
of the old one. R0C is a list of pairs that exchange 
participant role names or the UM-type in the PSem- 
Spec; this replacement can also change optionality. 
For example, (< :ac tee  > :ac tor )  means "replace 
the term : ac tee  in the PSemSpec of the old verbaliza- 
tion, where it was optional, with : ac'eor, which is not 
optional." Finally, Nl:t0 contains new roles and fillers 
that are to be added to the new PSemSpec; these will 
also contain variables from the denotation extension. 
Applying such a rule to a verbalization option vo 
works as follows: Add the contents of DXT to the de- 
notation of vo, and match the new part against the 
SitSpec. If it matches, make a copy vo' of vo and 
assign it a new name as well as the denotation just 
formed. Add the C0V list, which has been instantiated 
by the matching, to the covering-list of vo'. Exchange 
the role names in the PSemSpec of vo' as prescribed 
by Ft0C, and, importantly, in the order they appear 
there. Finally, add NR0 to the PSemSpec. 
4.2 Lex ica l  ru les  fo r  extens ions  
S ta t ive - resu l ta t ive  Example: Water filled the tank 
/ The tank filled with water. In discussing verbs that 
denote a STATE, Jackendoff \[1990\] points out that fill, 
cover, surround, and saturate can describe either a 
STATE or an inchoative vent, and encodes the differ- 
ence with the primitive INCH we have shown in the 
introduction to this section. Our goal is to do without 
the primitive, and to define the change in terms of the 
Aktionsart of the verb; to this end, we use RESULTA- 
WIVE in the place of 'inchoative' (see section 3.1). 
On a similar matter, Levin \[1993\] describes the 'lo- 
catum subject' alternation, which for instance holds 
between I filled the pail with water and Water filled the 
pail. It thus relates a causative and a non-causative 
form. Levin states that the alternation applies to a 
class of 'fill verbs', which are many more than the four 
given by Jackendoff, and her alternation is not exactly 
the one we need here, since it also involves a causative 
form--deriving this, however, is in our framework a 
separate step. 
What we need here is a mixture of Jackendoff's and 
Levin's insights: Several of Levin's fill verbs can be 
both transitive and intransitive; and some of the in- 
transitive readings denote 'to become Xed'. Among 
these verbs are fill, flood, soak, encrust, or saturate: 
The kitchen flooded with water means the same as The 
kitchen be'came flooded with water. For this subgroup 
of the fill verbs we define an extension rule that, derives 
f rom a STATE reading a RESULTATIVE one. Notice that 
this is different from Levin's ' locatum subject' alter- 
nation, since it, does not, involve a causer. 
NAM : s ta t ive - resu l ta t ive  
DXT: (event (Y (ACTIVITY X))) 
COV : (X Y) 
ROC: ((:actor :inclusive) 
(:acres :actor) 
(directed-action nondirected-action) ) 
IR0:  ( )  
To illustrate the rule with an example, consider the 
denotation and PSemSpec of the STATE reading of fill: 
DEN: (fill-state (CONTAINER A) 
(C0NTEIT B) 
(VALUE C)) 
PSS: (x / directed-action :lax fill_el 
:actor B :acres A < :destination C >) 
When matching it against a SitSpec with a tank and 
water, this yields the verbalization The water filled 
the tank, covering only the POST-STATE of the Sit- 
Spec. Now, the alternation rule extends the denota- 
tion to also covering the EVENT and the ACTIVITY that 
brings the filling about. Applying the changes to the 
PSemSpec results in 
(x / nondirected-action :lax fill_el 
:inclusive B :actor A < :destination C >) 
from which PENMAN produces The tank was filled 
with the water. 
147 
A few stative verbs cannot be RESULTATIVE with- 
out being also CAUSATIVE. Consider to cover in these 
examples from Jackendoff: 
Snow covered the ground. 
* The ground covered with snow. 
Bill covered the ground with snow. 
For these, a 'stative-culmination' extension derives 
the RESULTATIVE-\[-CAUSATIVE form directly from the 
STATIVE one. The rule is defined similar to the one 
given above, so we do not show it here. 
Causat ive  extens ions  Example: The napkin soaked 
/ Tom soaked the napkin. Levin discusses a 
'causative/inchoative' alternation that, applies to a 
large number of verbs. The class formed by them is 
somewhat, heterogeneous with respect to the Aktion- 
sart, though; it contains for example to move as well 
as to open. The former is in its basic form DURATIVE  
(The cat moved), and the latter TRANSFORMATIVE 
(The door opened). Accordingly, we split the alterna- 
tion in two, which only differ in the DXT component, 
reflecting the difference in Aktionsart. The alternation 
adds a CAUSER to the denotation, makes the for- 
mer : ac tor  the new : actee ,  and accordingly changes 
the overall UM-type from NONDIRECTED-ACTION to 
DIRECTED-ACTION, because there is now an ACTEE 
present,. 
|AM : durative-causative 
DXT: (activity (CAUSER X)) 
COY: ()  
ROC: ((:actor :ac tee)  
(nond i rec ted-act ion  d i rec ted-act ion)  ) 
HRO: (:actor X) 
?AM: resultative-causative 
DXT: (event (ACTIVITY (X (CAUSER Y)))) 
COY: ()  
ROC: ((:actor :actee) 
(nondirected-action directed-action)) 
|RO: (:actor Y) 
The first rule derives, for example, Tom moved the cat 
from The cat moved, and the second Tom closed the 
door from The door closed. 
Locat ive  extens ions  Example: (a) Sally sprayed the 
wall with paint. /(b) Sally sprayed paint onto the wall. 
We have mentioned the locative extension above; its 
characteristic s that configuration (a) of the verb con- 
veys that something is performed in a 'complete' or 
'holistic' manner, whereas configuration (b) lacks this 
facet of meaning. Levin points out that this alterna- 
tion has received much attention in linguistics research 
and notes that, in spite of the efforts, a satisfactory 
definition of the 'holistic'-facet has not been found. 
Jackendoff, in his treatment of the alternation, sug- 
gests encoding the 'holistiC feature in a primitive: the 
Sally sprayed paint onto the wall. 
(spray. l (CAUSER sally-l) 
(OBJECT paint-l) 
(PATH (path-1 (DESTINATION wall-l)))) 
Sally sprayed the wall with paint. 
(eveat. l (PRE-STATE (covered.state-! (OBJECT wall-l) 
(VALUE (not 'covered)))) 
(ACTIVITY (spray-I (CAUSER re&fly-l) 
(OBJECT paint- 1 ) 
(PATH (path-I (DESTINATION wall-l))))) 
(POST-STATE (covered-etage-I (OBJECT wall.l) 
(VALUE 'covered)))) 
Figure 3: SitSpecs for configurations of to spray 
fimction ONa is a derivative of ON and means that 
something 'distributively' covers a surface, e.g., the 
paint covers all of the wall. Introducing a primitive, 
though, amounts to conceding that no explanation in 
terms that are already known can be given. We can- 
not solve the question of 'holisticness', either, but we 
want to point to the fact that the two verb configu- 
rations correlate with a change in Aktionsart: Sally 
sprayed paint onto the wall is durative (she can do it 
for two hours), whereas Sally sprayed the wall with 
paint is transformative (she can do it in two hours). 
That observation leads us to propose that the example 
is best analyzed as involving a mere ACTIVITY in the 
with configuration, and an additional TRANSITION in 
the onto configuration. Hence, we assign two differ- 
ent SitSpecs for the sentences, one ACTIVITY and one 
EVENT, as shown in figure 3. 
The crucial point now is that the first SitSpec is 
fully embedded in the second; this is in correspon- 
dence with the truth conditions: If Sally has sprayed 
the wall with paint, then she also has sprayed paint 
onto the wall. To generalize the correspondence to
an extension rule, we need to assume in the domain 
model a concept like COMPLETION-STATE, which is 
to subsume all those STATES in the domain model 
that have "extreme" values: an empty bucket, a fully 
loaded truck, and so forth. The exact interpretation 
of COMPLETION-STATE is the open question that Levin 
\[1993\] referred to, and that 3ackendoff treated with his 
'a' subscript. We do think, though, that an abstract 
STATE in the domain model, which subsumes a range 
of the concrete STATES, is preferrable to introducing a
primitive on the linguistic level (unless the primitive 
is relevant, for other linguistic phenomena s well). 
The following alternation rule applies to durative 
verb readings that denote ACTIVITIES of something 
being moved to somewhere, and extends them to also 
cover the POST-STATE, which must be subsumed by 
COMPLETION-STATE. In this way, it derives reading 
(a) from (b) in the spray example, and analogously for 
the other verbs undergoing the alternation, e.g.: Tom 
t (wrote X) \[ -..~+i~.... / 
mative- 
activit 
! DUa~'n~ / 
\[(event(PRE-STATEX) -------'l ' 7  
\[ (POST-STATE NO T..-X2)..\[ / c~u~t~i;~. 
resultative- LO~A~CAUS^~V~ \[ 
causative spray / /  
load/ locative/clear- / transitive 
(event(PRE-STATE X) \] 
\[ (ACTIVITY(CAUSER Y)) \[ 
I REs~.w^~.c_~u~Ar~ / 
Figure 4: Dependency of extension rules 
loaded hay onto the wagon / Tom loaded the wagon 
with hay; Jill stuffed the feathers into the cushion /
,Jill stuffed the cushion with tile feathers. The PSem- 
Spec is modified as follows: The former :dest  inat  ion 
(wall) becomes the new :actee,  whereas the former 
: ac~ee (paint) now fills the role < : inc lus ive  >, and 
is optional there, because Jill stuffed the cushion is 
also well-formed. 
HAM: locative-transitive 
DXT : (event 
(MOVE (OBJECT X) 
(PATH (DESTINATION Y))) 
(POST-STATE (Z completion-state (OBJECT Y)))) 
COV: (Z) 
KOC: ((:actee < :inclusive >) 
( : destinat ion : actee) ) 
\]iRO: () 
Most of this rule covers two kinds of locative alter- 
nation, which Levin distinguishes: the 'spray/load' al- 
ternation and the 'clear (transitive)' alternation. The 
latter applies only to the verbs clear, clean, drain, 
empty and can be seen as the 'semantic inverse' 
of the spray/load alternation, because one group of 
verbs denotes activities of placing something some- 
where, and the other describes activities of remov- 
ing something from somewhere; but both have the 
same 'holistic' effect in one of the verb configura- 
tions. For example, the rule derives Tom drained the 
container of the water from Tom drained the water 
from the container) Thus, the rule for the clear- 
2We ignore the role of the definite determiner here, which in 
148 
Denotation: (activity (OBJECT A) 
(PATH (SOURCE B))) 
PSemSpec: (xl / nondirected-action :lex drain_el 
:actor A :source B) 
(0) The water drained from the tank. 
Locative/clear-intransitive of (0): 
Denotat ion:  (event (ACTIVITY (OBJECT A) 
(PATH (SOURCE B))) 
(POST-STATE (C (OBJECT B))))  
PSemSpec: (xl / nondirected-action :lex drain_el 
:of-matter A :actor B) 
(1) The tank drained of the water. 
Durative-causative of (0): 
Denotat ion:  (ac t iv i ty  (OBJECT A) 
(PATH (SOURCE B)) 
(CAUSER C)) 
PSemSpec: (xl / directed-action :lex drain_el 
:actee A :source B :actor C) 
(2) Tom drained the water from the tank. 
Resultative-causative of (1): 
Denotat ion:  (event (ACTIVITY (OBJECT A) 
(PATH (SOURCE B)) 
(CAUSER C)) 
(POST-STATE (C (OBJECT B))) )  
PSemSpec: (xl / d i rec ted-act ion  : lex dra in_e l  
:o f -mat ter  A :actee B :actor  C) 
(3) Tom drained the tank of the water. 
Figure 5: Derivation of drain-configurations 
alternation is the same as the one shown above, with 
three exceptions: the keyword replacing :acl;ee is not 
<: inc lus ive> but <:o f -mat ter>,  the DESTINATION 
in the denotation is a SOURCE, and correspondingly, 
the keyword :dest inat ion  is : source. 
The clear verbs, except for to clean, can in addition 
be intransitive, and Levin states a separate alternation 
for them. For to dram, the first configuration is The 
water drained from the tank, and the second is either 
The tank drained or ?The tank drained of the wa- 
ter. According to Levin, "the intransitive form may 
be best in the absence of the of-phrase" \[Levin 1993, 
p. 55\]. The SitSpec denoted by the first configuration 
is: 
The water drained from the tank. 
(move-1 (OBJECT water - l )  
(PATH (path-1 (SOURCE tank- I ) ) ) )  
Note that our ducative-causative extension rule given 
fact has critical influence on the 'holistic' interpretation of mass 
flollns, 
above applies in this case and extends the coverage of 
the SitSpec to one corresponding to Tom drained the 
water from the tank. A rule that is parallel to that 
for the transitive case is given below; it derives ?The 
tank drained of the water; since the < :of -ma'eter  > 
is optional, we can also produce The tank drained, 
which is, according to Levin, preferred. 
EAH: locative/cleex-intr~msitive 
DXT: (event 
(MOVE (OBJECT X) 
(PATH (SOURCE Y))) 
(POST-STATE (Z complet ion -s ta te  (OBJECT Y))))  
COY: (Z) 
ROC: ( ( :ac tor  < :o f -mat ter  >) 
( : source  :ac tor ) )  
IR0: () 
Summary  Tile extensions introduced now can apply 
in a sequential order to a verb. Figure 4 provides a 
synopsis: The boxes contain the denotation patterns 
that correspond to the Aktionsart feature, and the 
rules transform a configuration with one Aktionsart 
into another. In this graph, every verb base form has 
an entry point corresponding to the Aktionsart of its 
most basic configuration. Examples: to fillis STATIVE, 
to drain is DURATIVE, tO open is TRANSFORMATIVE, 
to remove is RESULTATIVE-+-CAUSATIVE. The "double 
box" in the middle is the entry point for both TRANS- 
FORMATIVE and RESULTATIVE verbs, but the incoming 
arrows produce RESULTATIVE forms. 
From the entry point of a verb, arcs can be followed 
and rules applied if the respective alternation is spec- 
ified in the lexical entry. Returning to the example 
of to drain, figure 5 shows how the rules successively 
derive the various configurations. 
4.3 Examples :  lex ica l  ent r ies  for  verbs  
To illustrate our treatment of valency, argument 
linking, and alternation/extension rules, figure 6 
shows excerpts from lexical entries of eight different 
verbs. Ttle information is arranged as follows: On the 
right-hand side is the case frame of the verb, written as 
the SemSpec participant keywords (each starting with 
a colon). Optional participants are enclosed in angle 
brackets. On the left-hand side are excerpts from the 
denotation: the names of the roles whose fillers are co- 
indexed with the respective position in the case frame. 
Thus, the arrows give the argument linking for the 
base form of the verb, which can be quite simple, as 
in open or move. From the perspective of the domain 
model, the roles on the left-hand side of the arrows 
are required to be fil led--as is encoded in the LOOM 
definitions of the underlying concept. Only items ap- 
pearing with an asterisk in front of them are optional 
in the SitSpec: for example, a SitSpec underlying an 
149 
DISCONNECT 
CAUSER ? :actor 
CONNECTOR ) :acctee 
CONNECTEE ~ <~rc~> 
POtm 
PATH-SOURCE 
OBJECT 
i *PATH-D~TINA~ON 
~AUSER 
\ ] "  :actor  
? ' < :actee> 
s~lbSlall~-SOtlr~ 
durat ive -eausat ive  
DRAIN 
OBJECT 
PATH-SOURCE 
*PATH-DESTINATION 
*CAUSER 
~t :actor 
< L~OUfO?> 
du rative-cau~ative 
1 ocati ve/clea/-in transitive 
resultative.eausafi ve 
MOVE/WALK 
OBJECT ? :ael0r 
"PATH 
*CAUSER 
dmative-eausative 
OPEN 
OBJECr 
*CAUSER 
resu Itative-ca usative 
:actor 
SPRAY 
CAUSER ) :actor 
OBJECT ~ :acle? 
PATH-DESTINAT\[ON - '~  :destination 
HLL 
s0tay-load 
CONTENT ) :actor 
CONTAINER ? :actee 
VALUE ~ <:tll$$\[illatiOll 
(delaul t~ 
*CAUSER 
stative-fesultativ~ 
tesul tative-catlsative 
LEAK 
PATH-SOURCE ~ :act0t 
OBJECT ~ <:actee> 
*PATH-DESTINATION 
subslar lo~-sottrc? 
Figure 6: Excerpts of sample lexical entries for verbs 
OPEN event is well-formed without a CAUSER being 
present. The optional elements are listed here because 
they  can be verba l i zed w i th  the extens ion  rules that  
we have in t roduced.  The  names  of all the app l icab le  
rules ( those  that  we have d iscussed here) for a verb 
appear  be low the l ine. 
5 Summary  
We have (very briefly) introduced the sentence gen- 
erator MOOSE and then inspected the role of lexical 
semantics therein. MOOSE produces a range of dif- 
ferent paraphrases for the same underlying SitSpec, 
and one instrument o that end is the generation of 
several verb configurations. We proposed a set of al- 
ternation/extension rules that  der ive such conf igura-  
t ions  f rom the  basic conf igurat ion - -wh ich  is the only 
one s tored  in the lexicon. A l te rnat ions  are der ived by 
rewr i t ing  the par t ia l  SemSpec ,  and  in the case of ex- 
tens ions ,  add ing  a new subgraph to the denotat ion ,  
and possibly adding nodes to the covering-list. We 
have shown that the entire alternation space for a verb 
like "to drain can be generated in this manner. 
150 
References  
\[Bach 1986\] E. Bach. "The algebra of events." In: Linguistics 
and Philosophy 9, 1986 
\[Bateman et al 1990\] J. Bateman, It. Kasper, J. Moore, R. 
Whitney. "A general organization of knowledge for natu- 
ral language processing: the Penman upper model." USC 
Information Sciences Institute Tech. Rep., 1990. 
\[Bussmann 1983\] H. Bussmann. Lexikon der 
Sprachwissenschafl. Stuttgart, KrSner, 1983. 
\[DiMarco et al 1993\] C. DiMarco, G. Hirst, M. Stede. "Tile 
Semantic and Stylistic Differentiation of Synonyms and 
Near-Synonyms." In: Working notes of tire AAAI Spring 
Symposium on Building Lexicons for Machine Transla- 
tion, Stanford University, March 1993. 
\[Helbig and Schenkel 1973\] G. Helbig, W. Schenkel. 
Wb'rterbuch zur Valenz und Distribution deutscher Ver- 
ben. VEB Verlag EnzyklopS.die, Leipzig, 1973. 
\[Horacek 1990\] H. Horacek. "The architecture of a generation 
component in a complete natural anguage dialogue sys- 
tem." In: Ft. Dale, C. Mellish, M. Zock (eds.): Current 
research in natural language generation. London: Aca- 
demic Press, 1990. 
\[Jackendoff 1990\] Ft. Jackendoff. Semantic structures. Cam- 
bridge/MA: MIT Press, 1990. 
\[Ka.sper 1989\] Ft. Kasper. "A flexible interface for linking appli- 
cations to Penman's entence generator." In: Proceedings 
of the DARPA Workshop on Speech and Natural Lan- 
guage Processing, University of Pennsylvania, 1989. 
\[Levin 1993\] B. Levin. English verb classes and alternations. 
Chicago: University of Chicago Press, 1993. 
\[MacGregor, Bates 1987\] l::t. MacGregor, Ft. Bates. "The Loom 
Knowledge Representation Language." USC Information 
Sciences Institute Tecb. Ftep. ISI/RS-87-188, 1987. 
\[Nirenburg and Nirenburg 1988\] S. Nirenburg, I. Nirenburg. 
"A framework for lexical selection in natural language 
generation." Ill: Proceedings of the 12th International 
Con\]erence or* Computational Linguistics (COLING). 
Budapest, 1988. 
\[Penman 1989\] The Penman group. Unpublished Documenta- 
tion of the Penman Sentence Generation System. USC In- 
formation Sciences Institute, Marina del Ftey/CA, 1989. 
\[Pustejovsky 1991\] J. Pustejovsky. "The syntax of event struc- 
ture." In: Cognition 41 (47-81), 1991. 
\[RSsner and Stede 1994\] D. Rfsner, M. Stede. "Generating 
multilingual documents from a knowledge base: The 
TECHDOC project." In: Proceedings o\] the Interna- 
tional Conference on Corrtputatlonal Linguistics (COL- 
ING). Ixyoto, 1994. 
\[Somers 1987\] H. Somers. Valency and case in computational 
linguistics. Edinburgh: Edinburgh University Press, 1987. 
\[Stedeand Grote 1995\] M. Stede, B. Grote. The lexicon: 
Bridge between language-neutral nd language-specific 
representations. In: Working notes of the IJCAI work- 
shop on multilingual text generation. MontrEal, 1995. 
\[Stede 1996\] M. Stede. "Lexical semantics and knowledge rep- 
resentation ill multilingual sentence generation." Doctoral 
dissertation, University of Toronto, 1996. 
\[Tesnib~re 1959\] L. Tessni6.re. Eldrnents de syntaxe structurale. 
Paris: Klinsieck, 1959. 
\[Vendler 1967\] Z. Vendler. Lin- 
guistics and Philosophy. I thaca/NY: Cornell University 
Press, 1967. 
