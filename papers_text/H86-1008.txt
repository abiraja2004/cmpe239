A Terminological Simplification Transformation for 
Natural Language Question-Answering Systems 1 
David G. Stal lard 
BBN Laborator ies Inc. 
10 Moulton St. 
Cambridge, MA. 
02238 
Abstract 
A new method is p resented  for  s impl i fy ing the  log ica l  express ions  used  to represent  
u t te rance  mean ing  in a natura l  language sys tem.  This s imp l i f i ca t ion  method ut i l i zes  
the  encoded knowledge  and  the  l imited in fe rence-mak ing  capab i l i ty  of a taxonomic  
knowledge  representat ion  sys tem to reduce  the  const i tuent  s t ruc ture  of log ica l  
express ions .  The spec i f i c  app l i ca t ion  is to the  prob lem of mapp ing  express ions  of the  
mean ing  representat ion  language to a database  language capab le  of re t r iev ing  ac tua l  
responses .  Par t i cu la r  account  is taken  of the  mode l - theoret i c  aspects  of th is  
p rob lem.  
1. Introduction 
A common and use fu l  s t ra tegy  for  const ruct ing  natura l  language in ter face  sys tems is 
to divide the  process ing  of an u t te rance  into  two major  s tages :  the  f i rs t  mapp ing  the  
u t terance  to a log ica l  express ion  represent ing  i ts  "mean ing"  and  the  second produc ing  
f rom th is  log ica l  express ion  the  appropr ia te  response .  The second s tage  is not  
neccesar i l y  t r iv ia l :  the  d i f f i cu l ty  of i ts  des ign  is s ign i f igant ly  a f fec ted  by  the  
complex i ty  and  genera lness  of the  logica l  express ions  it has  to  dea l  with. If th i s  i ssue  
is not  faced  square ly ,  it  may a f fec t  cho ices  made e l sewhere  in the  system.  Indeed,  a 
need  to res t r i c t  the  form of the  mean ing  representat ion  can  be at  odds  with 
par t i cu la r  approaches  towards  produc ing  it - as fo r  example  the  "compos i t iona l "  
approach ,  which does  not  seek  to cont ro l  express ion  complex i ty  by  giving 
in terpretat ions  for  whole phrasa l  pat terns ,  but  s imply  combines  together  the  mean ing  
of ind iv idua l  words  in a manner  appropr ia te  to the  syntax  of the  u t te rance .  Such  a 
conf l i c t  is cer ta in ly  not  des i rab le :  we want  to have  f reedom of l ingu is t i c  ac t ion  as  well 
as to be ab le  to obta in  cor rec t  responses  to u t te rances .  
This paper  t reats  in deta i l  the  par t i cu la r  man i fes ta t ion  of these  i ssues  for  natura l -  
l anguage sys tems which serve  as in ter faces  to a database :  the  prob lems that  a r i se  in a 
module  which maps  the  mean ing  representat ion  to a second logica l  language for  
1The work presented here was supported under DARPA cont rac t  ~Neee14-85-.c-0016. The views 
and conc lus ions  conta ined  in th i s  document ore those of the author  and should not be 
in terpreted  as necessar i l y  represent ing  the o f f i c ia l  po l i c ies ,  e i ther  expressed or imp l ied ,  
of the Defense Advanced Research Pro jec ts  Agency or of the Un i ted  States  Government. This  
paper was or ig ina l ly  pub l i shed in the Proceedings o\[ the 24th Annual Meeting o\[ the 
Association \[or Computational Linguistics, 10--13 June, 1986, Columbia Un ivers i ty ,  New 
York. Requests for  copies should be addressed to: 
Dr.Donold E. Walker (ACL) 
Be l l  Communications Research 
435 South S t reet  MRE 2A379 
Morr istown,  NJ 07960, USA 
62 
express ing  ac tua l  database  quer ies .  A modu le  per fo rming  such  a mapp ing  is a 
component  of such  quest ion -answer ing  sys tems as TEAM \[4\], PHLIQA1 \[7\] and  IRUS \[1\]. 
As an  example  of d i f f i cu l t ies  which may be  encountered ,  cons ider  the  quest ion  "Was 
the  pat ient ' s  mother  a d iabet ic?"  whose  log ica l  representat ion  must  be mapped onto  a 
par t i cu la r  boo lean  f ield wh ich  encodes  for  each  pat ient  whether  or  not  th is  complex  
proper ty  is t rue .  Any var ia t ion  on th i s  quest ion  which a compos i t iona l  semant ics  
might  a lso  hand le ,  such  as "Was d iabetes  a d i sease  the  pat ient ' s  mother  su f fe red  
f rom?" ,  would resu l t  in a semant ica l ly  equ iva lent  but  very  d i f fe rent - look ing  log ica l  
express ion ;  th is  d i f fe rent  express ion  would a lso  have  to  be  mapped to th is  f ield. How 
to dea l  with these  and  many o ther  poss ib le  var iants ,  w i thout  mak ing the  mapp ing  
process  excess ive ly  complex ,  is c lear ly  a prob lem.  
The so lu t ion  which th is  paper  presents  is a new level  of p rocess ing ,  in termed ia te  
between the  o ther  two: a nove l  s imp l i f i ca t ion  t rans format ion  wh ich  is per fo rmed on the  
resu l t  of semant ic  in terpretat ion  be fore  the  a t tempt  is made to map it to the  
database .  This s imp l i f i ca t ion  method re l ies  on knowledge  which is s to red  in a 
taxonomic  knowledge  representat ion  sys tem such  as NIKL \[5\]. The pr inc ip le  beh ind  the  
method is that  an  express ion  may be s impl i f ied by  t rans la t ing  i ts  subexpress ions ,  
where  poss ib le ,  in to  the  language of NIKL, and  c lass i fy ing  the  resu l t  in to  the  taxonomy 
to  obta in  a s imp ler  equ iva lent  for  them.  The resu l t  is to p roduce  an  equ iva lent  but  
syntact i ca l ly  s imp ler  express ion  in which fewer ,  but  more  spec i f i c ,  p roper t ies  and  
re la t ions  appear .  The benef i t  is that  deduct ions  f rom the  express ion  may be more  
eas i ly  " read  off"; in par t i cu la r ,  the  mapp ing  becomes  eas ie r  because  the  proper t ies  
and  re la t ions  appear ing  are  more  l ike ly  to be  e i ther  those  of the  database  or  
composab le  f rom them.  
The body  of the  paper  is d iv ided into  four  sect ions .  In the  f i rs t ,  I will summar ize  
some past  t reatments  of the  mapp ing  between the  mean ing  representat ion  and  the  
query  language,  and  show the  prob lems they  fai l  to so lve.  The second sect ion  
prepares  the  way by  showing how to connect  the  taxonomic  knowledge  representat ion  
sys tem to a log ica l  language used  for  mean ing  representat ion .  The th i rd  sect ion  
presents  the  " recurs ive  te rmino log ica l  s imp l i f i ca t ion"  a lgor i thm i tsel f .  The las t  sect ion  
descr ibes  the  imp lementat ion  s ta tus  and  suggests  d i rec t ions  for  in teres t ing  fu ture  
work.  
2. A Formal Treatment of the Mapping Problem 
This sect ion  d i scusses  some prev ious  work  on the  prob lem of mapp ing  between the  
log ica l  language used  for  mean ing  representat ion  and  the  log ica l  language in wh ich  
ac tua l  database  quer ies  a re  expressed .  The d i f f i cu l t ies  wh ich  remain  for  these  
approaches  will be po in ted  out.  
A common organ izat ion  for  a database  is in te rms of tab les  with rows and  co lumns .  
The s tandard  fo rmulat ion  of these  ideas  is found in the  re la t iona l  model  of Codd \[3\], 
in which the  tab les  a re  character i zed  as re la t ions  over  se ts  of a tomic  data  va lues .  
The e lements  ( rows)  of a re la t ion  are  ca l led  " tup les" ,  whi le i ts  ind iv idua l  a rgument  
p laces  (co lumns)  a re  te rmed i ts  "a t t r ibutes" .  Logica l  languages  fo r  the  const ruct ion  of 
quer ies ,  such  as Codd's  re la t iona l  a lgebra ,  must  make  re ference  to the  re la t ions  and  
a t t r ibutes  of the  database .  
The f i r s t  i ssue  to be faced  in cons iderat ion  of the  mapp ing  prob lem is what  e lements  
of the  database  to ident i fy  with the  ob jec ts  of d i scourse  in the  u t te rance  - that  is, 
63 
with the non-logical constants 2 in the meaning representation. In previous work \[9\] I 
have argued that these should not be the rows of the tables, as one might first think, 
but rather certain sets of the atomic attribute-values themselves. I presented an 
algorithm which converted expressions of a predicate calculus-based meaning 
representation language to the query language ERL, a relational algebra \[3\] extended 
with second-order operations. The translations of non-logical constants in the 
meaning representation were provided by fixed and local translation rules that were 
simply ERL expressions for computing the total extension of the constant in the 
database. The expressions so derived were then combined together in an appropriate 
way to yield an expression for computing the response for the entire meaning 
representation expression. If the algorithm encountered a non-logical constant for 
which no translation rule existed, the translation failed and the user was informed as 
to why the system could not answer his question. 
By way of illustration, consider the following relational database, consisting of 
clinical history information about patients at a given hospital and of information about 
doctors working there: 
PAT I ENTS (PAT I D, SEX, AGE, D I S EASE, PHYS, D I AMOTHER) 
DOCTORS (DOC I D. NAME. SEX, SPECIALTY) 
where "PHYS" is the ID of the  t reat ing  phys ic ian,  and "DIAMOTHER" is a boo lean field 
ind icat ing whether  or not  the  pat ient ' s  mother  is d iabet ic .  Here are  the ru les  for the 
one-p lace  pred icate  PATIENTS, the  one-p lace  pred icate  SPECIALTIES, and the two-  
p lace pred icate  TREATING-PHYSICIAN: 
PATIENTS => (PROJECT PATIENTS OVER PATID) 
SPECIALTIES => (PROJECT DOCTORS OVER SPECIALTY) 
TREATING-PHYSICIAN => (PROJECT (JOIN PATIENTS 
TO DOCTORS 
OVER PHYS DOCID) 
OVER PATID DOCID) 
Note that while no table exists for physician SPECIALTIES, we can nonetheless give a 
rule for this predicate in way that is uniform with the rule given for the predicate 
PATIENTS. 
One advantage of such local translation rules is their simplicity. Another advantage 
is that they enable us to treat database question-answering model-theoretically. The 
set-theoretic structure of the model is that which would be obtained by generating 
from the relations of the database the much larger set of "virtual" relations that are 
expressible as formulas of ERL. The interpretation function of the model is just the 
translation function itself. Note that it is a pczTt~aZ function because of the fact that 
some non-logical constants may not have translations. We speak therefore of the 
database constituting a "partially specified model" for the meaning representation 
language. Computation of a response to a user's request, instead of being 
characterizable only as a procedural operation, becomes interpretation in such a 
model. 
A similar model-theoretic approach is advocated in the work on PHLIQAi \[8\], in 
which a number  of difficulties in writing local rules are identified and overcome. One 
class of techniques presented there allows for quite complex and general expressions 
2This  term, wh i le  a s tandard one in formal log ic ,  may be confused w i th  o ther  uses of the 
word "constant" .  I t  s imply re fers  to the funct ion ,  p red icate  and ord inary  constant  symbols, 
such as "MOTHER" or "JOHN", whose denotat ions  depend on the in terpretat ion  of the language, 
as opposed to f i xed  symbols l i ke  "FORALL","AND", "TRUE*'. 
64 
to resu l t  f rom local  ru le  app l i ca t ion ,  to  which a post - t rans la t ion  s impl i f i cat ion process  
is appl ied.  Other  spec ia l -purpose  techn iques  are  also presented ,  such  as the  c reat ion  
of "prox ies"  to s tand  in for  e lements  of a set  for  which only the  card ina l i ty  is known. 
A more di f f icul t  problem, for  wh ich  these  techn iques  do not  p rov ide  a genera l  
t reatment ,  a r i ses  when we want  to get  at  in fo rmat ion  cor respond ing  to a complex 
proper ty  whose component  proper t ies  and re la t ions  are  not  themse lves  s to red .  For  
example,  suppose  the  query  "List pat ients  whose mother  was a d iabet ic" ,  is 
represented  by the  meaning representat ion :  
(display t (seto f  X:PATIENT 
(forol l Y:PERSON (->(MOTHER X Y) 
(DIABETIC Y))))) 
The in fo rmat ion  to compute  the  answer  may be found in the f ield DIAMOTHER above.  It 
is very  hard  to see how we will use  loca l  ru les  to get to it, however ,  s ince noth ing  
const ructab le  from the  database  cor responds  to the  non- log ica l  constants  MOTHER and 
DIABETIC. The prob lem is that  the  database  chooses  to h igh l ight  the  complex  proper ty  
DIAMOTHER while avoid ing the  cos t  of s to r ing  its const i tuent  p red icates  MOTHER and 
DIABETIC - the  conceptua l  un i t s  cor respond ing  to the  words  of the  u t te rance .  
One way to get  a round these  d i f f i cu l t ies  is of course  to allow for  a more genera l  
k ind  of t rans format ion :  a "g lobal  ru le"  wh ich  would match  aga ins t  a whole syntact i c  
pat tern  l ike the  un ivera l ly  quant i f ied  sub-express ion  above.  The d i sadvantage  of th is ,  
as is po in ted  out  in \[8\], is that  the  r i chness  of both  natura l  l anguage and  logic allows 
the  same mean ing  to be expressed  in many  d i f fe rent  ways, wh ich  a complete  "g lobal  
ru le"  would have to match.  S t r i c t ly  syntact i c  var ia t ion  is poss ib le :  p ieces  of the  
pat tern  may be spread  out  over  the  express ion ,  from which the  pat tern  match  would 
have  to grab  them. Equ iva lent  fo rmulat ions  of the query  may also use complete ly  
d i f fe rent  terms.  For example,  the  user  might  have employed the  equ iva lent  phrase  
" female parent"  in p lace  of the  word  "mother" ,  p resumably  caus ing  the  semant ic  
in terpreta t ion  to yield a logica l  form with the  d i f fe rent  p red icates  "PARENT" and 
"FEM/~LE". This would not  match  the  pat tern .  It becomes  c lear  that  the  "pat tern -  
match ing"  to be per fo rmed here  is not  the  l i te ra l  kind, and  that  it invo lves unspec i f ied  
and  arb i t ra ry  amounts  of in fe rence .  
The a l te rnat ive  approach  presented  by th is  paper  takes  expl ic i t  account  of the  fac t  
that  cer ta in  proper t ies  and re la t ions ,  l ike "DIAMOTHER", can  be regarded  as bui l t  up 
f rom others .  In the next  sect ion  we will show how the proper t ies  and re la t ions  whose 
extens ions  the  database  s tores  can  be ax iomat i zed  in te rms of the  ones  that  are  more 
bas ic  in the  app l i ca t ion  domain.  This p repares  the way for  the  s impl i f icat ion 
t rans format ion  itself,  which will re ly  on a l imited and sound form of in fe rence  to 
reverse  the  ax iomat i za t ion  and t rans form the  meaning representat ion ,  where  poss ib le ,  
to  an express ion  that  uses  on ly  these  database  proper t ies  and re la t ions .  In th is  way, 
the  loca l  ru le  parad igm can  be substant ia l l y  res tored .  
3. Knowledge Representation and Question-Answering 
The purpose  o f  th is  sec t ion  of the  paper  is to p resent  a way of connect ing  the  
mean ing  representat ion  language to  a taxonomic  knowledge representat ion  system in 
such  a way that  the in fe rence-mak ing  capab i l i ty  of the la t te r  is ava i lab le  and usefu l  
for  the  prob lems this  I~per  addresses .  Our approach  may be const ras ted  with that  of 
o thers ,  e.g. TEAM in which such  a taxonomy is used  mainly for  simple inher i tance  and  
a t tachment  dut ies .  
The knowledge  representat ion  sys tem used  in th is  work is NIKL \[5\]. S ince NIKL has  
been  descr ibed  ra ther  ful ly in the  re ferences ,  I will give only  a br ie f  summary  here .  
::NIKL is a taxonomic  f rame- l i ke  sys tem with two bas ic  data  s t ruc tures :  concepts  and  
65 
roles. Concepts are just classes of entities, for which roles function somewhat  as 
attributes. At any given concept we can restrict a role to be filled by some other 
concept, or place a restriction on the number  of individual "fillers" of the role there. 
A role has one concept as its "domain" and another as its "range": the role is a 
relation between the sets these two concepts denote. Concepts are arranged in a 
hierarchy of sub-concepts  and superconcepts; roles are similarly arranged. Both 
concepts and roles may associated with names. In logical terms, a concept may be 
identified as the one-place predicate with its name, and a role as the two-place 
predicates with its name. 
I will now give the meaning postulates for a term--forming algebra, similar to the one 
described in \[2\] in which one can write down the sort of NIKL expressions I will need. 
Expressions in this language are combinable to yield a complex concept or role as 
their value. 
(CONJ Cl - -  CN) =- (lambdo (X) (ond (C1 X) - -  (Cn X))) 
(VALUERESTRICT R C) =- (lambda (X) ( foral l  Y (-> (R X Y) 
(c ?))) 
(NUMBERRESTRICT R 1 NIL) 5 (Iombdo (X) (exists Y (R X Y))) 
(VRDIFF R C) ~ (Iombdo (X Y) (ond (R X Y) (C Y))) 
(DOMAINDIFF R C) -= (Iombdo (X Y) (ond (R X Y) (C X))) 
The key  feature  of NIKL wh ich  we will  make  use  of is i t s  c lass i f ie r ,  wh ich  computes  
subsumpt ion  and  equ iva lence  re la t ions  between concepts ,  and  a l im i ted  form of th i s  
among ro les .  Subsumpt ion  is sound,  and  thus  ind icates  enta i lment  between terms:  
(SUBSUMES C1 C2) -> (forol l  X (-> (C2 X) (C1 X))) 
If the  c lass i f ie r  a lgor i thm is complete ,  the  reverse  is a lso  t rue ,  and  enta i lment  
ind icates  subsumpt ion .  In tu i t i ve ly ,  th i s  means  that  c lass i f ied  concepts  a re  pushed 
down as fa r  in the  h ie rarchy  as they  can  go. 
Also assoc ia ted  with the  NIKL sys tem,  though not  a par t  of the  core  language 
def in i t ion ,  is a symbol  tab le  wh ich  assoc ia tes  a tomic  names  with the  ro les  or  concepts  
they  denote ,  and  concepts  and  ro les  wi th  the  names  denot ing  them.  If a concept  or  
ro le  does  not  have  a name,  the  symbol  tab le  is ab le  to c reate  and  ins ta l l  one for  it  
when demanded.  
The domain  model 
In o rder  to  be ab le  to use  NIKL in the  ana lys i s  of express ions  in the  mean ing  
representat ion  language,  we make the  fo l lowing s t ipu la t ions  for  any  use  of the  
language in a g iven domain .  F i r s t ,  any  one-p lace  pred icate  must  name a concept ,  and  
any  two-p lace  pred icate  name a ro le .  Second,  any  constant ,  un less  a number  or  a 
s t r ing ,  must  name an " ind iv idua l "  concept  - a par t i cu la r  k ind  of NIKL concept  that  is 
de f ined  to  have  a t  most  one member .  N -ary  funct ions  are  t reated  as a N+I  - a ry  
pred icates .  A pred icate  of N arguments ,  where  N is g reater  than  2, is re i f ied  as  a 
concept  w i th  N ro les .  This se t  of concepts  and  ro les ,  together  wi th  the  log ica l  
re la t ionsh ips  between them,  we ca l l  the  "domain  model" .  
Note  that  al l  we have  done  is to  s t ipu la te  an  one- to -one  cor respondence  between 
two sets  of th ings  - the  concepts  and  ro les  in the  domain  model  and  the  non- log ica l  
constants  of the  mean ing  representat ion  language.  If we wish to  inc lude  a new non-  
log ica l  constant  in the  language we must  enter  the  cor respond ing  concept  or  ro le  in 
the  domain  model .  S imi lar ly ,  the  NIKL sys tem's  c reat ing  a new concept  or  ro le ,  and  
c reat ion  of a name in the  symbol  tab le  to  s tand  fo r  it ,  fu rn i shes  us  wi th  a new non-  
J0g ica l  constant .  
66 
Axiomatization of the database in terms of 
the domain model 
The t rans la t ion  ru les  presented  ear l ie r  e f fec t ive ly  seek to ax iomat ize  the  proper t ies  
and re la t ions  of the  domain model in te rms of those  of the  database .  This is not  the  
only  way to br idge the  gap. One might a lso t ry  the  reverse :  to ax iomat i ze  the 
proper t ies  and re la t ions  of the database  in te rms of those  of the  domain  model. 
Cons ider  the  DIAMOTHER field of our  sample database .  We can  write th is  in NIKL as the  
concept  PATIENT-WITH-DIABETIC-MOTHER us ing  te rms a l ready  present  in the  domain 
model: 
(CONJ PATIENT 
(VALUERESTRICT MOTHER 
DIABETIC)) 
l 
If we wanted  to ax iomat ize  the  re la t ion  impl ied by the SEX at t r ibute  of the  PATIENTS 
tab le  in our  database ,  we cou ld  read i ly  do so by def in ing the  ro le  PATIENT-SEX in 
te rms of the  domain model re la t ion  SEX: 
(DOMAINDI FF SEX 
PAT I ENT) 
These two def ined te rms can  ac tua l ly  be entered  into  the  model, and  be t reated  jus t  
l ike any  o thers  there .  For  example,  they  can  now appear  as pred icate  le t te rs  in 
mean ing  representat ions .  Moreover ,  to  the assoc ia ted  data  s t ruc ture  we can  a t tach  a 
t rans la t ion  rule,  just  as we have been  doing with the  or ig ina l  domain model  e lements .  
Thus, will a t tach  to the concept  PATIENT-WITH-DIABETIC-MOTHER the ru le:  
(PROJECT (SELECT FROM PATIENTS WHERE (EQ DIAMOTHER "YES")) 
OVER PATID) 
The next  sect ion  will i l l us t ra te  how we map from express ions  us ing "or ig ina l "  domain  
model e lements  to the ones we c reate  for  ax iomat iz ing  the  database ,  us ing  the  NIKL 
sys tem and its c lassi f ier .  
4. Recursive Terminological Simplification 
We now present  the ac tua l  s impl i f i cat ion method.  It is composed of two separate  
t rans format ions  which are appl ied one a f te r  the  o ther .  The f irst,  the  "cont rac t ion  
phase" ,  seeks  to cont rac t  compl i ca ted  subexpress ions  (par t i cu la r ly  nes ted  
quant i f i ca t ions )  to s impler one-p lace  pred icat ions ,  and  to fu r ther  res t r i c t  the  "sor ts"  
of remain ing  bound var iab les  on the  bas is  of the one-p lace  pred icates  so found.  The 
second par t  of the t rans format ion ,  the  " ro le - t ighten ing"  phase,  rep laces  genera l  
re la t ions  in the express ion  with more  spec i f ic  re la t ions  which are lower  in the  NIKL 
h ie rarchy .  These more speci f ic  re la t ions  a re  obta ined  from the more genera l  by  
cons ider ing  the sor ts  of the  var iab les  upon  which a g iven re la t iona l  p red icat ion  is 
made. 
The contraction phase 
The contraction phase is an algorithm with three steps, which occur sequentially 
upon application to any expression of the meaning representation. First, the 
contraction phase applies itself recursively to each non-constant subexpression of the 
expression. Second, depending upon the syntactic category of the expression, one of 
the "pre-simplification" transformations is applied to place it in a normalized form. 
Third and finally, one of the actual simplification transformations is used to convert 
the expression to one of a simpler syntactic category. 
Before working through the example, I will lay out the transformations in detail. In 
what follows, X and XI,X2 - -  Xn are variables in the meaning representation language. 
The symbol "<rest>" denotes a (possibly empty) sequence of formulae. The expression 
67 
"(FORMULA X)" denotes  a fo rmula  of the  mean ing  representat ion  language in which the  
var iab le  X (and  perhaps  o thers )  appears  f ree ly .  The symbo l  "<quant>"  is to be  
unders tood  as be ing rep laced  by  e i ther  the  operator  SETOF or  the  quant i f ie r  EXISTS. 
F i rs t ,  the  normal i za t ion  t rans format ions ,  which s imply  re -ar range  the  const i tuents  of 
the  express ions  to a more  conv ienent  fo rm wi thout  chang ing  i ts  syntact i c  category :  
(1) (ond (P1X1) (P2 X1) - -  (PN X1) 
(Q1X2) (Q2 X2) - -  (QN X2) 
<rest>) 
==> (and (P' X1) (Q' X2) <rest>) 
where P' := (CONJ P1 P2 - -  PN) 
ond Q' := (CONJ Q1 Q2 - -  QN) 
(2) (<quant> X:S (ond (P X) <rest>) -~> 
(<quont> X:S' (ond <rest>))  
where S' := (CONJ S P) 
(3) (<quont> X:S (P X)) => 
(<quont> X:S') 
where S' := (CONJ S P) 
(4) ( fo ra l l  X:S (-> (and (P X) <rest>) 
(FORMULA X)) -~> 
( fo ro l l  X:S' (-> (and <rest>) 
(FORMULA X)))  
In (2) and  (4) above,  the  con junct ion  or  imp l i ca t ion ,  respect ive ly ,  a re  co l lapsed  out  if 
the  sequence  <rest> is empty.  
Now the  ac tua l  s impl i f i cat ion  t rans format ions ,  which seek  to reduce  a complex  sub-  
express ion  to  a one-p lace  pred icat ion .  
(5) ( fo ra l l  X2:S (-> (R X1X2) (P X2))) 
-~> (P' X1 ) 
where P' := (VALUERESTRICT (VRDIFF R S) P) 
(6) (exists  X2:S (R X1X2)) -~> (e' X1) 
where P' := (VALUERESTRICT R S) 
and R m~st be o functionol role 
(7) (ex ists  X2:S (R Xl X2)) => (P' Xl) 
where P' := (NUMBERRESTRICT (VRDIFF R S) 1 NIL) 
(8) (and (P X)) ===> (P X) 
(9) (R X C) => (P X) 
where P := (VALUERESTRICT R C) 
and R is funct ionol ,  C on ind iv idual  concept 
Now, le t  us  suppose  that  the  exerc i se  at  the  end of the  las t  sect ion  has  been  car r ied  
out ,  and  that  the  concept  PATIENT-WITH-DIABETIC-MOTHER has  been  c reated  and  g iven 
the  appropr ia te  t rans la t ion  ru le .  To re turn  to the  query  "List  pat ients  whose  mother  
was a d iabet ic " ,  we reca l l  that  it  has  the  mean ing  representat ion :  
(DISPLAY t(SETOF X:PATIENTS 
(FORALL Y:PERSON 
68 
(-> (MOTHER X Y) 
(DIABETIC Y))))) 
Upon app l i ca t ion  to the  SETOF express ion ,  the a lgor i thm f i rs t  app l ies  i tse l f  to  the 
inner  FORALL. The syntact i c  pat terns  of none  of the  pre -s imp l i f i ca t ion  
t rans format ions  (2) - (4) are  sat is f ied ,  so t rans format ion  (5) is app l ied  r ight  way to 
produce  the  NIKL concept :  
(VALUERESTRICT (VRDIFF MOTHER PERSON) 
DIABETIC) 
This is g iven to the  NIKL c lass i f ier ,  wh ich  compares  it to o ther  concepts  a l ready  in the 
h ie rarchy .  Since MOTHER has  PERSON as its range  a l ready ,  (VRDIFF MOTHER PERSON) is 
jus t  MOTHER again.  The c lass i f ie r  thus  computes  that  the concept  spec i f ied  above is a 
subconcept  of PERSON - a PERSON such  that  his MOTHER was a DIABETIC. If th is  is 
not  found  to be equ iva lent  to any  pre -ex is t ing  concept ,  the  sys tem ass igns  the 
concept  a new name which no o ther  concept  has,  say  PERSON- I .  The outcome of the 
s impl i f i cat ion  of the whole FORALL is then  jus t  the much s impler  express ion :  
(PERSON-1 X) 
The recurs ive  s impl i f icat ion of the  arguments  to the SETOF is now completed ,  and  the  
resu l t ing  express ion  is: 
(DISPLAY t(SETOF X:PATIENT 
(PERSON- I X))) 
Trans format ions  can  now be app l ied  to the SETOF express ion  i tsel f .  The pre -  
s impl i f i cat ion  t rans format ion  (3) is found  to apply,  and  a concept  expressed  by: 
(CONJ PATIENT PERSON-I) 
is g iven to the c lass i f ier ,  wh ich  recogn izes  it as equ iva lent  to the  a l ready  ex is t ing  
concept  PATIENT-WITH-DIABETIC-MOTHER. Since any concept  can  serve  as a sor t ,  the  
f inal  s impl i f icat ion is: 
(DISPLAY t(SETOF X:PATIENT-WITH-DIABETIC-MOTHER)) 
This is the  very  concept  for  which we have a rule, so the ERL t rans la t ion  is: 
(PRINT FROM (SELECT FROM PATIENT 
WHERE (EQ DIAMOTHER "YES")) 
PATID) 
Suppose  now that  the  semant ic  in terpreta t ion  sys tem ass igned  a d i f fe rent  log ica l  
express ion  to represent  the  query  "List pat ients  whose mother  was a d iabet ic " ,  in 
wh ich  the  embedded quant i f i ca t ion  is ex i s tent ia l  ins tead  of un iversa l .  This might 
ac tua l ly  be more in l ine with the  number  of the embedded noun.  The mean ing  
representat ion  would now be: 
(display t(setof X:PATIENT 
(exists Y:PERSON (and (MOTHER X Y) 
(DIABETIC Y))) 
The recurs ive  app l i ca t ion  of the  a lgor i thm proceeds  as before .  Now, however ,  the  pre -  
s impl i f i cat ion  t rans format ion  (2) may be appl ied to yield: 
(exists Y:DIABETIC (MOTHER X Y)) 
s ince  a DIABETIC is a l ready  a PERSON. T rans format ion  (6) can  be app l ied  if MOTHER is 
a " funct iona l "  role - mapping each  and  every  person  to exact ly  one mother .  This can  
be checked  by ask ing the NIKL sys tem if a number  res t r i c t ion  has  been  a t tached  at  
the  domain  of the role,  PERSON, spec i fy ing  that  it have  both  a minimum and a maximum 
of one.  If the  author  of the  domain  model  has  prov ided  th is  reasonab le  and  per fec t ly  
t rue  fac t  about  motherhood,  (6) can  proceed  to yield: 
69 
(PATI ENT-WITH-DIABETIC-MOTHER X) 
as in the preced ing  example.  
The role t ightening phase 
This phase  is quite simple. After  the cont rac t ion  phase  has  been  run  on the  whole 
express ion ,  a number  of var iab les  have  had  the i r  sor ts  changed to t ighter  ones.  This 
t rans format ion  sweeps through an express ion  and changes  the  ro les  in the  express ion  
on that  basis .  Thus: 
( le )  (R X Y) ===> (R' X Y) 
where $1 is the sort  of X 
ond $2 is the sort  of Y 
end R' := (DOMAINDIFF (VRDIFF R $2) 
sl) 
One can  see that  a use of the  re la t ion  SEX, where the  sor t  of the  f i rs t  a rgument  is 
known to be DOCTOR, can  read i ly  be conver ted  to a use the  re la t ion  DOCTOR-SEX. 
Back  conversion: going in the reverse direct ion 
There will be t imes when the  s impl i f icat ion t rans format ion  will "overshoot" ,  c reat ing  
and us ing  new pred icate  le t te rs  which have not  been  seen  be fore  by c lass i fy ing new 
data  s t ruc tures  into the  model  to  cor respond to them. The use  of such  a new 
pred icate  le t te r  can  then  be t reated  exact ly  as would its equ iva lent  lambda-def in i t ion ,  
which we can  read i ly  obta in  by consu l t ing  the  NIKL model. For  example,  a query  about  
the  sexes  of leukemia vict ims may a f te r  s impl i f icat ion resu l t  in a ra ther  s t range  role 
be ing c reated  and entered  into  the  h ie rarchy :  
PATIENT-SEX-I := (DOMAINDIFF PATIENT-SEX LEUKEMIA-PATIENT) 
This ro le is a d i rec t  descendant  of PATIENT-SEX; its name is sys tem generated .  By the  
mean ing-postu la te  of DOMAINDIFF g iven in sect ion  3 above,  it can  be rewr i t ten  as the 
fol lowing lambda-abst rac t :  
(Iornbdo (X Y) (and (PATIENT-SEX X Y) 
(LEUKEMIA-PATI ENT X) ) ) 
For  PATIENT-SEX we of course  have  a t rans la t ion  rule as d i scussed  in sect ion  2. A 
ru le  for  LEUKEMIA-PATIENT can  be imagined as involv ing the DISEASE field of the 
PATIENTS table.  At th is  po in t  we can  simply call the t rans la t ion  a lgor i thm recurs ive ly ,  
and  it will come up with a t rans la t ion :  
(PROJECT (SELECT FROM PATIENTS 
WHERE (EQ DISEASE "LEUK")) 
OVER PATID SEX) 
This supp l ies  us with the  needed rule.  As a bonus,  we can  avoid hav ing  to recompute  
it l a te r  by simply a t tach ing  it to the ro le in the normal  way. The similar computat ion  
of ru les  for  complex concepts  and  ro les  which are a l ready  in the  domain comes for  
f ree.  
5. Conclusions, Implementation Status and Further 
Work 
As of th is  writ ing,  we have incorporated  NIKL into the  imp lementat ion  of our  natura l  
l anguage quest ion -answer ing  system,  IRUS. NIKL is used  to represent  the  knowledge in 
a Navy bat t le -management  domain.  The s impl i f icat ion t rans format ion  descr ibed  in th is  
paper  has  been  implemented in th is  combined  system, and  the  ax iomat i za t ion  of the  
.database  as descr ibed  above is be ing added to the domain  model. At that  po int ,  the  
70 
methodo logy  will be tes ted  as a so lu t ion  to the  d i f f icu l t ies  now being exper ienced  by 
those  t ry ing  to wri te the  t rans la t ion  ru les  for  the  complex database  and domain of the  
F leet  Command Center  .Battle Management  P rogram of DARPA's S t ra teg ic  Comput ing  
Program.  
I have presented  a l imited in fe rence  method  on pred icate  ca lcu lus  express ions ,  whose 
in tent  is to  p lace them in a canon ica l  form that  makes  o ther  in fe rences  eas ie r  to 
make. Metaphor ica l ly ,  it can  be regarded  as "s ink ing"  the  express ion  lower in a 
cer ta in  logical  space.  The goal is to  push  it down to the  " level"  of the  database  
pred icates ,  or  below. We cannot  guarantee  that  we will a lways p lace  the  express ion  as 
low as it cou ld  poss ib ly  go - that  prob lem is undec idab le .  But we can  go a good  
d i s tance ,  and  th is  by  i tsel f  is very  use fu l  for  res tor ing  the  t rac tab i l i ty  of the  mapp ing  
t rans format ion  and o ther  sor ts  of deduct ive  operat ions  \[10\]. 
Somewhat  s imi lar s impl i f icat ions a re  per fo rmed in the  work  on ARGON \[6\], but  for  a 
d i f fe rent  purpose .  There  the  database  is assumed to be a full, ra ther  than  a par t ia l l y  
spec i f ied,  mode l  and  s impl i f i cat ions  are  per fo rmed on ly  to ga in  an inc rease  in 
ef f ic iency.  The d i s t ingu ish ing  feature  of the  present  work  is i ts  operat ion  on an 
express ion  in a logical  l anguage for  Engl ish mean ing  representat ion ,  ra ther  than  for  
res t r i c ted  quer ies .  A database ,  g iven the purposes  for  which it is des igned,  cannot  
const i tu te  a full model for  such  a language.  Thus, the  te rmino log ica l  s impl i f i cat ion is 
needed to reduce  the  logical  express ion ,  when poss ib le ,  to  an express ion  in a "sub-  
language"  of the f i rs t  for  which the  database  i s  a full model. 
An importar~t outcome of th is  work  is the perspect ive  it g ives on knowledge  
representat ion  sys tems like NIKL. It shows how workers  in o ther  f ields, while 
ma inta in ing  o ther  logical  sys tems as the i r  p r imary  mode of representat ion ,  can  use  
these  sys tems in p ract i ca l  ways. Cer ta in ly  NIKL and NIKL- l ike sys tems cou ld  never  be 
used  as full meaning representat ions  - they  don ' t  have  enough express ive  power,  and  
were never  meant  to. This does not  mean we have to d i s regard  them, however .  The 
r ight  perspect ive  is to view them as a t tached  in fe rence  eng ines  to per fo rm l imited 
tasks  hav ing  to do with the i r  spec ia l ty  - the  re la t ionsh ips  between the var ious  
proper t ies  and re la t ions  that  make up a sub jec t  domain in the rea l  world.  
Acknowledgements 
F i rs t  and  foremost ,  I must  thank  Remko Scha,  both  for  va luab le  and s t imu la t ing  
techn ica l  d i scuss ions  as well as for  pat ient  ed i to r ia l  cr i t ic ism.  This paper  has  also 
benef i ted  from the comments  of Ralph Weischedel  and  Jos De Bruin.  Beth  Groundwater  
of SAIC was pat ient  enough to use  the  so f tware  th is  work  produced .  I would l ike to 
thank  them, and thank  as well the  o ther  members  of the  IRUS pro jec t  - Damar is  
Ayuso,  Lance Ramshaw and Varda Shaked - for  the  many p leasant  and product ive  
in teract ions  I have had  with them. 
71 
\[1\] 
\[z\] 
\[3\] 
\[4\] 
\[5\] 
\[8\] 
\[7\] 
\[8\] 
\[9\] 
\[10\] 
References  
Bates, Madeleine and Bobrow, Robert J. 
A Transportable Natural Language Interface for Information Retrieval. 
In Proceedings of the 6th Annual International ACM SIGIR Cortference. ACM 
Special Interest Group on Information Retrieval and American Society for 
Information Science, Washington, D.C., June, 1983. 
Brachman, R.J., Fikes, R.E., and Levesque, H.J. 
Krypton: A Functional Approach to Knowledge Representation. 
IEEE Computer, Special Issue on Knowledge Representat ion , October,  1983. 
Codd,E.F. 
A Relational Model of Data for Large Shared Data Banks. 
CACM 13(6), June, 1970. 
Barbara Grosz, Douglas E. Appelt, Paul Martin, and Fernando Pereira. 
TEAM: An Experiment in the Design of Transportable Natura l -Language 
Interfaces. 
Technical Report 356, SRI International, Menlo Park, CA, August, 1985. 
Moser, Margaret. 
An Overview of NIKL. 
Technical Report Section of BBN Report No. 5421, Bolt Beranek and Newman Inc., 
1983. 
Patel-Schneider, P.F., H.J. Levesque, and R.J. Brachman. 
ARGON: Knowledge Representation meets Information Retrieveal. 
In Proceedings of The First Con\[erence on Arti\[icial Intell igence Applications. 
IEEE Computer Society, Denver, Colorado, December,  1984. 
W.J.H.J. Bronnenberg,  H.C. Bunt, S.P.J. Landsbergen,  R.J.H. Scha, W.J. 
Schoenmakers  and E.P.C. van Utteren.  
The Question Answering System PHLIQAi. 
In L. Bolc (editor) ,  Natural Language Question Answering Systems. Macmillan, 
1980. 
Scha, Remko J.H. 
English Words and Data Bases: How to Bridge the Gap. 
In 20th Annual Meeting of the Association for Computational Linguistics, 
Toronto. Associat ion for  Computat ional  Linguistics, June, 1982. 
Stal lard, David G. 
Data Modeling for Natura l  Language Access. 
In Proceedings of the First IEEE Conference on Applied Artif icial Intelligence, 
Denver, Colorado. IEEE, December, 1984. 
Stal lard, David G. 
Taxonomic In ference on Pred icate  Calculus Express ions.  
Submitted to AAAI April 1, 1988. 
72 
