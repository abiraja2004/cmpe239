S$ I :Mct  ur  a 1 Cor  r e AponfJet\]Ge S~ec  \[ f I c_a t j O0_#DvLEonmer~ 
Yongfeng  YAN 
Groupe  d 'E tudes  pour  la  T rad l J c t lon  Automat lque  
(GETA) 
B.P. 68 
Unlvers l ty  o f  Grenob le  
38402 Sa in t  Mar t ln  d 'H~res  
FRANCE 
ABSTRACT 
Th is  a r t i c le  p resents  t i l e  S t ruc tura l  Cor respondence  
Spec l f l ca t lon  Env i ronment  (S( 'SE)  be ing  Imp lemented  at  
GETA - 
The SCSE i s  des igned  to  he lp  l ingu is ts  to  deve lop ,  
consu l t  and ver i fy  the  SCS Gr'alt~nar s (SCSG) wh ich  
spec i fy  I l ngu ls t  i c  mode ls .  I t  I n tegrates  the  
t ec l ln  1 clues of '  data  bases ,  s t ruc tured  ed l to rs  and 
language in terpreters .  We argue  that  fo rmal i sms  and 
too ls  o f  spec i f i ca t ion  are  as  Impor tant  as  the  
spec i f i ca t ion  i t se l f .  
z NT ROD_UCT tqN 
For  qu i te  some t ime,  I t  has  been  recogn ized  that  t i l e  
spec i f i ca t ion  I s  very  impor tant  in  t i l e  deve lopment  o f  
la rge  computer  sys tems as we l l  as  the  l ingu is t i c  
computer  sys ten ls .  But  i t  l s  very  d i f f i cu l t  to  make good  
use  o f  spec i f i ca t ion  w i thout  a we l l  de f ined  fo rmal i sm 
and conven ient  too l .  
The S t ruc tura l  Cor respondence  Spec i f i ca t ion  Gran~ar  
(SCSG) i s  a power fu l  l i ngu is t  i c  spec i f i ca t ion  
Formal i sm.  the  SCSGs were  f t r s t  s tud ied  in S .Chappuy 's  
thes i s  (1} ,  under  the  superv i s ion  o f  P ro fessor  
B.  VaLIqUOt s .  In  the i r  paper  p resented  a t  Co lgate  
Un ivers i ty  in  1985 {6}  SCSG was  ca l led  S ta t i c  Greener ,  
as  opposed  to  dynamic  grammars  wh ich  are  executab le  
programs,  because  the  8CSG a ims  a t  spec i fy ing  WI4AT the  
l ingu is t i c  mode ls  are  ra ther  than  IIOW they  are  
ca lcu la ted ,  
A SCSG descr ibes  a l lnqu ls t l c  mede l  by spec i fy ing  
the  cor respondence  between the  va l id  sur face  s t r ings  o f  
words  and the  mul t i= leve l  s t ruc tures  o r  a language.  
Thus ,  f rom a SCSG, one  can  obta in  a t  the  same t lme 
va l id  s t r  lngs ,  va l id  s t ruc tures  and the  re la t  ton  
between them.  A SCSG can  be used  fo r  the  synthes i s  of'  
dynamic  gra l r~}lars  (ana lyser  and generator )  and as  a 
re fe rence  fo r  la rge  l ingu is t i c  sys tems.  An SOS 
Language (SCSL)  has  been  des igned  a t  GETA, 
tn  wh lc l l  the  SCSG can  be \ ] lnear ly  wr i t ten .  
The SCS Env i ronment  (SCSE)  p resented  here  t s  a 
compL I te r  a ided  SCSG des  lgn  sys tem.  I t w l  1 1 a l  low 
l h lgu ls ts  to  c reate ,  mod i fy ,  consu l t  and ver i fy  the i r  
g ran lnars  in  a conven ient  way and there fore  to  augment  
the i r  p roduct iv i ty .  
Sect  1on I g ives  a out l ine  o f  the  sys tem:  I t s  
a rch i tec ture ,  p r  Inc ip le ,  data  s t ruc ture  and comdnand 
syntax .  Sect ion  I I  descr ibes  the  mal r l  funct ions  o f  the  
sys tem.  We conc lude  by g tv tng  a perspect ive  fo r  lu ther  
deve lopments  e l '  the  sys tem.  
I= .AN OVERVIEW OF TI4E S YSTE_M 
1. ARC H I \ ]EC  T URE 
The SCSE can  be log ica l l y  d iv ided  tn  f i ve  par ts :  1 
SCSG base  2 .  mon i to r  3 .  input  4.  output  5.  p rocedures  
The SCSG base  cons is ts  o f  a se t  o f  f i l es  Conta ln lng  
t i l e  g rar r lnars ,  lhe  base  has  a h lerarchtca \ ]  s t ruc ture .  A 
t ree  fo rm d i rec tory  descr ibes  t i l e  re la t ionsh ip  between 
the  data  o f  the  base .  
The mon i to r  I s  the  in ter face  between the  sys tem and 
the  user .  I t  reads  and ana lyses  colTinands f rom the  input  
and then  ca l l s  the  procedures  to  execute  the  cormlands .  
1he input  i s  the  suppor t  conta in ing  the  COlrrnands to  
be executed  and the  data  to  update  the  base .  rhere  i s  a 
s tandard  input  (usua l ly  the  keyboard)  f rom wh ich  the  
data  and cormlands  s l lou ld  be read  un less  an Input  l s  
exp l i c i t l y  spec i f ied  by a con lnand.  
The output  i s  a supper  t rece iv ing  the  sys tem's  
d ia logue  messages  and execut ion  resu l t s .  There  i s  a 
s tandard  output  (usua l  l y  the  sc reen)  to  wh ich  t i l e  
message  and resu l t s  shou ld  be sent  un less  all output  I s  
exp l i c i t l y  spec i f ied  by  a con~and.  
The procedures  a re  the  most  i rnpor tant  par t  o f  tl~e 
sys ten l .  I t  l s  the  execut ion  o f  p rocedures  that  car r ies  
out  a COn~land. The procedures  can  communicate  d i rec t ly  
wt th  the  user  and w i th  o ther  p rocedures .  
2 .  THE_E.RJNCU}LE 
An SCSE sess ion  beg ins  by load ing  the  or ig ina l  SCSG 
base  or  the  one saved  f rom the  las t  Sess ion ,  Then the  
mon i to r  reads  l ines  f rom t i le  com~nand input  and ca l l s  
the  cor respond ing  procedures  to  execute  the  COmd~lands 
found .  When an SCSE sess ion  I s  ended by the  colm~and 
"QUIT" ,  the  cur rent  s ta te  o f  t lqe base  I s  saved .  The 
SCSG base  can  on ly  be updated  by the  execut ion  o f  
c omrlland s ,  
The or ig ina l  SCSG base  conta ins  two  SCSGs : one  
descr ibes  the  syntax  o f  the  SCSI_ and the  o ther  g ives  
the  cor respondence  between the  d i rec tory ' s  nodes  and 
the  syntact i c  un i t s  o f  the  SCSL.  The f i r s t  g ra lmlar  l s  
read-on ly  but  the  second one can  be mod i f ied  by a user .  
Th is  a l lows  a user  to  have  h i s  p re fered  log ica l  v iew 
over  the  base 's  phys ica l  data .  These  two  grammars  serve  
a l so  as all O i l - l i ne  re ference of the  sys tem.  
Severa l  In te rac t ive  leve ls  can  be chosen  by  the  user  
o r  by  the  sys tem accord ing  to  the  number  o f  e r ro rs  in  
the  con~aapd l ines .  The sys tem sends  a prc~npt message  
on ly  when a "RETURN" l s  met in  the  CO~nand l ines .  So 
gee  car l  avo id  prompt  messages  by enter ing  severa l  
cen~nands a t  a t ime.  
;3. DATA S:\[f~UCTURE 
There are two data s t ructure  levels. 
The lower one Is linear, supported by the host 
sys tem.  Ti le base  I s  a se t  o f  f i l es  conta in ing  a l l s t  o f  
s t r ings  o f  characters .  T i le base  car l  be seen  as a s ing le  
s t r ing  o f  characters  tha i :  I s  the  concatenat ion  o f  a l l  
l i nes  tn the  f t \ ]es  o f  the  Llase so  that  t i l e  s t ruc ture  i s  
sa id  to  be l lnear .  T I l l s  s t ruc ture  i s  the  phys ica l  
structure.  
The h igher  one  I s  h ie rarch ica l  , de f ined  by  the  
d i rec tory  o f  the  base .  T i le  base  i s  composed  o f  a 
number  o f  SCSGs ; each  gra l~ar  conta ins  a dec la ra t ion  
sect  Ion ,  a ru le  (char t )  sec t  Ion  . . .  e tc .  and the  
components  o f  a gran~nar (dec la ra t  1Ol1 , ru les  . . . e tc ,  ) 
have  the i r  own s t ruc ture .  The h ie rarch ica l  s t ruc ture  
t s  the  log ica l  s t ruc ture  o f  the  base .  
The d i rec tory  has  a t ree  fo rm.  A node  In  the  t ree  
represents  a log ica l  data  un i t  that  t s  i t s  content  ( fo r  
ins tance  a gran~nar ) .  Every  node  has  a type  and a l i s t  
o f  a t t r ibutes  character l s lng  the  node 's  content ,  rhe  
ln ternode 's  content  i s  the  compos i t ion  o f  those  o f  i t s  
descendents ,  \ ]he  lear ' s  content  I s  d i rec t ly  assoc ia ted  
81 
with  a phys ica l  data  un i t  (a  s t r ing  o1' characters ) .  
The fo l low ing  f igure  shows the  re la t ion  between the  two 
s t ruc tures .  
LOGICAL STRUCTURE (i) 
7 , 
2Y 
LOGICAL S'\[RUCTURE (2) 
language date 
\[Grammar English - - - - - i  
node type  attributes 
The d i rec tory  i s  s lml la r  to  a UNIX d i rec tory .  But In  
our  d i rec tory ,  t i l e  leaves  do not  cor respond to  F l ies  
but  to  log lca l  data  un i t s  and Fur thermore  an a t t r ibute  
l i s t  i s  a t tached to  each node .  The cor respondence  
between two s t ruc tures  i s  ma inta ined  by  SCSE. We sha l l  
see la ter  that  th i s  o rgan lsat lon  a l lows  a more  
e f f i c ient  In fo rmat ion  re t r ieva l .  
I t  l s  poss ib le  For" users  to  have  access  to  the  data  
by  means o f  both  s t ruc tures .  The log ica l  one I s  more  
conven ient  but  the  phys ica l  one may be more  e f f i c ient  
in some cases .  
4:~ _COMMANp__SyNTAX 
The genera l  command fo rmat  i s  : 
<operator> <operand> <opt ions> 
- The "operator"  i s  a word  or  an abbrev ia t ion  
reca l l ing  the  operat ion  o f  t i le  colmland.  
The "operand"  i s  a pat tern  g iv ing  the  range  OF 
the  operat ion .  
The "opt ions"  i s  a l i s t  o f  opt lona l  parameters  o f  
the  COw,land. 
For  example ,  the  Con~nand : V GRAMMAR ( LANGUAGE = 
ENGLISH ) 
v i sua l i zes ,  a t  the  s tandard  output ,  a l l  the  Eng l i sh  
grammars  In  the  base .  Here V i s  the  operator ,  
GRAMMAR(LANGUAGE=ENGLISti) l s  t i le  operand  pat tern  and no 
opt ion  I s  g iven .  
The operand be ing  most ly  a node in  the  d i rec tory  
t ree ,  the  pat tern  i s  USUa l ly  a t ree  pat tern .  When the  
pat tern  matches  a subt ree  o f  the  d i rec tory ,  the  par t  
that  matches  a spec ia l l y  marked  node  Is  the  e f fec t ive  
operand .  
The pat tern  i s  expressed  by  a geometr i c  s t ruc ture  
and a const ra in t  cond i t ion .  The s t ruc ture  ts  a t ree  
wr i t ten  in  parenthes ized  fo rm perhaps  conta in ing  
var iab les  eac l l  represent ing  a t ree  or  a fo res t .  The 
coed i t lon  I s  a f i r s t  o rder  log ic  p red icate  In  te rms o f  
the  a t t r ibutes  o f  the  nodes  occur r ing  in  the  geometr i c  
s t ruc ture .  More  soph is t i ca ted  cond i t ions  may be 
expressed  by  a pred icate  combined  w i th  geometr i c  
s t ruc ture  to  e f f i c ient ly  se lec t  in fo rmat ion  f rom the  
base .  
Pat tern  wr i t ing  shou ld  be reduced to  a min imum.  In  
the  abeve  example ,  the  geometr i c  s t ruc ture  i s  shnp ly  a 
grammar type  node and the  const ra in t  i s  the  node 's  
language a t t r ibote  hav ing  the  va lue= Er lg l l s l \ ] .  
The use o f  a cur rent  node tn the  d i rec tory  a l lows  
not  on ly  the  s impl i f i ca t ion  o f  pat tern  wr i t ing  but  a l so  
the  reduct ion  o f  the  pat tern  match ing  range .  The 
e f fec t ive  operand  becomes the  new cur rent  node a f te r  
the  execut ion  o f  a command. 
I I .  THE MAIN FUNCTIONS 
We sha l l  Jus t  descr lbe  the  funct ions  t t ia t  seem 
essent ia l ,  lhe  funct ions  may be d iv ided  In to  four  
g roups= 1. genera l  2. SCSG base updat ing  3 .  SCSG base  
inqu i ry  4.  SCSG ver i f i ca t ion .  
_1 ~ _GI~ t>\[E__R AL _F U_N__C__T._I.D_N S 
These  funct ions  Inc lude :  SCSE sess ion  opt ions  
set t ing ,  the  sys tem's  misce l laneous  ln fo rmat lon  inqu i ry  
and access  to  host  sys tem's  commands. 
The fo l low ing  opt ions  can 'be  set  by user  co ,hands :  
1. tn teract iv t ty  2. d la logue  language 3.  
auto - -ver l f i l ca t lon  4.  sess ion  t race  5. s tandard  
Input /output .  
One o f  the  4 Fo l low ing  In teract ive  modes may be 
chosen:  1. non- in teract ive  2. b r ie f  3.  deta l led  4.  
sys tem cont ro led .  
In  non- in teract ive  mode, no quest ion  i s  asked  by  t i l e  
sys tem.  An er ror  con~and I s  ignored  and a message w i l l  
be sent  but  the  process  cont inues .  In  b r ie f  mode,  the  
cur rent  access lb le  command names are  d i sp layed  when a 
corm, and I s  completed  and a RETURN in  the  command l ines  
i s  Found.  In  deta i led  mode, the  funct ton  and parameters  
o f  the  access ib le  commands are  d i sp layed  and 1F an 
er ror  ts  Found in  the  user ' s  Input  data ,  the  sys tem 
will  d iagnose  i t  and he lp  h im to  complete  the  command. 
A prompt  message l s  sent  every  t ime RETURN is  Found in  
the  COn~nand l ines .  In  the  sys tem cont ro l led  mode, the  
ln teract lv l ty  I s  dynamica l ly  chosen  by  t i l e  sys tem 
accord ing  to  the  sys tem=user  d ia logue .  
For  the  t lme be ing ,  on ly  F rench  i s  used as the  
d ia logue  language.  But  the  mu. l t l - l angueage d ia logue  i s  
taken  tn to  account  tn  des ign .  I t  i s  s imp ler  In  PROLOG 
to  add a new d ia logue  language.  
The auto -ver i f i ca t ion  opt ion  Ind icates  whether  the  
s ta t i c  coherence  (see  4.  SCSG ver i f i ca t ion)  o f  a 
g ra~nar  w i l l  be ver i f ied  each t ime i t  l s  mod i f ied .  
The t race  opt ion  i s  a sw i tch  that  tu rns  on or  o f f  
the  t race  o f  the  sess ion .  
The s tandard  Input /output  opt ion  changes  the  
s tandard  input /output .  
Some Inqu i r ies  about  the  sys tem's  genera l  
In fo rmat ion ,  such as the  cur rent  opt ions  and d i rec tory  
content ,  a re  a l so  ~nc luded in  th i s  g roup  o f  Funct ions .  
The access  to  host  sys tem's  co~Ylands w i thout  leav ing  
SCSE can  augment the  e f f i c iency .  But  any ob jec t  
mod l f ted  out  o f  SCSE i s  cons ided  no more coherent .  
2.  SCSG BASE UPDATING 
Th is  g roup  o f  f iuect lons  a re :  CREATE, COPY, CHANGE, 
LOCATE, DESTROY and MODIFY. \ ]hey  may be found In  a l l  
the  c lass ic  ed i to rs  o r  f i l e  management sys tems.  The 
advantage  o f  our  sys tem i s  that  the  operand o f  commands 
can be spec i f ied  accord ing  to  the  log ica l  s t ruc ture  o f  
the  base .  
For  example ,  the  col~nand : DESTROY CI4ARTS(TYPE=NP) 
Dest roys  a l l  the  char ts  wh ich  descr ibe  a Noun Phrase .  
82 
The SCSE has a syntac i  I c  ed i to r  that  knows the  
log ica l  s t ruc ture  o f  the  texts  be ing  ed i ted .  Ih l s  
ed i to r  I s  used  by  t i le  con'Jnands MODIF and CREATE. 
The command CREA1 <operand> <opt ions> 
ca l l s  the  ed l to r ,  c reat ing  a log ica l  data  un i t  
spec i f ied  by  t i l e  operaod .  I f  the  in teract ive  opt ion  ts  
demanded,  the  ed i to r  w i l l  gu ide  the  user  to  wr i te  
cor rec t  l y  accord ing  to  the  nature  o f  the  data .  
Fo l low ing  the  same tdea  o f  d i f fe rent  in teract  l ye  
leve ls ,  we t ry  to  improve  on t i l e  c lass ica l  s t ruc tura l  
ed i to r ,  Per ins tance  that  o f  Corne l l  Un ivers i ty  \ ] \ [5} ,  so 
that  one carl  enter  a p iece  o f  text  longer  than  that  
p rompted  by  the  sys tem.  I f  the  in teract ive  opt ion  I s  
not  demanded,  one Jus t  enters  in to  the  ed i to r  w l th  an 
empty  work  space .  
The CO~T~nand "MODIF < log ica l  un i t>"  ca l l s  the  
sys tem's  ed l to r  w i th  the  log ica l  data  unt t  as the  
workspace .  The data  i l l  the  workspace  may be d i sp layed  
In  a leg ib le  fo rm wh ich  re f lec ts  I t s  log ica l  s t ruc ture .  
The mul t l -w  \ ]ndows fac l l  i ty  o f  the  ed i to r  makes i t  
poss ib le  to  see s imul taneous ly  on t i le  sc reen  the  source  
text  and t i l e  text  In  s t ruc tured  fo rm.  
The SCSE ed i to r  inher i t s  the  usua l  ed i t ing  con~llands 
f rom the  host  ed i to r .  Thus one can  change a l l  the  
occur rences  Of  a ru le ' s  name fn  a grarrn lar  w i thout  
c i lang lng  the  s t r lngs  conta in ing  the  same characters ,  
us ing  a log lca l  s t ruc ture  change : 
C NAME( type=ru le )  o ld  name new _nan/e, 
wh i le  t i l e  phys lca l  s t ruc ture  command : 
C /o  1 d.. name/new .name/* * 
changes  a l l  the  s t r ings  "old_name" In  the  workspace  by 
new name.  
When an ob Jec t ' s  de f ln l t loo  I s  mod i f ied ,  a l l  I t s  
occur rences  may need to  be rev ised  and v ice  versa  even  
i f  the  mod i f i ca t ion  does  not  cause  a syntact i c  e r ror .  A 
s t ruc ture  locat ion  command f lnd lng  the  de f in i t ion  and 
a l l  the  occur rences  o f  an ob jec t  can be used In  th i s  
case .  
On ly  t i l e  log ica l  un i t s  de f ined  in  the  d i rec tory  and 
the  SCSL syntax  can  be man ipu la ted  by  the  s t ruc tura l  
COrr~land s. 
SCSGBA=SI~_INQUIRY 
These  funct ions  a l low users  to  express  what they  are  
i n te res ted  i l l  and to  get  the  Inqu i ry  resu l t s  In  a 
leg ib le  fo rm.  A par t  o f  the  on- l lne  manual  o f  usage  in  
the  fo rm o f  SCSG may a l so  be consu l ted  by  them.  
The operand pat terns  d i scussed  above  are  used to  
se lec t  the  re levant  data .  The operator  and opt ions  o f  
co~nands  choose  the  output  dev ice  and cor respond ing  
parameters .  A parametered  output  fo rm for  each log ica l  
data  un i t  has  been def ined .  The data  match ing  the  
operand pat tern  are  shaped accord ing  to  the i r  output  
fo rm.  The data  may o f  course  be obta ined  in  the i r  
source  fo rm.  
One may w ish  to  examine  an ob jec t  at  d i f fe rent  
leve ls  (e .g .  Jus t  t i l e  abst rac t  o r  some comments ) .  The 
opt ions  o f  the  con~and can spec i fy  th i s .  I f  one Jus t  
wants  to  change the  cur rent  node in  the  d i rec tory  fo r  
fac t l l ta t lng  the  fo l low ing  re t r ieva l ,  the  same locat ing  
co~nand as be fore  may be used .  
4 .  SCSG VERIEICAT#ONS. 
Two k lnds  o f  ver i f i ca t ions  may be d i s t ingu ished  : 
s ta t i c  and dynamic .  Ti le s ta t i c  ver i f i ca t ion  checks  
whether  a grammar or  a par t  o f  a g ra~nar  respects  the  
syntax  and semant ics  o f  the  fo rmal i sm.  The dynamic  
ver i f i ca t ion  tes ts  whether  a g iven  gran'mnar spec i f ies  
what  we want  I t  to .  
S ta t l c_ve ,  r I f i ca~ton  
All in terna l  representat ion  o f  the  ana lyzed  text  ts  
p roduced and used by the  sys tem for  s t ruc tura l  
man ipu la t ion ,  the  ana lyser  may produce  a l i s t  o f  c ross  
re ferences  of = nameab le  ob jec ts  and a l i s t  o f  
syntaxo-semant lc  e r rors  found In  the  text .  The exemples  
o f  nameab le  ob jec ts  a re  the  char ts ,  t i l e  macros ,  the  
a t t r ibutes .  The l i s t  o f  c ross - re ferences  revea ls  the  
ob jec ts  wh ich  are  used but  never  de f ined  or  those  
de f ined  but  never  used .  
A char t  may re fer  to  o ther  char ts .  Th is  re ference  
re la t ion  can be represented  by an or iented  graph  where  
the  nodes  s tand  fo r  a se t  o f  char ts .  A h lerarc i l t ca l  
re fe rence  graph  i s  o f ten  g iven  be fore  wr i t ing  the  
char ts .  A program can ca lcu la te  the  e f fec t ive  graph  o f  
a grammar accord ing  to  the  resu l t  o? ana lys i s  and 
compare  I t  w i th  the  g iven  one .  
The cornlland opt ions  may cance l  the  output  o f  t l l ese  
two l l s t s  and the  graph  ca lcu la t  Ion .  The graph  
ca lcu la t ion  may a l so  be executed  a lone .  One o f  opt lons  
Ind icates  whether  the  ana lys i s  wt l l  be In teract ive .  
D.y.n ~!# J c.  v. ~gr :1 f i canon  
Ti le dynamic  ver i f i ca t ion  I s  t i le  ca lcu la t lon  o f  a 
subset  o f  the  st  r ing - t ree  re la t ion  de f ined  by  a 
gr  altrnar.  A member o f  the  re la t ion  i s  a pa i r  
<st r ing , t ree>.  Ti)e command g ives  the  granYnar and the  
subset  to  be ca lcu la ted .  The subset  may be one o f  the  
four  fo l low ing  fo rms : 
I .  a pa i r  w i th  a g iven  s t r ing  and a g iven  t ree  ( to  
see whether  I t  be longs  to  the  re la t ion)  
2 .  pa i rs  w i th  a g iven  s t r ing  and an arb i t ra ry  t ree  
3.  pa i rs  w i th  an arb i t ra ry  s t r ing  and a g iven  t ree  
4.  a l l  poss ib le  pa i rs  
rhe ca lcu la t ion  i s  car r ied  out  by all  in terpreter .  
The user  may g ive  in terpretat ion  parameters  Ind icat ing  
in teract ive  and t race  modes,  s l ze  o? the  subset  to  be 
ca lcu la ted  and o ther  const ra in ts  such  as a l i s t  o f  
pass ive  (o r  ac t ive)  char ts  dur ing  th i s  in terpretat ion ,  
the  depth  and w idth  o f  t rees  and length  o f  the  s t r ing  
e tc . .  
As SCSGs are  s ta t l c  g ra l~nars ,  no heur i s t i c  s t ra tegy  
w l l t  be used In  the  ln terprete ' s  a lgor i thm.  So the  
i n te rpreta t ion  wi l l  not  be e f f i c ient .  S ince  the  goa l  ts  
ra ther  to  tes t  g ramnars  than  to  app ly  them on a rea l  
sca le ,  the  e f f i c iency  o f  the  in terpreter  I s  o f  no 
impor t  ance .  
CONCLUS I0N 
The sys tem presented  I s  be ing  imp lemented  a t  GETA. 
In  th l s  a r t i c le ,  we Put emphas is  on the  sys tem's  des ign  
pr inc ip les  and spec i f i ca t ion  ra ther  t i l an  on the  deta l i s  
o f  lmp lementat lon .  
We have  to1 lowed three  w ide ly  recommended des ign  
pr inc ip les :  a}  ear ly  focus  on users  and tasks ,  b)  
empi r i ca l  measurement  and c )  In teract ive  des ign  \]\[2\]\[. 
The spec i f i ca t ion  o f  the  funct ions  a re  checked  by 
the  sys tem's  fu ture  users  be fore  imp lementat ion .  The 
user ' s  adv ice  I s  taken  in to  account .  Th is  d ta logue  
cont inues  dur ing  lhe  imp lementat ion .  The top-down and 
modu lar  p rogramming approaches  are  fo l lowed so t t la t ,  
even  1f  the  Imp lementat ion  l s  not  complet ly  ac i l i eved ,  
the  imp lemented  par t  can s t i l l  be used .  
The sys tem Is  des igned fo r  be ing  rap id ly  imp lemented  
and east  l y  modt f l ed  thanks  to  I t s  modu lar  l ty  and 
espec ia l l y  to  a h tgh  leve l  log ic  p rogramming language:  
PROLOG (3 \ ] .  We have  t r ied  our  best  to  make the  sys tem 
as user - f r  lend ly  as poss ib le .  The sys tem's  most 
remarkab le  character  i s  that  the  users  manage the i r  
data  accord ing  to  the  log lca l  s t ruc ture  adapted  to  t i l e  
human be I r ig. 
What ts  in teres t ing  In  our  sys tem l s  not  that  i t  
shows sonle very  o r ig ina l  ideas  or  the  most recent  
techn iques  In  s ta te -o f - the -ar t  but  t t  shows that  t i l e  
combinat ion  o f  we l l -known techn iques  used or igna l ly  In  
d i f fe rent  f ie lds  may f lnd  i t s  app l i ca t ion  in  o ther  
f ie lds .  
83 
Long term perspect ives  o f  the system are  numerous. 
Wlth the eva luat ion  o? the SCSG, some s t ra teg ic  and 
heur i s t i c  meta . - ru les  may be added to  a grammar. 
Equ ipped by an exper t  system o f  SCSG, SCSE cou ld  
ln terprete  e f fc lent ly  a s ta t i c  grammar and synthet l se  
f rom I t  e f f i cac ious  dynamic grammars. 
I t  I s  a l so  in teres t ing  to  in tegrate  in to  SCSE an 
exper t  system which cou ld  compare two SCSGs o f  two 
languages and produce  a t rans fer  grammar or' at  leas t  
g lve  some adv ice  fo r  const ruct ing  i t .  
Us ing i t s  log ica l  s t ruc ture  man ipu la t ion  mechanism, 
SCSE can be extended to  deal  w i th  o ther  types  o f  
s t ruc tured  texts .  Thanks to  I t s  e f f i c ient  In terpreter  
or  in Cooperat ion  w i th  a power fu l  machine t rans la t ion  
system such as ARIANE, SCSE cou ld  be capab le  o f  
o f fe r ing  mul t i - l l ngua l  ed i t ing  fac i l i t i es  (4~.  
BIBLIOGRAPHIE 
2. 
3. 
4. 
S .Chappuy,  
"Formal l sa t lon  de la  Descr ip t ion  des N iveaux  
d ' In tepretat ion  des Langues Nature \ ] les .  Etude 
Men~e en Vue de l 'Ana lyse  et  de la G6n@rat lon au 
Moyeo de Transducteur . " ,  
Th~se de t ro ts l~me cyc le  & I 'USMG-INPG, Ju i l l e t  
1983. 
JOHN G. COULD & CLAYTON LEWIS, 
"Des ign ing  fo r  Useab l l i ty :  Key Pr inc ip les  and 
What Des igners  Th ink" ,  
Co~nunIcat lon  o f  the  ACM, March 1985 Volume 28 N ? 
3. 
Ph. Donz, 
"PROLOGCRISS, une extent ion  du langage PROLOG", 
CRISS, Un lvers l te  I I  de Grenob le ,  Vers ton  4 .0 ,  
Ju i l l e t  1985. 
HEIDORN G.E . ,  JENSEN K.,  MILLER L .A . ,  BYRD R. J .0  
CHODOROW M.S . ,  
"The EPISTLE text -c r l t lau ing  sys tem." ,  
IBM Syst .  Journa l ,  21 /3 ,  1982. 
5. 
6. 
TEITELBAUM 1. et  a l ,  
"The Corne l l  Program Synthes izer :  a syntax  
d i rec ted  pr 'ogra~ntng  env i ronments .  " , 
Co~nun icat lon  o f  ACM, 24(9) ,  Sept .  1981. 
8. VAUOOIS & S. CHAPPUY, 
"S ta t i c  Gran~ars  : a fo rmal i sm for  the 
descr lb t ion  o f  l ingu is t i c  mode ls" ,  
P roceed ings  o f  the  conference  on theoret i ca l  and 
methodo log ica l  i ssues  in machtne t rans la t ion  o f  
natura l  language,  Co lgate  Un ivers i ty ,  Hami l ton  
N . -Y . ,  USA, August 14-16,  1985 
-O--O--O-O--O-O-O-O- 
84 
