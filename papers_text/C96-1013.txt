Concept  c luster ing and knowledge integrat ion from a 
chi ldren's dict ionary 
Caro l ine  Bar r i ;~re  an( I  I ,?ed  l ' opowich  
School  of (k )nqmt ing  S(:iencc, Si \]n(m l,'rascr U l l ivcrs i ty  
l~urnaby,  l~C, ( ;n.nada, V5A 1S6 
ba.rric're,l)Ol)OWi(;ll(@(:s.stTu.(;a 
Abst ract  
Knowledge structures called Conce l ) t  
(?lustering Knowledge (\]raphs (CCKGs) 
are introduced along with a process for 
their construction from a machine read- 
able dictionary. C(3K(\]s contain multi- 
ple concepts interrelated through multi- 
l)le semantic relations together forming 
a semantic duster represented by a con-. 
ceptual graph. '1'he knowledge acquisi- 
tion is performed on a children's first dic- 
tionary. The concepts inw)lved are gen- 
eral and typical of a daily l id conw'a'sa- 
lion. A collection of conceptual clusters 
together can lbrm the basis of a lexi- 
cal knowledge base, where each C'(,'l((.~ 
contains a limited nnmber of highly con- 
nected words giving usefid information 
about a particular domain or situation. 
it Introduction 
When constructing a l,exieal Knowledge Ilase 
(1,KB) useful for Natural l,anguage Processing, 
the source of information from which knowledge 
is acquired and the structuring of this informa- 
tion within the LKB are two key issues. Ma- 
chine Readable Dictionaries (MIH)s) are a good 
sour(:e of lexical information and have been shown 
to be al)plical)le to the task of I,KII COllStruction 
(l)ola.n ct al., 1993; Calzolari, t992; Copestake, 
\[990; Wilks et al, 1989; Byrd et al, 1987). Often 
though, a localist approaeh is adopted whereby 
the words are kept in alphabetical order with some 
representation of their definitions in the form of 
a template or feature structure. F, flbrt in find- 
lug cormections between words is seen in work on 
automatic extraction of sem~mtic relations Dora 
MRI)s (Ahlswede and Evens, 1988; Alshawi, 1989; 
Montemagrfi and Vandorwende, 19!32). Addition- 
ally, effort in finding words that are close seman- 
tically is seen by the current interest in statisti- 
cal techniques for word clustering, looking at (-o- 
occurrences of words in text corpora or dictionar- 
ies (Church and IIanks, 1989; Wilks et al, 1989; 
Brown et al, 11992; l'ereira et al, 11995). 
Inspired by research in the. areas of semantic 
relations, semantic distance, concept clustering, 
and using ( ,once  I tual (Ji a l hs (Sowa, 1984) as our 
knowledge representation, we introduce (;oncept 
(?lustering I{nowledge Graphs (CCKGs). Each 
(JCKG will start as a Conceptual Graph represen- 
tation of a trigger word and will expaud following 
a search algorit, hm to incorporate related words 
and ibrm a C'oncept Cn,s(,er. The concept chls- 
tcr in itself is interesting for tasks such as word 
disambiguation, but the C(~K(\] will give more to 
that cluster. It will give the relations between the 
words, making the graph in some aspects similar 
to a script (Schank and Abelson, 11975). llowever, 
a CCK(I is generated automaticMly and does not 
rely on prin,itives but on an unlimited number of 
concel ) ts  , showing objects, persons, and actions 
interacting with each other. This interaction will 
be set, within a lmrtieular domain, and the trig- 
ger word should be a key word of the domain to 
represent. 11' that process would be done for the 
whole dictionary, we would obtain an l,l( II divided 
into multiple clusters of words, each represented 
by a CCK(\]. Then during text processing fin: ex- 
ample, a portion of text could be analyzed using 
the appropriate CCK(\] to lind implicit relations 
and hell) understanding the text. 
Our source of knowledge is the Americ~m iter- 
itage First I)ictionary t which contains 1800 en- 
tries aml is designed for children of age six to eight. 
lit is made for yom~g l)eople learning the structure 
and the basic w)cabulary of their language. In 
comparison, an adult's dictiouary is more of a ref 
erence tool which assumes knowledge of a large 
basic vocabulary, while a learner's dictionary as- 
sumes at limited vocabulary but still some very 
sophisticated concepts. Using a children's dictio- 
nary allows us to restrict our vocabulary, but still 
work on general knowledge about day to day (:Oil-- 
cel)tS and actions. 
In the folk)wing sections, we first present the 
l Copyright @1994 by \[Ioughton Miftlin Company. 
Reproduced by permission h'om TIlE AMERICAN 
ItERITAGI'; FIRST DIC'I?IONAIlY. 
55 
transformation steps from the definitions into con- 
ceptual graphs, then we elaborate on the integra- 
tion process, and finally, we close with a discus- 
sion. 
2 Transforming definitions 
Our definitions may contain up to three general 
types of information, as shown in the examples in 
Figure 1. 
? description: This contains genus/differentia 
information. Such information is frequently 
used for noun taxonomy construction (Byrd et 
al., 1987; Klavans et al, 1990; Barri~re and 
Popowich, To appear August 1996). 
? general knowledge or usage: This gives in- 
formation useflfl in daily life, like how to use an 
object, what it is made of, what it looks llke, etc. 
? specific example: This presents a typical situ- 
ation using the word defined and it involves spe- 
cific persons and actions. 
Cereal is a kind of food. \[description\] 
Many cereals are made from corn, wheat, or rice. \[usage\] 
Most people eat cereal with milk in a bowl. \[usage\] 
Asia is what is left after something burns. \[usage\] 
It is a soft gray powder. \[description\] 
Ray watched his father clean the ashes out of the fireplace. 
\[example\] 
Figure 1: Example of definitions 
The information given by the description and 
general knowledge will be used to perform the 
knowledge integration proposed in section 3. The 
specific examples are excluded as they tend to in- 
volve specific concepts not always deeply related 
to the word defined. 
Our processing of the definitions results in the 
construction of a special type of conceptual graph 
which we call a temporary graph. The set of rela- 
tions used in temporary graphs come from three 
sources. Table 1 shows some examples for each 
type. 
1. the set of closed class words, ex: of, to, in, and; 
2. relations extracted via defining formulas ex: part- 
of, made-of, instrument; defining formulas cor- 
respond to phrasal patterns that occur often 
through the dictionary suggesting particular se- 
mantic relations (ix. A is a part of B) (Ahlswede 
and Evens, 1988; Dolan et al, 1993). 
3. the relations that are extracted from the syntac- 
tic structure of a sentence, ex: subject, object, 
goal, attribute, modifier. 
As some relations are defined using the closed 
class words, and many of those words are ambigu- 
ous, the resulting graph will itself be ambiguous. 
This is the main reason for calling our graphs 
temporary as we assume a conceptual graph, the 
ultimate goal of our translation process, should 
contain a restricted set of well-defined and non- 
ambiguous emantic relations. For example, by 
can be a relation of manner (by chewing), time 
(by noon) or place (by the door). By keeping 
the preposition itself within the temporary graph, 
we delay the ambiguity resolution process until 
we have gathered more information and we even 
hopefully avoid the decision process as the ambi- 
guity might later be resolved by the integration 
process itself. 
1. closed class words temporary I~raph 
np:np\[A\],prep\[Bl,np\[C \] \[A\]->(B)->\[C\] 
apple on the table \[apple\]->(on)->\[table\] 
2. defining formulas 
Ais used to B 
Ais a part of B 
A is a place where B 
3. syntactic pattern 
s:np\[A\],vp\[B\] 
John eats 
vp:vp\[A\],inf_vp\[B\] 
eat to grow 
temporary graph 
\[B\]- >(instrument )- > \[A\] 
\[A\]-> (part-of)-> \[B\] 
\[Bl->(loc)->\[A\] 
temporary graph 
\[B\]-> (agent)-> \[h\] 
\[eat\]- > (agent)- >\[John\] 
\[A\]-> (goal)-> \[B\] 
\[e at\]- > ( goal)- > \[grow\] 
Table 1: Examples of relations found in sentences 
and their corresponding temporary graphs 
3 Knowledge integration 
This section describes how given a trigger word, 
we perform a series of forward and backward 
searches in the dictionary to build a CCKG con- 
taining useful information pertaining to the trig- 
ger word and to closely related words. The pri- 
mary building blocks for the CCKG are the tem- 
porary graphs built from the dictionary definitions 
of those words using our transformation process 
mentioned in the previous section. Those tem- 
porary graphs express similar or related ideas in 
different ways and with different levels of detail. 
As we will try to put all this information together 
into one large graph, we must first find what in- 
formation the various temporary graphs have in 
common and then join them around this common 
knowledge. 
To help us build this CCKG and perform our 
integration process, we assume two main knowl- 
edge structures are available, a concept hierarchy 
and a relation hierarchy, and we assume the exis- 
tance of some graph operations. The concept hi- 
erarchy concentrates on nouns and verbs as they 
account for three quarters of the dictionary def- 
initions. It has been constructed automatically 
according to the techniques described in (Barri~re 
and Popowich, To appear August 1996). The re- 
lation hierarchy was constructed manually. A rich 
hierarchical structure between the set of relations 
is essential to the graph matching operations we 
use for the integration phase. 
As we are using the conceptual graph formalism 
to represent our definitions, we can use the graph 
66 
matching operations defined in (Sowa, 1984). The 
t, wo operations we will need are the maximal com- 
mon subgraph algorithm and the maximal join al- 
gorithm. 
3.1. Max imal  common subgraph 
The maximal common subgraph between two 
graphs consists of finding a subgraph of tile first 
graph that is isomorphic to a subgraph of the see- 
ond graph. In our case, we cannot often expect to 
find two graphs that contain an identical subgral)h 
with the exact same relations and concepts. Ideas 
cart be expressed in many ways and we therefore 
need a more relaxed matching schema. We de- 
scribe a few elements of this "relaxation" process 
and illustrate them by an example in Figure 2. 
(1) John makes a nice drawing on a piece of paper with the pen. 
\[make\]- >(sub)-  >\[ John\] 
- >(obj) -  >\[drawing\]- >(nit ) -  >\[nice\] 
- >(on)- >\[piece\]- >(or)- >\[paper\] 
->(with) -  >\[pen\] 
(2) John uses the big crayon to  draw rapidly on the paper.  
\[(haw\]- >(sub)- >\[ John l 
->(on)->\[paper\]  
- >(inst . . . . . . . .  t)- > \[crayon\] 
- >(manner ) -  >\[rapidly\] 
MAXIMAl ,  COMMON SUBGRAPn:  
\[make(draw)\]-  >(sub)-  >\[ John\] 
- >(obj ) -  >\[drawing\] 
- >(on)->\[piece\]- >(of)->\[paper\]  
- >( inst rument) -  >\[label-11 
~ method 
l~elation subsumption 
Predictable meaning Mdft 
nelat ion t r~nsitivity 
graphl  \] graph2 
pell cr~yoll 
with instrument 
drawing dr~w 
piece of paper  p~per 
MAXIMAL JOIN: 
\[make(draw)\]-  >(sub)-  >\[ John\] 
- >(obj) -  > \[drawing\]- >(art ) -  >\[nice\] 
- >(o. ) -  > \[piece\]- >(of)- >\[paperl  
->( inst  . . . . . .  t)->\[l~b?l-1\] 
->( . . . . . . . . .  )->\[rapidly\] 
Figure 2: Example of "relaxed" maximal common 
sui)graph and maximal join algorithms 
Semant ic  d is tance  between concepts .  In 
the maximal common subgraph algorithm pro- 
posed by (Sow% :1984), two concepts (C1,CY) 
could be matched if one snbsumed the other in 
the concept hierarchy. We can relax that criteria 
to match two concepts when a third concept C 
which subsumes C1 and C2 has a high enough de- 
gree of informativeness (Resnik, 1995). The con- 
cept hierarchy can be useful in many cases, but it 
is generated from the dictionary and might not be 
complete nough to find all similar concepts. 
In the example of Figure 2, when using tile con- 
cept hierarchy to establish the similarity between 
pen and crayon, we find that; one is a subclass 
of lool and the other of wax, both then are sub- 
stoned by the general concept something. We have 
reached the root of the noun tree in the concept hi- 
erarchy and this would give a similarity of 0 based 
on the informativeness notion. 
We extend the subsumption notion to the 
graphs. Iustead of finding a concept that sub- 
sulnes two concepts, we will try finding a common 
subgraph that subsumes the graph representation 
of both concepts. In our example, pen and crayon 
have a common subgraph \[write\]->(inst)->~. The
notion of semantic distance can be seen as the in- 
formativeness of the subsuming graph. The re- 
suiting maximal comlnon snbgraph as shown in 
Figure 2 contains the concept label-1. This label 
is associated to a covert category ~s presented in 
(Barri~re and Popowich, To appear August 1996). 
We carl update tile concept hierarchy and add this 
label-1 as a subclass of something and a superclass 
of pen and crayon. It expresses a concept of "writ- 
ing instrument". 
t 
Re la t ion  subsmnpt ion .  Since we have a re- 
lation hierarchy in addition to our concept hier- 
archy, we can similarly use subsumption to match 
two relations. In i,'igure 2, with is subsumed by in- 
strument, and by lnapping them, we disantbiguate 
wilh from corresponding to another semantic rela- 
tion, such as possession or accompaniment. This 
is a case where an arnbiguons preposition left in 
the temporary graph is resolved by the integration 
process. 
P red ic tab le  mean ing  shift .  A set of lexical 
implication rules were developed by (Ostler and 
Atkins, 1992) for relating word senses. Based on 
them, we are developing a set of graph match- 
ing rules. Figure 2 exemplifies one of theln where 
two graphs containing the same word (or morpho- 
logically related), here draw and drawing, used as 
different parts of speech can be related. 
Re la t ion  t rans i t i v i ty .  Some relations, like 
part-of, in, from can be transitive. For example, 
we can map a graph that contains a concept A in 
a certain relation to concept B onto another graph 
where concept A is in the same relation with a part 
or a piece of B as exemplified in Figure 2. Tran- 
sitivity in relations is in itself a challenging area 
of study (Cruse, 1986) and we have only begun to 
explore it. 
3.2 Max imal  jo in  
The basic operation for the integration of tempo- 
rary graphs is the maximal join operation where a 
union of two graphs is formed around their max- 
imal common subgraph using the most specific 
concepts of each. We just saw how to relax the 
maximal common subgraph operation and we will 
perform the join around that "relaxed" subgraph. 
Figure 2 shows the result of the maximal join. 
The join operation allows us to bring new con- 
ccpts into a graph by finding relations with ex- 
57 
isting concepts, as well as bringing new relations 
between existing concepts. 
3.3 Integrat ion process 
Given the concept hierarchy, relation hierarchy 
and graph matching operations, we now describe 
the two major steps required to integrate all the 
temporary graphs into a CCKG. 
TR IGGER.  PHASE.  Start with a central 
word, a keyword for the subject of interest that 
becomes the trigger word. The temporary graph 
built from the trigger word forms the initial 
CCKG. To expand its meaning, we want to look 
at the important concepts involved and use their 
respective temporary graphs to extend our initial 
graph. We deem words in the definition to be im- 
portant if they have a large semantic weight. 
2.'he semantic weight of a word or its informa- 
tiveness can be related to its frequency (l~esnik, 
1995). Itere, we calculate the number of occur- 
rence of each word within the definitions of nouns 
and verbs in our dictionary. The most frequent 
word "a" occurs 2600 times among a total of 38000 
word occurrences. Only 1% of the words occur 
more than 130 times, 5% occur more than 30 times 
but over 60% occur less than 5 times. 
Ordering the dictionary words in terms of de- 
creasing number of occurrences, the top 10% of 
these words account for 75% of word occurrences. 
For our current investigation, we propose this 
as the division between semantically significant 
words, and semantically insignificant ones. So a 
word from the dictionary is deemed to be seman- 
tically significant if it occurs less than 17 times. 
Note that constraining the number of semanti- 
cally significant words is important in limiting the 
exploration process tbr constructing the concept 
cluster, as we shall soon see. 
T r igger  fo rward :  Find the semantically signif- 
icant words fi'om the CCKG, and join their 
respective temporary graphs to the initial 
CCKG. 
T r igger  backward :  Find all the words in the 
dictionary that use the trigger word in their 
definition and join their respective temporary 
graphs to the CCKG. 
Instead of a single trigger word, we now have 
a cluster of words that are related through the 
CCKG. Those words ,form the concept cluster. 
EXPANSION PHASE.  We try finding words 
in the dictionary containing many concepts iden- 
tical to the ones already present in the CCKG but 
perhaps interacting through different relations al- 
lowing us to create additional links within the set 
of concepts present in the CCKG. Our goal is to 
create a more interconnected graph rather than 
sprouting from a particular concept. For this rea- 
son, we establish a graph matching threshold to 
decide whether we will join a new graph to the 
CCKG being built. We set this threshold empir- 
ically: the maximal common subgraph between 
the CCKG and the new temporary graph must 
contain at least three concepts connected through 
two relations. 
Expans ion  fo rward :  For each semantically 
significant word in the CCKG, not already 
part of the concept cluster, find the maxi- 
mal common subgraph between its temporary 
graph and the CCKG. If matching surpasses 
the graph matching threshold, perform inte- 
gration (maximal join operation) and add the 
word in the concept cluster. Continue for- 
ward until no changes are made. 
Expans ion  backward :  Find words in the dic- 
tionary whose definitions contain the seman- 
tically significant words from the concept 
cluster. For each possible new word, find 
the maximal common subgraph between its 
temporary graph and the CCKG. Again, if 
matching is over the graph matching thresh- 
old, perform integration and add the word 
to the concept cluster. Continue until no 
changes are made. 
We can set a limit to the number of steps in the 
expansion phase to ensure its termination. Ilow- 
ever in practice, M'ter two or three steps forward 
or backward, the maximal common subgraphs be- 
tween the new graphs and CCKG do not exceed 
the graph matching threshold and thus are not 
added to the cluster, terminating the expansion. 
3.4 Example  of  in tegrat ion  
Figure 3 shows the starting point of an integra- 
tion process with the trigger word (TW) lelter, its 
definition, its temporary graph (TG), the concept 
cluster (CC) containing only the trigger word, 
and the CCKG being the same as the temporary 
graph. Then we show the trigger forward phase. 
The number of occurences (NOte) of each word 
present in the definition of letter is given. Us- 
ing the criteria described in the previous section, 
only the word message is a semantically significant 
word (SSW). We then see the definition of mes- 
sage, the new concept cluster and the resulting 
CCKG. 
The trigger backward phase, would incorporate 
the temporary graphs for address, mail, post office 
and stamp. The expansion forward phase would 
further add the temporary graphs for the seman- 
tically significant words: {send, package} dur- 
ing the first step and then would terminate with 
the second step as no more semantically signifi- 
cant words not yet explored have a maximal com- 
mon subgraph with the CCKG that exceeds the 
graph matching threshold. The expansion back- 
ward would finally add the temporary graphs for 
card and note, again terminating after two steps. 
63 
The resulting cluster is: {letter, message, ad- 
dress, mail, post office, stamp, send, package, 
card, note}. The resulting CCKG shows the in- 
teraction between those concepts which smnma- 
rizes general knowledge about lnow we use those 
concepts together in a da.ily conversation: we go 
to the post office to mail letters, or packages; we 
write letters, notes and cards to send to peoI)le 
through the mail, etc. Ilaving such clusters and 
such knowledge of the relationship between words 
as part of our lexical knowledge base can be useflfl 
to understand or even generate a text containing 
the concepts involved in the cluster. 
S'I 'Al l . ' I ' ING POIN 'F :  
TW:  le t te r  
Def :  A le t te r  is a message  you wr i te  on paper ,  
TG:  same as CCKG 
CO:  {letter} 
CCKG:  \[write\]- > (obj)- > \[message(let t r)\] 
- > (sub j)-  > \[per . . . .  :you\] 
- > (on)- > \[>q,e,'l 
T l l . IGG EtI~ I!'O I tWA I/.D : 
NOtes :  you:280,  paper :42 ,  wr i te:31,  
message:7  
SSWs:  message  
l_)ef: A ln ( ' . ssage is a g roup  of words  that  is sent  
l ' l 'Olll ()lie person  to ;~. I lothel ' .  
Many people  send nmssages  through the  mail .  
( ;C :  { letter ,  message} 
CCKG:  
\ [word :group(message( le t te r ) ) \ ]  
<@~bj) <-\[write\]- > (sub)- > \[person:you\] 
- > (o,)- > \[l,~per\] 
<-(obj)<-\[ ..... 11->(.~.bj)->\[pe~" ............ y\] 
- > ( f ro l / l ) -  > \[pe . . . . . . . . . . .  \] 
- > (to)-  > \[I . . . . . . . . . . . . . .  ther\]  
-> (through)->\[mail I 
Fignre 3: iDigger forward from letter. 
4 Discuss ion  
'l'lu:ough this paper, we showed the multiple steps 
leading us to tile building of Concept Clustering 
Knowledge Graphs (CCKGs). Those knowledge 
structm:es arc built within the Lexical Knowl- 
edge Base (LKB), integrating lnultiple parts of the 
I,Kt~ around a particular concept o form a clus.- 
ter and express the multiple relations among the 
words in that cluster. The CCKGs could be either 
permanent or temporary structures depending on 
the. applicatkm using the LKB. For example, for a 
text understanding tusk, we can build before hand 
the CCKGs corresponding to one or multiple key- 
words from the text. Once built, the CCKGs will 
help us in our comprehension a d disambiguation 
of the text. 
By using the American lh;ritage First l)ictio- 
nary a~s our source of lexical information, we were 
able to restrict our vocabulary to result ill a 
project of reasonable size, dealing with general 
knowledge about (lay to day concepts and actions. 
The ideas explored using this dictionary can be ex- 
tended to other dictionaries as well, but the task 
might becorne more complex as the defilfitions in 
adult's dictionaries are not as clear and usage ori- 
ented. In fact, an LKB lmilt fl'om a children's 
dictionary could be seen as a starting point from 
which we could extend our acquisition of knowl- 
edge using text corpora or other dictionaries. Cer- 
tainly, if we euvisage applications trying to under- 
stand children's tories or help in child education, 
a corpora of texts for children would be a good 
source of information to extend our LKB. 
The graph operations (maximM commou sub- 
graph and maximal join) defined on conceptual 
graphs, anti adapted here, play an important role 
in our integration process toward a final CCKG. 
Graph matching was also suggested as an alterna- 
tiw; to taxonomic search when trying to establish 
semantic similarity between concepts. As well, by 
putting a threshohl on the graph matching pro- 
cess, we were able to limit the expansion of our 
clustering, as we can decide and justify the incor- 
poration of a new concept into a particular cluster. 
Many aspects of the concept clustering and 
knowledge integration processes have already been 
implemented and it will soon be possible to test 
the techniques on different rigger words using dif- 
ferent thresholds to see how they effect the quality 
of the clusters. 
(~lustering is often seen as a statistical opera- 
tion that puts together words "somehow" related. 
ltere, we give a meaning to their clustering, we 
tint\[ and show the connections between concepts, 
and by doing so, we build more than a cluster oF 
words. We build a knowledge graph where the 
concepts interact with each other giving impe l  
taut implicit information that will be useful for 
Natural Language Processing tusks. 
5 Acknowledgments  
i\['his research was supported by the Institute for 
Robotics and Intelligent Systems. The autlnors 
would like to thank the anonymous referees for 
their comments and suggestions, and Petr Kubon 
for his many comments on the paper. 
Re ferences  
T. Ahlswede and M. Evens. 1988. Generating a
relational lexicon from a machine-readable dic- 
tionary. International JowrnM of Lexicography, 
1l(3):214 237. 
II. A\]shawi. 1989. Analysing tile dictionary def- 
inil.ions. In 1~. Boguraev and T. llriscoe, ed- 
itors, Compulalional Lexicography for Natural 
Language Processing, chapter 7, pages 153-170. 
Long,nan (\]reap IlK l,imited. 
C. Barri6re and F. Popowich. To apl)ear, August 
1996. Building a noun taxonomy from a chil- 
69 
dren's dictionary. In Proceedings of Euralex'96, 
GSteborg, Sweden. 
P. Brown, V.J. Della Pietra, P.V. deSouza, J.C. 
Lai, and I{.L. Mercer. 1992. Class-based n- 
grain models of natural language. Computa- 
tional Linguistics, 18(4):467-480. 
R.J. Byrd, N. Calzolari, M. Chodorow, J. Kla- 
vans, M. Neff, and O. Rizk. 1987. Tools and 
methods for computational lexieology. Compu- 
tational Linguistics, 13(3-4):219-240. 
N. Calzolari. 1992. Acquiring and representing se- 
mantic information i a lexical knowledge base. 
In J. Pustejovsky and S. Bergler, editors, Lex- 
ical Semantics and Knowledge Representation 
: First SIGLEX Workshop, chapter 16, pages 
235-244. Springer-Verlag. 
K. Church and P. Hanks. 1989. Word associa- 
tion norms, mutual information and lexicogra- 
phy. In Proceedings of the 27lh Annual meeting 
of the Association for Computational Linguis- 
tics, pages 76-83, Vancouver, BC. 
A.A. Copestake. 1990. An approach to building 
the hierarchical element of a lexical knowledge 
base from a machine readable dictionary, in 
Proceedings of the Workshop on Inheritance in 
Natural Language Processing, 7'ilburg. 
D.A. Cruse. 1986. Lexical Semantics. Cambridge 
University Press. 
W. Dolan, L. Vanderwende, and S. D. Richard- 
son. 1993. Automatically deriving structured 
knowledge bases from on-line dictionaries. In 
The First Conference of the Pacific Associa- 
tion for Computational Linguistics, pages 5-14, 
IIarbour Center, Campus of SFU, Vancouver, 
April. 
J. Klavans, M. S. Chodorow, and N. Wacholder. 
1990. From dictionary to knowledge base via 
taxonomy. In P~vceedings of the 6th Annual 
Conference of the UW Centre for the New OED: 
Electronic Text Research, pages 110-132. 
S. Montemagni and L. Vanderwende. 1992. Struc- 
tural patterns vs. string patterns for extract- 
ing semantic information from dictionaries. In 
Proc. of the 14 o~ COLING, pages 546-552, 
Nantes, France. 
N. Ostler and B.T.S. Atkins. 1992. Predictable 
meaning shift: Some linguistic properties of 
lexical implication rules. In J. Pustejovsky 
and S. Bergler, editors, Lexical Semantics and 
Knowledge Representation : First S\[GLEX 
Workshop, chapter 7, pages 87-100. Springer- 
Verlag. 
17. Pereira, N. Tishby, and L. Lee. 1995. Distri- 
butional clustering of english words. In Proc. of 
the 33 th A CL, Cambridge,MA. 
P. Resnik. 1995. Using information content o 
evaluate semantic similarity in a taxonomy. In 
Proc. of the 14 th IJCAL volume 1, pages 448- 
453, Montreal, Canada. 
R. Schank and FL. Abelson. 1975. Scripts, plans 
and knowledge. In Advance papers 4th Intl. 
Joint Conf. Artificial Intelligence. 
J. Sowa. 1984. Conceptual Structures in Mind 
and Machines. Addison-Wesley. 
Y. Wilks, D. Fass, G-M Guo, J. McDonald, 
T. Plate, and B. Slator. 1989. A tractable ma- 
chine dictionary as a resource for computational 
semantics. In Bran Boguraev and Ted Briseoe, 
editors, Computational Lexicography for Natu- 
ral Language Processing, chapter 9, pages 193- 
231. Longman Group UK Limited. 
70 
