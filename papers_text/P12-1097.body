Proceedings of the 50th Annual Meeting of the Association for Computational Linguistics, pages 921?929,
Jeju, Republic of Korea, 8-14 July 2012. c?2012 Association for Computational Linguistics
Character-Level Machine Translation Evaluation
for Languages with Ambiguous Word Boundaries
Chang Liu and Hwee Tou Ng
Department of Computer Science
National University of Singapore
13 Computing Drive, Singapore 117417
{liuchan1,nght}@comp.nus.edu.sg
Abstract
In this work, we introduce the TESLA-
CELAB metric (Translation Evaluation of
Sentences with Linear-programming-based
Analysis ? Character-level Evaluation for
Languages with Ambiguous word Bound-
aries) for automatic machine translation eval-
uation. For languages such as Chinese where
words usually have meaningful internal struc-
ture and word boundaries are often fuzzy,
TESLA-CELAB acknowledges the advantage
of character-level evaluation over word-level
evaluation. By reformulating the problem in
the linear programming framework, TESLA-
CELAB addresses several drawbacks of the
character-level metrics, in particular the mod-
eling of synonyms spanning multiple char-
acters. We show empirically that TESLA-
CELAB significantly outperforms character-
level BLEU in the English-Chinese translation
evaluation tasks.
1 Introduction
Since the introduction of BLEU (Papineni et al.,
2002), automatic machine translation (MT) eval-
uation has received a lot of research interest.
The Workshop on Statistical Machine Transla-
tion (WMT) hosts regular campaigns comparing
different machine translation evaluation metrics
(Callison-Burch et al., 2009; Callison-Burch et al.,
2010; Callison-Burch et al., 2011). In the WMT
shared tasks, many new generation metrics, such as
METEOR (Banerjee and Lavie, 2005), TER (Snover
et al., 2006), and TESLA (Liu et al., 2010) have con-
sistently outperformed BLEU as judged by the cor-
relations with human judgments.
The research on automatic machine translation
evaluation is important for a number of reasons. Au-
tomatic translation evaluation gives machine trans-
lation researchers a cheap and reproducible way to
guide their research and makes it possible to com-
pare machine translation methods across different
studies. In addition, machine translation system
parameters are tuned by maximizing the automatic
scores. Some recent research (Liu et al., 2011) has
shown evidence that replacing BLEU by a newer
metric, TESLA, can improve the human judged
translation quality.
Despite the importance and the research inter-
est on automatic MT evaluation, almost all existing
work has focused on European languages, in partic-
ular on English. Although many methods aim to
be language neutral, languages with very different
characteristics such as Chinese do present additional
challenges. The most obvious challenge for Chinese
is that of word segmentation.
Unlike European languages, written Chinese is
not split into words. Segmenting Chinese sentences
into words is a natural language processing task
in its own right (Zhao and Liu, 2010; Low et al.,
2005). However, many different segmentation stan-
dards exist for different purposes, such as Microsoft
Research Asia (MSRA) for Named Entity Recog-
nition (NER), Chinese Treebank (CTB) for parsing
and part-of-speech (POS) tagging, and City Univer-
sity of Hong Kong (CITYU) and Academia Sinica
(AS) for general word segmentation and POS tag-
ging. It is not clear which standard is the best in a
given scenario.
The only prior work attempting to address the
problem of word segmentation in automatic MT
evaluation for Chinese that we are aware of is Li et
921
? ?
buy umbrella
? ??
buy umbrella
? ? ?
buy rain umbrella
Figure 1: Three forms of the same expression buy um-
brella in Chinese
al. (2011). The work compared various MT eval-
uation metrics (BLEU, NIST, METEOR, GTM, 1
? TER) with different segmentation schemes, and
found that treating every single character as a token
(character-level MT evaluation) gives the best corre-
lation with human judgments.
2 Motivation
Li et al. (2011) identify two reasons that character-
based metrics outperform word-based metrics. For
illustrative purposes, we use Figure 1 as a running
example in this paper. All three expressions are se-
mantically identical (buy umbrella). The first two
forms are identical because ??1 and ? are syn-
onyms. The last form is simply an (arguably wrong)
alternative segmented form of the second expres-
sion.
1. Word-based metrics do not award partial
matches, e.g., ?_?? and ?_? would be
penalized for the mismatch between ?? and
?. Character-based metrics award the match
between characters? and?.
2. Character-based metrics do not suffer from er-
rors and differences in word segmentation, so
?_?? and ?_?_? would be judged ex-
actly equal.
Li et al. (2011) conduct empirical experiments to
show that character-based metrics consistently out-
perform their word-based counterparts. Despite
that, we observe two important problems for the
character-based metrics:
1. Although partial matches are partially awarded,
the mechanism breaks down for n-grams where
1Literally, rain umbrella.
n > 1. For example, between ?_?_? and
?_?, higher-order n-grams such as?_? and
?_? still have no match, and will be penal-
ized accordingly, even though ?_?_? and
?_? should match exactly. N-grams such
as ?_? which cross natural word boundaries
and are meaningless by themselves can be par-
ticularly tricky.
2. Character-level metrics can utilize only a small
part of the Chinese synonym dictionary, such as
? and ? (you). The majority of Chinese syn-
onyms involve more than one character, such
as ?? and? (umbrella), and ?? and ??
(child).
In this work, we attempt to address both of these
issues by introducing TESLA-CELAB, a character-
level metric that also models word-level linguistic
phenomenon. We formulate the n-gram matching
process as a real-valued linear programming prob-
lem, which can be solved efficiently. The metric
is based on the TESLA automatic MT evaluation
framework (Liu et al., 2010; Dahlmeier et al., 2011).
3 The Algorithm
3.1 Basic Matching
We illustrate our matching algorithm using the ex-
amples in Figure 1. Let ??? be the reference,
and?? be the candidate translation.
We use Cilin (?????)2 as our synonym
dictionary. The basic n-gram matching problem is
shown in Figure 2. Two n-grams are connected if
they are identical, or if they are identified as syn-
onyms by Cilin. Notice that all n-grams are put in
the same matching problem regardless of n, unlike
in translation evaluation metrics designed for Eu-
ropean languages. This enables us to designate n-
grams with different values of n as synonyms, such
as?? (n = 2) and? (n = 1).
In this example, we are able to make a total of two
successful matches. The recall is therefore 2/6 and
the precision is 2/3.
2http://ir.hit.edu.cn/phpwebsite/index.php?module=pagemaster
&PAGE_user_op=view_page&PAGE_id=162
922
? ? ? ?? ?? ???
? ? ??
Figure 2: The basic n-gram matching problem
? ? ? ?? ?? ???
? ? ??
Figure 3: The n-gram matching problem after phrase
matching
3.2 Phrase Matching
We note in Figure 2 that the trigram??? and the
bigram ?? are still unmatched, even though the
match between?? and? should imply the match
between??? and??.
We infer the matching of such phrases using a
dynamic programming algorithm. Two n-grams are
considered synonyms if they can be segmented into
synonyms that are aligned. With this extension,
we are able to match ??? and ?? (since ?
matches ? and ?? matches ?). The matching
problem is now depicted by Figure 3.
The linear programming problem is mathemati-
cally described as follows. The variables w(?, ?) are
the weights assigned to the edges,
w(?,?) ? [0, 1]
w(?,?) ? [0, 1]
w(??,?) ? [0, 1]
w(???,??) ? [0, 1]
We require that for any node N , the sum of
weights assigned to edges linking N must not ex-
ceed one.
wref(?) = w(?,?)
wref(?) = w(?,?)
wref(??) = w(??,?)
wref(???) = w(???,??)
?
? ? ??
Figure 4: A covered n-gram matching problem
wcand(?) = w(?,?)
wcand(?) = w(?,?) + w(??,?)
wcand(??) = w(???,??)
where
wref(X) ? [0, 1] ?X
wcand(X) ? [0, 1] ?X
Now we maximize the total match,
w(?,?)+w(?,?)+w(??,?)+w(???,??)
In this example, the best match is 3, resulting in a
recall of 3/6 and a precision of 3/3.
3.3 Covered Matching
In Figure 3, n-grams? and?? in the reference re-
main impossible to match, which implies misguided
penalty for the candidate translation. We observe
that since ??? has been matched, all its sub-n-
grams should be considered matched as well, includ-
ing ? and ??. We call this the covered n-gram
matching rule. This relationship is implicit in the
matching problem for English translation evaluation
metrics where words are well delimited. But with
phrase matching in Chinese, it must be modeled ex-
plicitly.
However, we cannot simply perform covered n-
gram matching as a post processing step. As an ex-
ample, suppose we are matching phrases ?? and
?, as shown in Figure 4. The linear programming
solver may come up with any of the solutions where
w(?,?) + w(??,?) = 1, w(?,?) ? [0, 1],
and w(??,?) ? [0, 1].
To give the maximum coverage for the node ?,
only the solution w(?,?) = 0, w(??,?) = 1 is
accepted. This indicates the need to model covered
923
n-gram matching in the linear programming prob-
lem itself.
We return to the matching of the reference ??
? and the candidate?? in Figure 3. On top of the
w(?) variables already introduced, we add the vari-
ables maximum covering weights c(?). Each c(X)
represents the maximum w(Y ) variable where n-
gram Y completely covers n-gram X .
cref(?) ? max(wref(?), wref(??),
wref(???))
cref(?) ? max(wref(?), wref(??),
wref(??), wref(???))
cref(?) ? max(wref(?), wref(??),
wref(???))
cref(??) ? max(wref(??), wref(???))
cref(??) ? max(wref(??), wref(???))
cref(???) ? wref(???)
ccand(?) ? max(wcand(?), wcand(??))
ccand(?) ? max(wcand(?), wcand(??))
ccand(??) ? wcand(??)
where
cref(X) ? [0, 1] ?X
ccand(X) ? [0, 1] ?X
However, the max(?) operator is not allowed in
the linear programming formulation. We get around
this by approximating max(?) with the sum instead.
Hence,
cref(?) ? wref(?) + wref(??)+
wref(???)
cref(?) ? wref(?) + wref(??)+
wref(??) + wref(???)
. . .
We justify this approximation by the following
observation. Consider the sub-problem consisting
of just the w(?, ?), wref(?), wcand(?) variables and
their associated constraints. This sub-problem can
be seen as a maximum flow problem where all con-
stants are integers, hence there exists an optimal so-
lution where each of the w variables is assigned a
value of either 0 or 1. For such a solution, the
max and the sum forms are equivalent, since the
cref(?) and ccand(?) variables are also constrained to
the range [0, 1].
The maximum flow equivalence breaks down
when the c(?) variables are introduced, so in the gen-
eral case, replacing max with sum is only an approx-
imation.
Returning to our sample problem, the linear pro-
gramming solver simply needs to assign:
w(???,??) = 1
wref(???) = 1
wcand(??) = 1
Consequently, due to the maximum covering
weights constraint, we can give the following value
assignment, implying that all n-grams have been
matched.
cref(X) = 1 ?X
ccand(X) = 1 ?X
3.4 The Objective Function
We now define our objective function in terms of
the c(?) variables. The recall is a function of
?
X cref(X), and the precision is a function of?
Y ccand(Y ), where X is the set of all n-grams of
the reference, and Y is the set of all n-grams of the
candidate translation.
Many prior translation evaluation metrics such as
MAXSIM (Chan and Ng, 2008) and TESLA (Liu
et al., 2010; Dahlmeier et al., 2011) use the F-0.8
measure as the final score:
F0.8 =
Precision? Recall
0.8? Precision + 0.2? Recall
Under some simplifying assumptions ? specifi-
cally, that precision = recall ? basic calculus shows
that F0.8 is four times as sensitive to recall than to
precision. Following the same reasoning, we want
to place more emphasis on recall than on precision.
We are also constrained by the linear programming
framework, hence we set the objective function as
1
Z
(
?
X
cref(X) + f
?
Y
ccand(Y )
)
0 < f < 1
924
We set f = 0.25 so that our objective function
is also four times as sensitive to recall than to pre-
cision.3 The value of this objective function is our
TESLA-CELAB score. Similar to the other TESLA
metrics, when there are N multiple references, we
match the candidate translation against each of them
and use the average of the N objective function val-
ues as the segment level score. System level score is
the average of all the segment level scores.
Z is a normalizing constant to scale the metric to
the range [0, 1], chosen so that when all the c(?) vari-
ables have the value of one, our metric score attains
the value of one.
4 Experiments
In this section, we test the effectiveness of TESLA-
CELAB on some real-world English-Chinese trans-
lation tasks.
4.1 IWSLT 2008 English-Chinese CT
The test set of the IWSLT 2008 (Paul, 2008)
English-Chinese ASR challenge task (CT) consists
of 300 sentences of spoken language text. The av-
erage English source sentence is 5.8 words long and
the average Chinese reference translation is 9.2 char-
acters long. The domain is travel expressions.
The test set was translated by seven MT systems,
and each translation has been manually judged for
adequacy and fluency. Adequacy measures whether
the translation conveys the correct meaning, even if
the translation is not fully fluent, whereas fluency
measures whether a translation is fluent, regardless
of whether the meaning is correct. Due to high
evaluation costs, adequacy and fluency assessments
were limited to the translation outputs of four sys-
tems. In addition, the translation outputs of the MT
systems are also manually ranked according to their
translation quality.
Inter-judge agreement is measured by the Kappa
coefficient, defined as:
Kappa =
P (A)? P (E)
1? P (E)
where P (A) is the percentage of agreement, and
P (E) is the percentage of agreement by pure
3Our empirical experiments suggest that the correlations do
plateau near this value. For simplicity, we choose not to tune f
on the training data.
Judgment Set 2 3
1 0.4406 0.4355
2 - 0.4134
Table 1: Inter-judge Kappa for the NIST 2008 English-
Chinese task
chance. The inter-judge Kappa is 0.41 for fluency,
0.40 for adequacy, and 0.57 for ranking. Kappa val-
ues between 0.4 and 0.6 are considered moderate,
and the numbers are in line with other comparable
experiments.
4.2 NIST 2008 English-Chinese MT Task
The NIST 2008 English-Chinese MT task consists
of 127 documents with 1,830 segments, each with
four reference translations and eleven automatic
MT system translations. The data is available as
LDC2010T01 from the Linguistic Data Consortiuim
(LDC). The domain is newswire texts. The average
English source sentence is 21.5 words long and the
average Chinese reference translation is 43.2 char-
acters long.
Since no manual evaluation is given for the data
set, we recruited twelve bilingual judges to evalu-
ate the first thirty documents for adequacy and flu-
ency (355 segments for a total of 355? 11 = 3, 905
translated segments). The final score of a sentence
is the average of its adequacy and fluency scores.
Each judge works on one quarter of the sentences so
that each translation is judged by three judges. The
judgments are concatenated to form three full sets of
judgments.
We ignore judgments where two sentences are
equal in quality, so that there are only two possible
outcomes (X is better than Y; or Y is better than X),
and P (E) = 1/2. The Kappa values are shown in
Table 1. The values indicate moderate agreement,
and are in line with other comparable experiments.
4.3 Baseline Metrics
4.3.1 BLEU
Although word-level BLEU has often been found
inferior to the new-generation metrics when the
target language is English or other European lan-
guages, prior research has shown that character-level
BLEU is highly competitive when the target lan-
guage is Chinese (Li et al., 2011). Therefore, we
925
Segment Pearson Spearman rank
Metric Type consistency correlation correlation
BLEU character-level 0.7004 0.9130 0.9643
TESLA-M word-level 0.6771 0.9167 0.8929
TESLA-CELAB? character-level 0.7018 0.9229 0.9643
TESLA-CELAB hybrid 0.7281? 0.9490?? 0.9643
Table 2: Correlation with human judgment on the IWSLT 2008 English-Chinese challenge task. * denotes better than
the BLEU baseline at 5% significance level. ** denotes better than the BLEU baseline at 1% significance level.
Segment Pearson Spearman rank
Metric Type consistency correlation correlation
BLEU character-level 0.7091 0.8429 0.7818
TESLA-M word-level 0.6969 0.8301 0.8091
TESLA-CELAB? character-level 0.7158 0.8514 0.8227
TESLA-CELAB hybrid 0.7162 0.8923?? 0.8909??
Table 3: Correlation with human judgment on the NIST 2008 English-Chinese MT task. ** denotes better than the
BLEU baseline at 1% significance level.
use character-level BLEU as our main baseline.
The correlations of character-level BLEU and the
average human judgments are shown in the first row
of Tables 2 and 3 for the IWSLT and the NIST
data set, respectively. Segment-level consistency is
defined as the number of correctly predicted pair-
wise rankings divided by the total number of pair-
wise rankings. Ties are excluded from the calcu-
lation. We also report the Pearson correlation and
the Spearman rank correlation of the system-level
scores. Note that in the IWSLT data set, the Spear-
man rank correlation is highly unstable due to the
small number of participating systems.
4.3.2 TESLA-M
In addition to character-level BLEU, we also
present the correlations for the word-level metric
TESLA. Compared to BLEU, TESLA allows more
sophisticated weighting of n-grams and measures of
word similarity including synonym relations. It has
been shown to give better correlations than BLEU
for many European languages including English
(Callison-Burch et al., 2011). However, its use of
POS tags and synonym dictionaries prevents its use
at the character-level. We use TESLA as a represen-
tative of a competitive word-level metric.
We use the Stanford Chinese word segmenter
(Tseng et al., 2005) and POS tagger (Toutanova et
al., 2003) for preprocessing and Cilin for synonym
definition during matching. TESLA has several vari-
ants, and the simplest and often the most robust,
TESLA-M, is used in this work. The various cor-
relations are reported in the second row of Tables 2
and 3.
The scores show that word-level TESLA-M has
no clear advantage over character-level BLEU, de-
spite its use of linguistic features. We consider this
conclusion to be in line with that of Li et al. (2011).
4.4 TESLA-CELAB
In all our experiments here we use TESLA-CELAB
with n-grams for n up to four, since the vast majority
of Chinese words, and therefore synonyms, are at
most four characters long.
The correlations between the TESLA-CELAB
scores and human judgments are shown in the last
row of Tables 2 and 3. We conducted significance
testing using the resampling method of (Koehn,
2004). Entries that outperform the BLEU base-
line at 5% significance level are marked with ?*?,
and those that outperform at the 1% significance
level are marked with ?**?. The results indicate that
TESLA-CELAB significantly outperforms BLEU.
For comparison, we also run TESLA-CELAB
without the use of the Cilin dictionary, reported
in the third row of Tables 2 and 3 and de-
noted as TESLA-CELAB?. This disables TESLA-
926
CELAB?s ability to detect word-level synonyms and
turns TESLA-CELAB into a linear programming
based character-level metric. The performance of
TESLA-CELAB? is comparable to the character-
level BLEU baseline.
Note that
? TESLA-M can process word-level synonyms,
but does not award character-level matches.
? TESLA-CELAB? and character-level BLEU
award character-level matches, but do not con-
sider word-level synonyms.
? TESLA-CELAB can process word-level syn-
onyms and can award character-level matches.
Therefore, the difference between TESLA-M
and TESLA-CELAB highlights the contribution
of character-level matching, and the difference
between TESLA-CELAB? and TESLA-CELAB
highlights the contribution of word-level synonyms.
4.5 Sample Sentences
Some sample sentences taken from the IWSLT test
set are shown in Table 4 (some are simplified from
the original). The Cilin dictionary correctly identi-
fied the following as synonyms:
? = ?? week
?? = ?? daughter
? = ? you
?? = ?? work
The dictionary fails to recognize the following
synonyms:
?? = ? a
?? = ?? here
However, partial awards are still given for the
matching characters? and?.
Based on these synonyms, TESLA-CELAB is
able to award less trivial n-gram matches, such as?
?=???, ???=???, and ???=???,
as these pairs can all be segmented into aligned syn-
onyms. The covered n-gram matching rule is then
able to award tricky n-grams such as??,??,?
?, ?? and ??, which are covered by ???,
???,???,??? and??? respectively.
Note also that the word segmentations shown in
these examples are for clarity only. The TESLA-
CELAB algorithm does not need pre-segmented
Reference: ? ? ?
next week .
Candidate: ? ?? ?
next week .
Reference: ? ? ?? ?? ?
I have a daughter .
Candidate: ? ? ? ?? ?
I have a daughter .
Reference: ? ? ?? ?? ? ?
you at here work qn ?
Candidate: ? ? ?? ?? ? ?
you at here work qn ?
Table 4: Sample sentences from the IWSLT 2008 test set
Schirm kaufen
umbrella buy
Regenschirm kaufen
umbrella buy
Regen schirm kaufen
rain umbrella buy
Figure 5: Three forms of buy umbrella in German
sentences, and essentially finds multi-character syn-
onyms opportunistically.
5 Discussion and Future Work
5.1 Other Languages with Ambiguous Word
Boundaries
Although our experiments here are limited to Chi-
nese, many other languages have similarly ambigu-
ous word boundaries. For example, in German, the
exact counterpart to our example exists, as depicted
in Figure 5.
Regenschirm, literally rain-umbrella, is a syn-
onym of Schirm. The first two forms in Figure 5
appear in natural text, and in standard BLEU, they
would be penalized for the non-matching words
Schirm and Regenschirm. Since compound nouns
such as Regenschirm are very common in German
and generate many out-of-vocabulary words, a com-
mon preprocessing step in German translation (and
translation evaluation to a lesser extent) is to split
compound words, and we end up with the last form
Regen schirm kaufen. This process is analogous to
927
Chinese word segmentation.
We plan to conduct experiments on German and
other Asian languages with the same linguistic phe-
nomenon in future work.
5.2 Fractional Similarity Measures
In the current formulation of TESLA-CELAB, two
n-grams X and Y are either synonyms which com-
pletely match each other, or are completely unre-
lated. In contrast, the linear-programming based
TESLA metric allows fractional similarity measures
between 0 (completely unrelated) and 1 (exact syn-
onyms). We can then award partial scores for related
words, such as those identified as such by WordNet
or those with the same POS tags.
Supporting fractional similarity measures is non-
trivial in the TESLA-CELAB framework. We plan
to address this in future work.
5.3 Fractional Weights for N-grams
The TESLA-M metric allows each n-gram to have
a weight, which is primarily used to discount func-
tion words. TESLA-CELAB can support fractional
weights for n-grams as well by the following exten-
sion. We introduce a function m(X) that assigns a
weight in [0, 1] for each n-gram X. Accordingly, our
objective function is replaced by:
1
Z
(
?
X
m(X)cref(X) + f
?
Y
m(Y )ccand(Y )
)
where Z is a normalizing constant so that the metric
has a range of [0, 1].
Z =
?
X
m(X) + f
?
Y
m(Y )
However, experiments with different weight func-
tions m(?) on the test data set failed to find a better
weight function than the currently implied m(?) =
1. This is probably due to the linguistic character-
istics of Chinese, where human judges apparently
give equal importance to function words and con-
tent words. In contrast, TESLA-M found discount-
ing function words very effective for English and
other European languages such as German. We plan
to investigate this in the context of non-Chinese lan-
guages.
6 Conclusion
In this work, we devise a new MT evaluation met-
ric in the family of TESLA (Translation Evaluation
of Sentences with Linear-programming-based Anal-
ysis), called TESLA-CELAB (Character-level Eval-
uation for Languages with Ambiguous word Bound-
aries), to address the problem of fuzzy word bound-
aries in the Chinese language, although neither the
phenomenon nor the method is unique to Chinese.
Our metric combines the advantages of character-
level and word-level metrics:
1. TESLA-CELAB is able to award scores for
partial word-level matches.
2. TESLA-CELAB does not have a segmentation
step, hence it will not introduce word segmen-
tation errors.
3. TESLA-CELAB is able to take full advantage
of the synonym dictionary, even when the syn-
onyms differ in the number of characters.
We show empirically that TESLA-CELAB
significantly outperforms the strong baseline
of character-level BLEU in two well known
English-Chinese MT evaluation data sets. The
source code of TESLA-CELAB is available from
http://nlp.comp.nus.edu.sg/software/.
Acknowledgments
This research is supported by the Singapore Na-
tional Research Foundation under its International
Research Centre @ Singapore Funding Initiative
and administered by the IDM Programme Office.
References
