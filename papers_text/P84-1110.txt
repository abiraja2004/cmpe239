SEMANIIC PARSING AS GRAPH LANGUAGE TRANSFORMATION - 
A MULIIDIMENSIONAL APPROACH TO PARSING HIGHLY INFLECTIONAL LANGUAGES 
Eero Hyv~nen 
He\]sJnkJ I Jn ivers i ty  of TechnoloQy 
D ia J ta l  SysLems Laboratory 
OtakaarJ 5A 
n215n Espoo 15 
FINLAND 
ABSTRACT 
The structure of many languages with 
"free" word order and rich morphology l ike 
Finnish is rather configurational than 
l inear.  Although non-linear structures 
can be represented by l inear formalisms i t  
is often more natural to study 
multidimensional arrangement of symbols. 
Graph grammars are a multidimensional 
generalization of l inear string grammars. 
In graph grammars string rewrite rules are 
generalized into graph rewrite rules. 
This paper  presents a graph grammar 
formalism and parsing scheme for parsing 
languages with inherent configurational 
f lavor.  A small experimental Finnish 
parsing system has been implemented 
(Hyv6nen 1983). 
A SIMPLE GRAPH GRAMMAR FORMALISM 
WITH A CONTROL FACILITY 
In applying string grammars to parsing 
natural Finnish several problems arise in 
representing complex word  structures, 
argeements, "free" word ordering, 
d iscont inuity,  and intermediate depencies 
between morphology, syntax and semantics. 
A strong, multidimensional formalism that 
can cope with d i f ferent  levels of language 
seems necessary. In this chapter a graph 
grammar formalism based on the notions of 
relat ional  graph grammars (Rajl ich 1975) 
and attr ibuted programmed graph grammars 
(Bunke 1982) is developed for parsing 
languages with configurational structure. 
Def in i t ion 1.1 (relat ional  graph, r-graph) 
Let ARCS, NODES, and PROPS be f in i te  sets 
of symbols. A relat ional  graph (r-graph) 
RG is pair RG = (EDGES, NP) consisting of 
a set of edges 
EDGES, ARCSxNODESxNODES 
and a function liP that associates each 
node in EDGES to a set of labeled 
property values: 
tJP: NODESxPROPS -> PVALUES 
PVALUES is the set of possible node 
property values. They are represented as 
sets of symbols or l i s t s .  
Example: Figure I .1 depicts the 
morphological r-graph representation of 
Finnish word "ihmisten" (the humans') and 
i ts  edges as a l i s t .  EXT-property 
expresses the set of symbols the node 
currently refers to (extension); CAT 
te l l s  the syntactico-semantic category of 
the node. 
C~L~? NR \[XT.(PL) 
\[XT- {IHNINEN) 
CAT- (SUBST- I HHINEN) 
((NOUN N1 N2) 
(C#3E NI N3) 
(NR Nl N4) 
(PERS Nl N5) 
(PS Nl N6) 
(EP Nl N7)) 
Fig. 1.1. Morphological r-graph 
representation of word "ihmisten" (the 
humans). 
Def in i t ion 1.2 (r-production) 
An r-production RP is a pair: 
RP = (LS, RS) 
LS ( le f t  side) and RS ( r ight  side) are 
r-graphs. An RP is said to be applicable 
to an r-graph G i f f  EDGES~EDGES G and the 
values in N~sare subsets 6f corresponding 
values in NPofor each node in LS. 
Def in i t ion 1.3 (direct r -der ivat ion) 
The direct r -der ivat ion of r-graph H from 
r-graph G via an r-production RP = (LS, 
RS) is defined by the following algorithm: 
Algorithm 1.1 (Direct r -der ivat ion) 
Input: An r-graph G and 
an r-production RP = (LS, RS) 
Output: An r-graph H derived via RP 
from G 
517 
PROCEDURE Di rect-r-deri vation :
BEGIN 
IF RP is applicable to G (see text) 
THEN 
EDGES G := EDGES G - EDGESLs 
H :=GURS 
RETURN H 
ELSE 
RETURN "Not applicable" 
END 
Here U is an operation defined for two 
r-graphs RGI and RG2 as follows: 
H = RGI I~ RG2 
i f f  
EDGES H = EDGESRG 1 U EDGESRG 2 and 
NPw(ni, propj) = NPDr.~(ni, propj) for any 
priJperty propj in every node ni in RG2. 
Time complexity: Direct r -der ivat ions are 
essential ly set operations and can be 
performed e f f i c ient ly .  By using a hash 
table the expected time complexity is O(n) 
with respect to the size of the production 
( i t  does not depend on the size of the 
object graph). The worst case complexity 
is O(n**2). 
Example: Figure 1.2 represents an 
r-production and f igure 1.3 i ts  
application to an r-graph. We have 
designed a meta-production description 
fac i l i ty  for r-productions by which 
match-predicates can be attached to nodes 
and arcs in order to test and modify node 
properies. The instant iat ion of a 
meta-production is found 
context-dependently while matching the 
production le f t  side. I t  is also possible 
to specify some special modifications to 
the derivation graph by meta-productions. 
) 
Fig. 1.2. Production ADJ-ATTR 
ident i fy  adjective attr ibutes.  
to 
Def in i t ion 1.4 (r-graph gralnmar and 
r-graph language) 
An r-graph grammar (RGG) is a pair: 
RGG = (PROD, START) 
PROD is a set of r-productions and START 
is a set of r-graphs. 
An r-graph language (RGL) generated by an 
r-graph grammar is the set of a l l  
derivable r-graphs f rom any r-graph in 
START by any sequence of applicable 
r-productions of PROD: 
RGL ={R-graphISTART =,~R-graph! 
EXT-fPL) EXT-{~ PL) 
? ~T~U~T I F CM.ANECilVE CM-IIOUtt-ABST 
EXT=(eO~-ALL) EXT.{BIG) \[XT=(PRCG. 
AFTER: 
(Node properties as above) 
Fig. 1.3. The effect of applying 
production ADJ-ATTK ( f ig .  1.2) to an 
r-graph. 
Def in i t ion 1.5 (control led r-graph 
grammar) 
A controlled r-graph grammar (CRG) is a 
pair: 
CRG = (CG, RGG) 
CG is an r-graph called control graph 
(c-graph). I ts  interpretat ion is defined 
very much in the same way as with 
ATN-networks. The actions associated to 
arcs are direct r -derivat ions (def. 1.3). 
RGG is an r-graph grammar (def. 1.4). 
Example: Figure 1.4 i l l us t ra tes  a c-graph 
expressing potential at t r ibute 
configurations of nouns belonging to 
category !JOUN-HUMAN. Adjective, pronoun 
and genetive attr ibutes and a quant i f ier  
may be ident i f ied  hy corresponding 
r-productions (the meaning of (READWORD)- 
and (PUT-LAST)-arcs is not relevant here). 
518 
PRON-ATTR 
ADJ-ATTR ADJ-ATTR 
Fig. 1.4. A control graph expressing 
attr ibute configurations of 
syntactico-semantic word  category 
NOUN-HUHAN. 
Def in i t ion 1.6 (Controlled graph language) 
A controlled graph  language (CGL) 
corresponding to a controlled r-graph 
grammar CRG = (CG, RGG) is the set of 
r-graphs derived by the CG using the start 
graphs START and the productions of the 
grammar RGG. 
2 A GRAPH GRAIItIAR PARSING SCHEME 
2.1 Function and structure 
Figure 2.1 depicts a RGG-based parsing 
scheme that we have applied to natural 
language parsing. Roughly spoken, the 
input of the parser, i .e .  the set START 
of a CRG, is the morphological 
representation(s) of a sentence. The 
output is a set of corresponding semantic 
deep case representations. Parsing is 
~een as a multidimensional transformation 
between the morphological and semantic 
levels of a language. These levels are 
seen as graph languages. The parser 
essential ly defines a "meaning preserving" 
mapping from the morphological 
representations of a sentence into i ts  
semantic representations. The 
transformation is specified by a 
controlled r-graph grammar. The control 
graph is not predefined but is constructed 
dynamically according to the individual 
words of the current sentence. During 
parsing morphological and semantic 
representations are generated in paral lel  
as words are read from le f t  to r ight .  
2.2 Specification of the morphological 
and semantic graph languages 
Morphological level .  The morphological 
representation of a sentence consists of 
s tar - l ike  morphological representations of 
the words ( f ig .  1.1) that are glued 
togetiler by sequential >- and <-relations 
( f ig .  1.3). 
Semantic level.  The semantic 
representatien of a sentence consists of a 
semantic deop case structure corresponding 
tc Lhe main verb. Deep case constituents 
have their  own semantic case structures 
corresponding to their  main words. 
SOURCE GRAPH LANGUAG? 
MORPHOLOGY 
Control led r-nraph c-~M 
INTERPRE~R g ramma r
(CRG', / 
i 
GOAL GRAPH LANGUAGE 
/3  
SEtIANTI CS 
\ 
PRODUCTIONS j 
Fig. 2.1. A parsing scheme for transforming 
graph languages. 
Example: Figure 2.2 i l l us t ra tes  the 
semantic representation of question " Kuka 
luennoits i ja on luennoinut jonkun 
seminaarimaisen kurssin 
t ieto jenk~si t te lyteor iasta yksyll~ 1981" 
("Which lecturer has lectured some 
seminar-type course on computer science in 
the autumn 1981"). 
MAZN 
Fig. 2.2. Semantic graph representation of 
a Finnish question. Node properties 
are not shown. 
2.3 Specification of the graph language 
transformation 
The transformation is specified by an 
agenda of p r io r i t i zed  c-graphs. 
In i t ia l l y ,  the agenda consists of a set of 
sentence independent "transformational" 
c-graphs (that,  for example, transform 
passive clauses into active ones) and 
519 
sentence dependent c-graphs corresponding 
to the syntactico-semantic categories of 
the individual words in the sentence. For 
example, the c-graph of f ig .  1.4 
corresponds to nouns belonging to category 
NOUN-HUMAN. I t  t r ies  to ident i fy  semantic 
case constituents by the productions 
corresponding to the arcs. Fig. 1.2 
i l l us t ra tes  the production ADJ-ATTR 
(adjective at t r ibute)  used in the c-graph 
of f ig .  1.4. The interpretat ion of the 
production is: I f  there is an adjective 
preceeding a noun in the same case and 
number the words are in semantic KIND 
relat ion with each other. As a whole, the 
agenda constitutes a modular, sentence 
dependent c-graph. 
Parsing is performed by interpret ing the 
agenda. Di f ferent strategies could be 
applied here; the structure of the 
c-graphs depend on the choice. In our 
experimental system parsing is performed 
by interpret ing the f i r s t  c-graph in the 
agenda. The c-graohs are defined in such 
way that they interpret each other and glue 
morphological representations of words 
into the derivation graph (arcs (READWORD) 
and (PUTLAST) in f ig .  1.4) unt i l  a 
grammatical semantic representation (or in 
ambiguous cases several ones) is reached. 
2.4 L inguist ic  and computational 
motivations 
Most in f luent ia l  l i ngu is t i c  theories and 
ideas behind our parser are dependence 
grammar, semantic case grammar, and the 
notion of "word expert" parsing. The idea 
is that the c-graphs of word categories 
act ively try to f ind the dependents of the 
main words and ident i fy  in what semantic 
roles they are (cf .  the 
ADJ-ATTR-production of f ig .  1.2). In 
some cases i t  i t  useful to assign active 
role to dependents. The c-graphs serve as 
i l l us t ra t ive  l ingu is t i c  descriptions of 
the syntactico-semantic features of word 
categories and other fenomena. 
Computationally, our formalism and parsing 
scheme gives high expressive power but i ts  
time complexity is not high. Only 
potent ia l ly  relevant productions are tr ied 
to use during parsing. Graphs are 
i l l us t ra t ive  and can be used to express 
both procedural and declarative knowledge. 
New word category models can be added to 
the parser rather independently f rom the 
other models. 
Our small experimental g raph  grammar 
parser for Finnish (Hyv6nen 1983) is s t i l l  
l i gu i s t i ca l l y  quite naive containing some 
150 lexical  entries, 50 productions, and 
50 c-graphs. A larqer subset of Finnish 
needs to be modelled in order to evaluate 
the approach properly. We are currently 
developing the graph grammar approch 
further by generalizing the formalism into 
hierarchic graphs. By this  way,  for 
example, large graph structures could be 
manipulated more easily as single ent i t ies  
and identical structures could have 
d i f ferent  interpretat ions in d i f ferent  
contexts. Also, a more  elaborate 
coroutine based control structure for 
interpret ing the c-graphs is under 
developement. We feel that the idea of 
seeing parsing as a multidimensional 
transformation of re lat ional  graphs in 
stead of as a del inear izat ion process of a 
string into a parse tree is worth 
invest icat ing further .  
3 ACKNOWLEDGEMENTS 
Thanks are due to Rauno Heinonen, Harri 
J~ppinen, Leo Ojala, Jouko Sepp~nen and 
the personnel of Dig i ta l  Systems 
Laboratory for f ru i t fu l  discussions. 
Finnish Academy, Finnish Cultural 
Foundation, Siemens Foundation, and 
Technical Foundation of Finland have 
supported our work f inanc ia l l y .  
4 REFERENCES 
Bunke H. (1982): Attr ibuted graph 
grammars and their  application to 
schematic diagram interpretat ion.  IEEE 
Trans. of pattern analysis and machine 
inte l l igence,  No 6, pp. 574-582. 
Hyv~nen E. (1983): Graph  grammar 
approach to natural language parsing and 
understanding. Proceedings of IJCAI-83, 
Karlsruhe. 
Rajlich V. (1975): Dynamics of discrete 
structures and pattern reproduction. 
Journal of computer and system sciences, 
No 11, pp. 186-202. 
520 
