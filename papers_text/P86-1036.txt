A Terminological Simplification Transformation for 
Natural Language Question-Answering Systems 
David G. Stallard 
BBN Laboratories Inc. 
I0 Moulton St. 
Cambridge, MA. 
02238 
Abstract 
A new method is p resented  for s impl i fy ing the  log ica l  
express ions  used to represent  u t te rance  meaning in a 
natura l  l anguage system. 1 This s impl i f i cat ion  method 
ut i l i zes  the encoded knowledge and the l imited 
in fe rence-mak ing  capab i l i ty  of a taxonomic  knowledge 
representat ion  system to reduce  the const i tuent  
s t ruc ture  of log ica l  express ions .  The speci f ic  
app l i ca t ion  is to the  problem of mapping express ions  of 
the  meaning representat ion  language to a database  
language capab le  of re t r iev ing  ac tua l  responses .  
Par t i cu la r  account  is taken  of the  mode l - theoret i c  
aspects  of th is  problem. 
1. Introduction 
A common and usefu l  s t ra tegy  for const ruct ing  
natura l  l anguage in ter face  sys tems is to divide the  
process ing  of an u t te rance  into two major s tages :  the  
f i rs t  mapping the u t te rance  to a log ica l  express ion  
represent ing  i ts  "meaning" and the  second produc ing  
from th is  log ica l  express ion  the  appropr ia te  response .  
The second s tage  is not  neccesar i l y  t r iv ia l :  the  
d i f f icu l ty  of i ts  des ign  is s ign i f igant ly  a f fected by the  
complex i ty  and genera lness  of the  log ica l  express ions  it  
has  to deal  with. If th is  i ssue  is not  faced square ly ,  i t  
may af fect  cho ices  made e l sewhere  in the  system. 
Indeed, a need to res t r i c t  the  form of the  meaning 
representat ion  can be at odds with par t i cu la r  
approaches  towards  produc ing  it - as for example the  
"compos i t iona l "  approach ,  which does not  seek  to 
cont ro l  express ion  complex i ty  by giving in terpreta t ions  
for whole phrasa l  pat terns ,  but  s imply combines 
together  the meaning of ind iv idual  words in a manner  
appropr ia te  to the  syntax  of the  u t te rance .  Such a 
conf l ic t  is cer ta in ly  not  des i rab le :  we want  to have 
freedom of l ingu is t i c  ac t ion  as well as to be able to 
obta in  cor rec t  responses  to u t te rances .  
This paper  t reats  in deta i l  the  par t i cu la r  
man i fes ta t ion  of these  i ssues  for natura l - language 
systems which serve  as in ter faces  to a database :  the  
prob lems that  a r i se  in a module which maps the 
meaning representat ion  to a second log ica l  l anguage 
for express ing  ac tua l  database  quer ies .  A module 
per forming such a mapping is a component  of such  
quest ion -answer ing  systems as TEAM \[4\], PHLIQA1 \[7\] 
and IRUS \[1\]. As an example of d i f f icu l t ies  which may 
be encountered ,  cons ider  the  quest ion  "Was the 
pat ient ' s  mother  a d iabet ic?"  whose log ica l  
representat ion  must  be mapped onto a par t i cu la r  
boo lean f ield which encodes  for each  pat ient  whether  
or not  th is  complex proper ty  is t rue .  Any var ia t ion  on 
th i s  quest ion  which a compos i t iona l  semant ics  might 
a lso  handle,  such  as "Was d iabetes  a d i sease  the 
pat ient ' s  mother  suf fered from?", would resu l t  in a 
semant ica l ly  equ iva lent  but  very  d i f fe rent - look ing  
logica l  express ion ;  th is  d i f ferent  express ion  would also 
have to be mapped to th is  field. How to deal  with 
these  and many o ther  poss ib le  var iants ,  w i thout  making 
the mapping process  excess ive ly  complex, is c lear ly  a 
problem. 
The so lu t ion  which th is  paper  presents  is a new level  
of p rocess ing ,  in termed ia te  between the o ther  two: a 
novel  s impl i f i cat ion t rans format ion  which is per fo rmed 
on the resu l t  of semant ic  in terpreta t ion  before  the  
a t tempt  is made to map it to the  database .  This 
s impl i f icat ion method re l ies  on knowledge which is 
s to red  in a taxonomic  knowledge representat ion  system 
such  as NIKL \[5\]. The pr inc ip le  beh ind  the method is 
that  an express ion  may be simpl i f ied by t rans la t ing  i ts  
subexpress ions ,  where possible,  into the language of 
NIKL, and c lass i fy ing  the  resu l t  into the  taxonomy to 
obta in  a s impler  equ iva lent  for them. The resu l t  is to 
p roduce  an equ iva lent  but  syntact i ca l l y  s impler  
express ion  in which fewer, but  more speci f ic ,  p roper t ies  
and re la t ions  appear .  The benef i t  is that  deduct ions  
from the express ion  may be more eas i ly  " read  off"; in 
par t i cu la r ,  the  mapping becomes eas ie r  because  the 
proper t ies  and re la t ions  appear ing  are  more l ike ly  to 
be e i ther  those  of the  database  or composab le  from 
them. 
The body of the  paper  is d iv ided into four sect ions .  
In the  f i rst ,  I will summarize some past  t reatments  of 
the  mapping between the meaning representat ion  and 
the query  language,  and show the prob lems they  fail  to 
solve. The second sect ion  prepares  the  way by showing 
how to connect  the  taxonomic  knowledge representat ion  
system to a logica l  l anguage used  for meaning 
representat ion .  The th i rd  sect ion  presents  the  
" recurs ive  te rmino log ica l  s impl i f icat ion"  a lgor i thm itself .  
The las t  sec t ion  descr ibes  the imp lementat ion  s ta tus  
and suggests  d i rec t ions  for in teres t ing  fu ture  work. 
1The work presented here woe supported under DARPA 
controct  #N00014-85-C-0016.  The views ond conclusions 
contoined in th i s  document ore those of the outhor ond 
should not be in terpreted  os necessor i ly  represent ing the 
o f f i c io l  po l i c ies ,  e i ther  expressed or impl ied,  of the 
Defense Advonced Reseorch Pro jec ts  Agency or of the United 
$totes  Government. 
2. A Formal Treatment of the 
Mapping Problem 
This sect ion  d i scusses  some prev ious  work on the 
problem of mapping between the log ica l  l anguage used  
for meaning representat ion  and the log ica l  l anguage in 
which ac tua l  database  quer ies  are expressed .  The 
241 
di f f icu l t ies  which remain  for these  approaches  will be 
po in ted  out. 
A common organ izat ion  for a database  is in te rms of 
tab les  with rows and columns. The s tandard  
fo rmulat ion  of these  ideas  is found in the  re la t iona l  
model of Codd \[3\], in which the  tab les  are  
character i zed  as re la t ions  over se ts  of atomic  data  
values.  The e lements  (rows) of a re la t ion  are  ca l led 
" tuples" ,  while i ts  ind iv idua l  a rgument  p laces  (co lumns)  
are  te rmed i ts  "a t t r ibutes" .  Logical l anguages  for the  
const ruct ion  of quer ies ,  such  as Codd's re la t iona l  
a lgebra ,  must  make re ference  to the  re la t ions  and 
a t t r ibutes  of the  database .  
The f i rs t  i ssue  to be faced in cons iderat ion  of the  
mapping prob lem is what  e lements  of the  database  to 
ident i fy  with the  ob jects  of d i scourse  in the  u t te rance  
- that  is, with the  non- log ica l  constants  2 in the  
meaning representat !on .  In p rev ious  work \[9\] I have 
argued that  these  shou ld  not  be the  rows of the  tab les ,  
as one might f i r s t  th ink ,  but  ra ther  cer ta in  se ts  of the  
atomic a t t r ibute -va lues  themse lves .  I p resented  an 
a lgor i thm which conver ted  express ions  of a p red icate  
ca lcu lus -based  meaning representat ion  language to the  
query  language ERL, a re la t iona l  a lgebra  \[3\] ex tended 
with second-order  operat ions .  The t rans la t ions  of 
non- log ica l  constants  in the  meaning representat ion  
were prov ided  by f ixed and loca l  t rans la t ion  ru les  that  
were s imply ERL express ions  for comput ing  the  to ta l  
ex tens ion  of the  constant  in the  database .  The 
express ions  so der ived  were then  combined together  in 
an appropr ia te  way to yield an express ion  for 
comput ing  the  response  for the  ent i re  meaning 
representat ion  express ion .  If the  a lgor i thm 
encountered  a non- log ica l  constant  for which no 
t rans la t ion  ru le  ex is ted ,  the  t rans la t ion  fa i led and the 
user  was in formed as to why the system could not  
answer  h is  quest ion .  
By way of i l l us t ra t ion ,  cons ider  the  fol lowing 
re la t iona l  database ,  cons is t ing  of c l in ica l  h i s to ry  
in format ion  about  pat ients  at a g iven hosp i ta l  and of 
in fo rmat ion  about  doctors  work ing there :  
PAT I ENTS (PAT I D, SEX. AGE, D I SF-J~SE, PHYS, D I AMOTHER) 
DOCTORS(DOCID ,NAME,SEX.SPECIALTY) 
where "PHYS" is the  ID of the  t reat ing  phys ic ian ,  and 
"DIAMOTHER" is a boo lean  f ield ind icat ing  whether  or 
not  the  pat ient ' s  mother  is d iabet ic .  Here are  the  
ru les  for the  one-p lace  pred icate  PATIENTS, the  one-  
p lace pred icate  SPECIALTIES, and the  two-p lace  
pred icate  TREATING-PHYSICIAN: 
PATIENTS => (PROJECT PATIENTS OVER PATID) 
SPECIALTIES => (PROJECT DOCTORS OVER SPECIALTY) 
TREATING-PHYSICIAN => (PROJECT (JOIN PATIENTS 
TO DOCTORS 
OVER PHYS DOCID) 
OVER PATID DOCID) 
Note that  whi le no tab le  ex is ts  for phys ic ian  
SPECIALTIES, we can  nonethe less  give a ru le  for th i s  
p red icate  in way that  is uni form with the  ru le  given for 
the  pred icate  PATIENTS. 
2This term, while a standard one in formal logic,  may be 
confused with other uses of the word "constant".  I t  simply 
refers to the funct ion,  predicate and ordinary constant 
symbols, such as "MOTHER" or "JOHN". whose denotations 
depend on the in terpreta t ion  of the language, as opposed to 
f ixed symbols l ike "FORALL',"AND", "TRUE". 
One advantage  of such loca l  t rans la t ion  ru les  is the i r  
s impl ic i ty .  Another  advantage  is that  they  enable  us to 
t reat  database  quest ion -answer ing  mode l - theoret i ca l l y .  
The set - theoret i c  s t ruc ture  of the  model is that  which 
would be obta ined  by generat ing  from the  re la t ions  of 
the  database  the much la rger  set  of "v i r tua l "  re la t ions  
that  are  express ib le  as formulas  of ERL. The 
in terpreta t ion  funct ion  of the  model is jus t  the 
t rans la t ion  funct ion  itself .  Note that  it is a partial 
funct ion  because  of the  fact  that  some non- log ica l  
constants  may not  have t rans la t ions .  We speak  
there fore  of the  database  const i tu t ing  a "par t ia l l y  
spec i f ied  model" for the  meaning representat ion  
language.  Computat ion  of a response  to a user ' s  
request ,  ins tead  of be ing character i zab le  only as a 
procedura l  operat ion ,  becomes in terpreta t ion  in such a 
model. 
A s imi lar  mode l - theoret i c  approach  is advocated  in 
the  work  on PHLIQA1 \[8\], in which a number  of 
d i f f i cu l t ies  in wr i t ing loca l  ru les  a re  ident i f ied  and 
overcome.  One c lass  of techn iques  presented  there  
al lows for  qu i te  complex and genera l  express ions  to 
resu l t  from local  ru le  app l i ca t ion ,  to which a post -  
t rans la t ion  s impl i f i cat ion  process  is appl ied.  Other 
spec ia l -purpose  techn iques  are  also presented ,  such as 
the  c reat ion  of "prox ies"  to s tand  in for e lements  of a 
se t  for which  only the  card ina l i ty  is known. 
A more d i f f icu l t  problem, for which these  techn iques  
do not  prov ide  a genera l  t reatment ,  a r i ses  when we 
want  to get  at  in fo rmat ion  cor respond ing  to a complex 
proper ty  whose component  proper t ies  and re la t ions  a re  
not  themse lves  tored.  For example,  suppose  the query  
"List pat ients  whose mother  was a d iabet ic" ,  is 
represented  by the  meaning representat ion :  
(d isp lay t ( ss to f  X:PAT IENT 
( fora l  l Y:PERSON (->(MOTHER X Y) 
(DIABETIC Y))))) 
The in fo rmat ion  to compute  the  answer  may be found in 
the  f ie ld DIAMOTHER above. It is very  hard  to" see how 
we will use  local  ru les  to get  to it, however ,  s ince 
noth ing  const ructab le  from the database  cor responds  
to the  non- log ica l  constants  MOTHER and DIABETIC. 
The prob lem is that  the  database  chooses  to h igh l ight  
the  complex proper ty  DIAMOTHER whi le avo id ing the 
cos t  of s to r ing  i ts  const i tuent  p red icates  MOTHER and 
DIABETIC - the  conceptua l  un i t s  cor respond ing  to the  
words  of the  u t te rance .  
One way to get  a round these  d i f f i cu l t ies  is of course  
to al low for a more genera l  k ind  of, t rans format ion :  a
"g lobal  ru le"  which would match  aga ins t  a whole 
syntact i c  pat tern  l ike the  un ivera l ly  quant i f ied  sub-  
express ion  above. The d i sadvantage  of this ,  as is 
po in ted  out  in \[8\], is that  the  r i chness  of both  natura l  
l anguage and logic al lows the  same meaning to be 
expressed  in many d i f fe rent  ways, which a complete 
"g loba l  ru le"  would have to match.  S t r i c t ly  syntact i c  
var ia t ion  is poss ib le:  p ieces  of the  pat tern  may be 
spread  out  over the  express ion ,  from which the  pat tern  
match  would have to grab  them. Equ iva lent  
fo rmulat ions  of the  query  may also use  complete ly  
d i f fe rent  terms.  For example,  the  user  might have 
employed the  equ iva lent  phrase  "female parent"  in 
p lace  of the  word "mother" ,  p resumably  caus ing  the 
semant ic  in terpreta t ion  to y ie ld a log ica l  form with the  
d i f fe rent  p red icates  "PARENT" and "FEMALE". This 
would not  match the pat tern .  It becomes c lear  that  
the  "pat tern -match ing"  to be per fo rmed here  is not  
the  l i te ra l  kind, and that  it invo lves  unspec i f ied  and 
arb i t ra ry  amounts  of in ference .  
The a l te rnat ive  approach  presented  by th i s  paper  
242 
takes explicit account of the fact that certain 
properties and relations, l ike "DIAMOTHER", can be 
regarded as built up from others. In the next section 
we will show how the properties and relations whose 
extensions the database stores can be axiomatized in 
terms of the ones that are more basic in the 
application domain. This prepares the way  for the 
simplification transformation itself, which will rely on a 
limited and sound form of inference to reverse the 
axiomatization and transform the meaning 
representation, where possible, to an expression that 
uses only these database properties and relations. In 
this way, the local rule paradigm can be substantially 
restored. 
3. Knowledge Representation and 
Question-Answering 
The purpose  of th is  sec t ion  of the  paper  is to p resent  
a way of connect ing  the  meaning representat ion  
language to a taxonomic  knowledge representat ion  
system in such  a way that  the  in fe rence-mak ing  
capab i l i ty  of the  la t te r  is ava i lab le  and usefu l  for the  
prob lems th is  paper  addresses .  Our approach  may be 
const ras ted  with that  of o thers ,  e.g. TEAM in which 
such  a taxonomy is used  mainly  for s imple inher i tance  
and a t tachment  dut ies .  
The knowledge representation system used in this 
work  is NIKL \[5\]. Since NIKL has been described rather 
fully in the references, I will give only a brief summary  
here. 
NIKL is a taxonomic frame-like system with two basic 
data structures: concepts and roles. Concepts are just 
classes of entities, for which roles function somewhat  
as attributes. At any given concept we can restrict a 
role to be filled by some other concept, or place a 
restriction on the number  of individual "fillers" of the 
role there. A role has one concept as its "domain" and 
another as its "range": the role is a relation between 
the sets these two concepts denote. Concepts are 
arranged in a hierarchy of sub-concepts  and 
superconcepts; roles are similarly arranged. Both 
concepts and roles may associated with names. In 
logical terms, a concept may be identified as the one-  
place predicate with its name, and a role as the two-  
place predicates with its name. 
I will now give the meaning postulates for a term-  
forming algebra, similar to the one described in \[2\] in 
which one can write down the sort of NIKL expressions 
I wi l l  need. Expressions in this language are 
combinable to yield a complex concept or role as their 
value. 
(CONJ CI - -  CN) = (lambda (X) (and (CI X) - -  (Cn X))) 
(VALUERESTRICT R C) _= (lambdo (X) ( fo ra l l  Y (-> (R X Y) 
(c Y))) 
(NUMBERRESTRICT R 1 NIL) =_. (Iombdo (X) (exists Y (R X Y))) 
(VRDIFF R C) = (lombdo (X Y) (and (R X Y) (C Y))) 
(DOMAINDIFF R C) 5 (Iombdo (X Y) (ond (R X Y) (C X))) 
The key feature of NIKL which we will make  use of is its 
classifier, which computes subsumption and equivalence 
relations between concepts, and a limited form of this 
among roles. Subsumption is sound, and thus indicates 
entailment between terms: 
(SUBSUMES C1 C2) -> ( fo ra l l  X (-> (C2 X) (C1 X))) 
If the classifier algorithm is complete, the reverse is 
also t rue ,  and enta i lment  ind icates  subsumpt ion .  
In tu i t ive ly ,  th i s  means  " that  c lass i f ied  concepts  a re  
pushed down as far  in the  h ie rarchy  as they  can  go. 
Also assoc ia ted  with the  NIKL system, though not  a 
par t  of the  core  language def in i t ion,  is a symbol tab le  
which associates atomic names  with the roles or 
concepts they denote, and concepts and roles with the 
names  denoting them. If a concept or role does not 
have a name, the symbol table is able to create and 
install one for it when demanded. 
The domain model 
In order to be able to use NIKL in the analysis of 
expressions in the meaning representation language, we 
make the following stipulations for any use of the 
language in a given domain. First,  any one-place 
predicate must  name a concept, and any two-place 
predicate name a role. Second, any constant, unless a 
number  or a string, must name an "individual" concept 
- a particular kind of NIKL concept that is defined to 
have at most one member.  N -ary  functions are treated 
as a N+I  - ary predicates. A predicate of N 
arguments, where N is greater than 2, is reified as a 
concept with N roles. This set of concepts and roles, 
together with the logical relationships between them, 
we call the "domain model". 
Note that all we  have done is to stipulate an one- to -  
one correspondence between two sets of things - the 
concepts and roles in the domain model and the non-  
logical constants of the meaning representation 
language. If we  wish to include a new non-logical 
constant in the language we must enter the 
corresponding concept or role in the domain model. 
Similarly, the NIKL system's creating a new concept or 
role, and creation of a name in the symbol table to 
stand for it, furnishes us with a new non-logical 
constant. 
Axiomatization of the database in terms of 
the domain model 
The translation rules presented earlier effectively 
seek to axiomatize the properties and relations of the 
domain model in terms of those of the database. This 
is not the only way  to bridge the gap. One might also 
try the reverse: to axiomatize the properties and 
relations of the database in terms of those of the 
domain model. Consider the D IAMOTHER field of our 
sample database. We can write this in NIKL as the 
concept PAT IENT-WITH-DIABET IC-MOTHER using terms 
already present in the domain model: 
(CONJ PATIENT 
(VALUERESTR ICT MOTHER 
DIABETIC)) 
If we wanted to axiomatize the relation implied by the 
SEX attribute of the PATIENTS table in our database, we 
could readily do so by defining the role PAT IENT-SEX in 
terms of the domain model relation SEX: 
(DOMAIND IFF SEX 
PAT I ENT ) 
These two defined terms can actually be entered into 
the model, and be treated just like any others there. 
For example, they can now appear as predicate letters 
in meaning representations. Moreover, to the 
associated data structure we can attach a translation 
rule, just as we have been doing with the original 
domain model elements. Thus, wil l  attach to the 
concept PAT IENT-WITH-DIABET IC-MOTHER the rule: 
(PROJECT (SELECT FROM PATIENTS WHERE (EQ DIAMOTHER "YES")) 
OVER PATID) 
243 
The next  sect ion  will i l l us t ra te  how we map from 
express ions  us ing "or ig ina l"  domain model e lements  to 
the  ones we c reate  for ax iomat iz ing the  database ,  us ing 
the  NIKL system and i ts  c lass i f ier .  
4. Recursive Terminological 
Simplification 
We now present  the  ac tua l  s impl i f i cat ion method.  It is 
composed of two separate  t rans format ions  which are 
app l ied  one a f ter  the  other .  The f i rst ,  the  "cont rac t ion  
phase" ,  seeks  to cont rac t  compl icated  subexpress ions  
(par t i cu la r ly  nested  quant i f i ca t ions )  to s impler  one-  
p lace  pred icat ions ,  and to fu r ther  res t r i c t  the  "sor ts"  
of remain ing  bound var iab les  on the  bas is  of the  one-  
p lace  pred icates  so found. The second par t  of the 
t rans format ion ,  the  " ro le - t ighten ing"  phase,  rep laces  
genera l  re la t ions  in the  express ion  with more spec i f ic  
re la t ions  which are  lower in the NIKL h ie rarchy .  These 
more spec i f ic  re la t ions  are  obta ined  from the  more 
genera l  by cons ider ing  the  sor ts  of the  var iab les  upon 
which a g iven re la t iona l  p red icat ion  is made. 
The contraction phase 
The contraction phase is an algorithm with three 
steps, which occur sequentially upon application to any 
expression of the meaning representation. First, the 
contraction phase applies itself recursively to each 
non-constant  subexpression of the expression. 
Second, depending upon the syntactic category of the 
expression, one of the "pre- simplification" 
transformations is applied to place it in a normalized 
form. Third and finally, one of the actual simplification 
transformations is used to convert the expression to 
one of a simpler syntactic category. 
Before working through the example, I will lay out the 
transformations in detail. In what follows, X and X1,X2 
- -  Xn are variables in the meaning representation 
language. The symbol "<rest>" denotes a (possibly 
empty) sequence of formulae. The expression 
"(FORMULA X)" denotes a formula of the meaning 
representation language in which the variable X (and 
perhaps others) appears freely. The symbol "<quant>" 
is to be understood as being replaced by either the 
operator SETOF or the quantifier EXISTS. 
First, the normalization transformations, which simply 
re-arrange the constituents of the expressions to a 
more convienent form without changing its syntactic 
category: 
( I )  (ond (el XI) (P2 Xl) - -  (PN XI) 
(Q1 X2) (Q2 X2) -- (QN X2) 
<rest>) 
~> (and (P' Xl)  (Q' X2) <rest>) 
where P' := (CONJ P1 P2 - -  PN) 
and Q' := (CONJ Q1 Q2 - -  QN) 
(2) (<quant> X:S (and (P X) <rest>) => 
(<quant> X:S' (and <rest>)) 
where S' := (CONJ S P) 
(3) (<quant> X:S (P X)) => 
(<quont> X:S') 
where S' := (CONJ S P) 
(4) (forol  l X:S (-> (and (P X) <rest>) 
(FORMULA X)) => 
( fo ra l l  X:S' (-> (end <rest>) 
(FORMULA X))) 
In (2) and (4) above, the con junct ion  or impl icat ion,  
respect ive ly ,  are  co l lapsed  out  if the  sequence  <rest> 
is empty. 
Now the ac tua l  s impl i f i cat ion  t rans format ions ,  which 
seek  to reduce  a complex sub-express ion  to a one-  
p lace  pred icat ion .  
(5) ( foro l l  X2:S ( -> (R XI X2) (P X2)))  
i>  (P' Xl)  
where P' := (VALUERESTRICT (VRDIFF R S) P) 
(S) (exists X2:S (R X1 X2)) => (P' X1) 
where P' := (VALUERESTRICT R S) 
and R must be a functional role 
(7) (exists X2:S (R Xl X2)) => (P' X1) 
where P' := (NUMBERRESTRICT (VRDIFF R S) 1 NIL) 
(S) (and (P X)) => (P X) 
(9) (R X C) => (P X) 
where P := (VALUERESTRICT R C) 
and R is funct ional ,  C an individual concept 
Now, le t  us suppose  that  the  exerc i se  at  the  end of the  
las t  sec t ion  has  been  car r ied  out, and that  the  concept  
PATIENT-WITH-DIABETIC-MOTHER has  been  c reated  and 
g iven the  appropr ia te  t rans la t ion  rule.  To re turn  to 
the  query  "List pat ients  whose mother  was a d iabet ic" ,  
we reca l l  that  it has  the  meaning representat ion :  
(DISPLAY ~(SETOF X:PATIENTS 
(FORALL Y : PERSON 
(-> (MOTHER X Y) 
(DIABETIC Y))))) 
Upon app l i ca t ion  to the  SETOF express ion ,  the  
a lgor i thm f i r s t  app l ies  i tse l f  to the  inner  FORALL. The 
syntact i c  pat terns  of none of the  pre -s imp l i f i ca t ion  
t rans format ions  (2) - (4) are  sat i s f ied ,  so 
t rans format ion  (5) is app l ied  r ight  way to produce  the 
NIKL concept :  
(VALUERESTRICT (VRDIFF MOTHER PERSON) 
DIABETIC) 
This is g iven to the  NIKL c lass i f ie r ,  which compares  it 
to o ther  concepts  a l ready  i n the  h ie rarchy .  Since 
MOTHER has  PERSON as i ts  range  a l ready ,  (VRDIFF 
MOTHER PERSON) is just  MOTHER again.  The c lass i f ie r  
thus  computes  that  the  concept  spec i f ied  above is a 
subconcept  of PERSON - a PERSON such  that  his  
MOTHER was a DIABETIC. If th i s  is not  found to be 
equ iva lent  to any pre -ex is t ing  concept ,  the  system 
ass igns  the  concept  a new name which no o ther  
concept  has,  say PERSON-I. The outcome of the  
s impl i f i ca t ion  of the  whole FORALL is then  jus t  the 
much s impler  express ion :  
(PERSON-I X) 
The recurs ive  s impl i f i cat ion  of the  arguments  to the  
SETOF is now completed,  and the resu l t ing  express ion  
is: 
(DISPLAY 't(SETOF X:PATIENT 
(PERSON-I X))) 
Trans format ions  can now be app l ied  to the  SETOF 
express ion  i tsel f .  The pre -s imp l i f i ca t ion  t rans format ion  
(3) is found to apply, and a concept  expressed  by: 
(CONJ PATIENT PERSON--I) 
is g iven to the  c lass i f ier ,  which recogn izes  it as 
equ iva lent  to the  a l ready  ex is t ing  concept  PATIENT- 
WITH-DIABETIC-MOTHER. Since any concept  can serve 
as a sort ,  the  f inal  s impl i f i cat ion  is: 
244  
(DISPLAY t(SETOF X:PATIENT-W\]TH-DIABETIC~THER)) 
This is the  very  concept  for which we have a ru le,  so 
the ERL t rans la t ion  is: 
(PRINT FROM (SELECT FROM PATIENT 
WHERE (EQ DIAMOTHER "YES")) 
PATID) 
Suppose now that the semantic interpretation system 
assigned a different logical expression to represent the 
query "List patients whose mother was a diabetic", in 
which the embedded quantification is existential instead 
of universal. This might actually be more in line with 
the number  of the embedded noun. The meaning 
representation would now be: 
(disploy t ( se to f  X:PATIENT 
(ex is ts  Y:PERSON (and (MOTHER X Y) 
(DIABETIC Y))) 
The recursive application of the algorithm proceeds as 
before. Now, however, the pre-simplification 
transformation (2) may be applied to yield: 
(ex is ts  Y:DIABETIC (MOTHER X Y)) 
since a DIABETIC is already a PERSON. Transformation 
(6) can be applied if MOTHER is a "functional" role 
- mapping each  and every  person  to exact ly  one 
mother.  This can be checked  by ask ing  the NIKL 
system if a number  res t r i c t ion  has  been a t tached at  
the domain of the  role, PERSON, spec i fy ing that  it have 
both a minimum and a maximum of one. If the  author  
of the domain model has  prov ided th is  reasonab le  and 
per fec t ly  t rue  fact  about  motherhood,  (6) can proceed  
to yield: 
(PAT I ENT-WI TH-D I ABET IC- MOTHER X) 
as in the preced ing  example.  
The ro le  t ighten ing  phase  
This phase  is qu i te  simple. After the  cont rac t ion  
phase  has  been  run on the whole express ion ,  a number  
of var iab les  have had the i r  sor ts  changed to t ighter  
ones. This t rans format ion  sweeps through an 
express ion  and changes  the  ro les  in the  express ion  on 
that  bas is .  Thus: 
(IS) (R X Y) => (R' X Y) 
where $1 is the sort of X 
ond $2 is the sort of Y 
ond R' := (DOMAINDIFF (VRDIFF R $2) 
Sl) 
One can see that  a use of the  re la t ion  SEX, where  the  
sor t  of the f i rs t  a rgument  is known to be DOCTOR, can 
read i ly  be conver ted  to a use the  re la t ion  DOCTOR-SEX. 
Back convers ion :  going in the  reverse  d i rec t ion  
There will be t imes when the  s impl i f i cat ion  
t rans format ion  will "overshoot" ,  c reat ing  and us ing new 
pred icate  le t te rs  which have not been seen  before  by 
c lass i fy ing new data  s t ruc tures  into the  model to 
cor respond to them. The use of such  a new pred icate  
le t te r  can then  be t reated  exact ly  as would i ts  
equ iva lent  lambda-def in i t ion ,  which we can read i ly  
obta in  by consu l t ing  the  NIKL model. For example,  a 
query  about  the sexes  of leukemia v ict ims may a f ter  
s impl i f icat ion resu l t  in a ra ther  s t range  role being 
c reated  and entered  into  the  h ie rarchy :  
PATIENT-SEX-I := (DOMAINDIFF PATIENT-SEX LEUKEMIA-PATIENT) 
This ro le is a d i rec t  descendant  of PATIENT-SEX; i ts  
name is system generated .  By the mean ing-postu la te  
of DOMAINDIFF g iven in sect ion  3 above, it can be 
rewr i t ten  as the fol lowing lambda-abst rac t :  
(Iombdo (X Y) (and (PATIENT-SEX X Y) 
( LEUKEM I A-PAT I ENT X) ) ) 
For PATIENT-SEX we of course  have a t rans la t ion  ru le  
as d i scussed  in sect ion  2. A ru le  for LEUKEMIA- 
PATIENT can be imagined as involv ing the  DISEASE f ield 
of the  PATIENTS table.  At th i s  po int  we can simply cal l  
the  t rans la t ion  a lgor i thm recurs ive ly ,  and it will come 
up with a t rans la t ion :  
(PROJECT (SELECT FROM PATIENTS 
WHERE (EQ DISEASE "LEUK")) 
OVER PATID SEX) 
This supplies us with the needed rule. As a bonus, we 
can avoid having to recompute it later by simply 
attaching it to the role in the normal way. The similar 
computation of rules for complex concepts and roles 
which are already in the domain comes for free. 
5. Conclusions, Implementation 
Status and Further  Work 
As of th is  wr i t ing,  we have incorporated  NIKL into the  
imp lementat ion  of our  natura l  l anguage quest ion -  
answer ing  system, IRUS. NIKL is used  to represent  the  
knowledge in a Navy bat t le -management  domain. The 
s impl i f i cat ion  t rans format ion  descr ibed  in th is  paper  
has  been  implemented in th i s  combined system, and the 
ax iomat i za t ion  of the  database  as descr ibed  above is 
being added to the  domain model. At that  point,  the  
methodology will be tes ted  as a so lut ion  to the 
di f f icu l t ies  now being exper ienced  by those  t ry ing to 
wr i te  the  t rans la t ion  ru les  for the  complex database  
and domain of the  F leet  Command Center  Batt le  
Management  Program of DARPA's S t ra teg ic  Computing 
Program.  
I have presented  a l imited in fe rence  method on 
pred icate  ca lcu lus  express ions ,  whose in tent  is to p lace 
them in a canon ica l  form that  makes  o ther  in fe rences  
eas ie r  to make. Metaphor ica l ly ,  it can be regarded  as 
"s ink ing"  the  express ion  lower in a cer ta in  logical  
space.  The goal is to push  it  down to the "level" of 
the  database  pred icates ,  or below. We cannot  
guarantee  that  we will a lways p lace the  express ion  as 
low as it could poss ib ly  go - that  problem is 
undec idab le .  But we can go a good d i s tance ,  and th is  
by i tse l f  is very  usefu l  for res tor ing  the  t rac tab i l i ty  of 
the  mapping t rans format ion  and o ther  sor ts  of 
deduct ive  operat ions  \[10\]. 
Somewhat s imi lar  s impl i f i cat ions  are  per formed in the  
work on ARGON \[6\], but  for a d i f fe rent  purpose.  There 
the  database  is assumed to be a full, ra ther  than  a 
par t ia l l y  speci f ied,  model and s impl i f i cat ions  are  
per fo rmed only to gain an inc rease  in eff ic iency. The 
d i s t ingu ish ing  feature  of the  present  work is i ts  
operat ion  on an express ion  in a log ica l  l anguage for 
Engl ish meaning representat ion ,  ra ther  than  for 
res t r i c ted  quer ies .  A database ,  g iven the purposes  for 
which it is des igned,  cannot  const i tu te  a full model for 
such a language.  Thus, the  te rmino log ica l  s impl i f icat ion 
is needed to reduce  the log ica l  express ion ,  when 
poss ib le ,  to an express ion  in a "sub- language"  of the 
f i rs t  for which the  database  i s  a full  model. 
An impor tant  outcome of th is  work is the  perspect ive  
it g ives on knowledge representat ion  systems l ike NIKL. 
It shows how workers  in o ther  f ields, while mainta in ing  
o ther  logical  sys tems as the i r  p r imary  mode of 
representat ion ,  can use these  sys tems in p ract i ca l  
ways. Certainly NIKL and NIKL-Iike systems could 
245 
never be used as full meaning representat ions  - they 
don't  have enough express ive power, and were never  
meant to, This does not  mean we have to d is regard  
them, however. The r ight  perspect ive is to view them 
as a t tached inference engines to perform limited tasks  
having to do with the i r  specialty - the re la t ionsh ips  
between the var ious proper t ies  and re lat ions  that  make 
up a subject  domain in the real world. 
Acknowledgements 
First  and foremost,  I must thank Remko Scha, both 
for valuable and st imulat ing technical  d i scuss ions  as 
well as for pat ient  editorial  criticism. This paper  has 
also benef i ted from the comments of Ralph Weischedel 
and Sos De Bruin. Beth Groundwater  of SAIC was 
pat ient  enough to use the software this work produced.  
I would like to thank  them, and thank  as well the other  
members of the IRUS pro ject  - Damaris Ayuso, Lance 
Ramshaw and Varda Shaked - for the many p leasant  
and product ive in teract ions  I have had with them. 
References 
\[1\] Bates, Madeleine and Bobrow, Robert  J. 
A Transpor tab le  Natural  Language Inter face for 
Information Retrieval. 
In Proceedings of the 6th Annual Internat ional  
ACM SIGIR Conference. ~CM Special In teres t  
Group on Information Retrieval and American 
Society for Informat ion Science, Washington, 
D.C., June, 1983. 
\[2\] Brachman, R.J., Fikes, R.E., and Levesque, H.J. 
Krypton: A Funct ional  Approach to Knowledge 
Representat ion.  
IEEE Computer, Special Issue on Knowledge 
Representat ion ,  October, 1983. 
\[3\] Codd,E.F. 
A Relational Model of Data for Large Shared Data 
Banks. 
CACM 13(6), June, 1970. 
\[4\] Barbara  Grosz, Douglas E. Appelt, Paul Martin, 
and Fernando Pereira.  
TEAM: An Experiment in the Design of 
Transportable Natura l -Language Interfaces. 
Technical Report  356, SRI Internat iona l ,  Menlo 
Park, CA, August, 1985. 
\[5\] Moser, Margaret.  
An Overview of NIKL. 
Technical Report  Section of BBN Report  No. 5421, 
Bolt Beranek and Newman Inc., 1983. 
\[6\] Pate l -Schne ider ,  P.F., H.J. Levesque, and R.J. 
Brachman. 
ARGON: Knowledge Representat ion  meets 
Informat ion Retrieveal. 
In Proceedings of The First Conference on 
Artif icial Intell igence Applications. IEEE 
Computer Society, Denver, Colorado, 
December, 1984. 
\[7\] W.J.H.J. Bronnenberg,  H.C. Bunt, S.P.J. 
Landsbergen,  RJ.H. Scha, W.J, Schoenmakers  and 
E.P.C. van Utteren.  
The Question Answering System PHLIQA1. 
In L. Bolc (editor),  Natural  Language Question 
Answering Systems. Macmillan, 1980. 
\[8\] Scha, Remko J.H. 
English Words and Data Bases: How to Bridge the 
Gap. 
In 20th Annual Meeting of the Association for 
Computational Linguistics, Toronto. 
Associat ion for Computat ional  Linguistics, 
June, 1982. 
\[9\] Stallard, David G. 
Data Modeling for Natural  Language Access. 
In Proceedings of the First IEEE Conference on 
Applied Artif icial Intell igence, Denver, 
Colorado. IEEE, December, 1984. 
\[10\] Stal lard, David G. 
Taxonomic Inference on Predicate Calculus 
Express ions.  
Submitted to AAAI April 1, 1986. 
246 
