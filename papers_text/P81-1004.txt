PERFORMANCE COMPARISON OF COMPONENT ALGORITHMS 
FOR THE PHONEMICIZATION OF ORTHOGRAPHY 
Jared Bernstein Larry Nessly 
Telesensory Speech Systems University of North Carolina 
Palo Alto, CA 94304 Chapel Hi l l ,  NC 27514 
A system for converting English text 
into synthetic speech can be divided into two 
processes that operate in series: 
I) a text-to-phoneme converter, and 
2) a phonemic-input speech synthesizer. 
The conversion of orthographic text into a 
phonemic form may itself comprise several 
processes in  series, for instance, formatting 
text  to  expand abbrev ia t ions  and 
non-a lphabet ic  express ions ,  pars ing  and word 
c lass  determinat ion ,  segmental  phonemic izat ion  
of words, word and clause level stress 
assignment, word internal and word boundary 
allophonic adjustments, and duration and 
fundamental frequency settings for 
phonological units. 
Comparing the accuracy of different 
algorithms for text-to-phoneme conversion is 
often difficult because authors measure and 
report system performance in incommensurable 
ways. Furthermore, comparison of the output 
speech from two complete systems may not 
always provide a good test of the performance 
of the corresponding component algorithms in 
the two systems, because radical performance 
differences in other components can obscure 
small differences in the components of 
interest. The only reported direct comparison 
of two complete text-to-speech systems (MITALK 
and TSI's TTS-X) was conducted by Bernsteln 
and P i son l  (1980) .  This paper repor ts  one 
study that  compared two algorithms for 
automatic segmental phonemlcization of words, 
and a second study that compared two 
algorithms for automatic assignment of lexical 
stress. 
Only three systems for text-to-phoneme 
conversion have been reported in detail: 
McIlroy's (197~) Votrax driver, Hunnicutt,s 
(1976) rules for the MITALK system, and the 
NRL rules developed by Elovitz and associates 
(1976). Liberman (1979), Hertz (1981), and 
Hunnicutt (1980) have described more recent 
systems, but have not published rule sets. 
One fairly standard approach to 
automatic phonemiczation of words has the 
following component parts: 
input: "whoever" 
I 
LEXICON 
AFFIX 
STRIPPER 
I LETTER 
TO SOUND 
I 
LEXICAL 
STRESS 
l 
ALLOPHONICS 
output: /huw~v3/~" 
Several research systems are of this general 
design, including Allen's MITALK system, the 
TTS-X prototype at Telesensory Systems, and 
Llberman,s proper name phonemic izer .  
The most popular text-to-phoneme 
desi@n is the NRL approach, which has only two 
components, of which only the first is 
presented in detail and evaluated by Elovitz. 
The original NRL system is: 
i nput :  "word" 
LETTER 
TO SOUND 
i nc lud ing  some 
whole morphemes 
I 
LEXICAL 
STRESS 
output: lw3d/ 
d 
19 
The very  great  advantage  o f  the  MRL 
approach, i s  the  un i f ied  t reatment  o f le t te r  
sequences ,  a f f i xes ,  and whole  words .  There i s  
exact ly  one pass th rough a word ,  le f t  to  
right, in which the maximum string starting 
with the leftmost unphonemicized character is 
matched. These strings are sometimes whole 
words, sometimes affixes, and sometimes 
consonant or vowel sequences or word fragments 
like "BUIL". The main constraint of the 
system is its greatest attraction: the unity 
and simplicity of the code that scans the word 
and accesses a single table of letter strings. 
In contrast to this, the MITALK system, for 
instance, has one module and associated table 
structure for lexlcal decomposition of whole 
words, another module for stripping common 
affixes, and a third module  for translating 
consonant and vowel sequences that remain in 
the pseudo-root of the word. 
STUDY ONE 
Study One reports a comparison of  two 
routines for translating orthographic letters 
i n to  segmenta l  phonemes: Hunnicutt@TSI and 
NRL@DEC. 
Hunnicutt@TSI is the affix stripper 
and letter to sound rules as dlacribed in AJCL 
Microfiche 57, and imp lemented  in  MACRO-11 in 
Telesensory Systems' TTS-X prototype 
text-to-speech system. Hunnlcutt's system was 
modified only slightly i n  translation, and 
about 20 rules were added. The system starts 
from the right end of the word and identifies 
as many suffixes as it can from a table of 
about  140 su f f i xes ,  p roceed ing  toward  the  
beg inn ing  o f  the  word unt i l  e i ther  the  
remainder  (pseudo- root )  o f  the  word has no 
vowe l  or  fewer  than  three  le t te rs ,  o r  no more 
su f f i xes  can be matched.  Next ,  a s imi la r  
p roceedure  works f rom the  beg inn ing  o f  the  
word, matching as many prefixes as it can from 
? a tab le  of  about  40 pre f ixes .  F ina l ly ,  the  
pseudo- root  o f  the  word i s  scanned le f t  to  
right twice, once translating the consonants ,  
and next translating the vowels. 
NRL@DEC is a system implemented by 
Mart in  Minnow at  D ig i ta l  Equtptment  Corp.  The 
whole system is somewhat more elaborate that 
the original NRL system, but the letter to 
sound module and its mode of  operat ion  are  
basically as described by Elovitz et ala, 
with 20 or 30 rules added. The NRL rules 
i nc lude  about  60 very  common who le  words ,  as 
we l l  as about  25 ru les  that  hand le  var ious  
env i ronments  fo r  th ree  pre f ixes  and f i f teen  
suffixes. 
A set of 865 words was processed both 
by the Hunnlcutt@TSI affix stripper and letter 
to sound rules, and by the NRL@DEC letter to 
sound rules including the af f ix  rules and the 
word fragments. The 865 words comprised 
approximately every fiftieth word of  the Brown 
Corpus (Kucera  & F ranc is ,  1967) in  f requency  
order ,  s ta r t ing  f rom about  the  400th  most 
frequent word: "position." The lexicon of the 
TSI system was d i sab led ,  and none o f  the  who le  
words in  the NRL rules was in  the set of 865. 
Since the output from both subsystems 
was tapped before stress assignment, vowel 
reduct ion ,  and any a l lophon ics  were per fo rmed,  
the  c r i te r ion  of  cor rec tness  was "does th i s  
phonemlc iza t ion  represent  any acceptab le  
pronunciation of  the spelled word, assuming 
one can assign stress correctly and then 
reduce vowels ~ppropriately." Thus, a 
phonemlcization consistent wlth any possible 
word class fo r  that  spelling, or  any 'regular' 
regional pronunciation was to be accepted. 
Three judges (two phonetlcians and a 
phono log is t )  were g iven  pr in ted  cop ies  o f  the  
two resu l t ing  phonemic t ranscr ip t ions ;  both  
were i n  fairly t ransparent  b road  phonemic 
form. The judges chose among three possible 
responses  to  each word:  1 = correct; .5  = 
close or questionable; and 0 = wrong. Cross 
judge consistency can be seen from the bimodal 
distribution of summed scores in Figure I. 
Fla I E t 
Fll4~C 
,~ fm,~, .  ? o, .?  ,LJ 
m 
7b b7 
o s - t .  
6OI 
137 
0 .~F- t. t.5" ~t --~..W 
z.,/? 
I 
! 
3 
20 
Another, more diagnostic way to view 
the results is to present the number of words 
that fall into each cell of a 2X2 grid formed 
by the Hunnlcutt@TSl ra t ing  vs. the NRL@DEC 
rating, as shown in Figure 2. Figure 2 omits 
the 26 words that had a summed score of 1.5 
for either of the two letter to sound systems. 
FIGURE 2 
<1.5 
Hunnicutt@TSI 
>1.5 
HRL@DEC 
<1.5 >1.5 
\ [a  \ ]b 
127 I 90 
l 
69 ) 553 
If the rule sets were equivalent, the 
grid would have zeroes in cells b and c. If 
one rule set were a super-set of the other, 
you would get a zero in cell b or cell c, but 
not both. Most of the 553 words in cell d are 
regular, or else are common exceptions (like 
"built"). Most of the 127 words in cell a are 
obviously exceptional (e.g. "minute, honor, 
one, two"). 
Examination of the 159 words 
distributed between cells b and c yields the 
payoff. Of the 69 words that Hunnicutt@TSI 
got right and NRL@DEC missed, nearly half are 
correct by virtue of the extensive affix 
stripping in Hunnicutt's algorithm. Among 
these 69 words in cell c are "mobile, naval, 
wallace, likened, coworkers, & reenacted." 
Of the 90 words that NRL@DEC got right 
and Hunnicutt@TSl got wrong, only about 15 are 
definitely due to NRL's word fragment rules. 
Six of the 90 words are in cell d just because 
NRL does not Strip suffixes the way that 
Hunnicutt's rules do. These six words are 
"november, visited, preferably, presidency, 
september, & oven." 
In general, both algorithms get about 
25% wrong on this lexically flat sample of 865 
word types. About 15~ of the words are 
incorectly phonemicized by both subsystems. 
This might suggest that 15~ wrong may be a 
state of the art performance level for 
segmental phonemicization of word types by 
sets of 400 rules. 
STUDY TWO 
Study Two compared the performance of 
two algorithms for assignment of lexical 
stress to words. Both of the algorithms were 
coded in MACRO-It and ran in different 
versions of TSl's TTS-X prototype 
text-to-speech system. The first algorithm is 
Hunnlcutt's lexical stresser, which is 
described in detail in AjCL Microfiche 57. 
Hunnicutt's algorithm is an adaptation of 
Halle's cyclic stress rules for English. The 
adaptations include adjustments for the less 
specified input to the rules (e.g. the part of 
speech of the root is unknown), and the number 
of stress levels specified in the output is 
reduced, presumably because the Klatt 
synthesizer it was designed to drive only used 
two stress levels. Hunnicutt also added stress 
rules that depended on the occurance of 
certain classes of suffixes. Hunnicutt 's rules 
require several pointers and a suffix table, 
they sometimes pass through a word several 
times in the manner of Chomsky & Halle's 
(1968) rules, and they occupy about 3K bytes 
of executable code in their TSI version. 
The second algorithm is a simplif ied 
version of a stress rule proposed in Hill & 
Nessly (1973). We will refer to this rule as 
Nessly's default, since it is the default case 
of Nessly's full stress algorithm. Nessly's 
default stress is quite similar to Latin 
stress and to the "first approximation" stress 
rule discussed twoard the beginning of Chomsky 
& Halle's chapter three (1968, pp.69-77). The 
main differences between Nessly's default rule 
and Chomsky & Halle's "first approximation" 
are: 
(I) No word class information is used 
in Nessly's default, so verbs are stressed as 
nouns. 
and (2) What constitutes a "strong 
cluster" (which contains a tense vowel or a 
closed syllable end) is different. Nessly's 
default is indifferent to vowel length or 
tensity. 
Nessly's default rule can be outl ined as 
follows: 
If(number of syllables : I) 
stress it. 
if(number of syllables : 2) 
stress left syllable. 
else 
skip the last syllable. 
? i f(next-to-last is closed) 
stress it. 
else 
stress third from last. 
(place alternating 2nd stresses 
on syllables to the left.) 
The MACRO-It version of this rule requires 
about 150 bytes of executable code, and 
accepts one pointer to the last vowel in the 
word. It passes through the word once, right 
to left, and it does very well assigning 
correct stresses (in caps) to "LUminant" vs. 
"maLIGnant," for example. 
For testing the stress algorithms, a 
sample of 430 words was selected. These 430 
words were all the items of five or more 
characters that had frequencies of 40 ppm 
through 34 ppm (inclusive) in the Brown 
corpus. The segmental phonemicization was done 
by Hunnicutt's rules in TSI's TTS-X prototype. 
The automatical ly produced segmental 
phonemicizations that the stress algorithms 
operated on were rejected only if they did not 
have the correct number of syllables. 
Thirteen of the 430 words were phonemicized 
with the wrong number of syllables. Another 
54, or 13~, of the 430 were one syllable 
words, which were allways assigned correct 
21 
stress. Stress assignments were judged by the 
first author. The results on the remaining 
417 words of the sample were: 
Correct Wrong 
Hunn icut t /Ha l le  308 109 
Nessly default 303 114 
So, on these words, the two algorithms perform 
at about the same level of accuracy, which is 
about 252 wrong on a lexlcal sample. 
DISCUSSION 
In both studies, very simple 
algorithms performed about as well as 
algorithms of vastly greater complexity. In 
the case of the letter-to-sound algorithms 
(Hunnlcutt@TSI and MRL@DEC), the difference in 
complexity is primarily in the procedure for 
checklnK the rules against the word. 
Hunnicutt's rules themselves are only a little 
more complicated than the NRL rules. 
Presumably, with some modification, most of 
Hunnicutt's rules could be modified to run 
within a one-pass NRL procedure. 
The stress algorithms tested in Study 
Two present  a very  great  cont ras t  in  both  
number o f  ru les  and procedure  fo r  ru le  
application. If Nessly's default rule is llke 
a simplified version of Chomsky & Halle's 
" f i r s t  approx imat ion"  s t ress  ru le ,  and l \ [  
Hunnlcutt's algorithm is fairly close to  
Chomsky & Halle's full lexical stress rules 
(w i th  noun- root  assumed),  then our  data  
suggest  that  the  ep icyc l i c  accret ion  that  
produced Chomsky & Ha l le ' s  fu l l  se t  o f  s t ress  
rules from their "first approximation" has 
gained a lmost  noth ing  in  lex ica l  coverage .  
We have reported performance in terms 
of percent wrong on samples of word types from 
the Brown corpus. It seems that an 
appropr ia te  measure of performance that  
re f lec ts  what peop le  fee l  when they  hear  a 
text-to-speech system is AVERAGE WORDS BETWEEN 
ERRORS (AWBE). We would like to  end this paper 
by g iv ing  AWBE fo r  a s imple  text - to -phoneme 
system with a 25~ error rate in  both 
letter-to-sound conversion and lexlcai  
stressing, and a lexicon with 1500 words. 
I f  the  lex icon  i s  in  para l le l  w i th  the 
le t te r  to  sound and s t ress  ru les ,  and the  
per formance o f  the le t te r  to  sound ru les  and 
the s t ress  ru les  are independant ,  an overa l l  
e r ro r  ra te  o f  about 7% can be expected .  Th is  
would t rans la te  in to  an AWBE o f  13.3 .  
REFERENCES 
J .Bernste in  & D.P i son i  (1980) "Un l imi ted  
text - to -speech  system: Descr ip t ion  and 
eva luat ion  o f  a mic roprocessor  based dev ice , "  
IEEE ICASSP-80 Proceedings. 
N.Chomsky & M.Halle (1968) THE SOUND PATTERN 
OF ENGLISH, Harper-Row, New York. 
H?Elovltz, R.Johnson, A.McHuKh, & J.Shore 
(1976) "Letter-to-sound rules for automatic 
t rans la t ion  o f  Eng l i sh  text  to  phonet ics , "  
IEEE Trans .  on Acoust i cs ,  Speech, and S igna l  
P rocess ing ,  vo l .  ASSP-24, no. 6. 
S .Her tz  (1981) "SRS le t te r  to  sound ru les , "  
IEEE ICASSP-80 Proceed ings .  
S .Hunn icut t  (1976) "Phono log ica l  ru les  fo r  a 
text - to -speech  system" AJCL M ic ro f i che  57. 
$ .Hunn icut t  (1980) "Grapheme to  phoneme ru les :  
a rev iew"  KTH SLT-QPSR 2 -3 /1980,  S tockho lm.  
H.Kucera & W.Franc ls  (1967) COMPUTATIONAL 
ANALYSIS OF PRESENT DAY AMERICAN ENGLISH, 
Brown U. Press ,  P rov idence .  
M.L lberman (1979) "Text - to -speech  convers ion  
"by ru le  and a pract i ca l  app l i ca t ion , "  
P roceed ings  o f  the  N in th  In ternat iona l  
Congress o f  Phonet ic  Sc iences ,  Copenhagen. 
M.Mc I l roy  (197~) "Synthet ic  Eng l i sh  speech by 
ru le , "  Be l l  Te lephone Laborator ies  Memo. 
K .H l l l  & L .Ness ly  (1973) "Rev iew o f  The Sound 
Pat ten  o f  Eng l i sh , "  LINGUISTICS 106: 57-101.  
ACKNOWLEDGEMENTS 
The authors  grate fu l ly  acknowlege va luab le  
he lp  from Mar t in  Minow, Peter  MaKEs, 
Margaret  Kahn, and ou l ie  Lov in=.  
22 
