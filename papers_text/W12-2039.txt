The 7th Workshop on the Innovative Use of NLP for Building Educational Applications, pages 326?336,
Montre?al, Canada, June 3-8, 2012. c?2012 Association for Computational Linguistics
Evaluating the Meaning of Answers to Reading Comprehension Questions
A Semantics-Based Approach
Michael Hahn Detmar Meurers
SFB 833 / Seminar fu?r Sprachwissenschaft
Universita?t Tu?bingen
{mhahn,dm}@sfs.uni-tuebingen.de
Abstract
There is a rise in interest in the evaluation of
meaning in real-life applications, e.g., for as-
sessing the content of short answers. The ap-
proaches typically use a combination of shal-
low and deep representations, but little use is
made of the semantic formalisms created by
theoretical linguists to represent meaning.
In this paper, we explore the use of the un-
derspecified semantic formalism LRS, which
combines the capability of precisely repre-
senting semantic distinctions with the ro-
bustness and modularity needed to represent
meaning in real-life applications.
We show that a content-assessment approach
built on LRS outperforms a previous approach
on the CREG data set, a freely available cor-
pus of answers to reading comprehension ex-
ercises by learners of German. The use of such
a formalism also readily supports the integra-
tion of notions building on semantic distinc-
tions, such as the information structuring in
discourse, which we show to be useful for con-
tent assessment.
1 Introduction
There is range of systems for the evaluation of short
answers. While the task is essentially about eval-
uating sentences based on their meaning, the ap-
proaches typically use a combination of shallow and
deep representations, but little use is made of the se-
mantic formalisms created by theoretical linguists to
represent meaning. One of the reasons for this is that
semantic structures are difficult to derive because of
the complex compositionality of natural language.
Another difficulty is that form errors in the input cre-
ate problems for deep processing, which is required
for extracting semantic representations.
On the other hand, semantic representations have
the significant advantage that they on the one hand
abstract away from variation in the syntactic real-
ization of the same meaning and on the other hand
clearly expose those distinctions which do make a
difference in meaning. For example, the difference
between dog bites man and man bites dog is still
present in deeper syntactic or semantic representa-
tions, while semantic representations abstract way
from meaning-preserving form variation, such as the
active-passive alternation (dog bites man ? man was
bitten by dog). This suggests that sufficiently robust
approaches using appropriate semantic formalisms
can be useful for the evaluation of short answers.
In this paper, we explore the use of Lexical Re-
source Semantics (Richter and Sailer, 2003), one
of the underspecified semantic formalisms combin-
ing the capability of precisely representing seman-
tic distinctions with the robustness and modularity
needed to represent meaning in real-life applica-
tions. Specifically, we address the task of evaluating
the meaning of answers to reading comprehension
exercises.
We will base our experiments on the freely avail-
able data set used for the evaluation of the CoMiC-
DE system (Meurers et al, 2011), which does not
use semantic representations. The data consists of
answers to reading comprehension exercise written
by learners of German together with questions and
corresponding target answers.
326
2 Related Work
There are several systems which assess the content
of short answers. Mitchell et al (2002) use hand-
crafted patterns which indicate correct answers to a
question. Similarly, Nielsen et al (2009) use manu-
ally annotated word-word relations or ?facets?. Pul-
man and Sukkarieh (2005) use machine learning
to automatically find such patterns. Other systems
evaluate the correctness of answers by comparing
them to one or more manually annotated target an-
swers. C-Rater (Leacock and Chodorow, 2003) and
the system of Mohler et al (2011) compare the syn-
tactic parse to the parse of target answers. A com-
parison of a range of content assessment approaches
can be found in Ziai et al (2012).
The work in this paper is most similar to a line
of work started by Bailey and Meurers (2008), who
present a system for automatically assessing an-
swers to reading comprehension questions written
by learners of English. The basic idea is to align
the student answers to a target answer using a par-
allel approach with several levels on which words
or chunks can be matched to each other. Classifica-
tion is done by a machine learning component. The
CoMiC-DE system for German is also based on this
approach (Meurers et al, 2011).
In terms of broader context, the task is related
to the research on Recognizing Textual Entailment
(RTE) (Dagan et al, 2006). In particular, align-
ment (e.g., MacCartney et al, 2008, Sammons et al,
2009) and graph matching approaches (Haghighi et
al., 2005, Rus et al, 2007) are broadly similar to our
approach.
3 General Setup
3.1 Empirical challenge: CREG
Our experiments are based on the freely available
Corpus of Reading comprehension Exercises in Ger-
man (CREG, Ott et al, 2012) . It consists of texts,
questions, target answers, and corresponding student
answers written by learners of German. For each
student answer, two independent annotators evalu-
ated whether it correctly answers the question. An-
swers were only assessed with respect to meaning;
the assessment is in principle intended to be inde-
pendent of grammaticality and orthography. The
task of our system is to decide which answers cor-
rectly answer the given question and which do not.
3.2 Formal basis: Lexical Resource Semantics
Lexical Resource Semantics (LRS) (Richter and
Sailer, 2003) is an underspecified semantic formal-
ism which embeds model-theoretic semantic lan-
guages like IL or Ty2 into constraint-based typed
feature structure formalisms as used in HPSG. It
is formalized in the Relational Speciate Reentrancy
Language (RSRL) (Richter, 2000).
While classical formal semantics uses fully ex-
plicit logical formulae, the idea of underspecified
formalisms such as LRS is to derive semantic rep-
resentations which are not completely specified and
subsume a set of possible resolved expressions, thus
abstracting away from ambiguities, in particular, but
not exclusively, scope ambiguities.
As an example for the representations, consider
the ambiguous example (1) from the CREG corpus.
(1) Alle
all
Zimmer
rooms
haben
have
nicht
not
eine
a
Dusche.
shower
?Not every room has a shower.?
?No room has a shower.?
The LRS representation of (1) is shown in Figure
1, where INCONT (INTERNAL CONTENT) encodes
the core semantic contribution of the head, EXCONT
(EXTERNAL CONTENT) the semantic representation
of the sentence, and PARTS is a list containing the
subterms of the representation.
?
?
?
?
?
?
?
?
?
?
?
INCONT haben(e)
EXCONT A
PARTS
?A, haben(e), ?x1(B? C),
zimmer(x1), ?x2 (D ? E), ? F,
dusche(x2), subj(e,x1), obj(e,x2)
?e(haben(e) ? subj(e,x1) ? obj(e,x2)
?
?
?
?
?
?
?
?
?
?
?
?
Ex2(D & E)
(haben(e) & subj(e,x1) & obj(e,x2))
    F
Ax1(B    C)
zimmer(x1) dusche(x2) Ee 
    A
Figure 1: LRS and dominance graph for (1)
The representation also includes a set of subterm
constraints, visualized as a dominance graph at the
327
bottom of the figure. The example (1) has several
readings, which is reflected in the fact that the rel-
ative scope of the two quantifiers and the negation
is not specified. The different readings of the sen-
tence can be obtained by identifying each of the
meta-variables A, . . . , F with one of the subformu-
las. Meta-variables are labels that indicate where a
formula can be plugged in; they are only part of the
underspecified representation and do not occur in the
resolved representation.
This illustrates the main strengths of an under-
specified semantic formalism such as LRS for prac-
tical applications. All elements of the semantic rep-
resentation are explicitly available on the PARTS list,
with dominance constraints and variable bindings
providing separate control over the structure of the
representation. The underspecified nature of LRS
also supports partial analyses for severely ill-formed
input or fragments, which is problematic for clas-
sical approaches to semantic compositionality such
as Montague semantics (Montague, 1973). Another
advantage of LRS as an underspecified formalism
is that it abstracts away from the computationally
costly combinatorial explosion of possible readings
of ambiguous sentences, yet it also is able to rep-
resent fine-grained semantic distinctions which are
difficult for shallow semantic methods to capture.
3.3 Our general approach
In a first step, LRS representations for the student
answer, the target answer, and the question are auto-
matically derived on the basis of the part-of-speech
tags assigned by TreeTagger (Schmid, 1994) and the
dependency parses by MaltParser (Nivre and Hall,
2005) in the way discussed in Hahn and Meurers
(2011). In this approach, LRS structures are de-
rived in two steps. First, surface representations
are mapped to syntax-semantics-interface represen-
tations, which abstract away from some form vari-
ation at the surface. In the second step, rules map
these interface representations to LRS representa-
tions. The approach is robust in that it always results
in an LRS structure, even for ill-formed sentences.
Our system then aligns the LRS representations
of the target answer and the student answer to each
other and also to the representation of the ques-
tion. Alignment takes into account both local crite-
ria, in particular semantic similarity, and global cri-
teria, which measure the extent to which the align-
ment preserves structure on the level of variables and
dominance constraints.
The alignments between answers and the question
are used to determine which elements of the seman-
tic representations are focused in the sense of In-
formation Structure (von Heusinger, 1999; Kruijff-
Korbayova? and Steedman, 2003; Krifka, 2008), an
active field of research in linguistics addressing the
question how the information in sentences is pack-
aged and integrated into discourse.
Overall meaning comparison in our approach is
then done based on a set of numerical scores com-
puted from potential alignments and their quality.
Given its LRS basis, we will call the system CoSeC-
DE (Comparing Semantics in Context).
4 Aligning Meaning Representations
The alignment is done on the level of the PARTS lists,
on which all elements of the semantic representation
are available:
Definition 1. An alignment a between two LRS
representations S and T with PARTS lists pn1 and
qm1 is an injective partial function from {1,...,n} to
{1,...,m}.
Requiring a to be injective ensures that every ele-
ment of one representation can be aligned to at most
one element of the other representation. Note that
this definition is symmetrical in the sense that the
direction can be inverted simply by inverting the in-
jective alignment function.
To automatically derive alignments, we define a
maximization criterion which combines three fac-
tors measuring different aspects of alignment qual-
ity. In addition to i) the similarity of the align-
ment links, the quality Q of the alignment a takes
into account the structural correspondence between
aligned elements by evaluating the consistency of
alignments ii) with respect to the induced variable
bindings ? and, and iii) with respect to dominance
constraints:
Q(a, ?|S, T ) = linksScore(a|S, T )
? variableScore(?)
? dominanceScore(a|S, T )
(1)
The approach thus uses a deep representation ab-
stracting away from the surface, but the meaning
328
comparison approach on this deep level is flat, yet
at the same time is able to take into account struc-
tural criteria. In consequence, the approach is mod-
ular because it uses the minimal building blocks of
semantic representations, but is able to make use of
the full expressive power of the semantic formalism.
4.1 Evaluating the Quality of Alignment Links
The quality of an alignment link between two ex-
pressions is evaluated by recursively evaluating the
similarity of their components. In the base case,
variables can be matched with any variable of the
same semantic type:
sim(x? , y? ) = 1
Meta-variables can be matched with any meta-
variable of the same semantic type:
sim(A? ,B? ) = 1
For predicates with arguments, both the predicate
name and the arguments are compared:
sim(P1(a
k
1), P2(b
k
1)) =
sim(P1, P2) ?
k?
i=1
sim(ai, bi)
(2)
If the predicates have different numbers of argu-
ments, similarity is zero. Linguistically well-known
phenomena where the number of arguments of se-
mantically similar predicates differ do not cause a
problem for this definition, because semantic roles
are linked to the verbal predicate via grammatical
function terms such as subj and obj predicating over
a Davidsonian event variable, as in Figure 1.1
For formulas with generalized quantifiers, the
quantifiers, the variables, the scopes and the restric-
tors are compared:
sim(Q1x1(? ? ?), Q2x2(? ? ?)) =
sim(Q1, Q2) ? sim(x1, x2)
?sim(?, ?) ? sim(?, ?)
(3)
Lambda abstraction is dealt with analogously.
The similarity sim(P1, P2) of names of predicates
and generalized quantifiers takes into account sev-
eral sources of evidence and is estimated as the max-
imum of the following quantities:
1In this paper, we simply use grammatical function names
in place of semantic role labels in the formulas. A more sophis-
ticated, real mapping from syntactic functions to semantic roles
could usefully be incorporated.
As a basic similarity, the Levenshtein distance
normalized to the interval [0,1] (with 1 denoting
identity and 0 total dissimilarity) is used. This ac-
counts for the high frequency of spelling errors in
learner language.
Synonyms in GermaNet (Hamp and Feldweg,
1997) receive the score 1.
For numbers, the (normalized) difference
|n1?n2|
max(n1,n2)
is used.
For certain pairs of dissimilar elements which be-
long to the same category, constant costs are de-
fined. This encourages the system to align these el-
ements, unless the structural factors, i.e., the quality
of the unifier and the consistency with dominance
constraints, discourage this. Such constants are de-
fined for pairs of grammatical function terms. Other
constants are defined for pairs of numerical terms
and for pairs of terms encoding affirmative and neg-
ative natural language expressions and logical nega-
tion.
Having defined how to compute the quality for
single alignment links, we still need to define how to
compute the combined score of the alignment links,
which we define to be the sum of the qualities of the
links:
linksScore(a|pn1 , q
m
1 ) =
n?
k=1
{
sim(pk, qa(k)) if a(k) is defined,
?NULL else.
(4)
The quality of a given overall alignment thus is
determined by the quality of the alignment links of
the PARTS elements which are aligned. For those
PARTS elements not aligned, a constant cost ?NULL
must be paid, which, however, may be smaller than
a costly alignment link in another overall alignment.
4.2 Evaluating Unifiers
Alignments between structurally corresponding se-
mantic elements should be preferred. For situations
in which they structurally do not correspond, this
may have the effect of dispreferring the pairing of
elements which in terms of the words on the surface
are identical or very similar. Consider the sentence
pair in (2), where Frau in (2a) syntactically corre-
sponds to Mann in (2b).
329
(2) a. Eine
a
Frau
woman
sieht
sees
einen
a
Mann
man
?A woman sees a man.?
b. Ein
a
Mann
man
sieht
sees
eine
a
Frau
woman
?A man sees a woman.?
On the level of the semantic representation, this
is reflected in the correspondence between the vari-
ables x1 and y1, both of which occur as arguments
of subj, as shown in Figure 2.
Ex2x(Dx &&&&&&)&habensujD&&& be
,1oDxF&&& be
Ex2x(Dx 
Au((D&&& bB&&&&&&)&h
abB
,1oDxF&&& bB
&&&&&&C&zaiBnsujD&&& iB
Ej1oDxF&&& iB
&&&&&&C&zaieAu((D&&& ie
Ej1oDxF&&& ie
Figure 2: An excerpt of an alignment between the PARTS
lists of (2a) on the left and (2b) on the right. Dotted align-
ment links are the ones only plausible on the surface.
Our solution to capture this distinction is to use
the concept of a unifier, well-known from logic pro-
gramming. A unifier for terms ?, ? is a substitu-
tion ? such that ?? = ??. Every alignment in-
duces a unifier, which unifies all variables which are
matched by the alignment.
The alignment in Figure 2 (without the dotted
links) induces the unifier
?1 = [(x1, y1) 7? z1; (x2, y2) 7? z2].
If links between the matching predicates mann and
frau, respectively, are added, one also has to unify x1
with y2 and x2 with y1 and thus obtains the unifier
?2 = [(x1, x2, y1, y2) 7? z].
Intuitively, a good unifier unifies only variables
which correspond to the same places in the seman-
tic structures to be aligned. In the case of Figure 2,
choosing an alignment including the dotted links re-
sults in the unifier ?2 which unifies x1 and x2 ? yet
they are structurally different, with one belonging to
the subject and the other one to the object.
In general, it can be expected that an alignment
which preserves the structure will not unify two dis-
tinct variables from the same LRS representation,
since they are known to be structurally distinct. So
we want to capture the information loss resulting
from unification. This intuition is captured by (5),
which answers the following question: Given some
variable z in a unified expression, how many addi-
tional bits do we need on average2 to encode the
original pair of variables x, y in the PARTS lists p
and q, respectively?
H(?) =
1
Zp,q
?
z?Ran(?)
W?(z) log(W?(z)) (5)
where W?(z) = |{x ? V ar(p)|x? = z}|
? |{y ? V ar(q)|y? = z}|
(6)
Zp,q = |V ar(p)| ? |V ar(q)| (7)
The value of a unifier ? is then defined as follows:
variableScore(?) =
(
1?
H(?)
H?
)k
(8)
where k is a numerical parameter with 0 ? k ? 1
and H? is a (tight) upper bound on H(?) obtained
by evaluating the worst unifier, i.e., the unifier that
unifies all variables H? = log(Zp,q).
4.3 Evaluating consistency with dominance
constraints
While evaluating unifiers ensures that alignments
preserve the structure on the level of variables, it is
also important to evaluate their consistency with the
dominance structure of the underspecified semantic
representations, such as the one we saw in Figure 1.
Consider the following pair:
(3) a. Peter
Peter
kommt
comes
und
and
Hans
Hans
kommt
comes
nicht.
not
?Peter comes and Hans does not come.?
b. Peter
Peter
kommt
comes
nicht
not
und
and
Hans
Hans
kommt.
comes
?Peter does not come and Hans comes.?
While the words and also the PARTS lists of the
sentences are identical, they clearly differ in mean-
ing. Figure 3 on the next page shows the LRS domi-
nance graphs for the two sentences together with an
2For simplicity, it is assumed that every combination in
V ar(p)? V ar(q) occurs the same number of times.
330
alignment between them. The semantic difference
between the two sentences is reflected in the posi-
tion of the negation in the dominance graph: while
it dominates kommen(e2) ? subj(e2,hans) in (3a), it
dominates kommen(f1) ? subj(f1,peter) in (3b).
To account for this issue, we evaluate the consis-
tency of the alignment with respect to dominance
constraints. An alignment a is optimally consistent
with respect to dominance structure if it defines an
isomorphism between its range and its domain with
respect to the relation / ?is dominated by?.
Figure 3 shows an alignment which aligns all
matching elements in (3b) and (3a). The link be-
tween the negations violates the isomorphism re-
quirement: the negation dominates kommen(e2) ?
subj(e2,hans) in (3a), while it does not dominate the
corresponding elements in (3b). An optimally con-
sistent alignment will thus leave the negations un-
aligned. Unaligned negations can later be used in
the overall meaning comparison as strong evidence
that the sentences do not mean the same.
dominanceScore measures how ?close? a is to
defining an isomorphism. We use the following sim-
ple score, which is equal to 1 if and only if a defines
an isomorphism:
dominanceScore(a|S, T ) =
1
1 +
?
i,j?Dom(a) ?
?
?
?
?
pi / pj ,
pi . pj ,
qa(i) / qa(j),
qa(i) . qa(j)
?
?
?
?
(9)
where ? is a function taking four truth values as its
arguments. It measures the extent to which the iso-
morphism requirement is violated by an alignment.
?(t1, t2, t1, t2) is defined as 0 because there is no
violation if the dominance relation between pi and
pj is equal to that between the elements they are
aligned with, qa(i) and qa(j). For other combinations
of truth values, ? should be set to values greater than
zero, empirically determined on a development set.
4.4 Finding the best alignment
Because of the use of non-local criteria in the max-
imization criterion Q(a, ?|S, T ) defined in equation
(1), an efficient method is needed to find the align-
ment maximizing the criterion. We exploit the struc-
ture inherent in the set of possible alignments to ap-
ply the A* algorithm (Russel and Norvig, 2010). We
first generalize the notion of an alignment.
Definition 2. A partial alignment of order i is an
index i together with an alignment which does not
have alignment links for any pj with j > i.
A partial alignment can be interpreted as a class
of alignments which agree on the first i elements.
Definition 3. The refinements ?(a) of the partial
alignment a (of order i) are the partial alignments b
such that (1) b is of order i+1, and (2) a and b agree
on {1, ..., i}.
Intuitively, refinements of an alignment of order i
are obtained by deciding how to align element i+1.
? induces a tree over the set of partial alignments,
whose leaves are exactly the complete alignments.
A simple optimistic estimate for the value of all
complete descendants of an alignment a of order i is
given by the following expression:
optimistic(a, ?|S, T ) = variableScore(?)
?dominanceScore(a, S, T )
?(linksScorei(a, ?|p, q)+
n?
k=i+1
heuristic(k, a, pn1 , q
m
1 ))
(10)
where linksScorei is the sum in (4) restricted
to 1 ? k ? i, and heuristic(k, a, pn1 , q
m
1 ) is
0 if pk is aligned and a simple, optimistic esti-
mate for the quality of the best possible align-
ment link containing pk if pk is unaligned. It
is estimated as the maximum of ?NULL and
max{sim(pk, qj) | qj unaligned}.
The estimate in (10) is optimistic in the sense
that it provides an upper bound on the values of all
complete alignments below a. It defines a mono-
tone heuristic and thus allows complete and optimal
search using the A* algorithm. To obtain an efficient
implementation, additional issues such as the order
of elements in the PARTS lists were taken care of. As
they do not play a role for the conceptualization of
our approach, they are not discussed here.
The crucial part at this point of the discussion
is that the A* search can determine the best align-
ment between two PARTS lists. As mentioned in
the overview in section 3.3, we compute three such
331
Ex2(2D &)h
Ea2(2b &)e
nsuu)jE)e ,1oFE)eAB)C)z 
nsuu)jE)h ,1oFE)hAi mj, 
r2(2d
&
Ec2(2 &h
E 2(2! &e
nsuu)jEe ,1oFEeAB)C)z 
nsuu)jEh ,1oFEhAimj, 
"2(2#
$
Figure 3: Alignment between the dominance graphs of (3a) and (3b). The red dotted link violates isomorphism.
alignments: between the student and the target an-
swer, between the question and the student answer,
and between the question and the target answer.
5 From Alignment to Meaning Comparison
Based on the three alignments computed using the
just discussed algorithm, we now explore different
options for computing whether the student answer
is correct or not. We discuss several alternatives,
all involving the computation of a numerical score
based on the alignments. For each of these scores, a
threshold is empirically determined, over which the
student answer is considered to be correct.
Basic Scores The simplest score, ALIGN, is com-
puted by dividing the alignment quality Q between
the student answer and the target answer as defined
in equation (1) by the number of elements in the
smaller PARTS list. Two other scores are computed
based on the number of alignment links between
student and target answer, which for the EQUAL-
Student score is divided by the number of elements
of the PARTS list of the student answer, and for the
EQUAL-Target score by those of the target answer.
For dealing with functional elements, i.e., predi-
cates like subj, obj, quantifiers and the lambda op-
erator, we tried out three options. The straight case
is the one mentioned above, treating all elements on
the PARTS list equally (EQUAL). As a second op-
tion, to see how important the semantic relations be-
tween words are, and how much is just the effect of
the elements themselves, we defined a score which
ignores functional elements (IGNORE). A third pos-
sibility is to weight elements so that functional and
non-functional ones differ in impact (WEIGHTED).
Each of the three scores (EQUAL, IGNORE,
WEIGHTED) is either divided by the number of el-
ements of the PARTS list of the student answer or
the target, resulting in six scores. In addition, three
more scores result from computing the average of
the student and target answer scores.
Information Structure Scores Basing meaning
comparison on actual semantic representation also
allows us to directly take into account Information
Structure as a structuring of the meaning of a sen-
tence in relation to the discourse. Bailey and Meur-
ers (2008), Meurers et al (2011), and Mohler et al
(2011) showed that excluding those parts of the an-
swer which are mentioned (given) in the question
greatly improves classification accuracy. Meurers
et al (2011) argue that the relevant linguistic as-
pect is not whether the material was mentioned in
the question, but the distinction between focus and
background in Information Structure (Krifka, 2008).
The focus essentially is the information in the an-
swer which selects between the set of alternatives
that the question raises.
This issue becomes relevant, e.g., in the case of
?or? questions, where the focused information de-
termining whether the answer is correct is explicitly
given in the question. This is illustrated by the ques-
tion in (4) with target answer (5a) and student an-
swer (5b), from the CREG corpus. While all words
in the answers are mentioned in the question, the
part of the answers which actually answer the ques-
tion are the focused elements shown in boldface.
(4) Ist
is
die
the
Wohnung
flat
in
in
einem
a
Altbau
old building
oder
or
Neubau?
new building
(5) a. Die
the
Wohnung
flat
ist
is
in
in
einem
a
Altbau.
old.building
b. Die
the
Wohnung
flat
ist
is
in
in
einem
a
Neubau.
new.building
332
To realize a focus-based approach, one naturally
needs a component which automatically identifies
the focus of an answer in a question-answer pair. As
a first approximation, this currently is implemented
by a module which marks the elements of the PARTS
lists of the answers for information structure. El-
ements which are not aligned to the question are
marked as focused. Furthermore, in answers to ?or?
questions, it marks as focused all elements which
are aligned to the semantic contribution of a word
belonging to one of the alternatives. ?Or? questions
are recognized by the presence of oder (?or?) and the
absence of a wh-word.
While previous systems simply ignored all words
given in the question during classification, our sys-
tem aligns all elements and recognizes givenness
based on the alignments. Therefore, givenness is
still recognized if the surface realization is differ-
ent. Furthermore, material which incidentally is also
found in the question, but which is structurally dif-
ferent, is not assumed to be given.
Scores using information structure were obtained
in the way of the BASIC scores but counting only
those elements which are recognized as focused
(FOCUS). For comparison, we also used the same
scores with givenness detection instead of focus de-
tection, i.e., in these scores, all elements aligned to
the question were excluded (GIVEN).
Annotating semantic rather than surface represen-
tations for information structure has the advantage
that the approach can be extended to cover focus-
ing of relations in addition to focusing of entities.
The general comparison approach also is compat-
ible with more sophisticated focus detection tech-
niques capable of integrating a range of cues, in-
cluding syntactic cues and specialized constructions
such as clefts, or prosodic information for spoken
language answers ? an avenue we intend to pursue
in future research.
Dissimilar score We also explored one special-
ized score paying particular attention to dissimi-
lar aligned elements, as mentioned in section 4.1.
Where a focused number is aligned to a different
number, or a focused polarity expression is aligned
to the opposite polarity, or a logical negation is not
aligned, then 0 is returned as score, i.e., the student
answer is false. In all other cases, the DISSIMILAR
score is identical to the WEIGHTED-Average FOCUS
score, i.e., the score based on the average of the stu-
dent and target scores with weighting and focus de-
tection.
6 Experiments
6.1 Corpus
We base the experiments on the 1032 answers from
the CREG corpus which are used in the evaluation
of the CoMiC-DE system reported by Meurers et al
(2011). The corpus is balanced, i.e., the numbers of
correct and of incorrect answers are the same. It con-
tains only answers where the two human annotators
agreed on the binary label.
6.2 Setup
The alignment algorithm contains a set of numeri-
cal parameters which need to be determined empir-
ically, such as ?NULL and the function ?. In a first
step, we optimized these parameters and the weights
used in the WEIGHTED scores using grid search on
a development set of 379 answers. These answers
are from CREG, but do not belong to the 1032 an-
swers used for testing. We used the accuracy of the
DISSIMILAR score as performance metric.
In our experiment, we explored each score sep-
arately to predict which answers are correct and
which not. For each score, classification is based
on a threshold which is estimated as the arithmetic
mean of the average score of correct and the average
score of incorrect answers. Training and testing was
performed using the leave-one-out scheme (Weiss
and Kulikowski, 1991). When testing on a particular
answer, student answers answering the same ques-
tion were excluded from training.
6.3 Results
Figure 4 shows the accuracy results obtained in our
experiments together with the result of CoMiC-DE
on the same dataset. With an accuracy of up to
86.3%, the WEIGHTED-Average FOCUS score out-
perform the 84.6% reported for CoMiC-DE (Meur-
ers et al, 2011) on the same dataset. This is remark-
able given that CoMiC-DE uses several (but com-
parably shallow) levels of linguistic abstraction for
finding alignment links, whereas our approach is ex-
clusively based on the semantic representations.
333
Score BASIC GIVEN FOCUS
ALIGN 77.1
EQUAL
Student 69.8 75.3 75.2
Target 70.0 75.5 75.2
Average 76.6 80.8 80.7
IGNORE
Student 75.8 80.1 80.3
Target 77.2 82.2 82.3
Average 79.8 84.7 84.9
WEIGHTED
Student 75.0 80.6 80.7
Target 76.1 83.3 83.3
Average 80.9 86.1 86.3
DISSIMILAR 85.9
CoMiC-DE 84.6
Figure 4: Classification accuracy of CoSeC-DE
The fact that WEIGHTED-Average outperforms
the IGNORE-Average scores shows that the inclu-
sion of functional element (i.e., predicates like subj,
obj), which are not available to approaches based
on aligning surface strings, improves the accuracy.3
On the other hand, the lower performance of EQUAL
shows that functional elements should be treated dif-
ferently from content-bearing elements.
Of the 13.7% answers misclassified by
WEIGHTED-Average FOCUS, 53.5% are false
negatives and 46.5% are false positives.
We also investigated the impact of grammaticality
on the result by manually annotating a sample of 220
student answers for grammatical well-formedness,
66% of which were ungrammatical. On this sam-
ple, grammatical and ungrammatical student an-
swers were evaluated with essentially the same ac-
curacy (83% for ungrammatical answers, 81% for
grammatical answers).
The decrease in accuracy of the COMBINED score
over the best score can be traced to some yes-no-
questions which have an unaligned negation but are
correct. On the other hand, testing only on answers
with focused numbers results in an accuracy of 97%.
The performance of GIVEN and FOCUS scores
3We also evaluated IGNORE scores using parameter values
optimized for these scores, but their performance was still be-
low those of the corresponding WEIGHTED-Average scores.
compared to BASIC confirms that information struc-
turing helps in targeting the relevant parts of the an-
swers. Since CoMiC-DE also demotes given mate-
rial, the better GIVEN results of our approach must
result from other aspects than the information struc-
ture awareness. Unlike previous approaches, the FO-
CUS scores support reference to the material focused
in the answers. However, since currently the FOCUS
scores only differs from the GIVEN scores for alter-
native questions, and the test corpus only contains
seven answers to such ?or? questions, we see no se-
rious quantitative difference in accuracy between the
FOCUS and GIVENNESS results.
While the somewhat lower accuracy of the score
ALIGN shows that the alignment scores are not suf-
ficient for classification, the best-performing scores
do not require much additional computation and do
not need any information that is not in the align-
ments or the automatic focus annotation.
7 Future Work
The alert reader will have noticed that our ap-
proach currently does not support many-to-many
alignments. As is known, e.g., from phrase-based
machine translation, this is an interesting avenue for
dealing with non-compositional expressions, which
we intend to explore in future work. The align-
ment approach can be adapted to such alignments
by adding a factor measuring the quality of many-to-
many links to linkScore (4) and optimistic (10).
8 Conclusion
We presented the CoSeC-DE system for evaluating
the content of answers to reading comprehension
questions. Unlike previous content assessment sys-
tems, it is based on formal semantics, using a novel
approach for aligning underspecified semantic rep-
resentations. The approach readily supports the in-
tegration of important information structural differ-
ences in a way that is closely related to the informa-
tion structure research in formal semantics and prag-
matics. Our experiments showed the system to out-
perform our shallower multi-level system CoMiC-
DE on the same CREG-1032 data set, suggesting
that formal semantic representations can indeed be
useful for content assessment in real-world contexts.
334
Acknowledgements
We are grateful to the three anonymous BEA re-
viewers for their very encouraging and helpful com-
ments.
References
Stacey Bailey and Detmar Meurers. 2008. Diagnos-
ing meaning errors in short answers to reading com-
prehension questions. In Joel Tetreault, Jill Burstein,
and Rachele De Felice, editors, Proceedings of the 3rd
Workshop on Innovative Use of NLP for Building Edu-
cational Applications (BEA-3) at ACL?08, pages 107?
115, Columbus, Ohio.
Ido Dagan, Oren Glickman, and Bernardo Magnini.
2006. The PASCAL Recognising Textual Entail-
ment Challenge. In J. Quionero-Candela, I. Dagan,
B. Magnini, and F. d?Alch Buc, editors, Machine
Learning Challenges, volume 3944 of Lecture Notes
in Computer Science, pages 177?190. Springer.
Aria D. Haghighi, Andrew Y. Ng, and Christopher D.
Manning. 2005. Robust textual inference via graph
matching. In Proceedings of the conference on Hu-
man Language Technology and Empirical Methods in
Natural Language Processing, pages 387?394. Asso-
ciation for Computational Linguistics.
Michael Hahn and Detmar Meurers. 2011. On deriv-
ing semantic representations from dependencies: A
practical approach for evaluating meaning in learner
corpora. In Kim Gerdes, Eva Hajicov, and Leo Wan-
ner, editors, Depling 2011 Proceedings, pages 94?103,
Barcelona.
Birgit Hamp and Helmut Feldweg. 1997. GermaNet - a
Lexical-Semantic Net for German. In Proceedings of
ACL workshop Automatic Information Extraction and
Building of Lexical Semantic Resources for NLP Ap-
plications, pages 9?15.
Manfred Krifka. 2008. Basic notions of information
structure. Acta Linguistica Hungarica, 55(3):243?
276.
Ivana Kruijff-Korbayova? and Mark Steedman. 2003.
Discourse and information structure. Journal of Logic,
Language and Information (Introduction to the Special
Issue), pages 249?259.
Claudia Leacock and Martin Chodorow. 2003. C-rater:
Automated scoring of short-answer questions. Com-
puters and the Humanities, 37(4):389?405.
Bill MacCartney, Michel Galley, and Christopher D.
Manning. 2008. A phrase-based alignment model for
natural language inference. In Proceedings of the Con-
ference on Empirical Methods in Natural Language
Processing, pages 802?811. Association for Compu-
tational Linguistics.
Detmar Meurers, Ramon Ziai, Niels Ott, and Janina
Kopp. 2011. Evaluating answers to reading compre-
hension questions in context: Results for German and
the role of information structure. In Proceedings of the
TextInfer 2011 Workshop on Textual Entailment, pages
1?9, Edinburgh, Scotland, UK, July. Association for
Computational Linguistics.
Tom Mitchell, Terry Russell, Peter Broomhead, and
Nicola Aldridge. 2002. Towards robust computerised
marking of free-text responses. In Proceedings of
the 6th International Computer Assisted Assessment
(CAA) Conference.
Michael Mohler, Razvan Bunescu, and Rada Mihalcea.
2011. Learning to grade short answer questions using
semantic similarity measures and dependency graph
alignments. In Proceedings of the 49th Annual Meet-
ing of the Association for Comnputational Linguistics,
pages 752?762.
Richard Montague. 1973. The Proper Treatment of Qun-
tification in Ordinary English. In Jaakko Hintikka,
Julius Moravcsik, and Patrick Suppes, editors, Ap-
proaches to Natural Language, pages 221?242. Rei-
del, Dordrecht.
Rodney D. Nielsen, Wayne Ward, and James H. Martin.
2009. Recognizing entailment in intelligent tutoring
systems. Natural Language Engineering, 15(4):479?
501.
Joakim Nivre and Johan Hall. 2005. Maltparser: A
language-independent system for data-driven depen-
dency parsing. In Proceedings of the Fourth Workshop
on Treebanks and Linguistic Theories, pages 13?95.
Niels Ott, Ramon Ziai, and Detmar Meurers. 2012. Cre-
ation and analysis of a reading comprehension exercise
corpus: Towards evaluating meaning in context. In
Thomas Schmidt and Kai Wrner, editors, Multilingual
Corpora and Multilingual Corpus Analysis, Hamburg
Studies in Multilingualism (HSM). Benjamins, Ams-
terdam.
Stephen G. Pulman and Jana Z. Sukkarieh. 2005. Au-
tomatic short answer marking. In Proceedings of the
2nd Workshop on Building Educational Applications
Using NLP, pages 9?16.
Frank Richter and Manfred Sailer. 2003. Basic Concepts
of Lexical Resource Semantics. In Arnold Beckmann
and Norbert Preining, editors, ESSLLI 2003 ? Course
Material I, volume 5 of Collegium Logicum, pages 87?
143, Wien. Kurt Go?del Society.
Frank Richter. 2000. A Mathematical Formalism
for Linguistic Theories with an Application in Head-
Driven Phrase Structure Grammar. Phil. dissertation,
Eberhard-Karls-Universita?t Tu?ingen.
Vasile Rus, Arthur Graesser, and Kirtan Desai. 2007.
Lexico-syntactic subsumption for textual entailment.
335
Recent Advances in Natural Language Processing IV:
Selected Papers frp, RANLP 2005, pages 187?196.
Stuart Russel and Peter Norvig. 2010. Artificial Intelli-
gence. A Modern Approach. Pearson, 2nd edition.
Mark Sammons, V.G.Vinod Vydiswaran, Tim Vieira,
Nikhil Johri, Ming-Wei Chang, Dan Goldwasser,
Vivek Srikumar, Gourab Kundu, Yuancheng Tu, Kevin
Small, Joshua Rule, Quang Do, and Dan Roth. 2009.
Relation Alignment for Textual Entailment Recogni-
tion. In Text Analysis Conference (TAC).
Helmut Schmid. 1994. Probabilistic part-of-speech tag-
ging using decision trees. In Proceedings of the In-
ternational Conference on New Methods in Language
Processing, pages 44?49.
Klaus von Heusinger. 1999. Intonation and Information
Structure. The Representation of Focus in Phonology
and Semantics. Habilitationssschrift, Universita?t Kon-
stanz, Konstanz, Germany.
Sholom M. Weiss and Casimir A. Kulikowski. 1991.
Computer systems that learn. Morgan Kaufmann, San
Mateo, CA.
Ramon Ziai, Niels Ott, and Detmar Meurers. 2012.
Short answer assessment: Establishing links between
research strands. In Proceedings of the 7th Workshop
on Innovative Use of NLP for Building Educational
Applications (BEA-7) at NAACL-HLT 2012, Montreal.
336
