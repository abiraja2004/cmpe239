Proceedings of the ACL-08: HLT Workshop on Mobile Language Processing, pages 27?28,
Columbus, Ohio, USA, June 2008. c?2008 Association for Computational Linguistics
A Distributed Database for Mobile NLP Applications?
Petr Homola
Institute of Formal and Applied Linguistics
Charles University
Malostranske? na?me?st?? 25
CZ-118 00, Prague, Czech Republic
homola@ufal.mff.cuni.cz
Abstract
The paper presents an experimental machine
translation system for mobile devices and its
main component ? a distributed database
which is used in the module of lexical trans-
fer. The database contains data shared among
multiple devices and provides their automatic
synchronization.
1 Introduction
In Europe, machine translation (MT) is very impor-
tant due to the amount of languages spoken there.
In the European Union, for example, there are more
then 20 official languages. Some of them have very
few native speakers and it is quite problematic for
institutions and companies to find enough transla-
tors for comparatively rare language pairs, such as
Danish-Maltese. We have developed an experimen-
tal MT system for Central and East European lan-
guages which is in detail presented in (Homola and
Kubon?, 2004); at the moment, we have resources for
German, Polish, Czech, Slovak and Russian. As the
languages are syntactically and, except of German,
lexically related, the system is rule-based. All com-
ponents of the system are implemented in Objective-
C (ObjC) and have been ported to the iPhone.
2 Architecture of the MT System
The basic version of the system consists of the fol-
lowing modules:
?The research presented in this paper has been supported by
the grant No. 1ET100300517 of the GAAV C?R.
Morphological analyzer. Since the languages have
rich inflection, a word has usually many different
endings that express case, number, person etc. It is
necessary to assign a lemma and a set of morpholog-
ical tags to each word form.
Shallow parser. The parser analyzes constituents of
the source sentence, but not necessarily whole sen-
tences.
Lexical and structural transfer. The lexical trans-
fer provides a lemma-to-lemma or a term-to-term
translation. The structural transfer adapts the syn-
tax of the phrases so that they are grammatical in
the target language.
Morphological synthesis of the target language.
This final phase generates proper word forms in the
target language.
The shallow parser uses the dynamic algorithm
described in (Colmerauer, 1969) with feature struc-
tures being the main data structure. The hand-
written rules are fully declarative and defined in the
LFG format (Bresnan, 2001), i.e., they consist of
a context-free rule and a set of unificational con-
ditions. The transfer (lexical and structural) is fol-
lowed by the syntactic and morphological synthe-
sis, i.e., the syntactic structures which represent the
source sentences are linearized and proper morpho-
logical forms of all words are generated, according
to the tag associated with them.
3 Lexical Transfer
The dictionaries are sub-components of the transfer
module. Their task is to provide lexical translation
of constituents analyzed by the shallow parser. The
dictionary contains translation pairs for words and
27
phrases. Most items contain an additional morpho-
logical or syntactic information such as gender, va-
lence frames etc.
The creation of the dictionaries is a very time-
consuming task and they can never cover the com-
plete lexicon of a language. In a production environ-
ment, it is inevitable to add new items to the database
as new texts are processed. The typical workflow is
as follows:
1. During the translation of a document (possibly
on a mobile device), unknown words or phrases are
found. In the translation, they appear in the source
form since the system does not know how to process
them. After the processing of the whole document,
all found unknown words are added to the database
with a remark that the words are new to the system.
2. The new items are transmitted to the computer of
a translator whose task is to translate them. More-
over, most items will be assigned a morphological or
syntactico-semantical annotation for the structural
transfer.
3. The manually updated items are distributed to all
instances of application, i.e., to all devices the MT
system is installed on, so that they are available for
future use by all users of the system.
The capacity of the used mobile device is suffi-
cient to store the lexicon persistently but one could
run into problems trying to keep the whole lexicon
in memory. For this reason, we use a ternary tree as
an index which is kept in memory while full items of
the lexicon are loaded from a persistent repository at
the moment they are needed.
4 Distributed Database
The database can be used on multiple devices and
it is synchronized automatically, i.e., an update of
an object is transmitted to all other instances of the
database. The synchronization can be deferred if the
modifier or the receiver of the update are offline. In
such a case, the database is synchronized as soon as
the device with the database has access to the inter-
net. Due to the offline synchronization, synchroniza-
tion conflicts can arise if two or more users update an
object simultaneously. If the users have changed dif-
ferent properties of the same object, the changes are
merged automatically. Otherwise, the administrator
of the database has to resolve the conflict manually.
The distributed database consists of the following
components:
Object repository. A local repository of ObjC ob-
jects so that the database is accessible even if there
is no internet connection.
Transceiver. A communication module that
sends/receives updates to/from the relay server. It
includes a local persistent cache for updates which
is used if there is no internet connection.
Relay server. A server that accepts updates and dis-
tributes them to other instances of the database. This
component ensures that the database is synchronized
even if two or more users are never online at the
same time.
It is noteworthy that there is no replica of the
database on the server, it only serves as a tempo-
rary repository for updated records that cannot be
synchronized immediately because a receiving de-
vice may be offline at the moment another device has
committed an update (this is the expected situation
for mobile devices such as PDAs and smartphones).
Currently, the distributed database is being used
as a collaboration platform in the Czech Broadcast-
ing Company (C?esky? rozhlas).
5 Conclusions
We have presented an experimental MT system that
works on the iPhone and described how it uses a
distributed object database with automatic synchro-
nization to keep the lexicon of the system up-to-date
on all devices it is installed on. We believe that the
presented database is an effective way to keep fre-
quently updated data up-to-date on multiple comput-
ers and/or mobile devices. The system is developed
in Objective-C thus the code base can be used on the
iPhone and on Macs, and it can be easily ported to
systems for which the GNU C Compiler is available.
References
Joan Bresnan. 2001. Lexical-Functional Syntax. Black-
well Publishers, Oxford.
Alain Colmerauer. 1969. Les syste`mes Q ou un formal-
isme pour analyser et synthe?tiser des phrases sur ordi-
nateur. Technical report, Mimeo, Montre?al.
Petr Homola and Vladislav Kubon?. 2004. A translation
model for languages of acceding countries. In Pro-
ceedings of the EAMT Workshop, Malta.
28
