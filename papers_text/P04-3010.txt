Part-of-Speech Tagging Considering Surface Form
for an Agglutinative Language
Do-Gil Lee and Hae-Chang Rim
Dept. of Computer Science & Engineering
Korea University
1, 5-ka, Anam-dong, Seongbuk-ku
Seoul 136-701, Korea
dglee, rim@nlp.korea.ac.kr
Abstract
The previous probabilistic part-of-speech tagging
models for agglutinative languages have consid-
ered only lexical forms of morphemes, not surface
forms of words. This causes an inaccurate cal-
culation of the probability. The proposed model
is based on the observation that when there exist
words (surface forms) that share the same lexical
forms, the probabilities to appear are different from
each other. Also, it is designed to consider lexi-
cal form of word. By experiments, we show that
the proposed model outperforms the bigram Hidden
Markov model (HMM)-based tagging model.
1 Introduction
Part-of-speech (POS) tagging is a job to assign a
proper POS tag to each linguistic unit such as word
for a given sentence. In English POS tagging, word
is used as a linguistic unit. However, the num-
ber of possible words in agglutinative languages
such as Korean is almost infinite because words can
be freely formed by gluing morphemes together.
Therefore, morpheme-unit tagging is preferred and
more suitable in such languages than word-unit tag-
ging. Figure 1 shows an example of morpheme
structure of a sentence, where the bold lines indi-
cate the most likely morpheme-POS sequence. A
solid line represents a transition between two mor-
phemes across a word boundary and a dotted line
represents a transition between two morphemes in a
word.
The previous probabilistic POS models for ag-
glutinative languages have considered only lexical
forms of morphemes, not surface forms of words.
This causes an inaccurate calculation of the proba-
bility. The proposed model is based on the obser-
vation that when there exist words (surface forms)
that share the same lexical forms, the probabilities
to appear are different from each other. Also, it is
designed to consider lexical form of word. By ex-
periments, we show that the proposed model outper-
forms the bigram Hidden Markov model (HMM)-
based tagging model.
2 Korean POS tagging model
In this section, we first describe the standard
morpheme-unit tagging model and point out a mis-
take of this model. Then, we describe the proposed
model.
2.1 Standard morpheme-unit model
This section describes the HMM-based morpheme-
unit model. The morpheme-unit POS tagging model
is to find the most likely sequence of morphemes 
and corresponding POS tags  for a given sentence
 , as follows (Kim et al, 1998; Lee et al, 2000):
 




   
	 




 
	
 
	



 (1)
 




 
	
 
	
 (2)
In the equation, 	
	  denotes the number of
morphemes in the sentence. A sequence of  	



	 



  


is a sentence of  words, and a
sequence of  	 
	
	 



  
	
and a se-
quence of  	 
	
	 



   
	
denote a sequence
of 	 lexical forms of morphemes and a sequence of
	 morpheme categories (POS tags), respectively.
To simplify Equation 2, a Markov assumption is
usually used as follows:
   




	


 

 

  



 (3)
where, 

is a pseudo tag which denotes the begin-
ning of word and is also written as  .  de-
notes a type of transition from the previous tag to
the current tag. It has a binary value according to
the type of the transition (either intra-word or inter-
word transition).
As can be seen, the word1 sequence 


is dis-
carded in Equation 2. This leads to an inaccurate
1A word is a surface form.
na/NNP
na/VV
na/VX
nal/VV
neun/PX
neun/EFD
hag-gyo/NNC e/PA
ga/VV
ga/VX
gal/VV
n-da/EFF
n-da/EFC
BOS
EOS
Figure 1: Morpheme structure of the sentence ?na-neun hag-gyo-e gan-da? (I go to school)
calculation of the probability. A lexical form of a
word can be mapped to more than one surface word.
In this case, although the different surface forms are
given, if they have the same lexical form, then the
probabilities will be the same. For example, a lexi-
cal form mong-go/nc+leul/jc2 , can be mapped from
two surface forms mong-gol and mong-go-leul. By
applying Equation 1 and Equation 2 to both words,
the following equations can be derived:
 mong-go  leul  mong-gol
  mong-go  leul  (4)
 mong-go  leul  mong-go-leul
  mong-go  leul  (5)
As a result, we can acquire the following equation
from Equation 4 and Equation 5:
  mong-go  leul  mong-gol
	  mong-go  leul  mong-go-leul (6)
That is, they assume that probabilities of
the results that have the same lexical form
are the same. However, we can easily
show that Equation 6 is mistaken: Actually,
 mong-go  leul   mong-go-leul 	 

and  mong-gol   mong-gol 	 .
Hence,  mong-go  leul   mong-gol 
 mong-go  leul  mong-go-leul.
To overcome the disadvantage, we propose a new
tagging model that can consider the surface form.
2.2 The proposed model
This section describes the proposed model. To sim-
plify the notation, we introduce a variable R, which
means a tagging result of a given sentence and con-
sists of  and  .
 




    (7)
	 

    (8)
2mong-go means Mongolia, nc is a common noun, and jc is
a objective case postposition.
The probability     is given as follows:
    	  





 (9)
	




 




 

 (10)





 



 

 (11)
where, 

denotes the tagging result of th word
(

), and 

denotes a pseudo variable to indicate
the beginning of word. Equation 9 becomes Equa-
tion 10 by the chain rule. To be a more tractable
form, Equation 10 is simplified by a Markov as-
sumption as Equation 11.
The probability  



 

 cannot be calcu-
lated directly, so it is derived as follows:
 



 

 
 

 

 


 

 


(12)

 

 



 




 

 


(13)

 



 




 


(14)
  




 

 


 

 


(15)
Equation 12 is derived by Bayes rule, Equation
13 by a chain rule and an independence assumption,
and Equation 15 by Bayes rule. In Equation 15, we
call the left term ?morphological analysis model?
and right one ?transition model?.
The morphological analysis model  



 can
be implemented in a morphological analyzer. If a
morphological analyzer can provide the probability,
then the tagger can use the values as they are. Ac-
tually, we use the probability that a morphological
analyzer, ProKOMA (Lee and Rim, 2004) produces.
Although it is not necessary to discuss the morpho-
logical analysis model in detail, we should note that
surface forms are considered here.
The transition model is a form of point-wise mu-
tual information.
 

 


 

 



 

 



 


 

 

 

 


(16)

 


 





 



 


 


 


 



(17)
where, a superscript  in 

and 

denotes the
position of the word in a sentence.
The denominator means a joint probability that
the morphemes and the tags in a word appear to-
gether, and the numerator means a joint probability
that all the morphemes and the tags between two
words appear together. Due to the sparse data prob-
lem, they cannot also be calculated directly from the
test data. By aMarkov assumption, the denominator
and the numerator can be broken down into Equa-
tion 18 and Equation 19, respectively.
 

 

 	



 

 

 

 

 (18)
 


 





 


 




 






 







 
	






   












 








 









(19)
where, 





 


 means a transition probabil-
ity between the last morpheme of the 
th word
and the first morpheme of the th word.
By applying Equation 18 and Equation 19 to
Equation 17, we obtain the following equation:
 

 


 

 


	






 



 


 
(20)
For a given sentence, Figure 2 shows the bigram
HMM-based tagging model, and Figure 3 the pro-
posed model. The main difference between the
two models is the proposed model considers surface
forms but the HMM does not.
3 Experiments
For evaluation, two data sets are used: ETRI POS
tagged corpus and KAIST POS tagged corpus. We
divided the test data into ten parts. The perfor-
mances of the model are measured by averaging
over the ten test sets in the 10-fold cross-validation
experiment. Table 1 shows the summary of the cor-
pora.
Table 1: Summary of the data
Corpus ETRI KAIST
Total # of words 288,291 175,468
Total # of sentences 27,855 16,193
# of tags 27 54
Generally, POS tagging goes through the fol-
lowing steps: First, run a morphological analyzer,
where it generates all the possible interpretations
for a given input text. Then, a POS tagger takes
the results as input and chooses the most likely one
among them. Therefore, the performance of the tag-
ger depends on that of the preceding morphological
analyzer.
If the morphological analyzer does not generate
the exact result, the tagger has no chance to se-
lect the correct one, thus an answer inclusion rate
of the morphological analyzer becomes the upper
bound of the tagger. The previous works prepro-
cessed the dictionary to include all the exact an-
swers in the morphological analyzer?s results. How-
ever, this evaluation method is inappropriate to the
real application in the strict sense. In this experi-
ment, we present the accuracy of the morphologi-
cal analyzer instead of preprocessing the dictionary.
ProKOMA?s results with the test data are listed in
Table 2.
Table 2: Morphological analyzer?s results with the
test data
Corpus ETRI KAIST
Answer inclusion rate (%) 95.82 95.95
Average # of results per word 2.16 1.81
1-best accuracy (%) 88.31 90.12
In the table, 1-best accuracy is defined as the
number of words whose result with the highest
probability is matched to the gold standard over the
entire words in the test data. This can also be a tag-
ging model that does not consider any outer context.
To compare the proposed model with the standard
model, the results of the two models are given in
Table 3. As can be seen, our model outperforms the
HMM model. Moreover, the HMM model is even
worse than the ProKOMA?s 1-best accuracy. This
tells that the standard HMM by itself is not a good
model for agglutinative languages.
4 Conclusion
We have presented a new POS tagging model that
can consider the surface form for Korean, which
BOS EOSNNP
na
PX
neun
NNC
hag-gyo
PA
e
VV
ga
EFF
n-da
Figure 2: Lattice of the bigram HMM-based model
na/NNP+neun/PX hag-gyo/NNC+e/PA ga/VV+n-da/EFFBOS EOS
na-neun hag-gyo-e gan-da
Figure 3: Lattice of the proposed model
Table 3: Tagging accuracies (%) of the standard
HMM and the proposed model
Corpus ETRI KAIST
The standard HMM 87.47 89.83
The proposed model 90.66 92.01
is an agglutinative language. Although the model
leaves much room for improvement, it outperforms
the HMM based model according to the experimen-
tal results.
Acknowledgement
This work was supported by Korea Research Foun-
dation Grant (KRF-2003-041-D20485)
References
J.-D. Kim, S.-Z. Lee, and H.-C. Rim. 1998. A
morpheme-unit POS tagging model considering
word-spacing. In Proceedings of the 1998 Con-
ference on Hangul and Korean Information Pro-
cessing, pages 3?8.
D.-G. Lee and H.-C. Rim. 2004. ProKOMA:
A probabilistic Korean morphological analyzer.
Technical Report KU-NLP-04-01, Department of
Computer Science and Engineering, Korea Uni-
versity.
S.-Z. Lee, Jun?ichi Tsujii, and H.-C. Rim. 2000.
Hidden markov model-based Korean part-of-
speech tagging considering high agglutinativity,
word-spacing, and lexical correlativity. In Pro-
ceedings of the 38th Annual Meeting of the Asso-
ciation for Computational Linguistics.
