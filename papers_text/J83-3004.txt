Preference Semantics, III-Formedness, and Metaphor 
Dan Fass and Yorick Wi lks  
Cognitive Studies Centre 
University of Essex 
Wivenhoe Park 
Wivenhoe Park, Colchester 
Essex C04 3SQ England 
This paper is about the relationships between Preference Semantics (PS) and ill- 
formedness, and between Preference Semantics and metaphor. Two types of 
"preference", declarative and procedural, are distinguished. The PS framework is exam- 
ined with respect to notions of well- and ill-formedness, and two criteria for i l l-formedness 
are distinguished, both of which are possessed by PS: an absolute criterion that corresponds 
to conventional notions of well- and il l-formedness, and a relative criterion that does not. 
Four possible strategies are described for representing ill-formed input in general, and 
metaphors in particular. The strategies and the semantic representations produced by them 
are compared regarding their correspondence to human understanding (admittedly superfi- 
cial given the shallowness of the PS representation) and their ability to produce correct 
sentence translations. We conclude that, because of the ambiguity of many individual and 
extended metaphors, two broad types of metaphor representation strategy are needed. A 
control mechanism is described that uses both these major types of strategy and that 
permits the temporary semantic representation of metaphorical ambiguity. 
0. Introduction 
We use the term "Preference Semantics" (PS) to indi- 
cate not programs that have parsed English into a 
semantic representation, or the details of that seman- 
tic representation (all of which could have been differ- 
ent), but rather the underlying principles. The main 
principles or claims are as follows (and underlie the 
sequence of papers Wilks 1968, 1973, 1975, 1978). 
The last two will be of most concern to us here: 
a) It is possible to pass from English to a semantic 
representation without a module devoted explicit- 
ly to syntactic analysis, and without traditional 
syntactic classification of words or sentence com- 
ponents (for example, N, NP, VP). The necessary 
generalisations for parsing can all be expressed in 
the terms needed for the semantic representation. 
Moreover, these need not result in any kind of 
text "skimming" that misses essential features of 
the text and its content. 
b) The representation need not be of the model the- 
oretic type, and the classic problems of quantifi- 
cation, etc., can be dealt with by special proce- 
dures. 
c) The description of the representat ion and the 
procedures that generate it should all be proce- 
dural and, most important,  the representat ion 
should be the product of a few, general, and au- 
tonomous (not content-dependent)  procedures. 
Moreover,  the procedures should be consistent 
with a Least Effort principle of language under- 
standing (Wilks 1975). 
d) The representation is based on a set of semantic 
primitives, of differing types (actions, substan- 
tives, qualities, etc.), but no claims are made that 
the set is universal: there could be many alterna- 
tive sets for special tasks, domains, or cultures. 
All that is required is there be some privileged set 
to generate a representation. 
e) The representat ion emphasises the linear, rather 
than the recursive, propert ies of language: its 
structure therefore emphasizes linear boundaries 
of clauses and phrases (but with no special role 
for sentences) as a basis for a surface representa- 
tion from which progressively deeper representa- 
tions can be obtained by inference. The repre- 
Copyright 1984 by the Association for Computational Linguistics. Permission to copy without fee all or part of this material is granted 
provided that the copies are not made for direct commercial advantage and the Journal reference and this copyright notice are included on 
the first page. To copy otherwise, or to republish, requires a fee and/or  specific permission. 
0362-613X/83/030178-10503.00 
178 American Journal of Computational Linguistics, Volume 9, Numbers 3-4, July-December 1983 
Dan Fass and Yorick Wilks Preference Semantics, III-Formedness, and Metaphor 
sentational item corresponding to the piece of 
language between two such boundaries (whether a 
word or a sentence) we call a template, which is a 
complex structure (see below) having no associa- 
tions with the term as used to denote a string of 
surface items, as in vision analysis. 
f) The representation is formed upon a principle of 
preference for the "best  fit": thus, there is no 
single correct representation (except in special 
circumstances) for a text string, but the best, 
most internally coherent representation, chosen 
from among competing representations. Represen- 
tational structures can be seen as "preferr ing" 
other associated representations, and an overall 
representation for a text is produced by allowing 
maximal satisfaction of such preferences, which 
will mean (as in the political analogy on which 
the notion is based) that some constituent repre- 
sentations do not have their local preferences at- 
isfied. 
g) The last representational principle has a correlate 
at the level of text relationships: i l l -formedness 
(and, we shall claim below, metaphor)  is not a 
binary, yes-no, matter but a function of repre- 
sentational satisfaction, which includes being a 
function of the state of the dictionary for the 
words and higher level items constituting the text. 
To put it crudely, i l l -formedness is a matter of 
what the analysis system believes the dictionary 
and state of the world to be, and how far it can 
be extended by rule with the aid of the knowledge 
structures available. To use an example from 
Wilks (1978) 
(1) The car drank gasoline 
will be ill-formed or not, depending on what you 
believe about drinking and about cars (thus cross- 
ing what would be, for many, a semantic- 
pragmatic boundary), and similarly for 
(2) John ran a mile 
depending on beliefs about running and distance 
(and so similarly for the so-called syntax- 
semantics distinction and the class of "intransitive 
verbs").  
It is part of principle (a) above that preference is a 
syntactic notion as well as a semantic notion in that 
one general rule can deal with both sorts of conven- 
tionally distinguished phenomena. Thus (2) is ill- 
formed just because \[run\] prefers no object, just as 
\[believe\] prefers a propositional object (a full template 
in the terms set out below) but will accept a human 
object nevertheless. However, in this short paper we 
arbitrarily restrict ourselves to phenomena that would 
conventionally be considered matters of word-sense 
semantics. 
On this view, much of what has often been thought 
of as i l l-formed - particularly violations of Katzian 
selection restrictions (Katz and Postal 1964) - is not 
only not il l-formed but is typical of normal usage, and 
must not be rejected if it can be accommodated by the 
procedures of PS. The emphasis here is rather differ- 
ent from the standard one: on the PS view, the viola- 
tion of preferences (such as those of drink for an ani- 
mate agent or a liquid object) is the norm, and must 
not be treated as an exceptional matter, outside the 
core of English. Such locutions are statistically so 
normal and understood even when wholly novel, that 
their representation and processing must he performed 
as part of the central processes of a language under- 
stander. 
Some of the above points can be found incorporat- 
ed in other language understanding systems, for exam- 
ple Schank and his associates (Schank 1975) for (a) - 
except for their predilection for NPs - (b), (d) - ex- 
cept for their insistence on a universal set of primitives 
- and more recently (e). For (b) almost any classical 
example semantic net system (Simmons 1973, Hendrix 
1975). What we shall do here is develop the last two 
principles towards a general theory of the understand- 
ing of il l-formed and metaphorical language. 
The concrete setting of our current research is the 
construction of a semantics/knowledge-based pelling 
corrector, but we shall not emphasise that here. 
1. A Br ie f  Resume of  the  P re ference  Semant ics  
Sys tem 
The following terminology will be useful: a semantic 
formula is a representation of a word-sense; it con- 
tains a head, which represents the "main element" in 
the sense - for example, whether a noun refers to a 
MAN or a THING, or whether a verb denotes an act of 
THINKing, or of DOing. Its internal structure is of 
left-right dependency. 
The following is a simplified semantic formula for 
the action drink: 
(3) ((*ANI SUBJ) (((FLOW STUFF) OBJE) 
(MOVE CAUSE))) 
Reading the formula for drink, it is an action, prefer- 
ably done by animate things (*ANI SUBJ) to liquids 
((FLOW STUFF) OBJE). The SUBJ case displays the 
preferred agents of actions, and the OBJE case the 
preferred objects, or patients. 
A template is a structure, based on slots for three 
semantic formulas that can themselves have dependent 
formulas, such that the whole structure represents a
possible "message".  A template can have any number 
of formulas (from one to any). Each fragment of a 
sentence (clause or phrase) has templates matched 
onto it during parsing and the existence of more than 
one template per fragment is representational mbigui- 
ty, to be reduced by examining the internal " f i t"  of 
American Journal of Computational Linguistics, Volume 9, Numbers 3-4, July-December 1983 179 
Dan Fass and Yorick Wi lks Preference Semantics, III-Formedness, and Metaphor  
templates, and the external relations between tem- 
plates for successive fragments of text. 
The formulas in each template are determined to 
see if their preferences are satisfied. In what follows, 
\[square brackets\] denote the formula for a word. So, 
for example, \[crook (man)\] denotes the formula for 
the human sense of the word crook. 
The sentence 
(4) The policeman interrogated the crook 
will produce two candidate interpretations, which are 
templates of formulas, written left to right, filling its 
action-agent-object slots 
\[policeman\] \[interrogated\] \[crook (man)\] 
\[policeman\] \[interrogated\] \[crook (thing)\]. 
So, we have two possible template representations 
(that is, two possible readings) for the sentence. 
The template expansion algorithm seeks to resolve 
this: it looks into subparts of the formulas to see if 
any preferences are satisfied. \[interrogate\] prefers a 
human actor; this is marked in both representations. 
It also prefers a human object: \[crook (man)\] can 
satisfy this preference, but \[crook (thing)\] cannot. 
So we have (in the following, -~ or *- represents 
satisfied preferences) 
(4a) \[policeman\] -- \[interrogates\] *- \[crook (man)\] 
(4b) \[policeman\] -~ \[interrogates\] [crook (thing)\] 
The first of these has the larger number of satisfied 
preferences, or greater "semantic density", so it is 
preferred. The template representation chosen here, 
the one with the highest semantic density, has full 
preferential links between every pair of formulas. 
In the case of a sentence like (1) that contains a 
failed preference (whether or not it is metaphor, for 
example The VDU interrogated the crook), the first 
reading is accepted because there are no other compet- 
ing readings. 
2. Three Types of Dictionary Information 
The semantic information in dictionary entries 
(formulas) can be categorised into three types, which 
will be exemplified in the semantic formula for drink 
(3). 
(i) Inherent information: "data" 
The semantic properties that a dictionary en- 
try contains specifically about the item itself. 
In a semantic formula, the main example of 
this is its head primitive(s), for example 
(MOVE CAUSE). 
(ii) Label information: "labels" 
Case information describing the case rela- 
tionships between a dictionary entry and oth- 
er dictionary entries. Label information ex- 
ists in the case subparts of semantic formulas 
as case primitives like SUBJ (to be interpret- 
ed as AGENT) in (*ANI SUBJ), and OBJE in 
((FLOW STUFF) OBJE). 
(iii) Contextual information: "expectations" 
The inherent semantic information that a dic- 
tionary entry expects other dictionary entries 
to possess as inherent information. Like la- 
bel information, contextual information exists 
in the case subparts of semantic formulas as 
semantic primitives or subformulas like *ANI 
and (FLOW STUFF). 
When disambiguating word-senses, all three types 
of information are used. In section 1 above, we saw 
how the template expansion algorithm resolved (4): 
\[interrogate\] prefers a human object, where "object"  
is label information, and "human" is contextual infor- 
mation. \[crook (man)\] satisfies this preference be- 
cause its head primitive - inherent information - is 
human. 
We wish to distinguish dictionary entries that con- 
tain semantic ontextual information and those that do 
not: 
? predicates 
Contextual information occurs in the semantic 
formulas for verbs, adjectives, nominalised 
verbs, and idioms (Wilks 1975, Boguraev 1979). 
Dictionary entries for prepositions, called para- 
plates (Wilks 1975) or preplates (Boguraev 
1979), larger structures that tie templates to- 
gether and have the function of inference rules, 
also contain contextual information because 
they specify the semantic class of head noun or 
verb being modified and the head noun of modi- 
fying prepositional phrase, but they are outside 
the scope of discussion here. 
? non-predicates 
Simple nouns like table, car, and chopper, which 
do not contain contextual information in their 
semantic formulas at the top level (that is, \[car\] 
might contain coding that humans use cars to 
achieve a goal, but that would not appear at the 
top level of the "goals of cars"). 
By "predicate"  we mean specifically dictionary 
entries containing semantic contextual information at 
the top level, and not the more general use of the 
term. 
3. Two Types of "Preference" 
This section examines the notion of preference and 
makes an important distinction between a declarative 
and a procedural version of preference (Fass 1983). 
3.1. Preference-as-restriction 
A preference is (dictionary) information in a semantic 
formula expressing some kind of restriction on the 
semantic context in which a word-sense can occur. 
180 American Journal of Computat ional  Linguistics, Volume 9, Numbers 3-4, Ju ly-December 1983 
Dan Fass and Yorick Wilks Preference Semantics, III-Formedness, and Metaphor 
Two observations: 
Preferences-as-restr ict ions are binary. 
A preference is either satisfied or violated: it 
cannot be partially satisfied. This is because of 
the organisation and generality of PS semantic 
primitives, which are hierarchically organised 
but only at two levels of generality. For exam- 
ple, the "class element" primitive *ANI includes 
the class of primitives (BEAST, MAN, FOLK, 
SIGN, or THIS), that is, any animate entity. 
There can be no partially satisfied preferences 
with the present set of primitives, as would be 
the case if BEAST could satisfy a preference for 
MAN because both are in the class *ANI. 
A preference is a piece o f  contextual  information.  
Although a preference coding occurs within a 
case subpart of a formula, the corresponding 
label information is not part of that preference. 
As preferences-as-restr ict ions are contextual, it is 
only predicates that have them in PS. But if 
preferences-as-restrictions referred instead to inherent 
information, then non-predicates would also have pref- 
erences. Consider the helicopter meaning of the word 
chopper, whose formula has the head primitive THING 
(that is, physical object). If a preference described 
inherent information, then we could view choppers as 
preferr ing to be THINGs but not having to be THINGs. 
We shall consider just this in section 6. 
3.2. P re ference-as -procedure  
Preference is viewed as a procedure for assigning 
scores to competing alternative representat ions and 
choosing the best one. In PS, preference-as-procedure 
uses as its criterion for choosing between competing 
sentence readings the number of preferences-as- 
restrictions that are satisfied. 
The four key elements of preference-as-procedure 
are: 
? product ion - it produces all sentence readings 
whether or not they contain preference viola- 
tions; 
? scoring - readings are scored according to how 
many preference satisfactions they contain; 
? comparison - whether or not an individual read- 
ing is accepted depends on a comparison with 
other readings; 
? selection - the best reading (that is, the one with 
the most preference satisfactions) is taken, even 
if it contains preference violations. 
By choosing the best available, preference-as-  
procedure as a single procedure has two ef fects  when it 
operates: it disambiguates word-senses and at the same 
time provides system robustness (that is, a sentence 
reading is always returned). 
It should be emphasised that preference-as-  
procedure is a general strategy, used to provide disam- 
biguation and robustness at many different levels in 
the PS system, not just with preferences-as- 
restrictions. The two types of preference are separa- 
ble from each other: preferences-as-restrictions can be 
used by other procedures, and preference-as-procedure 
can be used with other types of dictionary informa- 
tion. 
4. The Pre ference  Semant ics  Sys tem and I l l -  
Formed Input  
4.1. P re ference  Semant ics  and i l l - formedness 
We can best understand a Preference Semantics ap- 
proach to i l l -formedness by comparing it with Katz 
and Postal 's (1964) semantic markers/select ion re- 
striction approach. Katz and Postal's approach em- 
bodies a binary principle of semantic well-formedness 
similar to that assumed in standard generative syntax: 
well-formed and ill-formed. 
A selection restriction is binary - a semantic mark- 
er either fits a selection restriction or it does not. 
Preferences-as-restrictions, as they appear in semantic 
formulas, are also binary (and equivalent o selection 
restrictions): a semantic class either satisfies a prefer- 
ence or it does not. With the binary principle, there is 
an absolute criterion for i l l -formedness: a semantic 
relation can be labelled il l-formed by examining that 
relation alone, without looking at any others. 
At the level of the constituent or sentence, 
preference-as-procedure is different from a selection 
restrictions approach. This should be clear if we ex- 
amine a selection restrictions approach using the same 
four elements we used for preference-as-procedure: 
? product ion - only those sentence readings with 
all their selection restrictions fulfilled are pro- 
duced; 
? scor ing -  there are only two scores - (i) "well- 
formed":  all selection restrictions fulfilled, or 
(ii) " i l l - formed":  one or more restrictions are 
violated; 
? compar ison - none. Readings are conSidered 
individually, without comparison against other 
readings; 
? selection - the sentence reading with all selection 
restrictions fulfilled is taken, if such exists. 
The preference approach adopts a different, unary 
principle of " formedness".  If a preference in a sen- 
tence is violated, then a reading is sti l l  produced for 
that sentence, so being " formed"  is like being well- 
formed in the selection restrictions ense. 
But whether that (preference violating) reading is 
accepted as if it was well-formed, or rejected as if it 
was il l-formed, depends on whether there are other 
possible readings for that sentence and on the nature 
of these readings: 
? The reading is accepted if either there are no 
other readings for the sentence or if all the oth- 
er readings for the sentence have more prefer- 
American Journal of Computational Linguistics, Volume 9, Numbers 3-4, July-December 1983 181 
Dan Fass and Yorick Wi lks Preference Semantics, III-Formedness, and Metaphor 
ence violations. In such situations, the PS sys- 
tem assumes that the writer meant to produce 
the reading, that is, that it is some novel use of 
language (for example, metaphor) and is well- 
formed. 
? The reading is rejected if there is another eading 
for the sentence that has fewer preference viola- 
tions. However, being rejected in this way is 
probably not tantamount o being i l l -formed 
because, in some other circumstances, entences 
containing a preference violation (like the re- 
jected reading) could be accepted as the best 
available. 
If all the preferences are fulfilled in a reading of a 
constituent, then, although the const i tuent /sentence 
may be "wel l - formed" in the selection restrictions 
sense, that reading may not necessarily be accepted. 
This is because there may be another reading of the 
same sentence that also has all of its preferences satis- 
fied and is equally acceptable. 
So, the difference between PS and Katz and 
Postal's approach is at the procedural level. With the 
unary principle of PS, the criterion for i l l-formedness 
is relative: a reading can only be labelled " i l l - formed" 
after comparing it with other readings, and not by ex- 
amining that reading alone, which is why preference- 
as-procedure produces all readings, whether or not 
they contain preference violations. 
So, we have distinguished two criteria for ill- 
formedness: absolute and relative. Within PS, the 
criterion of absolute i l l -formedness is used for the 
semantic relations between individual word-senses 
(3.1.), and relative il l-formedness for readings of con- 
stituents of sentences (3.2.). 
4.2. The nature of preference violations 
Preference violations between two words can be 
caused either by some " tota l "  mismatch of word- 
senses, as between \[interrogates\] and \[crook (thing)\] 
in (4b); or by some metaphorical relation, as there is 
between \[car\] and \[drink\] in (1) The car drank 
gasoline. Examining the preference violation itself 
does not reveal its nature; we can only discover the 
type of preference violation by examining competing 
readings (if any), which is what preference-as-  
procedure does. If all the other readings have more 
preference violations, then the reading containing the 
single preference violation is assumed to be appropri- 
ate and a metaphor. 
However,  we can produce sentences containing a 
metaphor in which examining the alternative sentence 
readings cannot help establish what type of preference 
violation we have. Consider the sentence 
(5) That chopper drinks gasoline 
which contains a metaphor (Van Eynde 1982). 
There are two readings of the sentence, based on 
the ambiguity of chopper as either "ax"  or 
"helicopter". The two template representations are: 
(Sa) \[chopper (helicopter)\] \[drinks\] --- \[gasoline\] 
(5a) \[chopper (ax)\] \[drinks\] --- \[gasoline\] 
Both \[chopper (helicopter)\] and \[chopper (ax)\] have 
the semantic head THING (physical object), and both 
violate the preference of \[drink\] for an ANIMATE 
agent. In this example, the PS system cannot discrimi- 
nate between the two sentence readings - one contain- 
ing mismatched word-senses (5b), the other containing 
a metaphor (5a) - in terms of their number of satis- 
fied preferences. So it is unable to decide which read- 
ing is metaphorical (and appropriate). 
Because a preference violation locates failed se- 
mantic relations, we can try to determine whether or 
not that violation is caused by a metaphor by applying 
additional semantic information there. In the next 
section we consider the sort of semantic information 
necessary to resolve (5) and one suggested way of 
representing that information. 
5. Semantic Information about Metaphor 
Van Eynde (1982) has pointed out that the standard 
PS system cannot choose the correct reading from 
templates (5a) and (5b) above. He suggested a set of 
rules, polysemy rules, that can recognise one of the 
violations as being caused by a metaphor and choose 
the correct reading. 
Polysemy rules are applicable to metaphors involv- 
ing a predicate and a non-predicate; they can be used 
not only to choose between readings like (5a) and 
(5b) but also to confirm that a single reading produced 
for a sentence like (1) is a metaphorical one. Meta- 
phors between two non-predicates, for example "This 
encyclopaedia is a gold-mine (Rumelhart 1979), are 
excluded from consideration in this paper. 
It is very important o divorce two issues concern- 
ing PS and metaphor:  first, ways of recognising and 
choosing a reading containing a metaphor,  that is, 
polysemy rules, described in section 5.1. below; sec- 
ond, possible strategies for representing that metaphor-  
ical reading, described in section 6. Polysemy rules 
can be combined with a number of those strategies. 
5.1. Polysemy rules 
What is essential first of all is to provide additional 
semantic information to distinguish the vehicle sense 
from the ax sense of chopper. Van Eynde introduces a 
new primitive VEHICLE, which he uses as head primi- 
tive of the vehicle sense of chopper. 
A polysemy rule looks like this: 
(6) condition: certain environmental data, such as: 
A is the AGENT slot of a template 
and B is an action in the ACTION 
182 American Journal of Computational Linguistics, Volume 9, Numbers 3-4, Ju ly-December 1983 
Dan Fass and Yorick Wilks Preference Semantics, III-Formedness, and Metaphor 
slot of the same template. Subject 
preference of B --- ANIMATE. Head 
primitive of A = VEHICLE. 
assignment: Head primitive of A := ANIMATE. 
The format of the above we take to be self-evident. 
The rule would normally be understood to run its as- 
signment whenever the condition is satisfied. On a 
historical note one can compare polysemy rules with 
the very general dictionary extension rules of Givon 
(1967). 
The effect of this particular ule is to change data, 
that is to alter the head primitive of the helicopter 
sense of chopper. Note that, with rules of this type, 
the assignment can either 
? change the data by modifying the inherent semantic 
information in the non-predicate (thus making it 
animate), so that the unchanged semantic formula 
for drink (preferring an animate agent) will still 
pick out this reading; or, 
? alternatively, one could change the expectations, 
modifying the semantic formula for drink (the 
predicate), so that it accepts vehicular agents as 
second best to genuinely animate ones; or, 
? one could modify \[drink\] more radically, by  chang- 
ing its inherent data (see below); or, 
? we could just leave both formulas unchanged. 
We will consider these four alternatives in section 6. 
5.2. Discussion 
The first point to note is that polysemy rules alone do 
not provide a means of recognising the initial conflict 
between chopper and drinks, and does not provide a 
means of selecting the sentence reading containing the 
correct sense of chopper. Thus, polysemy rules cannot 
operate on their own but only within some more gen- 
eral word-sense disambiguation mechanism such as PS, 
in some such way as the following: for sentence (5), 
only after the template expansion algorithm of PS has 
produced the two readings (5a) and (5b) can polysemy 
rules be applied to the non-predicate involved in the 
preference violation, and the template expansion al- 
gorithm tried again. One of the readings for the sen- 
tence will now have no preference violations 
(5c) \[chopper (helicopter)\] --,- \[drinks\] --- \[gasoline\] 
and is accepted. 
In the foregoing (5.1.), we have embedded Van 
Eynde's polysemy rule (6) within some general PS 
environment for making choices between readings 
after (6) has altered the available readings. It was 
necessary to do this because, as we pointed out, the 
rule alone does not specify how to select readings. 
Moreover, Van Eynde sees rules like (6) as operating 
within a production system. If that production system 
was uncontrolled, then such rules would run whenever 
their conditions were satisfied. The control regime for 
those rules is hard to imagine, and would certainly be 
very complex. 
6. The Representat ion  of Metaphor  and Ill- 
Formed Input 
In this section we describe and compare four strategies 
for representing ill-formed input in general and meta- 
phors in particular, in semantic representations. It is 
assumed that a process with the power of that de- 
scribed in section 5 above has located a preference 
violation or "semantic conflict" and recognised it as 
being a metaphor. 
6.1. Four s t rateg ies  for  the  representat ion  of 
metaphor  
We will illustrate these strategies using sentence 
(1) The car drank gasoline 
though we could also have considered reading (5a) of 
sentence (5) as an example. The best reading for (1) 
has a conflict between the expectation of the predicate 
\[drink\] expecting an animate agent as subject and the 
data in the non-predicate because the actual subject 
(the car) is inanimate. If we built a semantic repre- 
sentation of this sentence, then the conflict would 
remain in the representation. 
Obvious strategic hoices are: 
(i) Passive strategy 
Relax the preference of the predicate and accept 
the semantic representation with the conflict un- 
resolved (Wilks 1975); at no point are data or 
expectations changed, and the analysis system 
simply accepts the representation it is given. 
(ii) CTD, or Change The Data, strategy 
Change the inherent data in the non-predicate in 
such a way that it meets the expectations (Van 
Eynde 1982). So, in sentence (1) alter the data 
and replace the head primitive VEHICLE in \[car\] 
by the primitive ANIMATE in the semantic repre- 
sentation. This is one top-down (expectation 
driven) approach: in the case of conflict between 
what you have and what you expect, change what 
you have and be guided by your expectations. 
(iii) CTE, or Change The Expectations, trategy 
Change the expectations in the predicate in such 
a way that they meet the data (Van Eynde 1982). 
So, for sentence (1) alter its semantic representa- 
tion by changing the expectation that the subject 
of \[drink\] must be ANIMATE to VEHICLE 
(iv) Active strategy 
A more radical approach, explored in Wilks 
(1978), would produce a completely new formula 
\[drink\] by rule and equivalent to \[consume\], mod- 
ifying inherent and expectational data, so as to 
accept an animate agent (car). This approach 
uses the wider context of frame-like representa- 
tions, called pseudo-texts, in addition to semantic 
American Journal of Computational Linguistics, Volume 9, Numbers 3-4, July-December 1983 183 
Dan Fass and Yorick Wilks Preference Semantics, III-Formedness, and Metaphor 
formulas. At its crudest the method consisted of 
finding particular facts (when faced with (1)) 
about cars in its frame-like data base such that 
cars did operate on gasoline in a manner semanti- 
cally related to drinking. The only fact located 
was "cars consume gasoline" and so a \[drink\] had 
a new representation added, namely the appropri- 
ate formula from the dictionary entry for 
\[consume\]. This is a top-down, knowledge-driven 
approach, but cannot be termed CTE or CTD 
since no formula of drink is modified but a new 
one slotted into the templates for that particular 
i l l-formed locution. We shall compare this method 
with the others above, that need less detailed and 
cumbersome context than frame methods and are 
more narrowly semantic. 
6.2. Comparison of the four strategies 
The strategies are compared in two ways. First, the 
degree to which the semantic representations contain- 
ing metaphors produced by the different strategies 
correspond to human understanding of those meta- 
phors. Given the shallowness of a PS representation, 
that correspondence can be no more than superficial. 
Secondly, whether or not the semantic representations 
of the different strategies would assist in concrete 
computational tasks, such as producing correct transla- 
tions. 
Most, if not all, individual metaphors can be read 
or understood in two ways. For example, the meta- 
phor in (1) can be understood either by viewing the 
predicate drink as the car-like consuming of petrol, or 
by seeing the non-predicate car as having some human 
properties. Within PS, the CTE strategy and the active 
strategy reflect the first, predicate reading by altering 
semantic information in the predicate; the CTD strate- 
gy reflects the second, non-predicate reading by 
changing inherent information in the non-predicate. 
No single strategy reflects both readings. By leaving 
the preference violation in the semantic representation, 
the passive strategy does not reflect either reading and 
does not reflect human understanding of metaphor at 
all. 
In extended metaphors (those beyond a single 
clause), the initial metaphorical reading can be carried 
over in either the non-predicate or the predicate. 
Consider the following extended metaphors that are 
also cases of gapping (Hankamer 1973): 
(7) The car drank gasoline and (the car) purred to 
itself 
(8) The car drank gasoline and the taxi (drank) 
diesel 
In (7), the metaphorical usage of the non-predicate car 
is continued; in (8), it is the predicate drink. 
We now examine how closely the strategies of 6.1. 
reflect our understanding of extended metaphors like 
(7) and (8). To do this, we shall assume a simplified 
form of rules for filling dummy template nodes (Wilks 
1975). Those more familiar with Chomsky (1977) can 
think of this in terms of a form of trace mechanism in 
which the trace node in the template representing the 
second clause inherits information from the controlling 
node in the first clause. Hence in (7) the formula of 
car will be inherited by the empty agent node in the 
template containing \[purr\]. 
Let us consider (7) first. What happens when each 
strategy encounters \[car\] and \[drink\] in the first clause 
of the sentence, and then encounters \[car\] inherited 
from the first template and \[purr\] in the second 
clause? 
When the CTD strategy encounters \[car\] and 
\[drink\], it removes the preference violation between 
them by reassigning VEHICLE as ANIMATE in the 
non-predicate \[car\]. This modified formula of \[car\] is 
inherited from the first template; \[purr\] expects an 
animate SUBJ and \[car\] is now ANIMATE, so there is 
no preference violation between them. 
The CTE strategy removes the preference violation 
between \[car\] and \[drink\] by changing the SUBJ pref- 
erence of the predicate \[drink\] from ANIMATE to 
VEHICLE. \[car\] is unchanged and is inherited un- 
changed. Because \[car\] is still marked as inanimate, 
there is a preference violation with purr, which causes 
the CTE strategy to alter the SUBJ preference of \[purr\] 
to VEHICLE. 
The passive strategy does not change either \[car\] or 
\[drink\], leaving the preference violation between them. 
A second preference violation is left in the second 
clause as well. 
With the active strategy, a car-frame (or pseudo- 
text) is used, and \[drink\] would have a new consume 
sense and there would be no effect on \[car\]. Hence, 
the frame would be accessed again for the second 
clause, but would either find no new sense for purr in 
the limited context of to itself (which would become 
just a passively accepted, though preference-violating, 
template) or it could hope to re-apply the active strat- 
egy and find from the car frame that the only noise 
cars were noted as making (other than in conditions of 
trouble where they would backfire, etc.) was hum, 
which could be imposed in place of \[purr\], and would 
be confirmed by a causal inference from the beneficial 
effect of \[consume gasoline\]. However, this might be 
difficult to embody in a serious knowledge representa- 
tion since there is no non-metaphorical description-in 
English of the noise of cars. 
So for (7) the active and passive strategies both 
leave preference violations in the second clause. The 
CTE and CTD strategies do not, but of these two, the 
CTD strategy more closely reflects human understand- 
ing. 
184 American Journal of Computational Linguistics, Volume 9, Numbers 3-4, Ju ly -December 1983 
Dan Fass and Yorick Wilks Preference Semantics, III-Formedness, and Metaphor 
Now let us examine (8), The car drank gasoline and 
the taxi diesel. When processing (8), the CTD strategy 
changes semantic information in the non-predicate 
\[car\]. \[drink\] is unchanged and is inherited unaltered 
by the second template. \[taxi\] is inanimate, but 
\[drink\] expects an animate subject, so there is a pref- 
erence violation, which will cause the semantic infor- 
mation in \[taxi\] to be changed in its turn. 
The CTE strategy will change the SUBJ preference 
of the predicate \[drink\] to VEHICLE. This modified 
version of drink is then inherited by the second tem- 
plate. As \[taxi\] is a VEHICLE, there is no preference 
violation between \[drink\] and \[taxi\]. 
The passive strategy changes neither set of infor- 
mation, which leads to preference violations in both 
clauses. The active strategy would construct a new 
consume sense for \[drink\] that would be inherited by 
the action node of the second template. As \[taxi\] is a 
VEHICLE, there would be no preference violation 
between \[taxi\] and the new sense of drink. 
In (8), where the metaphorical usage continued in 
the predicate, the CTE and active strategies most 
closely reflect human understanding because both have 
the effect of changing the predicate's expectations of 
, its subject. However, in (7), where the metaphorical 
usage continued in the non-predicate, the CTD strate- 
gy was best because it changed the inherent data in 
the non-predicate. 
If we take the production of correct translation as a 
min imum constraint on interpretation strategy, then 
the changes the four strategies make to semantic rep- 
resentations are important because the effect of one 
strategy can be to produce a correct translation while 
another can cause a mistranslation. 
Consider 
(9) The car drinks gasoline and (the car) does not 
work well 
where the metaphor in the first clause does not extend 
to the gapped second clause. Assuming a node inher- 
itance mechanism once again, \[car\] will be inherited in 
the second clause. 
If the non-predicate \[car\] is inherited unaltered, 
then that sentence is translated correctly as La voiture 
boit de l'essence t ne march pas bien because marcher, 
the appropriate translation of work, expects an inani- 
mate subject. It is because they leave \[car\] unchanged 
that the passive, CTE, and active strategies all produce 
the correct translation of (9). 
However,  the CTD strategy reassigns \[car\] as 
ANIMATE, and this modified formula of car is inherit- 
ed into the second template. The effect of this is to 
translate the sentence wrongly as La voiture boit de 
l'essence t ne travail pas bien because travailler, anoth- 
er translation of work, expects an animate subject. 
(9) is not meant to be taken as decisive evidence in 
favour of the CTE strategy or the frame-based active 
strategy. We are sure that sentences can be found 
where altering the predicate's emantic information 
would cause mistranslations, where only the CTD or 
passive strategy would produce correct translations 
(there are probably sentences for which the passive 
strategy would produce mistranslations too): a strategy 
that produces a correct translation for one sentence 
may well mistranslate another. It is not possible to 
pursue these possibilities in detail here because it 
would involve too much detail of the mechanisms by 
which a translation equivalent in the target language is 
located - for example, by a full semantic matching as 
in the MARGIE system (Schank et al 1973), or from a 
prior guidance to possible target equivalents, as in 
Wilks (1973). That degree of detail would change the 
emphasis of this paper, in which translation is no more 
than a minimum condition that semantic strategies 
dealing with il l-formedness must meet. 
Because individual metaphors are ambiguous, that 
is, can be read or understood in two directions, no one 
strategy is adequate. The passive strategy is totally 
unsatisfactory. Strategies that alter the semantic in- 
formation of non-predicates (CTD strategy) are inap- 
propriate for predicate readings of individual meta- 
phors and for extended metaphors that continue a 
predicate reading such as the one in sentence (8). 
Equally, we cannot have only strategies that alter the 
semantic information of predicates (CTE or active 
strategy) because of both non-predicate readings of 
individual metaphors and extended metaphors continu- 
ing a non-predicate reading like (7). 
As a result of the preceding comparison of strate- 
gies in terms of correspondence to human understand- 
ing and production of correct translations, it is clear 
that both strategies that change expectations and 
strategies that change data are needed. Since both 
these major types of strategy are fallible, how will the 
proper strategy be selected? 
In the next section we propose a control mecha- 
nism using both types of strategy that makes the cor- 
rect selections (in terms of human understanding and 
accurate translations above), that is, it allows individu- 
al metaphors like the one in (9) to be represented by 
both types of strategy, selects the CTE strategy for 
examples uch as (8), the CTD strategy for those such 
as (7), and no strategy at all for sentences like 
(10) The cat drank milk and the dog (drank) water 
that do not contain metaphor. 
6.3. Cont ro l  o f  the  s t ra teg ies  
In this section we consider only single representative 
examples of a strategy that changes expectations and 
one that changes data: these will be the CTE and CTD 
strategies. We limit our demonstration of the control 
mechanism to the sentences of 6.2. containing a gap- 
American Journal of Computational Linguistics, Volume 9, Numbers 3-4, July-December 1983 185 
Dan Fass and Yorick Wi lks Preference Semantics, III-Formedness, and Metaphor 
ped clause - that is, (7), (8), (9), and (10) - though 
we believe it to be generally applicable. 
We shall deal with the case of no metaphor first. If 
no metaphor is found in the first clause, as in (1), then 
a single template with the largest number of prefer- 
ences is chosen in the normal way (see section 1). 
If, as in (7), (8), and (9), a metaphor is encoun- 
tered in the first clause, then both major types of 
strategy are applied, producing two competing tem- 
plates for the clause representing metaphorical ambi- 
guity, that is, the two possible readings of the meta- 
phor (data and expectations important o the metaphor 
are included below): 
(1 la) \[car (VEHICLE)\] ~ \[drinks (SUBJ 
VEHICLE)\]* .*- \[gasoline\] 
( l ib )  \[car (ANIMATE)\]* -~ \[drinks (SUBJ 
ANIMATE)\] --- \[gasoline\] 
Any semantic formula whose semantic information has 
been altered is marked by the control mechanism 
(indicated above by an *). The template ( l l a )  pro- 
duced by the CTE strategy has an altered predicate 
\[drink\]; the template ( l ib )  produced by the CTD 
strategy has an altered non-predicate \[car\]. 
If the second clause is a case of gapping, then the 
dummy node in the second template is analysed. If 
there is a single (unmarked) template representing the 
first clause, then the first clause did not contain a 
metaphor and the dummy node in the second template 
inherits the semantic formula from the controlling 
node in the first template in the way described earlier 
(section 6.2.). Hence, for (10), \[drink\] is inherited. 
If there are two (marked) templates representing 
the first clause, as with ( l l a )  and ( l lb ) ,  then a meta- 
phor is present. Though the mechanism also operates 
if the dummy node in the second template is a predi- 
cate (as in (8)), let us suppose that the missing node is 
a non-predicate, as in (9) The car drinks gasoline and 
does not work well or (7). 
To allow for individual metaphors like (9), the 
control mechanism assumes that the metaphor in the 
first clause has not been continued in the second: an 
unaltered version of the non-predicate is placed in the 
dummy node of the second template, taken from the 
template with an altered predicate because it contains 
the unaltered non-predicate. So, for sentence (9), the 
unaltered \[car (VEHICLE)\] is taken from the template 
with the altered predicate ( l l a ) ,  and a new template 
for the second clause (shown below in much simplified 
form) is produced: 
(12) \[car (VEHICLE)\] ~ \[works (SUBJ VEHICLE)\] 
If there is no preference violation between that unal- 
tered non-predicate and the other nodes of the second 
template, then, provided no other reading has more 
satisfied preferences, it is that reading of the template 
that is accepted. 
If, though, we have a case of extended metaphor as 
in (7) The car drank gasoline and purred to itself, then 
there is a preference violation between the unaltered 
non-predicate \[car (VEHICLE)\] and the predicate in 
the template for the second clause. So, for (7), the 
following template (much simplified) is produced: 
(13) \[car (VEHICLE)\] \[purred (SUBJ ANIMATE)\] 
(13) must have more satisfied preferences than any 
other competing template but - and here the control 
mechanism departs from the standard preference-as- 
procedure - even if (13) has more satisfied prefer- 
ences than any other template, it is not accepted as it 
is, because it contains a preference violation between 
\[car\] and \[purr\]. Instead, a new template for the sec- 
ond clause is created: its empty node is filled with the 
altered version of the same formula \[car (ANIMATE)\], 
inherited from the other template representing the first 
clause ( l lb ) ,  the one containing the amended non- 
predicate: 
(14) \[car (ANIMATE)\] ~ \[purred (SUBJ ANIMATE)\] 
This template is accepted if it has more satisfied pref- 
erences than any other. Because the second case of 
inheritance was from the template containing the 
amended non-predicate, the control mechanism knows 
that the CTD strategy was appropriate for the first 
clause: the template containing the amended non- 
predicate, appears in the semantic representation for 
the sentence as a whole. Hence the control mecha- 
nism handles cases of extended metaphor like (7) and 
(8). 
However, for sentences containing a single meta- 
phor such as (9) and (1), the ambiguity of the meta- 
phor remains unresolved as two possible templates, 
( l l a )  and ( l lb ) .  In terms of the means of compari- 
son used in 6.2. (correspondence to human under- 
standing and production of correct translations), there 
is no need to keep both templates, so the template 
with the altered predicate is retained (the product of 
the CTE or active strategy), somewhat arbitrarily, be- 
cause we believe this reading to be the more common 
of the two. 
Acknowledgments 
This research is currently supported by Science and 
Engineering Research Council contract GR/C /44938,  
"Intelligent knowledge-based spelling correction", and 
by the European Community DGXIII, Luxembourg, 
under contract ETL-1-E, "Linguistics for machine 
translation". 
The authors would like to thank Doug Arnold and 
Claire Grover for their many helpful comments and 
suggestions, and one of our reviewers for his/her corn- 
186 American Journal of Computational Linguistics, Volume 9, Numbers 3-4, Ju ly-December 1983 
Dan Fass and Yorick Wi lks Preference Semantics, III-Formedness, and Metaphor 
ments about selecting between CTD and CTE strate- 
gies. 
References 
Boguraev, B.K. 1979 Automatic Resolution of Linguistic Ambigu- 
ities. Technical Report No. l l .  Computer Science Department, 
University of Cambridge, England. 
Chomsky, N. 1977 On Wh-Movement. In Culicover, P.; Wasow, 
T.; and Akmajian, A., Eds., Formal Syntax. Academic Press, 
New York: 71-132. 
Erlandsen, J.; Van Eynde, F.; McNaught, J.; Somers, H.; and 
Destombes, L. 1982 Dictionary and Semantics in Eurotra. 
Eurotra Contract Report ET-10-SEM. European Communities, 
Luxembourg. 
Fass, D.C. 1983 Preference. In McNaught et al (1983) Part 111, 
Section I. 
Givon, T. 1967 Transformation of Ellipsis, Sense Development 
and Rules of Lexical Derivation. Memo SP-2896. Sytems 
Development Corporation, Santa Monica, California. 
Hankamer, J. 1973 Unacceptable Ambiguity. Linguistic Inquiry 
4: 17-68. 
Hendrix, G. 1975 Expanding the Utility of Semantic Networks 
Through Partitioning. Proceedings of the Fourth International 
Joint Conference on Artificial Intelligence. Thilisi, USSR: 115- 
121. 
Katz, J. and Postal. P. 1964 An Integrated Theory of Linguistic 
Description. MIT Press, Cambridge, Massachusetts. 
McNaught, J.; Arnold, D.; Bennett, P.; Fass, D.C.; Grover, C.; 
Huang, X.; Johnson, R.; Somers, H.; Whitelock, P.; and Wilks, 
Y.A. 1983 Structure, Strategies, and Taxonomy. Eurotra 
Contract Report ETL-I-E. European Communities, Luxem- 
bourg. 
Rumelhart, D.E. 1979 Some Problems with the Notion of Literal 
Meanings. In Ortony, A., Ed., Metaphor and Thought. Cam- 
bridge University Press, Cambridge, England: 78-90. 
Schank, R.C. 1975 Conceptual Information Processing. North 
Holland, Amsterdam, Holland. 
Schank, R.C.; Goldman, N.; Reiger, C.; and Riesbeck, C. 1973 
MARGIE: Memory, Analysis, Response Generation, and Infer- 
ence in English. Proceedings of the Third International Joint 
Conference on Artificial Intelligence. SRI, Menlo Park, Califor- 
nia: 255-261. 
Simmons, R.F. 1973 Semantic Networks: Their Computation and 
Use for Understanding English Sentences. In Schank, R.C. and 
Colby, K.M., Eds., Computer Models of Thought and Language. 
W.H. Freeman, San Francisco, California: 63-113. 
Van Eynde, F. 1982 Ambiguity. In Erlandsen et al (1982), 
Chapter 5. 
Wilks, Y.A. 1968 Computable Semantic Derivations. Memo 
SP-3017. Systems Development Corporation, Santa Monica, 
California. 
Wilks, Y.A. 1973 An Artificial Intelligence Approach to Machine 
Translation. In Schank, R.C. and Colby, K.M., Eds., Computer 
Models of Thought and Language. W.H. Freeman, San Francisco, 
California: 114-151. 
Wilks, Y.A. 1975 A Preferential Pattern-Seeking Semantics for 
Natural Language Inference. Artificial Intelligence 6: 53-74. 
Wilks, Y.A. 1978 Making Preference More Active. Artificial 
Intelligence 10:l -1 I. 
American Journal of Computational Linguistics, Volume 9, Numbers 3-4, Ju ly-December 1983 187 
