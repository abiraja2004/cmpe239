Conceptual Lexicon Using an Object-Oriented Language 
Shoiehi YOKOYAMA Kenji  HANAKATA 
Electrotechnical  Laboratory Univers i tat  Stuttgart  
Tsukuba ,  Ibarak i ,  Japan Stuttgart,  F. R. Germany 
Abstract 
This paper descr ibes the construct ion of 
a lexicon represent ing abstract concepts. 
This lexicon is written by an 
object -or iented language, CTALK, and forms a 
dynamic network system control led by 
object -or iented mechanisms. The content of 
the lexicon is constructed using a Japanese 
dictionary. First, entry words and their 
def in it ion parts are derived from the 
dictionary. Second, syntact ic and semantic 
information is analyzed from these parts. 
Finally, superconcepts  are assigned in the 
superconcept part in an object, stat ic parts 
to the slot values, and dynamic operat ions 
to the message parts, respectively. One word 
has one object in a world, but through the 
superconcept part and slot part this 
connects to the subconcept of other words 
and worlds. When relat ive concepts are 
accumulated, the result will be a model of 
human thoughts which have conscious and 
unconscious parts. 
1 . Introduct ion 
Semantic relat ions among words or 
concepts have been represented as a 
slot fi l ler def in i t ion in the lexicon 
\[Bobrow 77\]. These relat ions are usual ly 
represented as frame lists in LISP or 
Prolog. When the representat ion of a 
large-scale lexicon is needed, it is 
di f f icult  to make and maintain the lexicon 
because the relat ion of super /subconcepts  
dramat ica l ly  increases. 
An object -or iented language has a strong 
inference mechanism. It has already been 
used for parsing sentences \[Hayes 84, 
Nishida 84\]. It can also descr ibe the 
representat ion of semantic relat ions more 
simply than LISP. CTALK is such an 
object -or iented language and can dynamical ly  
handle the network using the concept of a 
world a group of objects -- and an 
object. 
Now the systemat izat ion of semantic 
relat ions is made for the words which 
represent concrete objects. However, the 
organizat ion of abstract words is d i f f icult  
because it is not so clear how to obtain and 
deal with abstract concepts. On the other 
hand, research is being conducted to 
computer ize or categor ize the common 
dict ionary \[Yokoyama 77, Tsurumaru 84\]. 
This paper  descr ibes a trial of  
systemat izat ion and categor izat ion of 
abstract words. The procedure is as follows: 
first, the def in i t ion parts of abstract 
words in the dict ionary are semant ica l ly  
analyzed, and the semantic relat ions are 
derived. Second, an object is establ ished 
for an abstract word. Third, the 
super/subeoncepts  of these words are 
assigned to a father-son relat ion among the 
objects corresponding to the semantic 
network. Then the slot def in i t ions are 
assigned to the object. From these slot 
values, new objects are made under the 
relat ive objects. Finally, the network is 
constructed from these abstract words. 
The  network formed by this method is 
considered to be a model of human 
consciousness. That is, when a human is 
reminded of a concept, other concepts 
relat ive to it are s imul taneous ly  extracted 
from the memory and stay beneath the main 
memory. This approach is considered to be an 
implementat ion of interact ive act ivat ion 
model \[Rumelhart 82\] in abstract  concept 
l eve l .  
2.Ob ject -o r iented  language CTALK 
The ob jec t  o r iented  language,  CTALK, was 
developed at Univers i tat  Stuttgart  \[Hanakata 
84\]. In this section, a s imple summary of 
CTALK is described. 
The main elements of CTALK are worlds and 
objects. A world is a set of objects, and 
some active worlds stay in the main memory. 
When the number of worlds exceeds the 
constant def ined by the system, the least 
recent worlds are gradual ly  swapped into the 
secondary memory. The hierarchy or the 
network among the objects, that is, the 
father son  relat ion of the objects is s imply 
set to every object, independent of the 
wor ld  s t ruc ture .  
An object consists of four parts, SUPERC, 
SONS, SLOTS, and METHODS. SUPERC means the 
superconcepts,  that is, the fathers of the 
object. SONS, l iterally, means the sons of 
the object. Actually, in the input of the 
object, the names of sons are not speci f ied 
explicit ly. The control of these father-son 
relat ions are performed on the bit table. 
The use of this bit table enables the fast 
operat ion of creat ing and removing these 
relations, and also of treating inher i tance 
mechanisms. The inher i tance usual ly works 
inside a world, and can also be spread to 
other worlds. The direct ion of inher i tance 
can be speci f ied by VIEWED AS operator 
\[Selbmann 85\], with which an object inherits 
the features of specif ied father(s). 
SLOTS is a stat ic property of an object. 
The form of SLOTS is as follows: 
\[slotname (restr ict ion) : default-value\]  
\[slotname slot-value\] 
The restr ict ion and default  value are 
optional, and slot value must fill the 
restr ict ion in the same slotname in the 
antecedent object. If a conf l ict  occurs at 
value assignment, no value can be assigned 
when the restr ict ion is violated. When there 
i s  no restr ict ion or the restr ict ion is 
fil led, another defaul t -va lue can be 
assigned in a descendant object. 
METHODS is the message part of the 
object. Sending the message invokes the 
operat ion written in the METHODS part. Of 
course ,  logical funct ions such as ~if ? , 
226 
" then" ,  and "e l se" ,  and numerical  funct ions 
such as "equal", "greq" (greater than or 
equal) can be written in the METHODS part. 
User functions can be def ined using system 
functions and other user functions. 
3 .Construct ion of the conceptual  network 
3.1 .P rocedure  
The procedure to make the conceptual 
network is as follows: 
I. The def init ion part for an abstract 
word is derived from the corresponding entry 
word in a dict ionary \[Kindaichi 74\], and 
semant ica l ly  analyzed. 
2. A new world is made for an entry word. 
3. The top  level object named TOP is 
made. This is the control object for message 
passing and slot handling. The father object 
of TOP is now CTALK_ IN_CTALK (default 
highest object in the whole world). All 
objects in the same world are the sons of 
TOP. 
4. An object corresponding to the entry 
word is made as a son of TOP. 
5. If the evident superconcept  is 
derived, it is expl ic i t ly  written in SUPERC 
part. In the case of an isa relat ion (a 
change to another word), the slot value 
"isa" is f i l led for the corresponding word. 
6. Objects of the words written in the 
def init ion part of the entry words are made 
in the world of the entry word. These 
objects have an object with the same name as 
the father object in another world, that is, 
a superconcept.  
7. The arc relat ions relat ive to the son 
object are assigned to the slot name, and 
the slot value is the corresponding word at 
the other side of the arc. 
Finally, one world is formed for one 
entry word as a "lump" of the concepts. In 
the fol lowing sections, the detai ls  of this 
procedure is described. 
3.2.Making the objects 
Fig.l (a) shows the top-level object TOP 
in the world "mokuteki" (object or aim). Its 
superconcept  is now CTALK_IN CTALK, but if 
two or more conceptual  words can be sublated 
("aufheben?), the integrated concept becomes 
a new superconcept.  The sons are the entry 
word itself and the objects (words) which 
are derived from the def in i t ion part of the 
entry word. These form the components in the 
semantic network. In the slot "mean", the 
literal meaning cited from the dict ionary is 
written, and used as a normal search (i.e. 
consultat ion)  of the dictionary. In order to 
consult the dictionary, the fol lowing 
message should be sent to CTALK IN CTALK: 
(CTALK mean mokuteki\].  
The operat ion written in  METHODS part in 
CTALK. . IN_  CTALK:  
\[mean ?x -> (* do: (x chw:) 
(TOP gv: mean))\] 
is invoked. The variable x is connected to 
"mokutek i " ,  and the l iteral meaning is 
output. "* do:" is a PROGN-I ike funct ion in 
LISP, and the return value is the evaluat ion 
of the last part of the fo l lowing functions. 
"Chw:" is a system function changing a 
world, and "gv:" takes a slot-value. 
TOP IN mokuteki 
SUPERC 
\[ C'rALK IN CTALK ) 
SONS 
\[ koto IN mokuteki \] 
\[ mono_IN mokuteki \] 
\[ mokuteki IN mokuteki 1 
s s' 
( mean "kodosuru mokuhyotosite kangaerarela 
sositai nanigotoka, sonaritai nanimonoka" ) 
/* something considered as m behavioral aim */ 
METHODS 
Fig. 1(a) Object TOP IN mokuteki. 
mokuteki IN mokuteki 
SUPERC 
\[ TOP IN mokuteki ) 
( koto IN mokuteki \] 
( mono IN mokuteki \] 
SONS 
( mokuteki_IN_syusi \] 
\[ mokuteki IN meate \] 
Fig. I (b) Object mokuteki IN mokuteki? 
koto IN mokuteki 
SUPERC 
( TOP IN m~utek i  1 
\[ koto IN.koto ) 
SONS 
\[ mekuteki IN mokuteki \] 
S~/)TS 
\[ JBO isi \] 
( OR mono \] 
\[ YNA nani 
METHODS 
Fig. 1(c) Object koto IN mokuteki? 
F ig.1(b) shows the object of the entry 
word "mokuteki" (object or aim). Many of the 
entry words in the d ict ionary are explained 
as the subcategory of "mono" or "koto" , 
"Mono" represents a concrete thing or object 
in many cases, but also represents the 
abstract things in some cases like in 
"mokuteki " . On the other hand, " koto" 
represents abstract things or matters in  
almost a\].l cases. According to the 
dict ionary, both ~mono" and ?koto" are 
assigned as SUPERC's here, but it could be 
possible to make only ?koto" a SUPERC. For 
the problems concerning the def in i t ion power 
of the dict ionary, see Conclusion. The entry 
object can be connected to its relat ive 
words as SUPERC relations. In SONS part, the 
words referr ing to "mokuteki" are described, 
Here the \] . ink from ~mokuteki" iN_'syusi" 
(purpose) and "mokut eki " ...IN _" meate" (guide 
or aim) is connected. The more complex the 
semantic network is, the greater the number 
of SONS objects is. In SLOTS part, there is 
no slot name nor va\].ue because no ~isa" 
relat ion exists in the def in i t ion part in 
the dictionary. 
Fig.l (c shows a part of objects which 
should be made on the world "mokuteki'. 
"Koto ? is one of the superconeepts  of 
~mokuteki ? and by itself  a subconcept of 
"TOP ~ and "koto._IN_koto ? . 3 slot names are 
227 
assigned at SLOTS part, that is JBO, OR, and 
YNA. The strange names such as JBO and YNA 
indicate the reverse direct ion of arcs. This 
guarantees the two way relation of objects. 
Slot value is, of course, the corresponding 
word name. In the case of "kodo" (behavior) 
the structure is similar to "koto". 
3.3.World "mokuteki" 
F ig.2 shows a part of a conceptual 
diagram for the world ?mokuteki ? after all 
relat ive objects have been made. --:> 
indicates the arc from father objects in 
other worlds, --> the arc to son objects in 
other worlds, and --~ the connect ion inside 
the world. When new terms or example 
sentences for the word are added to this 
world, the structure inside the world will 
change. On the other hand, when new entry 
words are added to the system, the number of 
worlds increases. If these words are 
relat ive to the world ?mokuteki" or refer to 
it, connect ion arcs are newly formed, and 
the network becomes more complex. 
CTALK IN CTALK 
l 
\ \ I ~isi IN isi 
 TOP - 
/ :, <o o 
"~mokutek i~"  is i / 
/ mokuteki 11 \\ ./ 
Fig. 2 Par t  o f  the  s t ruc ture  o f  
wor ld  "mokuteki". 
4.Conclus ion 
The world shown in Fig.2 is considered to 
be a model of the human conscious process. 
When the human considers a certain concept, 
the central concept is fetched to the main 
memory. That concept corresponds to a world 
in this system. Relat ive concepts are 
connected to this concept and exist near (or 
beneath) the main concept. Some of these 
concepts often go to the surface of 
consciousness,  but usual ly stay beneath the 
consciousness. These concepts correspond to 
other worlds connected to this world. 
In the current system, relat ively stat ic 
propert ies are defined, and only a few 
dynamic connect ions are used. Dynamic 
functions in CTALK including restr ict ion 
cond i t ions  in  . SLOTS par t  shou ld  be 
cons idered  in  the  next  vers ion .  
I f  a s imi la r  s t ruc ture  i s  found between 
two or more worlds, integration of these 
worlds can be considered. On the other hand, 
when one world is too big to be treated, the 
separat ion of the world would occur. 
Separat ion and integrat ion processes of 
worlds are also considered as a model of 
human thinking. However, the automat izat ion 
of the process is very difficult. 
Knowledge for the world is now derived 
from a Japanese dictionary. One reason for 
using the dict ionary is that it is di f f icult  
to deal with the words having abstract 
concepts, and the dict ionary is one of the 
228 
most convenient clues for treatment. The 
other reason is that this dict ionary has 
been computer ized \[Yokoyama 77\] and will be 
used for automatic semantic analysis. 
However, def in i t ions of entry words in a 
dict ionary have various problems such as 
definit ion, semantic elements, and 
co reference \[Nakano 85\]. Descr ipt ion of 
other d ict ionar ies should be discussed, and 
the efforts to find suitable representat ion 
and connect ion will be continued. 
Acknowledgements 
This research started at  Univers i tat  
Stuttgart  when Yokoyama stayed there as a 
vis it ing researcher sent by the Japanese 
Government. The authors express their 
appreciat ion to researchers in Univers i tat  
Stuttgart  and Electrotechnical  Laboratory, 
as well as staffs in both governments. 
References 
\[Bobrow 771 Bobrow, Daniel G. and 
Winegrad, Terry: "An Overview of KRL, a 
Knowledge Representat ion Language ? , 
Cognit ive Science, Vo l .1 ,  No.I, pp.3 -46  
(1977) .  
\[Hanakata 84\] Hanakata, Kenji: ?A 
Powerful Agent for the Control of 
Inheritance and Message Passing in the 
Object-Or iented Language CTALK", GWAI-84 
(1984) .  
\[Hayes 84\] Hayes ,  Ph i l ip  J . :  
"Entity-Oriented Parsing', COLING-84, 
pp.212-217 (1984) .  
\ [ I sh iwata  84\] I sh iwata ,  Tosh io :  "Features  
in  Japanese  Representat ion"  ( in  Japanese)  in  
Tanaka,  Akio et a l :  ?Performance I I " ,  
Asakura Publ ishing Co. (1984) .  
\[Kindaichi 74\] Kindaichi,  Kyosuke et al 
(eds.): "Shin-Meikai Kokugo Jiten ? (Second 
Edit ion) (Concise Japanese Dict ionary) (in 
Japanese), Sansei-.-do (1974.). 
\[Nakano 85\] Nakano, Hiroshi: "Problems 
about the Descr ipt ion of Semantic 
Definit ions" (in Japanese) in Kusanagi et 
a l . :  "Grammar and Semant ics  I I " ,  Asakura  
Pub l i sh ing  Co. (1985) .  
\ [N ish ida  8411 N ish ida ,  Toyoaki  and 
Doshita, Shuji: "Combining Funct ional i ty  and 
Object -Or ientedness for Natural Language 
Processing ? , COLING-84, pp.2\]8 221 (1984). 
\[Rumelhart 82\] Rumelhart, David E. and 
McClelland, James L.: "An Interact ive 
Act ivat ion Model. of Context Effects in 
Letter Perception: Part 2 ? , Psychological  
Review, Vo l .89 ,  No. i ,  pp .60  94 (1982) ,  
\ [Se lbmann 85\] Se lbmann,  F rank :  "Entwur f  
und Imp lement ie rung  e ines  kont ro l l i e rbaren  
Backt rack  Mechan ismusses  so wie e iner  
universel l  verwendbaren undo-Funkt ion fur 
d ie  ob jekt -  und botschaftsor ient ierte  
Sprache CTALK" (in German), Diplomarbeit  der 
Universitat  Stuttgart  (1985). 
\[Tsurumaru 84\] Tsurumaru, Hiroaki et al: 
"A Considerat ion about the Development of a 
Semantic Dict ionary" (in Japanese), 50th 
Conference of IPSJ, 5K-7 (1985.3). 
\[Yokoyama 77\] Yokoyama, Shoichi: 
"Preparation for the Database Management of 
a Japanese Dictionary" (in Japanese), Bul. 
E lectrotechnical  Laboratory, Vol.41, No.t1, 
pp.855-868 (1977) .  
