and 
DISCO - -  An  HPSG-based  NLP  System 
its Application for Appointment Scheduling 
- -  P ro jec t  Note  - -  
Hans  Uszkore i t ,  Ro l l  Backofen ,  S tephan Busemann,  Abde l  Kader  D iagne ,  
E l i zabeth  A .  H inke lman,  Wa l te r  Kasper ,  Bernd  K ie fe r ,  Hans -U l r i ch  Kr ieger ,  
K laus  Net ter ,  G f in ter  Neumann,  S tephan Oepen,  S tephen P.  Spackman 
German Research  Center  for Art i f ic ia l  In te l l igence (DF I ( I )  
S tuh lsatzenhausweg 3, 66123 Saarbrf icken,  Germany 
(name}~dfki,. un i - sb ,  de 
Abstract 
The natural language system DISC() is described. It 
combines 
a powerful and flexible grammar development system; 
? linguistic competence for German including morphol- 
ogy, syntax and semantics; 
? new metlmds for linguistic performance modelling on 
the basis of high-level competence grammars; 
? new methods for modelling multi-agent dialogue com- 
petence; 
? an interesting sample application for appointment 
scheduling and calendar management. 
1 Introduction 
We will describe results of a project in natural lan- 
guage research carried out during the last four years at, 
the German Research Center for Artiticial Intelligence 
in Saarbrficken. All system l)uilding took place dur- 
ing the last three years. The special approach of this 
project is a combination of linguistically sound high- 
levcl grammatical description and specialized methods 
for linguistic performance modelling. 
During the last decade it has become obvious to the 
majority of researchers in our field that the linguis- 
tically designed elegant and transparent grammars 
written in high-level representation languages uch as 
HPSG or LFG could not be employed for elficient and 
robust processing in a straightforward way. 
Many researchers have therefore resorted to well- 
known older methods uch as ATNs or other augment- 
ed finite-state methods, to statistical or connectionist 
methods, or to combinations of these. Several projects 
participating in the demanding ARPA competitions 
fall in this category. 
Many others have decided to settle for a com- 
promise between high-level description and efficient 
processing by strongly constraining their formalisms. 
The resulting formalisms are usually much closer to 
PROLOG and do not contain a powerful multiple- 
inheritance type system; e.g. the Core Language En- 
gine (CLE) of SRI Cambridge \[1\], its derNative tile 
GEMINI system of SRI International in Menlo Park, 
the LKP of SIEMENS in Munich \[3\]. As a conse- 
quence of their design philosophy, these systems usu- 
ally do not feature a powerthl development platlbrm. 
Only a few groups have continued to work ill high- 
level formalisms driven by the expectation that better 
processing methods for these formalisms can be de- 
veloped. Our work belongs in this category, tIowever, 
we have decided to allow for combinations of high- 
level grammatical description and low-level processing 
methods by strictly distinguishing between a gener- 
al linguistic competence model and very applic~tion- 
specific performance models. 
Our decision was based on some fundamental crite- 
ria: 
? It, is necessary to build general, reusable compe- 
tence systems that can be the basis lbr different 
applications, since the development of liuguistic 
eoml)etenee is too costly to redo for each new ap- 
plication. 
? In the foreseeable future, NL applications will 
have very limited linguistic competence, where 
the limitations depend on the task to be per- 
formed. They determine coverage and depth of 
analysis. 
? The general competence system as such will not 
be used for iudividnal allplications because each 
application type imposes pecific requirements on 
the perlbrmauee model. Depending on the task 
there are quite different constraints on robust- 
ness, accuracy, and processing speed. 
On the basis of these assumptions, we took a rather 
uncompromising stand. We decided to utilize the 
most suitable and most advanced methods for the de- 
velopment of linguistic ompetence. Our development 
platlbrm is based on a powerful typed feature unifica- 
tion formalism, and the grammar follows the IIPSC 
th('ory. ':these choices were made since we wanted 
on tile one hand to facilitate the difficult and time- 
consnllling process of grammar development, and on 
the other to save our grammar from the fate of sev- 
eral older large-coverage grammars which eannol~ be 
reused or extended today because of their idiosyncrat- 
ic representations. 
Since research on systems with multiple cooperating 
agents constitutes one of the focal areas of our insti- 
tute, we tried to develop the system ill such a way that 
it would support dialogue among such agents. At the 
same time, we undertook serious efforts in research on 
methods that would allow us to derive adequate per- 
formance models from tile core competence system. 
We also built a sample application (COSMA) for ap- 
pointment scheduling and rnanagement based on tile 
COml)etence model, ill order to test tile grammar of 
German, methods for dialogue modelling, and eerl;ain 
new n)ethods for deriving a performance model from 
the competence system. 
In the remainder of this paper we will present all 
436 
overview of the following comt)onents and methods: 
? development l)latform including shell, formalism, 
morphology, parser, gm,erator, semantics; 
? German competence including morphology, syn- 
tax, semantics; 
? methods for providing multi-agent dialogue com- 
petence; 
? methods tbr linguistic performance modelling; 
? tile NL flmctionality of the sample application 
COSMA. 
Some individual components and methods have 
been described in more detail in previous imblications. 
llowever, this paper is the first attempt to l)resent 
an overview of the integrated system and to describe 
its parts from the perspective of our overall research 
strategy. 
2 Formal i sm 
For the grammar, tile lexicon and parts of tile roof  
phology a powerfld typed unification lbrmalism 7"/)? 
(Type Description Language) has been developed. 
Reasoning is performed by two specialized inference 
engines, viz. the TD1; type engine and the l~ature 
constraint-solver llDi.Afe. The modnles are connect- 
ed via a flexible interface to allow for mutual control. 
Type  System 7"191; is a powerfifl typed feature- 
b~ed language and inference system, spceilicalty suit- 
ed for highly lexiealized grammars \[81 (in this vohl,ne). 
Type definitions in "I'19? consist of type constraints 
and feature constraints over the standard boolean con- 
nectives A, V, and -1. The operators are generalized ill
that they can connect feature descril)tions, coreference 
tags (logical variables) and types. 7"/)1; distinguishes 
between arm types (open-world remsoning), sort types 
(closed-world reasoning), bl*ilt-in types, and atoms. 
Recursive types are explicitly allowed and handled by 
a sophisticated lazy type expavsiot, mechanism. 
7/;)? allows the definition of partitions and the dec- 
laration of sets of types as incompatible, meaning that 
the conjunction of them yields L. Working with par- 
tially as well ~s with fully exl)anded types is possi- 
ble through the use of a sophisticated type expansion 
mechanism, both at definition and at run time. 7-791; 
is fid\[y incremental in that it allows the redelinition 
of types and the use of undelined types. 7'/9? allows 
a grammarian to define and use parameterized tem- 
plates (macros). Input given to 7"D1; is parsed by a 
LAMI.(1) parser to allow for all intuitive, high-lew;l 
input syntax. 
Eilicient reasoning in the system is accomplished 
through specialized modules: (i) bit vector encoding 
of the type subsumption hierarchy; (it) f~ust symbolic 
simplification for complex type expressions; (iii) mem- 
oization to cache precomputed results; and (iv) type 
expansion to make constraints explicit, to determine 
the global satisfiability of a description, and to work 
with partially expanded types during processing. 
Const ra in t  So lver  NDiAfe is a feature constraint 
solver capable of dealing with distributed isiunctions 
over arbitrary structures, negative coreferences, full 
negation, and functional and relational constraints. 
It is the first (and to our knowledge t},e only) imple- 
mented feature constraint solver that integrates both 
full negation and distributed isjunctions \[2\]. NDYq'e 
does l,ot use distributed isjunction only as a tool for 
efficient processing. It also forms part of the input 
syntax, which allows for very compact representation 
of tire input data. In controls( with other systems us- 
ing distributed disjunctions, we do not restrict dis- 
junctions to length two, thus reducing tire size of the 
feature structure representations massively. 
~l'he functionality of N1)iAfe is completed by several 
auxiliary functimls. It is possible to remove incon- 
sistent alternatives, to si,nplify structures, to extract 
subterms or to evaluate functional constraints. One 
call also construct disjunctive normal form if desired. 
Semant ic  Representat ion  A specialized meaning 
representation formalism, Aft;t, developed at llewlctt 
Packard \[9\], is used for semantic reasoning and as a 
flexible interface to various application systems. H?1; 
is a linguistically motivated extension of sorted \[irst- 
order predicate logic, integrating also eonccl)ts from 
Situation Semantics and l)l{'|'. It provides a large 
range of rei)resentational mechanisms for natural lan- 
guage phenomena. 
3 L ingu is t i c  Resources  
Tile core of tile linguistic resources consists of a two- 
level morphology with feature constraints, all Ill)S(\] 
oriented grammar of German with integrated syntax 
and semantics, and a module for surface speech act 
recognition, all implemented ill 7"D/2. 
Mor l )ho logy The component X2MorP, analyzing 
and generating word forms, is based on at two-level 
morphology which is extended by a word-lbrmation 
gralnnrar (described in 7"l)1;) lbr handling the con- 
catenative llarts of morl)hosyntax \[15\]. 
Grammar  The style of the grammar closely tbllows 
tile spirit of HPSG, but also incorporates insights fi'om 
other grammar frameworks (e.g. catcgorial grammar) 
and further extensions to the theory \[12\]. 
The grammar distingnishes various types of linguis- 
tic objects, such as lexical entries, phrase structure 
schmnata, lexical rules, multi-word lexemes etc., all of 
which are sl)e<:ified as tyl)ed \[~ature stru<:tures. Lexi- 
caI rules are defined as unary ruh!s ;tnd al)plied at run- 
ti,ne. Multi-word lexelnes are eoml)lex lexelnes with a 
non-compositional semantics, such as tixed idiomatic 
expressions, lIPS(', I~rincil)les and constraints are rel)- 
resented by inheritance links ill tile type lattit:e. The 
grammar covers :t fair nmnber of the standard con- 
structions of German, and exhibits a more detailed 
coverage ill some sl)ecilic application oriented are~. 
Semant ics  Feature strncture descriptions of the se.- 
mantic contribution of linguistic items arc represent- 
ed in "I"1)1; and are fully integrated into tile gram- 
mar. Additionally, the T'D? type system is used to 
encode and check sortal constraints as they occur in 
selcctional restrictions. For furl.her 1)rocessing such as 
scope normalization and anaphora resolution, infer- 
ences and al)plication dependent interpretation, the 
(initial) TD? semantic descriptions arc translated in- 
to A/'1;1; fornndae. 
Sl)eech Act  Recogn i t ion  and Dia logue The 
grammar provides a typed interface to a speech act 
437 
recognition module based on IIPSG representations 
of utterances. T im assignments of illocutionary force 
take into account syntactic features, a marking of per- 
formative verbs and assignments offixed illoeutionary 
force to relevant idiomatic expressions. 
Recently inference-based dialogue facilities using a 
quasi-modal logic for multiagent belief and goal attri- 
bution \[5\] have been added to the system, incoming 
surface speech act structures are subjected to anapho- 
ra and reference resolution, translated into a frame- 
based action representation, and disambignated using 
inferential context. The effects, including communi- 
cated beliefs and goals, of the first acceptable speech 
act interpretation are then asserted. 
4 P rocess ing  components  
Parser and generator provide the basic processing 
flmctionality needed for grammar development and 
sample applications. In addition to the separate mod- 
ules for parsing and generation, we also experiment 
with a uniform reversible processing module based on 
generalized Earley deduction. 
Parser  The parser is a bidirectional bottom-up 
chart parser which operates on a context-free back- 
bone implicitly contained in the grammar \[6\]. The 
parser can be parameterized according to various pro- 
cessing strategies (e.g. breadth first, preference of cer- 
tain rules etc.). Moreover, it is possible to specify the 
processing order for the daughters of individual rules. 
An elaborate statistics component supports the gram- 
mar developer in tuning these control strategies. 
In addition, the parser provides the facility to filter 
out useless t~ks, i.e. tasks where a rule application 
can be predicted to fail by a cheaper mechanism than 
nnification. There is a facility to precompute a filter 
automatically by determining the possible and impos- 
sible combinations of rules; some additional filtering 
information is hand-coded. 
The parser is implemented in an object-oriented 
manner to allow for different parser classes using dif- 
ferent constraint solving mechanisms or different, pars- 
er instances using different parsing strategies in the 
same system. With differing parameter settings in- 
stances of the parser module are used in the X2MorF 
and surface speech act recognition modules ,-us well. 
Generator  Surface generation in DISCO iS per- 
formed with the SeReal (Sentence Realization) sys- 
tem \[4\], which is t)ased on the semantie-head-drivell 
algorithm by Shieber et al SeReal takes a TD? se- 
mantic sentence representation ms its input and can 
deliver all derivations for the input admitted by the 
grammar. Efficient lexieal access is achieved by having 
the lexicon indexed according to semantic predicates. 
Each index is associated with a small set of lemma- 
ta containing the semantic predicate. Using the same 
indexing scheme at run-time for lexical access allows 
us  to restrict unification tests to a few lexical items. 
Subsumption-based methods for lexieal access were 
considered too expensive for dealing with distribut- 
ed disjunctions. The grammar nsed for generation is 
the sanre as the one used for parsing except for some 
compilation steps performed by SeReal that, among 
other things, introduce suitable information wherever 
'semantically empty' items are referred to. Rule ap- 
plication is restricted by rule accessibility tables which 
are computed off-line. 
5 Per fo rmance  Mode l l ing  
hr our search for nrethods that gel; us from the trans- 
parent and extensible competence grammar to el\[i- 
cient and robust performance systems we have been 
following several leads in paralM, We assume that 
methods for compilation, control and learning need to 
be investigated. The best combination of these meth- 
ods will depend ou the specific application, hr the 
following some initial results of our efforts are sum- 
marized. 
Acqu is i t ion  of  Sub languages  by EBL  it is a 
matter of common experience that different domains 
make different demands on the grammar. This ob- 
servation has given rise to the notion of sublangnage; 
efficient processing is achieved by the exploitation of 
restricted language use in well specified domains. 
In the DISCO system we have integrated such an ap- 
proach based on Explanation-Based Learning (1~;13I,) 
\[14\]. The idea is to generalize the derivations of train- 
ing instances created by normal parsing automatically 
and to use these generalized erivations (called teln- 
plates) in the n,n-time mode of the system. If a tem- 
plate can be instantiated for a new input, no further 
grammatical analysis is necessary. The approach is 
not restricted to the senl;ential level but can also be 
applied to arbitrary subsentential phrases, allowing it 
to interleave with normal processing. 
Inte l l igent  Backt rac ldng  in P rocess ing  Dis junc-  
t ions In \[16\] a method is outlined lbr controlling 
the order in which eonjnnets and disjmmts are to be 
processed. The ordering of disimmts is useful when 
the syste.m is supposed to find only the best result(s), 
which is the case for any reasonably practical NL 
application. An extension of NDi,/V'e has been im- 
plemented that exploits distributed disjunctions for 
preference-based backtracking. 
Compi la t ion  of I I PSG into Lexica l lzed TAG 
\[7\] describes an approach for compiling fIPSG into 
lexicalized feature-based TAG. Besides our hope to 
achieve more efficient processing, we want to gain 
a better understanding of the correlation between 
1 \[PSG and TAG. The compilation algorithm has l)een 
intplelneute(\[ and (:overs almost all constrtlctions con- 
taine(\] ill our IIPS(\] granltnar. 
6 Env i ronment  
The DISCO I)EVELOPMI~NT SIIELI, serves as the basic 
architectural platform for the integration of natural 
language components in the DISCO core system, as 
well as for the CosMA application system \[13\]. Follow- 
ing an object oriented architectural model we followed 
a two-step approach, where in the first; step the archi- 
tecture is developed independently of specific compo- 
nents to be used and of a partienlar flow of control. 
In tim second phase tl,e resulting 'frame system' is in- 
stantiated by the iutegration of e.xisting components 
and by defining the particular llow of control between 
these components. Using an object-oriented design to- 
gether with multiple inheritance has been shown fruit- 
438 
ful for ttle system's modifiability, extensibility and in- 
cremental usability . . . . . . . .  
Several editing and visualization tools greatly fa- 
cilitate the work of the grammar developer. The 
most prominent of them, FEGRAMEDj provides the us- 
er with a fully interactive feature editor and viewer. 
There are many possibilities to customize tile view on- 
to a feature strncture, such ,as hiding certain features 
or parts of a structure, specifying the feature order 
and many more. The large feature structures emerg- 
ing in the process of constraint based formalisms make 
such a tool absolutely indispensable for grammar de.- 
bugging. Main goals of the development ofFI~GltAMI.'D 
were high portability and interfacing to different sys- 
tems. Written in ANSI-C, it exists in Macintosh and 
OSF/Moti f  versions and is already used at several ex- 
ternal sites. 
There exists a graphical chart display with mouse- 
sensitive chart nodes and edges directly linked to the 
feature viewer, thus making del)ugging much sinq)ler. 
It also provides a view of the running parser and en- 
ables you to inspect the effects of the chosen parsing 
strategy visually. A browser for the 7"DE type sys- 
tem permits navigation through a type lattice and 
is coupled with tl,e feature editor. There are oth- 
er tools ms well, e.g., a 77)?2I#TEXutility, an EMACS 
TD? mode, global switches which affect tile I)ehaviour 
of the whole system etc. 
The diagnostics tool (DiTo) \[11\] containing close to 
1500 annotated iagnostic sentences of German fimili- 
tates consistency maintenance and measuring of con> 
petenee. The tool ha.s been lmrted to several sites that 
participate in extending the test-sentence database. 
7 Put t ing  it to the Test 
Cooperat ive  Schedu le  Mauagement  In build- 
ing the COSMA prototype the DISCO core system has 
been successrully integrated into an application do- 
main with both scientific interest and practical plau- 
sibility, viz. multi-agent appointment scheduling (see 
Figure 1). Understanding and sending messages in 
natural language is crucial for tl,is application since 
it cannot be expected that all participants will haw~ 
a COSMA system. Tile use of natural hmguage also 
makes it easier for the owner of the system to Inon- 
itor the progress of an appointment scheduling pro- 
cess. Each COSMA instance functions as a personal 
secretarial assistant providing the following services: 
(i) storage and organization of a personal aplmint - 
ment date-book; (ii) graphical display and manil)ula- 
tion of appointment data; and (iii) natural language 
understanding and generation in communication with 
other agents via electronic mail. The current schedul- 
ing flmctionality includes the arrangement of multi- 
participant meetings (possibly with vague or taMer- 
specified details) as well a~s the modification and can- 
cellation of appointments hat are under arrangement 
or have already been committed to. 
Accordingly, the current COSMA architecture h~us 
three major components: a prototype appoiutment 
planner (developed by the DFKI project AKA-MOI)) 
that keeps the calendar database, provides temporal 
resolution and drives the communication with other 
agel,ts; a graphical user interface (developed inside 
the DISCO project) monitoring tile Calendar state and 
APPOINTMENT PLANNER I,~:VEL 
. er internal repreeentation_ ( . IR )~ 
P,I A NAGEMENT 
MACIIINEItY SCANNER 
5AR 5NL (standardized) natural angoage NL 
E-~a.,dL E-MAa WRAPPER AND SCANNER 
INTEI(FACE 
1 1 T 
f igure  1: l{ongh sketch of the DISCO sys tem in its ap- 
plication to the COSMA scenario. Ti le entire COSMA 
prototylm has been Imilt on top of I,he DISCO DIgVEL- 
OPMENT SIIEI,L its a nlollotol|ic extension to the core 
system.  
supporting the nlotlse- and menu-driven arrangement, 
of new appointments and, finally, the DISCO core sys- 
tem (enriched with a set of application specilic mod- 
ules) that provides the natural anguage and linguistic 
dialogue capabilities. 
Intm'faee to the. Core Eng ine  The communica- 
tion \])etween tile DISCO system and the appointment 
planner is modelled in it ,-estricted appointment tmsk 
inl.erface language aim roughly nleets the illterHal l'el)- 
resental.ion of the al)pointment planner. 'tk) connect 
the two components, DISCO is em'iehed with a dedicat- 
ed interface nm(lule that l,ranslates l)etween the DIS(:() 
internal semantics representation language Af?~. and 
the appointment planner representation. The trans- 
lation process (maintaining the substantial difference 
in expressive power between A/'?? and the restricted 
planner language) builds on ideas from current com- 
piler technology with a limited set of domain- and 
application-specific inference rules \[10\]. 
On its opposite end DISCO is hooked up to plain 
electrmfic mail facilities through a general mrpose e- 
mail i~,terfaee that allows it to receive and send e- 
mail (and in case of processing Nilures to 'respool' 
messages to the user mailbox). 
8 D iscuss ion  and  Out look  
We have presented an overview of the DISCO sysl.mn 
that illustrates our general research strategy. The sys- 
439 
tem is implemented in Common Lisp and runs on 
Sun and l iP workstations. Some tools and periph- 
eral components are coded in C. A port of the sys- 
tem to another hardware platform (Apple Macintosh) 
is currently being carried out. The total size of the 
system is about 100,000 lines of code. Parts of the 
system were demonstrated at several conferences, at 
trade fairs and on other occasions. 
The work will be continued in two smaller projects. 
First of all we plan to extend the system's linguis- 
tic competence of German. The diagnostic tool Di- 
To will be expanded in joint work with other groups 
to provide an instrument for measuring progress and 
for comparing rammars. We will also continue work 
on building up dialogue competence. The application 
demonstrator will be further developed in collabora- 
tion with other projects at the DFKI. 
In the area of performance modelling, we will con- 
tinue exploring different approaches for control, com- 
pilation, and competence-based learning in parallel. 
At this point nobody can really foresee which strat- 
egy or combination of strategies will yield the best 
practical results. As we pointed out in the introduc- 
tion, different application types will require different 
performance models. IIigh priority is given to the 
integration of statistical methods in all pursued ap- 
proaches, since in contrast to competence modelling, 
statistical data are essential for developing adequate 
performance models. 
Acknowledgements  
We acknowledge the invaluable input of our former 
colleagues, viz., John Nerbonne who substantially 
contributed to the design and success of the DISCO 
project, ttarald Trost and Jan Alexandersson. 
As in many academic environments, major parts of 
the daily system building have been carried out by our 
wonderfid research assistants, especially Sabine Buch- 
holz, Stephan Diehl, Thomas Fettig, Stefan IIaas, Ju- 
dith Klein, Karsten Konrad, Ingo Neis, Ilannes Pirk- 
er, Ulrich Sch~ifer, Oliver Scherf, Jgrg Steffen, and 
Christoph Weyers. 
This work ha~s been supported by research grant 
ITW 9002 0 from the German Bundesministerinm fiir
Forschung und Technologic to the DISCO project. 
Re ferences  
\[1\] Hiyan Alshawi, editor. The Core Language Engine. 
ACL-MIT Press Series in Natural Language Process- 
int. MIT Press, Cambridge MA., 1992. 
\[2\] Roll Backofen and Christoph Weyers. llDihfe--A 
Feature Constraint Solver with Distributed Disjunc- 
tion and ClassieM Negation. Technical report, DFI(I, 
Saarbrficken, Germany, 1994. Forthcoming. 
\[3\] ttans-UMch Block. Compiling Trace $z Unification 
Grammar. In Tomek Stl~alkowski, editor, Reversible 
Grammar in Natural anguage Processing, pages 155- 
174. Kluwer Academic Press, London, 1994. 
\[4\] Stephan Busemann. The SeReal System: patting 
semantic-head-driven g eration to tim limits. Tech- 
nical document, DFKI, Saarbrlicken, Germany, 199,1. 
Forthcoming. 
\[5\] Elizabeth A. tlinkelman and Stephen P. Spack- 
man. Abductive Speech Act Recognition, Corporate 
Agents and the COSMh System. In W.J. Black et al, 
editor, Abduction, Beliefs and Context: Proceedings 
of the Second ESPI?IT PLUS Workshop in Compu. 
rational Pragmatics. Academic Press, 1992. 
\[6\] Bernd Kiefer and Olivet' Scherf. Gimme More IIQ 
Parsers. 'File Qeneric Parser Class of DISCO. Tech- 
nical report, DFKI, Saarbrllcken, Qerrnauy, 1994. 
Forthcoming. 
\[7\] Bernd Kiefer, Klaus Nel, ter, and I(. Vijay-Slmnker. 
Compilation or ttPSG to "FAG. Research report, I)F- 
I(I, Saarbrilcken, Germany, 1994. Forthcoming. 
\[8\] Ilaus-Ulrich Krieger and UMch Sch?fer. TD? --  
A Type Description Language for Constraint-Based 
Grammars. In Proceedings of COLING-94,199,1. 
\[9\] Joachim Laubsch and John Nerbonne. An Overview 
of.A/'/2/2. Technical report, Itewlett-Packard Labora- 
tories, Polo Alto, July 1991. 
\[10\] John Nerbonne, Joachim Lanbsdl, Abdel Kader Di- 
agne, and Stephan Oepen. Software for Applied Se- 
mantics. In Chu-Ren throng et al, editor, l'rocecding.~ 
of Pacific Asia Confcreace on Formal and Computa- 
tional Linguistics, pages 35-56, Talpei, 1993. Aca- 
demica Sinica. (Also available as DFKI Research Re- 
port RR-92-55). 
\[ll\] John Nerbomm, I(laus Netter, I(ader 1)iagne, Lud- 
wig Dickmann, and Judith Klein. A Diagnostic Tool 
for German Syntax. Machine 7)'anslation:8, 85-107, 
1993. 
\[12\] Klaus Netter. Arclfitectnre and Coverage of tim DIs- 
co C, rammm'. In S?.el~han Bnsemann and I(arin 
Harl)usela, editors, Workshop on Natural Language 
Systems: Re-usability and Modularity. Proceedings, 
pages 1-10. DFKI, Saarbr\[icken, Germany, 199.'1. 
\[13\] G(inter Nenmmm. Design Prilrciples of the Disco Sys- 
tem. In Proceedings of the TWLT 5, Twente, Nether- 
lands, 1993. 
\[14\] Gfinter Nenmann. Application of Explanation-based 
Learning for Efficient Processing of Constraint-based 
Grammars. In Proceedings of the Tenth IEEE Co~,fer- 
ence of A rlifical Intelligence for Application, Marriott 
Riverwalk, San Antonio, Texas, March 1994. 
\[15\] tlarald Trost. The Application of Two-Level Mor- 
phology to Non-eoncatenative G rman Morphology. 
In Proceedings of COLING.90, 1990. 
\[16\] IIans Uszkoreit. Adding Control Information to 
1)eclarative Grammars. In Proceedings of the 291h 
Anmml Meeting of the Associ~tion of Computatiorml 
Linguislics in Berkeley, 1991. 
440 
