Perspectives of DBMT for monolingual authors 
on the basis of LIDIA-1, an implemented mock-up 
Herv6 BLANCHON 
GETA, Institut IMAG (UJF & CNRS) 
BP 53, 38041 Grenoble Cedex 9, France 
e-mail : Herve.Blanchon @ imag.fr 
Abstract 
DBMT is researched lm,'e in the context of future systems 
for the general public, where :t monolingual author wants 
to translate into several anguages. We have produced a 
complete mock-up, IADIA-1, which demonslrales how ;| 
French IlyperCard TM stack could lie translated into 
German, Russian and English. We present Ihe 
contputational, linguistic and crgononlic aspects of tile 
mock-tip, and discuss them in the perspective of buikling 
an operalional prototype in the future. 
Keywords 
Interactive MT, DBMT for monolit/gtlal all lhor, 
Interactive disambiguation, lhoduetion of disamhigualion 
dialogues, I)isaibuted ,'uehiteeture, Whitebo'ud appro:teh 
Introduction 
Our LIDIA project aims at studying the concept of 
'Personal Machine Translalion', or more precisely, I)BMT 
for monolingual authors \[Boitet & Blanchon 19931, in a 
multilinguql setting. 
We have now completed the first imlflemcutalion of it 
mock-up, I,I1)IA-1. Working on a inock-t\]p first, and not 
oq a prototype, has made it possible to tackle all aspecls of 
such future systems, comlmtational, linguistic and 
ergonomic. Even if we could not solve all problems, we 
fell they m'e put in perspective. Almost all other attempts 
in the direction of 1)BMT have consklered only some 
aspects of the paradigm, leading to tmbalanced and 
somethnes inadequate architectures. 
Ileforc a demonstration which shows the principles of the 
Iralislalioli process, we present au overview of the COlt{ex\[ 
of the iltock-tlp. Then, we give some more details about 
the mock-up ilsell, Ihe implemcnt:ttion techniques used 
and the principles of Ihe interactive dis:tmbigualion 
process. Finally, we discuss some important poitlls 
(interface, implementation techniques and tools, and 
disambiguation process) of tile mock-up in the perspective 
of building an operational prototype in the filture. 
1. Framework 
1.1. The DBMT 
Interactive MT was first proposed in the sixties by M. Kay 
lot the MINI) system \[Kay 19731, iuld several projects 
expe,'imenled with variations of this design, notably the 
rl'S project \[Melby 1981\] at Pmvo (75 - gl) ,  the Alvey N- 
tran project IWood 1989\] at Manchester (85 - 87), the 
DLT project \[Sadler 1989\] at Utrecht (82 - 88), Ihe I.MT 
prqicct \[P, imon, et al 1991\] from 1989 at seve,al IBM 
research centers, and the JETS project \[Tsutsumi, et al 
1993\] font 1989 at IBM Tokyo l~abs. 
Ill KBMT-89 \[Goodmau & Nirenburg 1991\] :It CMU- 
CCI,, queslions were also asked by the "augmentor" if
ambiguities could not bc solved by the ontology. 
Among those projects where an interactive disambigtmtion 
component was \[nlegraled, we were inspired by: 
- Ihe interface proposed in KBMT-g9, 
-- Ihe pattern-lmsed disambiguation process used for 
several ,~urflfiguities in t.MT, 
- the distriblfled "trchiteclure of JF.TS. 
1.2. The LIDIA-I mock-up 
We have chosen a well-define(l silualion as regard to Ihe 
profile of Ihe task Imd the profile of the user. We have 
integrated the use of an interactive disambiguation process 
at the very beginning of the design. This means Ihat the 
whole set of ctmslraints was well established before we 
starled the implement:ilion. The tr:mslatiou process 
organization is described in \[Boitel & I\]lanchon 199311. 
In the scctlario we propose, a m(~tlolitigtl,lll \]:rench 
engineer creates technical documentation, i  the form of 
? m I lypc,'(;ard stack, on a middle-range Macintosh, and 
helps the system translate it into l:nglish, German and 
l;',ussian. We have opted for a dislribuled architecture 
(author wt}rkstation on a m/leitllosh arid MT server on a 
mini--IBM-4361). 
We have l~roduced a demonstration stack id)olit tile 
linguistics ambiguily we have chosen to cope wilh in 
French. 
1.3. The demonstation stack 
Our denlouslrali(m stack, called 'I,II)IA les histoires' is 
made of story cards (Fig. 2) and treatment cards (Fig. 1). 
l,'igure I: a card and its objects 
115 
A story card is a collection of two or three stories sharing 
an ambiguous entence. The author is supposed to solve 
the mnbiguities through his understanding of the stories. 
Ilere is m~ example of a story em'd (see translations t ). 
Z~ c#.,q't~'nc_a r~t.,t_,ozld ua_z~e..de.~.'N~e.,_ \] 
Le eapit',dt,,e a 
ntpl~rt6 tm ~ls~. de 
Chltle. Ce ~se est 
anglMs. 
~uTf fm,  hls tn l re  \]--- 
Le eapitalr~ a 
r'al>IX:~"~ 'tin x,-a..~ de 
Cllhlo,. Sorl navire est 
tt~s d~fi'aqchi. 
Figure 2: a story card 
For the puqmse of the demonstration, each story is 
presented in a treatment card, where the context of the 
ambiguous entence may be shown or hidden, l lere is the 
card Ik)r tile story on the right. 
I.T\[a foment do .!'.h!s!o!re .the sie.J 
( 12~cher le con leute  ) 
Figure 3: a treatment card 
To have the story translated, the user will ask for the 
translation of dm fields of the treatment stack. Note that 
tile user is never interrupted by a question. Ol~jecls show 
they are waiting for answers, and tile user decides when 
and which question to answer. 
2. Demonstration 
The user can choose the seleclion tool (v" )  and select Ihe 
object to be translated (Fig. 4). 
? I 
Le eapitaine it rupl)ort6 un vitse de Chine. 
Figure 4: the selection rf an object 
The button of treatment state then appears. When clicking 
on it (lig 5), a windoid or pop-up window appears (Fig. 7). 
Le eapititine a rapport6 un vase de Chine. \] 
/ 
...................................................................................................................................... % 
Figure 5: the user asks for the treatment s ate 
1 I.eft story : 'From China, the captaht has bring hack a vase. 
This vase is English'. Right story: 'The c:q)tain has bring h;ick 
a Chlnese vase. llis boat is soiled.' 
'file task in progress is displayed in bold, tile previous ones 
in plain, and the following ones in italic. 'lChus, in figure 7 
the system is currently mmlyzing the text fragment. 
:,:f5~;:: 6vanoernent: des traiterr lents ~,~::!!~: 
0rthographe & 
Termi nologie 
Termes fig6s 
TtJpage textuel 
A nal Use 
Pde~mb/~u~?,atian 
Trader~an 
AWmtr,~do~do# ~- 95 
Figure 6: windoid for the treatment state 
If the sentence has to be disambiguated, the author is 
asked to answer some questions. The aulhor is advised a 
new question is ready by a new ilem in the menu 
Message and by a button which appears over the 
concerned object as in figure 7. The user can choose to 
interact at once or later 
l ee ea l ) i ta ine  a rap l )o r t6  un  vase  tie Ch ine .  \] I . . . .   m.I 
Figure 7: the object have a question of terminology 
Suppose the user clicks on the ~ button. A first 
queslion appears (Fig. 8). 
11 y e plusleurs tnterpr~tatton,~ pour le phrase : 
Le capitaine a rapport6 un vase de chine. 
Cl~qlsissoZ 18 bonll~. 
0 de Chine, le capitaine a rapport6 un vase, 
Le capitaine a rapporte (un vase de chine). 
Figure 8: attachement disamhiguation (story 2) 
With the dialogue (Fig. 8), the author select the 
attachement of  'de Chine'  (Chinese). Then, a second 
dialogue appears (Fig. 9) where tile author chooses Ihe 
sense of 'capitainc'. The senses are l'oul~d in \])atax, a 
multilingual lexical database mock-up \[Sdrasset 19931. 
I1 q o I) l l lMeur3 ~?n~ ~??ept~bl?$ pour le mot : 
capitaine 
C~izis~z le ben. 
00fficier qui commande une compagnie d'infanterie, un 
escadron de cavalerie, une batterie d'artillerie 
Officier qui commande un navire de commerce 
0 Chef d'une 6quipe sportive 
Figure 9: word sense disambiguation (story 2) 
Once the dis,'unbigualion step h:cs been performed, tile user 
can ask for the mmotated form of the text (Fig. 10) which 
contains the syntactic class 0f each occurrence and the 
syntactic ftmction of each phrase. 
116 
(ke.&ort capltalnei&p,).&~uj:(o.&v F~pport{:,&v).&nv ~I 
(un,&art vase.&n'(de.~s Chine:&n'):&comP),&obJ ( ..&ponct)~ol M 
l,'igure lO: annotated form 
These annotations should help tile user understatLd tile 
structure produced by the analyser. We lhink that 
experienced users wou ld  like to shortcut some dialogues 
by inserting some disambiguation marks flmmselves. 
To check the translalion produced in each target language, 
tile user can ask for the "reverse translation". From 
German and for the second interpretalion of tile example, 
he get : 
champs : Phrase du Corpus i~:;;i~:;:'; i~; ; ; ;~  
eTarapport6 un vase chinois. ~I 
l,'igure 11: reverse translation 2 
Finally, tile system produces a translated story card. 
Erste Geschichte ~-~ 
Der l lauptmann hat  
eine Vase  arts China  
mitgebrael~t. Die Vase 
ist englisch. 
Zweite Geschichte j - -- ,  
Der  Kapi l f in trot eine 
chinesL,;che Vave 
mi lgebracht ,  gem \[Joot 
is| sehr vert)lasst 
( I lehandhnlq ) ( l l ehand lunq)  
Figure 12: translation qf the two stories into German 
3. Other aspects 
As it delnonslratiOLL Call llot show all cxlernal aspects (if 
tile inock-up, let us now give more details aboul lhc 
interface, the implementation techtLiqtlcs, anLl Ihe 
mclh(xlology for disambiguatitm. 
3.1. Interaction tools 
,idR 
Trailer la s,~lec'tion 
Traitement sp~eial... 
Voir l'6tat du IrMtement 
Voir la r~trotraduction 
Voir les annolation~ 
PMe{te Lidia 
Pr6f~renees... 
Construirepiles e ib les  
l,'igure 13: the menu 
Once tile preferences have been 
defined, tile author uses a ltlClltl 
and a palette to inlcracl with 
l ,II)IA. 
The inleraclion wilh the atHhor 
is ma(le through tile LIDIA mentl 
(Fig. 13), the Messages IIlelltl, 
a palette (Fig. 14), feedback 
buttons (Fig. 1) and windoids 
(Fig. \[). 
The nLenu shown hew. offers 8 
choices: process the selected 
object according to tile set of preferences, process ome 
object with a particular preference set, show tile 
2 'The captain has brought back a Chinese vase.' 
trealillcnts' progress, show the reverse translatiOll, show 
tile annolations, how the palelte, modil3t ile preferences 
and build tile target stacks. 
Figure 14: the palette 
The user can also ask 
for tile f requent  
l rca lmenls  with it 
palette. In the first line 
are displayed the 1.1DIA 
Iools (process lhe 
selected ohject, show Ihe \[reiltinellt progress, show the 
annotations and show tile reverse trallS\]aliOll). Ill tile 
second lille are Ihe browsing tools. 
The translation process is divided into two steps: lhe 
sland;udisalion and tile clarification. Wc lrwe seen tile 
clarification pr(Ecss during 1he (lelllOllStration, let us have 
a l(?lk on tile standardization step. 
3.2. Implementation 
The implememati(m is cha,aclerizcd by Ihe use of a 
distributed archilccltlre, a whilelmard apluO;~ch , and 
object-orienled techniques. 
a. D is t r ibuted  architecture 
Three machines (Fig. 15) are involvc(l in the IiallslaliOll 
process. 
On die aulhor's workstation tile HyperCard Kernel sends 
and receives nlessages lronl the LIDIA kernel which 
organists the translation process for each object. The LIDIA 
Kernel sends transladotl jobs to lhe Translation server via 
lhe Communication serve/'. The LIDIA Kernel also asks 1o 
prepare the disambigualion questions. 
b. Whi teboard  approach  
Igor each object to be hanslated, the LJDIA Kernel creates a
mirror object (it text file) in which arc sto,ed all 
information required by lhe lranslalion process aml 
necessary for Ihe construction of tile target stack. We 
distinguish Ix~twccn static trod dynamic id/brmation. Static 
inlormalion is whal is altache(I by llyperCard to each 
object. It is necessary to construcl target slacks. I)ynamic 
inlormation is any information used by l ADIA to translale 
the COlltcnt of all object. 
These files can be cons|tiered as whiteboard.v as defined in 
\[Scliyman & Be|let 19941. Unlike Ihc blackboard, tile 
whiteboard is accessed only by a coordinator (the IJDIA 
Kernel), nnd nol by tile componcnls (Disambiguation kernel 
and RemoteMacMain-Frame). '|'he main advaulage of this 
architecture is 1o allow easy integral|tin of existing new 
contlXme,lls without h;tving to modify them. 
c. Object oriented techniques 
ExcepI tile lingware, all coInpOllCnlS list ol:tjccl-oricnlc(I 
programming. The module for tile Terminology , Ihe idioms 
;tn(l the Typage as tile kernel of tile Communication server 
are written in l iyperTalk the l lyperCard scriptinj; 
language. 
The LIDIA serveur is writlen with CI.()S (MCI.). Although 
encapsulated within tile Sallle cnvironmenl, tile LIDIA 
Kernel and Ihe Disambiguation Kernel communicate by 
exchanging messages anti can thell be distributed. 
117 
-Author 's  workstation 
i 
HyperCard . . . .  
r'?++?0y-l r+ +me ql 
-Serveur LIDIA - -  I ' t  --' -3 
i LIDIA Kernel 
-Serveur de d~sambiguYsation'--~ 
\[ gisam blguatlon Kernel ..... q 
\ ]Operatorsq  rPattern Matcher -~ 
-Communication server 
r 
scripts 
r upLoadSc ript - - \ ]  \[downL-oadSeript q 
R e mot e M a c Main Fra m;~""~ ~.~.~.~ 1 r"C'erno' 
,+F+---\] 
( ? ,  .... \] 
Figure 15: the architecture ofLIDIA-I 
The use of messages and olject-oriented programufiug 
techniques i close to the actor model used in the context 
of distributed cooperative systems. 
3.3. disambiguation 
'phvb'  
- -  i )hvb +dgn' - -  
'tlg'n' - -  gn 'gl ? 
gn - -  oh j l  git 
suj ~ arg l  otto,l, 
qe' 'capitaine' 'a' 'rapport6' 'un' 'vase' 'de.' 'Chine' 
1? 'capitaine' 'avoir'  ' rappal ler '  'mr 'vast '  'de' 'Chiut '  
d 11 g V d I1 S II 
(1~ gov  aUX gov  c:t~ gov  reg gov  
'phvb' 
g'd--n' ph vb - -  - -  - -  'dgn' 'dgn' 
gll --- gn gn 
.' ' ob j l  cite 
g l  -.......T unde 
, / \  
le '  'capitaint '  'a' 'rapportS' 'un' 'vast '  'tlt' 'Chine' 
\]e,' 'capitaine' 'avoir'  'ral',potler' 'un' 'vase' 'de' 'Chim;' 
(\[ II g V d U S II 
( l~ gov  aUX gov  dt~ gov  l~3g gc*v 
Figure 16: multisohaion, multilevel 
and concrete structure 
X:PHVB 
.v++ 
Patron 12 
X:PHVB 
y:SUJ <!NV~I  , V:CIRC 
AA2  " 
/ \  
/ x / \ 
Patron 13 
Figure 17:2 pattermr 
12 is: 
The disambiguati0n process is 
organized around a pattern marcher 
\[Blanchon 199211. For five out of the 
eight c lasses of ambigui ty  
considered ill tile mock-up, we use a 
mechanism of pattern matching with 
unif ication of variables which 
allows to recognize tile ambiguity 
and produce tile disambiguation 
dialogue. A dialogue construction 
method is associated with each 
pattern. These melheds rely on a set 
of thirteen operators. 
Figure 16 shows the trees produced 
for the sentence 'Le capitaine a 
rapport6 un vase de Chine.' 
The p'ttterns (Patron "i2 & Patron 
13 ) used to recognize the ambiguity 
in our example are shown in Fig. 17. 
The method associated with imttern 
'\]ke<te(Y) rll-~tQ(Z) l<trc\]-It:h%qe('\[bxte('\['), qt~t-o(V) ) 
which produces the lolIowing text: 
Le eapitaine a rapport6 tun vase de chine.) 
The method associated wid\] pattern 13 is: 
"\[t~:e(V) , ffbxte (Y) ~Ibxtc,(Z) 'l~:,xte (T) 
which produces tim following text: 
de Chine, le capitaine a rapport6 un vase .  
4. Towards an operational prototype 
4.1. Interface 
For a prototype, tim modules for tile terminology and tile 
idioms should use, at least, a lemmalizer, and with the text 
categorization module they shouM not rely on llyperCard 
any more (Fig. 17). 
Our implementation f the 'guided kmguages' idea is still 
very primilive. We hope to develop working techniques 
frolii our stu(lies on 'utlerence slyles' and 'lexl genres'. 
The inlerfaces of the standardization modtfles are only a 
first sketch. The iconic buttons used to ask for Ihe user 
intervention hgtve to be redesigned (we haven't fotmd a 
good solution yet). On Ihe olher hand, the etu'sors for tile 
I31)IA tools and (he feed-back bultons arc homogenous 
and could be kept (l:ig. 1 & 7). 
Ill a future work, it will be necessary to adapt he dialogue 
type to the skills of tile audmr. The kind of dialogue we 
have developed allows only the user t(t select the right 
an'dysis. A new dialogue type could allow the user to get 
information and examples about lhe ambiguity currenlly 
solved. The user could then change its text or insert 
disambiguating marks. 
4.2. Implementation techniques 
The current iml)lementalion i  terms of software anti 
hardware may be characlerizL:d ,as integrated, distributed 
and extensible. 
118 
Using four servers (LIDIA, I)isambiguation, Communication, 
aud Translation) collaborating through messages and tcxl 
files as made it relatively easy to integrate tools running in 
different hardware attd/or sof(w,'ue nvironments. 
For using DBMT at home, a simple cmnmunication server 
could pilote a modem to request services from a LII)IA 
server, exactly as a mail utility. With such au architecture, 
a low-cost personal computer would be usable for 
mtthoring and translating. 
Using object-oriented programming techuklues makes the 
system easy to custo,nize. 
4.3. Implementation tools 
The dictionaries used by the Ariane-G5 lingwarc arc build 
from Parax \[S6rasset & Blanc 1993\]. For a prototype we 
need a more powerfull and flexible tool, as also described 
iu \[SOrasset & Blanc 19931. 
For developing (he lingware, we have used Ariane-G5, 
designed for heuristic programming in the context of 
snblanguages. We plan to develop some new Specialized 
Languages for l,ingnistic Programming, thereby workiug 
iq the direction of 'ambiguous programming' IBoilc( 
1993\]. 
4.4. Disambiguation process 
It has bceu clear from the begiuning that we would not be 
able to find, for each class of ambiguity we have chosen to 
solve, a uuique resolution method. Keeping in mind the 
kind of dialogues we wanted, we have cxamiued a large 
quanlity of ambiguity configurations and have arrived al 9 
problem patterns. 
The use of at strategy, organizing the disaml)igualkm 
process, the use of patterns and methods implemented with 
a set of basic operators makc the process highly 
customizable. That's why we think about an etwi,'onment 
for the description of disambiguation pr(mess. 
This environment integrates three modules: a ntodule for 
the pa(lerns definition, a module for the defiuition of the 
dialogue produclion methods, ;rod finally a module for the 
descriptiou of the disambiguation shategy. 
Conclusion 
The implementation of our mock-up I , IDIA-I ,  firs( 
concrete xperiment towards the I)BMT 'fo," cveryNxly', 
has been done 'in breadth' at first, and 'in dcplh' o11 
cerlaiu points. It was very important o tackle all the 
aspects. Previous experiments have showll Ihe necessity of 
a broad conception for a MT system to succeed, l)uring 
ot,r work we have seen that tile ergonomics goals cau 
trigger compulational nd linguistic choices. The situalion 
is the same for (he compulati(mal or linguistic goals. 
The idea of the interactive clarilication approach in the 
context of natural language processing seems now to 
interest a real cotmnunity. For MT, the current work of 
\[Wehrli 1993\], \[Yamaguchi, et al 1993\], atul lhc ongoing 
work on JETS \[Tsutsumi, et al 199311 arc some good 
examples. For speech systems, tile interactive clarification 
approach is also a solution as shown iu \[Fraukish, et aL 
1992\] and proposed in \[Ainsworth & Pratt 1992\] and 
\[Saito 1992\]. 
As far as 1he l'tlture is concerned, we have begun to study 
multimodal interactive disambiguation with ATR-ITL in a 
more general framework than 1,1DIA-1. We hope to gel 
adequate support R}r developing a more larger-scale 
prototype in the next few years. 
References 
Alnswor(h, W. A. & Pratt, S. R. (1992). Feedback strategies 
for error correction in speech recognition systems, in 
International Journal of Man-Machine Studies. w)l. 36(6) : pp. 
833 842. 
lllanchon, 1I. (1992). A Solutimz to the l'roblem of hlteractive 
l)ismtlbiguation. Prec. (/cling-92. Nantes, lZrance. 23-28 juillet 
1992, w~l. 4/4 : pp. 1233-1238. 
lloitet, C. (1993). Crucial Open Problems in Machine 
Translation and blterpretation. Prec. Symposium tm Natural 
l.anguage Prc, cessing in Thailand. Bangkok. 17-21 March 1993, 
vol. : pp. l-- 29. 
lhfitet, C. & l|lanchon, I1. (1993). Dialogue-based MTfor  
monolingual attthors attd the LII)IA project. Prec. NI.PRS'93. 
Fukuoka. Jalum. 6-7 d6ccntbre 1993, w~l. l/t : pp. 2(18-222. 
Franklsh, C., Jones, I). & llapeshl, K. (1992). l)ecline in 
accuracy of automatic aTwech recognition as re ftttlcliotl of time 
on task: flttigue or voice drift? in Intcrmdiomd Jourlml t~l Man- 
Machine Studies. wfl. 36(6) : pp. 797-8(6. 
Goodman, K. & Nirenlmr!a, S. (eds), (1991). 771e KBMT" 
l'roject: A case study in knowledge-based machine translation. 
Morgan Kaufiv*atm. San Mateo, (~alifornia. 331 p. 
Kay, M. (1973). 77te MINI) system, in C'ourant Contputer 
Science Symposium 8: Natural Language Pl'ocessil+g. 
Algorithmics Press, Inc. New York. pp. 155-188. 
Melby, A. K. (1981). Translatotw a,d Machines - Can they 
cooperate ? in MIi'I+A. vol. 26(1) : pp. 23-34. 
R immt, M. & al. (1991). Advances in Machine Translation 
Research in 1BM. l'roc. Machine "I'ranslatiml Summit Ill. 
Washington, D.C. l-,l juillet 1991, w~l. 1/1 :pp. 11-18. 
Sudler, V. (1989). Working with analogical semantics :
l)isambiguation techniques in 1)LT. Floris Publicatimls. 
I)ordrecht, I lolhmd. 256 p. 
,qaito, !1. (1992). lnteractiw~ Speech Understanding. Prec. 
Coling-92. Nantes, France. 23-2g juillet 1992, vol. 3/4 : pp. 
1053-1057. 
Neligman, M. & B~itet, C. (1994). A "whiteboard" architecture 
Jor automatic ,qwech translatio,. Prec. Inler,udiona\] Symposium 
on Sf, okcn l)ialoguc. Wascda University, "('l~kyo. (-12 novembre 
1993, w;I. :pp. 4. 
N~r.asset, (;. & Bl'anc, E. (1993). Utw apl,'oche par acception 
pour les bases lexlcales multilingues. Prec. T-:I'A-TAO 93. 
Montrdal, Canada. 30 semptembre-2 oclobre 1993, wfl. : pp. }k 
par~6tre. 
Tsu(sumi, T. & al. (1993). E.vample-Based Approach to 
Machine Translation. Prec. Prcmig:res journdes fi'anco-japonaise 
stir la traductimtassist6e par ordimLteur. Amlmssade tie France all 
Ja\[lt)ll, Tokyo. Japon. 15-16 mars 1993, w~l. 1/1 : pp. 161-169. 
Wehrli, 17',. (1993).  Vers un syst6,ne de truduction intcractif, in 
I.a traductique, l.es presses de l'l(niversit6 de Montrdal, 
AUPF.I.F/I II(F.F. pp. 423-432. 
Wood, IVl. M. (1999). Japanese for speaketw of lgnglish: The 
tlMIST/ShefJ'ield Machine Translation l'roject, in Recent 
Developments and Applicatim~s of Natm'al l:mguage P,'ocessing. 
Kogan Page Limited. l.ondon, pp. 56-64. 
Yamaguchl, M. & ul. (1993). An Interactive Method for 
Semantic Disambiguation i Sentences by Selecting l,.'xamples. 
Prec. NLI~RS'93. Fukuoka, Japon. 6-7 ddcembre 1993, vol. : pp. 
208-222. 
119 
