STRATEGIES AND HEURISTICS iN THE ANALYSIS 
OF A NATURAL LANGUAGE IN MACHINE TRANSLATION 
(In the memory of Bernard Vauquois) 
Zahar in  Yusof f  
Groupe d'Etudes pour  la Traduct ion Automat ique 
BP n ? 68  
Univers i t6  de Grenoble 
38402 Sa int -Mart in -d 'H@res 
FRANCE 
ABSTRACT 
The analys is  phase in an indirect, t ransfer  and 
global approach to machine t rans lat ion is studied. 
The analysis  conducted can be descr ibed as exhaus- 
t ive (meaning with backtracking),  depth- f i rs t  and 
strategical ly  and heur is t ica l ly  driven, whi le  the 
gran~nar used is an augmented context  free grammar. 
The prob lem areas, being pat tern  matching, ambigui-  
ties, forward propagat ion,  checking for correctness 
and backtracking,  are highl ighted. Estab l i shed 
results  found in the l i terature are employed 
whenever adaptable,  whi le suggest ions are given 
otherwise. 
I. INTRODUCTION 
We interest  ourse lves in the analys is  phase of 
a machine t rans lat ion system which adopts the 
indirect, t ransfer  and global approach (see 
\ [S locum 84\]). The aim of this paper is to c lar i fy 
the prob lem areas, suggest a few solutions, and 
po int  out  the loose ends. There is no current 
implementat ion for the analyser we describe, and 
the ideas are bas ica l ly  a ref lect ion of ~hat ~c 
would  like to see in an MT system, based on previous 
exper ience in the field. A very important issue is 
to separate the l inguist ic  knowledge (the grammar) 
from the a lgor i thmic and technical  knowledge (the 
organ\ ]sat \ ]on  of the analyser, pattern matching, 
etc.). "Approximate" l inguist ic  knowledge is also 
separated and used as a means to guide the analysis  
rather  than considered as absolute (semantics and 
context  constra ints  as heur is t ics  instead of 
grammar rules). 
Due to space restr ict ions,  we shall immedia- 
tely specify the basic type of analyser  we shall be 
work ing with, wi thout  giving any reasons for the 
cho ice .  The interested reader is referred to 
\ [Zaharin 85\] for an uncondensed vers ion of this 
paper, and \ [Zahar in 86\] for more details. 
2. THE ANALYSER 
In general,  an analyser can be v iewed as a 
b lack box with two holes, where we insert the input 
text through one and it gives the output  l inguist ic  
structure through the other (in our case, an 
annotated tree represent ing the "meaning" of the 
input text). Peeping into the box, we would notice 
that it works in cycles doing the fo l lowing five 
steps unti l  it tr iggers off some stopping mechanism 
and hence furn ish ing the output  : 
a) comput ing the object  set ; 
b) choosing an object  ; 
c) comput ing the rule set ; 
d) choosing a rule ; 
e) apply ing the chosen rule on the chosen 
object. 
Natural ly,  depending on the var ious models, 
these steps need not be executed in the given order, 
nor are they necessar i ly  as clear out. Indeed, some 
may even execute the cycles in paral lel .  
Our analyser wil l  do the five steps in the 
fo l lowing manner. Steps (a) and (c) wi l l  be done 
together, comput ing all objects on which some rule 
is appl icable,  and to each of these objects, the set 
of all appl icable rules is computed. The result  is a 
set of \].inked pairs O-R where R is a rule appl icable 
on the object  O. A l inked pai r  is then picked, 
i.e. steps (b) and (d) together, and the chosen rule 
appl ied on the chosen object. The cycle repeats. 
The mot ivat ion for the above choice is that we 
are a iming for a one-go analysis, for which we shall 
be needing the maximum of information before we 
apply  a rule, hence the computat ion of al l  candidate 
objects  and rules. Strategies and heur ist ics  are 
then needed for the cr i t ical  choice of object-ru le 
pair  in each cycle. 
~L~ natural  language treated wi l l  bedescr ibed  
by a grammar conta in ing a set of rewri te rules with 
a context  free base of the form Xl . . .Xn ~JX where 
X l , . . . ,Xn,X are annotated trees ; in other words, 
an augmented context  free grammar. What  we actual ly  
have in mind is a grammar conta in ing rules of the 
form given in f igure i, as d iscussed in \[Zaharin 86\]. 
Nevertheless,  the d iscuss ion remains val id for any 
system using a similar representat ion of data. 
AS in most  machine translat ion systems, the 
analysis  looks for only a single solution, i.e. a 
single representat ion of meaning for each input 
text. If the text is ambiguous, the "best" solut ion 
is taken. In the search for a solution, a depth 
f irst  approacb is taken, and the analyser al lows 
for backtrack ing in case the solut ion is not found 
in one go. Backtrack ing is also requi red in cases 
where an input sentence is not in the language of 
the gralnmar, but most important, to ensure that the 
analyser  f inds a solut ion if there is one. 
3. THE PROBLEM AREAS 
With the type of analyser we have chosen, the 
problems that ar ise are bas ica l ly  the fo l lowing : 
- pattern matching ; 
ambiguit ies  ; 
- forward propagat ion ; 
checking for correctness ; 
~ backtracking. 
Pattern matching seems to be the bott leneck of 
the real \ ]sat \ ]on of any system. Fortunately,  the 
l i terature a lready contains some ef f ic ient  pattern 
match ing procedures  that can be modi f ied to suit 
our model. 
136 
The choice of an augmented context  free gralmnar 
means that the rules are bas ica l ly  in the fo rm of  
str ings of symbols, where each symbol is augmented 
with an annotated tree structure. F igure i gives an 
example of a rule we use (see \[Zaharin 86\]). In this 
form, the pattern matching can be carr ied out in two 
stages : one fo r  strings, fo l lowed by one for trees, 
~\]ere the latter (the more cost ly one) is t r iggered 
only in cases of success of the former. 
Chartname : ChNPX 
NODE = 
CHART = 
TREE = 
NP I , NP 2 + NP 
NP! N~2 
NP NP 
a l l  a l l  
NP NP 
IJB~ p r e i{~) --B~F~2- 
NP 
NP 
ChNPX 
NP 
NP 
F~re \ ]  
For instance, at the str ing level, this falls 
into the category of many pat tern /many object  
pat tern  matching for strings,for which the procedure 
of \[Aho & Coras ick  75\] which finds all patterns  and 
all  ob jects  in one pass seems suitable. Only in 
cases of success do we pass on to a tree pattern 
match ing process, for instance that of \ [Hoffmann & 
O'Donnel  791\]. Repet i t ive work can be avoided if we 
factor ise the results of the pattern matching from 
one cycle to the other. 
Ambigu i t ies  and forward propagat ion are the two 
major problems for the model. We defer the discus- 
sion on t~ese to the next two sections. 
In genecal, it is very d i f f icu l t  to descr ibe a 
natural  language exact ly  by means of a formal 
grammar, no matter how sophist icated the formalism. 
In spike of this, the cr i ter ia for the correctness 
of the resul t  of the analys is  is usual ly  with res- 
peck to the natural  language treated and not that of 
the grammar, i.e. f inding an axiom in the gra1~nar 
may not be suff icient. So, rather than wr i t ing very 
str ict  rules at the r isk of exc luding correct struc- 
tures, it is better  to have more genera\], rules which 
may accept anomalous structures, and then provide a 
f i l ter to re ject  such results. \ [Boitet & Gerber 84\] 
suggests an expert  system to do this post -analys is  
checking. 
For backtrack ing analysis, a simple model is to 
store fa i led conf igurat ions (dead states) in some 
file. At the beginn ing of each cycle, the new confi-  
gurat ion can be checked against  this file, backtra-  
cking further if it compares. This may seem a huge 
effort, but natural  language analysis  is such that 
many identical  nodes may be found in d i f ferent  parts 
of the search space. As for forward propagat ion in 
the backtrack ing analysis, the pr ior i ty  order ings to 
be d iscussed in 5 can be preserved and made use of 
here. 
4. AMBIGUIT IES 
Ambigu i t ies  haunt  every t reatment  of a natural  
language. \[Lepage 85\] summarises the types of ambi- 
guit ies that we face, both lexical  and structural,  
whi le \[Van Kl inken 84\] wr i tes on the methods used to 
solve some of the cases. However, unti l  a formal 
treatment of ambiguit ies  can be proposed, the solu- 
tions wi l l  remain ad hoc, treat ing case by case as 
we meet them. 
In general,  lexica\] ambigui t ies  are solved 
either grammatical ly,  with context, or with seman- 
tics. Grammatica l ly  is as in the sense of using 
agreement in number to obtain "that" as a conjunc- 
t ion instead of a determiner  in the sentence : 
We know that  ambigui t ies  are d i f f icu l t  to solve. 
We use context  to d is t inguish the past  part ic ip le  
"col lected" from the verb in the two sentences : 
The corals co\] lected at the bottom of the sea are 
beautiful .  
The corals co\] lected at the bot tom of the sea. 
Finally, \ [Lyt inen 85\] polnted out the need of seman- 
tics to determine the attachraen't of the preposi t io-  
nal noun phrase ":\[or '~iO" in the two sentences 
(based on the verb "found") : 
The c leaners dry-c leaned the coat that Mary found 
the rummage sale for ~ .  at 
The c leaners drv-cleaned_ - -  the coat that Mary f oun<!. 
in the garbage foE__,}! q. 
Whereas we can be quite certain of the so \ ]u t io~ 
obta ined grammatical ly,  the use of context  or seman- 
t ics does not inspire the same confidence. Context  
can pose problems when locat ing the elements the 
context  refers to, which can be arb i t rar i ly  far away 
from the ambiguous word. Furthermore,  the problem 
can he aggravated by the elements looked for being 
ambiguous themselves. Sometimes, negative constraints 
are used ~n context e\].ements, and these carl pose 
interpretat ion problems (see \[Zaharin 86\]). As for 
semantics, the arguments can be endless. 
Bear ing the above in mind, we prefer  to treat 
? k\]-te solut ion of \]6~5{I(Ia1 amhlg | \ ] i~ je  m m~ hel lrist{? ~, 
rather than steadfast rules. By this we mean that 
context  and semantics should not be incorporated 
in to  the grammar rules used to descr ibe the language 
treated, but instead should be p laced in related 
heur ist ic  rules which advise on the apml icabi l i ty  of 
their counterparts.  This also means that if their 
advice has not led to a success, it is possible to 
backtrack to the same rule and recommence, this time 
ignor ing the advice. The case would not have been 
poss ib le  if the grammar rule and the context and 
Semantics had been put together in one rule. 
In the case of structural  ambiguit ies,  the 
sentence can be inherent ly  ambiguous, in which case 
context and semantics heur ist ic  rules can only aid 
to pick the preferred reading. It is also poss ib le  
that structural  ambJguitLes occur only at the level 
of substr ings of the sentence, but some of the possi-  
b i l i t ies  wil l  not lead to a solution. In such a case, 
heur ist ic  rules for preferred readings wil l  also 
help, but the problem is more of choosing a rule or 
object  to avoid leading to a dead end. This falls 
into the categorv of problems to be d iscussed in the 
next section. 
5. FORWARD PROPAGATION 
Forward propagat ion is the problem of choosing 
a rule and an object  for appl icat ion in each cycle 
of the analyser. This is the execut ion of steps (b) 
and (d) in section 2, which is then fell.owed by 
step (e), complet ing the cycle. As we are aiming for 
a solut ion in one pass of the analysis,  the choice 
is cr it ical ,  as even a wrong choice of a sequence of 
appl icat ions may lead to a dead end. This can be seen 
J n the fo\] \].owing example where the  grammar contains 
the rules (omitting the details) : 
137 
R 1 : NP VK NP + VCL ; R 3 : RELCL PNP ? RELCL 
R 2 : NP RELCL ? NP ; R 4 : VCL PNP + VCL 
Taking an example in \[Lyt inen 85\], the analysis  
may f ind itself  in the stats given in f igure 2 (the 
candidate objects are c i rc led and the corresponding 
rule indicated). The sequence of appl icat ions needed 
in this example is R2 R1 R 4. If we happen to choose 
R 1 , before R2, we wi l l  f ind that the analysis  wi l l  
not lead to a solution. 
. . . .  
.... :i: .!:, ,!, ,,o /h6 
The situat ion given here is one of the major 
problems faced by analyses which predef ine the 
sequence of appl icat ions of rules. There is noth ing 
more f rustrat ing than not obtain ing a complete ana- 
lysis and yet knowing that the requi red rules are 
present  in the grammar. 
Instead of predef in ing a sequence of rule 
appl ications, we prefer  using heur ist ic  rules which 
apply independent ly  in each cycle of the analyser. 
These heur ist ic  rules act to determine a pr ior i ty  
order ing of the candidate rules and objects (each 
rule wil l  be tied to the object it is appl icable on), 
the highest  pr ior i ty  rule or object being chosen for 
appl icat ion (taking along the object  or rule it is 
tied to). 
The big quest ion is, what should these heur is-  
tic rules contain ? F i rst  and foremost, coming from 
the d iscuss ion on solving ambiguit ies in section 4, 
we need the treatment of semantics put down as heu- 
ristics. An example of such a case is in f igure 2 
where rule R 3 should be accompanied by a heur ist ic  
rule to check for semantics. Here, one does not 
"find" something "in the garbage" "for ~i0", and so 
the heur ist ics  would advise that R 3 should not apply 
(unless, as d iscussed before, fol lowing this heuris-  
tics leads to a dead end, and so we come back to 
apply R3). 
We shall refer to the type of heur ist ics  just 
used as the "to-apply-or-not- to-apply"  heurist ics.  
The type of heur ist ics  main ly  needed is the "after- 
you-or -af ter -me" heurist ics.  This is the case for 
the choice between R1 and R2 in f igure 2. 
For the said problem, one may argue that VCLs 
are h igher up in the  hierarchy of phrases and clau- 
ses than NPs \[Vauquois & Chappuy 85\], and so rules 
bui ld ing NPs should be appl ied before rules bui ld ing 
VCLs. This may be true in this example, but  care 
must be taken when we deal with complex c lauses and 
phrases (the h ierarchy given in the reference is for 
s imple c lauses and phrases). For complex clauses and 
phrases, we may obtain cycl ic h ierarchies between 
NPs and RELCLs, APs and NPs, etc. For such cases, 
ad hoc heur is t ics  are needed, for instance, rules 
bui ld ing RELCLs should apply before rules bui ld ing 
NPs if the former is found to the r ight of the 
latter, and the inverse otherwise. 
Apart  from some hierarchy given, context  can 
also be used to solve the "after :you-or-after-me" 
problem. (Recall that context  is also needed to 
solve ambiguit ies).  As examples, suppose the grammar 
for f igure 2 also contains the rules (still omit t ing 
details) : 
R5 : NP VK + VCL ; R8 : SCL VCL ? VCL 
R6 : NP VK AP ? VCL ; R9 : SCL VK AP ? VCL 
R7 : CONJ VCL ? SCL 
Checking the context, namely the conjunct ion 
"when" or "that", can be used to choose R5 on "the 
king rides" in f igure 3, whi le RI is chosen in 
f igure 4 (this also gives an example as to why we 
would not use heur is t ics  l ike "apply the rule with 
the longer LHS"). 
.~ ,d  Rl ,C~) "~ vK ) 
When the king r ies  the/t h~orse i s-gr!omed 
That ~ ~ c  h6rse is unbelievable 
F i/gur e 4 
In the example in f igure 3, it so happens that 
the two occurrences of the rules R5 are independent, 
in the sense that the appl icat ion of one before the 
other has no great consequence,  and so an arb i t rary  
choice wil l  do. However, not compet ing on intersec- 
t ing objects does not necessar i ly  guarantee indepen- 
dence. Had we been two steps before f igure 2 with 
rules : 
RIO : NPR NP VK + RELCL ; 1{I 1 : PNP PNP + PNP 
included in the grammar, the s i tuat ion would  be as 
given in f igure 5. Here, semantic heur is t ics  can 
advise that RII should not apply. However, we need 
to make sure that RIO appl ies before RI, otherwise 
we can never arr ive at a complete analys is  even 
though these objects seem to be independent. 
NP NPR NP RIO VK PNP RII PNP 
' 1 / \  I I I . /h/2.o The cleaners dry-cleaned the coat that Mary found in th g g ~u I 
! 
No doubt the above problem can be solved using 
the same heur ist ics  giving the hierarchy of c lauses 
and phrases, but  this s i tuat ion br ings up two impor- 
tant quest ions which necess i tate  answer ing : firstly, 
how do we expect such s i tuat ions ? And secondly, do 
we have to know all such s i tuat ions before we can 
write a good set of heur ist ic  rules ? 
Before at tempt ing to answer these questions, we 
wish to h ighl ight  the heur is t ics  used by \[Nagao & 
Nakamura 82\] which looks very promis ing but may 
suffer from the same drawbacks. The reference uses 
sentent ia l  patterns (SP) that express the global 
structure of a sentence. If these SPs are sat is f ied 
by a certain conf igurat ion,  the said conf igurat ion 
is chosen for expansion (they use a best - f i r s t  
search where a conf igurat ion is then a node in the 
search space). 
For our purposes, SPS can also be adapted 
either to place checks test ing whether the analys is  
is on the r ight track, or to  create subgoals if some 
of the const i tuents  of the SP are satisf ied. 
138 
This can be useful for configurations containing 
specific words which can determine its neJ ghbours. 
For exalnple, a conjunction necessitates a VCL or 
PARTCL to its right. 
Going back to the two questions posed earlier 
on, the problem of expecting the situations where 
heuristic rules can be written is not a simple one. 
For a given derivation tree in a context free gram- 
mar, any cut in this tree is a possih\]e configuration 
of the correct analysis. Passing this cut through the. 
pattern marcher will give the complete configuration? 
Looking at ali possible subskrlngs of this cut, and 
multiply 'this by the nu~nher of alI cuts in the tier\]-- 
ration tree will give us the situations we need to 
predict. The result is by no means negligible, to 
say the ieast. 
Fortunately, rules that can apply on intersec- 
ting objects can be precomputed. In particular, if 
we use the pattern matchi.ng procedure of \[Aho & 
Corasick 75\] as mentioned earlier, the procedure 
produces a network equipped with a failure :\[unction 
indicating to which part of another rule (say Rb) 
the pattern matcher is to go to after successfully 
finding a pattern (say rule Ra). This gives a possi- 
ble clash between rules Ra and Rb, where Ra is on 
the \]eft of l{b. For example, the clash between R1 
and R2 in figure 2 can be predicted by the pattern 
marcher, to which a heuristic rule can be written, 
say the one given in figure 7. Figure 6 gives the 
network for the pattern matcher of the reference 
for the rules R\] to R4 in our example. The failure 
function is given by f(i) where i is a state of the 
network while the output of applicable rules is 
given by out{}ut(i) (again we omit the details of 
augmenting ea, ch arc by  the TREE value). ~e refe~ the 
reader to the reference for further details. 
| RELCL ,<" ,  i 1 2 3 '~ ,5 6 7 
~--  . . . . .  -4~ f ( i )  0 0 1 5 0 0 0 
R E L .C~ PNP ~ 9utEut 
- - v - - - - v  i 3 4 6 8 
output(1) vGI. 
Figu<9_{ 
IF (a) R\] is appl icable 
(b) R2 is appl icable 
(c) RI is on the le f t  of R2 
H IE i r io r i ty  R2 := pr or ty R2) + I (ti le higher the score, the higher\[ 
\] the pr io r i ty ) .  
Figure 7 
As for having to predict on possible situations 
we can cut down on some work by making the analyser 
"reason" a littie. For examp\].e, the analyser should 
be able to deduce from the situation in figure 5 
that it can get to the situation in figure 2 and 
hence apply the heuristic rule already written for 
figure 2 (in this case the one given in figure 7). 
This reasoning can be done in the following manner 
with R1 applicable on "NP VK NP" (see figure 5), the 
failure function for R1 points to state \] (see 
figure 6), and with the applicable rule to the imme- 
diate right of R1 being RiO which produces a RELCL, 
this gets us to state 4 with output R2. 
We then obtain a sIightly different situation from 
figure 2 but the heuristic rule can still apply, 
giving priority to rule R2 hence RIO. 
Despite the title, we have hesitated on discus- 
sing strategies, because experience tel\]s us that it 
is very difficu\].t to write admissible strategies 
(i.e. set sequences of heuristic rules). Furthermore, 
strategies may be as risky as procedural methods 
unless they are flexible enough. This means that they 
can be halted, created, interrupted and resumed du- 
ring the analysis. Furthermore, they ought to be 
global rather than particular. For example, the hie- 
rarchy of clauses and phrases can serve to choose 
between rules having the same priority after other 
heuristic rules have applied, and halted when com- 
pIex structures are treated. An interesting discus- 
sion on global and flexible strategies is \[ound in 
\[Hayes-Roth 85\] for the expert system OPM. 
REFERENCE~ 
A.V. Aho and M.J. Corasick, "Efficient string mat- 
ching : an aid to bibliographic search". CACM, June 
1975, vol. 18, n ? 6, pp 333-340. 
ch. Boitet and R. Gerber, "Expert systems and other 
new techniques in MT systems". COI,ING-1984. 
B. Hayes-Roth, "A blackboard architecture :\[or con- 
trol". AI 26 (1985), pp 251-321. 
C.M. Hoffmann and M.J. O'Donnell, "Pattern matching 
in trees". Computer science department, Purdue Univ. 
Y. Lepage, "An~oigu\[tds et traduction automatiques, 
les mdthodes du GETA". BRISES, Octobre 1985. 
S.I,, Lvtinqn, "In tec~ratin~ syntax and semantics". 
Proceedings of the conference on theoretical and 
methodological issues in machine translation of natu- 
ral languages. COLGATE Univ., New-York, August 1985. 
M. Nagao and J. Nakamura, "A parser which learns the 
application order or rewriting rules". COLING-1982. 
J. S\].ocum, "Machine tran..;lation : its history, cur- 
rent status and future prospects". COLING-1984. 
C. Van KlJnken, "Disamhiguation strategy in English 
structural anaIysis". Laporan Teknikal, Projek Terje- 
mahan Automat/.\]<. Universiti Sains Malaysia, Penang, 
December 1984. 
B. Vauquois and S. Chappuy, "Static gra,mnars : a for- 
malism for the description of linguistic models". 
Proceedings of the conference on theoretical and me- 
thodological issues in machine translation of natural 
languages. COL(ZATE Univ., New-York, August 1985. 
Zah6%rin Y, t "Strategies and Heuristics in the analy- 
sis of a natural \].anguage in Machine Translation". 
GETA document, November 1985. 
Zaharin Y., "Strategies and Heuristics in the analy- 
sis of a natural language in Machine Translation". 
PhD thesis, Universiti Sains Malaysia, Penang, March 
1986. Research conducted under the GETA-USM Coopera- 
tion (GETA document). 
139 
