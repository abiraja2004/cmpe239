A SNAPSHOT OF KDS 
A KNOWLEDGE DF_,LIVERY SYSTEM 
James A. Moore end Will iam C. Mann 
USCIlnformaUon Sciences Institute 
Marina del Ray, CA 
June,  1979 
SUMMARY 
KDS Is a computer program which  creates 
mul t l -par~raph,  Natural Language text from a computer 
representat ion of knowledge to be delivered. We have 
addressed a number  of Issues not previously encountered In
the generat ion of Natural Language st the mult i -sentence 
level, vlz: ordering among sentences and the scope of each, 
qua l i ty  comparisons between alternative 8~regat ions of 
sub-sentent Ja l  units,  the coordination of communication 
w i th  non- l ingu is t ic  activities by ? gcel-pursuin~ planner, 
end the use of dynamic models of speaker and hearer to shape 
the text  to the task at hand. 
STATEMENT OF THE PROBLEM 
The task of KDS is to generate English text under the 
fo l low ing  constraints: 
1. The source of information Is a semantic net, having no 
a priori  s t ructur ing  to facilitate the outputt lng task. 
This  represents the most elaborate performance of KDS to 
date. 
SYSTEM DESIGN 
The KDS organization reflects our novel paradigm: 
FRAGMENT- AND-COMPOSE. KDS decomposes the original 
network  into fragments then orders and 8~regatas  these 
according to the dictates of the text-producing task, not 
according to the needs for wh ich  the internal representation 
was  or ig inal ly  conceived. KDS has shown the feasibil ity of 
th is  approach. 
The KDS organization Is a simple pipeline: FRAGMENT, 
PLAN, FILTER, HILL-CLIMB, and OUTPUT. 
FRAGMENT transforms the selected portion of the 
semant ic  net into an unordered set of propositions wh ich  
correspond, roughly,  to minimal sentences. 
2. The text is produced to satisfy an explicit goal held by 
the text generat ing system, wh ich  describes a desired 
cognit ive state of the reader. 
3. To achieve the desired state of the reader equires more 
than a single sentence. 
R ESULTS 
This is not the forum for a extensive analysis of our  
results;  for details, see Mann and Moore \[ 1979\]. However, to 
communicate  the f lavor of what  ~ve have 
accompl ished- - f rom the motivating oal: 
(WANTS SPEAKER 
(KNOWS HEARER 
F ldlE-ALARM-SCENE)) 
and about two  pages of formal propositions describing the 
"F ire-a larm scene',  KDS generated the following: 
W Aeneeor there is a \]'ire, the ~arm s~jttm is started 
whic~ Jounds the a/arm bell and starts the timer. W~n it b 
ninety seconds a\[tor t~t timer L~ started, unless tAe o/arm 
J~$tem is cancelled it co~IS Wells Farfo. Wht~ Wells Far~ 
is called, ff CO~Is tat Fire Dept . .  
W t)en ~ou kear tkt o/arm bill or ~ou smell smoke, stop 
?utr~tMng. determine mheth,r there Is a f irs and decide to 
permit the alarm J~stem or to cancel it. When ),ou dttermine 
mketker there Is a \[ire. l \ [  t~ere iS, permit t~t alarm S~sttm; 
otherwise cancel i t . .W~en ~ou permit the alarm syst~, c~! 
the Fire Dept. i f  possible and \[oilo~ tkt w~uatlon 
procedure. When ~ carroll tke elate s~)sttet, l \ [  it iS mote 
t~an n~ner~ seconds since the timer is started, tke alarm 
s.Tsttm e~ls Wells Fargo: ockormlse continue tmrrytldng. 
PLAN uses goal-sensit ive rules to impose an ordering on 
th is  set of fragments.  A typical planning rule is: 
"When conveying a scene in wh ich  the hearer is to 
ident i fy  h imsel f  w i th  one of the actors, express ell 
proposit ions involving that actor AFTER those wh ich  
do not, and separate these two partitions by a 
paragraph break' .  
FILTER, deletes from the set, ell propositions current ly  
represented as known by the hearer. 
HILL-CLIMB coordinates two sub-activities: 
AGGREGATOR applies rules to combine two or three 
f ragments  into a single one. A typical aggregation rule is: 
"The two fragments 'x does A' and 'x does B' can be 
combin~! into a single fragment: 'x does A and B'". 
PREFERENCER evaluates each proposed new fragment, 
produc ing a numerical  measure of its "goodness". A typical 
preference ru le is: 
"When instruct ing the hearer, lncremm the 
accumulat ing measure by 10 for each occurrence of 
the symbol  'YOU'". 
HILL-CLIMB uses AGGREGATOR to generate new candidate 
sets of f regments,  and PREFERENCER, to determine wh ich  
new set presents the best one-step improvement over the 
cur rent  set. 
The objective funct ion of HILL-CLIMB has been 
enlarged to also take into ecceunt the COST OF FOREGONE 
OPPORTUNITIES. This has drastically improved the initial 
performance,  since the topology abounds wt th  local maxima. 
KDS has used, at one time or another, on the order of 10 
p lann ing rules,  30 aggregation rules and 7 preference rules. 
51 
The aggregation and preference rules are directly 
analogoua to the capabilities of l inguistic eempotence and 
performance,  respectively. 
OUTPUT l sa  simple (two pages of LISP) text generator 
dr iven by a context free grammar. 
ACKNOWLEDGMENTS 
The work  reported here was supported by NSF Grant 
MCS- 76-07332.  
REFERENCES 
Levin, J. A., and Goldman, N. M., Process models of reference 
in context,  I$I/RR-78o72, Information Sciences 
Inst i tute,  Marina del Re),, CA, 1978. 
Levin, J .A. ,  and Moore, J.A., Dialogue Gamest mete- 
communicat ion structures for natural  bnguqe 
interact ion, Co~l t ive  Science, 1,4, 1978. 
Mann,  W. C., Moore, J. A., and Levin, J. A., A comprehension 
model for human dialogue, in Proo. IJCAI-V, 
Cambridge, MA, 1977. 
Mann,  W.C., and Moore, J.A., Computer generation of 
multl-paraq~raph English text, in preparation. 
Moore, J.  A., Levin, J. A., and Mann, W. C., A Gool-orianted 
model of human dialogue, AJCL microfiche 67, 1977. 
Moore, J .A. ,  Communication as a prob lem-so lv iq  activity, 
in preparation. 
52 
