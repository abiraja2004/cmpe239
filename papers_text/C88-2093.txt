Why implemento~-~,~ ~f P~actic:fl NLP  Systems Can net  Wail  
fe~' Li~guis~ie Th~;or~cs 
Remnrh .s  and 'lrhescs 
~)ie~mar Recs~mr 
c/o Project, GENES~S 
GW|I) 0'4, ~)(~livostro :~5 
~) 6100 D~vmstadt  
W(;,u$ ( \ ]e rmany 
A) Ther~ is no doubt~ the idea of taking an 
acc<,pted l ing~ist ic  ghee.<ff (lt) a}~ the basi~ 
of ~he :L~%~lca~entation of ~ pract ical  natara\] 
\],angu~gc~ pz'ecessing (n\].p) system is ve)'f 
atix:active ,, 
But t In rea l i ty  there are no . I . i z tguist ic  
theo:<J,es avai lable that may be ,',~.imp\].y "taken 
f:com the shelf" and appl ied in such a woy0 
Some ~:easons for \[:.him 
There is often a mismatch between the 
\]?roblems dealt  with extensively in a given 
\],inguJ stic theory and their frequency of 
cccr~rence i\[~ real data? 
On the other hand the chosen l inguist ic 
theory OK gran~aar may tell  you only l ittle or 
nothing abotrt phenomena that are pm"edomina.nt 
in your appl icat ion (e.g. large nominal 9roups 
in technical texts), 
-~ Practical  systems need a substantial  if :c, o t  
co~ap\]eyte coverage of the syntax of the nl they 
aye bui \]. P for? ~\[~. general the language 
f<'agm<ants covered by l inguist ic theories a.re 
not  ~u~_f \[\[ icJ .ent ? 
-. Even if you a~:e able to sta~:t with 
.~tructures .i n accordance with a \],inguistic 
theory when bui ld ing a practical  n\].p system 
you will. have to  augment the forma\].ism~ e,g0 
as soon as you have to prec@ss real data and 
not only text book cases a lot of conventional  
n\]aterial has to be taken into account as we\].l: 
format of dates~ measurements~ etc. 
.- ) , ingu is t i c  theories very often have been 
eztensively appl ied to problems 'taken from a 
specif ic nat~a\ ]  language ( in most cases .~ 
F.nglish)~ To transfer  those theories to other 
\].anguages with d i f ferent  problems may be hard 
(if not impossible).  
B) Another d i f ference between theoretical  and 
ongineering problems lies in the fact 'that 
bui lding a pract ical  nlp system always forces 
you to take a lot of add i t iona l  constraints 
into account that are negl igeable from a 
theorist' s v iewpoint  : 
Fo~: the implementation, usage and 
maintenance of pract ical  nlp systems dedicated 
software tools are needed e.g. fox editing, 
debugging and update of grammars and lexica. 
Practical  nlp systems are often evaluated by 
users  (and ~:efereem) that are non-l inguists.  
,According to our exper ience those people tend 
to take "mupe~'fi.cial" aspects 'that have l itt le 
OK no relevance for l inguists as a basin for 
the i r  judgements; eog? if oK if 'not a system 
fo~: German is able to handle umlauts correct\].y 
or how you may type in to a system for 
japanese, 
Practical  nlp ~-}ym terns inevitably need a 
substantial  \].exicon and - due to the 
generat iveness of nl with respect to 
vocabulary - addit ional  techniques for 
handl ing unknown lexical items. 
C) Some ef the abeve helds especial ly fo~: wo~k 
in nl gene~oation: 
- L inguist ic  theories are pr imar i ly  concerned 
with aspects of (syntactic) analysis? 
\[~ome ef the hard problems for analysis (e0g, 
~?\[I? attac|ument) are not equal ly  problemat:i,c in 
generation. 
In general nl generat ion is an 
interdisc ip l inary task involving a lot of non,? 
l inguistic decis ions ~ 
D) Theorists tend to ~'est~cict theist app~'oaches 
to the very techniques avai lable withi~ their 
theories. In pract ica l  nlp systems it may be 
fruitful to  f:ceely combine elea~ent~ f~om 
dist inct "Zinguist ic schools" ~ 'the morpho- 
syntactic front end generator  FREGE \[Emele 87\] 
is a case in point: )?REGE takes functional 
grammatical  structures comparable to those 
from LFG \[Kaplan~ B:cesnan 82\] ~ as input and 
working structures but provides means to 
specify const i tuent ordering as l inear 
precedence relat ions similar to GPSG \[Gazdar 
eta\]., 82\] o 
E ) What about the fol lowing analogy ; ~#he 
relation between theoretical, l inguistics and 
"language engineering" should paral lel  that 
between mathematics and (civil) engineering? 
F) L inguist ic  theory might prof it  from 
problems attacked in pract ical  systems as well 
because (as with mathematics and problems in 
engineering ) these problems may gi~e 
motivat ion for future research. Practical  wo~:k 
in mu\],tilingual generat ion .~, i .  e o attempts to  
generate d i f ferent  languages from the same 
semantic structures - may for example give a 
new perspect ive fox '  work in contrast ive 
l inguistics ? 
To sum up; One should not wait  fbr theoretical  
solutions since theory might not  attack some 
problems unti l  they are of practical 
relevance. 
References 
\[Emele 87\] ~nele, M? (1987): "FREGE .. Ein 
ob J ektor ient ierter  FRont-End-GEnerator" ~ in 
K0 Morik (Ed.) "GWAI-87 o- l lth German Workshop 
on A~ctif icial Intel l igence" ~ Proceedings 
Springext-Verlag 
\[Gazdar et al 85\] Gazdar, G., ~:. Klein~ G. 
Pul lum & I. Sag (1985)~ "General ized Phrase 
Structure Grau~ar"~ Can~ridge~ Ha~v'ard 
University Press 
\[Kaplan~ Bresnan 82\] Kaplan, R.& J, Bresnan 
(1982) : "Lexical Funct ional  Granuna~'~ A Formal 
System for Grammatical  Representat ion" ~ in 
B:cesnan ~ J. (ed?) ( 1982 ) .~ "The Mental  
Representat ion of Gra~m~atical Relations" r 
Cambridge (Mass.): MIT Press 
450 
