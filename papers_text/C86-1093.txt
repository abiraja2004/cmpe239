SCSI_ : a l ingu is t i c  spec i f i ca t ion  language fo r  MT 
paper  presented  fo r  
COLING-86 
Bonn, 25-29 August  1986 
by 
R@mi ZAOAC 
GETA, BP 68 
Un lvers t t6  de Grenob le  
38402 Sa4nt -Mar t in -d 'H~res ,  FRANCE 
ABSTRACT Nowadays, Mr systems grow to  such a s tze  that  a 
f i r s t  spec i f i ca t ion  s tep  is necessary  i f  we 
want  to  be ab le  to  master  the i r  deve lopement  
and maintenance ,  fo r  the  so f tware  par t  as we l l  
fo r  the  l ingu is t i c  par t  ( " l ingwares" ) .  
Advocat ing  fo r  a c lean  separat ion  between 
l ingu is t i c  tasks  and programming tasks ,  we 
f i r s t  i n t roduce  a spec i f i ca t ion /  
imp lementat ion /  va l idat ion  f ramework  fo r  NLP 
then  SCSL, a language fo r  the  spec i f i ca t ion  of  
ana lys i s  and generat ion  modu les .  
KEY-WORDS Machine Trans la t ion ,  Natura l  Language 
Process ing ,  Spec i f i ca t ion  Language.  
I .  INTRODUCTION 
In most Nt_P and second generat ion  MT systems,  the  
in fo rmat ion  computed dur ing  the  process  i s  genera l ly  
represented  as abst ract  t rees ,  very  common descr ip t ion  
too ls  used in  l ingu is t i cs .  The modules  imp lement ing  the  
Var ious  s teps  are  wr i t ten  in  Spec ia l i zed  Languages fo r  
L ingu is t i c  P rogramming (SLLP) (see fo r  example 
<Vauquots85a>,  <NakamureB4>, <S\]ocum84>, <Masse4>). 
In  sp i te  o f  the  express ive  power of  SLLP compared to  
t rad l t ionna l  p rogramming languages  such as L ISP,  the 
concept ion  and the  maintenance  of  programs become more 
and more d i f f i cu l t  as the  complex i ty  o f  " l tngwares"  
grows .  
To take  up th i s  cha l lenge ,  we in t roduce  in  the  f ie ld  
o f  computat iona l  l ingu is t i cs  the  spec i f i ca t ion /  
Imp lementat ion /  va l idat ion  f ramework  which has been 
proved va luab le  in  t radt t ionna l  p rogramming.  Th is  leads  
to  the  in toduct ton  of  new too ls  and new work ing  methods.  
The expected  benef i t s  fo r  computat iona l  l ingu is ts  are  
a l low ing  them to  fac i l i ta te  the  concept ion  of  the  
l ingu is t i c  par ts  o f  NLP sys tems,  tO increase  the  speed of  
rea l i sa t ton ,  to  trnprove the  re l iab i l i ty  of  the  f ina l  
system and to  fac i l i ta te  the  maintenance .  
Wr i t ing  an ana lys i s  program wi th  a SLLP, the  
computat iona l  l ingu is t  must de f ine  the  set  of  s t r ings  to  
be ana lysed ,  the  s t ructura l  descr ip tor  cor respond ing  to  
an input  s t r ing ,  the  s t ra teg ies  used fo r  the  computat ion  
of  the  descr ip tor ,  the  heur i s t i cs  used fo r  ambigu i ty  
cho ices  and the  t reatment  o f  wrong Inputs  (e r rors ) .  He 
genera l ly  wr i tes  a more or  less  prec ise  and comprehens ive  
document on those  problems and begin programming from 
scratch .  Th is  method is h igh ly  unfeas ib le  w i th  la rge  
l ingwares ,  We advocate  fo r  the  use of  a more s t r ingent  
methodo logy  wh ich  cons is t  o f  : 
I .  Spec i fy  fo rmal ly  ( I l e .  us ing  a fo rmal  language)  the  
va l id  inputs  and the  cor respond ing  outputs  : the  
spec i f i ca t ion  must be comprehens ive  and neut ra l  
w i th  respect  to  the  cho ices  of  imp lementat ion .  At 
th i s  s tage ,  the  computational l ingu is t  is concerned 
on ly  w i th  l ingu is t i c  p rob lems,  not  w i th  
programming.  An i n terpreter  fo r  the  spec i f i ca t ion  
language should be used to  wr i te  and debug the  
spec i f i ca t ion .  
2. Spec i fy  the  imp lementat ion  cho ices  fo r  data  
s t ructures  and cont ro l  (decompost ton  in to  modu les ,  
s t ra teg ies  and heur i s t i cs )  and the  t reatement  o f  
e r rors .  Th is  spec i f i ca t ion  depends on the  
Input /output  spec i f i ca t ion  and may par t ia l l y  depend 
on the  k tnd  of  SLLP to  he used fo r  imp lementat ion .  
I t  shou ld  be as fo rmal  as poss ib le ,  a t  leas t  a 
s t r i c t ly  normal i zed  document .  
3. Imp lement  the  module  spec i f ied  us ing  a par t i cu la r  
SLLP. 
4. Va l idate  the  imp lemer l ta t ton  : the  in terpreter  o f  
the  spec i f i ca t ion  language shou ld  be used to  
prepare  a set  o f  va l id  inputs /outputs ;  the  resu l ts  
o f  the  execut ion  o f  the  module  to  be va l idated  on 
the  input  set  i s  compared to  ti~e output  set .  
An In tegrated  so f tware  env i ronement  o f fe r ing  the  
deve lopement  too ls  and Insur ing  the  coherence  between the  
deve lopement  s teps  shou ld  be prov ided  to  fac i l i ta te  the  
use of  the  methodo logy .  
As a f i r s t  s tep  toward  th i s  d i rec t ion ,  we in t roduce  a 
l ingu is t i c  spec i f i ca t ion  language fop  wh ich  an 
in terpreter  i s  be ing  Implemented .  Those too ls  are  used 
in  the  f i r s t  and four th  s teps  as de f ined  be low and are  
be ing  In tegrated  in  a spec ia l i zed  env l ronement  based on 
the  spec i f i ca t ion  language <Yam86>. 
I I .  LINGUISTIC SPECIFICATION 
1. A SPECIFICATION FORMALISM 
Before  present ing  the  spec i f i ca t ion  language i t se l f ,  
atrial1 cons ider  w l la t  p roper t ies  that  such a language we 
shou ld  have.  
Most p rob lems in  NLP systems are  found in  the  ana lys i s  
s tage  (and some in  the  t rans fer  s tage  in  MT sys tems) .  
The major  ga in  shou ld  be to  c la r i fy  the  ana lys i s  s tage  
us ing  the  proposed  f ramework .  Thus,  a l ingu is t i c  
spec i f i ca t ion  language shou ld  : 
de f ine  the  set  o f  va l id  input  s t r ings ;  
de f ine  the  cor respend ing  ouputs  ( s t ructura l  
descr ip tors  o f  s t r ings) ;  
de f ine  the  mapp ing  between those  two sets .  
Ana lys i s  and synthes is  ar'e two complementary  v iews  of  
a language def ined  by a fo rmal  grammar.  We shou ld  
reasonab ly  expect  that  a l ingu is t i c  spec i f i ca t ion  
language shou ld  be equa l ly  Llsed fo r  the  spec i f i ca t ion  of  
ana lys i s  and synthes is  modules  <KeyS4>. 
Formal grammars de f ine  fo rmal  languages ,  and fo rmal  
grammars does not  make arly re ference  tO the  s i tuat ion  
( the  g loba l  context  in  wh ich  sentences  are  produced) ,  
thus  fo rmal  languages  used to  descr ibe  natura l  language 
sub-sets  must a l low the  express ion  of  ambigu i t ies  and 
paraphrases .  An e lement  o f  the mapping  shou ld  be a 
coup le  ( s t r ing ,  t ree)  where many t rees  are  genera l ly  
assoc ia ted  to  one s t r ing  and converse ly ,  many s t r ings  are  
assoc ia ted  to  one t ree .  
The advantage  of  modu lar i ty  i s  admi t ted  and the  
descr ip t ion  of  the  mapping shou ld  be done p iece  by p iece ,  
each p iece  descr ib ing  a par t ia l  mapp ing  and the  to ta l  
393 
mapping  i s  then  obta ined  by  the  compos i t ion  o f  par t ia l  
mapp ings  (e ,g .  un i f i ca t ion  as In  FUGs <Kay84>) .  
An Impor tant  feature  o f  such  a language I s  that  a 
l ingu is t i c  spec i f i ca t ion  shou ld  be wr t t ten  by  l ingu is ts  
who have  no a pr io r i  knowledge In  computer  sc ience  : a 
l ingu is t  must  be ab le  to  concent ra te  on ly  on \ ] tgu is t tc  
p rob lems and  not  on computer  sc tence  prob lems.  The 
fo rmal i sm shou ld  be c lean  o f  a l l  computer  sc ience  
impur i t ies ,  the  mechan ism o f  compos i t ion  shou ld  be c lear  
and  s imple .  
Wi th in  th i s  f ramework ,  a graph ic  fo rmal i sm for  the  
spec i f i ca t ion  o f  p rocedura l  ana lys i s  o r  generat ion  
grammars ,  the  "Stat i c  Grammars"  (SG) fo rmal i sm has been 
deve lopped at  GETA under  the  d i rec t ion  o f  P r .B .Vauquo is  
<Vauquo is85b>.  Th is  fo rmal i sm i s  now used  tn  the  F rench  
MT Nat iona l  P ro jec t  to  spec i fy  the  grammars  o f  an 
lndust r la |  Eng l i sh -F rench  sys tem.  Up to  now,  SGs were  
hand-wr i t ten  and  cannot  be ed i ted  on computer  because  o f  
the  use  o f  g raphs .  Th is  fo rmal i sm has been mod i f ied  tn  
o rder  to  rea l i ze  a so f tware  onv l ronement  based  on SG 
(s t ructura l  ed i to r ,  in terpreter ,  g raph ic  outputs  . . . .  ) .  
I t  t s  ca l led  "St ructura l  Cor respondence  Spec i f i ca t ion  
Language"  (SCSL) .  A grammar  wr i t ten  in  SCSL tS ca l led  
"St ructura l  Cor respondance  Spec i f i ca t ion  Grammar"  (SCSG).  
SCSI_ ( sect .  I I I )  a l lows  one to  wr i te  the  grammar  o f  any  
in teres t ing  fo rmal  language such  as programming languages  
or  sub-sets  o f  natura l  languages .  Th is  fo rmal i sm i s  qu i te  
genera l  and  does  not  depend on a par t i cu la r  l ingu is t i c  
theory .  GETA, under  the  d i rec t ion  o f  P r .B .Vauquo is ,  has 
e laborated  i t s  own l ingu is t i c  f ramework  and  methodo logy  
f rom which  th i s  work  d i rec t ly  descends ,  but  i t  i s  
never the less  per fec t ly  poss ib le  to  wr i te  grammars  w i th in  
d i f fe rent  l ingu is t i c  f rameworks .  We emphas ize  th i s  po in t  
because  the  d i s t inc t ion  between the  fo rmal i sm proper t ies  
and  the  l ingu is t i c  theory  proper t ies  ts  not  a lways  c lear .  
Moreover ,  t t  may be tempt ing  to  w i re  the  proper t ies  o f  
some l ingu is t i c  theory  w i th in  a par t i cu la r  fo rmal i sm,  and  
th i s  t s  somet imes  done ,  lead ing  to  confus ion .  
2.  IMPLEMENTATION AND VALIDATION OF L INGUIST IC  MODULES 
As ment ioned ear l ie r ,  a SCSG Is  used  fo r  the  
spec i f i ca t ion  o f  ana lys i s  o r  generat ion  modu les  wr i t ten  
in  one  o f  the  SLLP o f  the  ARIANE sys tem.  Def in ing  a 
mapp ing ,  a SCSG I s  neut ra l  w i th  respect  to  imp lementat ion  
cho ices  wh ic l3  a re  essent ia l l y  a lgor i thmic  In  nature  
(o rganteat ion  in  modu les ,  cont ro l ,  e tc )  and  w i th  respect  
to  in t r ins ic  ambigu i ty  cho ices  wh ich  are  essent ia l l y  
heur i s t i c  in  nature .  
The same SCSG may be used  to  spec i fy  the  lnputs /ouputs  
o f  d i f fe rent  p rocedura l  g rammars ,  each  o f  wh ich  
imp lement ing  d i f fe rent  s t ra teg ies  and  heur i s t i cs  fo r  
comparat ive  purposes  ? the  resu l t  must  never the less  
cor respond to  the  same spec i f i ca t ion .  
The in terpreter  (not  yet  fu l l y  imp lemented)  t s  used  
fo r  debugg ing  a SCSG ( tes ts ,  t races  . . . .  ) and  fo r  the  
empi r i ca l  va l idat ion  o f  p rocedura l  g rammars  fo r  ana lys i s  
o r  generat ion :  the  funct ion  computed  by  a procedura l  
g rammar  must  be inc luded tn  the  mapp lng  def ined  by  the  
SCSG spect f iy ing  the  procedura l  g rammar .  
The in terpreter  may compute  the  t rees  cor respond ing  to  
an input  s t r ing  (ana lys i s )  o r  the  s t r ings  cor respond ing  
to  an input  t ree  (generat ion) .  A char t  ident i f ie r  may 
def ine  an ent ry  po in t  fo r  the  in terpreter .  
Be fore  en execut ion ,  one  can  type  in  d i f fe rent  t race  
commands .  A t  the  end  o f  an  execut ion ,  the  t race  and  the  
der ivat ion  may be pr in ted .  
Qne can  t race  fo r  d i f fe rent  char ts  ( s tep-by-s tep  or  
o therwise)  a tentat ive  app l i ca t ion  of a char t ,  a sucess ,  
a fa i lu re  o r  e combinat ion  o f  these  parameters .  In  the  
s tep-by-s tep  mode,  the  in terpreter  s tops  on each  t raced  
t r ia l / sucess / fa i lu re  and  i t  i s  poss ib le  to  type  In  new 
commands ( t race ,  unt raoe ,  s top)  and  chose  the  next  char t  
to  be app l ied .  
An output  t race  e lement  have  the  fo l low ing  genera l  
pat tern  (severa l  leve ls  o f  deta i l s  a re  ava ib le )  : 
<char t  td>,  <t ree_ocourence>,  <st r ing_occurence>.  
I I I .  THE LANGUAGE 
To g ive  a f lavour  o f  the  spec i f i ca t ion  language,  we 
in t roduce  e s impl i f ied  vers ion .  Unnecessary  (but  
essent ia l  fo r  p ract i ca l  use)  const ructs  o f  the  language 
are  removed.  A more  abst ract  v iew has been s tud ied  tn  
<Zehar tnB6>.  
A SCSG descr ibe  s imul taneous ly  : 
the  set  o f  s t r ings  o f  the  language;  
the  set  o f  s t ruc tura l  descr ip tors  o f  the  language:  
the  mapp ing  between those  two sets .  
A SCSG ts  composed o f  "char ts" .  The mapp ing  between 
the  s t r ing  language and  the  t ree  language I s  decr tbed  in  
par ts  : a char t  decr fbes  a par t ia l  mapp ing  (set  o f  va l id  
sub-s t r ings  <-> set  o f  va l id  sub- t rees) ,  the  to ta l  
mapptng  i s  obta ined  by  the  compos i t ion  o f  par t ia l  
mapp ings  (sect .  IV ) .  
SCSL I s  a language us ing  key-words  : every  impor tant  
syntact i c  un i t  beg ins  w i th  a key-word  (e .g .  CHART). 
Ident i f ie rs  beg in  w i th  a t  leas t  one  le t te r ,  des ignators  
beg ins  w i th  a t  leas t  one d ig i t .  Des ignators  a re  preceded 
by  a pre f ix  ind icat ing  the i r  type ,  
A SCSG beg ins  w i th  the  dec la rat ion  o f  labe ls  and  
decorat ions ,  and  then  fo l lowed by  the  char ts .  Char ts  
cons is t  of a t ree  par t  and  a fo res t  par t  descr ib ing  
respect ive ly  a t ree  pat tern  and  a fo res t  pat tern .  We 
then  have  the  contexts  par t  and  las t ly  the  const ra in ts  
par t  ( sect .  I I I .2 ) .  
SCSL do not  have  the  concept  o f  ass tgnement  : a char t  
de f ines  cor respondence  between a t ree  end  a fo res t  
const ra ined  by  a boo lean  express ion  on the  pat terns  o f  
the  char t .  
The bas ic  const ruct  o f  the  language is  a labe led  and  
decorated  t ree  pat tern  : each  node o f  the  descr ibed  
t rees  i s  a coup le  ( labe l ,  decorat ion) .  The labe l  have  
t i l e  s t r ing  bas ic  type ,  the  decorat ion  have  a h ie rarch ica l  
de f in i t ion  wh ich  use  the  SCALAR and SET const ructors .  A 
const ra in t  I s  a boo lean  express ion  on the  labe ls  and  
decorat ions  o f  tbe  nodes  o f  the  pat terns .  
i .  LABEL~ DECORATION AND TREE PATTERNS 
Most  o f  SLLP use  t rees  as bas ic  data  s t ructure ,  Some 
assoc ia te  to  a t ree  or  to  a node at t r ibutes ,  essent ia l l y  
a set  o f  var iab le /va lue  pa i rs  wh ich  may be man ipu la ted  
w i th  a few operators .  To o f fe r  a more  power fu l  
descr ip t ion  too l ,  a SCSL node  t ree  tsa  coup le  ( labe l ,  
decorat ion)  where  the  decorat ion  is  a h ie rarch ica l  
a t t r ibute  s t ructure .  Th is  t s  in tended to  Fac i l i ta te  the  
man ipu la t ion  o f  complex  sets  o f  a t t r ibutes  through a 
un i f ied  v iew.  
t . t .  Labe l  
The labe l  I s  t rad i t iona l ly  a non- termina l  o f  a 
grammar ,  but  t t  may be v iewed as a par t i cu la r  a t t r ibute  
o f  a t ree .  The type  def in i t ion  o f  labe ls  t s  expressed  
w i th  a regu lar  express ion .  The operat ion  on th i s  type  ts  
equa l i ty .  
Exem~ : 
LABEL lb l  = ( "b" . ( "a" )*  )+ + "S"  + "A"  + "B"  
1 .2 .  Decorat ion  
The decorat ion  i s  in terpreted  as an or iented  
non-ordered  t ree  where  a t t r ibute  ident i f ie rs  (SCALAR or  
SET type)  a re  the  labe ls  o f  the  nodes  and the  va lues  o f  
the  a t t r ibutes  are  the  fo res ts  that  they  dominate  ( in  the  
394 
actua l  vers ton  o f  SCSL,  a t t r ibutes  may have  the  STRING or  
INTEGER types  w i th  the  assoc ia ted  operators ) ?  
For  the  SCALAR type ,  the  operat ion  i s  equa l i ty ,  For  
the  SET type ,  the  operat ions  a re  un ion ,  In tersect ion  and  
set  d i f fe rence ,  Re la t iona l  operators  a re  equa l i ty ,  
menbersh ip  and i nc lus ion .  
The  operat ions  a re  de f ined  on  a h ie rarch ica l  se t  
s t ruc ture  : one  must  ind icate  on  whlch  l eve l  an  operat ion  
i s  de f ined  by  su f f i x ing  the  operator  w i th  an  in teger .  The  
defau l t  va lue is the f i r s t  l eve l ;  " * "  is used fo r  the 
deepest  leve l .  
Examples  : 
a (b ,c (e , f ,g (g l ,g2) ) )  = a (c (h , f ,g ) ,b )  t s  t rue  
a a 
I I I I 
b c c b 
___1  =1 I 
I I l I I \[ 
e f g h f g 
a (b ,c (e , f ,g (g l ,g2) ) )  =2 a (d ,c (e ,g ) )  I s  fa l se  
a 
! I ! I 
b e d c 
I \] ! \[ \[ 
e f g e g 
I ! 
g l  g2  
a (b ,c (e ,  
a 
I I 
b c 
I 
e f g 
g l  g2  
f ,g (g l ,g2) ) )  =* a (c (e ,g (g l ,g2) , f ) ,b )  I s  t rue  : 
a 
i 
I I 
b c 
e g f 
\[ 
g l  g2 
FqY~AE~of  decorat ion  fo r  noun  phrases  : 
DECORATION deco  : SET ( 
semant ic  re la t ion  : SCALAR ( 
ins t rument ,  quant | f te r ,  qua l i f i e r ) ,  
syntact i c_ funct ion  : SCALAR ( 
coord inat ion ,  governor ,  sub jec t ) ,  
ca tegory  : SCALAR ( 
noun  : SCALAR ( 
semant ic  : SET (an imate ,  measure) ) ,  
ad jec t ive  : SCALAR ( 
o rd ina l ,  card ina l ,  noun  phrasequant i f ie r )  
determiner  : SCALAR (quant i f ie r ) ,  
subord lnator  : SCALAR (p repos i t ion)  ) 
1 .3 .  f ree .pat tern  
The  bas ic  not ion  o f  the  language i s  a labe led  and  
decorated  t ree .  The  types  o f  a node ,  a t ree ,  a fo res t  a re  
de f ined  by  the  dec la ra t ion  o f  the  labe ls  and  the  
decorat ions .  
A char t  shou ld  be  a comprehens ive  descr ip t ion  o f  a 
l ingu is t i c  fac t  wh ich  Bay  I lave  d i f fe rent  rea \ ] l sa t lons  : 
the  decorat ion  a l low the  man ipu la t ion  o f  se ts  o f  
a t t r ibutes  a t  d i f fe rent  leve ls  o f  detat1 ,  the  s t ruc ture  
shou ld  descr ibe  a who le  fami ly  o f  t rees ,  
The  s t ruc ture  o f  a t ree  pat tern  i s  descr ibed  wt th  
des ignators  whtch  are  Imp l i c i t l y  dec la red .  The  scope  o f  s 
des ignator  I s  reduced  to  a char t .  A des ignator  beg ins  
wt th  one  dtg i t ,  
a node  des ignator  i s  p re f ixed  wt th  , . t , .  The  content  
o f  a node  i s  accessed  by  means  o f  decorat ion  and  
labe l  ident i f ie rs  : the  labe l  o f  a node  .1 i s  
accessed  by  1b1( .1 )  ( i f  t i l e  labe l  i s  dec la red  as  
"}b l " ) ,  t t s  decorat ion  by  deco( .1 ) .  
a t ree  d e ! ~  i s  p re f ixed  w i th  "~" .  The  t ree  
may be  reduced  to  a s ing le  node .  
a fo res t  des ignator  I s  p re f ixed  w i th  "$" .  The  
fo res t  may be  empty ,  
A t ree  pat tern  descr ibe  a set  o f  t rees ,  each  t ree  
be ing  complete ly  descr ibe  in  w id th  and  depth .  
E_xarqpIe_ : the  pat tern  .0 (  $2 ,  .3 ( .4 ,  $5) ,  $6 ) : 
? 0 
f I I 
$2 .3  $6 
.4  &5 
may be  lns tant la ted  by  : 
z~ "0  = a 
. . . . . . . . . . . . .  $2 = b(c ,d )  , e , f (g )  
I I I I .3  = h 
b e f h ,4  = i 
! I I . . . .  &S  = k ( i ,m)  
i f g ! ~ $6  = 
c d i k 
___l . . . .  
t 
I m 
t le re ,  }abe ls  a re  fo r  a coup le  (}abe l ,  decorat to t ) ) .  
2 .  CHARTS 
A char t  has  the  fo l low ing  pat tern  : 
CHART <char t  id> 
<TREE> - -  t ree  pat tern ,  
<FOREST> - -  sequence  o f  t ree  pat terns ,  
<I_EFT CONTEXT> - -  se t  o f  cuts  o f  the  der ivat ion  t ree  
<RIGI IT CONTEXT> - -  conta in ing  the  t ree  pat tern .  
<CONSTRAINTS> - -  boo \ ]ean  express ion  on  \ ]abe ls  and  
- -  decorat ions .  
2 .  I . T ree  and  fo res t  par ts  
The  t ree  par t  descr ibes  a set  o f  t rees  w i th  the  
fo l low ing  syntax  : 
TREE <t reepat tern> 
The  fo res t  par t  descr ibes  a set  o f  sub-s t r ings  w i th  
the  fo l low ing  syntax  : 
FOREST <fores t_pat tern> 
The  e lement  o f  the  fo res t  pat tern  may be  : 
a s t r ing  e lement  descr ibed  d i rec t}y ;  
- a sub-s t r ing  descr ibed  ind i rec t ly  us ing  the  
cor respond ing  s t ruc ture  ( t ree) ,  de f ined  by  some 
char t .  
395 
The fo res t  pat tern  is a sequence  o f  t ree  pat terns  
descr ibed  by  a regu lar - l i ke  notat ion  : a t ree  pat tern  
su f f i xed  by  "+"  may be  i te ra ted ,  by  "?"  opt iona l  and  by  
"*" opt iona l  o r  I te ra ted .  Cont rary  to  regu lar  
express ions ,  one  can  use  these  notat ions  fo r  s ing le  t ree  
pat terns  on ly .  
TO have  s tmp\ ]er  notat ions ,  an  i te ra ted  t ree  pat tern ,  
e .g ,  ( .1 ( .2 , ,3 )  ) * ,  w111 be  wr i t ten  .1 . ( ,2 , .3 )  and  the  
same convent ion  w i i l  ho ld  fo r  "?"  and  "+" .  Such  a 
pat tern  must  be  used  as  a who le  and  i s  in terpreted  as  a 
l i s t  : a boo lean  express ion  on  nodes  o f  such  a pat tern  
i s  in terpreted  as  an  express ion  on  the  nodes  o f  each  t ree  
o f  the  l i s t .  
E?amJ~_Le. : .1?  , .3 , ($4)  , .5+($6)  
the  node  des ignated  by  .1 may be  absent ;  
the  t ree  des ignated  by  .3 ($4)  may be  absent  o r  
i te ra ted ;  
the  t ree  des ignated  by  .5 ($6)  must  be  present  and  
may be  i te ra ted ;  
2 .2 .  Cor respondance  and  const ra in ts  
a ~ l l c l t  cor res J3ondance  between t ree  and  fo res t  
To avo id  the  dup l i ca t ion  o f  the  same const ra in ts  in  
the  t ree  par t  and  i n  the  fo res t  par t ,  we a l low the  
fo l low lng  notat ion  fac i l i ty .  
The  same node  des ignators  in  the  t ree  pat tern  and  the  
fo res t  pat tern  represent  d i s t inc t  ob jec ts  re la ted  to  each  
other  in  the  fo l low lng  manner : 
i f  C (T .x )  i s  t i l e  se t  o f  const ra in ts  on  a node  T .x  o f  
the  t ree  par t  and  C(F .x ) ,  the  set  o f  const ra in ts  on  the  
node  F .x  o f  the  fo res t  par t ,  then  node  T .x  ver i fy  C(T ,x )  
and  the  const ra in ts  o f  C (F ,x )  wh ich  are  not  cont rad ic tory  
w i th  those  o f  C (T .x )  (and  converse ly  fo r  node  F .x ) .  
Th is  re la t ion  may a l so  be  exp l i c i t l y  s ta ted  fo r  nodes  
hav ing  d i f fe rent  des ignators  us ing  the  predef tned  CORRES 
funct ion .  
Some fo rmal  const ra in ts  l ink ing  the  t ree  pat tern  and  
the  fo res t  pat tern  are  ver i f ied  a t  compi le  t ime to  ensure  
dec idab i l i ty .  
b )  Const ra in ts  
The  const ra in ts  par t  i s  a boo lean  express ion  on  labe ls  
and  decorat ions  o f  char t  pat tern  nodes .  A i l  c lass ica l  
boo lean  operators  a re  ava i lab le  (and ,  o r ,  exc lus ive  or ,  
not ,  imp ly ,  equ iva lent ) .  
Des ignators  a re  pre f ixed  by  A fo r  the  t ree  par t  and  F 
fo r  the  fo res t  par t .  An express ion  us ing  non-pre f ixed  
des ignators  i s  in terpreted  as  an  express ion  on  the  
des ignators  o f  the  t ree  par t  and  o f  t i l e  fo res t  par t .  The  
des ignators  o f  context  pat terns  Bust  be  d i f fe rent  f rom 
the  t ree  par t  end  fo res t  par t  des ignators .  
CONSTRAINTS CORRES(T .1 ,  F .4 )  
& degre(T .O)=degre(F .4 )  
& ( (degre(T .3 )~=degreO & degre(F . l )=degre(F .3 ) )  
V (degre(T .3 )=degreO & degre( .1 )=degre( .4 ) )  ) 
A t ree  pat tern  o f  the  context  pat tern  i8  a member  o f  a 
cut  o f  the  der ivat ion  t ree  o f  the  context - f ree  ske le ton  ; 
a context  pat tern  descr ibes  a set  o f  cuts  in  the  
der ivat ion  t ree  (sect .  IV .2 ) .  
A context  pat tern  i s  a fo res t  pat tern  where  each  t ree  
pat tern  may be  pre f ixed  by  the  "not"  boo lean  operator  
( "^") ,  ind icat ing  the  mandatory  absence  o f  the  t ree  
pat tern .  Context  des ignators  must  not  be  used  in  o ther  
par ts  o f  the  char t .  
Examll3Le ~ : we g ive  some examples  o f  r ight  contexts  and  
the i r  in terpreta t ions .  The  const ra in t  6 ( .5 )  i s  wr i t ten  
fo r  a boo lean  express tom on the  labe l  and  decorat ion  o f  
,5 .  
there  ex is ts  a cut  such  that  the  f i r s t  e lement  o f  
th i s  cut  ver i fy  C : 
RCTX .5 ($6)  CONSTRAINTS C( .5 )  
? he  f i r s t  e lement  o f  each  cut  ver i f ies  C( .5 )  : 
RCTX ^.5($6)  CONSTRAINTS ^C( .S* )  
there  ex is ts  a cut  and  there  ex is ts  an  e lement  o f  
th i s  cut  such  that  6 ( .5 )  : 
RCTX &4* , .5 ($6)  CONSTRAINTS C( .5 )  
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  + 
CHART bx39 
TYPE : s imp le  NOUN PHRASES. 
CASES : absorpt ion  o f  le f t  and  r ight  adverbs .  
EXAMPLES : " some o f  the  books" ,  
"a t  leas t  two  tab les" .  
TREE .0  ( .17 ,  $5 ,  .2 ,  $6 ,  .37  ) 
FOREST .1?  , .0 (  $5 ,  .2 ,  $6)  , .3?  
RCTX .4 ($7)  
CONSTRAINTS 
- -  const ra in ts  on  t ree  nodes  : 
e t iq (T .O)="nps"  & k (T ,O)=np 
& s f (T , t ? )=des  
& s f (T .3? )=des  
- -  const ra in ts  on  fo res t  nodes  : 
& e t iq (F ,O)='np"  & k (F .O)=np 
& et iq (F . i ? )^="ago  '' 
& (cat (F . t )=2 a (npmd)  V cat (F .1 )=2 a(npqt f ) )  
& s f (F .2 )=gov  
& cat (F ,3? )=2 a(npmd)  
& (EX IST(F . I ? )  V EX IST(F .3? )  ) 
- -  EXIST i s  a p redef lned  boo lean  funct iqn  
- -  tes t ing  the  ex is tence  o f  an  ins tance  : 
- -  there  must  be  an  ins tance  o f  .1 o r  .3  
- -  const ra in ts  on  r ight  context  and  fo res t  nodes  : 
& (EX IST( .3? )  => 
(e t lq ( .4 )^:"np  '' V e t tq (F .3 )="ago" ) )  
F tLguPe t : Example  o f  a s imp le  char t  fo r  Eng l i sh  
2 .3 .  Contexts  
A par t ia l  mapp ing  descr ibed  by  a char t  in  a 
context - f ree  manner  may be  subord inated  to  contextua l  
const ra in ts  on  the  le f t  or  r ight  context  o f  the  descr ibed  
set  o f  sub-s t r ings .  Th is  i s  a power fu l  too l  to  descr ibe  
contextua l  const ra in ts ,  co - re ferences ,  wh-movements ,  e tc .  
A context  e lememt  i s  a sub-s t r ing  wh ich  i s  descr ibed  w i th  
a cor respond ing  t ree  pat tern .  
396 
I ns tance  o f  t ree  and  fo res t :  pat terns  fo r  "some o f  the  
books" :  
,0  < . . . .  npc" . l  .3?  <-  
. t ?  <-  "some" .2  $5  <-  "o f " .3  , " the" .4  
.2  <-  "books" .5  $6  <-  
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  + 
I 
bx39 ! 
\[ 
TREE " r ips" .1  I 
I I 
I \[ 
f I I f l 
f I f i ! 
"some"  . 2 "o f " .  3 " the" .4  "books"  . 5 1 
? 
"np( : " . t  : deco(k (np) ,  ca t (n )  ) 1 
"son ic" .2  : deco(cat (a (npqt f ) ) ,  s f (des )  ) l 
"o f " ,3  : deco(cat (s (prep) ) ) ,  s f ( reg)  ) f 
" the" .4  : deco(cat (d ) ,  s f (des )  ) f 
"books" .5  : deco(  cat (n (nc) ) ,  s f (gov)  ) I 
I 
l 
! 
FOREST "np" . l  ! 
! ! 
f I 
l 1 r ! 
"some" ,2  "o f " .3  " the" .4  "books" .5  ! 
i 
"np" . l  : deco(k (np) ,  ca t (n )  ) ! 
" some" .2  : deco(cat (a (npqt f ) )  ) \[ 
"o f " .3  : deco(cat (s (prep) ) ) ,  s f ( reg)  ) ! 
" the" .4  ; deco(  cat (d ) ,  s f (des )  ) I 
"books" .5  : deco(eat (n (no) ) ,  s f (gov)  ) ! 
! 
F tqure  2 : Char t  ins tance  on  "some o f  the  books"  
iV .  THE DERIVAT ION MECHANISM 
1. ELEMENT OF 1HE MAPPING 
An e lement  o f  the  mapp ing  de f ined  by  a SCSG i s  a 
coup le  ( s t r ing ,  t ree)  where  the  cor reapondance  i s  de f ined  
for ,  each  sub  t ree ,  
The  s t r ing  i s  d i sp layed  as  a l inear  g raph  labe led  
wt th  s t r ing  e lements  ( te rmina ls  o f  the  grammar) .  
The  t ree  i s  a cor respondance  t ree  : to  each  node  i s  
assoc ia ted  a l i s t  o f  paths  o f  the  s t r ing  graph  ( the  
cor respondance  ts  genera l ly  not  p ro jec t ive ,  e .g .  
represent ing  the  " respect lv ly"  const ruct ) .  
o f  the  coup le  fo r  the  s t r ing  "some o f  the  
books"  : 
-i . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  + 
i T 
I bx39 I 
! TREE : l 
I "nps" .  1 \[ 
\[ I f 
t ! ~ f \[ I 
T ~ i I ! i 
I " some" .2  "o f "  .3  " the" .4  "books"  . 5 ! 
f ! 
l "npc" . l  : deco(k (np) ,  ca t (n )  ) ; (0 ,4 ) .  ! 
! "some" .2  : deco(cat (a (npqt f ) ) ,  s f (des )  ) ; (0 ,  t ) .  l 
I "o f " .3  : deco(  cat (s (prep) ) ) ,  s f ( reg)  ) ; ( t ,2 ) .  ! 
! " the" .4  : deco(cat (d ) ,  s f (des )  ) ; (2 ,3 ) .  ! 
I "books" .5  : deco(cat (n ( l l c ) ) ,  s f (gov)  ) ; (3 ,4 ) .  \[ 
r 
! S I I~ING : I 
, i 
! O- "SOl i le " .2  -1= "o f " .3  .2 - " the" .4  -3 -  "books" .5  -4  \[ 
! "some" .2  : deeo(cat (a (npqt f ) )  ) (0 ,1 ) .  I 
I "o f " .3  : deco(  cat (s (prep) ) )  ) (1 ,2 ) .  l 
l " the" .4  : deco(cat (d )  ) (2 ,3 ) .  t 
! "boo l{s" .5  : deoo(cat (n ( l l c ) )  ) (3 ,4 ) .  1 
4 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  + 
FQ~Eure 3 : Ap i l ca t ion  o f  bx39  on  "some o f  the  books"  
2 .  DERIVATION IN  THE CONIEXT-FREE FRAMEWORK 
In  the  context - f ree  f r~,*mework ,  S char t  may be  see~l as  
a ru le  In  the  PRQLOG \ ] I  f l y ,  your  : 
4 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  4. 
f t 
I Cl IART  ( t ree ,  s t r ing  ) ->  r 
! TERMINAL(node l  , ss t r ingt  ) \[ 
f <*char t  , t ree : ! ,  ss t r tng2> \[ 
I ! 
I EVAL(const ra in ts )  I 
! ARC( t ree ,  s t r ing ,  context )  ; \[ 
\[ , \[ 
I . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  + 
Cl IART  t s  the  char t  ident i f ie r ,  
~ \ [ 'ee  z s t r ln9~ i s  the  computed  coup le ,  
TERMINAL  i s  a s t r ing  e lement  de f in i t ion ,  
- *char t  ,~ var tab le  that  w i l l  be  tns tant la ted  w i th  a 
char t  tdent t f  l e t ,  
EVAL ts  a p red icate  that  eva luate  the  const ra |n ts  
par t ,  
ARC make the  reduct ion  and  memor ize  the  ( :ontexts  
fo r  fu ture  eva luat ion .  
The  a lgor t  thm o f  the  context - f ree  ske le ton  i s  a 
bot tom-up  vers ion  o f  Ear ley ' s  a lgor i thm def ined  and  used  
by  Qut? l ton  <Outnton80> in  the  KEAL speech  recogn i t ion  
sys tem.  
For  the  sake  o f  c la r i ty ,  the  input  tape  and  the  
fac tor i zed  s tack  may be  represented  as  a C -graph .  
Execut ing  an  ana lys ts ,  t i l e  In terpreter  rece ives  a \ ] tnear  
labe led  C -graph  and  t~orks  by  add ing  on  arcs  fo r  each  
reduced  const i tuent .  An arc  I s  labe led  by  a 
cor respondance  t ree ,  the  contexts  to  be  eva luated  and  
po in ters  to  the  reduced  const i tuents .  
397 
ExamloJe of  a der ivat ion  t ree  fo r  the  s t r ing  "some of 
the  books" .  The coup le  ca lcu la ted  Is wr i t ten  bestde  the 
char t  ident i f ie rs .  
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  
DERIVATION TREE : 
bx39 < nps(some,o f , the ,books)  (0 ,4 )  > 
I 
1 
r I 
"some" bx38 < r ips (o f , the ,books)  1 ,4)  > 
I 
I 1 
"o f "  bx3? < nps( the ,beoka  (2 ,4 )  > 
I 
! 
I 1 
" the"  bx5 < npe(books)  (3 ,4 )  > 
I 
"books" 
STRING : 
O- "some" -I-- "o f "  -2 -  " the"  -3 - "books" -4 
F ~  4 : Der ivat ion  fo r  "some of  the books" 
3. CONTEXT EVALUATION 
A context  i s  eva luated  dur ing  a t raversa l  o f  the cuts  
o f  the  der ivat ion  t ree  wh ich  go through the  node 
conta in ing  the  coup le  ( s t r ing ,  t ree) .  
A context  pat tern  memor ized on an arc  (x ,  y )  descr ibes  
cuts  tn the  der ivat ion  t ree .  For a C -graph  w i th  Input  
node I and output  node O, these  cuts  are  represented  by 
paths  f rom y to  O ( fo r  a r ight  context ) .  A r ight  context  
eva luat ion  is  thus  reduced to  the  search  of  a sub-C-graph 
f rom y to  0. 
V. CONCLUSION 
In the  s tudy  and deve lopement  of  fu ture  indust r ia l  MT 
sys tems,  the  de f in i t ion  and Implementat ion  of  l ingu is t i c  
par ts  ra i se  many prob lems par t ly  due to  the  s i ze  of  the  
sys tems,  and we hard ly  need r igorous  methods of  
deve lopement .  The cha l lenge  ts to  theor i ze  the  l ine  of  
ac t iv i t ies  wh ich  go f rom the  fo rmal  spec i f i ca t ion  of  an 
In formal  p rob lem to  the  preof  o f  cor rectness  of  the  
cor respond ing  program,  and th i s  In  the  f ie ld  of  
l ingu is t i c  p rogramming.  
As a f i r s t  s tep  in  th i s  d i rec t ion ,  w i th in  the  
spec i f i ca t ion / Implementat ion /va l idat ion  f ramework ,  a 
so f tware  envt ronement  Is  be ing  deve loped based on a 
l ingu is t i c  spec i f i ca t ion  language.  
Thts  language a l lows  l i ngu is ts  to  spec i fy  ana lys i s  and 
generat ion  modules  fop  natura l  language sub-sets  and the  
in terpreter  a l lows  empi r i ca l  va l idat ion  ef 
imp lementat ions .  The language is  ac tua l ly  used to  spec i fy  
the  grammars of  the  French MT Nat iona l  P ro jec t ,  and fo r  
a l l  new deve lopements  car r ied  out  in  GETA. 
For fu r ther  work ,  extens ions  are  s tudted ,  spec ia l l y  
the  spec i f i ca t ion  of  t rans fer  modu les .  Work is  a l so  be ing  
engaged to  deve lop  r igorous  l ingu is t i c  p rogramming 
methods us ing  SLLP prov ided  w i th  SCSG spec i f i ca t ions .  
REF_~_ERENCES 
<Better85> : BOITET C. ,  GUILLAUME P . ,  QUEZEL-AMBRUNAZ 
M. A case a tud~ tn  so f tware  evo lu t ion  : f rom ARIANE 
78,4 to  ARIANE 85 Proceed l r lgs  o f  the  Conference  an 
Theoret i ca l  and Methodo log ica l  I ssues  tn  Machine 
Trans la t ion  of  Natura l  Languages,  Co lgate  Un ivers i ty ,  
14amtlton,  N . -Y . ,  U .S .A ,  August  14-16, 1989. 
<Kay84> : KAY M. Funct tonna l  Un i f i ca t ion  Grammar : a 
fo rmal i sm for  Machine Trans la t ion  Proceed ings  of  
COLING-84 
<Mass84> " MAAS H.~D. The MT s stem SUS? presented  a t  
the  ISSCO Tutor ia l  on Mac'-hlne Trans la t ion ,  Lugano,  
Swi tzer land ,  Apr t l  2 -6 ,  1984. 
<Nakamura84> : NAKAMURA d . ,  TSUdI d . ,  NAGAO M. Grammar 
N r t t t r l ~ ~  of  Mu-Machlne Trans~at~ 
Pro jec t  and i t s  caracter l s t tcs  P roceed ings  of  
COLING~84. 
<OutntonSO> : OUINTON P. Cont r ibut ion  A ia  
reconna issance  de la  paro le .  Ut l l i sa t ton  de m~thodes 
heur i s t i~our  \ ]a reconna issance  de phrases  Th~se 
de Docteur  as Sc iences  en Math&mattquea ,  Un ivers l t6  
de 9ennes,  1980. 
<Slocum84> : SLOCUM d. METAL : the  LRC Machine 
t rans la t ion  S~stem presented  a t  the  ISSCO fu tor ta l  on 
Machine Trans la t ion ,  Lugano, S~i tzer land ,  Apr i l  2 -6 ,  
1984, 
<Vauquots85a> : VAUOUOIS 8 . ,  BO\[~ET C. Automated  
Trans la t ion  a t  Grenob le  Un ivers~t~ Computat iona l  
L ingu is t i cs ,  l l / l ,  pp 28-36,  danuary -March  1985. 
<Vauquoi  s85b> : VAUQUOI S B. , CHAPPUY S. S ta t i c  
Grammars; a fo rmal  lsm for  the  descr ip t ion  of  
l tnquts t i c  mode ls  P roceed ings  of  the  Conference  on 
Theoret i ca l  and Methodo l  ogt  ca 1 i ssues  in  Machine 
r rans la t lon  of  Natura l  Languages,  Co lgate  Un ivers i ty ,  
I tamt l ton ,  N . -Y . ,  U .S .A ,  August  14-16, 1985. 
<Yan86> : YAN Y. -F.  S t ructura l  CoP re~ondance  
Stoec l f leat lon  Env i ronement  ~ g s  of  COLING-86 
<Zahar ln86> : ZAI4ARIN Y. S t ra teg ies  and Heur i s t i cs  In  
the  Ana lys i s  of  a Na ~1~ L~l  u~Lu~ - ~ a ~ l  i~e 
~ a - ~ o n  Ph.D. Thes is ,  Uni~ve~rssitt 5at~nsls M - a ~  
Penang, March i986.  Research work  under  the  
GETA-USMG Cooperat ion  (GETA document ) .  
398 
