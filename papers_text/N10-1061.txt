Human Language Technologies: The 2010 Annual Conference of the North American Chapter of the ACL, pages 385?393,
Los Angeles, California, June 2010. c?2010 Association for Computational Linguistics
Coreference Resolution in a Modular, Entity-Centered Model
Aria Haghighi
Computer Science Division
University of California, Berkeley
aria42@cs.berkeley.edu
Dan Klein
Computer Science Division
University of California, Berkeley
klein@cs.berkeley.edu
Abstract
Coreference resolution is governed by syntac-
tic, semantic, and discourse constraints. We
present a generative, model-based approach in
which each of these factors is modularly en-
capsulated and learned in a primarily unsu-
pervised manner. Our semantic representation
first hypothesizes an underlying set of latent
entity types, which generate specific entities
that in turn render individual mentions. By
sharing lexical statistics at the level of abstract
entity types, our model is able to substantially
reduce semantic compatibility errors, result-
ing in the best results to date on the complete
end-to-end coreference task.
1 Introduction
Coreference systems exploit a variety of informa-
tion sources, ranging from syntactic and discourse
constraints, which are highly configurational, to se-
mantic constraints, which are highly contingent on
lexical meaning and world knowledge. Perhaps be-
cause configurational features are inherently easier
to learn from small data sets, past work has often
emphasized them over semantic knowledge.
Of course, all state-of-the-art coreference systems
have needed to capture semantic compatibility to
some degree. As an example of nominal headword
compatibility, a ?president? can be a ?leader? but
cannot be not an ?increase.? Past systems have of-
ten computed the compatibility of specific headword
pairs, extracted either from lexical resources (Ng,
2007; Bengston and Roth, 2008; Rahman and Ng,
2009), web statistics (Yang et al, 2005), or sur-
face syntactic patterns (Haghighi and Klein, 2009).
While the pairwise approach has high precision, it is
neither realistic nor scalable to explicitly enumerate
all pairs of compatible word pairs. A more compact
approach has been to rely on named-entity recog-
nition (NER) systems to give coarse-grained entity
types for each mention (Soon et al, 1999; Ng and
Cardie, 2002). Unfortunately, current systems use
small inventories of types and so provide little con-
straint. In general, coreference errors in state-of-the-
art systems are frequently due to poor models of se-
mantic compatibility (Haghighi and Klein, 2009).
In this work, we take a primarily unsupervised ap-
proach to coreference resolution, broadly similar to
Haghighi and Klein (2007), which addresses this is-
sue. Our generative model exploits a large inven-
tory of distributional entity types, including standard
NER types like PERSON and ORG, as well as more
refined types like WEAPON and VEHICLE. For each
type, distributions over typical heads, modifiers, and
governors are learned from large amounts of unla-
beled data, capturing type-level semantic informa-
tion (e.g. ?spokesman? is a likely head for a PER-
SON). Each entity inherits from a type but captures
entity-level semantic information (e.g. ?giant? may
be a likely head for the Microsoft entity but not all
ORGs). Separately from the type-entity semantic
module, a log-linear discourse model captures con-
figurational effects. Finally, a mention model assem-
bles each textual mention by selecting semantically
appropriate words from the entities and types.
Despite being almost entirely unsupervised, our
model yields the best reported end-to-end results on
a range of standard coreference data sets.
2 Key Abstractions
The key abstractions of our model are illustrated in
Figure 1 and described here.
Mentions: A mention is an observed textual ref-
erence to a latent real-world entity. Mentions are as-
385
Person
[0: 0.30,
 1:0.25,
 2:0.20, ...]
NOM-HEAD
[1: 0.39,
 0:0.18,
 2:0.13, ...]
[Obama: 0.02,
  Smith:0.015,
  Jr.: 0.01, ...]
[president: 0.14,
 painter:0.11,
 senator: 0.10,...]
NAM-HEAD
r ?r fr
NOM-HEAD [president, leader]
NAM-HEAD [Obama, Barack]
r Lr
Barack Obama
NOM-HEAD [painter]
NAM-HEAD [Picasso, Pablo]
r Lr
Pablo Picasso
NN-MOD Mr.
NAM-HEAD Obama
r wr
NOM-HEAD president
r wr
Types
Entities
Mentions
(c)
(b)
(a)
?Mr. Obama? ?the president?
... ... ...
Figure 1: The key abstractions of our model (Section 2).
(a) Mentions map properties (r) to words (wr). (b) Enti-
ties map properties (r) to word lists (Lr). (c) Types map
properties (r) to distributions over property words (?r)
and the fertilities of those distributions (fr). For (b) and
(c), we only illustrate a subset of the properties.
sociated with nodes in a parse tree and are typically
realized as NPs. There are three basic forms of men-
tions: proper (denoted NAM), nominal (NOM), and
pronominal (PRO). We will often describe proper
and nominal mentions together as referring men-
tions.
We represent each mention M as a collection of
key-value pairs. The keys are called properties and
the values are words. For example, the left mention
in Figure 1(a) has a proper head property, denoted
NAM-HEAD, with value ?Obama.? The set of prop-
erties we consider, denoted R, includes several va-
rieties of heads, modifiers, and governors (see Sec-
tion 5.2 for details). Not every mention has a value
for every property.
Entities: An entity is a specific individual or ob-
ject in the world. Entities are always latent in text.
Where a mention has a single word for each prop-
erty, an entity has a list of signature words. For-
mally, entities are mappings from properties r ? R
to lists Lr of ?canonical? words which that entity
uses for that property. For instance in Figure 1(b),
the list of nominal heads for the Barack Obama en-
tity includes ?president.?
Types: Coreference systems often make a men-
tion / entity distinction. We extend this hierarchy
to include types, which represent classes of entities
(PERSON, ORGANIZATION, and so on). Types allow
the sharing of properties across entities and mediate
the generation of entities in our model (Section 3.1).
See Figure 1(c) for a concrete example.
We represent each type ? as a mapping between
properties r and pairs of multinomials (?r, fr). To-
gether, these distributions control the lists Lr for en-
tities of that type. ?r is a unigram distribution of
words that are semantically licensed for property r.
fr is a ?fertility? distribution over the integers that
characterizes entity list lengths. For example, for the
type PERSON, ?r for proper heads is quite flat (there
are many last names) but fr is peaked at 1 (people
have a single last name).
3 Generative Model
We now describe our generative model. At the pa-
rameter level, we have one parameter group for the
types ? = (?, ?1, . . . , ?t), where ? is a multinomial
prior over a fixed number t of types and the {?i} are
the parameters for each individual type, described in
greater detail below. A second group comprises log-
linear parameters pi over discourse choices, also de-
scribed below. Together, these two groups are drawn
according to P (? |?)P (pi|?2), where ? and ?2 are a
small number of scalar hyper-parameters described
in Section 4.
Conditioned on the parameters (? ,pi), a docu-
ment is generated as follows: A semantic module
generates a sequence E of entities. E is in prin-
ciple infinite, though during inference only a finite
number are ever instantiated. A discourse module
generates a vector Z which assigns an entity in-
dex Zi to each mention position i. Finally, a men-
tion generation module independently renders the
sequence of mentions (M) from their underlying en-
tities. The syntactic position and structure of men-
tions are treated as observed, including the mention
forms (pronominal, etc.). We use X to refer to this
ungenenerated information. Our model decomposes
as follows:
P (E,Z,M|? ,pi,X) =
P (E|? ) [Semantic, Section 3.1]
P (Z|pi,X) [Discourse, Section 3.2]
P (M|Z,E, ? ) [Mention, Section 3.3]
We detail each of these components in subsequent
sections.
386
TLr
?
fr ?r
ORG: 0.30
 PERS: 0.22
GPE: 0.18
LOC: 0.15
WEA: 0.12
VEH: 0.09
...
T = PERS
0: 0.30
1: 0.25
2: 0.20
3: 0.18
...
PERS
For T = PERS
president: 0.14
 painter: 0.11
senator: 0.10
minister: 0.09
leader: 0.08
official: 0.06
executive: 0.05
...
president 
leader
official
R
E
Figure 2: Depiction of the entity generation process (Sec-
tion 3.1). Each entity draws a type (T ) from ?, and, for
each property r ? R, forms a word list (Lr) by choosing
a length from T ?s fr distribution and then independently
drawing that many words from T ?s ?r distribution. Ex-
ample values are shown for the person type and the nom-
inal head property (NOM-HEAD).
3.1 Semantic Module
The semantic module is responsible for generating
a sequence of entities. Each entity E is generated
independently and consists of a type indicator T , as
well as a collection {Lr}r?R of word lists for each
property. These elements are generated as follows:
Entity Generation
Draw entity type T ? ?
For each mention property r ? R,
Fetch {(fr, ?r)} for ? T
Draw word list length |Lr| ? fr
Draw |Lr| words from w ? ?r
See Figure 2 for an illustration of this process. Each
word list Lr is generated by first drawing a list
length from fr and then independently populating
that list from the property?s word distribution ?r.1
Past work has employed broadly similar distribu-
tional models for unsupervised NER of proper men-
1There is one exception: the sizes of the proper and nomi-
nal head property lists are jointly generated, but their word lists
are still independently populated.
tions (Collins and Singer, 1999; Elsner et al, 2009).
However, to our knowledge, this is the first work
to incorporate such a model into an entity reference
process.
3.2 Discourse Module
The discourse module is responsible for choosing
an entity to evoke at each of the n mention posi-
tions. Formally, this module generates an entity as-
signment vector Z = (Z1, . . . , Zn), where Zi indi-
cates the entity index for the ith mention position.
Most linguistic inquiry characterizes NP anaphora
by the pairwise relations that hold between a men-
tion and its antecedent (Hobbs, 1979; Kehler et al,
2008). Our discourse module utilizes this pairwise
perspective to define each Zi in terms of an interme-
diate ?antecedent? variable Ai. Ai either points to a
previous antecedent mention position (Ai < i) and
?steals? its entity assignment or begins a new entity
(Ai = i). The choice ofAi is parametrized by affini-
ties spi(i, j;X) between mention positions i and j.
Formally, this process is described as:
Entity Assignment
For each mention position, i = 1, . . . , n,
Draw antecedent position Ai ? {1, . . . , i}:
P (Ai = j|X) ? spi(i, j;X)
Zi =
{
ZAi , if Ai < i
K + 1, otherwise
Here, K denotes the number of entities allocated in
the first i-1 mention positions. This process is an in-
stance of the sequential distance-dependent Chinese
Restaurant Process (DD-CRP) of Blei and Frazier
(2009). During inference, we variously exploit both
the A and Z representations (Section 4).
For nominal and pronoun mentions, there are sev-
eral well-studied anaphora cues, including centering
(Grosz et al, 1995), nearness (Hobbs, 1978), and
deterministic constraints, which have all been uti-
lized in prior coreference work (Soon et al, 1999;
Ng and Cardie, 2002). In order to combine these
cues, we take a log-linear, feature-based approach
and parametrize spi(i, j;X) = exp{pi>fX(i, j)},
where fX(i, j) is a feature vector over mention po-
sitions i and j, and pi is a parameter vector; the fea-
tures may freely condition on X. We utilize the
following features between a mention and an an-
387
tecedent: tree distance, sentence distance, and the
syntactic positions (subject, object, and oblique) of
the mention and antecedent. Features for starting a
new entity include: a definiteness feature (extracted
from the mention?s determiner), the top CFG rule
of the mention parse node, its syntactic role, and a
bias feature. These features are conjoined with the
mention form (nominal or pronoun). Additionally,
we restrict pronoun antecedents to the current and
last two sentences, and the current and last three sen-
tences for nominals. Additionally, we disallow nom-
inals from having direct pronoun antecedents.
In addition to the above, if a mention is in a de-
terministic coreference configuration, as defined in
Haghighi and Klein (2009), we force it to take the
required antecedent. In general, antecedent affini-
ties learn to prefer close antecedents in prominent
syntactic positions. We also learn that new entity
nominals are typically indefinite or have SBAR com-
plements (captured by the CFG feature).
In contrast to nominals and pronouns, the choice
of entity for a proper mention is governed more by
entity frequency than antecedent distance. We cap-
ture this by setting spi(i, j;X) in the proper case to
1 for past positions and to a fixed ? otherwise. 2
3.3 Mention Module
Once the semantic module has generated entities and
the discourse model selects entity assignments, each
mention Mi generates word values for a set of ob-
served properties Ri:
Mention Generation
For each mention Mi, i = 1, . . . , n
Fetch (T, {Lr}r?R) from EZi
Fetch {(fr, ?r)}r?R from ? T
For r ? Ri :
w ? (1? ?r)UNIFORM(Lr) + (?r)?r
For each property r, there is a hyper-parameter ?r
which interpolates between selecting a word from
the entity list Lr and drawing from the underlying
type property distribution ?r. Intuitively, a small
value of ?r indicates that an entity prefers to re-use
2As Blei and Frazier (2009) notes, when marginalizing out
theAi in this trivial case, the DD-CRP reduces to the traditional
CRP (Pitman, 2002), so our discourse model roughly matches
Haghighi and Klein (2007) for proper mentions.
? 1
Person
Organization
[software]
NN-
NOD
ORG
[Microsoft]
[company,
 firm]
NOM-
HEAD
NAM-
HEAD
T
? 2
E1 E2
Z1 Z2 Z3
M1 M2 M3
[Steve,chief, 
Microsoft]
NN-
NOD
PERS
[Ballmer,
 CEO]
[officer,
 executive]
NOM-
HEAD
NAM-
HEAD
T
joined
GOV-
SUBJ
Ballmer
Steve
NN-
HEAD
NAM-
HEAD
joined
GOV-
DOBJ
Microsoft
NAM-
HEAD
became
GOV-
DOBJ
CEO
NAM-
HEAD
? ?
E, ? E, ? E, ?
E,M E,M
E2E1 E1
M M
Figure 3: Depiction of the discourse module (Sec-
tion 3.2); each random variable is annotated with an ex-
ample value. For each mention position, an entity as-
signment (Zi) is made. Conditioned on entities (EZi ),
mentions (Mi) are rendered (Section 3.3). The Y sym-
bol denotes that a random variable is the parent of all Y
random variables.
a small number of words for property r. This is typ-
ically the case for proper and nominal heads as well
as modifiers. At the other extreme, setting ?r to 1
indicates the property isn?t particular to the entity
itself, but rather only on its type. We set ?r to 1
for pronoun heads as well as for the governor of the
head properties.
4 Learning and Inference
Our learning procedure involves finding parame-
ters and assignments which are likely under our
model?s posterior distribution P (E,Z, ? ,pi|M,X).
The model is modularized in such a way that run-
ning EM on all variables simultaneously would be
very difficult. Therefore, we adopt a variational ap-
proach which optimizes various subgroups of the
variables in a round-robin fashion, holding approx-
imations to the others fixed. We first describe the
variable groups, then the updates which optimize
them in turn.
Decomposition: We decompose the entity vari-
388
ables E into types, T, one for each entity, and word
lists, L, one for each entity and property. We decom-
pose the mentions M into referring mentions (prop-
ers and nominals), Mr, and pronominal mentions,
Mp (with sizes nr and np respectively). The en-
tity assignments Z are similarly divided into Zr and
Zp components. For pronouns, rather than use Zp,
we instead work with the corresponding antecedent
variables, denoted Ap, and marginalize over an-
tecedents to obtain Zp.
With these variable groups, we would
like to approximation our model posterior
P (T,L,Zr,Ap, ? ,pi|M,X) using a simple fac-
tored representation. Our variational approximation
takes the following form:
Q(T,L,Zr,Ap, ? ,pi) = ?r(Zr,L)
(
n?
k=1
qk(Tk)
)( np?
i=1
ri(Api )
)
?s(? )?d(pi)
We use a mean field approach to update each of the
RHS factors in turn to minimize the KL-divergence
between the current variational posterior and the
true model posterior. The ?r, ?s, and ?d factors
place point estimates on a single value, just as in
hard EM. Updating these factors involves finding the
value which maximizes the model (expected) log-
likelihood under the other factors. For instance, the
?s factor is a point estimate of the type parameters,
and is updated with:3
?s(? )? argmax? EQ??s lnP (E,Z,M, ? ,pi) (1)
where Q??s denotes all factors of the variational
approximation except for the factor being updated.
The ri (pronoun antecedents) and qk (type indica-
tor) factors maintain a soft approximation and so are
slightly more complex. For example, the ri factor
update takes the standard mean field form:
ri(Api ) ? exp{EQ?ri lnP (E,Z,M, ? ,pi)} (2)
We briefly describe the update for each additional
factor, omitting details for space.
Updating type parameters ?s(? ): The type pa-
rameters ? consist of several multinomial distri-
butions which can be updated by normalizing ex-
pected counts as in the EM algorithm. The prior
3Of course during learning, the argmax is performed over
the entire document collection, rather than a single document.
P (? |?) consists of several finite Dirichlet draws for
each multinomial, which are incorporated as pseu-
docounts.4 Given the entity type variational poste-
riors {qk(?)}, as well as the point estimates of the
L and Zr elements, we obtain expected counts from
each entity?s attribute word lists and referring men-
tion usages.
Updating discourse parameters ?d(pi): The
learned parameters for the discourse module rely on
pairwise antecedent counts for assignments to nom-
inal and pronominal mentions.5 Given these ex-
pected counts, which can be easily obtained from
other factors, the update reduces to a weighted max-
imum entropy problem, which we optimize using
LBFGS. The prior P (pi|?2) is a zero-centered nor-
mal distribution with shared diagonal variance ?2,
which is incorporated via L2 regularization during
optimization.
Updating referring assignments and word lists
?r(Zr,L): The word lists are usually concatena-
tions of the words used in nominal and proper
mentions and so are updated together with the
assignments for those mentions. Updating the
?r(Zr,L) factor involves finding the referring men-
tion entity assignments, Zr, and property word
lists L for instantiated entities which maximize
EQ??r lnP (T,L,Zr,Ap,M, ? ,pi). We actually
only need to optimize over Zr, since for any Zr, we
can compute the optimal set of property word lists
L. Essentially, for each entity we can compute the
Lr which optimizes the probability of the referring
mentions assigned to the entity (indicated by Zr). In
practice, the optimal Lr is just the set of property
words in the assigned mentions. Of course enumer-
ating and scoring all Zr hypotheses is intractable,
so we instead utilize a left-to-right sequential beam
search. Each partial hypothesis is an assignment to a
prefix of mention positions and is scored as though
it were a complete hypothesis. Hypotheses are ex-
tended via adding a new mention to an existing en-
tity or creating a new one. For our experiments, we
limited the number of hypotheses on the beam to the
top fifty and did not notice an improvement in model
score from increasing beam size.
4See software release for full hyper-parameter details.
5Propers have no learned discourse parameters.
389
Updating pronominal antecedents ri(Api ) and en-
tity types qk(Tk): These updates are straightfor-
ward instantiations of the mean-field update (2).
To produce our final coreference partitions, we as-
sign each referring mention to the entity given by the
?r factor and each pronoun to the most likely entity
given by the ri.
4.1 Factor Staging
In order to facilitate learning, some factors are ini-
tially set to fixed heuristic values and only learned
in later iterations. Initially, the assignment factors
?r and {ri} are fixed. For ?r, we use a determin-
istic entity assignment Zr, similar to the Haghighi
and Klein (2009)?s SYN-CONSTR setting: each re-
ferring mention is coreferent with any past men-
tion with the same head or in a deterministic syn-
tactic configuration (appositives or predicative nom-
inatives constructions).6 The {ri} factors are heuris-
tically set to place most of their mass on the closest
antecedent by tree distance. During training, we pro-
ceed in stages, each consisting of 5 iterations:
Stage Learned Fixed B3All
1 ?s, ?d, {qk} {ri},?r 74.6
2 ?s, ?d, {qk}, ?r {ri} 76.3
3 ?s, ?d, {qk}, ?r, {ri} ? 78.0
We evaluate our system at the end of stage using the
B3All metric on the A05CU development set (see
Section 5 for details).
5 Experiments
We considered the challenging end-to-end system
mention setting, where in addition to predicting
mention partitions, a system must identify the men-
tions themselves and their boundaries automati-
cally. Our system deterministically extracts mention
boundaries from parse trees (Section 5.2). We uti-
lized no coreference annotation during training, but
did use minimal prototype information to prime the
learning of entity types (Section 5.3).
5.1 Datasets
For evaluation, we used standard coreference data
sets derived from the ACE corpora:
6Forcing appositive coreference is essential for tying proper
and nominal entity type vocabulary.
? A04CU: Train/dev/test split of the newswire
portion of the ACE 2004 training set7 utilized
in Culotta et al (2007), Bengston and Roth
(2008) and Stoyanov et al (2009). Consists of
90/68/38 documents respectively.
? A05ST: Train/test split of the newswire portion
of the ACE 2005 training set utilized in Stoy-
anov et al (2009). Consists of 57/24 docu-
ments respectively.
? A05RA: Train/test split of the ACE 2005 train-
ing set utilized in Rahman and Ng (2009). Con-
sists of 482/117 documents respectively.
For all experiments, we evaluated on the dev and test
sets above. To train, we included the text of all doc-
uments above, though of course not looking at ei-
ther their mention boundaries or reference annota-
tions in any way. We also trained on the following
much larger unlabeled datasets utilized in Haghighi
and Klein (2009):
? BLLIP: 5k articles of newswire parsed with the
Charniak (2000) parser.
? WIKI: 8k abstracts of English Wikipedia arti-
cles parsed by the Berkeley parser (Petrov et
al., 2006). Articles were selected to have sub-
jects amongst the frequent proper nouns in the
evaluation datasets.
5.2 Mention Detection and Properties
Mention boundaries were automatically detected as
follows: For each noun or pronoun (determined by
parser POS tag), we associated a mention with the
maximal NP projection of that head or that word it-
self if no NP can be found. This procedure recovers
over 90% of annotated mentions on the A05CU dev
set, but also extracts many unannotated ?spurious?
mentions (for instance events, times, dates, or ab-
stract nouns) which are not deemed to be of interest
by the ACE annotation conventions.
Mention properties were obtained from parse
trees using the the Stanford typed dependency ex-
tractor (de Marneffe et al, 2006). The mention prop-
erties we considered are the mention head (anno-
tated with mention type), the typed modifiers of the
head, and the governor of the head (conjoined with
7Due to licensing restriction, the formal ACE test sets are
not available to non-participants.
390
MUC B3All B3None Pairwise F1
System P R F1 P R F1 P R F1 P R F1
ACE2004-STOYANOV-TEST
Stoyanov et al (2009) - - 62.0 - - 76.5 - - 75.4 - - -
Haghighi and Klein (2009) 67.5 61.6 64.4 77.4 69.4 73.2 77.4 67.1 71.3 58.3 44.5 50.5
THIS WORK 67.4 66.6 67.0 81.2 73.3 77.0 80.6 75.2 77.3 59.2 50.3 54.4
ACE2005-STOYANOV-TEST
Stoyanov et al (2009) - - 67.4 - - 73.7 - - 72.5 - - -
Haghighi and Klein (2009) 73.1 58.8 65.2 82.1 63.9 71.8 81.2 61.6 70.1 66.1 37.9 48.1
THIS WORK 74.6 62.7 68.1 83.2 68.4 75.1 82.7 66.3 73.6 64.3 41.4 50.4
ACE2005-RAHMAN-TEST
Rahman and Ng (2009) 75.4 64.1 69.3 - - - 54.4 70.5 61.4 - - -
Haghighi and Klein (2009) 72.9 60.2 67.0 53.2 73.1 61.6 52.0 72.6 60.6 57.0 44.6 50.0
THIS WORK 77.0 66.9 71.6 55.4 74.8 63.8 54.0 74.7 62.7 60.1 47.7 53.0
Table 1: Experimental results with system mentions. All systems except Haghighi and Klein (2009) and current work
are fully supervised. The current work outperforms all other systems, supervised or unsupervised. For comparison pur-
poses, the B3None variant used on A05RA is calculated slightly differently than other B3None results; see Rahman
and Ng (2009).
the mention?s syntactic position). We discard deter-
miners, but make use of them in the discourse com-
ponent (Section 3.2) for NP definiteness.
5.3 Prototyping Entity Types
While it is possible to learn type distributions in a
completely unsupervised fashion, we found it use-
ful to prime the system with a handful of important
types. Rather than relying on fully supervised data,
we took the approach of Haghighi and Klein (2006).
For each type of interest, we provided a (possibly-
empty) prototype list of proper and nominal head
words, as well as a list of allowed pronouns. For
instance, for the PERSON type we might provide:
NAM Bush, Gore, Hussein
NOM president, minister, official
PRO he, his, she, him, her, you, ...
The prototypes were used as follows: Any entity
with a prototype on any proper or nominal head
word attribute list (Section 3.1) was constrained to
have the specified type; i.e. the qk factor (Section 4)
places probability one on that single type. Simi-
larly to Haghighi and Klein (2007) and Elsner et al
(2009), we biased these types? pronoun distributions
to the allowed set of pronouns.
In general, the choice of entity types to prime
with prototypes is a domain-specific question. For
experiments here, we utilized the types which are
annotated in the ACE coreference data: person
(PERS), organization (ORG), geo-political entity
(GPE), weapon (WEA), vehicle (VEH), location
(LOC), and facility (FAC). Since the person type
in ACE conflates individual persons with groups
of people (e.g., soldier vs. soldiers), we added
the group (GROUP) type and generated a prototype
specification.
We obtained our prototype list by extracting at
most four common proper and nominal head words
from the newswire portions of the 2004 and 2005
ACE training sets (A04CU and A05ST); we chose
prototype words to be minimally ambiguous with
respect to type.8 When there are not at least three
proper heads for a type (WEA for instance), we
did not provide any proper prototypes and instead
strongly biased the type fertility parameters to gen-
erate empty NAM-HEAD lists.
Because only certain semantic types were anno-
tated under the arbitrary ACE guidelines, there are
many mentions which do not fall into those limited
categories. We therefore prototype (refinements of)
the ACE types and then add an equal number of un-
constrained ?other? types which are automatically
induced. A nice consequence of this approach is
that we can simply run our model on all mentions,
discarding at evaluation time any which are of non-
prototyped types.
5.4 Evaluation
We evaluated on multiple coreference resolution
metrics, as no single one is clearly superior, partic-
8Meaning those headwords were assigned to the target type
for more than 75% of their usages.
391
ularly in dealing with the system mention setting.
We utilized MUC (Vilain et al, 1995), B3All (Stoy-
anov et al, 2009), B3None (Stoyanov et al, 2009),
and Pairwise F1. The B3All and B3None are B3
variants (Bagga and Baldwin, 1998) that differ in
their treatment of spurious mentions. For Pairwise
F1, precision measures how often pairs of predicted
coreferent mentions are in the same annotated entity.
We eliminated any mention pair from this calcula-
tion where both mentions were spurious.9
5.5 Results
Table 1 shows our results. We compared to two
state-of-the-art supervised coreference systems. The
Stoyanov et al (2009) numbers represent their
THRESHOLD ESTIMATION setting and the Rahman
and Ng (2009) numbers represent their highest-
performing cluster ranking model. We also com-
pared to the strong deterministic system of Haghighi
and Klein (2009).10 Across all data sets, our model,
despite being largely unsupervised, consistently out-
performs these systems, which are the best previ-
ously reported results on end-to-end coreference res-
olution (i.e. including mention detection). Perfor-
mance on the A05RA dataset is generally lower be-
cause it includes articles from blogs and web forums
where parser quality is significantly degraded.
While Bengston and Roth (2008) do not report on
the full system mention task, they do report on the
more optimistic setting where mention detection is
performed but non-gold mentions are removed for
evaluation using an oracle. On this more lenient set-
ting, they report 78.4B3 on the A04CU test set. Our
model yields 80.3.
6 Analysis
We now discuss errors and improvements made
by our system. One frequent source of error is
the merging of mentions with explicitly contrasting
modifiers, such as new president and old president.
While it is not unusual for a single entity to admit
multiple modifiers, the particular modifiers new and
old are incompatible in a way that new and popular
9Note that we are still penalized for marking a spurious
mention coreferent with an annotated one.
10Haghighi and Klein (2009) reports on true mentions; here,
we report performance on automatically detected mentions.
are not. Our model does not represent the negative
covariance between these modifiers.
We compared our output to the deterministic sys-
tem of Haghighi and Klein (2009). Many improve-
ments arise from correctly identifying mentions
which are semantically compatible but which do
not explicitly appear in an appositive or predicate-
nominative configuration in the data. For example,
analyst and it cannot corefer in our system because
it is not a likely pronoun for the type PERSON.
While the focus of our model is coreference res-
olution, we can also isolate and evaluate the type
component of our model as an NER system. We
test this component by presenting our learned model
with boundary-annotated non-pronominal entities
from the A05ST dev set and querying their predicted
type variable T . Doing so yields 83.2 entity clas-
sification accuracy under the mapping between our
prototyped types and the coarse ACE types. Note
that this task is substantially more difficult than the
unsupervised NER in Elsner et al (2009) because
the inventory of named entities is larger (7 vs. 3)
and because we predict types over nominal mentions
that are more difficult to judge from surface forms.
In this task, the plurality of errors are confusions be-
tween the GPE (geo-political entity) and ORG entity
types, which have very similar distributions.
7 Conclusion
Our model is able to acquire and exploit knowledge
at either the level of individual entities (?Obama? is
a ?president?) and entity types (?company? can refer
to a corporation). As a result, it leverages semantic
constraints more effectively than systems operating
at either level alone. In conjunction with reasonable,
but simple, factors capturing discourse and syntac-
tic configurational preferences, our entity-centric se-
mantic model lowers coreference error rate substan-
tially, particularly on semantically disambiguated
references, giving a sizable improvement over the
state-of-the-art.11
Acknowledgements: This project is funded in
part by the Office of Naval Research under MURI
Grant No. N000140911081.
11See nlp.cs.berkeley.edu and aria42.com/software.html for
software release.
392
References
A Bagga and B Baldwin. 1998. Algorithms for scoring
coreference chains. In Linguistic Coreference Work-
shop (LREC).
Eric Bengston and Dan Roth. 2008. Understanding
the Value of Features for Corefernce Resolution. In
Empirical Methods in Natural Language Processing
(EMNLP).
David Blei and Peter I. Frazier. 2009. Dis-
tance Dependent Chinese Restaurant Processes.
http://arxiv.org/abs/0910.1022/.
Eugene Charniak. 2000. Maximum Entropy Inspired
Parser. In North American Chapter of the Association
of Computational Linguistics (NAACL).
Michael Collins and Yoram Singer. 1999. Unsupervised
Models for Named Entity Classification. In Empirical
Methods in Natural Language Processing (EMNLP).
Mike Collins. 1999. Head-Driven Statistical Models for
Natural Language Parsing. Ph.D. thesis, University of
Pennsylvania.
A Culotta, M Wick, R Hall, and A McCallum. 2007.
First-order Probabilistic Models for Coreference Res-
olution. In Proceedings of the conference on Human
Language Technology and Empirical Methods in Nat-
ural Language Processing (NAACL-HLT).
M. C. de Marneffe, B. Maccartney, and C. D. Manning.
2006. Generating Typed Dependency Parses from
Phrase Structure Parses. In LREC.
M Elsner, E Charniak, and M Johnson. 2009. Structured
generative models for unsupervised named-entity clus-
tering. In Proceedings of Human Language Technolo-
gies: The 2009 Annual Conference of the North Ameri-
can Chapter of the Association for Computational Lin-
guistics, pages 164?172.
Barbara J. Grosz, Aravind K. Joshi, and Scott Weinstein.
1995. Centering: A Framework for Modeling the Lo-
cal Coherence of Discourse. Computational Linguis-
tics, 21(2):203?225.
Aria Haghighi and Dan Klein. 2006. Prototype-Driven
Learning for Sequence Models. In HLT-NAACL. As-
sociation for Computational Linguistics.
Aria Haghighi and Dan Klein. 2007. Unsupervised
Coreference Resolution in a Nonparametric Bayesian
Model. In Proceedings of the 45th Annual Meeting of
the Association of Computational Linguistics. Associ-
ation for Computational Linguistics.
Aria Haghighi and Dan Klein. 2009. Simple Coreference
Resolution with Rich Syntactic and Semantic Features.
In Proceedings of the 2009 Conference on Empirical
Conference in Natural Language Processing.
J. R. Hobbs. 1978. Resolving Pronoun References. Lin-
gua, 44.
J. R. Hobbs. 1979. Coherence and Coreference. Cogni-
tive Science, 3:67?90.
Andrew Kehler, Laura Kertz, Hannah Rohde, and Jeffrey
Elman. 2008. Coherence and Coreference Revisited.
Vincent Ng and Claire Cardie. 2002. Improving
Machine Learning Approaches to Coreference Res-
olution. In Association of Computational Linguists
(ACL).
Vincent Ng. 2005. Machine Learning for Corefer-
ence Resolution: From Local Classification to Global
Ranking. In Association of Computational Linguists
(ACL).
Vincent Ng. 2007. Shallow semantics for coreference
resolution. In IJCAI?07: Proceedings of the 20th in-
ternational joint conference on Artifical intelligence,
pages 1689?1694.
Slav Petrov, Leon Barrett, Romain Thibaux, and Dan
Klein. 2006. Learning Accurate, Compact, and Inter-
pretable Tree Annotation. In Proceedings of the 21st
International Conference on Computational Linguis-
tics and 44th Annual Meeting of the Association for
Computational Linguistics, pages 433?440, Sydney,
Australia, July. Association for Computational Lin-
guistics.
J. Pitman. 2002. Combinatorial Stochastic Processes. In
Lecture Notes for St. Flour Summer School.
A Rahman and V Ng. 2009. Supervised models for
coreference resolution. In Proceedings of the 2009
Conference on Empirical Conference in Natural Lan-
guage Processing.
W.H. Soon, H. T. Ng, and D. C. Y. Lim. 1999. A Ma-
chine Learning Approach to Coreference Resolution
of Noun Phrases.
V Stoyanov, N Gilbert, C Cardie, and E Riloff. 2009.
Conundrums in Noun Phrase Coreference Resolution:
Making Sense of the State-of-the-art. In Associate of
Computational Linguistics (ACL).
Marc Vilain, John Burger, John Aberdeen, Dennis Con-
nolly, and Lynette Hirschman. 1995. A model-
theoretic coreference scoring scheme. In MUC-6.
X Yang, J Su, and CL Tan. 2005. Improving pronoun
resolution using statistics-based semantic compatibil-
ity information. In Association of Computational Lin-
guists (ACL).
393
