Problems ?ith Domain-Independent Natural Language Database Access Systems 
Steven P. Shvartz 
Cognitive Systems Inc. 
234 Church Street 
New Haven, Ca. 06510 
Zn the past decade, a number of natural lang- 
uage database access systems have been constructed 
(e.g. Hendrix 1976; Waltz et e l .  1976; Sac- 
erdoti 1978; Harris 1979; Lehner~ and Shwartz 
1982; Shvartz 1982). The level of performance 
achieved by natural language database access sys- 
tems varies considerably, with the sore robust 
systems operating v i thtn  a narrow domain ( i .e . ,  
content area) and re ly ing heavily on domain-speci- 
f i c  knowledge to guide the language understanding 
process. Transporting a system constructed for one 
domain into a new domain is extremely resource-in- 
tensive because a new set of domain-specific know- 
ledge must be encoded. 
In order to reduce the cost of transportat ion,  
a great deal of current research has focussed on 
bui ld ing natural language access systems that are 
domain-independent. More spec i f i ca l l y ,  these sys- 
tems attempt to use syntact ic knowledge in con- 
~unction with knowledge about the structure of the 
database as a subst i tute for  conceptual knowledge 
regarding the database content area. In th is  paper 
I examine the issue of whether or not i t  is possi- 
ble to bui ld a natural language database access 
systee that achieves an acceptable level of per- 
formance without including domain-specific concep- 
tual knowledge. 
6 gerforn=nca ~i~g~ion for oa~u?al language atoms= 
=X=~em=, 
The pr inc ip le  motivation for bui ld ing natural 
language systems for database access is ~o free the 
user from the need for data processing instruct ion.  
A natural language front end is a step above the 
"Engl ish- l ike = query systems that presently domi- 
nate the commercial database retr ieval  f i e ld .  
Engl ish- l ike query systems allow the user to phrase 
requests as English sentences, but permit only a 
restr ic ted subset of English and impose a r ig id  
syntax on user requests. These Engl ish- l ike query 
systems are easy to learn, but a t ra in ing  period is 
s t i l l  required for the user to learn to phrase re- 
quests that conform to ~hc~ rest r ic t ions .  Howe- 
ver, the t ra in ing period is often very br ie f ,  and 
natura~ language systems can be considered superior 
only i f  no computer-related t ra in ing or knowledge 
is required of the user. 
This c r i te r ion  can only be met i f  no rest r ic -  
t ions are placed on user queries. A user who has 
previously re l ied on a programmer-technician to 
code formal queries for information retr ieval  
should be permitted to phrase inform%ion retr ieval  
requests t~ the program in exactly the same way as 
to the technician. That is, whatever the techni- 
cian would understand, the program should 
understand. For example, a natural language f ront  
end to a stock market database should understand 
that 
(1) Did IBM go up yesterday? 
refers to PRZCE and not VOLUME. However, the sys- 
tem need not understand requests that a program- 
mer-technician would be unable to process, e.g. 
(2) Is GENCO a l i ke ly  takeover target? 
That is, the programmer-technlcisn uorking for an 
investment firm would not be expected to know how 
t<) process requests that require "expert" knowledge 
and neither should | natural language front end, 
If, however, = natural language system cannot a- 
chieve the level of performance of a program- 
ear-technician it will seem stupid because it does 
not meet = user's expectations for an English un- 
derstanding system, 
The mprograemer-technician criterion m cannot 
possibly be met by = domain-independent natural 
language access system because language understan- 
ding requires domain-specific world knowledge. On 
a theoret ical  level ,  the need for a knowledge base 
in a natural language processing system has been 
well-documented (e.g. Schank A Abelson 1977; 
Lehnert 1978; Dyer 1982). I t  w i l l  be argued 
below that in an applied context, a system that 
does not have a conceptual knowledge base can pro- 
duce at best only a shallow level of understanding 
and one that does not meet the c r i te r ion  specif led 
above. Further, the domain-independent approach 
creates a host of problems that are simply non-ex- 
istent in knowledge-based s~stems. 
E~oble== far dolai0:i0dg~a0dan~ =~=~?=~ in fer -  
ence. ambiguity, sod aoagbora, 
In ferent ia l  processing is an integral part of 
natural language understanding. Consider the fo l -  
lowing requests from PEARL (Lehnert and Shvartz 
1982; Shwartz 1982) when i t  operates in the domain 
of geological map generation: 
60 
(3) Show ss e l l  o i l  ve i l s  from 1970 to 1980. 
(4) Show Is a l l  o i l  ve i l s  f ro !  8000 ~ 7000. 
(5) Show se a l l  o i l  wel ls  1 t~a 2000. 
(6) Show ee a l l  o i l  wel ls 40 to 41, 80 to 81. 
A programmer-technician In the petrochemical in-  
dustry would in fe r  that  (3) re fers  to dr i l l i ng  
dates, (4) re fers  ~o ve i l  depth, (5) re fers  ~o the 
sap scale, end (6) re fers  to la t i tude / long i tude  
spec i f i ca t ions .  
Correct processing of  these requsst~ requires in-  
fe rent ia l  processing that  is  based on knowledge of  
the petrochemical industry.  That is ,  these con- 
ventions =re not in everyone's general working 
knowledge of  the English language. Yet they are 
standard usage for  people who communicate with each 
other about dr i l l i ng  data, and any systss that  
claims t~o provide a natural language inter face t~ l 
data base of  d r i l l i ng  data must have the knowledge 
to cor rect ly  process requests such as these. 
Without such in fe rent ia l  processing, the user is 
required to spel l  out everything in deta i l ,  some- 
thing that  is s ispty  not necessary in normal Eng- 
l i sh  discourse. 
Another probles fo r  any natural language un- 
derstanding systes is the processing of  ambiguous 
words. In some cases disambiguation can be per- 
formed syntact i ca l ly .  In other cases, the s t ruc -  
ture of  the database can provide the information 
necessary fo r  word sense disambiguation (more on 
th i s  below). However, in many cases disasbiguat ion 
can only be performed i f  domain-specif ic,  world 
knowledge is ava i lab le .  For example, consider the 
processing of  the word "sales = in (7),  (8) and (9).  
(7) What is the average mark up for  sales of  stereo 
equipment? 
(8) What is the average mark down for  sales of  
stereo equipment? 
(9) What is the average mark up during sales of  
stereo equipment? 
(10) What is the average mark down durlng sales of  
stereo equipment? 
These four  requests, which are so ne l r ly  ident ical  
both lex ica l ly  and syntact i ca l ly ,  have very d is -  
t inc t  meanings that  derive from the fac t  that  the 
correct  sense of  ' s l i es t  in (7) ls qui ts  d i f fe rent  
from the sense of  "sales = intended in (8),  (9),  end 
(10). Nest people have l i t t le  d i f f i cu l ty  deter -  
mining which sense of  =sales = is intended in these 
sentences, and neither would a knowledge-based un- 
derstander. The key to the disambiguation process 
involves world knowledge regarding re ta i l  sales. 
Problems of  anaphora pose s imi la r  problems. 
For example, suppose the fo l lowing requests were 
submitted to a personnel data base: 
(11) L i s t  a l l  salesmen with ret irement plans along 
with the i r  sa la r ies .  
(12) L i s t  a l l  o f f i ces  with women managers along 
with the i r  sa la r ies .  
While these requests are syntact i ca l ly  ident ica l ,  
the referents  fo r  " the i r "  in (11) end (12) occupy 
d i f fe rent  syntact ic  pos i t ions.  As human informa- 
t ion processors, ve have no t rouble understanding 
61 
that  sa lar ie~ are associated with people, so 
ret irement p l lns  and o f f i ces  are never considered 
as possible referents .  Again, domain-specif ic 
world knouledge i s  helpful  in understanding these 
requests. 
~Ug~u~al  knQwlldgm i= m =uh=~i~u~m fo~ GQO?ID~ual 
knowlsdgg, 
One of  inner|aliens to eaerge  from the con- 
s t ruc t ion  of  domain-independent systems is t c lever  
mechanism that  ext racts  dosa in-spec l f l c  knowledge 
f ree the s t ructure  of  the data  base. For example, 
the reso lut ion of  the pronoun ' the i r  = in both (11) 
and (12) above could be accomplished by using only 
s t ructura l  ( ra ther  than conceptual) knowledge of  
the domain. For example, suppose the payro l l  
database fo r  (11) were structured such that  SALARY 
and RETIRENENT-PLANS were f ie lds  within a SALESMAN 
f i le .  I t  would then be possible to in fe r  that  
l the i r= re fers  to =salesmen = in (11) by noting that  
SALARY is a f ie ld  in the SALESMEN f i le ,  but that  
SALARY is not an entry in I RETIREMENT-PLANS f i l e .  
Unfortunately,  th i s  approach has l i l i ted  u- 
t i l i ty  because i t  re l ies  on a fo r tu i tous  de,abase 
s t ructure .  Consider what would happen i f  the data 
base had a top- leve l  ERPLOYEES f i l e  ( rather  than 
individual  f i l es  fo r  each type of  employee) with 
f ie lds  fo r  JOB-TYPE, SALARY, COMMISSIONS, and RE- 
TZRENENT-PLANS, With th i s  database organizat ion,  
i t  would not he possible to deters ine that 
(13) L i s t  a l l  salesmen who have secrebaries along 
with the i r  comsissions. 
l the i r= re fers  ~o meal=amen" and not "secretar ies  = 
in (13) on the basis of the s t ructure  of  the data- 
bass. To the naive user, however, the sein ing of  
th i s  sentence is  per fect ly  c lear .  A person who 
cou ldn ' t  determine the re ferent  of  " the i r  = in (13) 
would not be perceived as having an adequate cos- 
sand of  the English language and the same would be 
true fo r  a computer system that  did not understand 
the request. 
~i~fall= a==g~il~Id wi~b ~bm dQ?zin:indag~ndln~ i~ -  
In a knowledge-based systes such as PEARL, = 
natural language request is parsed into a concep- 
tual representat ion of  the meaning of  the request. 
The re t r ieva l  rout ine is then generated f ree th i s  
concepbual representat ion.  As a resu l t ,  the parser 
is independent of  the logical  s t ructure  of  the 
database. That is,  the same parser can be used fo r  
databases with d i f fe rent  logical  s t ructures ,  but 
the same information content. Further, the same 
parser can be used whether the required information 
is located in = s ingle f i l e  or in lu l t ip le  f i l es .  
In a domaln-independent systes, the parser is 
ent i re ly  dependent on the s t ructure  of  the database 
for  domain-specif ic knowledge. As a resu l t ,  one 
must restructure the parser fo r  databases with i -  
dentical  content but d i f fe rent  logical  s t ructure .  
S i s i la r ly ,  the output of  the parser lus t  be very 
d l f fe rent  vhen the required information Is con- 
tained in mulSiple f i l es  rather than a single f i l e .  
Because of the i r  lack of conceptual knowledge 
regarding the database, domain-independent systems 
rely heavily on key words or phrases to indicate 
which database f ie ld  iS being referred to. For 
example, 
(14) Vhat is B i l l  Smith's ~ob &male? 
High& be easi ly processed by simply re t r iev ing  the 
con&ants of a JOB-TITLE f ie ld .  Di f ferent vlys of 
referr ing ~o job t i t le  can also be handled as syn- 
onyms. However, dosiin?independent systems get 
into deep trouble vhen the database f ie ld  that 
needs to be accessed is not d i rec t ly  indicated by 
key words or phrases in the input request. For 
example, 
(15) Is  John Jones the chi ld of an alumnus? 
is easi ly  processed i f  there ex ists  a 
CHILD-OF-AN-ALUMNUS f ie ld ,  but the query 
(16) Is  one of John Jones' paren&s an alumnus? 
contains no key word or phrase to indicate that the 
CHILD-OF-AN-ALURNUS f ie ld  should be accessed, In a 
knowledge-based system, the retr ieval  routine is 
generated from a conceptual representation of the 
meaning of the user query and therefore key words 
or phrases arm not required. A related problem 
occurs with queries involving a~rept ion  or quan- 
t i ty .  For example, 
(17) How many employees are in the sales depart- 
ment? 
l ight  require ret r iev ing the value of a part icu lar  
f ie ld  (e.g. NUHBER-OF-EHPLOYEES), or i t  s ight  re- 
quire to ta l l ing  the number of records in the EH- 
PLOYEE f i l e  that have the correct DEPARTNENT f ie ld  
value, or, i f  the departments are broken down into 
of f ices,  i t  l i ght  require to ta l l ing  the NUN- 
BER-OF-ENPLOYEES f ie ld  for each of f ice .  In m do- 
main-independent system, the correct parse depends 
upon the structure of the database and is therefore 
d i f f i cu l t  to handle in a general way. In a know- 
ledge-based system such as PEARL, the d i f fe rent  
database structures would simply require a l te r ing  
the mapping between the conceptual representaSion 
of the parse and the retr ieval  query. 
F inal ly ,  th is  reliance on database structure 
can lead to wrong answers. A classic example is 
Harr is '  (1979) 'snowmobile problem =. Yhen Harr is '  
ROBOT system interfaces with a f i l e  containing in- 
formation about homeowner's insurance, the word 
'snowmobile" is defined as any number ? 0 in the 
'snowmobile f ie ld"  of an insurance pol icy record. 
This means that as far as ROBOT is concerned, the 
question 'How many snowmobiles are there? = is no 
d i f fe rent  from "How many po l ic ies  have snowmobile 
coverage?" However, the correct answers to the two 
questions wi l l  often be very d i f ferent .  I f  the 
f i r s t  question is asked and the second question is 
answered, the result  is an incorrect answer. I f  
the f i r s t  question cannot be answered due to the 
structure of the database, the system should inform 
the user the5 th is  is the case. 
~oogluaioo=. 
I have argued above that conceptually-based 
domain-specific knowledge is absolutely essential 
for n | tu r l l  language database access systems. 
Systems that rely on dltabase structure for th i s  
domain-specific knowledge v i i i  not achieve an ac- 
ceptable level of performance - -  i .e .  operate at 
the level of understanding of a programmer-techni- 
cian. 
Because of the requirement for de l ian-spec i f ic  
knowledge, conceptually-based systems are res t r i c -  
ted t~o l imited domains and are not readi ly portable 
~o new content areas. However, e l iminat ing the 
domain-speciflc conceptual knowledge is throwing 
&he baby out with the ba&h water. The conceptual- 
ly-based domain-specific knowledge is the key to 
robust understanding. 
The approach of the PEARL project  with regard 
t~ the &ransportabi l i ty  problem is t~ try  and I-  
denti fy areas of discourse that are common t~ most 
domains and to bui ld robust modules for  natural 
language analysis within these domains. Examples 
of such domains are temporal reference, loci&ion 
reference, and report generation. These modules 
are knowledge-based and can be used by a wide va- 
r iety  of domains to help extract  ~hm conceptual 
content of a requss5. 
REFERENCES 
Dyer, N. (1982). ~n:~9~h Und~?~aodiag~ ~ Cos- 
pu~nt HQdnl of In~ng?a~nd 8to,oaring fg? Na~i -  
~\[X? Cg~D?ObgU~igO. Yale University,  Computer 
Science Dept., Research Report #219. 
Harris, t. R. (1979). Experience with ROBOT in 12 
commercial natural language data base query ap- 
p l icat ions,  g?~oeding= Of ~b| O~b \[o~ncna~ioo- 
al Joins Cgnfntnnco on &?~i f i c ia l  \ [n~ol l lgonco. 
Hendrix, G. G. (1976). LIFER: A natural language 
interface fac i l i ty .  SRZ Tech. Note 135. Dec. 
1976. 
Lehnert, W. (1978). Ibo 8~o~o~ of Ggo~ioo 8O- 
sHO?iOg. Lawrence Erlbaum Associates, H i l l s -  
dale, New Jersey. 
Lehnert, ?. and Shwartz, S. (1982). Nabural 
Language Data Base Access with Pearl. EzoCmod- 
logs of ~be Hin~b Io~ntna~ional Conference on 
Comp~aSioQal L inguist ic=, Prague, Czechoslo- 
vakia. 
5acerdoti ,  E. D. (1978). A LADOER user's guide. 
Technical Note 163. SRI Project 6891, 
Schank, R. C. and kbelson, R. (1977). ~?ig~.  
Elm0=, G~IIs add U0da?s~anding, Lawrence Er l -  
baum Associates, H i l l sda le  Ne~ Jersey, 1977. 
Shwartz, S. (1982). PEARL: ' k  Natural Language 
Analysis System for Information Retrieval (sub- 
mitted to AAAI-82/applications d iv i s ion) .  
Waltz, D. L.,  Finin. T., Green, F., Conrad, F., 
Goodman, B., Hadden, G. (1976). The planes 
system: natural language access to a lar~e data 
base. Coordinated Science Lab., Univ, of I l -  
l ino is ,  Urbane, Tech. Report T-34, (July 1976). 
62 
