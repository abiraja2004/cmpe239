Taxonomy, Descr ip t ions ,  and Ind iv idua ls  
in Natura l  Language Understand ing 
Ronald J. Brachman 
Bolt Beralmek and Newman Inc. 
KLONE i s  a genera l -purpose  language fo r  represent ing  
conceptual information. Several of its pr~linent 
features - -  semantically clean inheritance of structured 
descriptions, taxonomic classification of gpneric 
knowledge, intensional structures for functional roles 
(including the possibility of multiple fillers), and 
procedural attachment (with automatic invocation) 
make it particularly useful in computer-based natural 
language understanding. We have implemented a prototype 
natural language system that uses KLONE extensively in 
several facets of its operation. This paper describes 
the system and points out some of the benefits of using 
KLONE for representation in natural language processing. 
Our system is the beneficiary of two kinds of advantage 
from KLONE. First, the taxonomic character of the 
structured inheritance net facilitates the processin~ 
involved in analyzing and responding to an utterance. 
In particular, (I) it helps guide parsing by ruling out 
semantically meaningless paths, (2) it provides a 
genera l  way o f  o rgan iz ing  and invok ing  semantic 
interpretation rules, and (3) it allows algorithmic 
determinat ion  of equ iva lent  sets of entities for certain 
p lan- recogn i t ion  in ferences .  Second, KLONE's 
representational structure captures some of the 
subtleties of natural lanKuage expression. That is, it 
provides a general way of representing exactly the 
quantificational import of a sentence without over- 
committing the interpretation to scope or multiplicity 
not overtly specified. 
The paper first presents a brief overall description of 
the natural language system. Then, prior to describing 
how we use KLONE in the system, we discuss some of the 
language's features at a general level. Finally we look 
in  detail at how KLONE affords us the advantages listed 
above. 
1. THE TASK AND THE SYSTEM 
Genera l ly  speaking,  we want to prov ide  a natura l  
interface to a subsystem that knows how to present 
conceptual information intelligently (on a bit-map dis- 
p lay)  - -  in this case the Augmented Transition Network 
(ATN) grammar from bae LUNAR system \ [5 \ ] .  The in forma-  
t ion  presentation subsystem allows flexible specifica- 
tion of coord inate  system mappings, inc lud ing  rec tangu-  
la r  windows, from parts of the ATN onto a sequence of 
"view surfaces". Object types can be assigned arbitrary 
presentation forms (graphic or alphanumeric), which can 
be modified in particular cases. Parts of the grammar 
are d i sp layed  accord ing to stand ing orders  and spec ia l  
requests about shape and projection. 
Our task is to command and control the intelligent 
graphics subsystem through natural language. For 
example, a sample dialogue with the system might include 
th i s  sequence of ut terances :  
(I) Show me the clause level network. 
\[System displays states and arcs of the S/ network\] 
(2)  Show me S/NP. 
\[System h igh l ights  s ta te  S/NP\] 
preverbal states\] 
(4) No. I want to be able to see S/AUX. 
\[System "backs off" display so as to include state 
S/AUK\] 
At the same time, we would like to  ask factual questions 
about the states, arcs, etc. of the ATN (e.g. "What are 
the conditions on this <user points> arc?"). Ouestions 
and commands addressed to the system typically (I) make 
use o f  e lements o f  the preceding d ia logue ,  (2)  can be 
expressed indirectly so that the surface form does not 
reflect the real intent, and (3) given our graphical 
presentation system, can make reference to a shared non- 
linguistic context. The issues of anaphora, (indirect) 
speech acts, and deixis are thus of principal concern. 
The natural language system is organized as illustrated 
in Figure I a. The user sits at a bit-map terminal 
mi~'ti,l' ot~v~l +
/T~X~ ~p~r  . . . . . . . . . . . . . . .  , 
,J '--/ 
Figure I. System structure 
(highlighting types of knowledge involved). 
equipped w i th  a keyboard and a po in t ing  dev ice .  Typed 
input  from the keyboard (poss ib ly  in terspersed  w i th  
coord inates  from the po in t ing  dev ice)  is  analyzed by a 
vers ion  o f  the RU_~S System \ [2 \ ]  ~ an ATN-based increment -  
al parser that is closely coupled with a "case-frame 
dictionary". In our system, this dictionary is embodied 
in a syntact i c  taxonomy represented in KLONE. The 
parser  produces a KLONE representat ion  o f  the syntact i c  
s t ructure  o f  an ut terance .  Incrementa l ly  along w i th  i t s  
p roduct ion ,  th i s  syntact i c  s t ructure  t r iggers  the 
c reat ion  o f  an in terpretat ion .  The in terpretat ion  
s t ructure  - -  the l i te ra l  ( sentent ia l )  semantic content  
of the ut terance  - -  is then processed by a discourse 
expert that attempts to determine what was really meant. 
In this process, anaphoric expressions must be resolved 
and indirect speech acts recognized. Finally, on the 
basis of what is determined to be the intended ~orce of 
(3)  Focus in  on the preverba l  const i tuents .  
\[System sh i f t s  scale and centers  the d isp lay  on the  
a Dashed elements o f  the f igure  are proposed but  not yet  
implemented. 
33 
the ut terance,  the discourse component decides how the 
system should respond. I t  plans i t s  own speech or 
d isp lay  act ions ,  and passes them o f f  to the language 
generation component (not yet implemented) or d isp lay  
exper t .  Some of  these operat ions w i l l  be discussed in 
more detail in Section 3. 
2. THE REPRESENTATION LANGUAGE 
Before we look at deta i l s  of  the system's use Of KLONE, 
we br ie f ly  sketch out some of i t s  cogent features .  
)CLONE is a uni fom language for the explicit 
representat ion  o f  natural language conceptual 
information based on the idea of structured inher i tance  
networks \ [3 \ ] .  The pr inc ipa l  representat iona l  elements 
of ~ONE are Concepts, of which there are two major 
types - -  Generic and Ind iv idua l .  Generic Concepts are 
arranged in an inher i tance s t ruc ture ,  expressing 
long-term generic knowledge as a taxonomy a. A s ing le  
Generic Concept is a description template,  f rom which 
individual descriptions (in the form of Individual 
Concepts) are fo rmed.  Generic Concepts can be bui l t  as 
specializations of other Generic Concepts, to which they 
are attached by inher i tance Cables. These Cables form 
the backbone of  the network (a Generic Concept can have 
many "superConcepts" as wel l  as many "subConcepts"). 
They carry  structured descriptions from a Concept to its 
subConcepts. 
KLONE Concepts are h igh ly  st ructured ob jec ts .  A 
subConoept inher i t s  a st ructured de f in i t ion  from i t s  
parent aa and can modify i t  in a number of s t ruc tura l ly  
consistent ways. The main elements of the structure are 
Roles, which express re la t ionsh ips  between a Concept and 
other  closely assooiatnd Concepts (i.e. its properties, 
par ts ,  e tc . ) .  Roles themselves have s t ruc ture ,  
including desoriptlons of potential f i l l e rs  eee, modality 
ln fomat ion ,  and names aaee. There are bas ica l ly  two 
kinds of Roles in )O.ONE: RoleSets and IRoles. RoleSets 
have potentially many fillers e~.g. the officer 
Role aeaea of a par t i cu la r  COMPANY would be filled once 
fo r  each o f f i cer ) .  A RoleSet has as part  o f  i t s  
internal s t ructure  a restriction on the number of 
poss ib le f i l l e rs  i t  can have in any par t i cu la r  instance.  
A RoleSet on an Ind iv idua l  Concept stands for  the 
par t i cu la r  set o f  f i l l e rs  fo r  that  par t i cu la r  concept. 
An IRole (for Instance Role) appears on an I nd iv idua l  
Concept to express the binding of a par t i cu la r  value to 
the Role i t  plays in that  Concept. (There would be 
exact ly  one IRole for each officer s lo t  of a par t i cu la r  
company, resardless of the actual  number of people 
playing those ro les . )  
There are several inter-Role relationships in KLONE, 
which relate the Roles of a Concept to those of s 
sdperConcept. Such re la t ionsh ips  are carr ied in the 
inher i tance Cables mentioned ear l ie r .  They include 
- restriction (of f i l l e r  description and number); e.g. 
that  a par t i cu la r  kind o f  COMPANY w i l l  have exact ly  
three officers, all ot whom must be over ~5; this is 
a relationship between RoleSets, in which the more 
res t r i c ted  RoleSet has a l l  o f  the proper t ies  o f  the 
one it restricts, with its own local restrictions 
added conjunctively; 
- d i f fe rent ia t ion  (o f  a Role into subRoles); e .g .  
d i f fe rent ia t ing  the officers of a COMPANY into 
pres ident ,  v i ce -pres ident ,  e tc . ;  this is also a 
re la t ionsh ip  between two RoleSets carry ing 
inher i tance  - -  the more spec i f i c  Roles inher i t  a l l  
p roper t ies  o f  the parent Role except for  the number 
restriction; 
- particularization (o f  a RoleSet fo r  an Individual 
Concept); e.g. the officers of BBN are a l l  
COLLEGE-GRADUATEs; 
- satisfaction (binding of a particular filler 
description into a particular Role in an Individual 
Concept); e .g .  the pres ident  o f  BBN is  STEVE-LEW: 
this iS the relationship between an IRole and its 
parent RoleSet. 
Figure 2 illustrates the use of  Cables and the structure 
t The network is a par t ia l  order ing with a topmost 
element - -  the Concept o f  an INDIVIDUAL - -  below which 
a l l  other Concepts appear. There is no " leas t "  element 
in the net,  whose f r inge  is composed of  Ind iv idua l  
Concepts not re lated to each other .  
e, This inher i tance impl ies in ter  a l ia  that ,  i f  STATE is  
a subConcept of ATN-CONSTITUENT, then any par t i cu la r  
s ta te  is  by de f in i t ion  also an ATN const i tuent .  
? ee These l im i ta t ions  on the fom of  par t i cu la r  f i l l e rs  
are cal led "Value Rest r i c t ions"  (V /R 's ) .  I f  more than 
one V/R is appl icable at a given Role, the res t r i c t ions  
are taken con junct ive ly .  
? ,ae Names are not used by the system in any way. They 
are merely conveniences for  the user. 
,mess In the text  that  fo l low,  Roles w i l l  be indicated 
as underlined names and Concepts w i l l  be indicated by 
a l l  upper case expressions.  
Figure 2. A piece o f  a KLONE taxonomy. 
o f  Concepts in a piece of  the KLONE taxon?fay for  the ATN 
grammar, In th i s  f igure ,  Concepts are presented as 
e l l ipses  ( Ind iv idua l  Concepts are shaded), Roles as 
small squares ( IRoles are f i l l ed  in ) ,  and Cables as 
double- l ined arrovJ .  The most general Concept, 
ATN-CONSTITUENT, has two subConcepts - -  STATE and ARC. 
These each inher i t  the general propert ies  of ATN 
const i tuents ,  namely, each is known to have a 
34 
displayForm associated with it. The subnetwork below 
ARC expresses the classification of the various types of 
arcs in the ATN and how their conceptual structures 
vary. For example, a CONNECTING-ARC has a nextState 
(the state in which the transit ion leaves the parsing 
process), while for POP-ARCs the term is not meaningful 
( i .e .  there is no nextState Role). Links that connect 
the Roles of more specific Concepts with corresponding 
Roles in their parent Concepts are considered to travel 
through the appropriate Cables. Final ly,  the structure 
of an Individual Concept is i l lustrated by CATARC#0117. 
Each IRole expresses the f i l l i ng  of a Role inherited 
from the hierarchy above - -  because CATARC#0117 is a 
CAT-ARC, it has a category; because it is also a 
CONNECTING-ARC, it has a nextState, etc. 
The structure of a Concept is completed by its set of 
Structural Descriptions (SD's). These express how the 
Roles of the Concept interrelate via the use of 
parameterized versions ("ParalndividJals") of other 
Concepts in the network to describe quantified relations 
between the ultimate f i l l e rs  of the Concept's Roles. 
The quantification is expressed in terms of set mappings 
between the RoleSet3 of a C~ncept, thereby quantifying 
over their sets of fillers. In addition to quantified 
relations between potential R~le fi\]lers, simple 
relations like subset and get equality can be expressed 
with a special kind of SD ~:alled a "RoleValueMap" (e .g .  
the relation that "the object of the precondition of a 
SEE i s  the same as the object ~f its effect"). SD's are 
inherited through cable~ and are particularized in a 
manner similar to that of Roles. 
There i s  one important feature  of KLONE that I would 
like to point out, although it is not yet used in the 
natural language system. The language carefully 
distinguishes between purely descriptional structure and 
assertions about coreference, existence, etc. All of 
the structure mentioned above (Concepts, Roles, SD's and 
Cables) is definitional. A separate construct called a 
Nexus is a LJsed as a locus of coreference for Individual 
Concepts. One expresses coreference of description 
relative t~ a Context by placing a Nexus in that Context 
and attaching to it Individual Concepts considered to be 
coreferential. AI\] assertions are made relative to a 
Context, and thus do not affect the (descriptive) 
taxonomy of' generic knowledge. We anticipate that 
Nexuses w i l l  be impor tant  in reasoning about par t i cu -  
la rs ,  answering quest ions  (espec ia l ly  in dec id ing  the 
appropriate form for an answer), and resolving anaphoric 
expressions, and that Contexts will be of use in 
reasoning about hypotheticals, beliefs, and wants. 
The f inal feature of KLONE relevant to our particular 
application is the ahility to attach procedures and data 
to structures in the network. The attached procedure 
mechanism is implemented in a very general way. Proce- 
dures are attached to k'LONE ent i t ies  by " interpret ive 
hooks" (ihooks), which specify the set of situations in 
which they are to be triggered. An interpreter function 
operating on a KLONE entity causes the invocation of all 
procedures inherited by or directly attached to that 
entity by thooks whose situations match the intent of 
that f.~nction. Situations include things like 
"Individuate", "Modify", "Create", "Remove", etc. In 
addition to a general situation, an ihook specifies when 
in the executinn of the interpreter function it is to be 
invoked (PRE-, POST-, or WHEN-). 
3. USE OF KLONE IN THE NATURAL LANGUAGE SYSTEM 
The previous section described the features of KLONE in 
general terms. Here we illustrate how they facilitate 
the performance of our natural language system. (Figure 
I above sketched the places within the system of the 
variou~ KLONE knowledge bases discussed here.) We will 
discuss the use of a syntactic taxonomy to constrain 
pars ing and index semantic interpretation rules, and 
structures used in the syntactic/discourse interface to 
express the literal semantic content of an utterance. 
The parser  uses KLONE to descr ibe  potential syntactic 
structures. A taxonomy of syntactic constituent 
descriptions, with C~ncepts like PHRASE, NOUN-PHRASE, 
LOCATION-PP, and PERSON-WORD, is used to express how 
phrases are built from their constituents. The taxonomy 
also serves as a discrimination net, allowing common 
features of constituent types  to be expressed in a 
single place, and distinguishing features to cause 
branching into separate subnets. 
Two benefits accrue from this organization of knowledge. 
First, shallow semantic constraints are expressed in the 
Roles and SD's of Concepts like LOCATION-PP. For 
example, the prepObject )f a LOCATION-PP must be a 
PLACE-NOUN. A description of "on AI" (as in "book on 
AI") as a LOCATION-PP c~Id  not be constructed since AI 
does not satisfy the value restriction for the head 
role. Such constraints help rule out mislead in 8 parse 
paths, in the manner ~f a 3emantic grammar \ [4\] ,  by 
refusing to construct semantically anomalous constituent 
descriptions. In conj~..tion with the general (ATN) 
grammar of English, this is a powerful guidance 
mechanism which helps parsing proceed close to 
deterministically \[2). 
Second, the syntactic taxonomy serves as a structure on 
which to hang semantic projection rules. Since the 
taxonomy is an inheritance structure, the description of 
a given syntactic constituent inherits all semantic 
interpretation rules appropriate for each of the more 
general constituent types that it specializes, and can 
have its own special-purpose rules as well. In the 
example above, simply by virtue of its placement in the 
taxonomy, the Concept for "on AI" would inher i t  rules 
re levant  to PP's in genera l  and to SUBJECT-PP's in 
particular, but not those appropriate to LOCATION-PP's. 
Interpretation per se is achieved using the attached 
procedure facility, with semantic projection rules 
expressed as functions attached to Roles of the syntac- 
tic Concepts. The functions specify how to translate 
pieces of syntactic structure into "deeper" Concepts and 
Roles. For example, the subject of a SHOW-PHRASE might 
map into the a~ent o f  a DISPLAY action. 
The mapping rules are triggered automatically by the 
KLONE interpreter. This is facilitated by the 
interpreter's "pushing down" a Concept to the most 
specific place it can be considered to belong in the 
taxonomy (using only "analytic", definitional 
constraints). Figure 3 illustrates schematically the 
way a Concept can descend to the most specific level 
implied by its internal description. The Concept being 
added to the network is an NP whose head is "ARC" and 
whose modifier is "PUSH" (NP@OO23). It is initially 
considered a direct (Generic) subConoept of the Concept 
for its basic syntactic type (NP). Its Role structure, 
however, implies that it in fact belongs in a more 
restricted subclass of NP's, that is, TYPED-ARC-NP (an 
NP whose head is an ARC-NOUN and whose modifier is an 
ARC-TYPE-WORD). The interpreter, on the basis of only 
definitional constraints expressed in the network, 
places the new Concept below its "most specific 
subsumer" -- the proper place for it in the taxonomy. 
The process proceeds incrementally, with each new piece 
of the constituent possibly causing further descent. In 
this case, NP@O023 would initially only have its head 
Role specified, and on that basis, it would be placed 
under ARC-NP (which is "an NP whose head is an 
ARC-NOUN"). Then the parser would add the modifier 
specification, causing the Concept's descent to the 
resting place shown in the right half of Figure 3. When 
the constituent whose description is being added to the 
network is "popped" in the parser, its IOL.ONE descriptiom 
35 
Figure U. XLONE description of 
glgure 3. Automatic Concept descent. 
i s  indtv idueted - -  causing the invocat ion o f  a l l  "WHEN- 
Ind iv iduated"  attached procedures inher i ted  through 
superconcept Cables. These procedures cause an 
interpretation for the constituent to be built on the 
basis of the interpretations of component parts of the 
syntactic description. 
This IAteral semantic i n te rpreta t ion  o f  a phrase -- also 
a KLONE s t ruc ture  - -  is  the " input"  to  the discourse 
component. An important element o f  th i s  i n te r face  
between the syntactic processor and the discourse 
component is that the parser/interpreter commits itself 
only to informat ion exp l i c i t l y  present In the input 
phrase, and leaves a l l  in ference about quant i f ie r  scope, 
etc .  to the discourse expert .  Two kinds o f  representa-  
t iona l  structures support this. The Concept O3\[T (for 
"determined set") is used extensively to capture sets 
imp l i c i t  in noun phrases and clauses.  ~EYs use the 
inherent multiplicity of RoleSets to group together 
several entities under a single Concept, and associate 
determiners (deCinlte/indeflnite, quantifiers, etc.) 
with such a set of entities. A DSET can express the 
characteristics of a set of entities without enumerating 
them explicitly, or even indicating how many members the 
set is expected to have. RoleYalueMaps a11ow 
, const ra in ts  between DSETs to be expressed in a general 
way -- a RoleValueMsp expresses a subset or equallty 
relation between two RoleSets. Such relations can be 
constructed without knowlng in advance the csrdinallty 
of the sets or any of their members. 
Figure 4 i l l us t ra tes  the use o f  these s t ructures  to 
express the in tent  o f  the sentence, "Show me states  
S/NP, S/AUX, and S/DCL "e. DSET#O035 represents the 
in terpreta t ion  o f  the noun phrase, "the states  ~/HP, 
S/AUX, and ~/DCL". The generic DSET Concept has two 
Roles, mamb~r and determiner .  The member Role can be 
f i l l ed  mul t ip ly ,  and there in  l i es  the "settedness" o f  
the \[\]SET. \[~ET#O035 has a par t i cu la r i zed  version o f  the 
? RoleSets in this figure are drawn as squares with 
circles around them. RoleSets with filled-in circles 
are a special kind of  particularized RoleSet that can 
occur only in Individual Concepts. The RoleValueMap is 
pictured as a diamond. 
"Show me states S/NP, S/AUX, and S/DCL". 
member Role: Role R1 represents the set oC three s tates  
mentioned in the noun phrase, as a group. Thus, the 
Value Rest r i c t ion  o f  R1, STATE, appl ies  to each member. 
The three 1Roles of DSETIO035, connected by "Sat i s f ies"  
l inks  to the par t i cu la r i zed  member RoleSat, ind icate  
that  the par t i cu la r  s tates  are the members o f  the set e.  
The other  DSET in the f igure ,  r~ETmO037, represents the 
c lause- leve l  s t ruc ture  o f  the sentence. The clause has 
been in terpreted  into  something l i ke  "the user has 
performed what looks on the surface to be a request for  
the system to show the user some set oC s ta tes" .  This 
captures several kinds o f  indeterminacy: (1) that  the 
sentence may only be a request at  the surface leve l  
( "Don' t  you know that  pl&s can ' t  f l y?"  looks l i ke  a 
request to in fo rm) ,  (2) that  there is  more than one way 
to e f fec t  a "show n ("show n could mean redraw the ent i re  
d i sp lay ,  change i t  s l ight ly  to include a new ob jec t ,  or 
simply h igh l ight  an ex is t ing  one),  (3) that  i t  is  not 
c lear  how many operat ions  are ac tua l ly  being requested 
(showir~ three objects  could take one, two, or three 
ac t ions ) .  TherefOre, the in terpreta t ion  uses Generic 
Concepts to describe the kind o f  events appearing in the 
surface form o f  the sentence and makes no ccmmitment to 
the number o f  them requested. The only commitment to 
"quant i f l ce t ione l "  in format ion  ls  expressed by the Role- 
ValueMap. I t s  two po in ters ,  X (point in& to the member 
Role o f  nSET#O035) and yea (po int ing  to the ob jec t  o f  
? The Value Rest r i c t ion .  STATE, i s  redundant here, since 
the members o f  th i s  par t i cu la r  set were exp l i c i t l y  
spec i f ied  (and are known to be s ta tes ) .  In other  cases, 
the informat ion is  more usefu l .  For example, no 1Roles 
would be constructed by the parser i f  the sentence were 
"Are there three s tates?" ;  only one would be constructed 
in "Show me state S/NP and i t s  two nearest neighbors" .  
On the other  hand, no Value Rest r i c t ion  would be 
d i rec t ly  present on Role R1 i f  the noun phrase were jus t  
"S/NP. S/AUX, and S/DCL". 
ee ? i s  a chained po inter  acing f i r s t  through the member 
Role o f  ~SET~O037, then throu6h the act Role o f  
S-R?QUEST~O038, and f ina l ly  to the o~-ent Role o f  
SHOWeO035. I t  is  considered to re fer  to the set o f  
ZRoles expressing the ob jects  o f  a l l  SHOW events 
u l t imate ly  S-REQUESTed, when i t  is  determined exact ly  
how many there are to be ( i .e .  when the 1Roles o f  
36 
the requested act ) ,  ind icate  that the ultimate set of 
things to be shown, no matter how many particular SHOW 
events take place, must be the same as the set of 
members in the noun phrase DSET (namely, the three 
states). 
As mentioned, semantic interpretation invokes the 
discourse expert,  This program looks to a plan that it 
is hypothesizing its user to be following in order to 
i n te rpret  ind i rec t  speech acts. Following \ [1 \ ] ,  the 
speech acts REQUEST, INFORM, INFORMREF, and INFORMIF are 
defined as producing certain effects by means of the 
heater's recognition of the speaker's intention to 
produce these effects. Indirect speech act recognition 
proceeds by inferring what the user wants the system to 
th ink is h is /her plan. P lan-recognit ion involves making 
inferences o f  the form, "the user did th i s  act ion in 
order to produce that  e f fec t ,  which s/he wanted to 
enable him/her to do th i s  (next) ac t ion" .  
Making inferences at the level  o f  "intended plan 
recogni t ion"  is begun by analyzing the user 's  utterance 
as a "surface" speech act (SURFACE-REQUEST or SURFACE- 
INFORM) indicating what the utterance "looks like". By 
performing plan-recognit ion inferences whose 
:p laus ib i l i ty  is  ascertained by using mutual be l ie fs ,  the 
system can, for instance, reason that what looked to be 
an INFORM of  the user 's  goal is ac tua l ly  a REQUEST to 
include some portion of the ATN into the display. Thus, 
the second clause o f  the utterance,  "No; I want to be 
able to see S/AUX," is analyzed as a REQUEST to INCLUDE 
S/AUX by the fo l lowing chain of plan-recogni t ion 
inferences: 
The system believes 
(1) the user has performed a SURFACE-INFORM o f  h is /her  
goal;  thus 
(2) the user intends for the system to believe that the 
user wants to be able to see S/AUX. Since this 
requires that S/AUX be visible, 
(3) the user intends for the system to believe that the 
user wants the system to plan an action to make 
S/AUX visible. Because the "No" leads to an 
expectat ion that the user might want to modify the 
disp lay,  the system plans to INCLUDE S/AUX in the 
existing disp lay,  rather than DISPLAY S/AUX alone. 
(q) Hence, the user intends for the system to believe 
that user wants the system to INCLUDE S/AUX. 
(5) The user has performed a REQUEST to INCLUDE. 
The system responds by planning that act ion .  
In addit ion to using Contexts to hold descr ipt ions  o f  
be l ie fs  and wants, the p lan-recognit ion process makes 
extensive use of RoleValueMaps and ~SETs (see Figure 4). 
Plan-recognit ion inferences proceed using Just the 
c lause- leve l  structur~ and pay no a t tent ion  to the 
par t i cu la rs  of the noun phrase in terpreta t ions .  The 
system creates new BSETs for intermediate sets and 
equates them to previous ones by RoleValueMaps, as, for 
example, when i t  decides to do a SHOW whose object  is to 
be the same as whatever was to be visible. At the end 
of plan-recognltion the system may need to trace through 
the constructed RoleValuaMaps to find all sets 
equivalent to a given one. For instance, when i t  
determines that it needs to know which set of things to 
disp lay ,  highlight, or include, it treats the equated 
RoleValueMaps as a set of rewrite rules, traces back to 
the original noun phrase DSET, and then tries to finds 
the referent of that DSET a. 
DSET#OO37 are f ina l ly  spec i f ied) .  Thus, i f  there are 
u l t imate ly  two SHOWs, one o f  one state and the other  o f  
two, the Y pointer implicitly re fers  to the set of  a l l  
three states shown. 
e The system only finds referents when necessary. This 
depends on the user's speech acts and the system's needs 
in understanding and complying vith them. Thus, it is 
F ina l ly ,  not only are parse st ructures  and semantic 
in terpreta t ions  represented in KLONE, but the data base 
- -  the ATN being discussed - -  is  as well  (see Figure 2 
above). Further,  descr ipt ions of how to d isp lay the 
ATN, and general descr ipt ions  o f  coordinate mappings and 
other d isplay information are represented too. Commands 
to the display expert are expressed as Concepts 
involv ing actions l i ke  SHOW, CENTER, etc.  whose 
"arguments" are descr ipt ions  o f  desired shapes, etc .  
Derivations of particular display forms from generic 
descr ip t ions ,  or from mapping changes, are carr ied out 
by the attached procedure mechanism. F ina l ly ,  once the 
par t i cu la r  shapes are decided upon, drawing is achieved 
by invoking "how to draw" procedures attached to d isp lay 
form Concepts. Once again, the taxone~mic nature of the 
structured inheritance net alows domain structure to be 
expressed in a natural  and useful way. 
Acknowledgements 
The prototype natural  language system was the resu l t  o f  
a tremendous e f fo r t  by several people: Rusty Bobrow was 
responsible for the parser and syntactic taxonomy, 
although his support in design and implementation of  
\[CLONE was as extensive and as important;  Phil Cohen 
designed and bu i l t  the discourse/speech act component 
that  does a l l  of  the inference in the system; Jack 
Klovstad did the graphics, bui ld ing on an ex is t ing  
system (AIPS) bu i l t  by Norton Greenfeld, Martin Yonke, 
Eugene C iccare l l i ,  and Frank Zdybel. F ina l ly ,  B i l l  
Woods bu i l t  a pseudo-English input parser that  allowed 
us to eas i ly  bui ld complex KLONE structures with a 
minimum of  e f fo r t .  Many thanks to Phil Cohen, Candy 
Stdner, and Bonnie Webber for  help with th is  paper. 
This research was supported by the Advanced Research 
ProJects Agency of  the Department o f  Defense and was 
monitored by ONR under Contract No. N0001~-77-C-0378. 
CI\] 
3? 
\[2\] 
\ [3\ ]  
References 
\[q\] 
? C5 \ ]  
Al len,  James F. A Plan-baaed Approach to Speech Act 
Recognition. Technical Report No. 131/79. Toronto, 
Ontario: Dept. of  Computer Science, Univers i ty  of  
Toronto, February 1979. 
Bobrow, R. J. The RUB System. In Research in 
Natural Language Understanding: Quarter ly Progress 
Report No. 3 (1 March 1978 to 31 May 1978). BBN 
Report No. 3878. Cambridge, HA: Bolt  Beranek and 
Newman Inc . ,  July 1978. 
Braehman, R. J. A St ructura l  Paradigm for 
Representing Knowledge. Ph.D. D isser ta t ion ,  
Harvard Un ivers i ty ,  Cambridge, HA, Hay 1977. Also 
BBN Report No. 3605. Cambridge, HA: Bolt Beranek 
and Newman Inc . ,  May 1978. 
Burton, R. R. Semantic Grammar: An Engineering 
Technique for Constructing Natural Language 
Understanding Systems. BBN Report No. 3q53. 
Cambridge, MA: Bolt  Boranek and Newman Inc . ,  
December, 1976. 
Woods, W. A., Kaplan, R. M., and Nash-Webber, B. The 
Lunar Sciences Natural Language Information System: 
Final  Report. BBN Report No. 2378. Cambridge, MA: 
Bolt Beranek and Newman Inc . ,  1972. 
intended that a naming speech act l i ke  "Cal l  that  the 
complement network" w i l l  not cause a search for  the 
re ferent  o f  "the complement network". 

