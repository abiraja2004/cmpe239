AFTERTHOUGHTS ON ANALOGICAL REPRESENTATIONS 
Aaron Sloman 
Cognit ive Studies Programme 
School of Social Sciences 
University of Sussex 
Brighton, England 
In 19711 wrote a paper attempting to 
relate some old phi losophical  issues about 
representat ion and reasoning to problems in 
Art i f ic ia l  Intel l igence. A major theme o f  
the paper was the importance of 
dist inguishing "analogical" from "Fregean" 
representat ions.  I stil l think the 
dist inct ion is important, though perhaps not 
as important for current problems in A.I. 
as I used to think. In this paper I'll try 
to explain why. 
Throughout I'll use the term 
"representat ion" to refer to a more or less 
complex structure which has addressable and 
s ign i f i cant  parts, and which as a whole is 
used to denote or refer to something else. 
Thus maps, sentences, and phrases like "The 
paternal grandfather of the present mayor of 
Brighton" are representat ions.  There is 
much that's puzzl ing and complex about the 
concept of using something to "denote" or 
"refer to " something else, but for the 
present I'll dodge that issue and rely on 
our intuit ive understanding thereof. 
The analogica l /Fregean dist inct ion is 
not new: people have been discovering and 
re-discover ing it for a long time, though 
they rarely manage to say clearly and 
pecisely what it is, despite agreement on 
(most) examples: e.g. maps, photographs and 
family trees are analogical  representat ions 
whereas many sentences, referr ing phrases, 
and most logical and mathematical  formulae 
are Fregean. I. use the word "Fregean" 
because it was Gott leb Frege who first 
clearly saw that a great deal of 
natura l - language syntax and semantics could 
be analysed in terms of the appl icat ion of 
functions to arguments, and that this 
analysis  was far superior to previous 
attempts to understand the structure of 
sentences. For instance, it enabled him to 
invent the logic of quanti f iers and develop 
a notation which provided some of the 
essent ia l  ideas of Church's lambda-calculus,  
and thereby some of the goodies in 
programming languages like LISP, ALGOL and 
POP-2. I use the word "Fregean" not only to 
honour Frege but also because there is no 
unambiguous alternative. The most popular 
rivals - "symbolic" and "verbal" - are used 
in too many different i l l -def ined ways, and 
in addit ion the first seems too general, the 
second too narrow. People seem to have a 
lot of trouble seeing clearly what the 
dist inct ion is, so I'll list and comment on 
some of the more common misrepresentat ions 
of what I wrote in the 1971 paper. 
Misrepresentat ions 
(I) "Analogical  representat ions are 
continuous, Fregean representat ions 
discrete". Comment: I gave examples of 
discrete analogical  representations,  
e.g. a list whose elements are ordered 
164 
according to the order of what they 
represent. 
(2) "Analogical  representat ions are 
2-dimensional,  Fregean representat ions 
l -dimensional." Comment: I gave examples 
of 1-d analogical  representat ions (e.g. 
the list example). Much mathematical  
notation is 2-dimensional  and Fregean 
(e.g. integral or summation symbols, 
the normal representat ion of fractions). 
(3) "Analogical  representat ions are 
isomorphic with what they represent." 
Comment: I discussed 2-d prictures which 
are not isomorphic with the 3-d scenes 
they represent analogiCal ly.  
(4) "Fregean representat ions are symbolic, 
analogical  representat ions 
non-symbol ic ."  Comment: I find this 
notion unintel l ig ible.  The only sense 
of "symbolic" which I can understand 
clearly includes both maps and 
sentences. People who arrive at this 
mis interpretat ion seem to be guilty of 
using "symbolic" in a sloppy, 
i l l -def ined sense, to contrast with some 
equal ly i l l -def ined alternative. Their 
excuse may be that this is f requently 
done (e.g. by Minsky and Papert in 
their Progress Report, and by Minsky in 
his more recent paper on frames - 1974.) 
(5) "Sentences in a natural  Inaguage are all 
Fregean." Comment: I pointed out that 
some Engl ish sentences function in a 
partly analogical  way, as is i l lustrated 
by the di f ference in meaning of "She 
shot him and kissed him" and "She kissed 
him and shot him". Compare "Tom, Dick 
and Harry stood in that order". 
Contrast "She shot him after she kissed 
him", where a relat ion is expl ic i t ly  
named, and the semantics is Fregean. 
(5) "Analogical  representat ions are 
complete: whatever is not represented in 
a picture or map is thereby represented 
as not existing. By contrast Fregean 
representat ions may abstract from as 
many or as few features of a s i tuat ion 
as desired: if I say "Tom stood between 
Dick and Harry", then nothing is implied 
about whether anyone else was there or 
not." Comment: there may be an important 
d ist inct ion between descr ipt ions or 
representat ions which are complete 
(relative to the resources of a 
language) and those which are 
incomplete, but this has nothing to do 
with the analogica l /Fregean dist inct ion. 
E.g. a map showing only some of the 
towns and roads of Br itain is sti l l  an 
analogical  representat ion.  We are free 
to specify for some pictures or maps 
that they are to be interpreted as 
complete, and for others that they 
depict relat ions between some but not 
all parts of a s i tuat ion or object. 
S imi lar ly  a LISP llst might contain 
items represent ing events in the order 
in which the events occurred, yet be 
incomplete in that new items are added 
as new knowledge about the t lme-order of 
events is acquired. 
(7) "Fregean representat ions have a grammar, 
analogical  representat ions do not." 
Comment: it is easy to define a grammar 
for l ists and trees, f requently used as 
analogical  represent ions in computing. 
I 
I 
I 
I 
I 
I 
I 
I 
I 
I, 
I 
I 
I 
I 
I 
I 
I 
I 
I 
I 
I 
I 
I 
I 
I 
I 
One can also de f ine  a grammar for a 
class of line-drawings which includes 
pictures of polyhedral scenes. 
(8) "Although digital computers can use 
Fregean representations, only analog 
computers can handle analogical 
representations." Comment: see (I) and 
(2) above. 
Explanation of the Distinction 
What then is the distinction? Both 
Fregean and analogical representations are 
complex, i.e. they have parts and relations 
between parts, and therefore a syntax. They 
may both be used to represent, refer to, or 
denote, things which are complex, i.e. have 
parts and relations between parts. The 
difference is that in the case of analogical 
represenations both must be complex (i.e. 
representation and thing) and there must be 
some correspondence between their structure, 
whereas in the case of Fregean 
representations there need be no 
corresondence. Roughly, in a complex 
Fregean symbol the structure of the symbol 
corresponds not to the structure of the 
thing denoted, but to the structure o f  the 
procedure by which that thing is identified, 
or computed. 
We can be a bit more precise about 
analogical representations. If R is an 
analogical representation of T, then (a) 
there must be parts of R representing parts 
of T, as dots and squiggles on a map 
represent towns and rivers in a country, or 
lines and regions in a picture represent 
edges and faces in a scene, and (b) it must 
be possible to specify some sort of 
correspondence, possibly context-dependent, 
between properties or relations of parts of 
R and properties or relations of parts of T, 
e.g. size, shape, direction and distance of 
marks on a map may represent size, shape, 
direction and distance of towns, and 
different 2-d relationships of lines meeting 
at a Junction in a picture may represent 
(possibly ambiguously) 3-d configurations of 
edges and surfaces in a scene. The  
relationship between R and T need not be an 
isomorphism, for instance when a relation 
between parts of R (such as direction or 
distance) represents different relations 
between parts of T in different contexts. 
In a perspective drawing there is no simple, 
context independent, rule for translating 
angles between lines into angles between 
edges or surfaces in the scene depicted. In 
such cases the task of interpreting R, i.e. 
working out what T is, may involve solving 
quite complex problems in order to find a 
globally consistent interpretation. (See 
Clowes 1971.) From (a) and (b) it follows 
that in analogical representations, 
relationships within T do not need to be 
explicitly named in R, i.e. there need not 
be a Dart of R corresponding to relations 
like "above", "behind", "intersects" in T. 
The conditions (a) and (b) do not hold for 
Fregean representations. 
A Fregean formula may be very complex, 
with many parts and relationships, but none  
of the parts or relationships need corresond 
to parts or relations within the thing 
denoted. The phrase "the city 53 miles 
north of Brighton" contains the symbol 
"Brighton" as a part, but the thing denoted 
does not contain the town Brighton as a 
part. The thing denoted, London, has a 
complex structure of its own, which bears no 
relation whatsoever to the structure of the 
phrase. Similarly "the father of Fred", 
"63-24", "(CAR(CDR(CDR(CONS A (CONS B (CONS 
C NIL))))))" have structures which need bear 
no relationship to the structures of what 
they denote. In these, and the examples 
discussed by Frege, it is possible to 
analyse symbolic complexity as arising only 
from the application of functions to 
arguments. Predicate calculus, apparently 
invented independently by Frege and C.S. 
Peirce, is the consequence of this idea. A 
full xplanation would require an exposition 
of Frege's distinctions between first-level 
and higher-level functions: e.g. he 
analysed "all", "exists", and the integral 
sign used by mathematicians, as names for 
second-level functions which take 
flrst-level functions as arguments. 
Comments o_D_n ~he Distinction 
The analysis proposed by Frege fails to 
account for the full richness and complexity 
of natural language, Just as it fails to 
account for all the important features of 
programming languages. For instance, Frege 
apparently required every function to have a 
definite "level", determined by the levels 
of its arguments. In languages like POP2 
and-LISP, where variables need not have 
types, functions like MAPLIST and APPLY take 
functional arguments of any type, and 
therefore do not themselves have types. 
APPLY can even be applied to itself. In 
POP2, APPLY(4,SQRT,APPLy); has the same 
result as SQRT(4); for instance. Since one 
can use English to explain how such 
functions work, English also cannot be 
restricted to Fregean semantics. There are 
many other ways in which a Fregean analysis 
of English breaks down: e.g. some adverbial 
phrases don't fit easily, and many linguists 
would quarrel wth the analysis of "the 
capital of France" as an application of a 
function to France, according to the 
decomposition "the capital of (France)". (I 
am inclined to think the linguists are 
wrong, however.) 
So I am not claiming that every 
symbolism, or representational system, must 
be analysed as being either analogical or 
Fregean. The distinction is not a 
dichotomy, though there may be some 
generalisation which is. Wittgensteln, in 
his Tr c _ ~  Lo~ico PhilosoDhicus outlined 
an all-embraclng "picture" theory of meaning 
which attempted to subsume Fregean 
representations under analogical (e.g. by 
describing a structure such as R(a,b) as one 
in which the relation between the names "a" 
and "b" analogically represented the 
relation between their denotations 
corresponding to R. In his later writings 
he acknowledged that this attempt to 
eliminate the distinction was unsuccessful. 
Conversely, I once explored the possibil ity 
of interpreting all analogical  
representations as be ing  composed of 
165 
funct ion-s igns and argument-s igns and 
decided that it could not be done, since an 
essential  feature of Fregean symbolisms is 
that argument signs can be replaced by 
others without altering anything else, and 
in general this cannot be done with 
pictures: replace the representat ion of a 
man in a picture with the representat ion of 
an elephant, and there will often be some 
other syntactic change, since different 
outl ines leave different things visible. 
Compare "My uncle is in the garden" and "My 
elephant is in the garden". Here any 
difference in the impl icat ions depends not 
on structural  di f ferences between the 
sentences but on background premises about 
the dif ferences between men and elephants. 
I conc lude  that attempts to obl i terate the 
dist inct ion cannot succeed, although, as 
remarked previously, a Fregean formula may 
analogical ly  represent a procedure of 
evaluat ion or identif ication. 
Linguists are not usual ly interested in 
the role o f  language in reasoning. Many 
philosophers, logicians, and mathematic ians 
are under the mistaken impression that only 
proofs using a Fregean symbol ism can be 
rigorous, or even valid. The suggest ion is 
that the old proofs used in Eucl idean 
geometry, which relied on diagrams, were not 
proofs at all. Real proofs were found only 
when axioms and inference rules were 
formulated which made the diagrams 
redundant. I believe that this denigrat ion 
of analogical  representat ions is connected 
with some of the worst features of 
mathematics teaching, especial ly at 
Universit ies. Excessive concern with too 
restr icted a range of analogical  
representaions is probably just as bad. 
~n the 1971 paper I tried to show that 
the concept of a r igorous valid inference 
could be appl ied to problem-solv ing using 
analogical  representat ions just as it is 
normal ly appl ied to proofs in a Fregean 
language (e.g. predicate calculus). I 
tr ied to show that in some cases (some 
readers thought I meant a~ casesl) 
analogical  representat ions combined rigour 
and val idity with greater heurist ic power 
than Fregean. I went on to suggest that 
program-wri ters  and theoret ic ians in A.I. 
should pay more attent ion to analogical  
representat ions,  and hinted that this would 
lead to programs which could solve problems 
much more easi ly and intel l igently, since 
the possible manipulat ions of an analogical  
representat ion would be much more t ightly 
restr icted by its structure than the 
possible manipulat ions of Fregean 
representat ions.  E.g. when relat ions are 
expl ic i t ly  named, then any relat ion-name can 
be replaced by any other relat ion-name of 
the same syntactic category, whereas when 
relat ions are represented by relat ions (e.g. 
distance or order in a map) then the 
structure of the represent ing medium may 
constrain possible variations, thus useful ly 
restr ict ing search space. 
The dist inct ion between analogical  and 
Fregean representat ions is real and 
important, though not exhaustive (as I 
pointed out in the paper). However, some of 
166 
the things said or implied in my paper were 
erroneous, and should be withdrawn, which is  
what I am now about to do. 
Valid Crit ic isms of  mv 1971 Raper 
First of all I suggested that people in 
A.I. were not making use of analogical  
representat ions (except for the analogical  
relat ion between programs and processes). 
This was just wrong: any intel l igent 
programmer will use ordering and other 
re lat ionships within data-structures to 
correspond to real re lat ionships when this 
is useful. For example, Raphael 's S.I.R. 
program did this. So did vision programs 
which used graph-l ike data-structures to 
represent the topology of pictures. Even 
PLANNER, with its apparent ly Fregean 
assertions, and procedure- invoking patterns, 
can be interpreted as a mechanism in which 
problems about actions or deductions are 
solved by s imulat ing these actions or 
deductions: the s imulat ion process then 
const itutes an analogical  representat ion.  
However this was one of the major defects of 
PLANNER as a problem solver: often it is 
much more sensible to examine and describe 
possibi l i tes for action than to execute them 
or s imulate them, i f  one wishes to solve 
some problem about them. For a tr ivial 
case, consider the question "If I start in 
room A and then move back and forth between 
room A and room B, which room will I be in 
after exactly 377 moves?" The best way to 
solve this is not to simulate the moves but 
to form a general isat ion about the effects 
of N moves where N is an odd number and 
where N is an even number. What we need are 
not my vague general exhortat ions to make 
moreuse  of analogical  representations,  but 
detai led analysis of the di f ferences between 
problems where it is and where it is not 
helpful  to solve problems with the aid of 
some kind of partial  simulation. The 
chess-board and domino problem is a good 
i l lustrat ion of how an analogical  
representat ion can get in the way. Often 
one does better to manipulate descr ipt ions 
of re lat ionships than the re lat ionships 
themselves. 
Secondly I wrote as though anyone using 
a Fregean language, like predicate calculus, 
would not be interested in ~ the 
sets of assert ions descr ibing some world or 
problem. (Minsky and Papert make the same 
mistake.) However, intel l igent programmers 
do not devise theorem-provers which bl indly 
store all axioms in whatever order they are 
read in, and always have to search the whole 
lot in order to find assert ions relevant to 
any part icular  sub-problem or sub-goal. If 
the set  of stored assert ions is large it 
will obviously pay to have some kind of 
indexing scheme, or to store assert ions in a 
network such that each one is associated 
with pointers to others which might possibly 
be relevant. In fact, Bob Kowalski  has 
shown that one can int imately combine the 
indexing system with a "resolut ion" 
inference system so that making inferences 
by resolut ion becomes a process of modi fy ing 
the index to the data-base of axioms. 
However, no resolut ion theorem-prover,  to my 
knoweldge, gives the user suff ic ient access 
I 
I 
I 
I 
I 
I 
I 
to the data-base handl ing mechanisms so that 
he can use a domain-specif ic  indexing 
scheme. The same complaint can be made 
about PLANNER and CONNIVER. Once a set of 
Fregean formulae is stored in a structured 
network or graph the organisat ion of the 
network may itself have many properties of a 
non-Fregean, analogical  representation. A 
tr ivial  example would be the storage of a 
set of assert ions of the form 
R(a,b) ,R(b,c) ,R(c ,d) ,R(d,e) ,R(a,d)  
where R is a transit ive asymmetric rela.tion 
(e.g. "taller than" or "north of"). If 
each of the above assert ions is stored in 
associat ion with pointers to other 
assert ions mentioning the same individuals, 
then the result ing structure can be used as 
anana log ica l  representat ion of the order of 
the individuals, just as storing the names 
in a list like (A B C D E) can. The full 
equivalence could be obtained only if 
redundant assert ieons were pointed to in a 
different way, or perhaps removed, e.g. 
R(a,d). This might not be useful for all 
problem-domains (e.g. it could be less 
useful where R defines only a partial  
ordering). 
Embedding one's analogical  
representat ions in a Fregean symbol ism llke 
this makes it easier to switch f lexibly 
between different representat ional  systems 
according to the needs of the problem. Of 
course, the mere presence in a computer of a 
data-structure which w__ee can describe as an 
analogical  representat ion is not enough: the 
program must embody procedures which make 
use of the analogical  features of the 
representation. In the case of a predicate 
calculus theorem-prover,  this means that 
there must be ways of control l ing the order 
in which assert ions or inference steps are 
tried, so as to correspond to the structure 
of the problem. E.g. if you wish to know 
whether g comes between ~ and g in the order 
defined by ~, work through the set of 
assert ions from ~ (or from g) in one 
direct ion at a time. A more complex 
i l lustrat ion of all these points can be 
constructed by devising a scheme for storing 
predicate calculus assert ions about family 
relat ionships with links which enable the 
data-base to be used like the usual kind of 
family tree, instead of an arbitrar i ly  
ordered list of facts. So questions like 
"Who were all X's cousins?" or "Was X the 
grandfather of Y?" can be answered with 
little or no searching, using the analogical  
propert ies of the data-base (i.e. relat ions 
represent relations). 
More generally, it is possible (and 
maybe even fruitful) to think of all 
computat ion as being concerned with updating 
and accessing information expl ic i t ly or 
impl ic i t ly  stored in a data base. The code 
for ar i thmetical  functions impl ic i t ly  
represents, in a l imited space, answers to a 
potent ia l ly  inf inite set of problems, for 
example. An important aspect of the 
intel l igence of programmers, and programs, 
is the construction, manipulat ion, and use 
of indexes, so as to find relevant answers 
to quest ions quickly. However, an index is 
just as much a store of information as 
anything else, and problems of arbitrary 
complexity may be involved in f inding a 
relevant index entry. (e.g. months of 
archeological  research may be needed in 
order to decide which entry in a l ibrary or 
museum catalogue to fol low up.) So the 
dist inct ion between index and data-base 
disappears: any item or procedure may play a 
role in tracking down some other 
information. The data-base is its own 
index. 
From this viewpoint one can assess the 
role of analogical  representat ions as 
indexes, and note that relat ions of ordering 
and nearness, and dist inct ive substructures 
within analogical  representat ions may define 
important access routes by which mutual ly 
relevant items of information may be linked. 
But, as Pat Hayes has pointed out, it 
doesn't matter how this is implemented so 
long as it works. Thus, storing visual 
input in a 2-d array enables the 
neighbourhood relat ionships between pairs of 
numbers (array subscripts) to be used as an 
ana log ica l  representat ion of neighbourhood 
relat ionships within the original  input and 
to some extent within the scene represented. 
And one can make good use of this analogical  
representat ion even if the array is stored 
as a set of Fregean assert ions about what 
value is located at co-ordinates n and m for 
all relevant integers n and m, prvided there 
is a good index to these assertions. 
So I should have acknowledged that a l l  
the benefits of analogical  representat ions 
can be gotten from Fregean representations,  
suitably organised and interpreted. 
~owever, this does not imply ~hat analogical  
representat ions ar___ge not needed, only that 
they ~an s__ometimes be implemented ~sing 
Fregean ones, Similarly, it could be 
argued, at a sti l l  lower level, all Fregean 
formal isms used in a computer are ult imately 
represented analogical ly,  even in a digital  
computer. But the matter is of l ittle 
importance. 
F inal ly I wrote as if it was going to 
be fair ly stra ightforward to get programs to 
do things in the ways which people find 
easy. E.g. people often find it much 
easier to solve problems when they can see a 
picture of the ppoblem-s i tuat ion than when 
they are presented only with a set of 
assert ions about it. However, doing this 
requires very complex visual abil it ies, 
which, although they feel easy to use, are 
probably the result of a very long and hard 
learning process extending back over 
mil l ions of years of evolut ion 
(species- learning) and several years of 
individual  learning. I do not bel iever 
anyone has very good ideas yet on how to 
give a computer the same kind of 
sophist icated grasp of two-dimensional  
structure as we use when we look at 
pictures, maps, mazes, diagrams, etc. It 
seems to be a mixture of a large store of 
general pr inciples about topology and 
geometry, intr icately combined with a large 
store of specif ic knowledge about part icular  
shapes, shape-classes, and possible patterns 
of change (translation, rotation, 
stretching, f itt ing together,  going-through 
! 167 
apertures, etc.). 
And somehow all this knowledge is 
indexed for rapid access when relevant, 
though by no means infallibly indexed. I am 
sure that many of the problems in explaining 
how this is possible are common to both 
vision and natural language processing. 
(The links are especially clear in the case 
of reading poor handwriting.) 
Thus my suggestion that A.I. workers 
interested in problem solving should design 
machines to solve problems by looking at 
diagrams, maps or other spatial structures 
may be many years premature. Even the best 
vision programs presently recognise and use 
only very few aspects of the 2-dimensional 
structure of the pictures (or TV-inputs) 
wh ichthey  attempt to interpret. 
The upshot of all this is that I now 
realise that although it may be interesting 
and important from a philosophical or 
psychological standpoint to analyse the 
analogical/Fregean distinction, and to 
explore the relative merits of the two sorts 
of representations, such theoretical 
discussions don't necessarily help anyone 
engaged in the task of designing intelligent 
programs. The really hard work is finding 
out what factual and procedural knowledge is 
required for intelligent performance in each 
domain. The most one can achieve by the 
philosophical analysis is the removal of 
prejudices. But was anyone in A.I. ever  
really prejudiced against analogical 
representations, properly defined? 
Bibliography 
Clowes, M.B. (1971) "On seeing things", in 
Artificial Iqtelligenog, Vol. 2, 1971. 
Frege, G. (1952) Philosophical Writings 
(translated by P. Geach M.  Black), 
Blackwell, Oxford. 
Hayes, P.J. (1974) "Some Problems and 
non-problems in representation theory", 
Proceedings A~SB Summer Conference, 
Sussex University. 
Kowalski, R. (1974) "A proof procedure 
using connections graphs". Memo No.74, 
Department of Computational Logic, 
Edinburgh University. 
Minsky, M. _ Papert, S. (1972) Progress 
Report o_3 Artificial Intelligence, A.I. 
Memo 252, MIT Artificial Intelligence 
Laboratory. 
Minsky, M. (1974) i F r~ewor~ for 
Reor~sentiqg Knowledge, A.I. Memo 306, 
MIT Artifical Intell igence Laboratory. 
Sloman, A. (1971) "Interactions between 
philosophy and A.I. - the role of 
intuition and non-logical reasoning in 
intelligence". Proceedings 2qd IJCAI, 
London, reprinted in Artificial 
Intelligeqce, vol. 2, 1971. 
168 
I 
I 
I 
I 
I 
I 
I 
I 
I 
I 
I 
I 
I 
I 
I 
I 
I 
I 
i 
