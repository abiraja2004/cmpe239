/ 
II 
I 
/ 
/ 
/ 
/ 
I 
I 
I 
I 
Generation of Simple Turkish Sentences with 
Systemic-Functional Grammar* 
I l yas  C icek l i  
Dept .  of Comp.  Eng. and Info. Sc. 
Bi lkent University, 
06533 Bi lkent,  Ankara,  Turkey  
ilyas@cs, bilkent, edu. tr 
Turgay  Korkmaz  
Dept .  of Comp.  and Info. Sc. 
Syracuse University, 
Syracuse, NY 13244, USA 
tkorkmaz@mailbox, syr. edu 
Abst rac t  
This paper mainly presents aTurkish sentence 
generator for producing the actual text from 
its semantic description. To concentrate on 
the text generation rather than text planning, 
we assume that the lexicalized semantic de- 
scription of the text is produced in some way, 
currently given by hand. In the generation, 
we need a linguistic theory to describe the 
linguistic resources, and also a software tool 
to perform them in a computational environ- 
ment. We use a functional linguistic theory 
called Systemic-Functional Grammar (SFG) 
to represent the linguistic resources, and FUF 
text generation system as a software tool to 
perform them. In this paper, we present he 
systemic-functional representation and real- 
ization of simple Turkish sentences. 
1 In t roduct ion  
Natural anguage generation isa kind of process that 
encodes the mental picture of reality into a sequence 
of words called grammatical units such as clause, 
verbal group, noun group etc. The units of a gram- 
mar can be ordered in terms of a rank scale, from 
the largest o the smallest unit (structural classifi- 
cation) (Halliday, 1985): a sentence consists of one 
or more clauses; a clause consists of one or more 
phrases (groups); a phrase consists of one or more 
words; a word consists of a root word, and zero or 
more morphemes; a morpheme is the smallest unit. 
A simple sentence consists of only one main pro- 
tess and several components that complement or 
modify the main process. Each component may be 
realized by complex syntactic structures but it does 
not change the simple structure of the sentence. In 
other words, the number of words in a sentence does 
not determine whether the sentence is simple or not. 
The main property of the simple sentence is that 
each component in the sentence has a function that 
is determined by the main process such as actor, 
*This work was supported by NATO Science for sta- 
bility Project Grant TU-LANGUAGE. 
goal, time, manner, etc. A complex sentence con- 
sists of more than one simple sentence that may be 
structurally or semantically connected to each other. 
Because the generation of simple sentences must be 
achieved before the generation of complex sentences, 
we concentrate on the generation of simple sentences 
in this paper. 
We analyze simple Turkish sentences from the 
systemic-functional perspective to determine their 
structural and functional descriptions (Patten, 
1988). By using these descriptions, we have con- 
structed the system network of simple sentences and 
we have implemented a sentence generator in Func- 
tional Unification Formalism (FUF) (Elhadad, 1990- 
2) to perform the linguistic resources. In our analy- 
sis, we determine the main process, participants and 
circumstantials of a simple sentence, and how they 
are realized in Turkish. 
The remainder of this paper is organized as fol- 
lows. In Section 2, we consider the grammatical 
analysis of the simple sentence. We present the 
functional analysis of simple sentences, which de- 
termines participants and their realizations in Turk- 
ish. We paid a special attention to the verbal group 
part of sentences which is used in the realization of 
the process. Section 3 gives a brief overview of the 
systemic-functional grammar approach to text gen- 
eration, and particularly presents the system net- 
work of the simple sentence. Next, in Section 4, the 
implementation f a Turkish sentence generator is 
introduced, and then the generation of simple sen- 
tences is demonstrated. Finally, Section 5 presents 
conclusion and future work. 
2 Grammat ica l  Ana lys i s  o f  S imple  
Sentences  
2.1 Pred icate  Types of Sentences 
Turkish sentences can be divided into two groups 
depending on the type of their predicates: verbal and 
nominal sentences. If the predicate of the sentence 
is derived from a verb, it is called a verbal sentence. 
Cicekli and Korkmaz 165 Generation of Simple Turkish Sentences 
Ilyas Cicekli and Turgay Korkmaz (1998) Generation of Simple Turkish Sentences with Systemic-Functional Grammar. In 
D.M.W. Powers (ed.) NeMLaPS/CoNLL98: New Methods in Language Processing and Computational Natural Language 
Learning, ACL, pp 165-173. 
If the predicate is derived from a nominal I group, it 
is called a nominal sentence. 
In verbal sentences, a verb is used as a base of a 
verbal group, other information such as time, mode, 
person is realized as suffixes to this base. The fol- 
lowing is an example for a Turkish verbal sentence. 
(1) Yarm okul-a gid-ece~-iz. 
Tomorrow schooI+DAT gO+FUT+IPL 
'We will go to school tomorrow.' 
In positive nominal sentences, a nominal group 
becomes a finite verb with a substantive verb which 
is used as an auxiliary verb to demonstrate "to be" 
meaning of the predicate in four grammatical tenses: 
present, past, narrative and conditional. 
(2) a. Ahmet balkan-din 
Ahmet chairman+coP. 
'Ahmet is the chairman.' 
b. Klz ~ok giizel-di. 
Girl very beautiful+PAST 
'The girl was very beautiful.' 
The negative sense of the nominal sentence is rep- 
resented by a separate negative word de~?1 (not to 
be) for the tenses mentioned above. 
(3) Ahmet balkan de~il-dir. 
Ahmet chairman NegNoun+coP. 
'Ahmet is not the chairman.' 
The other tenses in the nominal sentences are ex- 
pressed by the auxiliary verb ol  (be). In this case, 
the auxiliary verb is realized the same way as the 
predicate of a verbal sentence. 
(4) Yarm okul-da ol-ma-yaca~-lm. 
Tomorrow school+DAT be+NEG+FUT+lSG 
' I  will not be at school tomorrow.' 
2.2 Functional Analysis 
From the functional perspective, all languages try 
to realize the common semantic functions with their 
own grammatical structures and lexical items. In 
this section, we consider the realization of each se- 
mantic function in Turkish. 
A clause 2 (simple sentence) consists of three func- 
tional components: process, participants, and cir- 
cumstantials. Process is the main constituent that 
represents an event or a state. Participants are per- 
sons or things involved in a process. Circums~antials 
are the optional constituents o describe the process 
from different perspective such as time, place, man- 
ner etc. 
Participants and circumstantials are specified 
with new semantic functions to represent the special 
a Nominal is' a common ame for nouns and adjectives 
2Clause is used as a common ame for sentences or 
sentence-like structures. 
meanings, roles or relations in the clause. The spe- 
cific participant functions depend on the type of pro- 
cess. The transitivity and ergativity analysises (Hal- 
liday, 1985) allow us to classify the processes in the 
language, and to describe the configuration of par- 
ticipants. The specific circumstantial functions do 
not strictly depend on the type of the process, and 
they are optionally used to give more information 
about the process. 
2.2.1 Transiv i ty Analysis 
Transitivity analysis pecifies the different ypes 
of processes recognized in the language, and deter- 
mines the participants depending on these types. In 
this way, the logical relationships between the pro- 
cess and participants are provided. The types of 
processes and their special participants may be clas- 
sifted as follows. 
1.Material processes express the notion that some 
entity "does" something which may be done "to" 
some other entity. Material processes contain actor 
as an obligatory participant that represents he one 
that does the deed, and goal as an optional partici- 
pant that represents the one that the process is ex- 
tended to. Material processes are realized by verbal 
sentences in Turkish. 
2.Mental processes express feeling, thinking, and 
perceiving activities of humans. There are two par- 
ticipants in a mental process: senser who is the con- 
scious being that senses, and phenomenon that is a 
thing or a fact which is sensed. Mental processes are 
also realized by verbal sentences in Turkish. 
3.Relational processes express the way of "being". 
Relational processes can be classified according to 
the type of "being", and the explanation mode of 
"being". The type of "being" can be intensive, cir- 
cumstantial and possessive. Each type can be ex- 
plained in two modes: attributive and identifying. 
As a result, the six types of relational processes can 
OCCUr. 
The special participants for relational processes are 
determined epending on the mode of "being". In 
the attributive mode, there are two participants: 
carrier that is an entity to that an attribute is as- 
c.ribed, and attribute is a determiner that is ascribed 
to carrier. The participant identifier is used to 
identify the participant identified in the identifying 
mode. 
In Turkish, relational processes are realized by nom- 
inal sentences. In other words, the process of be- 
ing is expressed by a substantive verb or a distinct 
auxiliary verb ol (be) depending on the time of the 
sentence. The attribute is conflated with the pro- 
cess of the sentence in the attributive mode, and 
the identifier is conflated with the process in the 
identifying mode. Thus, these two participants are 
used as nominal bases of verbal groups in the re- 
Cicekli and Korlanaz 166 Generation of Simple Turkish Sentences 
II 
II 
II 
II 
II 
II 
II 
II 
II 
II 
II 
II 
II 
II 
II 
II 
II 
i l 
II 
II 
II 
alization of the process. However, in the attribu- 
tive mode of the possessive relation, a distinct word 
sahip (have) is used as the nominal base in the re- 
aiization of the process, and the attribute is realized 
as a noun phrase in the dative case. 
4.Existential processes express that something ex- 
ists or happens. There is only one participant: en- 
tity. To express that entity exists or not, two dis- 
tinct nouns vax (exist) and yok (absent) are respec- 
tively used in Turkish. Thus, existential processes 
are also realized as nominal sentences, and these dis- 
tinct nouns are used as nominal bases in the realiza- 
tion of the process. 
2.2.2 Ergat iv i ty  Analysis 
If the process is "caused"-ergative, the analysis of 
the ergativity is required to find the functions agent 
(causer) and medium (affected) as participants of 
the process. Sometimes medium is conflated with 
actor, and sometimes with goal. In addition, the 
agent and the actor may be different participants 
to explain the fact that someone (agent) is causing 
someone lse (actor) to perform the process. For 
instance, in (5), Al l  (the agent) caused Veli (the 
actor) to paint the table. 
(5) Ali masa-yl Veli-'ye boya-t-tl. 
All table+AcC Veli+DAw paint+caus+PASW 
'Ali had Veli paint the table.' 
In Turkish, the causation hierarchy may be more 
complex. More than one agent-like participants may 
appear between the agent and the actor to explain 
that someone is causing another causing another and 
so on to perform the process. For example, an addi- 
tional participant agent-2 is illustrated in (6). 
(6) Masa-yl Ali aracfligl ile Veli'ye 
boya-t-tlr-dl-m. 
Table+Ace Ali's help with Veli+DAT 
paint+CAUS+CAUS+PAST+ISG 
'I told Ali to have Veli paint the table.' 
We do not consider more complex causations, be- 
cause they are not frequently used in practice. 
2.2.3 Rea l izat ion  of  Part ic ipants  and 
C i reumstant ia ls  
Participants are mapped onto syntactic functions 
such as subjed, direct-object, indirect-object, etc. 
Participants are realized by noun groups and infini- 
tive clauses in Turkish and their case markings de- 
pend on their syntactic roles in the sentence. 
In contrast to participants, circumstantials are 
not mapped onto any syntactic functions, and they 
are directly realized by noun groups, post-positional 
groups or adverbs in the sentence structure. Cir- 
cumstantial functions can be decomposed into seven 
classes and their possible realizations in Turkish are 
summarized in Table 1. 3 
3Following notations are used: NP for noun phrase; 
Class 
Spatial 
Temporal 
Manner 
~ause  
Accom- 
-paaiment 
I Sem. Func.- 
direction 
distaaace 
origin 
location 
destination '"
path 
duration 
kequency 
time 
instrument 
quality 
comparison 
reason 
purpose 
behalf 
comitative Jr' 
comitative - 
additive Jr 
additive -
Realizations I 
AdvG, PP,' 
NP+DAT/+LOC 
NP+NOM 
NP+ABL 
NP+LOC'" 
NP+DAT 
PP, NP+DAT 
PP, AdvG, NP+NOM 
AdvG, PP"' 
PP, AdvG, NP+LOC 
PP, NP+INS 
AdvG 
PP pp" 
PP 
PP 
PP 
NP+PRf 
PP 
PP 
Matter pp 
Role Pp 
Table 1: Realization of circumstantials 
2.2.4 Word-Order  in the Sentence 
The default word order of a Turkish sentence is 
'Subject-Object-Verb'. Since Turkish is a free word 
order language, the syntactic functions in the sen- 
tence can be freely ordered to construct he sen- 
tence. Although the constituents can be freely or- 
dered, each order provides the additional informa- 
tion to explain the different extual functions of each 
constituent. The textual functions can be identified 
as follows (Erguvanh, 1979; Hoffman, 1995): 
? the sentence-initial position as topic .. 
? the immediately preverbal position as focus 
? the postverbal position as background informa- 
tion 
In the realization, each constituent may be conflated 
with one of these functions, and these functions are 
strictly ordered as shown in the following template4: 
Topic ... Focus Process Background 
Naturally, the number of constituents in the sen- 
tence may be increased, and they can not be con- 
rated with any textual function. For those kinds 
of constituents, we use a default word order in the 
implementation. 
PP for post-positional phrase; AdvG for adverb group; 
NOM for nominative; DAT for dative; ABL for abla- 
tive; LOC for locative; INS for instrumental; PRI for 
privative. 
4The dements are represented in partial order. Three 
dots represent that different functions may be located. 
Cicekli and Korkmaz 167 Generation of Simple Turkish Sentences 
In spite of the free word order characteristic of 
Turkish, there are:some grammatical constraints on 
the word order. If direct-object is not focused in the 
sentence (7.a), it must be realized as a definite ele- 
ment. If direct-object is an indefinite lement (7.b), 
it must be adjacent with the process. Otherwise, it 
will be ungrammatical (7.c). 
(7) a. Cam-~ Ali hr-dL 
window+Acc Ali break+PAST 
'Ali broke the window.' 
b. Ali cam klr-dl 
Ali window+NOM break+PAST 
'Ali broke (a) window.' 
c. ~" Cam Ali kit-d1. 
window+NOM Ali break+PAST 
2.3 Verba l  Groups 
Verbal groups are used to realize processes of nom- 
inal and verbal sentences. A verbal group is con- 
structed on a lexical element called base that can 
be a verb or a nominal group. The base is the sin- 
gle lexical element hat is given for the formation 
of a verbal group. The other lexical elements (such 
as de~?1 (neg. noun), m:i. (question), ol  (be)), the 
relevant suffixes and the components of the verbal 
group are determined and organized by the systemic- 
functional grammar designed for Turkish to express 
appropriate meanings. This section presents the 
possible structures of verbal groups and their inter- 
nal organization i  Turkish (Banguo~lu, 1986; Ko~, 
1990). 
There are more than one grammatical structure 
of verbal groups to express many distinct mean- 
ings. Fortunately, they may be generalized accord- 
ing to the type of base (nominal group, verb) and 
the mood (finite, non-finite). The selected features 
from these two systems (type-of-base and mood) de- 
termine the appropriate structure for the verbal 
group. The selected features from other systems in 
Figure 1.b (given in Section 3) organize the inter- 
nal structure of the verbal group. As a result, the 
following four general structures can occur: 
1. base is a verb and mood is finite: 
This case is selected to realize the pro. cess of a verbal 
sentence, or question. The.type of the process can be 
material or mental. The structure of verbal groups 
in this case is shown in Table 2 for the following ex- 
amples in (8). 5 There exist two distinct components 
SThe structures are considered in the tabular forms. 
The center ow of the table describes the required func- 
tional elements of the verbal group in a grammatical or- 
der. The top rows of the table give examples, and bottom 
rows present heir grammatical values, respectively. M- 
P-N stands for Mode, Person, and Number; VF stands 
for Voice Frame; POL stands for Polarity; DV stands for 
Descriptive Verb; DP stands for Descriptive Polarity. 
of the verbal group for interrogative s ntences (ques- 
tions): base and interrogative tag. The mode, 
person, and number are added to base or interrog-  
at ive tag depending on the selected values of these 
functions. 
(8) a. Arkad~-lar-m-1 sev-ebil-meli-sin. 
friend+3PL+2PP+ACC Iove+POT+NEC+2SG 
' You ought to be able to love your friends.' 
b. 
Mektub-u yaz-dzr-acak mz-y&-n? 
letter+Ace write+cAUS+FUT Ques+PAST+2SG 
' Were you going to have the letter written?' 
2. base is a verb and mood is non-finite: 
The structure of finite verbal group of a verbal sen- 
tence can be used in this case by replacing the finite 
with a non.finite lement. A non-finite verbal group 
realizes the process of a clause that may be used as 
a noun (infinitive), adjective (participle) or adverb 
(adverbial). As a result, the structure of this case 
for the following examples i given in Table 3. 
(9) a. Birisi tarafmdan sev.il-mek giizel-dir. 
someone by IOVe+PASS+INF" nice+coP 
'It is nice to be loved by someone.' 
b. Mektub-u oku-yacak adam 
gel-me-di. 
htter+Acc read+PART" man 
come+NEG+PAST 
'The man who would read the letter did 
not come.' 
c. Ali okul-a ko~-arak git-ti. 
All school,I-DAT run+ADV ? gO+PAST 
'Ali went to school by running.' 
sev -il -reek 
oku -yacak 
ko,~ -arak 
Base VF POL DV DP Non-Finite 
verb ... pos none infinitive 
verb ... pos none participle 
verb ... pos none adverbial 
Table 3: Non-Finite Verbal Group from Verb 
3. base is a nominal group and mood is finite: 
This case is selected to realize the relational pro- 
cesses that express the way of "being" and the exis- 
tential processes. Here, the base is a nominal group 
that may be an attribute or an identifier in a nominal 
sentence or question. The type of "being" may be 
intensive, circumstantial, or possessive. According 
to its type, the base may take some suffixes uch as 
locative and possessive before the formation of the 
verbal group. In the generation of a verbal group, 
we assume that the base is a lexical element, and 
the required suffixes or the distinct elements are de- 
termined by the systemic grammar to express the 
Ciceldi and Korbnaz 168 Generation of Simple Turkish Sentences 
I 
I 
I 
I 
I 
I 
m 

The head noun can be a common oun, a proper 
noun, or a pronpun. According to this choice, the 
head noun is modified by different grammatical func- 
tions that may be interpreted as the constituents of
the NP. The general grammatical functions that ex- 
pand the head noun can be: determiner which indi- 
cates whether a subset of the head noun is specific 
or not, and expresses the numerical features of the 
head noun; describer which indicates the subjective 
and objective properties of the head noun; classi- 
fier which indicates aparticular subclass of the head 
noun; qualifiers which indicate the characteristics of 
the head noun in terms of some process in which the 
head noun is directly or indirectly involved as a par- 
ticipant. Qualifiers may be realized by a participle 
clause. These grammatical functions can be divided 
into more specific sub-functions. The order of these 
functions in a Turkish noun group is determined by 
partial orders among them in the implementation. 
Although the details of the noun groups in Turkish 
are not given here, the noun groups are fully imple- 
mented in our system. 
2.5 Post-Posi t ional  Group (PP)  
Post-positional group (PP) has a simple structure 
that consists of an NP or infinitive, and a postposi- 
tion particle in Turkish. Participles are closed class 
of words such as gSre (according to), do~-u (to- 
wards), sonra (after) etc. A particle cannot refer to 
any concept but it constructs a relationship between 
the NP and the other constituents. Each particle 
may enforce the NP in a particular case. 
2.6 Adverb  Group (AdvG)  
Adverb group (AdvG) is used in the realization 
of several circumstantial functions given in Sec- 
tion 2.2.3. The main constituent of an adverb group 
is head which is an adverb that gives information 
about when, how, where, or in which circumstances 
something happens. In an adverb group, there may 
be additional modifiers to modify the head adverb. 
3 System Network  o f  S imple  
Sentence  
A system network is a set of systems uch that each 
system is described as "a set of linguistic hoices in a 
specific linguistic context" by Firth (Patten, 1988). 
In addition, the system network displays the graph- 
ical organization of the grammar. In the generation 
with SFG, the system network (shown in Figure 1) 
is traversed from left to right by selecting a feature 
from each system, and executing the realization rules 
attached to this feature (Matthiessen and Bateman, 
1991; Patten, 1988). If the selected feature has a 
function that is realized by one of the grammati- 
cal units in the rank scale, the systemic network is 
re-entered, and recursively traversed for the gener- 
ation of that unit. After traversing the entire sys- 
tern network, generations of the grammatical units 
are completed. In this way, the whole sentence that 
consists of these grammatical units is generated. In 
Figure 1.a, if we select he simple clause feature from 
the rank system, we enter five more systems: process, 
transivity, mood, voice and circums~antials. After 
selecting proper features from these systems, SFG 
introduces the process as a function of the clause, 
and then realizes it as a verbal group by re-entering 
the network. The selection of a feature from each 
system, and the representation f realization rules 
depend on the implementation formalism. These is- 
sues are considered in Section 4. 
The required systems, the realization rules, and 
the appropriate context of each system in the linguis- 
tic description of the simple sentence are determined 
and organized by using the analysis described in the 
previous ection. As a result, the system network 
given in Figure 1 is constructed. In the network, only 
systems and their appropriate contexts are displayed 
to express the basic linguistic description of simple 
sentences. Because of this simplification, more spe- 
cific rules and relations are not displayed in the net- 
work. However, they are considered and handled in 
the implementation. 
To generate a simple sentence, the system net- 
work is traversed by using the algorithm given 
above. For example, to produce the simple sentence 
axkada?laz':lax:t sevebilmelisin given in (8.a), af- 
ter the appropriate f atures are selected, we re-enter 
the system network to realize the process by a ver- 
bal group and to realize the phenomenon by a noun 
group. When the system network is re-entered to 
realize the process the following systems are en- 
tered and the appropriate features are selected in 
Figure 1.b: Enter type-of-base, select verb; enter 
mood, select finite; enter polarity, select positive; 
enter desc-verb, select potential; enter interrogative, 
select none. According to these selected features, 
the other systems are entered and so on. At the end, 
the system FINIT~-VG-I~0H-VF2~ is entered to re- 
alize the verbal group by using the given structure 
in Table 2. 
4 Imp lementat ion  
In order to develop a text generator with the 
systemic-functional grammar, we need to implement 
the linguistic descriptions (system networks and re- 
alization rules) in a computational environment. For 
this purpose, we use the FUF text generation sys- 
tem(Elhadad, 1993) including its functional unifica- 
tion grammar (FUG) and typed feature formalisms. 
In this section, we present a brief overview of the 
generation i  FUF, and then, we particularly con- 
sider t-he generation of simple sentences. 
The FUF text generation system consists of two 
main modules: a unifier and a linearizer (Elhadad, 
1990-2). The unifier takes, as input, a lexicalized 
Cicekli and Korkmaz 170 Generation of Simple Turkish Sentences 
II 
Ii 
II 
II 
II 
II 
II 
II 
II 
il 
II 
il 
II 
II 
I! 
II 
II 
II 
II 
II 
II 
Ii 
II 
!1 
/ 
II 
m 
I 
Rank 
~pe~f.ba~ 
s imple - -  Y 
- clause - - - -1  
complex 
Proce~::verbal-group ~ material 
Transitivity f Proc-T~pe mental relational 
"~ existential E d~larativc 
Mood E finite _~wh interrogative 
non-finite -~  yes-no 
Voice if---- active infinitive participle 
L_. passive adverbial 
Circumsmntials 
noun-group 
verbal-group 
group 
postposition-group 
adverb-group 
word 
noun 
adj 
F -- nominal adv particle verb eonj 
a. For Rank System 
-ve~ 
mood I finite 
non-finite 
I Ilolte 
lex-transition ; transitive 
? .. li'~tion \[--- nolle 
In~l-dllSjl\]vl~ L i~rans-n-~ns active 
perso~ 
desc-verb 
inmogative 
t __  
type-of-necal 
? ,e?o-o f.bme 
E 
nonc 
)'~-no b. For Verbal Groups 
Figure 1: A System Network for the Sentence Generation in Turkish 
__  ~.~.v~.~oM.v________~. 
) ~ g \ ]  
"~ H~-VG-FROM-NOMINAL 
I~ffxes ^  Neg;Notm ^ Intar-Ttg 
~ ~o~.~.~.~o~.~o~ 
semantic description of the text to be generated, and an extended form of FUG, and then produces 
Ocekli and Korkmaz 171 Generation of Simple Turkish Sentences 
??'"= t 
A. A~,~, ,o .~ J ~ : .n .~  ',o ' f - - -~. . . ? - ' -G  
i : . . . . . . . . .  -: v 
i r~ursive generation Lincarizer~ 
~ -  '~;;;~;iDA75 J ;  ~LA;~J;; .................................................. l 
/ 
t. ~o ,~*,*~q 
text 
Figure 2: The Architecture of the Text Generator 
as output a rich syntactic description of the text or 
some new inputs 7 (the semantic and syntactic de- 
scriptions) for the grammatical units that realize the 
specific omponents ofthe text (Elhadad, 1993). Af- 
ter the unification process, the lineariser takes the 
generated syntactic description as input, and then 
produces the morphological description of the text. 
The morphology unit produces the worded text by 
using this morphological description (Oflazer, 1993). 
We assume that an application program that is not 
included in our implementation produces the lezical- 
ized semantic description of the text. Consequently, 
the final text generation system can be organized as 
shown in Figure 2. 
In FUG framework, a data structure called func- 
tional description (FD) is handled. A FD is a list of 
pairs. Each pair has an attribute name and value. 
Since we use the FUG formalism in our implemen- 
tation, we need to translate the system network into 
this formalism. A system in the system network can 
be translated into disjunction of FDs, where each FD 
corresponds to an alternative in that system (Ko- 
rkmaz, 1996; Kasper, 1988; Kumano et al, 1994). 
Realization rules and relations between systems are 
also translated into attribute-value pairs. This pro- 
cess is described by Kasper as an algorithm that 
translates SFG into FUG (Kasper, 1988). In ad- 
dition, FUF provides a typed feature formalism to 
implement the mutual exclusion, and hierarchical re- 
lations in SFG (Elhadad, 1990-1). 
By using these formalisms, we have designed and 
implemented a single sentence generator with SFG. 
For this purpose, we have designed a Turkish gram- 
mar for simple sentences in the FUG formalism, and 
we have made the required changes in the linearizer 
of the FUF text generation system in order to handle 
Turkish morphology. 
The lexicalized semantic representation f a sen- 
tence must contain the required functions for that 
rThese new inputs axe produced and recursively per- 
formed by the unifier. 
sentence. If a function does not appear in the input 
set but it is required, the first alternative is selected 
as a default value for that function. The following 
simple sentence is generated by the system imple- 
mented in FUF: s 
Example: 
(13) dun Ali Veli-'ye okul-da mektub-u 
dikkatlice yas-dlra-ma-yabil-ir-di. 
yesterday Ali Veli+DAT school+Lo? letter+Ace 
carefully write+cAUS+NEGC+POT+AOR+PAST 
'Ali might not have had Veli write the letter 
carefully at the school yesterday.' 
In this example, the time function is the topic, and 
the quality function is the focus of the sentence. If 
the textual functions (topic, focus, background) 
were not given in this lexicalized semantic input, the 
default word order for participants and circumtan- 
tials would have been used, and the following sen- 
tence could have been generated. 
Ali Veli-'ye okul-da dUn dikkatlice mektub-u 
yaz-dlra-ma-yabil-ir-di. 
Lexicalized Semantic Input: 
((cat simple-clause) 
(time aorist) 
(mode past) 
(mood declarative) 
(desc-verb potential) 
(desc-polarity negative) 
(voice active) 
(process ((type material) 
(type-of-base verb) 
(agentive yes) 
(effective yes) 
(lex "yaz") ) ) 
(participants ( 
(actor ((cat proper) (lex "Veli") ) ) 
(agent ((cat proper) (lex "All"))) 
(medium ((cat common) (definite yes) 
SExtra Turkish letters are represented as follows: C 
is~, Iisl, G is t ,  O is 5, S is ~, Uis~. 
Cicekli and Korkmaz 172 Generation of Simple Turkish Sentences 
II 
!1 
!i 
II 
II 
II 
il 
II 
II 
II 
II 
II 
| 
| 
l 
B 
I 
m 
m 
m 
m 
| 
m 
m 
I 
m 
(lex "mektup" ) ) ) ) ) 
(circu~ ( 
(location ((cat common) (lex "okul"))) 
(time ((cat adv) (lex "dUn"))) 
(quality ((cat adv) (lex "dikkatlice"))))) 
(topic ~" circum time}) 
(focus {" circum quality}) 
(background none) ) ) 
Output: 
\[ \[CAT=ADVERB\] [R00T=dUn\] 
\[ \[CAT=NOUN\] \[R00T=AIi\] \[AGR--3SO\] 
\[POSS=NO~\] \[CASE=NOn\] \] 
\[ \[CAT=NOUN\] \[ROOT=Yell\] \[AGR=3SG\] 
\[POSS=NONE\] [CASE=DAT\] 
\[ \[CAT=NOUN\] [ROOT=okul\] \[AGR=3SG\] 
\[POSS=NONE\] [CASE--LOC\] \] 
\[ \[CAT=NOUN\] [ROOT--~ektup\] \[AGR=3SG\] 
\[POSS=NONE\] \[CASE=ACe\] \] 
\[ \[CAT=ADVERB\] \[ROOT=dikkatlice\]\] 
\[ \[CAT=VERB\] \[ROOT--yaz\] \[V0ICE=CAUS\] \[SENSE=POS\] 
\[SENSE=NEGC\] [TAMI=AORIST\] \[TAM2=PAST\] \[AGR=3SG\]\] ? 
5 Conclusion and Future Work 
Our main purpose is to design and implement a
25arkish sentence generation system by using the 
systemic-functional approach. To realize this sys- 
tem, we need to develop a large Turkish grammar 
based on systemic-functional theory, and to imple- 
ment it in the computational environment. The 
grammar can be divided into small parts as shown 
in the rank scale. Then, each part may be devel- 
oped independently. The most important part of 
the grammar is the simple sentence that realizes the 
several semantic functions. So, at the beginning, 
we have considered the most common grammatical 
structures of Turkish and their implementation in 
FUF. The other parts of the grammar such as com- 
plex sentences, and the overall generation system 
including an application program that maps inter- 
lingua representations of sentences onto their lexi- 
calized semantic representations are currently under 
development. 
The ultimate generation system will take as input 
the semantic description of a sentence from an appli- 
cation program, and produce the worded text. The 
semantic description consists of three metafunctions: 
ideational such as agent, actor, goal, process, loca- 
tion for representing the constituents ofthe sentence 
and their roles; interpersonal such as mood, modality 
for establishing the relationship between the speaker 
and the listener; and teztual such as topic, focus, 
background for presenting information as text in con- 
text. The systemic-functional grammar will provide 
us with useful mechanisms to organize and realize 
the linguistic resources. 
Re ferences  
T. Banguo~lu. T~irk~enin Gramevi. Number 528 in 
T/irk Dil Kurumu Yaymlan. Tfirk Tarih Kurumu 
Baslm Evi, Ankara, 1986. 
M. Elhadad. Types in functional unification gram- 
mars. In Proceedings of ACL '90, pages 642-655, 
1990. 
M. Elhadad. Using Argumentation to Control Lez- 
ical Choice: A Functional Unification Based Ap- 
proach. PhD thesis, Department ofComputer Sci- 
ence, Columbia University, 1990. 
M. Elhadad. FUF: the Universal Unifier User man- 
ual 5.2. Department of Computer Science, Ben 
Gurion University of the Negev, June 1993. 
E.E. Erguvanh. The Function of Word Order in 
Turkish Grammar. PhD thesis, University of Cal- 
ifornia, Los Angeles, 1979. 
M. A. K. Halliday. An Introduction to Functional 
Grammar. Edward Arnold, London, 1985. 
B. Hoffman. The Computational Analysis of the 
Syntax and Interpretation of "Free" Word Order 
in Turkish. PhD thesis, University of Pennsylva- 
nia, June 1995. 
R.T. Kasper. Systemic Grammar and Functional 
Unification Grammar, chapter 9, pages 176-199. 
In Systemic Functional Approaches to Discourse. 
Ablex, 1988. 
N. Ko~. Yeni Dilbilgisi. Inkilap Kitapevi, Istanbul, 
1990. 
T. Korkmaz. Turkish Text Generation with 
Systemic.Functional Grammar. M.S. thesis, 
Bilkent University, June 1996. 
T. Kumano, T. Tokunga, K. Inui, and It. Tanaka. 
GENESYS: An integrated environment for devel- 
oping systemic functional grammars. In Proceed- 
ings of the International Workshop on Sharable 
Natural Language Resources, pages 78-85, Nora 
Institute of Science and Technology, Nora, Japan, 
10 - 11 August 1994. 
C. M. Matthiessen and J. A. Bateman. Tezt Gener- 
ation and Systemic-Functional Linguistic. Com- 
munication i Artificial Intelligence Series. Pinter 
Publishers, 1991. 
K. Oflazer. Two-level description of Turkish mor- 
phology. In In Proceedings of the Sizth Confer- 
ence of the European Chapter of the Association 
for Computational Linguistic. April 1993. 
T. Patten. Systemic Tezt Generation as Problem 
Solving. Studies in Natural Language Processing. 
Cambridge University Press, 1988. 
Cicekli and Korbnaz 173 Generation of Simple Turkish Sentences 
m 
m 
m 
m 
m 
m 
m 
m 
m 
mm 
m 
m 
m 
