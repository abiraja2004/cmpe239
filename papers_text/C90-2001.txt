A Grammar  Combin ing  Phrase  St ructure  and F ie ld  S t ructure  
Lars  Ahrenberg  
Depar tment  of Computer  and  In fo rmat ion  Sc ience  
L inkgp ing  Un ivers i ty  
S-58t  83 L inkgp ing ,  Sweden 
emaih  lah@ida . l iu . se  
Abst ract  
A graanmar tbrmalism, Field and Category Gram-. 
mar (FCG), is described, which beside constituent 
structure and functional structure recognizes a level 
of field structure. It is argued that the formalism 
offers descriptive and computational advantages for 
the analysis of Scandinavian and other languages 
that distinguish clause types topologically. It is also 
argued that the clear distinction between fields and 
constituents makes FCGs theoretically sounder than 
other proposed field grammars. A comparison is 
made of the word order rules and assumptions of 
FCGs with the partial orderip, gs employed by G PSG 
and other models. 
1 Mot ivat ions  for f ield struc-  
ture  
Descriptive grammatical works on Germanic lan- 
guages often refer to notions such as field and 
.schema, some early, major works being \[Dider46\] and 
\[Drach373. Recently, \[H.ue87\] and \['Ibgeby88\] have 
argued that field grammars in Diderichsen's tradi- 
tion are useful for the computational nalysis of Dan-. 
ish. If they are right, the same is obviously true for 
the other Scandinavian languages and possibly other 
Germanic languages as well. 
A major motivation for field structure in the Scan- 
dinavian languages is the correlation between the po- 
sition era  constituent and grammatical f mction. For 
instance, a NP occuring after the finite verb but 
before: the sentence adverbs, i.e. in the field that 
Diderichsen termed Ncksusfclt, is a subject, while 
NPs appearing after the sentence adverbs, in the In- 
dholdsfelt (content field) are objects. As main clauses 
have no surface VP-node consisting solely of the verb 
and its complements, a configurational definition of 
subject,; and objects is less appealing. 
There is a correlation also between positions 
and thematic functions, the classical example be- 
ing Diderichsen's l'~undament (foundation), the po-- 
sition before the finite verb which holds thematically 
prominent constituents of various kinds. 
A second motivation is that the word order regu- 
larities of' clause types are better described if we haw: 
access to field structure. In a phrase st, ruct, m'e gram- 
mar we either have to write a separate rt~le, or rule 
schema, for each clause type, or else introduce pew- 
erflfl rules such as transforn-mtions or recta-rules to, 
capture differences and similarities. Field st.rtact.ure 
can be used to express the common traits directly: 
the schema in figure 1 apply to virtually all Swedish 
clause types.* Moreover, variation can be accounted 
for in terms of constraints on what may occur i',~ 
the fields and such constraints may be expressed Ly 
regular expressions. 'Fhvs, the il~corporation of field 
structure to a formalism does not add to its co~Hpu- 
tational complexity. 
2 F ie ld  s t ruc ture  vs. phrase 
s t ruc ture  
It is obvious that schemas uch as that of figure 1 can 
be defined by context-free rewrite rules each of which 
specifies a number of subfield-relations and a sequ~ a~- 
tial order for the subfields. ~l'he rules below togelher 
define the schema in figu,'e l, which we name ?. 
(1) }2 - ,  F NexF ContF 
NexF --+ v nex 
ContF ~ v' ObjF adv 
ObjF --+ obj pobj comp 
The simplest way of formalizing a field grammar 
is to define an appropriate set of' rules of this kind 
and, if we want to derive a functional structure, as- 
sociate the rules and lexical er, tries with l'uncLio~.lal 
information. This is essentially the approach taken 
by \[RueS7\] and by \[Togeby88\]. As a resulL the field 
notion is merged with the notion of constituerlt. II. 
is indeed often said that an advantage of l)idcrich- 
sen's analysis is that it offers a 10ett.er coJ~stituem. 
analysis of Danish than, say, traditio~ml TC,. Tlds is 
not so, however. On the contrary, it. is one of the 
weaknesses of Diderichsen's work that the notions 
of fiehls and constituents are regularly confused (cf. 
1The schema in f igure 1 is a revised version of l )k lcr ichsea's  
classical  schema.  For instance,  the nexus  field h~Lq been givel~ 
two pos i t ions  instead of three for reasons expl~tined in sectiol l  
3.1.3. 
3_ 1 
Foundat ion  (F)  Nexus  f ield (NexF)  Content_ f ie ld  (ContF )  
V ~ 
Jag 
I 
v nex  
hann inte 
managed uot 
att jag inte 
that I not 
harm 
managed 
ObjF  
- -  trgffa honom 
- -  see him 
- -  trgffa honom 
- -  see  him 
Figure 1: A schema for the Swedish clause with two analysed examples. 
adv  
tOag i 
today 
! 
idag 
today 
\[Telem72,Braunm86\]). Instead field structure is bet- 
ter conceived of as a level that accounts for the lin- 
earization of independently defined constituents. 
While such a conception of field structure is more 
restricted, it is more motivated and equally amenable 
to formalization. The formalism must deal with two 
types of information for a constituent, however, its 
category and the field(s) it occurs in. Also, we need 
to distinguish carefully the dominance relations for 
fields (supe,field) and categories (dominates) as they 
differ in their logical properties, ttere only two im- 
portant differences will be noted: \[1\] Fields transmit 
expressions, categories don't. Given an expression, e, 
that is situated in a field, f, it will also be situated in 
every field that is a super field of f. Conversely, fields 
generally allow multiple occurrences of constituents 
(incl. none; cf. figure 1), while categories categorize 
exactly one constituent at a time. \[2\] The supetfield- 
relation is non-recursive, which means that schemas 
have a finite number of elements. The dominates- 
rel-:~tion, on the other hand, allows recursiou in the 
usual way. 
3 F ie ld -and-Category  Gram-  
mars  
Field-and-Category Grammars  (henceforth FCG) 
may, with fimctional schemas included, be regarded 
as a generalization of Lexical-Functional Grammars  
\[LFG82\]. There is then the usual division between 
two structural  evels, but as the surface level includes 
information about the position of a constituent in a 
relevant schema, and not just category, we refer to 
it as a topological structure, or t-structu,~. For tire 
purposes of this paper the f-structure may be taken 
as in LI?G. 
A t-structure for a simple sentence is il lustrated in 
figure 2. The rules necessary for the generation of 
t-structures form a Basic FCG. 
A schema is defined as a maximal field. A position 
is a terminal field. An identifier position is a position 
that admits an identifier of a phrase, such as a lexical 
head. 
Categories are ordered by a subsumption relation. 
An actual category is a category that does not sub- 
sume any other category; an abstract category is one 
V@v 
Harm du inte 
PolS 
NPEnex SAEnex InfSEcomp 
I / " \  
ProNEn VEv'  N iEob  j 
PNEn I 
triiffa Peter 
Figure 2: A topological structure for the sentence 
tIann du inte traffa Peter? (Didn't  you manage to 
see Peter?). Nodes are labelled CEp, where (3 indi- 
cates the category and p the position of the domi- 
nated string. 
that does. Abstract categories express what is com- 
mon to a class of actual categories. 
A configuration is a triple \[D, C, p\] where I) is an 
actual category, C is an actual category or a word, 
and p is a position. A configuration corresponds to 
a branch of a local tree of a t-structure. D is the cat- 
egory of the dominating node, C the category of ~t 
dominated node and p the position of the latter in 
the schema associated with the former. Conversely, 
a local tree can be represented as a multiset of con- 
figurations that have a common first element. For 
instance, the top local tree of figure 2 corresponds 
to the set {\[PolS, V, v\], \[PolS, NP, nex\], \[PolS, SeX, 
nex\], \[PolS, InfS, comp\]}. Multisets are required in 
the general case as there may be several daughter.~ 
with the same category and position. 
3 .1  Ru le  types  
3.1.1 F ie ld  s t ruc ture  ru les  
Field structure rules define the internal structure of 
fields in terms of subfields. In addition, they assign 
each position an occurrence index, stating the max- 
imum number of fillers it takes. I will write p* to 
indicate a position with any number of fillers, pn for 
a position with a max imum of n fillers, (p) for a po- 
sition with one optional filler, and ~imply p for a 
position with one obligatory filler. The rules in (1) 
may be expanded as below, where a simplified rule 
for the noun phrase schema is also stated. 
2 2 
Notat ion  Mean ing  
xGp 
eGp 
AGp 
wGp 
(A)Gp 
(w)ep 
A'Cp  
p nmst not be empty 
p must be empty 
p must conttdn an A 
p must, contain word w 
p may only contain an A 
p may only contain word w 
p must; not contain an A 
Table 1: Basic topological constraints of a FCG. 
(2) E ---, (F) NexF ContF 
NexF + (v) nex* 
ContF ---, (v') ObjF adv* 
ObjF --~ obj 2 pobj* (comp) 
(3) H --+ (det) mod* n rel* 
3.1.2 Category  def in i t ions 
Category definitions define necessary properties of 
categories. They may be written as 4-tuples (C, C', 
'\].', F) where C is defined as a subcategory of C' meet- 
ing the topological constraints 'F, and the functional 
constraints F. 
Basic topological constraints tate what must or 
may o?co_r in a specific position. A list of basic 
topological constraints is found in table 1. The el- 
ement rl' is a conjunction of such b~sic constraints, 
or a schema symbol. In the latter case the defini- 
tion includes a category-schema association, which 
says that the category, and, by implication, all its 
subcategories, are linearized by the named schema. 
The other constraints give information about what 
occurs in specific positions of that schema. 
'I'he functional constraints are written as conjunc- 
tions of attribute-wdue assignlnents and value con- 
straint,< A single attribute name indicates that this 
attribut.c" must have a value at Lstruct.ure. 
Some examples of category definitions are given 
below. ' lbgether they define an inheritance hierar- 
chy of constituent categories, where properties of a 
category high up in the hierarchy are shared by cate- 
gories below it. Topological properties that are com- 
mon to a set of actual categories are expressed at 
their common ancesto,'s, and, in particular, by tile 
common schema they inherit. 
csal: (S , - ,  E, Sul)jAPredAVform) 
csa2: (NP, - - , I I ,  NumbAGend) 
defl : 
deP2: 
def3: 
def4: 
detS: 
def6: 
deft: 
(MainS, S, VEv, ) 
(V2S, MainS, xGF,---) 
(V1S, MainS, eCI", ) 
(PolS, V1S, NPOlex, Vform=Fin) 
(hnpS, V1S, NP-Gnex, Vfonn=hnp) 
(SubS, S, (Comp)~_vAVcv', ~-) 
(lntS, SubS, eG\["A(all)Cv ANP~(Enex, 
Vfornr=lnf) 
For instance, in (def4) a polar interrogative clauses 
(I'olS) is detined as a verb-first clause (V1S), which 
in (def3) is deiined as a main clause (MainS), which 
in turn is defined as a clause (S). Being a clause it. is 
linearized by E according to (csal) and its f-structure 
must have a subject, a sernantic form and a verbal 
property. Being a main clause it has a verb in po- 
sition v (defl). Being a verb-first clause it has an 
empty foundation. In distinction to other verb-first. 
clauses it has a finite verb form, and an expressed 
subject in position nex. 
3.1.3 Conf igurat ion  rules 
While category definitions state what nmst hold oF 
a given category, configuration rules state what may 
hold of any category. Each configuration of the lan- 
guage is defined by some configuration rule. A con- 
figuration rule may be written as a list of the form 
(CS, F, i) where CS is a description of a set of COllIig- 
urations, F is a conjunction of functional constraints 
and i is an occurrence index. We take advantage of 
the category hierarchy and use abstract categorizes ill 
the description of configuration sets. Three illust ra- 
tions are given below: 
confl: (\[S, Nl', l"\], ISUBJ=I, l) 
conf2: (IS, NI', nex\], \ [SI IB.\]=I,  1) 
confa: (Is, SA, nex\], 1=t, *) 
The arrows, I anil .L are used ms in I, FC;: 'l'lJ(: 
up-arrow identifies the f-structure of the donlinating 
node of the configuration, whereas the down-arrow 
identifies the f-structure of the dominated aode. 
The first two rules state the possible sub.\]ect con- 
figurations of Swedish. They apply t.o aI! su\]~ 
categories S and NP, unless this is contradicting ~h,' 
definitions of these categories. For instance, (conf!) 
does not apply to a V1S as defined in (de\["/). 
The last two rules both define fillers of position 
'nex' without ordering them. The third rule detilJes 
an iterative configuration, as indicated by its occur- 
rence index. Thus, the subject is allowed to take., diL 
ferent relative positions w r t the sentence adw~'rbs 
in agreement with the facts illustrated in (,,I)-((3). ll! 
this way fields serve to define bol'ders %r l<)ca\] word 
or(le,' variation. 
(4) I natt var katten hog inte ute. 
lasl-nighl was lhe-cal hog nol o~tl 
"Probably, the cat wasn't outdoors last night" 
(5) I natt var hog katten inte ute 
last-night was nog the-cat 7~.ol o~lt 
(6) I natt var nog inte katteu ute. 
lasl-7~ight was hog ~ol llle-cal oul 
3 3 
3.1.4 Lexica l  ru les 
A lexicM rule may be written on the form (w, C, T, 
F) where the lexical item w is assigned a category, a
(usually null) topological constraint and some time- 
tional information. Three illustrations are given in 
(7)-(9). 
(7) (hann, V , - - ,  P red='manage<(Subj ) (Xcomp)>'  
AXcomp:Subj=Subj 
AVform= FinATense= Pret) 
(8) (inte, SA , - - ,  Pol=Neg) 
(9) (Peter, N , - - ,  Pred='Peter '  
ANumb=SgAGend= Utr) 
3.1.5 Wel l - fo rmedness  cond i t ions  
In order to be well-formed an expression of a FCG 
must have both a well-formed t-structure and a well- 
formed Lstructure. We omit the requirements of 
well-formed Lstructures as they can be taken to co- 
incide with those of a LFG. 
A topological structure, T, is welt-formed accord- 
ing to a FCG, G, ifr the following condition holds: 
(i) Each node of T is assigned an actual category 
and every node apart, from the top-node is assigned 
a position; (ii) Any local tree, L, of T, with top- 
node category, C, satisfies the following conditions: 
(a) for each branch of L there is a configuration rule, 
or a lexical rule, in G that licenses it; (b) if C is 
non-terminal, there is a schema, ~r, associated with 
C, such that the sequential order of the branches is 
in agreement with the sequential order of their posi- 
tions in c~; (c) all restrictions on o- imposed by C in 
its definition are satisfied by L. 
4 Propert ies of Basic FCGs 
By removing all functional information from a FCG 
we obtain a Basic FCG. It is the Basic FCG that 
is responsible for the expression of dominance and 
precedence relations in the grammar, i.e. it has the 
same role as the phrase-structure ules of a LFG. 
This section is concerned with some interesting prop- 
erties of Basic FCGs. First I show that a Basic FCG 
is weakly equivalent o a context-fi'ee grammar. 
Let G be a Basic FCG. Let A he the set of ac- 
tual categories, Z the set of schemas, and P the set 
of positions, all finite sets. For any CEA let L(C) 
denote the set of strings dominated by C. The lan- 
guage of G, L(G) is defined as a union of such sets 
for some suitable subset A' C A, e.g. by the set of 
subcategories of S. 
Let W be the set of words that occur in configura- 
tion rules and category definitions. Let K be the set 
AUW. 
For any a ES we may, by expansion of the relevant 
field structure rules, derive a positional structure for 
c,. Call this structure %. For instance, from (2) we 
may derive a positional structure e>2: 
(F) (v) nex* (v') obj 2 pobj* (comp) adv* 
A positional structure can be given the form of a 
regular expression over P. This is guaranteed, since 
fields are non-recursive objects. 
Let D he any actual category that is linearized by 
~, and let p be a position that occurs in co. The 
category definitions associate with D and p a con- 
junction of topological conditions, Dp,r, where each 
conjunct has one of the forms in table 1. 
For given D and p the configuration rules allow us 
to derive the constituent strings that may occur in p 
under D. There is only a finite number of applicable 
configuration rules. Each rule gives a disjunction of 
actual categories and an occurrence index for that 
disjunction. If all occurrence indices are finite, or if 
the occurrence index of p is finite, the constituent 
strings may be represented by a finite language over 
K. If some occurrence indices are '*', and p itself 
he, s occurrence index '*', we may first form a finite 
sublanguage over K that represents all strings ofnol> 
iterative constituent categories, and then extend it 
by introducing the iterative constituents. In either 
case, the result is a regular language over K. We call 
this language Lu,p. 
For instance, assuming that (confl) and (conf2) 
are the only rules pertaining to position nex, and 
that NP has three actual subcategories, CNP, PNP 
and ProNP, we have Lpots,n~ = Ls,n~ = SA*(CNP 
+ PNP + ProNP)SA*. 
Given LD,v we want to derive the sublanguage of 
constituent strings that satisfy Dp,~. Call this lan- 
guage LD,v,r. Consider first the primitive cases: 
1. If Dp,r = eEp then Lu,p,r = {el. 
2. If Dp,T = xEp then Lu,v,T = Lu,p-{e}. 
3. If Dp,r = ACp where A is actual, 
then LD,p,r ---- LD,pNK*AK*. 
4. If Dp,r = AEp where A is abstract, 
then LD,v,r = LD,pN(K*A1K*t..J... UK*AnK*) 
where A1, ..., A,~ are actual subcategories of A. 
5. If Dp,, = (A)Ep where A is actual, 
then LD,p,~ = Lu,vM(K*AK*U{e}). 
6. If Dp,~ = (A)Ep where A is abstract, 
then LD,p,r = LD,/~(K*A1K*U'" UK*A,,K*U{e}), 
where A1, ..., A,, are actual subcategories of A. 
7. If Dv,~ = A 'Ep  then Lu ,p ,  r = 
Lu , / I (K* -K*AK*)  
8. If Dv,~ = wEp then LD,p,~ = LD,pV1K*wK*. 
9. If g , , ,  = (w)ep 
then LD,v,r = LD,pN(K*wK*U{e}). 
In all cases LD,p,r is a regular set. As Dp,r in 
the general case is a conjunction of such primitive 
constraints, it follows that LD,p,~, will always be a 
regular set over K. 
Let LD be the totality of constituent strings that D 
may dominate. Then LD is obtained by substitution 
4 4 
of L.o,p,~ for p in e(,. As the class of regular sets is 
closed under substitution, LI) will also be a regular 
set over K. As D itself may occur in I,D, we may 
have recursive categories in I,(D), however. In any 
case, L(D), and by implication, L(G), is a context- 
free language. 
It is interesting to note that many simple context- 
free languages cannot be given a simple Basic FCG. 
l"or example, if a certain ca.tegory, C, takes one oblig- 
atory daughter, II, and two optional daughters A, B, 
according to the the Cl"-grantmar G1, there is no 
Basic FOG for L(G1) that has C as an actual cate- 
gory. 
(c:~) c - - .u  
C-~I I  A 
C .... B li 
C --, A t1 13 
1t" there is such a I'~CC,, it. must employ at least 
/hree positions, since otherwise alternative orders 
must be allowed. Ttms it takes three conliguratiol~ 
rules pertaining to three diffc.rent positions to ac- 
count for lhe string \[A 1I B\]. But as these are in- 
dependent he strings \[A tl\] and \[11 B\] ca,, also be 
generated, contradicting the assun~ption. 
In a Basic I"CG a category I)ehaving as (2: in C,I 
must be abstract and its diff(.'rei~t realizations must 
be divided among a i~tlHlt)er o f  actual sul~cv.teg(;ries. 
A Basic FCG weakly eq~livaleut t.o G1 is (i;2: 
(C2) (fsrl) . --, (pi)p2. (p:t) 
(csa:l) (C , - ,o ,  ) 
(cderl)  (C, , nc-p~, ) 
(crier:.)) (Cl ,  (:, eC:-pli(A)C-ip3, ) 
(cdef3) (C2, C, l~Cl;1Ae~p\[~, ) 
(cdef,l) ((1:3, C, AEplAI \ ]d I / I ,  ) 
(co,~fl) (\[(:, 11, p2\], , 1) 
(co. fe)  (\[c,  A, pl\], . 1) 
(eo.f3) (\[(:, ~, ~1\], , l) 
(conIq) (\[C,, A, p3\], , 1) 
(co,~ra) (\[c,  J~, i,:q, , l) 
What languages can FCGs describe well', e Intu- 
itively it. seems that complex coJlstituents that share 
a set of potential (lat~ghters hould obey the same 
constraints as regards their relative order and occur- 
rence. In particular, the occurrence of one daugh- 
ter should be independent of the occurrence of other 
daughters. Where there isa difference in these prol)- 
ertie.s, there must be a categorial distinction in the 
grammar,  as the example abow? illustrales. We may 
call this property catcgo'ry-dcpendeT~l fi:ccd emoting. 
it, see.ms, however, that thi'~ property is significant for 
natural languages, al leasl \[or those, like the Ger- 
manic languages, t.hat distinguish clause t.ypes on 
topological grounds. 
5 F ie ld  s t ruc ture  and  par t ia l  
o rder ings  
If the (surface) syntactic structures of'a natural lan- 
guage are specified by means of a context-free gl'all> 
mar a.s in LI,'G, there is no chance of expressing a~ly 
generalizations pertaining to word order. I,I;'G ad- 
mits a number of notational devices to facilitate the 
writing of c-structure rules, but has made few claims 
about possible word order restrictions. \[GPSG85\], on 
the other hand, makes the strong claim that natural 
languages obey Exhaustive Constant Partial Order- 
ing (ECPO),  i.e. that the possible linearizations of 
a set. of sister constituents are the same in any local 
tree irrespective of the categories of the mother aud 
other sisters. Such linearizations are expressed by 
means of partial orderings, or LP-rules, of the fern\ 
A<B,  
It is obvious that this assumption is more nat urally 
made in a framework that works with local trees Ihat 
have only two or three branches than in a frame- 
work which employs fiat structures, t:'or instance, 
the existence of unmarked and inverted clauses is 
not contradicting the FCPO-hypothesis,  if the sub- 
ject is regarded ~Ls a sister of the finite verb ouly 
in the inverted case. llowever, there are construc- 
tions that speak against it. as a universal, such as t.he 
order of object and verb in German main and subof  
dirlateclauses: Ich kauflc ein Auto (I bm,ght a cat') 
vs. lc\]~ babe ei~..4,~to flckaufl (i have a car bough1 :-- 
1 have I)ought a cat'), and the order of verb partici-. 
pies and their complements in Swedish predicative 
and attributive constructions: Rapporlen dr" bcatdlhl 
av Bor.q ('Fhe report is ordered by Borg) vs. De~ av 
Borg beslMlda rapporten (The by Borg ordered re- 
port = The report that Borg ordered). These con- 
structions are not problematic for FCGs, however, 
although they necessitate a categorial split. 
Although the number of categorial spli{s can bc 
many in a FCC;, one would not like tim number 
of schemas t.o 1oe very high. For a language like 
Swedish it seems possible to limit tl,e descriptioJ, to 
five schemas, one for each type ot' pvojectiotl (V, N, 
A, t )) and one for coordinated structures \[Ahrenb89\]. 
LP-rules are used also in franteworks which do 
not subscribe to the ECPO-property,  such as IIPSG 
\[PolSag87\]. llowever, they need to be colnplemented 
by something, as they miss an important aspect of 
word order. As they apply to sister constituents, 
they fail to give any information on the position of 
a daughter relative to the phonological span of the 
mother. For instance, as a speaker of English I kt,ow 
that the definile article appears at the very begin- 
ning of an N1 ) and that relative clauses appear at the 
end. Given a set of IA~-rules ordering detcrmilLers, 
relative clauses and other NP-constituents we may 
possibly infer this information, but this is a round- 
about way of doing it.. To express such facts dire.ctly 
we need a device that will impose a sequential strut- 
5 5 
ture on phonological spans, and it is tbr this purpose 
that the topological schema is useful. 
On the other hand partial orderings seem bet- 
ter suited to describe category-independent word or- 
der regularities. Consider the case of complements 
to a head. In the Germanic languages the nor- 
real order would be the one expressed in (10): NP- 
complements precede PP-complements which pre- 
cede verbal complements whatever the category of 
the head \[GPSG85, p. 110\]. 
(10) NP-~ PP-~ VP 
The rule in (2) defining the complement field 
(ObjF), repeated here for convenience, specifies three 
positions, one for bare objects, one for prepositional 
objects and one for verbal and adjectival comple- 
ments. 
ObjF --+ obj 2 pobj* (comp) 
Even if we could appeal to the same or a similar 
field structure rule in the case of complements o the 
a.djective, it seems natural in this case to explain the 
ordering in terms of the difference in category be- 
tween different complements. Thus, with the intro- 
duction of (1O) ObjF could be regarded as at position, 
i.e. as a ternfinal of the schema in figure 1. 
Note however that in a FCG LP-rules receive a 
slightly different interpretation. They apply to posi- 
tions rather than to local trees. 
6 Concluding remarks 
Current work on FCG includes the implementation 
of a head-driven, bidirectional chart-parsing algo- 
rithm. The basic idea is to use fillers of identifier po- 
sitions to trigger bottom-up redictions. FCGs have 
the advantage that the search for topologically differ- 
ent, alternative projections of a head or other iden- 
tifier, can be accomplished by a single active edge. 
On the other hand the category of an edge is often 
abstract, and has to be determined on the basis of 
category definitions and the content of the edges that 
combined to introduce it. 
Finally it should be stressed that while FCG is a 
variant of a LFG, the idea of regarding the schemas 
of traditional field grammars as structures of par- 
tim information can of course be exploited in any 
unification-based formalism. 
\[Bresn82\] J. Bresnan (ed.): The Mental Repre- 
sentation of Grammatical l~elalions, The 
MIT Press: Cambridge Mass. 
\[Braumn86\] K. Braunmtiller: Ilvor moderne er 
P. Diderichsens smtningsanMyse? 1 
\[II&A 86\] pp. 77-98. 
\[Dider46\] P. Diderichsen: Elementazr DaT*sk 
Grammatik. Third edition. Copenhagen, 
Gyldendal. 
\[Drach37\] E. Drach: Grundgedanken der Deulschen 
Satzlehre. Frankfurt/M, Diesterweg; 
reprint Darmstadt, Wiss. 
Buchgesellschaft, 1963. 
\[GPscss\] G. Gazdar, E. Klein, G. Pullum and 
I. Sag: Generalized Phrase .5'lr~zc&re 
Grammar. Oxford, Basil Blackwell, t985. 
\[US A SS\] L. tleltoft and a. E. Andersson (eds.): 
Scetningsskemaet og dets stilliny - 50 dr 
crier. Nydanske studier &~ ahnen komm, lL- 
nikalionsteori 16-17. Akademisk Forlag. 
1986. 
\[LrGS2\] R. M. Kaplan and J. Bresnan: Lexical- 
Functional Grammar: A Formal Sys- 
tem for Grammatical Representation,. \[a 
\[Bresn82\], pp. 173-281. 
\[PolSag87\] C. Pollard and I. A. Sag: \[nforwalio~- 
Based Syntaz aT~d Semantics. Volum.e i: 
Fundamentals. CSLI Lecture Notes, No. 
13. Stanford. 
\[RueSr\] It. Rue: Danish field grammar in typed 
I~I~.OLOG. Proceedings of the Th.ird Cot> 
ference of the European Chapter of the 
ACL, Copenhagen, April 1-3, 1987: lt37- 
172. 
\[Telem72\] U. Telenaan: Om Paul Diderichsens sw> 
taktiska modell. 1 Teleman, Ulf, 7're ztpl;- 
satser om grammalik. Studentlitteratur, 
Lund, 33-57. 
\[Togeby88\] O. Togeby: Parsing Danish Text ill F;u- 
rotra. Nordic Journal of Linyui,;tics, Vol. 
11, Nos. 1-2, p. 175-191. 
References 
\[Ahrenb89\] L. Ahrenberg: A formal field gram- 
mar. Research report LiTtI-IDA-89-46, 
Link6ping university, department of 
Computer Science. 
6 6 
