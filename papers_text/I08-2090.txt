A linguistic and navigational knowledge approach to text navigation 
Javier Couto 
Facultad de Ingenier?a - UdelaR 
Julio Herrera y Reissig 565 
11300 ? Montevideo ? Uruguay 
jcouto@fing.edu.uy 
Jean-Luc Minel 
MoDyCO, UMR 7114 CNRS ? Univ. Paris X 
200, avenue de la R?publique 
92 001 ? Nanterre ? France 
jminel@u-paris10.fr 
Abstract 
We present an approach to text navigation 
conceived as a cognitive process exploiting 
linguistic information present in texts. We 
claim that the navigational knowledge in-
volved in this process can be modeled in a 
declarative way with the Sextant language. 
Since Sextant refers exhaustively to specific 
linguistic phenomena, we have defined a 
customized text representation. These dif-
ferent components are implemented in the 
text navigation system NaviTexte. Two ap-
plications of NaviTexte are described. 
1 Introduction 
Text navigation has several interpretations. Usu-
ally, this term refers to hypertext systems, which 
offer the possibility to activate hyperlinks, moving 
the reading point from a text unit (source) to an-
other one (target), this change being intra or inter-
textual. From our point of view, this conception 
presents some limitations. First, the hyperlink acti-
vation is not assisted. In other words, imprecise, 
poor or no information is provided to the reader 
before s/he activates the link. Second, the reader 
does not know where the movement will be carried 
out in the text (before or after the reading point or 
outside the text), which generates the ?lost in 
hyperspace? problem (Edwards and Hardman 
1989). Finally, hyperlinks are embedded in the hy-
pertext. Therefore, there is no clearly distinction 
between text constituents and navigation knowl-
edge. In addition, by not explicitly modeling this 
knowledge, it is not reusable. 
Different solutions have been proposed to ad-
dress the problems mentioned. Some researchers 
(Danielson, 2002) have tried to mitigate the lost in 
hyperspace problem offering global maps where 
the reading point is clearly identified. Adaptive 
hypertext (Mathe and Chen, 1994; Brusilovsky, 
1996) relying on user model, proposes to modify 
the way the text is shown on the screen. Dynamic 
hypertext (Bodner and Chignell, 1999) computes 
the value of hyperlinks using several criteria such 
as text similarity or predefined relations. In this 
approach, a hyperlink is defined as a query return-
ing a text node. 
In some way, our conception of text navigation 
is related to the notion of computed query, but 
rather than taking into account criteria depending 
on the reader, the target is computed by exploiting 
linguistic information in texts. Moreover, the que-
ries are not placed in texts but they are encapsu-
lated as knowledge by a specific language (Sex-
tant), which allows isolating the navigational 
knowledge to create knowledge bases. Both texts 
and queries (navigational knowledge) are inter-
preted by NaviTexte, which manages the interac-
tions with a reader. 
The remainder of this paper is organized as fol-
lows. In the next section, we discuss our approach 
to text navigation. The third section describes a 
navigational knowledge modeling language called 
Sextant. The fourth section details the text naviga-
tion system NaviTexte. The fifth section describes 
two applications of NaviTexte. Then we address 
the evaluation aspects of our approach. At last, 
conclusions are presented. 
2 Defining text navigation 
Our conception of text navigation lies in the 
hypothesis that navigating through texts is the 
expression of a cognitive process related to specific 
knowledge (Minel, 2003; Couto and Minel, 2006). 
More precisely: we claim that a reader moves 
through texts applying some knowledge to exploit 
linguistic information present in texts (e.g. 
discursive markers). Moreover, we claim that this 
667
knowledge may be articulated in a declarative way 
(cf. Sec. 3) relying on information in texts coded, 
on the one hand, by its structure, and, on the other 
hand, by specific annotations. 
The main difference between classic hypertext 
and our conception of navigation lies on the status 
of texts and on the definition of navigational 
knowledge. In the case of hypertext, the visualiza-
tion of a text is unique and navigational knowledge 
is encoded (embedded) in the text. In our approach, 
there are several ways to visualize a text (Couto, 
2006), each way called text view, and for each 
view, different navigational knowledge may be 
defined. As a consequence, the navigation is not 
guided by the author, compared to hypertext navi-
gation where s/he determines the links, but it is the 
result of an interpretation process made by the 
reader, relying on text structure and annotations. 
 
Figure 1. Elements of text navigation. 
Our conception of navigation (cf. Fig.1) relies on 
four elements: i) a text representation allowing lin-
guistic specific phenomena and annotations (see 
Couto, 2006); ii) a language to model navigational 
knowledge (cf. Sec. 3); iii) an agent (an individual 
or a software) able to encode such knowledge; iv) a 
system, called NaviTexte, to interpret and apply 
knowledge to a specific text (cf. Sec. 4). 
3 Modeling navigational knowledge: the 
Sextant language 
To allow the unambiguous isolation of navigational 
knowledge we need a formal modeling language. 
We want to model the knowledge applied by a 
reader to move through texts, claiming that this 
knowledge exploits linguistic information present 
in texts. We do not say that this is the only way a 
reader may move through texts (e.g. strolling 
courses proposed by G?ry (2002) is a counterex-
ample), but we say that this is the kind of way than 
we are going to model. Different views of a text 
and the fact that each view contains specific indica-
tions of the possible reading courses constitute the 
heart of the language. 
3.1 Knowledge modules ant text views 
A text view may be a full view or a partial view 
focused in some specific phenomena present in the 
text (for example a view of all discourse referents). 
The constituent elements of a view are formalized 
in a view description, which contains the type of 
view, its parameters, the creation constraints (i.e. 
conditions to verify by the TU of the view) and the 
navigation operations (see next section). At pre-
sent, four types of view have been defined: plain-
text, tree, graph and temporality. The three firsts 
types are described in (Couto, 2006). The last one 
graphically represents temporality in texts and a 
complete description is in (Battistelli et al, 2006). 
Several view descriptions may be gathered by 
the encoder in an entity called navigational knowl-
edge module. The creation of a view may be con-
ceptualized as the application of a view description 
to a specific text. Thus, the application of a module 
implies the creation of a set of text views. 
3.2 The navigation operation 
The notion of computed query mentioned in sec-
tion 1 is formalized in Sextant as a navigation op-
eration, which links a source TU to a target TU. In 
classic hypertext systems one must explicitly con-
nect the specific source to the specific target. For 
example, if a reader wants, for all definitions in a 
scientific paper, to move from one to the following 
one, several hyperlinks must be defined. In our ap-
proach we specify the source and the target using 
conditions. As a result, we can abstract, for exam-
ple, the navigational knowledge that states ?go 
from one definition to the following one?, being 
?definition? one of the TU annotations. 
We can specify several conditions for the source 
and the target. We say that a navigation operation 
is available for a TU if this TU verifies the source 
conditions. A text navigation system should find 
the TU that verifies the target conditions. As sev-
eral TU in the text may verify them, we need a way 
of disambiguation. This is done by the orientation 
parameter, which specifies the direction of the tar-
get search by using one of these options: first, last, 
forward(i), backward(i). First and last indicate that 
the search of the target is absolute: the TU to select 
668
will be the first (respectively the last) TU that ver-
ify the conditions. Forward(i) and backward(i) in-
dicate that the search is carried out relatively to the 
source (before or after) and indexed by the integer i. 
For example, ?forward(3)? is interpreted as the 
third TU, after the source, of all the TU verifying 
the target conditions. 
3.3 The conditions language 
The conditions language is an important compo-
nent of Sextant ant it is composed by basic condi-
tions, TU elements existence conditions, hierarchi-
cal conditions and non-hierarchical conditions. 
Basic conditions concern TU?s attributes and 
annotations. For this kind of condition we use a 
notation close to the pattern notion. We define an 
operator called TU, having five operands that cor-
respond to the following properties: type, number, 
level, annotations and string. With the three first 
operands and the fifth one, we denote constraints of 
equality, inequality, order, prefix, suffix and sub-
string occurrence. The fourth operand is used to 
indicate the existence or non-existence of annota-
tions, whether it is an annotation name, a value or a 
name-value pair. 
For TU elements existence conditions, we define 
operators without operands to verify if a TU has 
annotations, string, title, parent and children. 
For conditions dealing with hierarchical rela-
tionship between different TU, a set of unary op-
erators have been defined, taking a basic condition 
as an argument. For example, the isAscendant op-
erator verifies if a TU is the ascendant of another 
TU specified by a basic condition. The other opera-
tors are: isParent, isChild, isSibling, isDescendant, 
hasInTitle, isInTitle. We would like to draw atten-
tion to the fact that these operators allow to move 
through the hierarchy of TU from a starting TU 
(Couto, 2006). 
Non-hierarchical conditions concern constructed 
units? attributes and annotations as well as TU con-
stitution. 
All conditions may be combined using the clas-
sic logic operators OR, AND and NOT. Figure 2 
presents an example of a language expression that 
formulates the following condition: TU of type 
?NP?, having an annotation of name ?discourse 
referent?, for which it exists, among its descen-
dants, a TU of type ?paragraph? not having an an-
notation of name ?semantic label? whose value is 
?conclusion?.  
TU(type = NP, *,*,{(discourse referent, *)},*) AND 
isDescendant(TU(type = paragraphe,*,*, {???(semantic 
label, conclusion)},*)) 
Figure 2. Conditions language example. 
This condition means: noun phrases being a dis-
course referent that does not occur in a concluding 
paragraph. 
4 NaviTexte: a text navigation system 
Several adaptive navigation systems have been 
proposed (Benyon and Murray, 1993; Kaplan et al, 
1993; Boyle and Encarnacion, 1994; Brusilovsky 
and Pesin, 1994; Brusilovsky et al, 1996). While 
they are goal specific (learning, tutoring, reading, 
etc.), NaviTexte (Couto, 2006) is a generic text 
navigation system implementing our approach. 
This means that, depending on texts and knowledge 
modules, NaviTexte may be used, for example, as a 
learning, tutoring or reading system. Another im-
portant difference is that NaviTexte gives the user 
the liberty to navigate through the text following its 
own interests (the system propose - the reader 
chooses), while the mentioned systems try to main-
tain a user stuck to a given route (the user chooses - 
the system propose) (H??k and Svensson, 1999). 
NaviTexte consists of sub-systems dealing with: 
text representation, navigational knowledge, visual 
representation and user interaction. The first one 
builds a text representation in memory from a text 
annotated manually or by dedicated software (Cun-
ningham et al, 2002; Bilhaut et al, 2003). The 
second sub-system loads and compiles the knowl-
edge modules. The result of this compilation is a 
graph of potential navigation courses that in prac-
tice is calculated as needed and stored in optimiza-
tion data structures. The third sub-system calcu-
lates and displays different text views and the 
fourth one manages the user interaction. 
The reader has the possibility to load and unload 
several texts and knowledge modules in the same 
work session. A complete description of NaviTexte 
may be found in (Couto, 2006). 
5 Applications of NaviTexte 
Building an application with NaviTexte requires a 
set of texts and navigational knowledge modules. 
Both text representation and Sextant language have 
XML implementations with dedicated editors to 
669
use in case of a manual text annotation and a hu-
man knowledge encoder, respectively (cf. Fig.1). 
So far four applications have been developed: al-
ternative automatic summarization (Couto and 
Minel, 2006), the NaviLire project (Couto et al, 
2005; Lunquist et al, 2006), re-reading Madame 
Bovary (Couto and Minel, 2006) and temporality in 
texts (Battistelli et al, 2006). We present two of 
them to illustrate NaviTexte?s potential. 
5.1 NaviLire: a text linguistics application 
For the past thirty years, text linguistic researchers 
have worked on describing linguistic markers of 
textual coherence in order to bring out principles of 
text structuring (Lundquist, 1980). A set of con-
cepts and models of textual interpretation has been 
worked out, including for example, anaphora, con-
nectors, mental spaces, etc. In particular, these 
studies have shown that even for languages appar-
ently close like French and Danish, texts are not 
organized in the same way (Lundquist, 2005). Con-
sequently, text linguistics has important implica-
tions in foreign language teaching, especially from 
a contrastive point of view, when language pairs 
are analyzed through texts used in authentic com-
munication situations. It seems that the teaching of 
text linguistics contributes to sharpen the attention 
of students towards the building of well-formed 
texts and to stimulate their own text production. 
Therefore, a tool that allows the student to perceive 
text units that contribute to and maintain text co-
herence and to navigate between them, can be sup-
posed to be an important didactic tool for teaching 
reading of foreign language texts, as well as pro-
ducing written texts in the foreign language.  
In the reading process, the student has to deal 
with two basic types of cognitive problems. First, 
s/he has to identify discourse referents in a text and 
choose the correct relations between the noun 
phrases that refer to them. Second, s/he has to iden-
tify the function and orientation intended by the 
sender. In the NaviLire project, navigation opera-
tions assisting the student are defined used Sextant 
and the texts are manually annotated by a text lin-
guistics expert. 
5.2 Navigation as an alternative to automatic 
summarization 
Many automatic summarization systems have been 
proposed (Mani, 2001; Minel, 2003). All these sys-
tems, based on the principle of phrase, proposition 
or group extraction, have been confronted to two 
problems intrinsic to the extraction procedure: i) 
the rupture of text cohesion, like in cases of anaph-
ora where the corresponding discourse referent is 
missing; ii) the adaptation of the summary to reader 
specific needs. Actually, there are no completely 
satisfying solutions to these problems. An alterna-
tive approach is to consider the summarizing proc-
ess as a reading course belonging to the reader 
(Crispino and Couto, 2004). Thereby, instead of 
extracting text fragments, we propose specific 
reading courses, whose specifications are based on 
propositions of (Endres-Niggermeyer et al, 1995) 
and on practice observations made in the frame of 
the automatic summarization system SERAPHIN 
evaluation (Minel et al, 1997) and the Filtext 
framework (Minel et al, 2001). 
These works showed that professional summar-
izers are interested by discourse categories that 
they retrieve by exploiting text organization and 
lexical markers. They also showed that these pro-
fessionals navigate through texts using heuristics 
acquired by experience. For example, they begin 
by reading the conclusion, and then they continue 
by looking, in the introduction, for nominal groups 
that occurred in the conclusion. This is the knowl-
edge we have modeled with Sextant. 
A specific reading course specifies, on the one 
hand, the kind of discursive category searched by a 
reader (e.g. a conclusion, a definition, an argument, 
a hypothesis, etc. 1 ) and on the other hand, the 
course in which the segments that linguistically 
enunciate these categories (typically phrases) must 
be presented to the reader. 
To carry out these reading courses, it is neces-
sary to locate the discursive categories involved 
and mark them in the text. For this purpose, we 
used ContextO (Minel et al, 2001). A reading 
course example is presented in Fig. 3. The reading 
point is positioned over the first TU, a phrase in 
this case, annotated ?Thematic Announcement?. 
When the user clicks over the TU, NaviTexte rec-
ommends her/him four navigation operations. The 
first one suggests bringing her/him to the following 
?Thematic Announcement?. The others ones sug-
gest going to the first ?Conclusion?, the first ?Re-
capitulation? and the first ?Argument?. For a given 
TU, each navigation operation available has three 
                                                 
1For more details on different categories or on what empirical 
basis were these types derived, see (Minel et al, 2001). 
670
possible states (and there is a visual semantic asso-
ciated to states), depending if it has been executed 
(bold font and ?*? prefix) or not (normal font and 
no prefix), and if it exists a TU target (clickable 
menu option) or not (non-clickable menu option). 
 
Figure 3. Automatic summarization courses. 
 
These kinds of suggestions (i.e. showing avail-
able navigation operations for a TU) are made all 
over the reading process. Consequently, along 
her/his reading continuum, the reader is assisted by 
the display of a specific set of signs, and there is no 
rupture of cohesion because s/he is able to continu-
ally see all the text (Battistelli and Minel, 2006). 
6 Evaluations 
There are few studies of adaptive navigation in hy-
permedia systems and most of them are focused in 
measures such as the number of visited nodes or 
the task completion time (H??k and Svensson, 
1999). Are we interested in this kind of measures? 
Being NaviTexte a generic text navigation system, 
we think that what it has to be evaluated are the 
different applications. Each application requires 
pertinent measures. For example, in NaviLire, the 
number of nodes or the time factor seems less use-
ful that the comprehension of the text analyzed.  
So far, NaviLire has been put into practice on a 
small scale only, viz. in the teaching of French 
texts and text linguistics to Danish language stu-
dents in the 4th year of Language and Communica-
tion studies at the Copenhagen Business School. A 
pilot experiment was carried out in order to evalu-
ate the effects of using the program.  
The first results are based on forty answers, of 
which 35 concern questions about the content of 
the text. These results show that the navilistes 
(people using NaviLire) have a better comprehen-
sion performance than the papiristes (people using 
paper and pencil) for 14 questions, an identical per-
formance for 16 other questions, and a poorer per-
formance for 5 questions (cf. Table 1). 
 #questions % 
Navilistes better than Papiristes 14 40 
Navilistes the same as Papiristes 16 45,7 
Navilistes worse than Papiristes 5 14,3 
Total 35 100 
Table 1. Comparison of navilistes and papiristes 
(Lundquist et al, 2006) 
Evaluations of the alternative automatic summa-
rization approach are ongoing. Our main problem 
is that automatic summarization evaluations, well 
known as difficult to carry out, typically compare 
to summaries made by professional summarizers 
(Mani, 2001; Minel, 2003). On the one hand, since 
we do not create a summary, we do not have an 
object to compare. On the other hand, since we 
have modeled the professional heuristics, we can-
not compare the behavior of our system to theirs 
because it is exactly what it has been modeled. 
7 Conclusions and future work 
We have presented our approach to text navigation 
conceived as a cognitive process that exploits lin-
guistic information present in texts. We have de-
fined it and explained the main differences with the 
hypertext navigation approach. The four elements 
needed to implement our approach are described: a 
text representation, the navigation knowledge mod-
eling language Sextant, the knowledge encoding 
agents (via applications) and the NaviTexte system. 
Two distinct applications of NaviTexte have 
been presented, showing the versatility of our ap-
proach. The quantitative results of our experimen-
tation with Danish students learning French con-
firm the improvement obtained by using text navi-
gation.  
A long term consequence of modeling naviga-
tional knowledge is the creation of knowledge 
bases exchangeable and reusable. Actual collabora-
tions are reusing the knowledge coming from the 
NaviLire project into others e-learning projects. 
We think that our approach may have a signifi-
cant impact on the way text is being read when its 
amount or nature does not allow sequential reading 
(e.g. the Web). Related to last works in Web Wise, 
we plan to couple our approach to Semantic Web 
approaches to exploit existing annotations. 
671
Acknowledgments 
NaviTexte is supported by a grant (U05H01) from 
Ecos-Sud Program. 
References 
Battistelli D. and Minel J.-L. 2006. Les syst?mes de 
r?sum? automatique: comment assurer une continuit? 
r?f?rentielle dans la lecture des textes, in Sabah (Ed.), 
Compr?hension des langues et interaction, 295-330. 
Battistelli D., Minel J-L and Schwer S. 2006, Repr?sen-
tation des expressions calendaires dans les textes: 
vers une application ? la lecture assist?e de biogra-
phies. Revue TAL, 47(3): 1-26. 
Benyon D. and Murray D. 1993. Developing Adaptive 
Systems to Fit Individual Aptitudes, In W.D.Gray, 
W.E., Helfley and D.Murray (eds.), Proceedings of 
the 1993 International Workshop on IUI, 115-122. 
Orlando, FL., New York, ACM Press. 
Bilhaut F., Ho-Dac M., Borillo A., Charnois T., Enjal-
bert P., Le Draoulec A., Mathet Y., Miguet H., Pery-
Woodley M.P. and Sarda L. 2003. Indexation discur-
sive pour la navigation. intradocumentaire: cadres 
temporels et spatiaux dans l?information g?ographi-
que. Actes de TALN 2003, 315-320. 
Bodner R. and Chignell M. 1999. Dynamic hypertext: 
querying and linking, ACM Computing Surveys, 
31(4): 120-132. 
Boyle C. and Encarnacion A. 1994. MetaDoc: An Adap-
tive Hypertext Reading System, UMUAI, 4: 1-19. 
Brusilovsky P. 1996. Methods and techniques of adap-
tive hypermedia . UMUAI, 6(2-3): 87-129. 
Brusilovsky P. and Pesin L. 1994. ISIS-Tutor: An adap-
tive hypertext learning environment. In H.Ueono & 
V.Stefanuk (eds.), Proceedings of JCKBSE?94. 
Brusilovsky P., Schwartz E. and Weber G. 1996. ELM-
ART: An Intelligent Tutoring System on World Wide 
Web, ITS?96, Berlin, Springer, 261-269. 
Couto J. 2006. Mod?lisation des connaissances pour une 
navigation textuelle assist?e. La plate-forme logicielle 
NaviTexte. PhD, Universit? Paris-Sorbonne. 
Couto J., Lundquist L., Minel J.-L. 2005. Naviguer pour 
apprendre. EIAH 2005, Montpellier, 45-56. 
Couto J. and Minel J-L. 2006. Navigation textuelle: Re-
pr?sentation des textes et des connaissances, Revue 
TAL, 47(2): 1-24, Herm?s, Paris. 
Crispino G. and Couto J. 2004. Construction automati-
que de r?sum?s. Une approche dynamique. Revue 
TAL, 45(1): 95-120, Herm?s, Paris. 
Cunningham, H., Maynard, D., Bontcheva, K. and Tab-
lan, V. 2002. GATE: A Framework and Graphical 
Development Environment for Robust NLP Tools 
and Applications, ACL?02, ACM Press, 168-175. 
Danielson D.R. 2002. Web navigation and the be-
havorial effects of constantly visible maps, Interact-
ing with Computers, 14: 601-618. 
Edwards D.M. and Hardman L. 1989. Lost in hyper-
space: cognitive mapping and navigation in a hyper-
text environment, in Hypertext: Theory and Practice. 
Oxford, Intellect Books, 105-125. 
Endres-Niggemeyer B., Maier E. and Sigel A. 1995. 
How to implement a naturalistic model of abstracting: 
four core working steps of an expert abstractor, In-
formation Processing et Management, 31(5): 631-674 
G?ry M. 2002. Un mod?le d?hyperdocument en contexte 
pour la recherche d?information structur?e sur le 
Web. Revue des Sciences et Technologies de 
l?Information, 7/2002, Herm?s, Paris, 11-44. 
H??k K. and Svensson M. 1999. Evaluating Adaptive 
Navigation Support. In: Social Navigation of Infor-
mation Space. Springer Verlag, 240-251. 
Kaplan C., Fenwick J. and Chen J. 1993. Adaptive Hy-
pertext Navigation Based On User Goals and Con-
text, UMUAI, 3, 193-220. 
Lundquist L. 1980. La coh?rence textuelle, syntaxe, s?-
mantique, pragmatique, Copenhagen, Nordisk Forlag. 
Lundquist L. 2005. Noms, verbes et anaphores 
(in)fid?les. Pourquoi les Danois sont plus fid?les que 
les Fran?ais. Langue fran?aise. Vol 145: 73-92. 
Lundquist L., Minel J.L. and Couto J. 2006. NaviLire, 
Teaching French by Navigating in Texts, 
IPMU?2006, Paris. 
Mani I. 2001. Automatic Summarization, Amsterdam, 
John Benjamins Publishing Company. 
Mathe N. and Chen J. 1994. A User-Centered Approach 
to Adaptive Hypertext based on an Information Rele-
vance Model, UM'94, Hyannis, MA, 107-114. 
Minel J.-L, Cartier E., Crispino G., Descl?s J.P., Ben 
Hazez S. and Jackiewicz A. 2001. R?sum? automati-
que par filtrage s?mantique d?informations dans des 
textes, Pr?sentation de la plate-forme FilText. Tech-
nique et Science Informatiques, n?3: 369-396. 
Minel J-L. 2003. Filtrage s?mantique. Du r?sum? ? la 
fouille de textes. Paris, Herm?s. 
Minel, J-L., Nugier, S. and Piat, G. 1997. How to appre-
ciate the Quality of Automatic Text Summarization. 
EACL 97, Madrid, 25-30. 
672
