1.1 TheSystem iln glen eral 
Since The MT-System of IBM Germany has already been described 
elsewhere \[5\] \[63, we shall confine us to the aspects of the 
system which are substantial  to our problem. 
The system consists of two l inguist ical ly signif icant parts: 
a machine lexicon residing on a direct access device and a 
program package. The machine lexicon contains: 
I. Engl ish words, 
2. a code providing grammatical  
information about each word, 
3. German equivalents. 
In case of more Than one possible German equivalent of an 
Engl ish word, there are - roughly spoken - as many separate 
lexicon entries in the machine lexicon as German Translations. 
To put it in a more precise way: for an Engl ish homograph, 
redundant as it may be, there is a separate lexicon entry 
for each v of its syntactic funtions, i.e. an English word 
like CHANGE has been entered in the lexicon as a noun CHANGE, 
with the German translation: KNDERUNG and also as a verb - 
CHANGE, with the Translat ion VERXNDERN. The order of entries 
is fixed. 
While The machine lexicon provides each Engl ish word with 
one or more German equivalents, the program package operating 
on the lexicon develops the proper Translat ion for the English 
input text. 
The f i rst  step of processing is the lexical assignment, i.e. 
each Engl ish word is looked up in The machine lexicon and 
its f irst occurence in The lexicon is Taken as the provis ional  
t ranslat ion ~ 
The fol lowing steps care for the proper choice of the German 
equivalents from Those other alternat ives provided by the 
lexicon, which remain accessible throughout the entire sub- 
sequent processing. In order to choose the correct equivalent, 
The programs rely on the original  word order of the English 
input text and the codes which are primari ly drawn from the 
lexicon. 
General ly it can be said, that as the processing progresses, 
we have more and more information about The l inguistic 
structures at our disposal, and we can make increasingly 
subtle decisions. It is obvious that  to dist inguish between 
verbs and nouns is logically prior to the dist inct ion bet- 
ween, say, abstract nouns and concrete nouns. (In praxi, 
however, the sequence of subroutines may not always be as 
simple as that.) Similarly, we can dist inguish between 
transitive, reflexive and intransit ive verbs, only after 
having establ ished the category of verbs in general, i.e. 
after the solution of homographs like: 
PLACE noun PLACE verb 
CHANGE noun CHANGE verb 
Although the disambiguation of syntactic homographs is by 
no means a tr ivial  task, we shall not go into further 
details about its actual realisation. 
For the fol lowing discussion we shall therefore presume, 
that occurring syntactic homographs have been solved. 
2.0 The Problem 
Consider the fol lowing sentence pairs: 
l ie )  The company has increased  the  product ion .  
(Ib) The product ion has increased  rap id ly .  
(2a) Reg is ter  3 re turned  the  va lue unchanged. 
(2b) The access arm re turned  to i t s  o r ig ina l  pos i t ion .  
I t  i s  c lear  that  the  (a )  and (b )  sentences  have  to  be  
translated in a different way: 
( la")  Dig Gesg l l schaf t  hat  dig Prod~kt ion grhoeht Q 
( Ib") Dig Produkt ion hat s i ch  schne l l  erhoe-~t-. 
(2a") Reg is ter  3 brachte den Weft  unveraendgrt  zurueck.  
(2b") Der Zugr i f fa rm- -~r te  zu sg iner  u rsprueng l i chen  
Pos i t ion  zuruec~-. 
It is not diff icult to see that the l inguist ical ly relevant 
criterion for the proper German translat ion is the presence 
or absence of a direct object-NP. For the German translat ion 
of ( Ib ) the  implicit object must be made explicit by the 
insertion of the German reflexive pronoun SICH. In the second 
example we have to select two differe~r<t verbs to render both 
(2a) and (2b) correctly into German 2~ . 
2.1 A first approximation 
As a~i ra t  a~proximation the following scheme can be 
proposed ~ : 
E U V -~ V transitiv ~- + transitiv NP 
(R2') I-+traVnsitive I 1 ... t ~ -traVsitive 
~Jote that (RI') and (R2') must follow each other immediately, 
otherwise the environment in (R2') must be made explicit. 
Note also that verbs like INCREASE need not be mentioned at 
all: they can be marked in the lexicon as invariably 
+ transitive\] , to which the missing formal object should 
be inserted on the German side by an other rule: 
(R3') 
transitiv _~ ~- transitiv /~  X 
Conditions: X contains no NP; 
X may be O. 
As the final step, the correct German equivalent has to be 
determined by the English verb and the feature \[+ transit iv~ 
or \[ - transitive~ ; to secure the proper translation we have 
to provide appropriate lexicon entries for the rules: 
(L I )  
I 
L2 1 sTEIG N 
(L3) I+ RETURN ~ _ 
transitive~U 
I+ ZUROCKBRINGEN\] 
transitive\] J 
(L4) ~__ RETURN ~ ZUROCKKEHREN-- 
transitive~J > I-transitive~ 1 
In order to be able to cope with reflexives of variable 
verb stems like: 
CHANGE -- VER~NDERN ~__/ SICH 2\[NDERN 
MOVE - -  0BERTRAGEN ~JS ICH BEWEGEN 
it is necessary to mark reflexives in (R3') by an 
additional feature : Iv el 
trans it iv reflexive 71 
/reX 
Conditions: X contains no NP; 
X may be O. 
2.2 Clause boundaries 
This basic schemehas to be made somewhat more precise. 
Consider: 
(5) AS data process ing needs have increased ,  
the  basle card 1.an@uase remained the  same. 
Without referring to the clause boundary after the word 
INCREASED, the following NP (= subject of the next clause) 
would be interpreted as an object belonging to the verb 
INCREASED. 
Thus the environment in (RI') (and accordingly also in 
(R2') and (R3")) has to be further specified: in addition 
to requirement, that the NP immediately follows the verb, 
we must also demand that the NP may not be separated 
from the verb by a sentence boundary. This means that the 
NP must belong to the same clause as the verb. 
This can be done on the basis of the sentence analysis, 
which is motivated independently from the cu~r~rent problem, 
and the results of which remain accessible ~ . Thus the 
final set of rules would read as follows: 
(RI) 
transitiv f ? transitiv 
- -  - - -  _ _  N P  
(R2) !_+ tranVitivii ~.~!Z tranVsitiv I 
(R3) i- V iJ 
!\[+ transitiv .'- J "~ I+ transitiv / reflexive ~ 
I 
Conditions: X contains no NP; 
X may be 0. 
7 
Symbol g~ means that we restrict the applicability of our 
rules t~ one and the same clause. 
2.3 Passive-voice verbal constructions 
Further more we should also be able to treat sentences 
like the following: 
(4) I t  has been re turned  to the  in i t ia l  pos i t ion .  
(4")Es i s t  zu der ursg~ruengli~hen Pos i t ion  zurueck-  
ggbracht  wordgn ~ . 
6 
(5) I f  the  d isk  has Seen mounted, s ta r t  the  
machine. 
(5") Wenn die P la t te  mont ier t  worden i s t ,  s ta r te  
d ie  Maschine. 
In order to get the required feature \[ + transitive\] in spite 
of the physical lack of a direct object NP in the terminal 
string~ we have to' recognize passive-voice constructions 
as such. 
The passive recognition should preeeed (RI) and should 
discover the object of the main verb, otherwise (R2) 
treats sentences like (4) and (5) as intransitives, after 
which we have to eliminate the consequences of this 
misinterpretation. Presuming unique morphological marking 
of passive-voice the following recognition rule would be 
sufficient for the present purpose: 
(R4) NP 
-S 
Vnli i X transitiv rP 
~VP ver~" pas.s i ve\] \] 
-S  
Conditions: X~ V contains no NP 
V 
4. n.  . , transltlv~ ! 
I < 5 passiv~ \] 
i verD 
\[ vP 
X may be O. 
(R4) preceeds (R1). 
For the further discussion note that the passi~v~ recognition 
uneseapably involves hierarchical structures 6~ . 
3.1 Motion verbs 
There are some subsidiary problems arising after the exchange 
of the transitive form of a multifunctional verb against 
its intransitive correspondence. 
Consider: 
(6) The temperature ha~ dropped rapidly.  
(6 ' )  Die Temperatur hat ~allen 8e?a~sen schnel l .  
(6") Die Tamparatar hat gcfa l len  ~chnell .  
Inspire of the correct translation of the main verb, 
sentence (6") is still false, because fallen - fiel - ~e- 
fallen counts as a motion verb, and as such it takes the 
~ a r y  verb sein in perfect tense. Therefore provision 
must be made to provide the proper auxiliaries for the 
motion verbs in perfext tense. The actual exchange of the 
auxiliary might be postponed to a later step, if the 
appropriate marking is provided by the lexicon. 
E.G. 
(L2') I-MOUNT \] FSTEIGEN \] 
~--transitivell "'-~- I\[- transitive\]i 
- - -  L\[+ motion\] J 
(L4') 
transitive\]J . 
rZU~OCKKEH~ 
I~- transitive~l !t,t ,,,otio  j 
Since the auxiliary selection has to be done for all motion 
verbs in perfect tense, i.e. also for the non-homographic 
type like 
has arrived i.st angekommen 
has gone ist gegangen etc., 
it is practical to place the auxiliary ~election behind 
(RI) - (R3) and even after the insertion of the improved, 
intransitive entries ((L2'), 
(R5) 
(L~' and the like): 
Vn - Vn 
X HABEN X transitiv~ SEIN X transitiv 
; motion \] motion\] . 
verb ~erb 
Thus (R5) would automatically pmoduce: 
(6'") Pie Temperat~r i s t  gc fa l len  ~chnz l l .  
3.2 Order of composite verbs 
Let us consider the order of primary elements of composite 
verbs like: 
STOP STEHEN BLEIBEN 
DROP FALLEN LASSEN 
In order to be able to manipulate each unit separately it 
is expedient to set up two words on the German side: 
STOP ~'STEHEN 
BLEIBEN% 
DROP /FALLEN 
"LASSEN ~ 
At this point however we have to  ask which of the two 
possibilities is the preferable order: 
STEHEN or BLEIBEN ? 
BLEIBEN STEHEN 
When generating the final German word order, all composite 
verbs have to be inverted. 
This inversion routine consists of a set of rules (7) . 
The rule for subordinate clauses operates aecording to the 
following basic scheme: 
(R6) SD: IX - Iv X - Vn l -  IVrestll- ~ 
erb 
SC: 1 2 0 4 + 3 
Conditions: S is a subordinate clause 
(i.e. it is dominated by an 
other symbol); 
X may be an empty string; 
V n is the last part of the verb. 
An inversion is necessary in any case independently of the 
present issue, also for sentences like (1) - (4), for 
which we have tac i t l y  assumed the existence of a verb 
inversion routine \[ 7 7 . 
We should like to translate correctly sentences like: 
(71 
(7') 
I t  aause~ the  machine to s top.  
zu~stehen7 Es vz ran lass t  d ie Masahine ~bleiben~ 
At the f irst sight it appears that sentence 
(Ta') Es veran lass t  d ie  Maschine zu s tehen  b lg iben.  
sounds better  than: 
(7b')  Es veran las~t  d ie  Maschine zu b lg iben stghen.  
But if we make the verb inversion rule (R6) also for (7) 
appl icable the verb wil l  be automatical ly inverted. Thus 
(7b') is preferable to (7a'), since (R6) yields the correct 
translat ion out of (7b'), but not out of (7a'). All what 
we have to do is to treat the inf init ive zu bleiben as a unit: 
(7" 1 Es vgran lass t  dig Masahine zu b lg ibzn stghen.  
verb \[..~J 
2nd application: 
n=1 
(7"') E~ vgran lass t  d ie  Masa'hing ~tchen " z~ b lg iben.  
(R6) applies first vacuously, i.e. it effects only the marking, 
but not the physical  sequence of the constituents, since V ? .rest is an empty string. The variable zu bleiben is the remalnaer 
of the verb constituent after the separat ion of the last 
independent morphological  unit. At the second application, 
there is a V t produeed by step 1, (R6) places the no ,  last - 
and only - m~er  of the verb constituent after Vrest ~ . 
10 
These considerations show also the crucial importance of 
the ordering of rules and subroutines. We can solve the 
sequencing of the newly inserted compound verbs with 
minimal effort, if we have the verb inversion routines run 
after the disambiguation of the transit ive/ intransit ive 
verbs. 
4.0 Theoretical implications 
Finally I should like to point out a theoretical  implication 
of the present problem which might have bearings on l inguistic 
analysis in general. 
In a formal l inguistic analysis it is unavoidable to set out 
from the information directly available in the terminal string. 
This primary information is organised necessari ly in a l inear 
fashion. 
As the analysis proceeds the possibi l i ty emerges to organize 
the l inguistic information in a non-l inear, hierarchical  way. 
The results of the analysis steps can be used to find and 
mark the boundaries of the clauses, to recognize the individual 
constituents within the larger units, i.e. to build up a 
tentative constituent structure. 
As the disambiguation of verb with mult iple meaning shows, 
we have to rely on hierarchical ly organized information 
in order to make the proper choice between transit ive and 
intransitive usages even in this rather simple ease. To solve 
the polysemy of the verbs in questions, we have to be able 
to find out that an NP is dominated directly by a VP and 
that this VP dominates directly a verb, which is in turn 
marked in an specific way. 
Our transformation terminology, and the fact, that the systems 
lends itself readily for such a reinterpretat ion suggest our 
conclusion: We claim that the MT-system described above 
uses transformational rules. 
This claim is supported 
1. by the hierarchical  organization of grammatical information, 
which is the computational representat ion of phrase 
markers (trees). 
2. - and this is the main point - by our reinterpretat ion 
of the computational algorithms as mapping of phrase 
markers into phrase markers \[2\] \[3\] 
II 
This impl icat ion seems interesting for the fol lowing 
reason. The MT-system of IBM Germany has grown out of 
the intent ion to create a translat ing tool for practical  
purposes. The system was developed in a basical ly empirical 
manner; problems were attacked at points, where we hoped 
to f ind the easiest way to the solution. A general frame 
of action has been invented, rules have been worked out 
and ordered coding considerations have been made, but it 
is only in retrospect that the theoretical  evaluation of 
the system has become possible. 
On the whole the system, heterogeneous as it is, resembles 
the fulcrum type of MT-scheme, operating on a different 
language pair  as Garvin's system \[1\] . We have tried to 
show, however, that even the empir ical  approach felt the 
need for mult id imensional  structuring, and certain rules 
set up on empir ical  considerat ions - e.g. those treating 
verb with mult ip le meaning - turn out to be mappings of 
phrase markers into phrase markers in the transformational  
sense.- . . . . . .  
IZ 
Summary_ 
In the past years the Department of Basic Research 
IBM Germany developed an experimental Machine Translat ion 
System to translate technical texts on data processing 
and electronics from English into German. This MT-system 
displays some resemblances with the Fulcrum-type of 
systems, but at least some of its subroutines contain 
also transformational devices. 
The treatment of verbs with mult iple meaning of the type 
CHANGE - VER~NDERN - SICH ~NDERN is one of these cases. The 
correct recognit ion of the passive voice and direct objects 
presuppose hierarchical ly organised and permanently accessible 
syntactic markers. 
While presenting this rather special case it has been 
attempted to show some further aspects as well as the 
general functioning of the system. 
The MT-SYstem represents a team work: the author of the 
present paper thanks especial ly Mrs. Brigitte Schirmer 
and Mr. Reinhart Herzog for reading and crit ic iz ing 
the first version of the manuscript. 
13 
Footnotes  
? 
? 
? 
? 
? 
? 
Our German translation may deviate occasionally, e.g. 
with regard to prepositions, from the common usage, 
since we draw the examples from our actual output. 
_Th.e._following verbs display the same regularity: 
Typ 1: t rans i t ive~ref lex ive 
CHANGE VERKNDERN 
REVOLVE DREHEN 
INCREASE ERHOHEN 
DECREASE VERMINDERN 
MOVE OBERTRAGEN 
etc .  
SICH ANDERN 
SICH DREHEN 
SICH ERHOHEN 
SICH VERMINDERN 
SICH BEWEGEN 
Typ 2: transitive-vintransitive 
MOUNT MONTIEREN STEIGEN 
RETURN ZUROCKBRINGEN ZUROCKKEHREN 
CONTINUE FORTSETZEN FORTFAHREN 
DROP FALLEN LASSEN FALLEN 
etc .  
In our notation symbols refer to code information, 
provided primarily by the word assignment routines, 
and - as we have already pointed out - improved by 
the syntactic component of the system. We differentiate F 
category symbols from features by putting the latter in \[ 
The symbol X denotes strings having no relevance to 
the rules. 
Although the description of the voluminous analysis 
is beyond the scope of the present discussion, its 
concept influences also the treatment of verbs with 
multiple meaning. E.g. in (RI') we must know whether the 
constituent NP comprises initial adverbs on not. To 
dinstinguish an initial adverb dominated by an NP from 
an adverb merely preeeeding on NP (but no? dominated 
by it) is extremely complicated. If this distinction 
is not made, adverbs standing betw%en verbs and NP-s 
must be jumped over. 
We cannot deal here with all problems arising, while 
translating the sentences. We shall return to the problem 
how to generate the correct German word order in 3.2. 
The actual machine realisation does not affect the basic 
properties of the passive recognition (Rq); since in the 
actual system English verbs~ which may be transitive and 
J 
14 
? 
? 
intransitive, are provided uniformly with a transitive 
German eorrespondence in the first place, it is enough 
to recognize the passives and approve the given choice 
by taking no action. The actual recovery of the deep 
object of passive sentences seems to be redundant, since 
English passives correspond normally to passives in German. 
The rule appying to main clauses is more complicated. 
Therefore we have chosen the simpler rule for subordinate 
clauses, which suffices to illustrate the principle 
of verb conversion. 
A similar reasoning speaks for separating prefixes from 
main verbs and placing prefixes after the verb stems: 
BRINGEN ZUROCK, KEHREN ZUROCK usw. The entries in machine 
lexicon are actually in this sequence. 
15 
\[3\] 
\[4\] 
!>\] 
Bibliography 
Garvin, P.L.: The Place of Heuristics in the Fulcrum 
Approach to Machine Translation, in: LINGUA 21 (1968). 
Petrick, S.R.: A Recognition Procedure for Trans- 
formational Grammars, M.I.T. Doctoral Dissertation 1965. 
Rosenbaum, P.S.: English Grammar II, IBM Research, 
Yorktown Heights 1968 - RC 2070. 
Schafer, G. - Wenzel, G.: Die Wortzuordnung - erste Stufe 
der mechanischen 0bersetzung, in: Sprache im technischen 
Zeitalter, Heft 8 (1963). 
Schirmer, B. - B~tori, I.: Machine Translation at Basic 
Research of IBM Germany, Proceedings - First International 
Symposium - Dec. 9 - 12, 1968, Tel-Aviv, Society of 
Technical Writers & Publishers Israel Chapter, Lod Airport. 
\[61 Schirmer, B.: Erfahrungen bei der Entwieklung eines 
" maschinellen Obersetzungssystems, in: IBM Nachrichten 
Heft !94, Jg. 19 (1969). 
. 7.~ Schirmer, B.: Ausarbeitungen zur EPmittlung dem englischen 
Satzstrukturen in Hinblick auf die 0bersetzung ins 
Deutsche I - II., 1955 (unpublished paper). 
