Logical Form of Hierarchical Relation on Verbs and 
Extracting it from Definition Sentences in a Japanese Dictionary 
Yoichi TOMIUR.A * ,  Teigo NAKAMUItA * ,  
Toru HITAKA * and Sho YOSHIDA ** 
? Department of Computer Science and Communication Engineering, Kyushu University 
Fukuoka, 812, JAPAN 
? * Department of Artificial Intelligence, Kyushu Institute of Technology 
Iizuka, 820, JAPAN 
ABSTRACT 
We are studying how to extract hierarchical 
relation on verbs from definition sentences in a 
Japanese dictionary. The hierarchical relation 
on verbs has been dealt with as a binary relation 
on verbs, but it should be dealt with as logical 
relation on predicates. We will define the logical 
form of the hierarchical relation on verbs and 
then discuss which part of the syntactic struc- 
ture of the definition sentence represents that 
relation. We will call the main predicate verb 
in this part the definition verb. Furthermore we 
will describe how to semiautomatically select he 
proper meaning of the definition verb and the 
proper correspondence b tween cases of an entry 
verb and the definition verb in order to extract 
the hierarchical relation as logical relation. 
1 Introduction 
The syntactic processing has been playing the 
main role in a natural anguage processing sys- 
tem. But we have come to know that we can't 
construct a practical system with only this pro- 
cessing and that the semantic processing is nec- 
essary for it. Inference plays an important role 
in the semantic processing, we therefore need a 
large knowledge base about meaning of words 
and we must treat it as logical relation. 
Hierarchical relation between words is in- 
evitable and transitive, and it is a important 
relation in the large knowledge base. Because 
inevitable relation holds at any time and the re- 
liability of conclusions inferred from it doesn't 
fall down and transitive relation can be described 
efficiently. 
There were some researches on extracting the 
hierarchical relation between words from defini- 
tion sentences in a ordinary dictionary\[I\]\[2\]\[3\]\[4 l. 
But they treated it as only binary relation be- 
tween words. Verbs correspond to n-ary predi- 
cates on entities and we therefore must describe 
the correspondence b tween the variables (that 
is case or syntactic role) of a subordinate verb 
and ones of its superordinate v rb. But this cor- 
respondence an't be described if the relation is 
treated as binary relation between words. 
We will propose how to extract he hierarchi- 
cal relation with a logical form on verbs from 
definition sentences in a Japanese dictionary. 
Firstly, we will define the logical form of the 
hierarchical relation on verbs and then discuss 
which part of the syntactic structure of the defi- 
nition sentence represents hat relation. We will 
call the main predicate verb in this part the def- 
inition verb. Secondly, we will describe how to 
semiautomatically select he proper meaning of 
the definition verb and the proper correspon- 
dence between the variables of an entry verb and 
ones of the ~lefinition verb. Lastly, we will report 
about the result of a experiment to extract he 
ACTES DE COLING-92. NArCrES. 23-28 AOl~r 1992 5 7 4 PROC. Ol: COLING-92, NANTES, AUG. 23-28, 1992 
hierarchical relation from the machine readable 
dictionary IPAL. 
A verb will be corresponded to the n-ary pred- 
icate according to a pattern of cases (syntactic 
roles). Considering the polysemy of verbs, each 
meaning of a siugle verb must correspond to the 
distinct predicate. For example, "~-~ & "(love) 
as first meaning is used with the form of "x~ $~ 
x2 '~ ~ ~"(xt  love x~) * aa~d corresponds to 
'~-~)- ~ 1 (Xl, X2)'. 
Furthermore, we will not deal with intensional 
verbs in this paper. 
2 Log ica l  Form o f  H ie rarch ica l  
Re la t ion  on  Verbs  
Verbs correspond to predicates on entities. If 
VL(rh, ...,~,~) is the subordinate predicate of 
vU(~x,...,~,,), both predicates have the same 
arity ( i.e. m = n ), there is a one-to-one corre- 
spondence ? from {1, ..-,n} to {1, ...,n}, and if 
VL(~I, "",~n) is true, Vv(~f(U,...,~O(n) ) is also 
true at the same time. That is, 
W \[VL(x) D VV(~)\], (1) 
where boldface ~e stands for a tuple of variables. 
Strictly speaking, the logical form of the hierar- 
chical relation on verbs is (1). 
For example, "fiktr 1" is the subordinate verb 
of "~F  ,5 1"- To describe this logically, 
Vz~x~ \ [~  ~(x~, x~) ~ ~ ? ~(x~, z~)\], 
where '~  1 (rh, ~1~)' means that r/~ drink ~12 and 
'~A~ ,5 ~ (Yl, r~2)' means that ~\]1 take 712. 
But there are v L and v U such that some ar- 
guments in vL(~h,...,~,~) don't correspond to 
any arguments in Vu((t ,  ? "',(m) or some in 
Vu((I ,  "" ',(,n) don't correspond to any argu- 
ments in VL(rlx, ...,tin), although v L is a sub- 
ordinate verb of v ~. In this case, we conclude 
that the predicate denoted by 9yV~(~,y)  is 
a subordinate one of the predicate denoted by 
qzVU(~e, z). Therefore, by generalizing (1), we 
get 
? Syntactic role is represented by meazts of a postpo~i- 
tion, such as "7) 9, and "~", in Japanese. 
that is, 
We expand (2) further to restrict the domain of 
z, and define the logical form of the hierarchical 
relation on verbs as follows. 
Def init ion I v L is a subordinate verb of v v, if 
for some N 
w~ \[v~(~,~)~ N(~)^ V~(~,~)\], 
where bohlface N stands for a tuple of predicate 
letters and N(z )  means Nl(Zl) A . . .  A N,(z,,). 
A small letter, such as n, v, and v L, stands for a 
linguistic expression and a capital etter, such as 
N, V, and V L, stands for the predicate symbol 
corresponding to the linguistic expression repre- 
sented by its small letter. 
I~br example, "~ 5 1" is a subordinate verb of 
"~ rY 7., 1" because the following formula holds, 
Vxy3z\[i~ 5 l (y, x) 
7J~:~J (z) A '~ ~ 7o 1 (x, z)\], 
where 
~ "3 1(r/1, r/2) : r/2 is irrigated by r/l, 
f f .~ (7/) : r/is moisture, 
;~ff~7~ 1(~/1,r/2) : rll take on r/2. 
3 Ext rac t ion  
3.1 Ext rac t ing  the Hierarchical  Ex-  
p ress ion  in a Def in i t ion  Sentence 
Definit ion 2 77re relation between an entry 
verb v ~ t and its definition sentence s is 
V~ \[3yV~(~, y) =- 3z#(x,  z)\]. 
For example, the definition sentence for "~t r  1 
"(drink) is "~ ?~/ .# 7o l ' ( to  take a drink) 
and the definition sentence for "il~ 5 1" is "TJ~ 
~ o~d ~) & ~:tY'5 1"(to take on moisture fully). 
We get 
tFor convenience, we will omit the number of the 
meaning of an entry verb. 
ACTES DE COLING-92. NAI,~'F.S, 23-28 Aol~'r 1992 S 7 5 I'ROC. O~: COLING-92o NANTP:S. AUO. 23-28. 1992 
where 
V2:l x2 \ [~ l(Xl, x2) 
~ (x~) A ~-~ ,~ l(Z~, z~)\], 
vz\[~y~ -~ l(U,z) -~ 
~z\[*~Jx(z) A /*C.O .~ 9 ait~-JC7~ l(X, Z)\]\], 
flktr (rh,r/2) : r/1 drink r/2, 
f~  (rt) r\] is a drink, 
~J~\]I~"J- 7~ (~1,~\]2) T\]I take ~/2, 
") ~(r/1,r\]~) r\]2 is irrigated by 111, 
~ (~) ~1 is moisture, 
~\]1 take on t/2 filly. 
We call the main predicate verb of a definition 
sentence the definition verb. If the definition 
sentence of a entry verb v e corresponds to
N(,~) A Yd(,~), (3) 
then we can easily derive the hierarchical rela- 
tion between v* and its definition verb v d from 
Definition 2. In this paragraph, we assume that 
the meaning of the definition verb has been se- 
lected correctly and we will omit the number of 
the meaning of definition verbs. How to select it 
will be given in 8.2. 
A definition sentence does not always corre- 
spond to the logical form as (3). But if we can 
get the sentence s ~ which is a part of the defi- 
nition sentence s and corresponds to the logical 
form as (3) and S D S d, then we can also derive 
the hierarchical relation between the entry verb 
and the definition verb. We call s ~ the hierarchi- 
cal expression in a definition sentence (HED). 
Now, we will discuss which part of the syntactic 
structure of the definition sentence is HED.  
Definition 3 We get rid of modifiers out of a 
simple sentence s. We call the rest of s the ker- 
nel sentence s ~ of s. 
Since there isn't a expression corresponding to 
a universal quantifier in the definition sentence 
of a verb, we can conclude the following charac- 
teristic. 
Character is t ic  1 l f  s ~ is the kernel sentence of 
a simple sentence s, then S D S ~ and the logical 
form of ~* is (3). 
For example, the kernel sentence of "~ ? ~i 
~- - I~  lz~JT"(to kill a pain in the body tem- 
porally) is "~ ~ 'Y" ( to  kill a pain) and its 
logical form is 
a~d the following formula holds, 
V?\]1~2~8\[S(~1,7J2,718) 3 
where S(711, r\]~, 7/8) is the formula corresponding 
to "~?~i~??- - I~=~T"  and means that 
112 is a pain, 7/s is a body, and ~\]1 kill 7/2 in ~/3 
temporally. '~  (r/)' means that ~/is a pain. 
~T  Qh,r/2)' means that 711 kill ~/2. 
There is a sentence s which satisfies the fol- 
lowing characteristic. 
Character ist ic  2 A sentence s includes a sen- 
tence s ~ and S D S'. 
If the definition sentence s of a verb is com- 
plex, then s satisfies Characteristic 2 and s * is 
its main clause. For example, the main clause 
of the sentence " ~ ? ~  ~ ~ J: 5 ~zt~-  ~3" 
(something adheres to X as it covers X) is "~ 
~,~ ~ ;5 "(something adheres to), and it cor- 
responds to the following formula, 
~,  (~) A ~ '~-  ~ (~1,~), 
and the following formula holds, 
V~l~\[s(~, )
where S(~\]l,r/~) is the formula corresponding 
to "~;O~ ~ .~ 3: ~) { :~T.~, ,  and means 
that something rh adhere to r/2 as r/1 covers 
r/~, '~fi~ 0l)' means that ~/ is something, and 
'{ '~  T ~ 0/1, r/~)' means that r/1 adhere to r/~. 
Meaning of the compound sentence s, in which 
two sentences (81,82) are connected by a con- 
junction corresponding to 'and' in English, is ei- 
ther 'S\] ^  $2' or 'a f ter  $1, $2'. Therefore, an 
operator needs to decide the relation between 
81 and s~. In the former case, s satisfies Char- 
acteristic 2 and s ~ can be both 81 and s~. For 
example, a sentence "~r~ ~-~#" ~:~,~ ~ < ~ 
?~ "? ? "(to throw something and have it touched 
AcrEs bE COLING-92. NAI,~ES. 23-28 AO13T 1992 5 7 6 PROC. OF COLING-92. NANTES, AUG. 23-28. 1992 
hard) consists of two sentences. One is "/,J'~, ~k 
il~;:r" ;b" (to throw something), the otimr is "~ 
3: < :~  ~ 4- ,5 "(to have it touched hard), and 
two sentences correspond to following formulae 
respectively, 
~,  z < ~ 4-~ (~t~,~\]~,~3). 
And two sentences are simultaneous. So follow- 
ing formulae hold, 
V~/11'/2~/3\[S(~/h f12, r13) D 
t .~  (~)  ^  ~'~.~' s (~a,~)\], 
V~I~, ~l~ rl~ \[S(~h, ~,  ~/~) D 
where S(O\], ~/~, ~/3) is the formula con'esponding 
to "/~D)~ ~17 T~w 3: < ~ ~7~"and means 
that r/1 throw 7/2 and have Y2 touched hard to 
~a. '@$~ (~/)' means that ~\] is something. '~E 
~f~5 (~/hO~)' means that ~1 throw ~12. '~  3: 
< ~ ~ 4- ~ (~ll, ~ ,  ~/3)' means that ~/1 have r\]~ 
touched hard to fla. 
To apply Characteristic 2 repeatedly, we con- 
clude that there is a definition sentence s which 
include a simple sentence s~ and S D S' aud 
that the kernel sentence of s ~ is HED.  ~br ex- 
a~nple, the sentence s "~b ,5 ~o (~)~k ~ oT<"  ~:2- 
;5 t,: ~ l:- -{- ? ~ ?) 1~ ~ ~ :~ o "( ~ T lhJ 1:-2 ? }911 "Z 
" (to hold both ends of something and apply 
force to both sides in order to make it straight) 
is complex. It therefore satisfies Characteristic 
2 and S D S1, where Sl is its main clause "~- q) 
~?~?~o'~l~ l f i l~a J3  ~-')JllP~ 7~ '' (to hold 
both ends of something and apply force to both 
sides), s\] is a compound sentence and is com- 
posed of s2 "-f ?~?~, '~o"  (to hold both 
ends of something) and s3 "Ji~:)~J'l~l l,T-)3 ~ ~13 L 6 " 
(to apply force to both sides) and two sentence 
is simultaneous. Sl therefore satisfies Charac- 
teristic 2 and S1 D $2 and S1 D $3. Therefore, 
5" D 5'2 and S D $3. Because 82 and 83 are 
simple sentences, the kernel sentences of 82 and 
83 are HEDs.  When the definition sentence is
simple, its kernel sentence is HED.  
If we decide the proper meaning of the defi- 
nition verb and the proper correspondence from 
cases of v e to cases of v d correctly, we conclude 
(4) N,(~,) ^  N,(~)  ^  V~(~, ~)\]. 
We can get a hierarchical relation between v e 
and v 't as follows from (4), 
wv~ \[v?(,~,v):~ N~(~)^ V%,~)\]. 
3.2 Necessary  Cond i t ion  and  Heur i s -  
t ic  
In this paragraph we supposed that an entry 
verb v ? has HED.  
What we call the selectional restriction has 
been used to narrow down candidates fro' syn- 
tactic structnre in the syntactic processing. It 
is the restriction about the semantic ategory of 
a noun phrase which a certain verb can take as 
a certain case. The semantic ategory has been 
called the semantic marker or semantic prim~ 
itive, libr example, semantic ategories of the 
subjective noun phrase and the objective noun 
phrase for the verb "fik?~"(drink) must be 'ani- 
mal' and 'liquid' respectively. We use this inforo 
mation to semiautomatically select the proper 
meaning of v d and the proper correspondence 
from cases of v ~ to cases of v d. The information 
is mentioned in the Japanese dictionary we used 
for the experiment of extraction. 
The restriction that if a verb vk c~m take a 
noun phrase with a e~e e the semantic ategory 
of the noun phrase is D is expressed logically as 
follows, 
w \[vk(~) ~ D(~,)\], (~) 
where xi is the argument corresponding to the 
case c, and k is the meaning number of v. We 
call D in (5) the domain for c of vk. For example, 
V~a~12\[~tt 1 011, ~'/2) D 
animal@l) A liquidO?2)\], 
where 'fi~.O 1 (~h, 712)' means that ~/1 drink ~2. 
If the semantic ategory of a nolm n is D, 
WIN(x) ~ D(~)\]. (6) 
We call D in (6) the domain for n. 
If the k-th meaning is proper as v ~ in the def- 
inition sentence of v ~ and the correspondence 
from i-th case of v ~ to j-th ca~e of v~ is correct, 
then the following formula holds, 
ACTES DE COLING-92, NANTES, 23-28 AO~; 1992 5 7 7 PROC. OF COLING-92, NAhrrl~s, Ano. 23-28, 1992 
i 
V ... z ... IV'(..., x,...) 
(7) 
? " A N(x)A""  A V \ [ ( " ' ,~ , " ' ) \ ] .  
/ 
J 
Assumpt ion  1 We assume ~xV(zc) is true for 
each verb v and BxN(x) is true for each noun n. 
We conclude 
~x \[De(x) A Dn(x) A Dd(x)\] (8) 
from SwV~(~) (Assumption 1) and (7), where 
vv IV'(... ,~,...) ~ N'(~)\], 
) 
V,I \[N(r/) D D"(r/)\]. 
We establish (8) as the necessary condition in 
which the correspondence is valid. We check (8) 
with BxN(x) (Assumption 1) and the relation 
between domain predicates. 
Necessary Condit ion If the k-th meaning is 
proper as v d in the definition sentence of v ~ and 
the eom'aspondence from i-th case of v ~ to j-th 
case of v~. is correct, then 
Bx \[V~(x) A D"(x) A D'l(x)\] ,
where D ~ is the domain for i-th case of v ~ and 
D ~ is one forj-th case ofv~ and the noun ofj-th 
case of v~ in the definition sentence is n and the 
domain for n is D '~. 
The meaning of an entry verb v ~ is defined by 
using the definition verb v d. Then, the less the 
number of the variables appearing either only 
in v ~ or only in v d ( i.e. (size of tuple y) + 
(size of tuple z) in the formula (4)), the more 
v ~ restricts the meaning of vL An editor of a 
dictionary would select such a definition verb. 
We therefore stablish the following heuristic. 
Heur ist ic  The less the number of the variables 
appearing either only in v ~ or only in v d, the 
more we have chance of correct selection for 
meaning of v '~ and the correspondence of the 
variables. 
3.3 Example of Ext ract ion  
In this paragraph the method how to extract 
the hierarchical relation on verbs will be intro- 
duced. We suppose following definitions about 
"~-? "5" and "~9" .  
~t - '5  
I \](human) ~ (human) ~:\] ~-- ? 
& ~" ~) ~ ~ ~ a ~' "3 ~ ~ ? ~-9 .  (to 
experience a strong feeling of fondness) 
I \[(human) ?~ (hand) V (concrete) ~:\] 
:~ Iz ~ ~ ? ~ '9 .  (to have something 
with one's hand) 
II \[(human) ?~ (human) Iz (mental) ~:\] 
~ ~ lz~,~ b ~ ab ,5 ~,~ ? ~ ( .  (to expe- 
rience a feeling toward somebody) 
III \[(all_entities) ~? (abstract) ~:\] 
(ghf i ,  g )~ck~- J - '5 .  (to have 
some property or equipment) 
?means that "~T .5 1" is used with the form of 
"npl ~ np2 ~ ~ "~ "5" and the semantic ate- 
gory of npl and np2 must have 'human'. We get 
the following knowledge about domain of words. 
Vn\[~ - "5 ~(r/~, ~:) 
human(~l) A human(~2)\], 
Vr/\[~  1 (r/~, ~ ,  r/a) D \[human(~l )h
Ahand(r/2 ) A concreat(r/a)\]\], 
V~}\[~'9 ~ (r/i, r/~, ~'13) D \[human(r/1 )h 
Ahuman(r/2) A mental(r/~)\]\], 
all_entities(o1 ) A abstract(o2)\], 
Vr / \ [~  (r/) D mental(~l)\]. 
'all_entities' expresses the set of all entities. We 
suppose the following relation between domain 
predicates, 
Vr/\[human(r/) V hand(r/) D concrete(~)\], 
Vr/\[mcntal(~) O abstract(~)\], 
Vr/\[concrete(r/) V abstract(r/) D 
all.entities(r/)\], 
-,B~l\[concrcte(o) A abstract(r/)\], 
~v\[human(~) ^ hand(r/)\]. 
We parse the definition sentence "~ "~ ~ ~ -~ 
& ~ 5 ~t9  ~-9"  for the entry verb "~ 
AcrEs DE COLING-92, NANTES, 23-28/,OOT 1992 5 7 8 PROC. OF COLING-92, NANTES, AUG. 23-28, 1992 
7o 1", and we find this sentence is simple and 
its kernel sentence "~,~ ?5 ~k ~- )  " is HED.  We 
narrow down candidates for the meaning of the 
definition verb "~o"  on parsing by selectional 
restriction. Meanings of "i~:o" that satisfy se- 
lectional restriction are II and II1. Since we can 
infer 
3x\[human(x) A all_entities(x) l 
from Assumption I and the relation between 
domain predicate, the correspondence from the 
first case of "'~-~ 6 1" to the first case of "~ 
3"satisfies the necessary condition described 
in paragraph 3.2. Since we can infer 
~-3x\[human(x) A mental(x) Aabstract(x)\], 
the correspondence from the first case of "'Z!? 
70 1" to the second case of "~o a"does not sat- 
isfy the necessary condition. After all, for "~ 
~)2" and "~'~'-)a", partial one-to-one correspon- 
dences which satisfy the necessary condition are 
~o2 : a.{}, 
b.{< 1,1 >}, c.{< 1,2 >}, 
d.{< 2,1>},  e.{< 2,2 >}, 
f .{< 1,1 >,< 2,2 >}, 
.q. {< 1,2 >,< 2,1 >}, 
~ 'oa :  h.{}, 
i. {< 1,1>}, j .{< ~,1 >}, 
For example, the correspondence g means that 
the first case of "N:-J,5 1" corresponds to the 
second case of "~."02" and the second case of 
"~-? & 1" corresponds to the first case of "N~ 
~D 2"- 
Because the number of the variables which ap- 
pear either" only in the entry verb or bl the defi- 
nition verb for the correspondence g is 1 and one 
for the correspondence i is 2, the pair of "~o2"  
and the correspondence g is prior to the pair of 
"~o3"  and the correspondence i by the heuris- 
tic. The pair of "~o~"  and the correspondence 
f and the pair of "~ '9  2 and the correspondence 
g are given the highest priority by the heuristic 
after all. 
it is decided by a operator that the second 
meaning of ~ and tile correspondence f are 
proper, and we get 
W~z\ [~ )- 70 1(xl, z2) :9 
4 Exper iment  o f  Ext rac t ion  
We have experimented on extracting the hi- 
erarchical relation using the machine-readable 
dictionary IPAL (IPA : Information-technology 
Promotion Agency, Japan ; IPAL : 1PA Lexicon 
of the Japanese language for computers). 861 
verbs and 3379 meanings are contained in this 
dictionary. The definition sentence of an entry 
verb and the pattern of cases for the entry verb 
and the domain for each of the cases of the entry 
verb are given in this dictionary (see Appendix). 
And we can also get the domain for a noun from 
this dictionary. 
We made a lexical functional grammar which 
outputs the logical fornl of HED as a feature. 
We parsed the definition sentences and got 1709 
HEDs whose main predicate verb are given as 
an entry verb in this dictionary with this gram- 
man. We have extracted the hierarchical rela- 
tions on verbs from 1288 I IEDs. The average 
number of candidates which are given the high- 
est priority by the heuristic described in para- 
graph 3.2 is 4.6 and there is the correct solution 
in 4.6 candidates at tile rate of 70.4%. The num- 
ber of meanings of verbs in the highest layer in 
the hierarchy is 288, and the average level in the 
hierarchy is 2.7. Maybe this value is so little. 
We think in this point since IPAL is a basic verh 
dictionary its entry verbs are in a comparatively 
high ordinate in hierarchy of all verbs. 
5 Conc lus ion  
We have defined the logical form of tile hi- 
erarchical relation on verbs and have described 
how to extract it from definition sentences ill a 
Japanese dictionary. 
The method described in this paper is for a 
Japanese dictionary, but it can be applied to 
other languages dictionary, too. 
Acq\]I,S DE COtdNG-92, NANTES, 23-28 Ao\[rr 1992 5 7 9 PROC. OF COL1NG-92, N^NTES, AUG. 23-28, 1992 
Reference  
\[1\] I~oBEnT A. AMSLER, A Taxonomy for English 
Nouns and Verbs, Proc. of the 19th Annual 
Meeting of the ACL pp.133-138, 1981 
\[2\] H. TSURUMARU, T. HITAKA, S. YOSHIDA, An 
Attempt o Automatic Thesaurus Construction 
from an Ordinary Japanese Language Dictio- 
nary, Proc. of COLING'86, pp.445-447, 1986 
\[3\] J. NAKAMURA, M. NAGAO, Extraction of Se- 
mantic Information from an Ordinary English 
Dictionary and its Evaluation, Proe. of COL- 
ING'88, pp.459-464, 1988 
\[4\] LOUISE GUTHRIE, BRIAN M. SLATOR, YORICK 
WILKS, REBECCA BRUCE, Is There Content in 
Empty Heads ?, Proe. of COLING'90, pp.138- 
143, 1990 
\[5} Y. TOMIURA, T. HITAKA, S. YOSHIDA, 
Extracting Superordinate-subordinate Relation 
between Verbs from Definition Sentence in 
Japanese Dictionary, Information Processing 
Society of Japan, Natural Language Special In- 
terest Group Technical Report, No.73-3, pp.17- 
24, 1989, (in Japanese) 
Append ix  
A.1 Example  of  Contents  o f  IPAL  
(No) 005 (~)  012 (~)  ~l~,ia~,? 
t~c, a~?~<0 (~)  ~< (~ i) 
(~ .~9) .  I~1~.? L') ({ff~}l) (2. 3 0 o) 
(~2)  (~, )  (/0-~2} (4 1 1 b) ( ,~ ,~ 
:~- ~? ~;}OAo(~i;~)O2, NG2, 
01 (~}I) 2" (~I) HUM/ORG (~i) 
~:, ~ (~'3) v (~'4) =~,~-  (~7)~ 
( . . . )  expresses what the filed following it 
means. '~o-9' is a entry. '~ '~ '  is the notation 
of the entry with Chinese character. ' ~'~?)~ ir.)? 
b~,  ~bT~i~,~*c~ < o ' is a definition sentence. 
'005' following (N o ) represents he definition 
sentence corresponds the fifth meaning of ' to -9 
(~o)  '. The Japanese word following (~ i 
) and symbols following (~ i ) represent a 
pattern of the cases for {~'95 and the domain 
for each case of the verb. That is, '~o5 '  is used 
with the form 'NP1 ~ NP2 ?z NP3 ~ ~ o ' ,  
and the semantic ategory of NP~ is 'human' 
or 'organization', and one of NP2 is 'concrete 
object' or 'abstract object', and one of NP3 is 
'mental object'. We can get 
Vz\[~o~(z~,z~,x~) 
\[human(xl) V organization(x1)\]^ 
\[concrete(x~) V abstract(x~)\]^ 
mental(xa)\] 
from these informations. Japanese words follow- 
ing (~ i) are example of NPi. We can get the 
domain for nouns from these informations. For 
example, we can get 
Vx\[~g,f (x) D organization(x)\], 
where 'I~g?' means 'government'. We used the 
above informations. 
A.2 A Example  of  Ext rac ted  Re la -  
t ions  
~Ts(z l ,  y, z~, xs) ~ ~Ts(x l ,  x~, zs) 
~z\[\[ t.<" ~ (z)v~4~ (z)\]^~*~%(~,, 2  z)\] 
~ : f  ~3(zl, z~) ~ 3z~Ts(xl,  zl, z2, z2) 
$~%(zi,  z2, xs) ~ ~$-iT(zi, x~, x~) 
~\[\[~" (~) v ~ (0\] ^  ~TI~(~I, ~, ~)\] 
,~-~(~:, ~ ,  z~) ~ ~ab%(~l, ~,  ~)  
~? ~10(~i, ~ ,  z~) ~ ~%(~1,  ~,  ~z) 
ACRES DE COLING-92, NANTES, 23-28 AOtST 1992 5 8 0 PROC. OF COLING-92. NANTES, AUG. 23-28, 1992 
