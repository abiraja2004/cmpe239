Ambiguity Preserving Machine Translation 
using Packed Representations* 
Mart in  C. Emele  and Michae l  Dorna  
IMS, Institut fiir Maschinelle Sprachverarbeitung 
Universit~it Stuttgart 
Azenbergstrai~e 12
D-70174 Stuttgart 
~emele, dorna}@ims, tmi-stuttgart, de 
Abstract 
In this paper we present an ambiguity preserv- 
ing translation approach which transfers am- 
biguous LFG f-structure representations. It 
is based on packed f-structure representations 
which are the result of potentially ambiguous 
utterances. If the ambiguities between source 
and target language can be preserved, no un- 
packing during transfer is necessary and the 
generator may produce utterances which max- 
imally cover the underlying ambiguities. We 
convert he packed f-structure descriptions into 
a flat set of prolog terms which consist of pred- 
icates, their predicate argument structure and 
additional attribute-value information. Ambi- 
guity is expressed via local disjunctions. The 
flat representations facilitate the application of a 
Shake-and-Bake like transfer approach extended 
to deal with packed ambiguities. 
1 In t roduct ion  
It is a central problem for any practical NLP 
system and specifically for any machine trans- 
lation (MT) system to deal with ambiguity of 
natural anguage utterances. This is especially 
true for systems with large coverage grammars, 
where the number of potentially ambiguous de- 
scriptions grows drammatically as the number 
of acceptable syntactic constructions and the 
number of lexical readings increases. In gen- 
eral, it is not possible to resolve all potentially 
ambiguous descriptions without incorporating 
world knowledge of unlimited size. This funda- 
mental problem has been discussed in the litera- 
* We would like to thank our col leagues at Xerox PARC 
and Xerox RCE for fruitful discussions and the anony- 
mous reviewers for valuable feedback. This work was 
funded by the German Federal Ministry of Education, 
Science, Research and Technology (BMBF) in the frame- 
work of the Verbmobil project under grant 01 IV 701 N3. 
ture as the AI completeness problem (cf. Kay et 
al. (1994)). Nevertheless, it has been observed 
that many ambiguous utterances in the source 
language (SL) text can be translated by equiva- 
lently ambiguous phrases in the target language 
(TL) text. We call such an ambiguity apreserv- 
able ambiguity and the corresponding architec- 
ture for translation an ambiguity preserving MT 
approach. 
In order to achieve this goal of ambiguity pre- 
serving translations there exist a number of dif- 
ferent solutions we can apply. A naive solu- 
tion would enumerate all possible ambiguous de- 
scriptions, translate them and generate the cor- 
responding target utterances which would then 
be intersected to find a common string which 
covers all meanings. This strategy is obvi- 
ously not feasible because the number of poten- 
tial readings might grow exponentially with the 
length of the sentence. 
Another solution to overcome this problem is 
not to resolve ambiguities at all by using un- 
derspecified representations. This strategy has 
been successfully applied for a number of se- 
mantic ambiguities like quantifier and operator 
scope ambiguities. Therefore it is not surpris- 
ing that the usage of underspecified semantic 
representations have gained much popularity in 
recent years. Work in the literature include 
the QLF representations (Alshawi, 1992), the 
work on Underspecified Discourse Representa- 
tion Structures (UDRS) (Reyle, 1993; Bos et 
al., 1996), and the collection of papers in van 
Deemter and Peters (1996). For an application 
of using underspecified semantic representations 
within MT see Alshawi et al (1991), Copestake 
et al (1995) and Dorna and Emele (1996). 
Another source of ambiguities which might be 
preservable between related languages include 
syntactic ambiguities like the well-known PP at- 
365 
tachment ambiguities. There has been growing 
interest in developing underspecified or so called 
packed respresentations to deal with such syn- 
tactic ambiguities (cf. Rich et al (1987), Seo 
and Simmons (1989), Bear and Hobbs (1988), 
Maxwell III and Kaplan (1993), Pinkal (1995), 
Egg and Lebeth (1995), Schiehlen (1996) and 
DSrre (1997)). 
The key idea of all these representations is 
to factor common information as much as pos- 
sible in a parse forest and to represent the at- 
tachment ambiguities as local disjunctions with- 
out conversion to disjunctive normal form. Such 
representations avoid the exponential explosion 
which would result if all possible readings are 
extracted from the parse forest. 
To achieve our overall goal of ambiguity pre- 
serving MT it requires not only a parser which 
is able to produce such packed representations 
but also a generator which is able to take such a 
packed representation as input and generate all 
possible paraphrases without explicitly enumer- 
ating all readings. The work in Kay (1996) and 
the extension to ambiguous input in Shemtov 
(1996) and Shemtov (1997) describes a chart- 
based generation process which takes packed 
representations a  input and generates all para- 
phrases without expanding first into disjunctive 
normal form. 
What needs to be done to realize our envis- 
aged goal is a transfer system which is able 
to work on these packed translations without 
unpacking them or only as much as necessary 
if ambiguities can only partly be preserved in 
the target language. The rest of this paper is 
concerned with the extension of a Shake-and- 
Bake like transfer approach (Whitelock, 1992; 
Beaven, 1992) or the kind of semantic-based 
transfer approach as described for example in 
Dorna and Emele (1996) to cope with local am- 
biguities. 
To explain and illustrate the treatment of 
local ambiguities we show how an underspeci- 
fled representation of PP attachment ambigu- 
ities can be utilized in a machine translation 
architecture for providing ambiguity preserving 
translations. It is illustrated on the basis of 
LFG f-structure level representations (Kaplan 
and Bresnan, 1982). However, it could equally 
well be done on the level of underspecified se- 
mantic representations a shown in (Dorna et 
al., 1998). The main reason for choosing the f- 
structure level representation is due to the fact 
that we could use the Xerox Linguistic Envi- 
ronment (XLE) system (Maxwell III and Ka- 
plan, 1996) for the analysis and generation of 
English and German utterances. The key ar- 
gument for using this linguistic workbench is 
the ability to produce packed representations 
for ambiguous utterances using techniques de- 
scribed in Maxwell III and Kaplan (1993) and 
the availability of a generator which generates 
utterances from f-structure descriptions. 
The rest of the paper is structured as follows: 
first, we show how the hierarchical f-structure 
representations can be converted into a flat set 
of Prolog predicates uch that the Shake-and- 
Bake like transfer approach can be applied. Sec- 
ond, we show how PP attachment ambiguities 
are represented using a packed representation. 
Then we show how this particular transfer ap- 
proach can be adopted for dealing with this kind 
of ambiguous representations. 
2 Example 
To illustrate the approach we take a simple ex- 
ample which contains a PP attachment ambi- 
guity which can be preserved between German 
and English and probably between many other 
related languages as well. 
(1) wir treffen die KoUegen in Berlin 
we meet the colleagues in Berlin 
For example the sentence in (1) can either mean 
(a) that we will have a meeting in Berlin where 
we will meet our colleagues or (b) that we will 
meet our colleagues who live in Berlin. Without 
previous knowledge about the discourse and the 
specific people involved, it will not be possible to 
resolve these two meanings. Nevertheless, both 
the German and the English sentence xpress 
exactly the same ambiguity. 
There might exist other paraphrases using ex- 
actly the same semantic predicates, e.g. the ut- 
terances in (2) but they will not be chosen by 
the generator because they do not cover both 
readings at the same time. Instead sentence 
(2a) would be chosen to express the attachment 
of the prepositional phrase to the verb phrase 
whereas entence (2b) would be chosen to ex- 
press the attachment to the noun phrase 'the 
colleagues'. 
366 
(2) a. In Berlin treffen wir die Kollegen 
In Berlin meet we the colleagues 
(In Berlin we will meet he colleagues.) 
b. wir treffen die Kollegen aus Berlin 
we meet the colleagues from Berlin 
(We will meet he colleagues from Berlin.) 
In addition, those two maximally discriminat- 
ing sentences could also be used as an interface 
for an interactive translation system, e.g. the 
negotiator approach (Kay, 1997) where the hu- 
man translator would be asked to distinguish 
between the two possible readings. 
The f-structures in (3) and (4) correspond to 
the disambiguated attachments as paraphrased 
in (2a) and (2b) respectively. 
(3) "PRED treffen<~, \[\]\]> 
SUBJ \['27\[ PREDNUM plPr?\] 
\[PRED gollege\] 
~\]\[PRED in<\[~> \])J 
ADJN ~, L OBJ \[~PRED Berlin\] 
(4) "PRED tre1~en <~, I~> 
SUBJ ~\]\[PREDNuM plPro\] 
F,. D .ollege 
ITI INUM pl 
OBJ \['~\[SPEC def 
I. L OBJ \[~\]\[PRED Berlin 
3 From F-structures to Term Sets 
F-stuctures encode information in a hierarchical 
manner by recursively embedding substructures. 
They provide by nature only outside-in refer- 
ences whereas in transfer frequently inside-out 
access is necessary. Hence, information access 
for transformation processes like transfer is not 
as straightforward asit could be when using flat 
set representations (Beaven, 1992; Whitelock, 
1992). Set representations can be seen as a pool 
of constraints where co-references between the 
constraints, i.e. the set elements, are used to en- 
code the same embedding f-structures provide. 
Therefore, the structural embedding which is, 
on the one hand, part of f-structures themself 
is represented, on the other hand, in the inter- 
pretation of constraint sets. Furthermore, sets 
come with very simple test and manipulation 
operations such as tests for membership and set 
union. 
In the following we define a correspondence 
between f-structures and sets of terms. We re- 
strict the f-structures to transfer elevant infor- 
mation such as PREDS, grammatical functions, 
etc. Feature structure constraints are encoded 
as relational constraints using Prolog syntax (cf. 
Johnson (1991)). As examples of such sets of 
terms see (5) and (6) which corresponds to f- 
structures (3) and (4), respectively. 
(5) treffen(1), 
subj (1,2) ,pro (2) ,num(2,pl), 
obj (1,3), kollege(3) ,num(3,pl), 
spec (3, def) ,  
adj n (1,4),  in (4), 
obj (4,5) ,Berlin(5) 
(6) treffen(1), 
subj (I ,2) ,pro(2) ,num(2,pl), 
obj (1,3), kollege(3) ,num(3,pl), 
epec (3, def ) ,  
adj n (3,4),  in (4), 
obj (4,5) ,Berlin(5) 
The 2-place relation t rans  given below trans- 
lates between f-structures and (sets of) terms. 
are references to f-structures which are mapped 
into nodes i used in terms. F are features, H(.. . /  
describe predicates, v stands for atomic values, 
and ~o are complex f-structures. Co-occuring 
parts of f-structures are translated only once. 
1. (atomic values) 
trans< ~\[r v\], r ( i ,v )  > 
2. (predicate values) 
traitS< \[~PRED II(...)\], H(i) ) 
3. (complex f-structure values) 
trans< \[~F \[\] ~o\], r ( i , j )  u T > 
with trans< \[~0, T > 
4. (set values) 
trails< ~\[ADJN {\[~ ~Pl, ..-, \[\] ~On}\], 
ad jn( i ,Q) ,  . . . ,  ad jn( i , in)  
U T1 U ...U Tn > 
witht rans<\ [ \ ]~o j ,  Tj >; 1 < j<n 
zrans is bidirectional, i.e. we are able to 
translate between f-structures and terms for us- 
ing terms as transfer input, process terms in the 
transfer, and convert he transfer output back to 
f-structures which are the appropriate generator 
representations. 
367 
4 F -s t ruc ture  T rans fer  
Transfer works on source language (SL) and tar- 
get language (TL) sets of terms representing 
predicates, roles, etc. like the ones shown in (5) 
and (6). The mapping is encoded in transfer 
rules as in (7). For a rule to be applied, the 
set on the SL side must be a matching subset of 
the SL input set. If this is the case, we remove 
the covering set from the input and add the set 
on the other side of the rule to the TL output. 
Transfer is complete, if the SL set is empty. 
(7) a. t re f fen(E)  <-> meet(E). 
b. kollege(X) <-> col league(X). 
c. Berlin(X) <-> Berl in(X).  
d. in(X) <-> in(X). 
e. pro(X) <-> pro(X). 
f. subj(X,Y) <-> subj(X,Y). 
g. obj(X,Y) <-> obj(X,Y). 
h. adjn(X,Y) <-> adjn(X,Y). 
The transfer operator <-> is bidirectional. Up- 
per case letters in argument positions are logical 
variables which will be bound to nodes at run- 
time. Because of the variable sharings on both 
sides of a rule we work on the same nodes of 
a graph. Hence, the overall mechanism can be 
formalized as a graph rewriting process. 
(8) a. meet ( t ) ,  
subj (1,2) ,pro (2) ,num(2,pl) 
obj (1,3),  col league (3), 
num (3, p l ) ,  spec (3, def) ,  
adj n (1,4),  in(4) 
obj (4 ,5) ,Ber l in  (5) 
b. "FRED meet<~, ~> 
SUBJ \[~\]\[PRED pro\] 
NtJM pl J 
\[FRED colleague\] 
\[alFRED 'n<m> n }J 
ADJN \[ L ?B`\] \[~\[PRED Berli 
Applying the rule set in (7) to (5), we yield the 
result in (8a). Using the correspondence b - 
tween f-structures and term representations it is 
possible to translate back to the TL f-structure 
in (8b). This f-structure will be passed on to 
the generator which will produce the utterance 
in (2a) as one of the possible paraphrases. 
The transfer ules in (7c-h) which are defined 
as the identity transformation between SL and 
TL are actually redundant. They can be re- 
placed via a general metarule which passes on all 
singleton sets which are not covered by any ex- 
plicit transfer ule. The same metarule transfers 
also morpho-syntactic information like number 
and definiteness. 
5 Packed  Representat ions  
The following example in (9) provides a packed 
f-structure respresentation for the German sen- 
tence in (1). The ambiguous PP attachment of 
the 'in' PP is represented via a local disjunction 1 
(X=I V X=3) which binds the external variable 
X of the adjunct relation to either node I or 
node 3 representing the VP or NP attachment, 
respectively. 
(9) a. t re f fen(1) ,  
subj (1,2) ,pro (2) ,num(2 ,pl)  
obj (1,3),  ko l lege(3) ,  
num(3,pl),  spec (3, def ) ,  
adjn(X,4) , in(4) 
obj (4,5) ,Ber l in(5) ,  
(xffit v xffi3) 
b. "PRED treffen<I~l, l~> 
__\[PRED pr~\] 
SUBJ IN\[NUM pl 
\[\] 
\[PRED gonege\] 
I.SFEC 
\[\] ADJN \[ \[OBJ \[~\]\[PRED Berlin 
m_-~ v \[\]=ill 
Applying the very same transfer ules in (7) to 
the input in (9) produces the result in (10) which 
fully preserves the ambiguity between source 
and target language. 
(I0) meet( l ) ,  
subj (I, 2), pro (2),num (2,pl) 
obj (1,3),  co l league(3) ,  
num(3 ,p l ) ,  spec (3 ,def ) ,  
adj n (X ,4),  in(4) 
obj (4,5) ,Ber l in(5) ,  
(xft v x=3) 
If the generator takes the corresponding f-
structure for this packed description as input it 
will generate (1) repeated in (11) and not any of 
1The notation of using a local disjunction isused only 
for illustrating purposes. The actual implementation 
uses contexted contraints as developed and implemented 
in the XLE system (cf. Maxwell III and Kaplan (1991)). 
368 
the paraphrases in (2) because they would not 
cover both ambiguities at the same time. 
(11) We will meet he colleagues in Berlin. 
The local disjunction is not affected by the ap- 
plication of the transfer rule for mapping the 
adjunct relation to the target language because 
there is no interaction between the variable x 
and any other predicate. 
6 Loca l  D isambiguat ion  
If it is not possible to fully preserve the attach- 
ment ambiguities between source and target lan- 
guage, we need to partially disambiguate he rel- 
evant ambiguity. For example, this would be 
the case if we would translate (1) to Japanese. 
Depending whether we attach to the NP 'the 
colleagues' or to the VP we have to choose be- 
tween two different postpositions 'de' (location) 
vs. 'no' (adnominal modification). The two sen- 
tences in (12) show the Japanese translations 
together with their English glosses. 
(12) a. watashi tachi -ga berurin -de 
we NOM Berlin LOC 
dooryoo -to aimasu 
colleagues COM will meet 
(In Berlin we will meet he colleagues.) 
b. watashi tachi -ga berurin -no 
we NOM Berlin MOD 
dooryoo -to aimasu 
colleagues COM will meet 
(We will meet the colleagues from Berlin.) 
The choice of the postposition could be triggered 
via selectional restrictions in the condition part 
of the transfer ules. The rules in (13) show two 
components on their lefthand sides: the part to 
the right of # is a test on a copy of the origi- 
nal input. The test matches an adjunct relation 
where the variable Y is bound to the internal ar- 
gument. Y is coindexed with the node of the SL 
preposition 'in'. The variable X is bound to the 
external argument node where the adjunct is at- 
tached. The second element of the test checks 
the selectional restriction 2 of this attachment. 
2Instead of using explicit predicates for testing selee- 
tional restrictions the real system uses a sort system. 
The test on explicit predicates i replaced with a more 
general sortal subsumption test, e.g. sort (X)<event vs. 
sor t  (X) <obj ect.  
(13) a. in(Y) # adjn(X,Y),treffen(X) -> 
de(Y). 
b. in(Y) # adjn(X,Y),kollege(X) -> 
no(Y). 
The Japanese distinction is parallel to the case 
where the German preposition 'in' would be 
translated either with the English preposition 
'in' or the preposition 'from' depending which 
of the two meanings is taken. Hence for ease 
of exposition we will apply the two equivalent 
transfer ules in (14) for the translation of the 
'in' instead of the equivalent Japanese ones. 
(14) a. in(Y) # adjn(X,Y),treffen(X) -> 
in(Y). 
b. in(Y) # adjn(X,Y),kollege(X) -> 
from (Y). 
Since the external argument of the adjunct rela- 
tion takes part in the local disjunction (X=l V 
X=3) the application of transfer ule (14a) trig- 
gers a local resolution. This is done by applying 
the distributive law such that the selectional re- 
striction can be tested. For the first disjunct 
this yields true whereas it fails for the second 
disjunct. Rule (14b) is treated in the same way 
where only the test on the second disjunct can 
be satisfied. Both results are joined together 
and are associated with the very same disjunc- 
tion: (X=l, in(4)  V X=3, from(4)) .  
(15) a. meet( l ) ,  
subj (1,2) ,pro (2) ,num(2 ,pl) 
obj (1,3),  co l league(3) ,  
hum(3, p l ) ,  spec (3, def) ,  
adjn(X,4),  obj (4,5) ,Ber l in(5) ,  
(X=l, in(4) V X=3, from(4)) 
b. "PRED meet<~\], \[\]> 
~rPRED pro\] 
SUBJ 121\[NUM pl\] 
\[\] 
\[PrtEo colleagueq 
I.SPEC 
. 
~(ADJN {~\[OBJ ~\[PRED Bcrlin~)\] 
As a final result we get the packed representa- 
tion in (15), where the two prepositions are dis- 
tributed into the local disjunction without con- 
verting to disjunctive normal form. 
369 
The transferred packed representation corre- 
sponds to the two possible utterances in (16). It 
would be left as a task for the (human) negotia- 
tor to find out which of the two sentences would 
be more appropriate in a given context situa- 
tion. Due to the local nature of the disjunctions 
they can be handed over to an additional resolu- 
tion component in order to disambiguate hem 
or if the discourse and world knowledge is not 
sufficient for disambiguating to leave them as 
choices for the human translator. 
(16) a. we will meet he colleagues in Berlin 
b. we will meet he colleagues from Berlin 
The main advantage of such an approach is that 
the transfer rules are independent of the fact 
whether they are applied to packed representa- 
tions or not. Unpacking is done only locally and 
as much as necessary. Only the internal pro- 
cessing needs to be adapted in order to keep 
track which of the local disjuncts are processed. 
This is done with a simple book-keeping mecha- 
nism which keeps track for any individual term 
to which local disjunct it belongs. Technically, 
it is done by using the contexted constraints 
as described in Maxwell III and Kaplan (1991). 
Hence the whole mechanism can be kept fully 
transparent for the transfer ule writer and all 
of the complexity can be dealt with internally 
in the transfer ule compiler which compiles the 
external transfer ule format into an executable 
Prolog program which propagates the necessary 
variable sharings. 
In order to avoid duplicated work while try- 
ing to apply all possible transfer ule combina- 
tions the transfer system uses an internal chart 
to store all successful rule applications. Each 
predicate in the input set gets assigned a unique 
bit in a bit vector such that it can be checked 
easily that no predicate is covered more than 
once while trying to combine different edges in 
the chart. With this scheme it is also possible to 
identify the final edges because they are the ones 
where all bits are set. The overall processing 
scheme using an agenda nd the data structures 
are very similar to the chart representation as
proposed for doing chart-based generation from 
ambiguous input (cf. Kay (1996) and Shemtov 
(1996)). The main difference stems from the 
lack of explicit context-free grammar ules. In- 
stead, in the proposed setup, the left hand sides 
of transfer rules are interpreted as immediate 
dominance rules as they are used for describing 
free word order languages upplemented with a 
single binary context-free rule which recursively 
tries to combine all possible subsets of terms for 
which no explicit transfer ule exists. 
7 Summary  
In this paper we have demonstrated that a 
Shake-and-Bake inspired MT approach can be 
applied to flat f-structure respresentations. It 
has also been shown how such a transfer system 
can be combined with the treatment of packed 
ambiguities for the representation f (syntactic) 
ambiguities to achieve a truly ambiguity pre- 
serving translation architecture. Since the par- 
ticular treatment of syntactic ambiguities i or- 
thogonal to the possiblity of using underspeci- 
fled semantic representations, the same exten- 
sion could also be applied for a semantic-based 
transfer approach on flat representations a  ad- 
vocated for example in Copestake t al. (1995) 
and Dorna and Emele (1996). The advan- 
tage for doing transfer on the level of under- 
specified semantic representations is the gain of 
parallelism between source and target language 
due to the abstraction and underspecification 
of language specific idiosyncracies which are al- 
ready dealt with in the linking between syntac- 
tic and semantic information. Popular examples 
are cases of head-switching, category switching 
and diathesis etc. which disappear on the level 
of semantic representations (e.g. Dorna et al 
(1998)). The discussion of such examples can be 
found at length in the literature and will there- 
fore not be repeated here. 
The proposed transfer architecture is cur- 
rently being implemented as an extension to an 
experimental transfer MT system which is fully 
integrated and interfaced with the XLE system 
for doing parsing and generation. The appli- 
cation domain comprises the translation of in- 
struction manuals. 
Re ferences  
Hiyan Alshawi, David M. Carter, Bj6rn Gamb~ick, 
and Manny Rayner. 1991. Translation by Quasi 
Logical Form Transfer. In Proceedings of the 
29th Annual Meeting of the Association for Com- 
putational Linguistics (ACL'91), pages 161-168, 
Berkeley, CA. 
370 
Hiyan Alshawi, editor. 1992. The Core Language 
Engine. ACL-MIT Press Series in Natural Lan- 
guages Processing. MIT Press, Cambridge, Mass. 
John Bear and Jerry R. Hobbs. 1988. Localizing ex- 
pression of ambiguity. In Proceedings of the 2nd 
International Conference on Applied Natural Lan- 
guage Processing, pages 235-241, Texas, Austin. 
J. L. Beaven. 1992. Shake-and-Bake Machine Trans- 
lation. In Proceedings of the 14th International 
Conference on Computational Linguistics (Col- 
ing'9$), Nantes, France. 
J. Bos, B. Gamb~f~k, C. Lieske, Y. Mori, M. Pinkal, 
and K. Worm. 1996. Compositional Semantics in 
Verbmobil. In Proceedings of the 16th Interna- 
tional Conference on Computational Linguistics 
(Coling'96), Copenhagen, Denmark. 
A. Copestake, D. Flickinger, R. Malouf, S. Riehe- 
mann, and I. Sag. 1995. Translation using Min- 
imal Recursion Semantics. In Proceedings of 
the 6th International Conference on Theoretical 
and Methodological Issues in Machine Translation 
(TMI'g5), Leuven, Belgium. 
Michael Dorna and Martin C. Emele. 1996. 
Semantic-based Transfer. In Proceedings of the 
16th International Conference on Computational 
Linguistics (Coling'96), Copenhagen, Denmark. 
Michael Dorna, Anette Frank, Josef van Genabith, 
and Martin C. Emele. 1998. Syntactic and se- 
mantic transfer with f-structures. In Proceedings 
of the 17th International Conference on Compu- 
tational Linguistics (Coling-ACL '98), Montreal, 
Canada, August. 
Jochen DSrre. 1997. Efficient construction of un- 
derspecified semantics under massive ambiguity. 
In Proceedings of the 35th Annual Meeting of the 
Association for Computational Linguistics (ACL- 
EACL'97), Madrid, Spain. 
M. Egg and K. Lebeth. 1995. Semantic under- 
specifcation and modifier attachment ambigui- 
ties. In J. Kilbury and R. Wiese, editors, Integra- 
tive Ansatze in der Computerlinguistik. Beitrage 
zur 5. Fachtagung der Sektion Computerlinguis- 
tik der Deutschen Gesellschaft flit Sprachwis- 
senschaft (DGfS), pages 19-24, Dfisseldorf, Ger- 
many. 
Mark Johnson. 1991. Features and Formulae. Com- 
putational Linguistics, 17(2):131-151. 
Ronald M. Kaplan and Joan Bresnan. 1982. 
Lexical-Functional Grammar: A formal system 
for grammatical representation. In Joan Bresnan, 
editor, The Mental Representation of Grammat- 
ical Relations, pages 173-281. MIT Press, Cam- 
bridge, Mass. 
M. Kay, M. Gawron, and P. Norwig. 1994. Verb- 
mobil: a Translation System for Face-to-Face Di- 
alogs. Number 33 in CSLI Lecture Notes. Univer- 
sity of Chicago Press. 
Martin Kay. 1996. Chart generation. In Proceedings 
of the 34th Annual Meeting of the Association for 
Computational Linguistics (ACL'g6), pages 200- 
204, Santa Cruz, CA. 
Martin Kay. 1997. The Proper Place of Men 
and Machines in Language Translation. Machine 
Translation, 12:3-23. 
John T. Maxwell III and Ronald M. Kaplan. 1991. 
A method for disjunctive constraint satisfaction. 
In Masaru Tomita, editor, Current Issues in Pars- 
ing Techonlogy, pages 18-27. Kluwer Academic 
Publishers, Dordrecht, Holland. 
John T. Maxwell III and Ronald M. Kaplan. 1993. 
The interface between phrasal and functional con- 
straints. Computational Linguistics, 19(4):571- 
590. 
John T. Maxwell III and Ronald M. Kaplan. 1996. 
An efficient parser for LFG. In Proceedings of the 
1st LFG Conference. 
Manfred Pinkal. 1995. Radical Underspecification. 
In Proceedings of the lOth Amsterdam Collo- 
quium, pages 587-606, Amsterdam, Holland, De- 
cember. ILLC/Department of Philosophy, Univer- 
sity of Amsterdam. 
Uwe Reyle. 1993. Dealing with Ambiguities by 
Underspecification: Construction, Representation 
and Deduction. Jounal of Semantics, 10(2):123- 
179. 
E. Rich, J. Barnett, K. Wittenburg, and D. Wrob- 
lewski. 1987. Ambiguity procrastination. In Pro- 
ceedings of the 6th National Conference of the 
American Association for Artificial Intelligence 
(AAAI'87), pages 571-576, Seattle, WA. 
Michael Schiehlen. 1996. Semantic Construction 
from Parse Forests. In Proceedings of the 16th 
International Conference on Computational Lin- 
guistics (Coling'96). 
Jungyun Seo and Robert F. Simmons. 1989. Syntac- 
tic graphs: A representation for the union of all 
ambiguous parse trees. Computational Linguis- 
tics, 15(1):19-32, March. 
Hadar Shemtov. 1996. Generation of Paraphrases 
from Ambiguous Logical Forms. In Proceedings 
of the 16th International Conference on Computa- 
tional Linguistics (Coling'g6), Copenhagen, Den- 
mark. 
Hadar Shemtov. 1997. Ambiguity Management in
Natural Language Generation. Ph.D. thesis, Stan- 
ford University, June. 
Kees van Deemter and Stanley Peters, editors. 1996. 
Semantic ambiguity and underspecification. Num- 
ber 55 in CSLI Lecture Notes. CSLI Publications, 
Stanford University, CA. 
Pete Whitelock. 1992. Shake-and-Bake Translation. 
In Proceedings of the l~th International Confer- 
ence on Computational Linguistics (Coling'92), 
pages 784-791, Nantes, France. 
371 
