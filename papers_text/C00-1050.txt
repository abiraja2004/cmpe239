Kana-Kanji Conversion System with Input Support 
Based on Prediction 
Yumi ICHIMURA,  Yoshimi SAITO, Kazuhiro K IMURA and Hideki HIRAKAWA 
I Iuman Interface l ,aboratory  
Corporate  Research & Development  Center, TOSt t IBA  Corp. 
1, Komukai-Toshiba-cho,  Saiwai-ku, Kawasaki-shi ,  
Kanagawa,  212-8582 Japan 
yumi. i chimura@t oshiba, co. j p 
Abst ract  
We propose ~ kana-ka'~ji conversion systeln with 
input support based on prediction. This sys- 
tem is composed o\[' l,wo pm'ts: prediction of 
succeeding ka'1~:ji charac/;er st, rings from l,yped 
l,:ana ones, and ordinary k(vna-lca'l~(\]i conversion. 
It automatically shows candidates of kanji char- 
acter strings which the user intends to input. 
Ore' prediction method features: (i)Arbitrary 
positions of typed t,:ana character slarings are re- 
gm'ded as l,he top of words. (ii)A system dictio- 
nary and a user dictionary are used, and eadl 
entry in the systcln dictionary has (:erl, ai.nly fac- 
tor calculated fl'om the frequency of' words in 
corpora. (ill)Candidates are estimated by cer- 
tainty factor and 'us@l, lness factor, and likely 
ones with greater \['actors than l;hresholds are 
shown. The proposed system could reduce the 
user's key inlmt operations to 78% from the 
original ones in ore' experinmnts. 
1 In t roduct ion  
TOSHIBA developed the world's first Japanese 
word processor in 1978. Unlike languages based 
on an alphabet, Japanese uses /,housands of 
Ica nji characters of varying comp\]exity. Hence, 
l,o arrange all of l~a'~:ii chm'acl;ers on keyboard 
is; difficult. On the other hand, kana dlarac- 
ters which are phonetic scripl,s of Japanese have 
83 variations; these can be arranged on key- 
boa '& As a result, conversion from kana no- 
tations to kanji ones, whal, is called kana-ka,~:ji 
conversion, has been used. Since Japanese is 
not writl,en separately by words, segmental,ion 
of typed kana characl,er strings has ambiguil,y. 
And ~m ambiguil,y in conversion exists, too; a 
kana notation may correspond l,o some different 
t:a, nji notations. These make t,:ana-kanji conver- 
sion challenging. 
We have made efforts l,o raise a precision of 
kana-kaTt:ji conversion, thinking l,h~t high pre- 
cision can provide a better input enviromnent 
for the user. A t)rccision of our kana-kanji con- 
version system reaches 95-98% for several kinds 
o\[' texts in our previous experiments. Neverthe- 
\]ess, this approach is not; enough in the situa- 
tions where fasl; typing is hard, e.g., lbr begin- 
ners who m'e not familiar wil,h keyboard or for 
palm-size comlmters. Thus, new method to re- 
duce key input; operations is needed. 
We propose a k(vna-kanji conversion system 
witll input support based on prediction. This 
system is composed o\[' two parts: prediction of 
succeeding ka'nji character strings t\]'om typed 
kana ones, and ordinary hrvna-kanji conversion. 
It; automatically shows candidates of ka'nji char- 
acter strings which the user intends to input. 
The candidates change as /;lie usc, r inputs ka.na 
characters. If no approt)riate ctloice is pre- 
senl;e(t, the candidates aul;Olnatictd\]y disappear 
when the ne?t kana character is entered. Our 
system, l,here\['ore, can be used in the same man- 
ner as an ordinary ka'na-kanji conversion sys- 
tem, and allows the user to save time and efforts 
for key input without learning new key opera- 
tions. 
We have been considered two issues to gener- 
ate accurate candidates: 
(i) How Co determine where t;yped kana char- 
acter strings are segmented; since Japanese is 
not written separately by words, determination 
of positions where words start is needed to re- 
trieve dictionaries. 
(ii) How to determine when prediction candi- 
dates are presented; if all of retrieval results are 
always shown, a sysl,em cannot be convenielfl,. 
Surveying previous works Dora the view on 
above issues, we found l,hal, the Reacl,ive Key- 
board has been proposed (Darragh el, al., 1980). 
It accelerates typewritten communication with 
341 
a computer system by predicting what the user 
is going to type next. In this system, the top 
of typed ct~aracter strings is regarded as the top 
of words, because English is written separately 
by words; the issue of segmentation f character 
strings does not occur. 
On the other hand, in previous works for 
Japanese, a predictive pen-based text input 
method has been proposed (Fukushima nd Ya- 
lnada, 1.996). In this system, character strings 
are input by h~md-writing on LCD panel. Since 
the user usually inputs not only by kana but 
also by t~anji and an alphabet, entered charac- 
ter strings are segmented with the help of the 
wu-iety of characters. Thus, the issue of segmen- 
tation is not considered. 
The POBox (Pen-Operations Bused On eX- 
ample) which is a text input method tbr pen- 
based computers has also been proposed (Ma- 
sui, 1998). It shows succeeding candidates from 
cl~aracter strings input by software keyboard. 
Arbitrary positions of input character strings 
can be regarded as the top of words, and re- 
trieval results are always shown as candidates; 
the prediction ordering is based on the user's 
previous choice. Since input speed by pen is 
not faster than that by keyboard, time to choose 
candidates i shorter than that to input c.harac- 
ters. Hence, even if many candidates are shown, 
this n~ethod is effective for pen-based comput- 
ers. It is, however, inefficient for ordinary key- 
board. 
We propose a system with following fea- 
tures: 
(i) Arbitrary positions of typed kana character 
strings are regarded as the top of words. 
(ii) A system dictionary and a user dictionary 
are used, aud each entry in the system dictio- 
nary has certainty factor calculated from the 
frequency of words in corpora. 
(iii) Candidates are estimated by certainty fac- 
tor and useful'hess factor; and likely ones with 
greater factors than thresholds are shown. 
These features provide an cfl3cicnt Japanese text 
input environment for ordinary keyboard with- 
out learning new key operations. 
Section 2 shows an example of text input us- 
ing the proposed system. Section 3 explains an 
input support method based on prediction. Sec- 
tion 4 shows efficiency of our system by means 
of experiments. Section 5 describes conclusions. 
2 Example of Text  Input  
Figure 1 shows an example of text input using 
tile proposed system. Suppose that tile user in- 
tends to input a sentencc , , , ,v,~,~ 
2- co -e ~" e$ & N ~ ~ ~ ~- (we rcqucst yore" atten- 
dance at the following meeting)", typing ha.ha 
/u b ~ 9 ~ ~ ~. ~- (katcino kaigiwo kaisai shi- 
maswnodc gosanshuu ncgaimasu)". When the 
user types "\]~' (ha)", "~ (hi)",  and "CO (no)" 
keys, the system antomatically opens a predic- 
tion menu window just below the typed char- 
actcrs, and shows two candidates in the menu 
window (Fig.l(a)): 
(at the following address, modest .... ) 
(al. the following address, modest .... ) 
The first candidate is high\]ighted. If the menu 
window contains an appropriate candidate, the 
user can choose it by cursor; otherwise the user 
can continue ntering the next characters. Sub- 
sequently, when "\]0, (lea)" key is typed, the 
predic.tion menu window disN)pears (Fig.l(b)). 
When "~ (i)" and "~" (gi)" keys are typed, the 
system automatically opens a prediction menu 
window again, and shows %ur new candidates 
(Fig.l (e)): 
(we request your a.ttenda.nce a.t the meeting) 
(we hold the meeting) 
(we hold the meeting) 
(we hold the meeting) 
Here the first one is what the user just wants; 
the user enters select key, thcn the prcdiction 
menu window disappears, and dmsen candidate 
is insertcd in the cdit area. If remaining tcana 
charactcr string wtfich was not included in the 
chosen cundidate xists, l~a,na-l~anji conversion 
starts automatically; the first three Icana c.har- 
acters of this sentence "?a~  ~ (l~ahino)" is con- 
verted to tcanji notation 'q'~,co (the following)" 
(Fig.l(d)). This is the first result of t~ana-kanji 
conversion, so that the user can d~ange it to 
others. An overline of thc conversion rcsult in 
Fig.l(d) shows that this result is not fixed yet. 
In above example, while 27 ~ana d~aracters 
are needed to input in ordinary l~ana-t~anji con- 
342 
(a) 
I~A l : : l -w~ ~?j  U4 118 0 I0 1- l -  I 
?o) 
~?.~ 1/4 1/8 0 10 1- | -  i 
(c) 
NA ~- :z -~ ~.?  I/4 I/8 0 I0 I .  I -  1 
(d) 
NA H-w~ f~3 114 1/8 0 10 t - l - I  
Figure 1: Example of Japanese text input using 
word processor with input support. (a)";~J '', "-~", 
and "03" keys are typed. (b)"~ ~'' key is typed, sub- 
sequently. (e)"~ ~'' and "{s'" keys are typed, subse- 
quently. (d)The first candidate in (c) is chosen. 
version, our system can reduce the input of 21 
~:ana characters, "*L ~b' ~ ~ t~ ~ ~ b ~ J-c0 ~ "~" ~ \]u b e~ 
9 talo~  ~ J- (wo kaisai shimasunode gosanshuu 
negaimasu)"; only 6 kana characters are needed 
to input. 
3 Input Support Method Based on 
Prediction 
In this section, an overview of the system is 
shown. Then dictionaries used in the system, 
factors for estimation of candidates, and user 
learning are described. 
. . . . . . . . . . . .  -\[ InLut Character St ings 1 
Kana-Kemji Coi~,'elsiot~ 
Ka,~a-Kanji Conve,sion '~ l -~~. '~~ 
tJ_ Input Prediction U it 
Chomc ter Sub-strings \] ~_ __~ 
F dictionCandidates I I 
"1 Estimation u~t I ~ . . . . . . . . .  Y -.-J 
-~  UserLeanmlgUldt } - - J  
(Kam-K~ji Conversion \] Adopted byUs2;-"' \[ C~ida~s ) 
Figure 2: Diagram of the proposed system? 
3.1 Overv iew of  the  sys tem 
Figure 2 shows a d iagram of the proposed sys- 
tem. It is composed of a kana-hanji conversion 
unit and au input prediction unit, and the latter 
has following four sub-units: 
Character Sub-strings Generation Unit(a) gener- 
ates character sub-strings obtained from seg- 
mentation of typed kana character strings. 
Dictionary Retrieval Unit(b) retrieves prediction 
dictionaries using character sub-strings gener- 
ated by Unit(a). 
Prediction Candidates Estimation Unit(c) calcu- 
lates certainty factor and usefulness factor for 
all of retrieved results by Unit(b) to estimate 
candidates? 
User Learning Unit(d) extracts phrases adopted 
by the user, and automatically registers them 
into the user dictionary. 
3.2 P red ic t ion  D ic t ionary  
Two kinds of dictionaries are used as a predic- 
tion source: 
(i) System Dic t ionary  consists of high frequent 
phrases. 
343 
(ii) User Dictionary consists of phrases learned 
fl'om texts which the user typed before. 
Ead~ dictionm'y includes words and phrases 
without distinction. This is because Japanese 
is not written separately by words, and high 
fl'equent phrases consist of various grammatical 
forms, sud~ as single word or two words. And 
eadt entry has kana notation (phonetic script) 
and kanji one. 
3.3 Est imat ion of  Predict ion 
Candidates 
Two kinds of factors are used to estimate can- 
didates: 
(i) Certainty Factor indicates how certain a can- 
didate is. 
(ii) Usefulness Factor indicates how useful a can- 
didate is. 
These two factors vary as the user inputs a 
character. Retrieval results are sorted in order 
of these factors, and only ones with greater fac- 
tors than thresholds are shown as candidates. 
3.4 Calculat ion of  Certainty Factor 
Certainty factors fox" entries in the system dic- 
tionary and the user dictionary are calculated 
in different manner. 
First we make some notational conventions. 
A typed kana character string is denoted by S, 
which has right sub-strings S; (1 < i < L(S)). 
L(x) is the length of a string x. An entry in 
the dictionary is denoted by W, which has kanji 
notation WH and kana notation Wy. 
3.4.1 Ent ry  of  System D ic t ionary  
When S is typed, certainty factor fox' W in the 
system dictionary is calculated as follows: 
Certainty f actor(WlS ) = 
Ft~(WH) 
F l ( (S i )  ' 
O, 
when S has a right sub-string Si 
whid~ partiMly matches with the 
head of Wy 
otherwise 
where F~:(WH) is the frequency of WH in kanji 
notation corpus, and FK(&) is the fl'equency 
of Si in kana notation corpus corresponding to
kanji one. 
For example, certainty factor :\['or "~' ~ ~-q':'~ 
~ (ka,na-kanji conversion)" is calculated using 
the frequency in Table 1: 
Table 1: Frequency for "\]a~ta:f~q':'~f~" in two 
corresponding corpora: kanji notation corpus with 
155,000 characters, and kana one with 227,000 char- 
acters. 
Character strings Frequency in 
kana notation corpus 
iJ~ 6,720 
~a~ 191 
ia~ Y'a: Yo~  12, 87 
\]a' ~a: \]o' tu 12, ',tu 77 
IJ'/a Io' A~ D ~,AJ IJ' 76 
iJ' ~a: io' k~ 15 ",tu lo' /u 76 
Clmrac/er strings Frequency in 
kanji nota.tion corpus 
Certainty f ac lo r (~a '~.~f4  I ?J't*. ) 
= 70/191. = 0.366 
Ccrl, ai'n, ty .f actor(ia' ~ "?~-~:~~ I io' re: "h' ) 
= 70/114 = 0 .614  
The values of certainty factor corresponding 
to every character sub-strings are described in 
tim system dictionary, and are read out at re- 
tri eval. 
3.4.2 Entry of  User Dict ionary 
Since t.he system cannot infer which phrases 
would be registered into the user dicl, ionax'y, cal- 
culation of certainty factor \['or an entry in the 
user dictionary from corpora may 10e impossible. 
Hence, when S is typed, certainty factor fox' W 
in the user dictionary is calculated as follows: 
Certainty f actor (W IS) = 
O, 
when S has a right sub-string & 
which partially m attires with the 
head of Wy 
otherwise 
where N(Si) is the number of entries whose 
kana notations tart from Si in the user dictio- 
nary, and c~ is a constant o give greater factor 
tbr entries in tile user dictionary than that in 
the system dictionary; i.e., tile user dictionary 
has priority. 
344 
3.5 Ca lcu la t ion  o f  Use f idness  Factor  
An increase in tile length of typed tca'n,a d~m'- 
acter strings raises the certainty on prediction, 
but  lessens the usefulness. Hence, 'us@d'n, css 
factor is introduced in addit ion to certain, ty fac- 
tor. When S is typed, "us@tl'ness factor for W 
is calculated as tbllows: 
Use f uI,n.ess f actor(WlS ) = 
{ 
O, 
when S has a right sub- 
string & which partial ly 
matches with the head 
of Wy 
otlmrwise 
3.6 User  Learn ing  
Aft, re' the user adopts prediction or t:a~ta-ha.n:ji 
conversion cmldidates, words wit;ll longer length 
than threshold and phrases which sat, isfy given 
grammatical  conditions are extracted; these are 
automaticMly registered int, o the user dictio- 
nm'y. 
Por example, suppose, that  the user intends 
(;() input a phrase """*'~ 
mcet,ing)", typing 1,:a'na chm'acl, ers "#' v~g V- b 
r;,o ~ ~ g- ~ (ko.igi'ni sh,'ussetci sn, ru,)". When "#' 
(ka)", %~ (i)", and "~" (gi)" keys ~we typed, \['om' 
candidates are sllowu in the predict.ion metal 
window (Fig.l (c) ). IIcre tlm predict;ion menu 
window dose not cont:ain a candidate wlficll 
the user wants, the, ll tlm user conl;imms enter- 
tug the next; l~:a'n,a characters "k  b r;,v ~ ~ 3- ,5 
('hi sh'ussehi s'uru,)" and l,:a'n,a,-/,:an:ji cmwersion 
key. As a result, bb' ~ ~-~" V- b r;,-o -g ~ 3- ~ (l,;a, igini 
,stu~ssehi suru)" is convcrt, ed to ~,aL,l+),~,3-~ 
(attend 31; the meeting)".  
When this conversion candidate is adopted, 
two words ml(t a phrase are regist, ered into the 
user dictionary: ~N (meeting)", "/15/,'i~g-~ (ag- 
~_~'~L ,I,))I,~Y ~ (M;tend at, the meet- tend)",  ~md "  - " "" 
ing)". 711" 7~, (lea)", %' (i)", and "~" ((.It)" keys 
I I I 't;  ')~ are typed after this learning, "~q~V-,bI, u 3-~ is 
contained in the predict ion menu window. 
4: Exper iment ,  s 
Efficiency of the proposed system is shown by 
means of' experilnents. 
4.1 Eva luat ion  Measures  
Neither st;art key for tn'ediction or cancel key 
for prediction candidates are needed. And st- 
leer, key to ~dopt. candidates i needed in both of 
t)rediction mid ordinary ha.ha-ha,nit conversion; 
we need not; tn~ke into account of l;he input of 
select; key. tIence, the length of complemented 
hana c, haracters is just a decrease in key input; 
operations. Two evaluation measures, an opera- 
tion ratio and a precision, are defined as follows: 
P-Q 
Operation, ratio = p x 100 (%) 
R 
Precision, = S x 100 (%) 
where P is the length of the original ha'ha 
text;, Q is the length of ha'ha chm'acters com- 
plemented by prediction~ R is the number of 
sllown prediction menu windows contMning ap- 
propriate choices, and S is tile number of ~dl of 
shown prediction menu windows. 
4.2 Data  and  Cond i t ions  
Two kind of texts, a paper on natm'al anguage 
processing and a let;ter, were used in ore" ex- 
tmriments; these l, exl, s were not included in the 
corpora used to calculate certainty factor: A 
system dictionary with 37,926 entries was used. 
Thresholds of certai'nl, ll factor mid 'us@d.ness 
fa, ctor were 0.1 and 2. q~he numl mr of candidates 
present.ed in ~ predict;ion mmm window was five 
or less. If ~ prediction menu window contained 
ml ~l)propri~t,e ('hoice~ it, was ~lw~ys adopted. 
With ~v view to ex~mdnin 8 eacl~ contri lmtion o\[' 
the system (tict;ionary and user learning, exper- 
iments were carried out in three cases: 
(i) Only the systeln dictionary was used. 
(it) Only user learning was used. 
(iii) Bot;h t\]tc syst, em dict ionary mid user learn- 
ing were used. 
~Ve calculated the lengt;h of complemented ha'ha 
du~r~,ct;ers automaticMly. An operation ratio 
and a precision were recorded at; every input 
of 4,500 lcana characters. 
4.3 I I ,esults 
Pigm'e 3 shows experimental results. 
Decrease in key input operations: Using both the 
system dictionary and user learning, for the pa- 
per, an operation ratio was 97.3-78.6% (line 
(r3) in Fig.3(a)) and a precision was 20.0 -26.7% 
(line (p3) in Fig.3(c)); for the letter, an opera- 
tion rat;k, was 80.7 78.1% (line (r3) in Fig.3(b)) 
and a precision was 26.1--29.6% (line (p3) in 
345 
100% 
95% 
,.--., 
90% 
85% 
0 
0 
~'~ 65% 
0 60% 
55% 
50% i t i t i T T t 
o (~ o o o o o o o o 
o o o o o o o o o o 
00Pal)er ? the llUlllber of  
input characters 
o 
0 
t~ 
? 
100% 
95% 
90% 
85% 
80% 
75% 
70% 
65% 
60% 
55% 
50% 
,' "~- -~.  - - . .  
r , r i i i i i 
(b) Let ter  the nttmber of 
input chracters 
. . . .  ( r l )Sys tem Dict i0naO" 
. . . . . . .  ( r2 )U  ser  Learn ing  
- -  ( r3 )System D ic t ionary  + 
U set  Learn ing  
50% 
45% 
t0% 
"--" 35% 
30% 
0 25% 
"~ 20% 
10% 
5% 
f--2__t=--_==~ 
, /  
50% 
45% 
40% 
/- -"  35% 
30% 
,~ 25% 
G'2 
"~ 205'; 
'.I) 
t 15% 
10% 
5 % 
-- . . . . .  - "  _ : .  - . . . . . .  
0% t r r , ~ ~ , r 0% , ~ , ~ , r , , 
e3 ~ ~3 o u~ ~ v5  o ~3 o e5  o v5  o o ~ c ,  e5  cD 
"* ~" ?21 ~ ~ ~q ~ ~ ~ ~ ~ ~ +.; ~ +~, ,-, .+ .t  
(c) l?~q)er " the mtmber of  (d) Letter " the munber of  
input characters input characters 
. . . .  (p  I )Sys tem D ic t ionary  
. . . . . . .  (p2)User  Learn ing  
- -  (p 3 )System D ic t ionary  + 
User  Learn ing  
Pigure 3: Experimental Results. (a.)Operation ratio for the paper. (b)Operation ratio for the letter. 
(c)Precision for the paper. (d)Precision for the letter. 
Fig.3(d)). When 45,000 ka~a characters were 
typed, an average of the operation ratio was 
78%, that is, a 22% decrease in the original op- 
erations was obtained; an average of the pre- 
cision was 25~)~, that is, a quarter of shown 
prediction menn windows contained appropri- 
ate choices. This precision was enough to realize 
comfortable operations. 
Contribution of the system dictionary: Using only 
the system dictionary, for the paper, an opera- 
tion ratio was 97.6-96.6% (line (rl) in Pig.3(a)), 
that is, a 2.4-3.4% decrease in the original op- 
erations was obtained; for the letter, an opera- 
tion ratio was 90.6-78.8% (line (rl) in Pig.3(b)), 
that is, a 9.4-21..2% decrease in the original op- 
erations was obtained. As a result, the sys- 
tem dictionary is effective for a text like a let- 
ter with idioms or common phrases, because 
346 
the system dictionary includes a lot; of such 
phrases. Furthermore, eomt)ared a t)recisiou s- 
ing both the system dictionm'y and user lewcning 
wi/;h that using only user learning, the \['orlner 
was worst for the paper (lines (t)2) and (p3) in 
Fig.ate) (d)). As a result, for some kind of texts, 
the system dictionary not only is ineffective but 
also reduces a prec.ision. 
Contribution of user learning: User learning had 
an effect tbv an operation ratio aI'te.v more than 
9,000 ka'na chm'acters were typed (lines (r2) in 
Fig.(a)(b)). In fact, if the user types about ten 
pages of texts, a 15 20% decrease in the original 
ot)erations can be obtained. 
5 Conc lus ions  
We proposed a l~ana-ka'nji (:onversion system 
with input sut)port based (m prediction. Ore' 
system thatures: 
(i) It; shows prediction cmldid~tes of 1,:a'@i char- 
acter strings which the 11sev int, ends to input 
without any special key operation. I\[' no apt)ro- 
priate choice is presented, the candidates disap- 
pear automatically when the next l,:a'na charac- 
ter is entered. 
(it) Arbit;rary positions o\[' typed l:ana cJlavacter 
str i l lgS are  reg~w(le(t as the top of words. 
(iii) A system dietio1~avy and a user dictionary 
ave used, and each entry in the system (ticLio- 
nary has certainty factor calculated :from the 
frequency of words in corpora. 
(iv) Candidates ave estimated by certainty fac- 
tor and use.fill.hess factor, and likely ones with 
greater \['actors than thresholds rare shown. 
(v) ~Zords and phrases are extracted \['rein typed 
texts, and registered into the user dictionary au- 
tomatically. 
The proposed system could reduce the. user's 
key input operations to 78% h'om the origi- 
nal ones in the experiments using two kinds of 
texts. This system was built into the TOSII IBA 
Japanese word processor, the JW-8020, which 
was released in autumn 1.998 (Fig.4). 
To raise a precision by field information and 
context of texts is our lhtm'e work. 
Figm'e 4.: TOSHIBA Japanese word processor, the 
JW-8020. where the proposed systenl was built. 
Profet, a new generation of word prediction: '\n 
eva.luation study. ill Proceedings of I,h,e A CL 
Wo'rt,;shop on Natu, ra, l Language Proccssin 9 fin, 
Co'm, munication Aids, pages 23-28, July. 
John J. Darragh, Ian H.Witten, and Ma.rk L. Ja.mes. 
1980. The reactive keyboa.rd: A predictive typing 
aid. IEEE Corn.purer, 23(11):41-49, November. 
Toshikazu Fukushinm a.nd Hiroshi "~amada. 1996. A 
predictive pen-based ja.pa.nese text input method 
and its (,valuation (in japanese). Journal of \['Jhlbr- 
"m.atio'n Processing Socie*y of ,Japan,, 37(1):23 30. 
Nestor Garay-Vitoria. and .lulio G. Abas(-al. 1997. 
\?ord prediction for inflected languages, a.pplica- 
lion to basque la.nguage. In Prtmcedi.nfls of the 
ACL Worl,:sh.op on Natural Lan:f~m,.qe Proeessin:l 
for Co'm,'m,u'nication Aids, pages ')9 35, July. 
Toshiyuki Masui. 1998. An efficient text input 
nlelhod for pen-based computers. In Proceed- 
i'ngs of lh.c A CM Conference on Hum, an Factors 
in Comgrttli'ng Systcm, s (CHI'98), pages 328-335. 
.:\ ddison-\?esley, April. 
Masa.ka.l.su Sugimoto. 1997. Input scheme for 
ja.panese text with shk keycard (in japa.nese). In 
\[PSJ S\[GMBL Report No.l, pages 1-6, May. 
Re ferences  
Alice Ca.rlberger, Joh~m C~rlberger, Timt Ma.gnu- 
son, Sira, E. Palazuelos-Cagigas, M. Sha.ron Hun- 
nicutt, and Santiago Aguilera Naya.rro. 1997. 
347 
