? ?The Elimination of Grammatical Restrictions in a String Grammar of English 
M. Salkoff and N. Sager 
Institute for Computer Research in the Humanities 
New York University, New York 
i. Sun~nary of String Theory 
In writing a grammar of a natural language, one is faced with the problem 
of express ing rammatica For example, in the sentence form 
N V N (N, noun: V, verb), the subject N and the verb V must agree in 
number: The boy eats the meat; ~ The boys eats the meat. Or, in the 
sequence Q N 1 P N 2 (Q a number; P, preposition), e.g., five feet in length, 
N 1 and N 2 are of particular subclasses: ~ five feet in ?beauty. One of the 
theories of linguistic structure which is particularly relevant to this problem 
is linguistic string analysis?\[1\]. In this theory, the major syntactic 
structures of English are stated as a set of elementary strings (a string is 
a sequence of word categories, e.g., N V____NN, N V P N, eta). Each sentence 
of the language consists of one elementary sentence (its center string) plus 
zero or more elementary adjunct strings which are adjoined either to the right 
or left or in place of particular elements of other elementary strings in the 
sentence. 17.~ 
The elementary strings can be grouped into classes according to how and 
where they can be inserted into other strings. If Y = X 1 X 2 . . . X n is 
an elementary string, X ranging over the category symbols, the following 
classes of strings are defined: 
-1- 
~X left adjuncts of X: adjoined to a string Y to the left of X in Y, or 
to the left of an ~X adjoined to Y in this manner. 
r X right adjuncts of X: adjoined to a string Y to the right of X in Y, 
or to the right of an r X adjoined to Y in this manner. 
nX replacement strings of X: adjoined to a string Y, replacing X in Y. 
Sy sentences adjuncts of the string Y, adjoined to the left of X 1 or 
after X i in Y (l~ i ~ n), or to the right of an Sy adjoined to Y 
in this manner. 
in Y (i< i < n), or to Cy, i conjunctional strings of Y, conjoined after X i _ _ 
the right of a Cy, i adjoined to Y in this manner. 
z center strings, not adjoined to any string. 
These string-class definitions, with various restrictions on the repetition 
~and order of members of the classes, constitute rules of combination on the 
elementary strings to form sentences. 
Roughly speaking, a center string is the skeleton of a sentence and the 
adjuncts are modifiers. An example of a left adjunct of N is the adjective 
green in the green blackboard. A right adjunet of N is the clause whom 
we met in the man whom we met. A replacement formula of N is, for example, 
what he said in the sentence What he said was interesting. The same sentence 
with a noun instead of a noun replacement string might be The lecture was 
interesting. Examples of sentence adjuncts are in general, at this time, 
since he left. The c strings have coordinating conjunctions at their head. 
An example is but left in He was here but left. Examples of center strings 
are He understood and also We wondered whether he understood. 
The grammatical dependencies are expressed by restrictions on the strings 
as to the word subcategories which can occur together in a string or in strings 
related by the rules of combination. Thus, in the center string N 1 V N2, the 
-2- 
grammatical dependency mentioned above is formulated by the restriction: if 
f 
N1 is plural, theh V does not carry the singular morpheme -_ss. The string 
grammar with restrictions gives a compact representation of the linguistic 
data of a language, and provides a framework within which it is relatively 
simple to incorporate more linguistic refinement, i.e., more detailed 
restrictions. J 
One may ask whether it is possible to write such a string grammar with- 
out any restrictions at all, i.e., to express the grammatical dependencies 
(restrictions) in the syntactic structures themselves. In the resulting 
restrictionless grammar, any elements which are related by a grammatical 
dependency w i l Lbee lements  of the same elementary string. No grammatical 
relations, other than those given by the simple rule of string combination, 
obtain between two strings of a sentence. The result of this paper is to 
demonstrate that such a restrictionless grammar can be written \[4\]. 
In order to obtain a restrictionless form of a string grammar of English, 
we take as a point of departure the grammar used by the computer program for 
string decomposition of sentences, developed at the University of Pennsylvania 
\[2,3\]. This gran~nar is somewhat more detailed than the sketch of an English 
string grammar in Ill. A summary of the form of the computer grammar is 
presented below in section 2. In section 3 we show how the restrictions can be 
eliminated from the gran~nar. 
An example of a typical output obtained for a short sentence from a text 
of a medical abstract is shown in Figs. 1 and 2. The decomposition of the 
sentence into a sequence of nested strings is indicated in the output by the 
numbering of the strings. As indicated in line 1., the sentence consists of 
the two assertion centers in lines 2.and ~ ~ conjoined by and. The line B ? 
-3- 
contains a sentence adjunct th~_~) on the assertion center as a whole . The 
assertion center 2 . is of the form N V A : Spikes would be effective . The noun 
spikes has a left adjunct (such enhanced) in line 5 - ? as indicated by the 
appearance of 5 . to the left of spikes . The object effective has a left 
adjunct ~9_~)  in line 6 . and a right adjunct in line 7 ? In the same wsy, 
each of the elements of the adjunct strings may have its own left and right 
adjuncts. Line IO . contains an assertion center in which the subject and the 
modal verb (woul____dd) have been zeroed. This zeroing is indicated in the 
output by printing the zeroe~ element in parentheses. 
The difference between the two analyses in Figs. i an~ 2 lies in the 
decomposition of the sequence in initiating synaptlc action. In the first 
analysis (Fig. I), this sequence is taken as a P_~N right adjunct on 
effective, where initiating synaptlc is a left adjunct (onaction) of the 
form of a repeated adjective (parallel to escaping toxic in the sequence 
in eseap.ing toxic gases) . In the second analysis (~ig. 2), this same 
sequence is taken as a ~ right adjunct of effective, where initiating 
/ 
is the Ving, and synaptic action is the Object of initiating. 
-4- 
2. The Computer String Grammar. 
In representing the string grammar in the computer, a generalized grammar 
string is used 5 which is defined as 
(i) Y = Y1 / Y2 / " " " / Yn 
where 
(2) Yi = Yil Yi2 " " " Yim 
and 
(3) Y-. = Y' IS where Y' is a grammar string like Y. 
This system of nested gram~nar strings terminates when one of the grammar 
strings is equal to an atomic string (one of the word-category symbols). The 
Y. are called the options of Y, and each option Y. consists of the elements Y... l l 13 
Not every option of a grammar string Y will be well-formed each time the 
sentence analysis program finds an instance of Y in the sentence being analyzed. 
Associated with each option Yi is a series of zero or more tests, called 
restrictions. 'If RiP is the set of tests associated with Yi then the grammar 
string Y can be written: 
(4) Y = RIY I / R2Y 2 / . . . / RnY n 
A restriction is a test (which will be descrfbed below) so written that if it 
does not give a positive result its attached option may not be chosen. 
All of the restrictions in the grammar fall into two types: 
TypeA:  The restrictions of type A enable one to avoid defining many 
similar related sets of grammar strings. The options of the grammar string Y 
have been chosen so that Y represents a group of strings which have related 
-5- 
linguistic properties. This allows the grammar to be written very 
compactly, and each grammar string can be formulated as best suits 
the linguistic data. However, when a grammar string Y appears as a 
Y' . of some other string Y' ij , some of the options of Y may lead to 
non-wellformed sequences. In order to retain the group of options of 
Y and yet not allow non-wellformed sequences wherever options of Y 
which would have that effect are used, we attach a restriction of type A 
to th0s~ options of Y. 
For example, let Y be 
Y = Y1 / Ra Y2 / " " " (~) 
where 
(6) 
and 
YI = which Z V (e.g., which he chose) 
Y2 = what E V (e.g., what he chose) 
Then Y can appear in the subject Z of the linguistic center string CI: 
(7) Cl = z v n 
This yields Which he chose was important; What he chose was impDrtant. 
As it is defined here, Y can also be used to represent the wh-clauses 
in the right adjuncts of the noun: 
(8 )  Y '  = rN  = . . . / Y / . . 
but in r N only the which option of Y gives wellformed sequences: 
3 the book which he chose 
the book what he chose 
-6- 
Hence a restriction R a is attached to the what option of Y (eq. 5) whose 
effect is to prevent that option from being used in r N. 
Type B: With some given set of rather broadly defined major categories (noun, 
verb, adjective, etc.) it is always possible to express more detailed linguistic 
relations by defining sub-categories of the major categories. These relations 
then appear as constraints on how the sub-categories may appear together in 
the grammar strings Y. 
If some element Yij of Yi is an atomic string (hence a word-category 
symbol) representing some major category, say C, then R b may exclude the sub- 
category Cj as value of Yij if some other element Yik of Yi has the value C k. 
Y ikmay also be a grammar string, in which case Rbmay exclude a particular 
option of Yik when Yij has value C.. 
The restrictions R b may be classified into three kinds: 
(a) Between elements of some string Y. where the Y.. correspond to elements 1 i~ 
of a linguistic string. 
For example, 
A noun in the sub-category singular cannot appear with a verb in 
the sub-category plural. ~ The man agree. 
Only a certain sub-category of adjective can appear in the sentence 
adjunct P__AA : in general, in particular, ~ in ha~py. 
(b) Between a Yij and a Yik where Yij corresponds to an element of a linguistic 
string and Yik corresponds to a set of adjuncts of that element. For example, 
In rN, the string to V 2 cannot adjoin a noun of sub-categoryN 2 
(proper names): the man to do the job ~ John to do the ~ob. 
-7- 
Only a certain adjective sub-category (e.g., re~/.e~, available) 
can appear in r N without any left or right adjunct of its own: 
the people present ; ~ the people happy. 
(c) Between Yij and Yik ' where one corresponds to an element of a 
linguistic string and the other corresponds to an adjunct set which can 
repeat itself, i.e., which allows 2 or more adjuncts on the same ling- 
uistic element. These restrictions enable one to express the ordering 
among adjuncts in some adjunct sets. For example, 
Q (quantifier) and A (adjective) are both in the set 
?N ' the left adjuncts of the noun. However, _Q can 
precede A but A cannot precede _Q when both are adjuncts 
of the same N in a sentence: 3 Q A N e.g., five green 
books , but ~ A Q N e.g., green five books. 
The string grammar defined by eqs. i-3, together with the atomic 
strings (word-category symbols) have the form of a BNF definition. 
The system with eq. 4, however, departs from a BNF definition in two 
important respects : 
(a) it contains restrictions (tests) on the options of a definition; 
(b) the atomic strings (word-categories) of the grammar have 
sub-classifications. 
With the elimination of the restrictions, the computer grammar will again 
have the form of a BNF definition. 
-8- 
3. Elimination of the Restrictions 
The restrictionless string grammar is obtained from the grammar 
described above by the methods of (A) and (B) below. Initially (in 
this paper), conjunctional strings have not been included in the 
restrictionless grammar. We estimate that the addition of conjunctions/ 
strings will increase the size of the restrictionless grammar by a 
factor of about 5. 
(A) The linguistic strings represented in the computer graz~,ar 
are reformulated in accordance with the following requirement. Given 
any utterance of a language containing A . . . B . . . , where a 
grammatical dependency obtains between A and B , the elementary strings 
of a restrictionless string grammar are defined so that A and B appear 
together in the same linguistic string, and any iterable sequence 
between A and B is an adjunct of that string. Iterable sequences of the 
type seemed to begin to in It seemed to be~in to surprise him that we 
worked seriously , or is said to be known to in It is said to be known 
to surprise him that we worked seriuusly are analyzed as adjuncts. 
If we place such sequences among the left adjuncts of the verb, ?v ' 
then the sentences above can be put in the form 
(9) It~_? v surprise him that we worked seriously 
-9- 
~v = seemed to begin to ; is said to be known to ; etc. 
However, when the adjunct ~v takes on the value zero (as can all adjuncts, 
by definition), then (9) above becomes the non-grammatical sequence It 
surprise him that we worked seriously. This happens because the first 
verb of ~v (seemed or is__) carries the tense morpheme, and the latter 
disappears when ~ = O. We separate the tense morpheme from the verb, and 
V 
place it in the center string as one of the required elements. 
(i0) C1 = Z t ~ V g; 
V 
t = o I -? I -ed I will, ca.__~n, ... 
This formulation of the assertion center string C1 (lO), in which 
the tense morpheme is an independent element and iterable sequences are taken 
as adjuncts, is necessary in ord@r to preserve, for example, the dependence 
between the particle it and the succeeding sequence surprises him that we 
worked seriously: ~ The book surprises him that we worked seriously. In the 
grammar~which includes restrictions, this formulation is not necessary because 
this dependence can be checked by a restriction. 
(B) Turning to the computer form of the grammar, all the restrictions of 
the grammar are eliminated either by defining new grammar strings (for the 
elimination of the restrictions Ra) ' or by replacing the general word- 
categories by the particular subclasses of those categories which are 
required by the restriction (to eliminate Rb). The application of this 
procedure increases the number of strings in the grammar, of course. 
The restrictions R a can be eliminated in the following manner. Suppose 
the option Yi of Y has a restriction R a on it which prevents it from being 
chosen in Y' (Y is a Y'ij of Y'). Then define a new grammar string Y 'wh ich  
-lO- 
contains all the options of Y but Y. : 
1 
(15) !~ = Y1 / Y2 / " " " / Yi-i / Yi+l / ? ? / 
Then the new gran~nar string Y* replaces Y in Y'. Thus, in the example of 
R a on p. 5, the string Y* = which Z t fv V / .... (in the modified treatment 
of tense and iterable sequences) would replace Y in r N. 
The restrictions R b are eliminated in a different way, according to 
the types described on p. 6. 
(a) New strings must be written in which only the wellformed sequences 
of subcategories appear. In the example of subject-verb agreement, the 
original Yi (Yi = C1) must be replaced by two options: 
C l= N t V ~ ? Ns t Vs ~ / N t V - P 2 
P 
where N s and Np are singular and plural nouns, V s and Vp singular and plural 
verbs. 
(b) If an element of a particular subcategory, say Ai, can take only a 
subset of the adjuncts rA, then a new adjunct s~ring rAi is defined. It 
contains those options~_ of r A which can appear only with A i plus all the 
options of r A which are common to all the sub-categ0ries of A. When this 
has been done f0r ? all A i having some particular behavior withrespect  to rA, 
all the remaining sub-categories of A will have a common adjunct string r : a 
A r A ~ A l rA1  / A3rA3 / . . . / A2r a / A4r a / . . 
As many new sets rAi must be defined as there were special sub-categories of 
A. A similar argument holds for ~A and other adjunct sets which depend on A. 
-ll- 
(c) A new element corresponding to the/adjunct set must be defined in 
which the adjuncts appear correctly ordered with respect to each other, and 
each one must be able to take on the value zero. 
This procedure for eliminating restrictions is also the algorithm for 
introducing further grammatical refinements into the restrictionless grammar. 
Such a general procedure can be formulated because of an essential property 
of a string grammar: In terms of linguistic (elementary) strings, all 
restrictions are either a) ?between elements of a string, or b) between an 
element of the string and its adjunct, or c) between related adjuncts of the 
same string. Further, there is no problem with discontinuous elements in a 
string grammar: all elements which depend in some way on each other grammatic- 
ally appear in the same string or in strings which are contiguous by adjunction. 
The cost of the elimination of all restrictions in this way is about an 
order of magnitude increase in the number of strings of the grammar. Instead 
of about 200 strings of the computer grammar, the grammar presented here has 
about 2000 strings. It is interesting that the increase in the size of the 
grammar is not greater than roughly one order of magnitude. This suggests that 
there may be practical applications for such a grammar, e.g. in a program 
designed to carry out all analyses of a sentence in real time. Also, since 
the restrictionless grammar is equivalent to a B.N.F. grammar of English, it 
may prove useful in adding English-language features to programming languages 
which are written in B.N.F. 
-12- 
SENTENCE NEUH- IB  ? SUCE ENHANCED SPIKES WOULD BE MORE EFFECTIVE 
IN IN IT IAT ING SYNAPTIC ACTION AND THUS BE RESPONSIBLE 
FOR THE OBSERVED POST-TETANIC POTENTIATION ? 
PARSE Ol 
I .  SENTENCE = INTRODUCER CENTER AND END MARK 
Z,  AND 3 ,  4 ,  ? 
2 ,  C I  ASSERTION ? $ SUBJECT $ VERB $ OBJECT 
5.  SPIKES gOULD BE 6 .  EFFECTIVE T ,  
RV $ 
3,  ACVERB = ADVERB 
THUS 
~,  CONJUNCTION ? CENIER 
10 ,  
5 .  LN = ARTICLE QUANTIF IER ADJECTIVE TYPE-NS" NOUN 
SUCH ENHANCED 
6 .  AEVERB = ADVERB 
MORE 
7 .  P N 
lO .  C I  ASSERTION 
I I .  LN 
= LP PREPOSITION N 
IN I t ,  ACTION 
= $ SUBJECT $ VERB 
I 5 .  SPIKES | (WOULD | BE 
$ OBJECT RV $ 
RESPONSIBLE t2 ,  
ARTICLE QUANTIF IER ADJECTIVE 
IN IT IAT ING SYNAPTIC 
TYPE-MS NOUN 
12 .  P N = LP PREPOS|TICN N 
FOR 13 ,  POTENTIATION 
13 .  LN = ARTICLE GUANTIF IER ADJECTIVE TYPE-NS NOUN 
THE OBSERVED POST-TETANIC 
-13-  
+ 
F i~e 2 
SENIENCE NEUH-.IB ? SUCH ENHANCED SPIKES kOULD BE MORE EFFECTIVE 
IN IN I | iAT ING SYNAPTIC ACTION AND THUS UE RESPONSIBLE 
FOR THE OBSERVED POST-TETANIC POTENTIATION ? 
PARSE 02 
1? SENTENCE = |NTROOUCER CENTER AND END MARK 
Z .  AND 3?  6?  ? 
2 ,  C I  ASSERTION ? = ? S~BJECT 
. 5 .  SPIKES 
3?  ACVERB S ADVERB 
IHUS 
? VERB ? OBJECT 
kOULD BE 6?  EFFECTIVE T ,  
RV ? 
6 .~NJUNCTIGN = CENIER 
10 .  
5.  LN ? ARTICLE QUANTIF IER ADJECTIVE TYPE-NS NOUN 
SUCH ENHANCED 
6 ,  lCVERB = ADVERB 
MORE 
To P NS V INGIOF|  0 = PREPOSITION SN 
IN IN I I IAT ING 11o ACTION 
10 .  CI ASSERTION ? ? SUBJECT ? VERB ? OBJECT RV ? 
( 5 .  SPIKES I (WOULD)  BE RESPONSIBLE 12 ,  
11.  LN = ARTICLE QUANTIF IER ADJECT|VE TYPE-NS NOUN 
SYNAPT|C 
? 
12.  P N = LP PREPOSITICN N 
FOR 13o POTENTIATION 
13 , ' LN  = ARTICLE QUANTIF IER ADJECTIVE TYPE-NS NOUN 
THE OBSERVEO POST-TETANIC 
NG MCRE PARSES 
- lh -  
REFERENCES 
i. Harris, Z. S., String Analysis of Sentence Structure, Papers on Formal 
Linguistics, No. l, Mouton and Co., The Hague, 1962. 
2. Sager , N., Salkoff, M., Morris, J., and Raze, C., Report on the String 
Analysis Programs, Department of Linguistics, University of Pennsylvania, 
March 1966. 
3. Sager, N., "Syntactic Analysis of Natural Language", Advances in Computers 
(Alt, F. and Rubinoff, M., eds.), vol. 8, pp. 153-188. Academic Press, 
New York, 1967. 
4. This problem was suggested by Professor J. Schwartz of the Courant 
institute of Mathematical Sciences, New York University. 
5. The option Yi here corresponds to the linguistic string Y of the previous 
section. The symbol / separates the options of a string definition. 
-15- 
