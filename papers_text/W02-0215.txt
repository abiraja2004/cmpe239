Issues Under Negotiation
Staffan Larsson
Dept. of linguistics, Box 200
Go?teborg University
SE 405 30 Go?teborg, Sweden
sl@ling.gu.se
Abstract
In this paper, we give an account of
a simple kind of collaborative negotia-
tive dialogue. We also sketch a formal-
ization of this account and discuss its
implementation in a dialogue system.
1 Introduction
In this paper, we give an issue-based account
of a simple kind of collaborative negotiative dia-
logue1. We start from a previous formal account
of negotiative dialogue (Sidner, 1994a) and ar-
gue for a slightly different idea of what negotia-
tive dialogue is. We want to make a distinction
between the process of accepting an utterance
and its content, which applies to all utterances,
and a concept of negotiation defined, roughly,
as a discussion of several alternative solutions to
some problem. This latter account is formulated
in terms of Issues Under Negotiation (IUN), rep-
resenting the question or problem to be resolved,
and a set of alternative answers, representing
the proposed solutions. We argue that this the-
ory improves on certain aspects of Sidner?s ac-
count while also fitting into a question-based di-
alogue management framework which has previ-
ously been implemented in the GoDiS dialogue
system (Bohlin et al, 1999).
1Work on this paper was supported by SIRIDUS
(Specification, Interaction and Reconfiguration in Dia-
logue Understanding Systems), EC Project IST-1999-
10516, and D?Homme (Dialogues in the Home Machine
Environment), EC Project IST-2000-26280, and STINT
(The Swedish Foundation for International Cooperation
in Research and Higher Education). An extended pre-
sentation of this work appears in (Larsson, 2002).
First, we will give a brief review of Sidner?s
theory and discuss its merits and drawbacks2.
We then provide an alternative account based
on the concept of Issues Under Negotiation. We
explain how IUN can be added to GoDiS, and
give an information state analysis of a simple ne-
gotiative dialogue. Finally, we draw some con-
clusions and point to possible future research ar-
eas.
2 Sidner?s theory of negotiative
dialogue
As the title says, Sidner?s theory is formulated
as ?an artificial discourse language for collabo-
rative negotiation?. This language consists of a
set of messages (or message types) with propo-
sitional contents (?beliefs?). The effects of an
agent transmitting these messages to another
agent is formulated in terms of the ?state of
communication? after the message has been re-
ceived. The state of communication includes in-
dividual beliefs and intentions, mutual beliefs,
and two stacks for Open Beliefs and Rejected
Beliefs. Some of the central messages are
? ProposeForAccept (PFA agt1 belief
agt2): agt1 expresses belief to agt2.
? Reject (RJ agt1 belief agt2): agt1
does not believe belief, which has been
offered as a proposal
2A more in-depth description of Sidner?s account and
its relation to the GoDiS model, including a reformula-
tion of Sidner?s artificial negotiation language in terms
of GoDiS information state updates, can be found in
(Cooper et al, 2001).
     Philadelphia, July 2002, pp. 103-112.  Association for Computational Linguistics.
                  Proceedings of the Third SIGdial Workshop on Discourse and Dialogue,
? AcceptProposal (AP agt1 belief agt2):
agt1 and agt2 now hold belief as a mu-
tual belief
? Counter (CO agt1 belief1 agt2
belief2): Without rejecting belief1,
agt1 offers belief2 to agt2
In addition, there are three kinds of
acknowledgement messages, the most im-
portant being AcknowledgeReceipt (AR agt1
belief agt2), which may occur after a
ProposeForAccept message and results in
belief being pushed on the stack for Open Be-
liefs. Acknowledgement indicates that a previ-
ous message from agt2 about belief has been
heard; the agents will not hold belief as a mu-
tual belief until an AcceptProposal message has
been sent.
While we will not give a detailed analysis of
the effects of each of these acts, some observa-
tions are important for the purposes of this pa-
per. Specifically, a counter-proposal (CO agt1
belief1 agt2 belief2) is analyzed as a com-
posite message consisting of two PFA messages
with propositional contents. The first proposed
proposition is belief2 (the ?new? proposal),
and the second is (Supports (Not belief1)
belief2), i.e. that belief2 supports the nega-
tion of belief1 (the ?old? proposal). Exactly
what is meant by ?supports? here is left unspec-
ified, but perhaps logical entailment is at least
a simple kind of support.
? (PFA agt1 belief2 agt2)
? (PFA agt1 (Supports (Not belief1)
belief2) agt2)
Sidner?s analysis of proposals is only con-
cerned with propositional contents. A Request
for action is modelled as a proposal whose con-
tent is of the form (Should-Do Agt Action).
A question is a proposal for the action to pro-
vide certain information. This brings us to our
first problem with Sidner?s account.
3 Problem 1: Negotiation vs.
utterance acceptance
In Sidner?s theory, all dialogue is negotiative
in the sense that all utterances (except accep-
tances, rejections, and acknowledgements) are
seen as proposals. This is correct if we consider
negotiation as possibly concerning meta-aspects
of the dialogue. Since any utterance (content)
can be rejected, all utterances can indeed be seen
as proposals.
(Clark, 1996) provides a ?ladder? with four
levels of comprehension involved in grounding
of natural language utterances in dialogue.
1. A attends to B?s utterance
2. A perceives B?s utterance
3. A understands B?s utterance
4. A accepts or rejects B?s utterance
So in one sense of ?negotiative?, all dialogue
is negotiative since assertions (and questions, in-
structions etc.) can be rejected or accepted. But
some dialogues are negotiative in another sense,
in that they contain explicitly discussions about
different solutions to a problem. Negotiation, on
this view, is distinct from Clark?s level 4.
There is thus a stronger sense of negotiation
which is not present in all dialogue. A mini-
mum requirement on negotiation in this stronger
sense could be that several alternative solutions
(answers) to a problem (question or issue) can
be discussed and compared before a solution is
finally settled on. Sidner is aware of this as-
pect of negotiation, and notes that ?maintain-
ing more than one open proposal is a common
feature of human discourses and negotiations.?
What we want to do is to find a way of cap-
turing this property independently of grounding
and of other aspects of negotiation, and use it
as a minimal requirement on any dialogue that
is to be regarded as negotiative.
On our view, utterances realizing proposal-
moves are moves on the same level as other dia-
logue moves: greetings, questions, answers etc.,
and can thus be accepted or rejected on this
level. Accepting a proposal-move on the ground-
ing level merely means accepting the content of
the move as a proposal, i.e. as a potential answer
to a question. This is different from accepting
the proposed alternative as the actual solution
to a problem (answer to a question).
To give a concrete example of these different
concepts of negotiativity, we can compare the
dialogues in Figures 1 and 2. The type negotia-
tion in 1 concerns acceptance-level grounding of
the utterance and its content. By contrast, the
type of negotiation in 2 concerns domain-level is-
sues rather than some aspect of grounding. We
won?t have much to say about grounding-related
negotiation in this paper, but see (Lewin et al,
2000) for an account of negotiation related to
utterance grounding.
4 Problem 2: Alternatives and
counterproposals
When analyzing a travel agency dialogue (Sid-
ner, 1994b), the travel agent?s successive pro-
posals of flights are seen as counterproposals to
his own previous proposals, each modelled as
a proposition. The difference between propos-
als and counterproposals is that the latter not
only make a new proposal but also proposes the
proposition that the new proposal conflicts with
the previous proposal (by supporting the nega-
tion of the previous proposal). This can be seen
as an attempt by Sidner to establish the con-
nection between the two proposals as somehow
concerning the same issue.
This analysis is problematic in that it excludes
cases where alternatives are not mutually exclu-
sive, which is natural when e.g. booking a flight
(since the user presumably only want one flight)
but not e.g. when buying a CD (since the user
may want to buy more than one). Also, it seems
odd to make counterproposals to your own pre-
vious proposals, especially since making a pro-
posal commits you to intending the addressee to
accept that proposal rather than your previous
ones. In many cases (including travel agencies)
it seems that the agent may often be quite in-
different to which flight the user selects. Travel
agents may often make several proposals in one
utterance, e.g. ?There is one flight at 7:45 and
one at 12:00?, in which case it does not make
sense to see ?one at 12:00? as a counterproposal
as Sidner defines them.
Of course, one would not want to use the
term ?counterproposal? in these cases; what we
need is some way of proposing alternatives with-
out seeing them as counterproposals. The basic
problem seems to be that when several propos-
als are ?on the table? at once, one needs some
way of representing the fact that they are not
independent of each other. Sidner does this
by adding propositions of the form (Supports
(Not belief1) belief2) to show that belief1
and belief2 are not independent; however, this
proposition not only claims that the proposi-
tions are somehow dependent, but also that they
are (logically or rhetorically) mutually exclusive.
In our view, this indicates a need for a theory
of negotiation which makes it possible to repre-
sent several alternatives as somehow concerning
the same issue, independently of rhetorical or
logical relations between the alternatives. Ne-
gotiation, in our view, should not in general be
seen in terms of proposals and counterproposals,
but in terms of proposing and choosing between
several alternatives.
5 Negotiation as discussing
alternatives
In this section, we will attempt to provide a
more detailed description of negotiative dia-
logue. Clearly, negotiation is a type of problem-
solving (Di Eugenio et al, 1998). We define
negotiative dialogue more specifically to be di-
alogue where DPs3 discuss several alternative
solutions to a problem (issue) before choosing
one of them. In line with our issue-based ap-
proach to dialogue management, we propose to
model negotiable problems (issues) semantically
as questions and alternative solutions as alter-
native answers to a question.
We also propose to keep track of these issues
under negotiation and the answers being consid-
ered as potential solutions to each issue in the
form of a stack (or ordered set) of pairs of issues
3DPs = Dialogue Participants
A> Today is January 6th.
propose proposition
B(alt. 1)> Uhuh
accept proposition
B(alt. 2)> No, it?s not!
reject proposition
Figure 1: Negotiating utterance (content) acceptance
S> where do you want to go?
ask question
U> flights to paris on june 13 please
answer question
S> there is one flight at 07:45 and one at 12:00
propose alternatives, give information about alternatives
U> what airline is the 12:00 one
ask question
S> the 12:00 flight is an SAS flight
answer question
U> I?ll take the 7:45 flight please
accept alternative, answer question ?which flight??
Figure 2: Negotiating alternative solutions to an issue
and sets of answers. We label this stack Issues
Under Negotiation, or IUN.
5.1 Degrees of negotiativity
Starting from this definition, we can distinguish
between fully negotiative dialogue and semi-
negotiative dialogue. In non-negotiative dia-
logue, only one alternative can be discussed. In
semi-negotiative dialogue, a new alternative can
be introduced by revising parameters of the pre-
vious alternative; however, previous alternatives
are not retained. Finally, in negotiative dia-
logue: several alternatives can be introduced,
and old alternatives are retained and can be re-
turned to.
Semi-negotiative information-oriented dia-
logue does not require keeping track of several
alternatives. All that is required is that in-
formation is revisable, and that new database
queries can be formed from old ones by replac-
ing some piece of information. This property
is implemented in a limited way for example in
the Swedish railway information system (a vari-
ant of the Philips system (Aust et al, 1994)),
which after providing information about a trip
will ask the user ?Do you want an earlier or
later train??. This allows the user to modify the
previous query (although in a very limited way)
and get information about further alternatives.
However, it is not possible to compare the alter-
natives by asking questions about them; indeed,
there is no sign that information about previous
alternatives is retained in the system.
5.2 Factors influencing negotiation
There are a number of aspects of the dia-
logue situation which affect the complexity of
negotiative dialogues, and allows further sub-
classification of them. This sub-classification al-
lows us to pick out a subspecies of negotiative
dialogue to implement.
On our definition, negotiation does not re-
quire conflicting goals or interests, and for this
reason it may not correspond perfectly to the
everyday use of the word ?negotiation?. How-
ever, we feel it is useful to keep collaborativity
(i.e. lack of conflicting goals) as a separate di-
mension from negotiation. Also, it is common
practice in other fields dealing with negotiation
(e.g. game theory, economy) to include collabo-
rative negotiation (cf. (Lewin et al, 2000)).
A second factor influencing negotiation is the
distribution of information between DPs. In
some activities, information may be symmet-
rically distributed, i.e. DPs have roughly the
same kind of information, and also the same
kind of information needs (questions they want
answered). This is the case e.g. in the Co-
conut (Di Eugenio et al, 1998) dialogues where
DPs each have an amount of money and they
have to decide jointly on a number of furniture
items to purchase. In other activities, such as a
travel agency, the information and information
needs of the DPs is asymmetrically distributed.
The customer has access to information about
her destination, approximate time of travel etc.,
and wants to know e.g. exact flight times and
prices. The travel agent has access to a database
of flight information, but needs to know when
the customer wants to leave, where she wants to
travel, etc.
A third variable is whether DPs must commit
jointly (as in e.g. the Coconut dialogues) or one
DP can make the commitment by herself (as e.g.
in flight booking). In the latter case, the accep-
tance of one of the alternatives can be modelled
as an answer to an issue on IUN by the DP re-
sponsible for the commitment, without the need
for an explicit agreement from the other DP. In
the former case, a similar analysis is possible,
but here it is more likely that an explicit ex-
pression of agreement is needed from both DPs.
This variable may perhaps be referred to as ?dis-
tribution of decision rights?.
Travel agency dialogue, and dialogue in other
domains with clear differences in information
and decision-right distribution between roles,
has the advantage of making dialogue move in-
terpretation easier since the presence of a certain
bits of information in an utterance together with
knowledge about the role of the speaker and the
role-related information distribution often can
be used to determine dialogue move type. For
example, an utterance containing the phrase ?to
Paris? spoken by a customer in a travel agency
is likely to be intended to provide information
about the customer?s desired destination.
6 Issues Under Negotiation (IUN)
In this section we discuss the notion of Is-
sues Under Negotiation represented by ques-
tions, and how proposals relate to issues on IUN.
We also discuss how this approach differs from
Sidner?s.
6.1 Negotiable issues and activity
Which issues are negotiable depends on the ac-
tivity. For example, it is usually not the case
that the name of a DP is a negotiable issue; this
is why it would perhaps seem counterintuitive
to view an introduction (?Hi, my name is NN?)
as a proposal. However, it cannot be ruled out
that there is some activity where even this may
become a matter of negotiation. Also, it is usu-
ally possible in principle to make any issue into
a negotiable issue, e.g. by raising doubts about
a previous answer.
However, for our current purposes we may
make a distinction between negotiable and non-
negotiable issues in an activity. The advan-
tage of this is that the more complex processing
and domain-specific knowledge required for ne-
gotiable issues are only required for issues which
the system needs to be able to negotiate. The
drawback, of course, is that the system becomes
less flexible; however, there is always the possi-
bility of defining all issues as negotiative if one
so desires.
6.2 Alternatives as answers to issues on
IUN
Given that we analyze Issues Under Negotiation
as questions, it is a natural move to analyze the
alternative solutions to this issue as potential
answers. On this view, a proposal has the effect
of adding an alternative answer to the set of al-
ternative answers to an issue on IUN. An answer
to the question on IUN is equivalent to accept-
ing one of the potential answers as the actual
answer. That is, a question on IUN is resolved
when an alternative answer is accepted.
Here we see how our concept of acceptance
differs from Sidner. On our view a proposal can
be accepted in two different ways: as a proposal,
or as the answer to an issue on IUN. Accepting
a proposal move as adding an alternative corre-
sponds to meta-level acceptance. However, ac-
cepting an alternative as the answer to an issue
on IUN is different from accepting an utterance.
Given the optimistic approach to acceptance, all
proposals will be assumed to be accepted as pro-
posals; however, it takes an answer-move to get
the proposed alternative accepted as the solu-
tion to a problem.
7 Adding IUN to the GoDiS
information state
The ideas described in this paper are currently
being implemented in GoDiS (Bohlin et al,
1999), an experimental dialogue system initially
adapted for the travel agency domain but later
adapted for several other domains. GoDiS is
implemented using the TrindiKit(Larsson and
Traum, 2000; Larsson et al, 2000), a toolkit for
experimenting with information states and di-
alogue move engines and for building dialogue
systems.
The notion of information state used by
GoDiS is basically a version of the dialogue game
board which has been proposed by (Ginzburg,
1998). We represent information states of a dia-
logue participant as a record of the type shown
in Figure 3.
The main division in the information state
is between information which is private to the
agent and that which is shared between the di-
alogue participants. The private part of the in-
formation state contains a plan field holding
a dialogue plan, i.e. is a list of dialogue ac-
tions that the agent wishes to carry out. The
agenda field, on the other hand, contains the
short term goals or obligations that the agent
has, i.e. what the agent is going to do next.
We have included a field tmp that mirrors the
shared fields. This field keeps track of shared
information that has not yet been confirmed as
grounded, i.e. as having been understood by the
other dialogue participant. The shared field is
divided into a local and a global part. The local
part contains information about the latest utter-
ance, and information which may be relevant for
interpreting it. The first subfield is for a stack
of questions under discussion (qud). These are
questions that can currently be answered ellip-
tically. The lu field contains information about
the speaker of, and the moves performed in, lat-
est utterance.
The global part contains shared informa-
tion which reflects the global state of the dia-
logue. It contains a set of propositions (com-
mitments) which the agent assumes have been
jointly committed to in the dialogue (com).
In order to include Issues Under Negotiation
and alternative answers to issues on IUN in
the information state, we have also added
a new information state field of type Open-
Stack(Pair(Question,Set(Answer)))4.
We define update rules for updating the infor-
mation state based on the recognized move(s).
The rules are defined in terms of preconditions
and effects on the information state; the effects
are a list of operations to be executed if the pre-
conditions are true.
Regarding the semantics of questions, propo-
sitions, and short answers, we use a simpli-
fied version of first order logic with the addi-
tion of lambda abstracts for representing ques-
tions. Questions and answers can be combined
to form propositions. For example, the con-
tent of ?when do you want to leave?? can
be represented as ?x.desired dept time(x),
the answer ?twelve thirty? as 12:30, and the
proposition resulting from combining the two
desired dept time(12:30). As a further ex-
ample, the proposition that a certain flight
(denoted f1) departs at 7:45 is represented as
dept time(f1,0745). For a more comprehen-
sive description of the semantics used, see (Lars-
son, 2002).
4The choice of a stack is motivated by the fact that
several issues may, in principle, be under negotiation at
once, and that some issues may be subordinate to others.
An open stack is a stack where non-topmost elements are
accessible for inspection and deletion.
??
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
private :
?
?
?
?
?
agenda : Stack(Action)
plan : Stack(PlanConstruct)
bel : Set(Prop)
tmp : (same as shared)
?
?
?
?
?
shared :
?
?
?
?
?
?
?
?
global :
[
com : Set(Prop)
iun : OpenStack(Pair(Question,Set(Answer)))
]
local :
?
?
?
qud : Stack(Question)
lu :
[
speaker : Participant
moves : Set(Move)
]
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
Figure 3: Extended GoDiS information state type, including IUN
8 An example
In the (invented) example in 4, the question on
IUN is ?x.desired flight(x), i.e. ?Which flight
does the user want??. The user supplies infor-
mation about her desired destination and depar-
ture date; this utterance is interpreted as a set of
answer-moves by the system since it provides an-
swers to questions that the system has asked or
was going to ask. As a response to this, GoDiS
performs a database search which returns two
flights f1 and f2 matching the specification, and
stores the database results in private.bel. The
system then proposes these flights as answers to
the IUN. The system also supplies some infor-
mation about them. As a result, the IUN is now
associated with two alternative answers, f1 and
f2. Finally, the user provides an answer to the
question on IUN, thereby accepting one of these
alternatives as the flight she wants to take.
Because of space limitations, this dialogue
does not include any discussion or comparison
of alternatives, but it could easily be extended
to cover e.g. the dialogue in 2.
In a travel agency setting, it can be argued
that the informational distribution and decision
rights associated with the roles of customer and
clerk in a travel agency are sufficient to distin-
guish proposals for acceptances, but in a more
complex setting the move recognition will re-
quire more information about surface form and
dialogue context.
9 Relation to previous work
Much work on negotiative dialogue, including
that of Sidner, is based on variations on the BDI
model of classic AI and uses generalised plan-
ning and plan recognition as an integral part of
dialogue processing (e.g. (Cohen and Levesque,
1991), (Grosz and Kraus, 1993) (Chu-Carroll
and Carberry, 1994)). The risk with this kind
of very general reasoning is that it may become
computationally complex and expensive. There-
fore, we believe it is useful to start with a simple
theory involving reasoning specific to a certain
kind of dialogue and see how far that takes us,
and at what point general planning and reason-
ing is really necessary.
In working on GoDiS our strategy has been
to start from a basic issue-based approach and
gradually extending it, while trying to keep
things as simple as possible. We believe that
the issue-based approach can be extended with,
and is compatible with, planning and general
reasoning mechanisms. This is also in line with
the idea behind the information state update ap-
proach as implemented in TrindiKit, i.e. to al-
low for experimentation with different kinds of
information states and information state update
strategies at various levels of complexity (rather
than being confined to choosing between over-
simplified finite state / frame-based approaches
on the one hand, or complex plan-based ap-
proaches on the other).
Also, most of the plan-based dialogue research
is focused on relatively complex dialogues in-
volving collaborative planning. The model pre-
sented here is not committed to the view that
negotiation only takes place in the context of col-
laborative planning. In the sense of negotiative
dialogue used here, i.e. dialogue involving sev-
A> flights to paris, june 13
answer(desired dest city(paris))
answer(desired dept date(13/6))
B> OK, there?s one flight leaving at 07:45 and one at 12:00
propose(f1)
propose(f2)
inform(dept time(f1,07:45))
inform(dept time(f2,12:00))
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
private =
?
?
?
?
?
?
agenda = ? findout(?x.desired flight(x)) ?
plan = ? findout(?x.credit-card-no(x))book ticket ?
bel =
{ flight(f1)
dept time(f1,0745)
. . .
}
?
?
?
?
?
?
shared =
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
global =
?
?
?
?
?
?
com =
?
?
?
?
?
?
?
dept time(f1,0745)
dept time(f2,1200)
desired dest city(paris)
desired dept date(13/6)
. . .
?
?
?
?
?
?
?
iun = ? ?x.desired flight(x)?
{
f1, f2
}
?
?
?
?
?
?
?
local =
?
?
?
?
qud = ??
lu =
?
?
?
speaker = sys
moves =
{ propose(f1)
propose(f2)
. . .
}
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
A> I?ll take the 07:45 one
answer(desired flight(X)&dept time(X, 07:45))
(after contextual interpretation: answer(desired flight(f1)))
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
private =
?
?
?
?
agenda = ? findout(?x.credit-card-no(x)) ?
plan = ? book ticket ?
bel =
{ flight(f1)
dept time(f1,0745)
. . .
}
?
?
?
?
shared =
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
global =
?
?
?
?
?
?
?
com =
?
?
?
?
?
?
?
?
?
?
?
desired flight(f1)
dept time(f1,0745)
dept time(f2,1200)
desired dest city(paris)
desired dept date(13/6)
. . .
?
?
?
?
?
?
?
?
?
?
?
iun = ??
?
?
?
?
?
?
?
local =
?
?
?
qud = ??
lu =
?
?
speaker = sys
moves =
{
answer(desired flight(f1))
. . .
}
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
Figure 4: Example dialogue
eral alternative solutions to some problem, ne-
gotiation may also concern matters of fact. This
can be useful e.g. in tutorial dialogue where a
tutor asks a question, gives some alternative an-
swers, and the student?s task is to reason about
the different alternatives and decide on one of
them. In the travel agency domain, it is often
not necessary to explicitly represent e.g. the fact
that the deciding on a flight is a precondition of
a general plan for traveling; instead, we can rep-
resent it simply as a fact concerning which flight
the user wants to take.
(Rose? et al, 1995) provide an account of dis-
course structure for dialogues involving several
alternatives (or ?threads?), which appears to be
compatible with the view presented here. How-
ever, the focus on discourse structures rather
than information states and dialogue processing
(in terms of information state updates) makes
this work less relevant to dialogue systems de-
sign, at least from the perspective of an infor-
mation state update approach.
10 Conclusions and future work
On our approach, an Issue Under Negotiation
is represented as a question , e.g. what flight
the user wants. In general, this means view-
ing problems as issues and solutions as answers.
This approach has several advantages. Firstly, it
provides a straightforward an intuitively sound
way of capturing the idea that negotiative di-
alogue involves several alternative solutions to
some issue or problem, and that proposals in-
troduce such alternatives. Secondly, it distin-
guishes two types of negotiation (dialogue nego-
tiation and issue negotiation) and clarifies the
relation between them. Thirdly, since this ac-
count is a natural extension of the general ideas
behind the GoDiS system (e.g. using issues as
a basis for dialogue management), it allows the
use of independently motivated theory and ma-
chinery to handle a new problem. Apart from
implementing the theory described in this pa-
per, possible future work includes applying the
theory to new domains and extending it to han-
dle more complex kinds of negotiation, possibly
making use of work on collaboration and social
action such as (Castelfranchi et al, 2000).
References
H. Aust, M. Oerder, F. Seide, and V. Steinbiss. 1994.
Experience with the Philips automatic train table
information system. In Proc. of the 2nd Workshop
on Interactive Voice Technology for Telecommuni-
cations Applications (IVTTA), pages 67?72, Ky-
oto, Japan.
P. Bohlin, R. Cooper, E. Engdahl, and S. Lars-
son. 1999. Information states and dialogue move
engines. In J. Alexandersson, editor, IJCAI-99
Workshop on Knowledge and Reasoning in Prac-
tical Dialogue Systems, pages 25?32.
C. Castelfranchi, F. Dignum, C. Jonker, and
J. Treur. 2000. Deliberate normative agents:
Principles and architecture. In Jennings and Les-
perance (Jennings and Lesperance, 2000), pages
206?220.
Jennifer Chu-Carroll and Sandra Carberry. 1994. A
plan-based model for response generation in col-
laborative task-oriented dialogues. In AAAI, Vol.
1, pages 799?805.
H. H. Clark. 1996. Using Language. Cambridge
University Press, Cambridge.
Phillip R. Cohen and Hector J. Levesque. 1991.
Teamwork. Nous, 35.
Robin Cooper, Stina Ericsson, Staffan Larsson,
and Ian Lewin. 2001. An information state
update approach to collaborative negotiation.
In Peter Ku?hnlein, Hannes Rieser, and Henk
Zeevat, editors, BI-DIALOG 2001?Proceedings
of the 5th Workshop on Formal Semantics
and Pragmatics of Dialogue, pages 270?9,
http://www.uni-bielefeld.de/BIDIALOG,
June, 14th?16th. ZiF, Univ. Bielefeld.
B. Di Eugenio, P.W. Jordan, R.H. Thomason, and
J.D. Moore. 1998. An empirical investigation of
proposals in collaborative dialogues. In Proceed-
ings of ACL?COLING 98: 36th Annual Meeting of
the Association of Computational Linguistics and
17th International Conference on Computational
Linguistics, pages 325?329.
J. Ginzburg. 1998. Clarifying utterances. In J. Hul-
stijn and A. Niholt, editors, Proc. of the Twente
Workshop on the Formal Semantics and Pragmat-
ics of Dialogues, pages 11?30, Enschede. Univer-
siteit Twente, Faculteit Informatica.
Barbara [J.] Grosz and Sarit Kraus. 1993. Collab-
orative plans for group activities. In Proceedings
IJCAI-93, pages 367?373.
N. Jennings and Y Lesperance, editors. 2000.
Proceedings of the 6th International Workshop
on Agent Theories, Architectures, and Languages
(ATAL?1999), Springer Lecture Notes in AI 1757.
Springer Verlag, Berlin.
Staffan Larsson and David Traum. 2000. Informa-
tion state and dialogue management in the trindi
dialogue move engine toolkit. NLE Special Is-
sue on Best Practice in Spoken Language Dialogue
Systems Engineering, pages 323?340.
Staffan Larsson, Alexander Berman, Johan Bos,
Leif Gro?nqvist, Peter Ljunglo?f, and David Traum.
2000. Trindikit 2.0 manual. Technical Report De-
liverable D5.3 - Manual, Trindi.
Staffan Larsson. 2002. Issue-based Dialogue Man-
agement. Ph.D. thesis, Go?teborg University.
Ian Lewin, Robin Cooper, Stina Ericsson, and C.J.
Rupp. 2000. Dialogue moves in negotiative dia-
logues. Project deliverable 1.2, SIRIDUS.
C. P. Rose?, B. Di Eugenio, L. S. Levin, and C. Van
Ess-Dykema. 1995. Discourse processing of di-
alogues with multiple threads. In Proc. ACL,
Boston, MIT, June.
Candace L. Sidner. 1994a. An artificial discourse
language for collaborative negotiation. In Proceed-
ings of the forteenth National Conference of the
American Association for Artificial Intelligence
(AAAI-94), pages 814?819.
Candace. L. Sidner. 1994b. Negotiation in collabo-
rative activity: A discourse analysis. Knowledge-
Based Systems, 7(4):265?267.
