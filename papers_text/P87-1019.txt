NOMINALIZATIONS IN PUNDIT  
Deborah A. Dahl, Martha S. Palmer, Rebecca J. Passonneau 
Paoli Research Center 
UNISYS Defense Systems 1 
Defense Systems, UNISYS 
P.O Box 517 
Paoli, PA  19301 USA 
ABSTRACT 
This paper describes the treatment of nomi- 
nalizations in the PUNDIT text processing system. 
A single semantic definition is used for both nomi- 
nalizations and the verbs to which they are 
related, with the same semantic roles, decomposi- 
tions, and selectional restrictions on the semantic 
roles. However, because syntactically nominaliza- 
tions are noun phrases, the processing which pro- 
duces the semantic representation is different in 
several respects from that used for clauses. (1) 
The rules relating the syntactic positions of the 
constituents to the roles that they can fill are 
different. (2) The fact that nominailzations are 
untensed while clauses normally are tensed means 
that an alternative treatment of time is required 
for nomlnalizations. (3) Because none of the argu- 
ments of a nominallzation is syntactically obllga- 
tory, some differences in the control of the filling 
of roles are required, in particular, roles can be 
filled as part of reference resolution for the nomi- 
nalization. The differences in processing are cap- 
tured by allowing the semantic interpreter to 
operate in two different modes, one for clauses, 
and one for nominalizations. Because many noml- 
nalizations are noun-noun compounds, this 
approach also addresses this problem, by suggest- 
ing a way of dealing with one relatively tractable 
subset of noun-noun compounds. 
1Formerly SDC-A Burroughs Company. 
1. Introduct ion 
In this paper we will discuss the analysis of 
nominalizations in the PUNDIT  text processing 
system. 2 Syntactically, nomlnalizations are noun 
phrases, as in examples (I)-(7). 
(1) An inspection of lube oil filter revealed 
metal particles. 
(2) Lou of lube oll preuure occurred during 
operation. 
(3) SAC received hifh ueafe. 
(4) In~eeti#ation revealed adequate lube oil. 
(5) Request replacement of SAC.. 
(6) Erosion of impellor blade tip is evident. 
(7) Unit has low output air pressure, resulting 
in ale*# gae turbine atarte. 
Semantically, however, nominaliTatlons resemble 
clauses, with a predlcate/argument structure like 
that of the related verb. Our treatment attempts 
to capture these resemblances in such a way that 
very little machinery is needed to analyze nomi- 
nalizations other than that already in place for 
other noun phrases and clauses. 
There are two types of differences between 
the treatment of nomlnalizatlons and that of 
clauses. There are those based on linqui~tle 
differences, related to (1) the mapping between 
syntactic arguments and semantic roles, which is 
I The research described in this paper was supported in 
part by DARPA under contract N000014-85-C-0012, admin- 
istered by the Office of Naval Research. APPROVED FOR 
131 
different in nomlnalisations and clauses, and (2) 
tense, which nomlnallsations lack. There are also 
differences in control; in particular, control of the 
filling of semantic roles and control of reference 
resolution. All of these issues will be discussed in 
detail below. 
2. C lause  ana lys i s  
The semantic processing to be described in 
this paper is part  of the PUNDIT s system for 
processing natural  language messages. The PUN- 
DIT system is a highly modular system, written in 
Prolog, consisting of distinct syntactic, semantic 
and discourse components. ~-lirschman1985\], 
and~-lirschman1986\], describe the semantic com- 
ponents of PUNDIT, 
while ~)ah11986, Palmer1988, Passonneau1986\], 
describe the semantic and pragmatic omponents. 
The semantic domain from which these examples 
are taken is that  of reports of failures of the 
starting air compressors, or sac's,  used in starting 
gas turbines on Navy ships. 
The goal of semantic analysis is to produce 
a representation of the information conveyed by 
the sentence, both implicit and explicit. This 
involves 1) mapping the syntactic realization onto 
an underlying predicate argument representation, 
e.g., assigning referents of particular syntactic 
consltuents to predicate arguments, and 2) mak- 
\]Jig implicit argument fillers expllclt. We are 
using an algorithm for semantic interpretation 
based on predicate decomposition that integrates 
the performance of these tasks. The integration is 
driven by the goal of filling in the predicate argu- 
ments of the decomposition.~almer1986\]. 
In order to produce a semantic representa- 
tion of a clause, its verb is first decomposed into a 
semantic predicate representation appropriate for 
the domain. The arguments of the predicates 
constitute the SEMANTIC ROLES of the verb, which 
are slml\]ar to cases 4For example, fall decomposes 
into become inoperat lve ,  with pat ient  as its 
only semantic role. Semantic roles can be filled 
either by a syntactic constituent or by reference 
PUBLIC RELEASE, DISTRIBUTION UNLIMITED. 
s PUNDIT UNDderstands and Integrates Text 
4 In this domain the semantic roles include: agent, In- 
st igator,  experiencer, Instrument,  theme, Ioeatlon, 
actor, patient,  source, reference_pt and goal. There 
are domain specific riteria for selecting a range of semantic 
roles. The criteria which we have used are described 
resolution from default or contextual information. 
We have categorized the semantic roles into 
three classes, based on how they are filled Seman- 
tic roles such as theme,  ac tor  and pat ient  are 
syntactically OBLIGATORY, and must be filled by 
surface constituents. Semantic roles are categor- 
ized as semantically ESSENTIAL when they must be 
filled even if there is no syntactic constituent 
avaUahle, s In this case they can be filled pragmat- 
ically, making use of reference resolution, as 
explained below. The default categorization is 
NON-ESSENTIAL, which does not require that the 
role be filled. The algorithm in Figure 1 produces 
a semantic representation using this information. 
Each step in the algorithm will be il lustrated at 
least once in the next section using the following 
(typical) CASREPS text. 
~a? failed. 
Pump sheared. 
Ineestifatiort reeealed metal eontamlnation 
in filter. 
2.1 .  A S imple  Example  
DECOMPOSE VERB - The first example uses the 
fal l  decomposition for Sac failed: 
fa l l  <-  
beeomeP ( inoperat lveP  
(pat lent (P ) ) ) .  
It indicates that the entity filling the OBLIGA- 
TORY pat ient  role has or will become inopera- 
tive. 
FOR pat ient  ROLE - 
PROPOSE SYNTACTIC CONSTITUENT 
FILLER - A mapping rule indicates that  the syn- 
tactic subject is a likely filler for any pat ient  
role. The mapping rules make use of intuitions 
about syntactic cues for indicating semantic 
roles first embodied in the notion of case 
~lllmore1968,Palmer1981\]. The mapping rules 
can take advantage of general syntactic cues like 
"SUBJECT goes to PATIENT" while still indicat- 
ing particular context sensitivities. (See ~al -  
mer1985\] for details.) 
in{Paseonneau198611 
s We are in the process of defining criteria for categoriz- 
ing a role as ~SSeNTIAL. It is clearly very domain dependent. 
132 
CALL REFERENCE RESOLUTION - See is the 
subject of ma? failed, and is suggested by the 
mapping rule as a 1Lkely filler of the pat ient  role. 
At this point the semantic interpreter asks noun 
phrase analysis to provide a unique referent for 
the noun phrase subject. Since no sac,  have been 
mentioned previously, a new name is created: 
sae l .  
TEST SELECTION RESTRICTIONS - In addi- 
tion to the mapping rules that  are used to associ- 
ate syntactic constituents with semantic roles, 
there are selection restrictions associated with 
each semantic role. The selection restrictions for 
fail test whether or not the filler of the pat ient  
role is a mechanical device. A sac is a mechani- 
cal device so the subject of the sentence mac 
failed maps straightforwardly onto the pat ient  
role, e.g., 
beeomeP ( inoper  a t |veP  (pat |ent  (sac1) ) ) .  
Since there are no other roles to be filled the 
algorithm term~-ates uccessfully at this point 
and the remaining steps are not applied. The 
next example illustrates further steps in the algo- 
rithm. 
2.2.  Unf i l l ed  Ob l igatory  Ro les  
The second utterance in the example, Psmp 
mheared, illustrates the effect of an unfilled obliga- 
tory role. 
DECOMPOSE VERB - 
shear,  
<-  eauseP  ( !ns t igator  (I),  
beeomeP(shearedP  
(pat lent (P ) ) ) )  
Sheer is an example of a verb that can be used 
either transitively or intransitively. In both cases 
the pat ient  role is filled by a mechanical device 
that becomes heared. If the verb is used transi- 
tively, the ins t igator  of the shearin?, also a 
mechanical device, is mentioned explicitly, as in, 
The rotating driee shaft sheared the psmp. If 
the verb is used intransitively, as in the current 
example, the ins t igator  is not made explicit; 
however, the algorithm begins by attempting to 
fill it in. 
FOR Ins t igator  ROLE - Working from left to 
right in the verb decomposition, the first role to 
and relies heavily on what can be assumed from the context. 
be filled is the ins t igator  role. A mapping rule 
indicates that the subject of the sentence, psmp, 
is a likely filler for this role. Reference resolution 
returns pump1 as the referent of the noun 
phrase. Since pump is a mechanical device, the 
selection restriction test passes. 
FOR pat ient  ROLE - There are no syntactic 
constituents left, so a syntactic constituent can- 
not be proposed and tested. 
UNFILLED OBL IGATORY ROLES - The 
pat lent  role, a member of the set of obligatory 
roles, is still unfilled. This causes failure, and the 
binding of p , * rnp l  to the ins t igator  role is 
undone. The algorithm starts over again, trying 
to fill the instigator ole. 
FOR ins t igator  ROLE- There are no other 
mapping rules for ins t igator ,  and it is non- 
essential, so Case 4 applies and it is left unfilled, e
The algorithm tries again to fill in the patient 
role. 
FOR pat lent  ROLE - Two mapping rules can 
apply to the pat ient  role, one of which suggests 
the subject, in this case, the pump, as a filler. 
Reference resolution returns pump1 again, which 
passes the selection restriction of being a mechan- 
ical device. The final representation is:
eauseP  ( ins t l  gator  ( I) ,  
beeomeP (shearedP  (pat lent  (pumpl ) ) ) ) .  
The last sentence in the text, "Inveatlga- 
tion re~ealed metal eontaminatlon ~n filter," is 
interesting mainly because of the occurrence of 
two nomlnallzations which are discussed in detail 
in a separate section. 
2.3.  Tempora l  Ana lys i s  o f  Tensed  
C lauses  
The temporal component determines what 
kind of situation a predication denotes and what 
time it is asserted to hold for ~assonneau1988\]. 
Its input is the semantic decomposition of 
the verb and its arguments, tense, an indica- 
tion of whether the verb was in the perfect or 
progressive, and a list of unanalyzed consti- 
tuents which may include temporal adverbials. It 
generates three kinds of output: an assignment of 
IIn other domains, the ins t igator  might be an ~SSZN. 
TLU. role and would get filled by pragmatics. 
133 
an actual  time to the predication, if appropriate; 
a representation of the type of sRuation denoted 
by the predication as either a state, a process or a 
transit ion event; and finally, a set of predicates 
about the ordering of the time of the situation 
with respect to other times explicitly or implicitly 
mentioned in the same sentence. For the simple 
sentence, sac  / 'a i led,  the input would consist of 
the semantic decomposition and a past tense 
marker:  
Deeompos l t lons  
become ( |no  per  a t ive  (p a t lent  (is se l l  ) )) 
3Terb fo rms Past  
The output would be a representation of a 
transit ional event, corresponding to the moment 
of becoming inoperat ive,  and a resulting state 
in which the sac is inoperative for some period 
initiating at the moment of transition. 
8. Nomlna l l sa t lons  
Nominallzations are processed very slml\]arly 
to clauses, but with a few crucial d~erences, both 
in linguistic information accessed and in the con- 
trol of the algorithm. The first important linguis- 
tic characterist ic of the nom;nallzation algorithm 
is that  the same predicate decomposition can be 
used as is used for the related verb. Secondly, 
d~erent  mapping rules are required since syntac- 
tically a nominallsatlon is a noun phrase. For 
example, where a likely filler for the pat ient  of 
fail, is the syntactic subject, a llkely filler for the 
pat ient  of failure is an of pp. Thirdly, nominal- 
isations do not make use of the obligatory 
classification for semantic roles, since noun 
phrase modifiers are not syntactical ly obligatory. 
In terms of d~rerences in control structure, 
because nom;nallzations may themselves be ana- 
phorlc, there are two separate role-filling stages in 
the algorithm instead of just one. The first pass is 
for filling roles which are explicitly given syntacti- 
cally; essential roles are left unfilled. If a uomi- 
nalization is being used anaphorical ly some of its 
roles may have been specified or  otherwise filled 
when the event was first described. The ana- 
phorlc reference to the event, the nomina\]izatlon, 
would automatical ly inherit all of these role 
This suggests the hypothesis that OBLIGATORY roles For 
clause decompositions automatically become BSSeNTL~ roles 
for nominalization decompositions. This hypothesis eems to 
hold in the current domain; however, it will have to be tested 
on other domains. We are indebted to James Allen for this 
observation. 
fillers, as a by-product of reference resolution. 
After the first pass, the interpreter looks for a 
referent, which, if found, will unify with the noml- 
nal isatlon representation, sharing variable bind- 
ings. This is a method of filling unfilled roles prag- 
matical ly that  is not currently available to clause 
analysis s. However, the first pass was important 
for filling roles with any explicit syntactic argu- 
ments of the nom;nalizatlon before attempt ing to 
resolve its reference, since there may be more 
than one event in the context whkh nominallza- 
tion could be specifying. For example, failure of 
pump and failure of sac can only be dis- 
tinguished by the filler of the pat ient  role. After 
reference resolution a second role-filling pass is 
made, where still unfilled roles may be filled prag- 
matical ly with default values in the same way 
that  unfilled verb roles can be filled. 
S.1.  Tempora l  Ana lys i s  o f  Nomlna l l za -  
t lons  
As with clauses, the temporal  analysis of 
norninallsatlons takes place after the semantic 
analysis. Also as with clauses, one of the inputs 
to the temporal  analysis of nomlna\]isatlons is the 
semantic decomposition. The critical d~erence 
between the two cases is that  a nom;nal isation 
does not occur with tense. PUNDIT  compensates 
by looking for relevant temporal  information in 
the superordinate constituents in which the nomi- 
nalizatlon is embedded. Currently, PUNDIT  
processes nomlnalizatlons in three types of con? 
texts. 
The first context for which a nomlnalisation 
is temporal ly processed is when it occurs as the 
prepositional object of a temporal  connective 
(e.g., before, during, after) and the matr ix 
clause denotes an actual  situation. For example, 
in the sentence sac lube oil pressure decreased 
belato 60 pslg after engagement, the temporal 
component processes the main clause as referring 
to an actual  event which happened in the past 
and which resulted in a new situation. When 
PUNDIT finds the temporal  adverbial  phrase 
after engagement, it assumes that  the engage- 
meat  also has actual  temporal  reference. In such 
cases, the nomlnal isat|on is processed using the 
! Clauses can describe previously mentioned events, as 
discussed in \[Dahl1987\]. In order to handle cases like these, 
something analogous to reference resolution for clauses may 
be required. However a treatment of this has not yet been 
implemented in PUNDIT. 
134 
meaning of the adverb and the tense of the main 
clause. 
The second context in which a nominallza- 
tion undergoes temporal  analysis is where it 
occurs as the argument o a verb providing tem- 
poral information about situations. Such verbs 
are classified as aspectual. Occur  is such a verb, 
so a sentence like failure occurred would be pro- 
cessed very s~miIarly to a clause with the simple 
past tense of the related verb, i.e., aomethlng 
faile& 
Another type of verb whose nominallzation 
arguments are temporal ly processed is a verb 
which itself denotes an actual  situation that  is 
semantically distinct from its arguments. For 
example, the sentence in,aestlgatlon re~ealed 
metal ?onfam~natlon i~t oil filter mentions three 
situations: the situation denoted by the matr ix 
verb reveal, and the two situations denoted by its 
arguments, ineemt~gatlon a d eontamlnatlo~ If
the situation denoted by reveal has actual  tem- 
poral reference, then its arguments are presumed 
to as well. 
8.2.  Nomina l l sa t lon  Mapp ing  Rules  
We will Use the previous example, ineestl- 
gatlon revealed metal eontamlnatlon in filter, 
to il lustrate the nom~nallsation analysis algo- 
rithm. We will describe the eontamlnat lon  
example first, since all of its roles are filled by 
syntactic constituents. The dotted llne divides 
the algorithm in Figure 2 in the Appendix into the 
parts that  are the same (above the line), and the 
parts that  differ (below the llne.) 
DECOMPOSE VERB - Contaminate decomposes 
into a NON-ESSENTIAL ins t rument  that  contam- 
inates an OBLIGATORY loeat lon .  
eontaminate  <-  
eontaminatedP  ( ins t rument  (I), 
l oeat lon(L ) )  
FOR ins t rument  role - In the example, meta l  is 
a noun modifier of contamination, and meta l l  
is selected as the filler of the ins t rument  role. 
FOR theme ROLE - The theme of a nominaU- 
nation can be syntactically realized by an of pp 
or an in pp. The role is filled with f l l te r l ,  the 
referent of/~l?er. 
At this point the temporal  component is called for 
the nomlnalisation metal eontamlnatlon in oll 
f i l ter  with two inputs: the decomposition struc- 
ture and the tense of the matr ix verb, in this 
case the simple past. Because this predicate is 
stative, the representation of the eontamlna-  
t lon  situation is a s ta te  predicate with the 
decomposition and a per iod  time argument as 
well as the unique identifier S, (which will be 
eventually be instantiated by reference resolution 
as \ [eontaminate l \ ] ) :  
s ta te (S ,  
eontamlnatedP  
( ins t rument  (meta l l ) ,  
\ ]oeat lon( f i l te r l ) ) ,  
(per lod(S) )  
In this context, the past tense indicates that  at 
least one moment within the period of contamina- 
tion precedes the time at which the report was 
filed. 
CALL REFERENCE RESOLUTION FOR NOlV\[I- 
NALLZATION - There are no previously men- 
tioned ?ontamlnatlon events, so a new referent, 
eontamlnat lon l  is created. There are no 
unfilled roles, so the analysis is completed. 
8.3.  F i l l l ng  Essent ia l  Ro les  
The analysis of the other nominallzation, 
in~emtlgatlon, i l lustrates how essential roles are 
filled. The decomposition of invest igate has two 
semantic roles, a NON-ESSENTIAL agent  doing the 
investigation and an OBLIGATORY theme being 
investigated. 9 
invest igate  
<-  i nvest lgateP  (agent  (A) ~ 
theme(T) )  
There are no syntactic constituents, so the map- 
ping stage is skipped, and reference resolution is 
called for the nominallzatlon. There are no previ- 
ously mentioned investigative vents in this exam- 
ple 10, so a new referent, invest igat |on l  is 
created. At this point, a second pass is made to 
at tempt o fill any unfilled roles. 
I In other domains, the theme can be essential, as in "I 
heard a noise. Let's investigate." 
I0 If the example had been, A sew ea?iseer isweetl- 
gate& tAe pump. TAe isteetlgntios oeeurre~ just  before 
tAe complete breakdown., a previously mentioned event 
would have been found, and the agent and theme roles 
would have inherited the fillers engineer1 and pnmpl  
from the reference to the previous event. 
135 
FOR agent  ROLE - The role is NON-ESSENTIAL, 
so Case 4 applies, and it is left unfilled. 
FOR theme ROLE - The selection restriction on 
the theme of an ineestlgation is that  it must be 
a d*msged component or a dauaage causing 
event. All of the events and entities mentioned so 
far, the ,ae  and the pump, the failsre of the sac 
and the shcar/ng of the pump satisfy this cri- 
teria. In this case, the item in focus, the ,hear- 
ing of the pump, would be selected ~)ah11986\]. 
The final decomposition is: 
invest lgateP  (agent (A) , theme(shear l ) )  
4. Other  Compounds  
In addition to nom~nalisations, PUNDIT 
deals with three other types of noun-noun com- 
pounds. One is the category of nouns with argu- 
ments. These include preuure  and temperature, 
for example. They are decomposed and have 
semantic roles like nominalisations; however, their 
treatment is different from that of nomlualisa- 
tions in that  they do not undergo time analysis, 
since they do not describe temporal situations. As 
an example, the definition of p reuure ,  
p ressureP  ( theme(T) , loeat ion(L ) ) ,  specifies 
theme and locat ion  as roles. The analysis of a 
noun phrase like sa? oil preuure  would fill in the 
loeat lon  with the sac and the theme with the 
oil, resulting in the final representation, 
p ressur  eP  ( theme(o i l l ) , l oeat lon(sae l ) ) .  
The syntactic mapping rules for the roles permit 
the theme to be filled in by either a noun modifier, 
such as all in this case, or the object of an o/  
prepositional phrase, as in prcuure o/oi l .  Siml- 
larly, the mapping rules for the location allow it 
to be filled in by either a noun modifier or by the 
object of an in prepositional phrase. Because of 
this flexibility, the noun phrases, sac all pres- 
mute, all preuure  in sac, and pressure  o f  oi1 
in  sac ,  all receive the same analysis. 
The second class of compounds is that of 
nouns which do not have semantic roles. For 
these, a set of domain-specific semantic relation- 
ships between head nouns and noun modifiers has 
been developed. These include: a rea  o f  ob jec t ,  
for example, blade tip, mater la l - fo rm,  such as 
metal partlclea; and mater |a l -ob jeet ,  such as 
metal eyllnder. These relationships are assigned 
by examining the semantic properties of the 
nouns. The corresponding prepositional phrases, 
as in tip o/ blade, particle, o/ metal, and 
cylinder of metal, have a similar analysis. 
Finally, many noun-noun compounds are 
handled as idioms, in cases where there is no rea- 
son to analyze the semantics of their internal 
structure. Idioms in the CASREPS domain include 
,hip, force,  gear *hair, and connecting pin. 
Our decision to treat  these as idioms does not 
imply that  we consider them unanalyzable, or 
noncompositional, but rather that,  in this domain, 
there is no need to analyze them any further. 
5. P rev ious  Computat lona l  T reatments  
Previous computational treatments of nomi- 
nalizations differ in two ways from the current 
approach. In the first place, nominallzations have 
often been treated simply as one type of noun- 
noun compound. This viewpoint is adopted by 
~inin1980,Leonard1984,Brachman(nuli)\]. Cer- 
tainly many nomlnalizations contain nominal 
premodifiers and hence, syntactically, are noun- 
noun compounds; however, this approach obscures 
the generalization that  prepositional phrase 
modifiers in non-compound noun phrases often 
have the same semantic roles with respect to the 
head noun as noun modifiers. PUNDIT's analysis 
is aimed at a uniform treatment of the semantic 
s~ml\]arlty among expressions like repair of 
enf lne,  enf~ne repair ,  and Csomeone) repaired 
englne rather than the syntactic similarity of 
engine repair, sir preuure, and metal partl- 
eles. Of the analyses mentioned above, 
Brachman's analysis seems to be most similar to 
ours in that it provides an explicit link from the 
nominalization to the related verb to relate the 
roles of the noun to those of the verb. The second 
way in which our approach differs from previous 
approaches is that  PUNDIT's analysis is driven 
by taking the semantic roles of the predicate and 
trying to fill them in any way it can. This means 
that PUNDIT knows when a role is not explicitly 
present, and consequently can call on the other 
mechanisms which we have described above to fill 
it in. Other approaches have tended to start by 
fitting the explicitly mentioned arguments into 
the role slots, thus they lack this flexibility. 
6.  L |ml ta t |ons  
The current system has two main limita- 
tions. First, there is no attempt to build inter- 
nal structure within a compound. Each nominal 
modifier is assumed to  modify the head noun 
unless it is part of an idiom. For this reason, 
136 
noun phrases like impel\[or blade t~p erosion 
cannot be handled by our system in its current 
state because impel\[or b\[a,le tip forms a 
semantic unit and should be analysed as a a 
single argument of eroaion. The second problem 
k related to the first. The system does not now 
keep track of the relative order of nora|hal 
modifiers. In this domain, this does not present 
serious problems, since there are no examples 
where a different order of modifiers would result 
in a d~erent  analysis. Generally, only one order 
is acceptable, as in mac oil eo~taminatlon, ~o~\[ 
both powerful and extenslble, and which will pro- 
vide a natural  basis for further development. 
Acknowledgements 
We would like to thank Lynette Hirschman 
and Bonnie Webber for their helpful commments 
on this paper. 
7. Conc lus |ons  
In this paper we have described a t reatment  
of nom~nalisatlons ill which the goal ls to maxim- 
\[se the s~m~\]arities between the processing of nom- 
inallsatlons and that  of the clauses to whkh they 
are related. The semantic s~m~\]arltles between 
nom~nallzatlons and clauses are captured by mak- 
ing the semantic roles, semantk  decompositions, 
and selectional restrictions on the roles the same 
for nomlna\]isations and their related verbs. As a 
result, the same semantk  representation k con- 
structed for both structures. This s~m;|arity in 
representation i turn anows reference resolution 
to find referents for nom;nallsations whkh refer 
to events previously described in clauses. In addl- 
tion, it allows the time component o integrate 
temporal  relationships among events and situa- 
tions described in clauses with those referred to 
by non~uaUsations. 
On the other hand, where d~erences 
between nom~uaUsations and clauses have a clear 
\]ingulstic motivation, our t reatment provides for 
differences in processing. PUNDIT recognizes that  
the semantic roles of non~na\]ised verbs are 
expressed syntactical ly as modifiers of nouns 
rather than arguments of clauses by having a 
d~erent  set of syntactic mapping rules. It ls also 
true in nominallsatlons that there are no syntac- 
ticaUy obligatory arguments, so the analysis of a 
nom;nallsation does not fall when there is an 
unfilled obligatory role, as is the case with clauses. 
Finally, the temporal  analysis component is able 
to take into account the fact that  nomlnallzatlons 
are untensed. 
~rh;le there are many cases not yet covered 
by our system, in general, we believe this to be an 
approach to processing nomlnallsatlons which is 
137 
APPENDIX  
DECOMPOSE VERB; 
FOR EACH SEMANTIC  ROLE 
CASE I: IF THERE ARE SYNTACTIC  CONSTITUENTS - 
PROPOSE SYNTACTIC  CONSTITUENT FILLER 
CALL  REFERENCE RESOLUTION 
& TEST SELECTIONAL RESTRICTIONS 
CASE 2: IF ROLE IS OBL IGATORY AND SYNTACTICALLY  UNFILLED - 
FAIL 
CASE 3: IF ROLE IS ESSENTIAL AND UNFILLED - 
CALL  REFERENCE RESOLUTION TO HYPOTHESIZE  A FILLER 
& TEST  SELECT IONAL RESTRICT IONS 
CASE 4: IF ROLE IS NON-ESSENTIAL  AND UNFILLED - 
LEAVE UNFILLED 
CALL  TEMPORAL ANALYSIS ON DECOMPOSIT ION 
FIKure 1. C lause AJtalysls AlKorlChm 
DECOMPOSE NOMINALIZATION 
FOR EACH SEMANTIC  ROLE: 
IF THERE ARE SYNTACTIC CONSTITUENTS - 
PROPOSE SYNTACTIC CONSTITUENT FILLER 
& CALL REFERENCE RESOLUTION 
& TEST SELECTIONAL RESTRICTIONS 
CALL TEMPORAL ANALYSIS ON DECOMPOSITION 
CALL REFERENCE RESOLUTION FOR NOMINALIZATION NOUN PHRASE 
FOR EACH SEMANTIC ROLE: 
IF ESSENTIAL ROLE AND UNFILLED 
CALL REFERENCE RESOLUTION TO HYPOTHESIZE A FILLER 
TEST SELECTIONAL RESTRICTIONS 
ELSE LEAVE UNFILLED 
FJKure 2. Nomlna l l sa~ion Ana lys is  AIKorlthm 
138 
REFERENCES 
~rachman(nuU)\] 
Ronald J. Brachman, A Structural 
Paradigm for Representing 
Knowledge. In BBN Report No. S605, 
Bolt Beranek & Newman, Cambridge, 
Massachusetts. 
~ah11980\] 
Deborah A. Dahl, Focusing and Refer- 
ence Resolution in PUNDIT, Presented 
at AAAI, Philadelphia, PA, 1986. 
~ah11987\] 
Deborah A. DaM, Determ~-ers, Entitles, 
and Contexts, Presented at TInlap?3, 
Las Cruces, New Mexico, January 7?9, 
1987. 
~11more1968\] 
C. J. F;nmore, The Case for Case. In 
Uni, ersal, in Linguimtie Theory, E. 
Bach and R. T. Harms (ed.), Holt, 
Rinehart, and Winston, New York, 
1968. 
~ininZO80\] 
Tim Finin, The Semantic Interpretation 
of Compound Nominals, PhD Thesis, 
University of Tlll,ois at Urbana- 
Champaign, 1980. 
\[I-Iirschman1985\] 
L. Hirschman and K. Puder, Restriction 
Grammar: A Prolog Implementation. I  
Lo?ie Pro?ramminff and ira Applica- 
tion,, D~-I.D. Warren and M. 
VanCaneghem (ed.), 1985. 
~'lirschman1986\] 
L. H~rschman, Conjunction in Meta- 
Restriction Grammar. d. of Loglc Pro- 
grumminq, 1986. 
~eonard1984\] 
Rosemary Leonard, The Interpretation 
of En?limh Noun Sequeneem on the 
Computer. North Holland, Amsterdam, 
1984. 
\[Palmer1981\] 
Martha S. Palmer, A Case for Rule 
Driven Semantic Processing. Proc. o/ 
the 19th ACL Conference, June, 1981. 
~almer1985\] 
Martha S. Palmer, Driving Semantics 
for a Limited Domain, Ph.D. thesis, 
University of Edinburgh, 198,5. 
~almer1988\] 
Martha S. Palmer, Deborah A. Dahl, 
Rebecca J. ~assonneau\] Sch~man, 
Lynette Hirschman, Marcia Linebarger, 
and John Dowding, Recovering Implicit 
Information, Presented at the 24th An- 
nual Meeting of the Association for 
Computational Linguistics, Columbia 
University, New York, August 1986. 
~assonneau1988\] 
o 
Rebecca J. Passonneau, A Computa- 
tional Model of the Semantics of Tense 
and Aspect, Loglc-Based Systems 
Technical Memo No. 43, Paoli 
Research Center, System Development 
Corporation, November, 1986. 
~assonneau198~ 
Rebecca J. Passonneau, Designing Lexi- 
cal Entries for a Limited Domain, 
Loglc-Based Systems Technical Memo 
No. 42, Paoli Research Center, System 
Development Corporation, April, 1988. 
139 
