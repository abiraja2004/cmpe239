hesaurus-based Efficient Example Retrieval 
by Generating Retrieval Queries from Similarities* 
Takehito Utsuro t Kiyotaka Uchimoto* Mitsutaka Matsumoto* Makoto Nagao* 
~ tGraduate School of Information Science lDept, of I',lectrlcal Engineering 
Nara Institute of Science and Technology Kyoto University 
Abst rac t  
In example-based NLP, the problem of eoml)utational 
cost of example retrieval is severe, since the retrieval 
time increases in proportion to the number of examples 
in the database. This paper proposes a novel example 
retrieval method for avoiding ftfll retrieval of examples. 
The proposed method has the following three features, 
1) it generates retrieval queries from similarities, 2) ef- 
ficient example retrieval through the tree structure of a 
thesaurus, 3) binary search along subsumption ordering 
of retrieval queries. Example retrieval time drastically 
decreases with the method. 
1 I n t roduct ion  
Since a nmdel of machine translation (MT) called 
Translation by Analogy was first proposed in Nagao 
(1984), nmch work has been undertaken in example- 
ba~sed NLP (e.g. Sato and Nagao (1990) and Kuro- 
hashi and Nagao (1993)). The basic idea of example- 
based approach to NLP is to accomplish some task in 
NLP by imitating a similar previous example, instead 
of using rules written by human writers. Major pro- 
cessing steps of example-based approach are: 1) collect 
examples and the results of performing the task in a 
database, 2) given an input, retrieve similar examples 
from the database, 3) adapt the results of tile similar 
examples to the current input and obtain the output. 
Compared with the traditional rule-based approach, 
example-based approach has advantages like: 1) it is 
easier to maintain the implemented system, since once 
the system is constructed, the performance can be im- 
proved just by adding new examples, 2) finer-grained 
syntactic and semantic discrimination can be expected 
just by adopting finer-grained similarity measure be- 
tween the input and the example. 
ht almost all the previous fl'ameworks of example- 
based NLP, it is necessary to calculate similarity values 
for all the examples in the database in order to find the 
most similar one, and this is called full retrieval. Usu- 
ally, the computational cost of example retrieval causes 
a severe problem, because the retrieval time increases in 
proportion to the number of examples in the database. 
This paper proposes a novel method for avoiding flfll 
retrieval. The proposed method, which we call query 
generation retrieval, has the following three features, 
*The authors would like to thank Prof. Y. Matsumoto f 
Nara Institute of Science and Technology, Dr. Y. Den and Dr. 
E. Sumita of ATR, and Mr. M. Shimbo of Kyoto University, for 
valuable comments on the draft of the paper. 
1) it generates retrieval queries from similarities, 2) ef- 
ficient example retrieval through the tree structure of 
a thesaurus, 3) binary search along subsumption or- 
dering of retrieval, queries. In this paper, we focus on 
retrieval of example surface case structures of Japanese 
sentences. The similarity vatne between the input and 
the example is calculated using existing hand-compiled 
thesaurus. In the following sections, the similarity mea- 
sure of surface case structures is defined in section 2, 
then the framework of query generation retrieval is de- 
scribed in section 3. 
2 S imi la r i ty  o f  Sur face  Case  
St ructures  
As a similarity measure  of sur face  case structm'es~ we 
basically use the similarity measure in Kurohashi and 
Nagao (1.993). Since the attthors' similarity measure 
is intended for calculating similarity between tile input 
surface case structure and a case fl'ame with exalnple 
nora, s, we adjust it to the similarity betweei, two sur- 
face case structures. Tile following describes the data 
structure of surface case structures and the thesaurus, 
and gives the definition of the similarity measure. 
2.1 Data Structure 
2.1.1 Sur face Case St ructure  
In general, surface case structure of a Japanese sentence 
can be represented in feature-structure-like notation as 
below: 
\[ pred:V, pl \[pred:Nl , .,p,~: : .sern:Seml \] "" \[pred:Nn 
In this notation, V is the verb, P l , . . . , P~ are the 
Japanese surface ease markers, N1, . . . ,  N,~ are ease eb 
ement norms, and Semi,. . .  ,Sem,~ are the semantic 
categories of each case element in a thesaurus. 
In our task of retrieval of example surface case struc- 
tures, the input and the examples to be retrieved have 
to have the same verb. Besides, the similarity value 
between the input and the example is dependent only 
on each semantic ategory. Thus, in this paper, we de- 
fine the smJaee case structure of a sentence a.q the set 
of pairs {p, Sere) where p is a surface case marker and 
Sere is the leaf semantic ategory of the case element 
noun: 1 
e : { (pl, Seg~gl) . . . . .  (pn, Se~Ttn> }
1In the remainder of this paper, for brevity's ake, we regard 
lloans as analllbigllOllS I~tlld assume that a noun has only one 
leaf semantic ategory in the thesaurus, although noan8 (:an be 
ambiguous and have more than one semantic ategory in the 
current implementation. 
1044 
2.1.2 Thesaurus  
A thesaurus of nouns is regarded us a tree in which 
each node represents a semantic ategory. We define a 
thesaurus of nouns as a rooted directed tree (SC, El) 
where SC is the set of semantic categories and Et C= 
SC x SC is the set of directed edges: 
l'Jt =: { (5'eml,5'emj) l S'emi,.S'em j ~ .qU } 
A noun has on{! (or possibly more) leaf semantic ute- 
gory in the thesaurus. At present we use an on-line the- 
saurus called Bunrui Goi Ilyou (BGH) (NLR1, 1964). 
BGII  has a six-layered M)straetion hierarchy and more 
than 60,000 Japanese words are assigned to the leaves. 
2.2 S imi la r i ty  Measure  
2.2.1 S imi la r i ty  o f  Se |nant ic  Categor ies  
Before we define the similarity of surfaee case struc- 
tures, first we deline the similarity of semantic cat- 
egories in the thesaurus. We detine the similarity 
sim.~(,b'eml , Sere2) of two semantic eatego'ries ~5'e11~1 
and Sere2 as ~L monotonieal ly increasing function of 
the most specific eonllilOll layer mscl(Seml, ,5'ern2) of 
Senh and ,S'e~*, 2 aS below: 
mad / 1 2 3 4 5 6 exact match 
1 ,S/ms undef 5 7 8 9 18 11 
2.2.2 S imi la r i ty  o f  Sur face  Case  St ructures  
First,  we assume, that  the similarity measure of surface 
c~Lse sl;ructnres have to satisfy the following require- 
meats. The s imibmty should become greater if 1) the 
number of the eol'respoiMing cases becomes greater, o,' 
2) the corresponding ease element nouns become more 
similar, or 3) the ratio of the number of the correspond- 
ing cases to the l,nnlbcr of the cases in each surface case 
structure becomes greater. 
When cMculating the simihLrity of two surface case 
structures el and e2, flrsl; e~ and e2 are matche(l and 
the set of pairs of the corresponding eases, M(ea,e2), 
is construcl;ed. A ease (pli, Sernli) of el corr(> 
sponds to ~ c~se (p2j,Sern2j} of e2 only when the 
surface case markers Pil and P2j are tim same and 
sim~(Sern,i, Sem2j) is (lefine(l. 2 bet s imp. , (m)be  the 
similarity of a pair m of corresponding cases, then the 
similarity sims(el,e2) of the two aurfae.e case struc- 
tures el and (!2 is delined as below: 
. im,,.  ( r. ) 
v/\[MI x :"~<-r~- . . . . . . . .  IMI x ~IFMI( x VIe=/'/\[~ 
where IMI is the number of the corresponding causes, 
and I,~,l and I~=i a,'e the number of case,~ in e, ~md e2 
respectively. The first factor satisfies requirement 1), 
2In Japanese, there exist several topic-marking post- 
positional particles uch as "tl (wa)" and "g (too)", and eases 
marked by those topic-marking post-positional particles could 
correspond to cases marked by caue-marking post-lmsitional par- 
tides such a.s "/)? (ga-NOM)" and "~: (wo-ACC)'. Although this 
paper considers ease-marking post-positional particles only, the 
implemented system can appropriately cMeulate the similarity 
of surface ase structtnes in which topic-marking po.st-positionM 
particles apl)e~m 
and tile second sat is fes 2). '.File third and the fourth 
satisfy 3) .  
For example, the similarity of the surface case struc- 
tures el and e2 of Example 1 and 2 is calculated as 
folh)ws. 
Example  1 
kare- ga hon - wo  kau 
he - NOM book- ACC buy 
(fie buys a book.) 
Example. 2 
kare- ga musuko-, ni nooto-, wo kau 
he - NOM son- DAT notebook- ACC buy 
(lie buys his son a notehook.) 
First, the set of pairs of the COl'rest)onding cases, 
M(c l ,  e~), is constructed (nb=notcbook). 
- { (( ~ (,,,{0, se,,~,~), ( ~ (u~), Semao)), M( ) 
~: (wo), Sem~oo~), ( ~ (wo), se~.~,~,,)) } (( 
In the ease of semantic ategories in BGIt, the results 
of the similarity calculation are sim..(Se~nh~, Semhe) 
= 11 and simo(Se.~boo~, Se.~)  = 9. S ince  IMI ,  levi ,  
and levi are 2, ~, a.d 3 respectively, s ims(e l ,e2) i s  
cMculated as follows: 
11+9(22  ~ ~i.~,.(e,,e~) = ? '~x-  2 x x = u.ss  
3 Query  Generat ion  Ret r ieva l  
Query generation retrieval has the following three t~a- 
tares, 1) it generates retrievM queries from similarities, 
2) eflleient example retrievM through the tree struc- 
ture of a thesaurus, 3) binary search along subsump- 
lion ordering of retrieval queries. F ig .  1 describes the 
framework of query generation retrievM. 
In query generation retrieval, first, given an inlmt 
surface case structure, t retrieval query is generated 
for a certmn similarity and then example surface case 
structures which satisfy the similarity are retrieved 
from the example database. In order to generate a re- 
trieval query which satisfy the given similarity require- 
meat,  it is necessary to enumerate all the l)ossible pat- 
terns of surf~tce case structures which satisfy the given 
similarity reqtdrement. We define similarity template 
which enumerates all the possible patterns of (:alculat- 
lug similarity between two surface case structures and 
collect them in a similarity table. The similarity table 
is referred to whm, gener~tting retrievM queries from the 
inl)ut surface case structure and a certmn similarity. 
A retriewd query consists of the number of cases of 
the e?ample to be retrieved, cases which the example 
to be retrieved should have, and semantic restrictions 
of ease element nouns. \[n order to quickly retrieve ex- 
amples which satisfy a retrievM query, for each surface 
case marker we build a sub-structure of the whole the- 
sara'us of l|OUiis, which we call sub-thesaurus. Examples 
which satisfy the requirements in a retrieval query are 
quickly retrieved through the tree structure of those 
sub-thesauri.  
1045 
Input Surface Case Structure 
? 
Similarity Table 
(Similarity Template) 
? 
Retrieval Query 
? 1 
, r 
\ / 
Fig.  1: The Framework of Query Generation Retrieval 
In our query generation retrieval, it is necessary to 
control the retrieval process effectively by providing 
similarities in a certain order and to retrieve the most 
similar examples as fast as possible. In this paper, we 
use binary search along subsumption ordering of re- 
trieval queries. It is possible to define a subsmnption 
relation between two retrieval queries. Such subsump- 
tion relation of retrieval queries results in the subsump- 
tion relation of the sets of retrieved examples. This 
means that a set of retrieved examples ubsumes an- 
other set if the retrieval query of the former set sub- 
sumes, or in other words, is more general than that 
of the latter set. With those subsumption relations of 
retrieval queries and the sets of retrieved examples, it 
becomes possible to efficiently binary-search t e set of 
examples to be retrieved by the most specific retrieval 
query. 
Sections from 3.1 to 3.3 describe those three features 
and section 3.4 evaluates the framework. 
3 .1  Ret r ieva l  Query  Generat ion  f rom 
S imi la r i t ies  
3.1.1 Retrieval Query 
A retrieval query q is defined as a pair (ldb, csp), where 
ldb is the number of cases of the example to be re- 
trieved, and csp is the requirement on cases and se- 
mantic restriction of case element nouns, which we call 
a case structure pattern. A case structure pattern is 
represented as a set of pairs (p, Sere) of a surface case 
marker p and a semantic category Sere, where Sere 
is not necessarily a leaf semantic ategory. It requires 
that for each element (p, Sem} in csp, the example to 
be retrieved has to have a case marked by p and the 
case element noun has to satisfy the semantic restric- 
tion of the semantic ategory Sere. 
For example, for the verb "~ ~) (buy)", the following 
ql requires that  the example to be retrieved should have 
three cases, the case element noun of "~ (ga-NOM)" 
should be "~/(he)" ,  and that of the "~ (wo-ACC)" 
case should belong to the semantic ategory of "st"(= 
"stationery"). ql retrieves examples like "~/, ~,  ,~, f', ~:-, 
/ " -  b, ~, ~'~ 5"(He buys his son a notebook.) and "~, 
~, ~,  V-, ,~~?, ~ , ~'~ ")"(He buys his daughter pencils.). 
ql = (3, { (;4 ~(ga),Semhe),(~ wo),Semst) } ) 
3.1.2 Similar ity Template 
We introduce the notion of similarity template in order 
to enumerate all the possible patterns of calculating the 
similarity between two surface ease structures. In the 
case of the similarity measure defined in section 2.2.2, 
a similarity template is represented as a 3-tupple: 
where lin and lab correspond to the number of cases 
of the input and of the example respectively, and they 
are supposed to be less than or equal to the prede- 
termined maximum number l,~a~. CS is the multiset 
of the similarities between corresponding ease element 
nouns. For example, in the case of Example 1 and 2 in 
section 2.2.2, the result of similarity calculation is rep- 
resented as a similarity template (2, 3, {11, 9}} (suppose 
that the former example is the input and the latter is 
from the example database). 
All the possible combinations of li,, ldb, and CS can 
be enumerated beforehand without any inputs and ex- 
amples if only the maximum case number lm~ is given. 
Suppose that lm~, is 3, the number of possible combi- 
nations of lin, ldb, and CS is 203. 
3.1.3 Retrieval Query Generation 
Similarity templates are collected in the similarity table 
and referred to when generating rctrievM queries from 
the input and a certain similarity. The following shows 
how to generate a retrieval query frmn an input ei,~ and 
a similarity template t = (\]ei,d, ldb , CS). 
The retrieval query to be generated is denoted as 
q = (Idb,CSp), where ldb corresponds to the munber of 
cases in tile example to be retrieved and is the same 
as Idb. in t. CS in t is the multiset of the similarities 
between corresponding case element nouns. When con- 
structing the case structure pattern csp fl'om ein and 
CS, we use an injection to map each similarity sire in 
cs  to  a ease (p, Se.~)  in ~ .  ~or each (p, Se~,~) 
to which a similarity sire is mapped, a case (p, Sere) 
is collected into csp, where the semantic ategory Sere 
satisfies im~( Semin, Sere) = sire. 
For example, let the input ei,~ be the surface case 
structure of Example 1 and the similarity template t
be (2,3, {11,9}), then there exist two possible injec- 
tions frmn CS into ein and two retrieval queries are 
generated as below (s im,(SemN, SemN,,,) = x): 
o. = { (~'(~a),S~..~o,,(~(.~o),S.m~oo~) } 
ql = (3,{( ~)"(ga),Semhe,ll),( e wo),Sembook,9)}> 
1046 
3.2 Efficient Example Retrieval with 
Sub-Thesaurus 
Each element (p, Sern} in a case structure pattern csp 
requires that  the example surface case structure has to 
have a case marked by p and the case element noun 
has to satisfy the semantic restriction of the seman- 
tic category Sere. Given the example databa.se, it is 
possible to collect examples which satisfy the require 
ment {p, Sere} beforehand. For each case marker p, 
we collect all those sets of examples. Since all tile se- 
mantic categories forms the whole thesaurus of nouns, 
non-empty sets of those collected examples also form a 
sub-structure of the whole thesaurus of nmms. We call 
it a sub-thesaurus for the case marker p. 
Fig. 2 shows an example of the sub-thesaurus for " 
(wo-A CC)" cause, supposing that the example database 
contains Example 1 and 2 in section 2.2.2. The most 
specific common layer of Sembook and Semnb is the 
layer 5, and the example set is {Egl} or {Eg2} at layer 
6 and 7(leaf), and {Egl,Eg2} above layer 6. 
Given a requirement (p, Sere) and a sub-thesaurus 
for p, examples which satisfy the requirement are 
quickly retrieved through the tree structure of the sub- 
thesaurus in constant ime. Examples wtfich satisfy all 
the requirements in csp are obtained as the intersection 
of all those sets of retrieved examples. 
The Size of A Sub-Thesaurus  
We estimate the size of all the sub-thesauri by the total 
number of elements in the nodes of those sub-thesauri. 
Let N be the total number of examples in the example 
database, d be the depth of the whole thesaurus of 
nouns, and lrna~ be tile maximum case number. A case 
element noun in an e?ample appears it, a leaf node and 
all of the parent nodes of the leaf in a sub-thesaurus, 
thus appears d times. Since the number of case element 
nouns in an example is at most lmaa~, the number of 
e~se element liouns ill the examph', database is at most 
N x lm=~ and the order of the size of all the sutl-thesauri 
is at most Nxl  . . . .  xd, i.e., O(N) ( l ..... xd is constant). 
a .a  B inary  Search  a long  Subsmnpt ion  
Order ing  o f  Ret r ieva l  Quer ies  
3.3.1 Subsumpt ion  Re la t ion  
A subsumption relation can he defined between two re- 
trievM queries, and results ill tim subsmnption relation 
of the sets of retrieved examples. For cxmnple, in the 
case of the following two retricval queries ql and q2, q2 
has a requirement on the "~: (ni-DAT)" case while ql 
does not, and the requirement on tile "\]fi (.qa-NOMO" 
case is more specific in q2 than in ql. Thus, q2 is more 
specific than ql, or in other words, ql subsumes qa. 
q, = (3, { {-~(.qa),Se,;~th ....... ),( '2 (wo),Se.mtt) } ) 
q~ : (a, { (~s(,~),s..,,,~),( ~. (,,,o),s~..,), 
. . . . . . .  ,}) 
Furthermore, ql and q2 are generated from the similar-- 
ity tenlplates t , -  <2, 3, {5,9}} a.nd t2 : <2, 3, {11, 9, 5}) 
gg2 
//.'/" //'/ /,/" , .* /,' v" 4 ", ,, "'.,, 
/ / .," a ~ { Egl, Eg2 } ",, 
/' / /" 6 
/ /  . /" / '  { Egl Eg 
7 (Leaf). 
/ '  
S e nl (g,.book) S c in ( / -  \]',.notebook) 
Sub-Thesaurus for ~ (wo-ACC) Case 
~/~:~"~ -) Rool ,~:{ Egl, Eg2 } 
(llc buys a Ix~0k,) //\[ ",,, 
~,I,l~ {'l: Layei' 1 ~ ",, 
/-- I, ~'fi: 5 (noun) / ".. 
(lie buys his son / :  ,~  ", 
a notebook,) // "r"', "" 
..... ? " ...,..~ / " ~ ( Egl, Eg2} "".. 
i 
F ig.  2: An Example of Sub-Thesaurus 
respectively, and a subsmnption relation of similarity 
templates holds between tl and t2 as well. 
3.3.2 S imi la r i ty  Tab le  
With the subsun,ption relations of retrieval queries and 
the sets of retrieved examples, it is possible to eificiently 
binary-search the set of examples to be retrieved by 
the most specific retrieval query. In the following, we 
describe how to organize the set of all the similarity 
templates as a similarity table and to realize the process 
of binary search of the most similar examples. 
First, the set of all the similarity templates is divided 
into a sequence T I , . . .  , 2'n which is totally ordered by 
the following subsumptiou relation. Let ein be the in- 
put and Ti,Tj(i < j) be the sets of similarity templates 
ill the sequence T1,. . .  ,:/'~,, and EGi, EGj be the sets 
of examples retrieved by all the similarity templates in 
7~ and \[D respectively. Then, ~/~ subsumes 7) if and 
only if, t) EGi subsmnes EGj, and 2) the sets of re- 
trieved examples are totally ordered by similarity, i.e., 
Ve.i (~ EGI Vcj E E(;j, sim~ (ein, ei) < sim~ (ei,,, e i). 
In the case of the similarity measure defined in sec- 
tion 2.2.2, suppose that lm~ is 3, tile length of the 
sequence 7'1,... ,7~ in the similarity table is 7 when 
li~, is l, 9 when li,~ is 2, and 11 when li~ is 3. 
With this subsmnl)tion ordering, the most similar 
examples are obtained by finding the most specific Ti 
with non-empty EGi and then finding the most similar 
exaruples in EGI. Since EGi = ? means EGj = ? for 
any j > i, this search process can be efficiently real- 
ized by binary-searching the sequence T l , . . . ,  T,. This 
sequence T l , . . . ,  Tn can be regarded as a table of sim- 
ilarity templates and is called similarity table. 
Fig. 3 shows the binary search of the similarity ta- 
hle. Example space is partit ioned by the snbsumption 
relation. The most similar examples are fmmd in the 
innermost nm>mnpty set. This binary search method 
makes efficient retrieval possible whether the example 
1047 
Example Space 
x Subsumpt lon  Relat ion 
x .. ..................... ,o 
. . . . , . .  ,% ,, 
., ...... ?:.::::.... ....... . 
The Input  
The  Most  S imi lar  Example  
" : Example  
Fig. 3: Binary Search with Subsumption Relation 
database contains imilar examples or not. 
3.4 Evaluation 
The framework of query generation retrieval consists of 
three major components, i.e., the example database, the 
similarity table, and the set of sub-thesauri. Let N be 
the size of the example database, the order of the size 
of the similarity table is independent of N and that of 
the set of sub-thesauri is O(N). Thus, tile total order 
of the size of the system is O(N). 
In order to evaluate the computational cost, we plot 
the computation time (in CPU time), increasing the 
nunlber of examples N, and compare the result with 
a full retrieval program. The example database con- 
tains example surface case structures of the Japanese 
verb "F~ +) (buy)" and both programs retrieve the most 
similar examples from the example database, given an 
input surface case structure of the same verb "~;~ ) 
(buy)". For the query generation retrieval program, 
the maximum number l. . . .  of cases was 3. The full 
retrieval program calculates the similarity between the 
input and the example for all the examples in the ex- 
ample database, and retrieves the examples with the 
greatest similarity. Both programs are implemented in
SICStus Prolog 2.1 on a SPARC station-10. Fig. 4 il- 
lustrates the results. The computation time of the full 
retrieval program is proportional to N, while that  of 
the query generation retrieval program is nearly con- 
stant. Thus, our query generation retrieval program 
achieved drastic improvement in decreasing computa- 
tional cost compared with the full retrieval program. 
4 Conc lud ing  Remarks  
This paper proposed a novel example retrieval method 
in example-based NLP, bascd-on generating retrieval 
queries fl'om similarities. The proposed method is 
applicable to any other definitions of similarities in 
example-based NLP, if the following three requirements 
are satisfied, 1) the similarity is calculated based-on 
word sense similarities in a thesaurus, 2) the similarity 
can be defined as a fnnetion of a small number of fac- 
tors, 3) each factor varies over not too many number 
of discrete values, or otherwise, continuous values can 
be transformed into not too many discrete values. 
300 . . . .  T . . . .  ~ -~- -  ~ - - , - - -  
Full Retrieval *-  , , ~  
Query Generation Retrieval , / 25O 
2OO 
E 150 
F- 
IO0 
5O 
0 - ~ - -  
0 20 40 60 80 100 120 140 
Number  of Examples 
Fig. 4: Time per Number of Examples 
In this paper, we restrict ourselves to the eases where 
examples have the same verb as input. However, sim- 
ilarities of verbs have to be considered and the exam- 
ple database has to contain examples of many verbs. 
Constructing sub-thesauri aright be a problem in those 
eases, and the solution nfight be that all the examples 
are distributed into several sets of sub-thesauri. 
In applications like case-based reasoning (CBR) and 
information retrieval (IR), good examples do not nec- 
essarily have the greatest similarity and thus content- 
based indexing methods are more effective. On the 
other hand, in example-based NLP, usually similarity 
measure is strictly defined and only the most similar 
examples are retrieved. The proposed query genera- 
tion retrieval fits this feature of example-based NLP. 
The idea of generating retrieval queries from simi- 
larities is employed also in several other related fields 
such as translation aid system (Snmita and Tsutsumi, 
1988) and CBR (Shimazu, Kitano and Shibata, 1993). 
Since the tasks of those works are different front ours, 
their formalizatimm are different from ours. 
References  
Kurohashi, S. and Nagao, M. (1993). Structural disam- 
biguation in Japanese by evaluating case structures 
based on examples in case frame dictionary, Proceed- 
ings of the 3rd IWPT, pp. 111-122. 
Nagao, M. (1984). A frmnework of a mechanical translation 
between Japanese and English by analogy principle, in 
A. Elithorn and R. Banerji (eds), Artificial and Humau 
Intdligence, Elsevier Science Publishers, B.V. 
NLRI (National I,anguage Research Institute). (1964). 
Word List by Semantic Principlea, Syuel Syuppan. (in 
Japanese). 
Sato, S. and Nagao, M. (1990). Toward memory-based 
translation, Proceedings of the 13th COLING, Vol. 3, 
pp. 247-252. 
Shlmazu, H., Kitano, H. and Shibata, A. (1993). Retriev- 
ing eases from relational data-bases: Another stride 
towards corporate-wide case-base systems, Proceedings 
of the 13th \[.\]CA\[, pp. 909 914. 
Sumita, E. and Wsutsumi, Y. (1988). A translation aid 
system using flexible text retrieval based-on syntax- 
inatching, Proceedings ofthe 2nd TML 
1048 
