Portable Software Modules for Speech Recognition 
(Phase I SBIR grant from DARPA) 
John Shore 
Entropic Research Laboratory, Inc. 
600 Pa. Ave. S.E., Suite 202 
Washington, D.C. 20003 
202-547-1420 
shore@wrl.epi.com 
We have completed Phase I of an SBIR 
project that aims to develop a unix soft- 
ware package that will support R&D in 
speech recognition. 
Technology transfer among speech recogni- 
tion groups is inhibited by the lack of conve- 
nient and powerful means for exchanging 
programs and data. The new Speech Recog- 
nition Package (SRP) will emphasize exten- 
sibility, robustness, and portability. The 
design will exploit advanced software engi- 
neering techniques such as abstract inter- 
faces, objectoriented programming, and self- 
describing objects. The technology base for 
the SRP includes two existing commercial 
software packages - the Entropic Signal 
Processing System (ESPS) and its waves+ 
graphics interface. 
The Phase I goals were: 
? to design and implement a new Entropic 
Signal Processing System (ESPS) pro- 
gram to compute the FFT-based cep 
strum (with mel-warping); 
? to design and implement an ESPS fea- 
ture file containing acoustic parameters 
for speech recognition applications; 
- to  design and implement a prototype 
acoustic feature extraction module of the 
SRP (including a user interface that 
allows the specification of desired acous- 
tic parameters via screen buttons); 
? to demonstrate the integration of the 
new module with ESPS and waves+; and 
? to design extensions and revisions of 
ESPS that would yield a suitable SRP. 
All of the Phase I technical objectives were 
met. Furthermore, we developed a suitable 
software engineering methodology for the 
SRP, and we demonstrated the methodology 
by designing, implementing, and testing 
three low-level modules: 
user_messages- facilities for issuing 
information, debugging, and error mes- 
sages to the user, as well as for obtaining 
user inputs in response to prompts; 
initstop facilities for initializing pro- 
grams and for stopping them (both nor- 
mal and abnormal termination); and 
errors - facilities for declaring/reporting 
fatal and non-fatal errors, facilities for 
handling fatal errors, and facilities for 
function tracing. 
415 
