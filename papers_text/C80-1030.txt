ADAPTAT ION OF  MONTAGUE GRA/k4MAR TO THE REQUIREMENTS OF  QUEST ION-ANSWERING 
S.P.J. Landsbergen 
Philips Research  Laboratories 
Eindhoven - The Netherlands 
Abst rac t  
In this paper  a new vers ion  of Montague  
Grammar  (MG)  is deve loped ,  wh ich  is su i tab le  
for application in question-answering systems. 
The general f ramework  for the definition of 
syntax and semantics described in Montague's 
'Universal Grammar '  is taken as starting- 
point. This f ramework  provides an elegant way  
of defining an interpretation for a natural 
language (NL): by means  of a syntax-directed 
translation into a logical language for which an 
interpretation is defined directly. 
In the question-answering system PHL IQA i \[i\] 
NL  questions are interpreted by translating 
them into a logical language, the Data Base 
Language, for which an interpretation is defin- 
ed by the data base. The similarity of this 
setup with the Montague f ramework  is obvious. 
At first sight a QA system like this can be 
viewed as an application of MG.  However,  a 
closer look reveals that for this application MG 
has to be adapted in two ways. 
Adaptation i. MG is a generative formalism. 
It generates NL  sentences and their logical 
forms 'in parallel'. In a QA system a parser is 
needed: an effective procedure which assigns to 
an input question the syntactic structure that is 
required for the translation into the logical 
language. The MG f ramework  has to be chang- 
ed in such a way  that for each grammar  within 
that f ramework  a parser can be defined. 
Adaptation Z. The logical language used in MG 
contains a term for every referential word. 
The Data Base Language of a QA system is 
restricted in this respect, which is caused by 
the fact that the data base only contains knowl- 
edge about a restricted subject-domain. There-  
fore the translation f rom NL  into the Data Base 
Language is partial. An  extension of MG is 
needed which shows how a subset of NL  sen- 
tences can be interpreted by means  of a trans- 
lation into a restricted logical language. 
Adaptation g is only briefly discussed here, as 
it results in a f ramework  which has already 
been described extensively in \[ I\]. 
The main  part of this paper is devoted to adap- 
tation I. A new syntactic f ramework  is 
proposed, which can be summar ized  as follows. 
- The syntactic rules (M-rules) op.erate on 
labeled trees (or equivalently: labeled bracket- 
ings) instead of strings as in MG.  Successful 
application of M-ru les - starting with basic 
terms - leads to a surface tree of a sentence. 
(This kind of extension of MG has already been 
proposed by Partee and others, for different 
reasons than for mak ing  parsing possible) 
- A context-free grammar  Gcf defines the 
class Lcf of trees that are allowed as arguments  
and results of the M-rules. So the class of 
surface trees defined by the M-ru les is a sub- 
set of Lcf. 
- An  M-ru le  R i is a pair <Ci, A i>;  where C i 
is a condition on n-tuples of trees < t I . . . .  , tn> 
and A i is an action, applicable to any tuple for 
which C i holds, and delivering a tree t. 
Each  rule R i must  obey the following conditions: 
(i) C i and A i are effective procedures. 
(ii) F rom ~i an inverse rule Rf I = <C~ I, A~I> 
can be derived such that C\[  1 and A\[  1 are 
effective procedures and: 
C i (<t  I . . . . .  tn > )---~C~ 1 (Ai( < tl . . . .  tn>)) 
Ci l(t) - - -=-~Ci(A ~ l (t)) 
(iii) t is bigger (has more  nodes) than any t i 
in the tuple < t I . . . . .  t n >. 
Special, simple, cases of M-ru les  are the 
context-free rules of Gcf. 
For this type of g rammar  a parser can be 
designed which operates in two steps: 
i) an ordinary context-free parser, based on 
Gcf, which assigns surface trees to sentences. 
Z) a procedure that applies inverse M-ru les  in 
a top-down fashion to these surface trees. 
The parser is successful for a given sentence 
if a surface tree can be assigned to it by I) 
and if this surface structure can be broken 
down into basic expressions by procedure Z). 
In that case the resulting derivation structure 
of M-ru les is input for the translation into the 
logical language. 
211- 
It is proved that such a parser is an effective 
procedure and that it assigns to a sentence 
exactly those syntactic structures that the 
generative rules would assign. The proof is 
first given for a finite set of rules and is then 
extended to grammars  with ru le -schemes 
defining an infinite set of rules. Ru le -schemes  
are needed because the grammar  contains an 
infinite set of syntactic variables. The reser- 
vation has to be made that the parser generates 
only one of the infinitely many  derivations of a 
sentence that differ only in their choice of 
va r fable s. 
The power  of the new f ramework  is discussed. 
It is shown how Montague's PTQ grammar  
might  be reformulated in it. The parser is 
compared  with the parser written by F r iedman 
and Warren  for that g rammar .  
Finally, conditions are discussed that have to 
be added to the f ramework  in order to make  an 
effective translation into natural language 
possible. 
\[i\] W. J .H . J .  B ronnenberg  et al - The ques- 
tion-answering system PHL IQA I. 
To  appear in L. Bolc (ed.): Natural 
Language Question Answer ing  Systems. 
Carl Hanser  Verlag, Mfinchen ~ Wien; 
Macmil lan, London. 
-212 
