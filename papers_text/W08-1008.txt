Proceedings of the ACL-08: HLT Workshop on Parsing German (PaGe-08), pages 55?63,
Columbus, Ohio, USA, June 2008. c?2008 Association for Computational Linguistics
The PaGe 2008 Shared Task on Parsing German?
Sandra Ku?bler
Department of Linguistics
Indiana University
Bloomington, IN, USA
skuebler@indiana.edu
Abstract
The ACL 2008 Workshop on Parsing German
features a shared task on parsing German. The
goal of the shared task was to find reasons
for the radically different behavior of parsers
on the different treebanks and between con-
stituent and dependency representations. In
this paper, we describe the task and the data
sets. In addition, we provide an overview of
the test results and a first analysis.
1 Introduction
German is one of the very few languages for which
more than one syntactically annotated resource ex-
ists. Other languages for which this is the case in-
clude English (with the Penn treebank (Marcus et
al., 1993), the Susanne Corpus (Sampson, 1993),
and the British section of the ICE Corpus (Wallis
and Nelson, 2006)) and Italian (with ISST (Mon-
tegmagni et al, 2000) and TUT (Bosco et al,
2000)). The three German treebanks are Negra
(Skut et al, 1998), TIGER (Brants et al, 2002), and
Tu?Ba-D/Z (Hinrichs et al, 2004). We will concen-
trate on TIGER and Tu?Ba-D/Z here; Negra is an-
notated with an annotation scheme very similar to
TIGER but is smaller. In contrast to other languages,
these two treebanks are similar on many levels:
Both treebanks are based on newspaper text, both
use the STTS part of speech (POS) tagset (Thie-
len and Schiller, 1994), and both use an annotation
?I am very grateful to Gerald Penn, who suggested this
workshop and the shared task, took over the biggest part of the
workshop organization and helped with the shared task.
scheme based on constituent structure augmented
with grammatical functions. However, they differ in
the choices made in the annotation schemes, which
makes them ideally suited for an investigation of
how these decisions influence parsing accuracy in
different parsers.
On a different level, German is an interesting
language for parsing because of the syntactic phe-
nomena in which the language differs from English,
the undoubtedly most studied language in parsing:
German is often listed as a non-configurational lan-
guage. However, while the word order is freer
than in English, the language exhibits a less flexible
word order than more typical non-configurational
languages. A short overview of German word order
phenomena is given in section 2.
The structure of this paper is as follows: Section
2 discusses three characteristics of German word or-
der, section 3 provides a definition of the shared task,
and section 4 gives a short overview of the treebanks
and their annotation schemes that were used in the
shared task. In section 5, we give an overview of the
participating systems and their results.
2 German Word Order
In German, the order of non-verbal phrases is rela-
tively free, but the placement of the verbal elements
is determined by the clause type. Thus, we will
first describe the placement of the finite verb, then
we will explain phrasal ordering, and finally we will
look at discontinuous constituents.
55
2.1 Verb Placement
In German, the clause type determines the place-
ment of finite verbs: In non-embedded declarative
clauses, as in (1a), the finite verb is in second posi-
tion (V2). In yes/no questions, as in (1b), the finite
verb is the clause-initial constituent (V1), and in em-
bedded clauses, as in (1c), it appears clause finally
(Vn).
(1) a. Der
The
Mann
man
hat
has
das
the
Auto
car
gekauft.
bought
?The man has bought the car.?
b. Hat
Has
der
the
Mann
man
das
the
Auto
car
gekauft?
bought
?Has the man bought the car??
a. dass
that
der
the
Mann
man
das
the
Auto
car
gekauft
bought
hat.
has
?. . . that the man has bought the car.?
All non-finite verbs appear at the right periphery
of the clause (cf. 2), independently of the clause
type.
(2) Der
The
Mann
man
sollte
should
das
the
Auto
car
gekauft
bought
haben.
have
?The man should have bought the car.?
2.2 Flexible Phrase Ordering
Apart from the fixed placement of the verbs, the or-
der of the non-verbal elements is flexible. In (3), any
of the four complements and adjuncts of the main
verb (ge)geben can be in sentence-initial position,
depending on the information structure of the sen-
tence.
(3) a. Das
The
Kind
child
hat
has
dem
the
Mann
man
gestern
yesterday
den
the
Ball
ball
gegeben.
given
?The child has given the ball to the man yes-
terday.?
b. Dem Mann hat das Kind gestern den Ball
gegeben.
c. Gestern hat das Kind dem Mann den Ball
gegeben.
d. Den Ball hat das Kind gestern dem Mann
gegeben.
In addition, the ordering of the elements that oc-
cur between the finite and the non-finite verb forms
is also free so that there are six possible lineariza-
tions for each of the examples in (3a-d).
One exception to the free ordering of non-verbal
elements is the ordering of pronouns. If the pro-
nouns appear to the right of the finite verb in V1
and V2 clauses, they are adjacent to the finite verb
in fixed order.
(4) Gestern
Yesterday
hat
has
sie
she
sie
her/them
ihm
him
gegeben.
given.
?Yesterday, she gave her/them to him.?
In (4), three pronouns are present. Although
the pronoun sie is ambiguous between nomina-
tive/accusative singular and nominative/accusative
plural, the given example is unambiguous with re-
spect to case since the nominative precedes the ac-
cusative, which in turn precedes the dative.
Due to the flexible phrase ordering, the grammat-
ical functions of constituents in German, unlike in
English, cannot be deduced from the constituents?
location in the constituent tree. As a consequence,
parsing approaches to German need to be based on
treebank data which contain a combination of con-
stituent structure and grammatical functions ? for
parsing and evaluation. For English, in contrast,
grammatical functions are often used internally in
parsers but suppressed in the final parser output.
2.3 Discontinuous Constituents
Another characteristic of German word order is the
frequency of discontinuous constituents. The sen-
tence in (5) shows an extraposed relative clause that
is separated from its head noun das Buch by the non-
finite verb gelesen.
(5) Der
The
Mann
man
hat
has
das
the
Buch
book
gelesen,
read,
das
which
ich
I
ihm
him
empfohlen
recommended
habe.
have
?The man read the book that I recommended to
him.?
56
In German, it is also possible to partially front
VPs, such as in sentence (6). This sentence is taken
from the Tu?Ba-D/Z treebank.
(6) Fu?r
For
den
the
Berliner
Berlin
Job
job
qualifiziert
qualified
hat
has
sich
himself
Zimmermann
Zimmermann
auch
also
durch
by
seinen
his
Blick
view
fu?rs
for the
finanziell
financially
Machbare.
doable
?Zimmermann qualified for the job in Berlin
partially because of his view for what is finan-
cially feasible.?
Here, the canonical word order would be Zimmer-
mann hat sich auch durch seinen Blick f?urs finanziell
Machbare fu?r den Berliner Job qualifiziert.
Such discontinuous structures occur frequently in
the TIGER and Tu?Ba-D/Z treebanks and are handled
differently in the two annotation schemes, as will be
discussed in more detail in section 4.
3 Task Definition
In this section, we give the definition of the shared
task. We provided two subtasks: parsing constituent
structure and parsing the dependency representa-
tions. Both subtasks involved training and testing on
data from the two treebanks, TIGER and Tu?Ba-D/Z.
The dependency format was derived from the con-
stituent format so that the sentences were identical
in the two versions. The participants were given
training sets, development sets, and test sets of the
two treebanks. The training sets contained 20894
sentences per treebank, the development and test
set consisted of 2611 sentences each. The test sets
contained gold standard POS labels. In these sets,
sentence length was restricted to a maximum of 40
words. Since for some sentences in both treebanks,
the annotation consists of more than one tree, all
trees were joined under a virtual root node, VROOT.
Since some parsers cannot assign grammatical
functions to part of speech tags, these grammati-
cal functions were provided for the test data as at-
tached to the POS tags. Participants were asked to
perform a test without these functions if their parser
was equipped to provide them. Two participants did
submit these results, and in both cases, these results
were considerably lower.
Evaluation for the constituent version consisted
of the PARSEVAL measures precision, recall, and
F1 measure. All these measures were calculated on
combinations of constituent labels and grammatical
functions. Part of speech labels were not considered
in the evaluation. Evaluation for the dependency
version consisted of labeled and unlabeled attach-
ment scores. For this evaluation, we used the scripts
provided by the CoNLL shared task 2007 on depen-
dency parsing (Nivre et al, 2007).
4 The Treebanks
The two treebanks used for the shared task were
the TIGER Corpus, (Brants et al, 2002) version
2, and the Tu?Ba-D/Z treebank (Hinrichs et al,
2004; Telljohann et al, 2006), version 3. Both
treebanks use German newspapers as their data
source: the Frankfurter Rundschau newspaper for
TIGER and the ?die tageszeitung? (taz) newspaper
for Tu?Ba-D/Z. The average sentence length is
very similar: In TIGER, sentences have an average
length of 17.0, and in Tu?Ba-D/Z, 17.3. This can
be regarded as an indication that the complexity of
the two texts is comparable. Both treebanks use
the same POS tagset, STTS (Thielen and Schiller,
1994), and annotations based on phrase structure
grammar, enhanced by a level of predicate-argument
structure.
4.1 The Constituent Data
Despite all the similarities presented above, the
constituent annotations differ in four important as-
pects: 1) TIGER does not allow for unary branch-
ing whereas Tu?Ba-D/Z does; 2) in TIGER, phrase
internal annotation is flat whereas Tu?Ba-D/Z uses
phrase internal structure; 3) TIGER uses crossing
branches to represent long-distance relationships
whereas Tu?Ba-D/Z uses a pure tree structure com-
bined with functional labels to encode this informa-
tion. The two treebanks also use different notions of
grammatical functions: Tu?Ba-D/Z defines 36 gram-
matical functions covering head and non-head in-
formation, as well as subcategorization for comple-
ments and modifiers. TIGER utilizes 51 grammati-
cal functions. Apart from commonly accepted gram-
matical functions, such as SB (subject) or OA (ac-
cusative object), TIGER grammatical functions in-
57
Figure 1: TIGER annotation with crossing branches.
Figure 2: TIGER annotation with resolved crossing branches.
clude others, e.g. RE (repeated element) or RC (rel-
ative clause).
(7) Beim
At the
Mu?nchner
Munich
Gipfel
Summit
ist
is
die
the
sprichwo?rtliche
proverbial
bayerische
Bavarian
Gemu?tlichkeit
?Gemu?tlichkeit?
von
by
einem
a
Bild
picture
verdra?ngt
supplanted
worden,
been,
das
which
im
in the
Wortsinne
literal sense
an
of
einen
a
Polizeistaat
police state
erinnert.
reminds
?At the Munich Summit, the proverbial Bavar-
ian ?Gemu?tlichkeit? was supplanted by an im-
age that is evocative of a police state.?
Figure 1 shows a typical tree from the TIGER
treebank for sentence (7). The syntactic categories
are shown in circular nodes, the grammatical func-
tions as edge labels in square boxes. A major
phrasal category that serves to structure the sen-
tence as a whole is the verb phrase (VP). It con-
tains non-finite verbs (here: verdra?ngt worden) as
well as their complements and adjuncts. The subject
NP (die sprichwo?rtliche bayerische Gemu?tlichkeit)
is outside the VP and, depending on its linear po-
sition, leads to crossing branches with the VP. This
happens in all cases where the subject follows the
finite verb as in Figure 1. Notice also that the PPs
are completely flat. An additional crossing branch
results from the direct attachment of the extraposed
relative clause (the lower S node with function RC)
to the noun that it modifies.
As mentioned in the previous section, TIGER
trees must be transformed into trees without crossing
branches prior to training PCFG parsers. The stan-
dard approach for this transformation is to re-attach
crossing non-head constituents as sisters of the low-
est mother node that dominates all the crossing con-
stituent and its sister nodes in the original TIGER
tree. Figure 2 shows the result of this transformation
58
Figure 3: Tu?Ba-D/Z annotation without crossing branches.
of the tree in Figure 1. Crossing branches not only
arise with respect to the subject at the sentence level
but also in cases of extraposition and fronting of par-
tial constituents. As a result, approximately 30% of
all TIGER trees contain at least one crossing branch.
Thus, tree transformations have a major impact on
the type of constituent structures that are used for
training probabilistic parsing models.
Figure 3 shows the Tu?Ba-D/Z annotation for sen-
tence (8), a sentence with a very similar structure to
the TIGER sentence shown in Figure 1. Crossing
branches are avoided by the introduction of topo-
logical structures (here: VF, LK, MF, VC, NF, and
C) into the tree. Notice also that compared to the
TIGER annotation, Tu?Ba-D/Z introduces more inter-
nal structure into NPs and PPs. In Tu?Ba-D/Z, long-
distance relationships are represented by a pure tree
structure and specific functional labels. Thus, the
extraposed relative clause is attached to the matrix
clause directly, but its functional label ON-MOD ex-
plicates that it modifies the subject ON.
(8) In
In
Bremen
Bremen
sind
are
bisher
so far
nur
only
Fakten
facts
geschaffen
produced
worden,
been,
die
which
jeder
any
modernen
modern
Stadtplanung
city planning
entgegenstehen.
contradict
?In Bremen, so far only such attempts have
been made that are opposed to any modern city
planning.?
4.2 The Dependency Data
The constituent representations from both treebanks
were converted into dependencies. The conver-
sion aimed at finding dependency representations
for both treebanks that are as similar to each other
as possible. Complete identity is impossible be-
cause the treebanks contain different levels of dis-
tinction for different phenomena. The conversion is
based on the original formats of the treebanks in-
cluding crossing branches. The target dependency
format was defined based on the dependency gram-
mar by Foth (2003). For the conversion, we used
pre-existing dependency converters for TIGER trees
(Daum et al, 2004) and for Tu?Ba-D/Z trees (Vers-
ley, 2005). The dependency representations of the
trees in Figures 1 and 3 are shown in Figures 4 and
5. Note that the long-distance relationships are con-
verted into non-projective dependencies.
5 Submissions and Results
The shared task drew submissions from 3 groups:
the Berkeley group, the Stanford group, and the
Va?xjo? group. Four more groups or individuals had
registered but did not submit any data. The submit-
ted systems and results are described in detail in pa-
pers in this volume (Petrov and Klein, 2008; Raf-
ferty and Manning, 2008; Hall and Nivre, 2008). All
three systems submitted results for the constituent
task. For the dependency task, the Va?xjo? group had
the only submission. For this reason, we will con-
centrate on the analysis of the constituent results and
will mention the dependency results only shortly.
59
Beim M. Gipfel ist die sprichw. bayer. Gem. von einem Bild verdra?ngt worden, das im Worts. an einen P.staat erinnert.
PP
ATTR
PN
DET
ATTR
ATTR
SUBJ
PP
DET
PN
AUX
AUX SUBJ
PP
PN
OBJP
DET
PN
REL
Figure 4: TIGER dependency annotation.
In Bremen sind bisher nur Fakten geschaffen worden, die jeder modernen Stadtplanung entgegenstehen.
PN
PP ADV
ADV
SUBJ
AUX
AUX
SUBJ
DET
ATTR OBJD
REL
Figure 5: Tu?Ba-D/Z dependency annotation.
5.1 Constituent Evaluation
The results of the constituent analysis are shown
in Table 1. The evaluation was performed with re-
gard to labels consisting of a combination of syn-
tactic labels and grammatical functions. A subject
noun phrase, for example, is only counted as correct
if it has the correct yield, the correct label (i.e. NP
for TIGER and NX for Tu?Ba-D/Z), and the correct
grammatical function (i.e. SB for TIGER and ON
for Tu?Ba-D/Z). The results show that the Berke-
ley parser reaches the best results for both treebanks.
The other two parsers compete for second place. For
TIGER, the Va?xjo? parser outperforms the Stanford
parser, but for Tu?Ba-D/Z, the situation is reversed.
This gives an indication that the Va?xjo? parser seems
better suited for the flat annotations in TIGER while
the Stanford parser is better suited for the more hier-
archical structure in Tu?Ba-D/Z. Note that all parsers
reach much higher F-scores for Tu?Ba-D/Z.
A comparison of howwell suited two different an-
notation schemes are for parsing is a surprisingly
difficult task. A first approach would be to com-
pare the parser performance for specific categories,
such as for noun phrases, etc. However, this is
not possible for TIGER and Tu?Ba-D/Z. On the one
hand, the range of phenomena described as noun
phrases, for example, is different in the two tree-
banks. The most obvious difference in annotation
schemes is that Tu?Ba-D/Z annotates unary branch-
ing structures while TIGER does not. As a conse-
quence, in Tu?Ba-D/Z, all pronouns and substitut-
ing demonstratives are annotated as noun phrases; in
TIGER, they are attached directly to the next higher
node (cf. the relative pronouns, POS tag PRELS, in
Figures 1 and 3). Ku?bler (2005) and Maier (2006)
suggest a method for comparing such different an-
notation schemes by approximating them stepwise
so that the decisions which result in major changes
can be isolated. They come to the conclusion that
the differences between the two annotation schemes
is a least partially due to inconsistencies introduced
into TIGER style annotations during the resolution
of crossing branches. However, even this method
cannot give any indication which annotation scheme
provides more useful information for systems that
use such parses as input. To answer this question, an
in vivo evaluation would be necessary. It is, how-
ever, rather difficult to find systems into which a
parser can be plugged in without too many modi-
fications of the system.
On the other hand, it is a well-known fact that
60
TIGER Tu?Ba-D/Z
system precision recall F-score precision recall F-score
Berkeley 69.23 70.41 69.81 83.91 84.04 83.97
Stanford 58.52 57.63 58.07 79.26 79.22 79.24
Va?xjo? 67.06 63.40 65.18 76.44 74.79 75.60
Table 1: The results of the constituent parsing task.
TIGER Tu?Ba-D/Z
system GF precision recall F-score precision recall F-score
Berkeley SB/ON 74.46 78.31 76.34 78.33 77.08 77.70
OA 60.08 66.61 63.18 58.11 65.81 61.72
DA/OD 49.28 41.72 43.19 59.46 44.72 51.05
Stanford SB/ON 64.40 63.11 63.75 71.16 77.76 74.31
OA 45.52 45.91 45.71 47.23 51.28 49.17
DA/OD 12.40 9.82 10.96 24.42 8.54 12.65
Va?xjo? SB/ON 75.33 73.00 74.15 72.37 69.53 70.92
OA 57.01 57.65 57.33 58.07 57.55 57.81
DA/OD 55.45 37.42 44.68 63.75 20.73 31.29
Table 2: The results for subjects, accusative objects, and dative objects.
the PARSEVALmeasures favor annotation schemes
with hierarchical structures, such as in Tu?Ba-D/Z,
in comparison to annotation schemes with flat struc-
tures (Rehbein and van Genabith, 2007). Here,
TIGER and Tu?Ba-D/Z differ significantly: in TIGER,
phrases receive a flat annotation. Prepositional
phrases, for example, do not contain an explicitly
annotated noun phrase. Tu?Ba-D/Z phrases, in con-
trast, are more hierarchical; preposition phrases do
contain a noun phrase, and non phrases distinguish
between pre- and post-modification. For this reason,
the evaluation presented in Table 1 must be taken
with more than a grain of salt as a comparison of an-
notation schemes. However, it seems safe to follow
Ku?bler et al (Ku?bler et al, 2006) in the assump-
tion that the major grammatical functions, subject
(SB/ON), accusative object (OA), and dative object
(DA/OD) are comparable. Again, this is not com-
pletely true because in the case of one-word NPs,
these functions are attached to the POS tags and
thus are given in the input. Another solution, which
was pursued by Rehbein and van Genabith (2007),
is the introduction of new unary branching nodes in
the tree in cases where such grammatical functions
are originally attached to the POS tag. We refrained
from using this solution because it introduces fur-
ther inconsistencies (only a subset of unary branch-
ing nodes are explicitly annotated), which make it
difficult for a parser to decide whether to group such
phrases or not. The evaluation shown in Table 2 is
based on all nodes which were annotated with the
grammatical function in question.
The results presented in Table 2 show that the
differences between the two treebanks are incon-
clusive. While the Stanford parser performs con-
sistently better on Tu?Ba-D/Z, the Berkeley parser
handles accusative objects better in TIGER, and the
Va?xjo? parser subjects and dative objects. The results
indicate that the Berkeley parser profits from the
TIGER annotation of accusative objects, which are
grouped in the verb phrase while Tu?Ba-D/Z groups
all objects in their fields directly without resorting to
a verb phrase. However, this does not explain why
the Berkeley parser cannot profit from the subject
attachment on the clause level in TIGER to the same
degree.
5.2 Dependency Evaluation
The results of the dependency evaluation for the
Va?xjo? system are shown in Table 3. The results are
61
TIGER Tu?Ba-D/Z
UAS 92.63 91.45
LAS 90.80 88.64
precision recall precision recall
SUBJ 90.20 89.82 88.99 88.55
OBJA 77.93 82.19 77.18 82.71
OBJD 57.00 44.02 67.88 45.90
Table 3: The results of the dependency evaluation.
important for the comparison of constituent and de-
pendency parsing since in the conversion to depen-
dencies, most of the differences between the anno-
tation schemes, and as a consequence, the prefer-
ence of the PARSEVAL measures have been neu-
tralized. Therefore, it is interesting to see that the
results for TIGER are slightly better than the results
for Tu?Ba-D/Z, both for unlabeled (UAS) and la-
beled attachment scores. The reasons for these dif-
ferences are unclear: either the TIGER texts are eas-
ier to parse, or the (original annotation and) conver-
sion from TIGER is more consistent. Another sur-
prising fact is that the dependency results are clearly
better than the constituent ones. This is partly due
to the fact that the dependency representation is of-
ten less informative than then constituent representa-
tion. One example for this can be found in coordina-
tions: In dependency representations, the scope am-
biguity in phrases like young men and women is not
resolved. This gives parsers fewer opportunities to
go wrong. However, this cannot explain all the dif-
ferences. Especially the better performance on the
major grammatical functions cannot be explained in
this way.
A closer look at the grammatical functions shows
that here, precision and recall are higher than for
constituent parses. This is a first indication that de-
pendency representation may be more appropriate
for languages with freer word order. A compari-
son between the two treebanks is inconclusive: for
the accusative object, the results are similar between
the treebanks. For subjects, the results for TIGER
are better while for dative objects, the results for
Tu?Ba-D/Z are better. This issue requires closer in-
vestigation.
6 Conclusion
This is the first shared task on parsing German,
which provides training and test sets from both ma-
jor treebanks for German, TIGER and Tu?Ba-D/Z.
For both treebanks, we provided a constituent and a
dependency representation. It is our hope that these
data sets will spark more interest in the comparison
of different annotation schemes and their influence
on parsing results. The evaluation of the three par-
ticipating systems has shown that for both treebanks,
the use of a latent variable grammar in the Berkeley
system is beneficial. However, many questions re-
main unanswered and require further investigation:
To what extent do the evaluation metrics distort the
results? Does a measure exist that is neutral towards
the differences in annotation? Is the dependency for-
mat better suited for parsing German? Are the dif-
ferences between the dependency results of the two
treebanks indicators that TIGER provides more im-
portant information for dependency parsing? Or can
the differences be traced back to the conversion al-
gorithms?
Acknowledgments
First and foremost, we want to thank all the people
and organizations that generously provided us with
treebank data and without whom the shared task
would have been literally impossible: Erhard Hin-
richs, University of Tu?bingen (Tu?Ba-D/Z), and Hans
Uszkoreit, Saarland University and DFKI (TIGER).
Secondly, we would like to thank Wolfgang Maier
and Yannick Versley who performed the data con-
versions necessary for the shared task. Additionally,
Wolfgang provided the scripts for the constituent
evaluation.
References
Cristina Bosco, Vincenzo Lombardo, D. Vassallo, and
Leonardo Lesmo. 2000. Building a treebank for Ital-
ian: a data-driven annotation scheme. In Proceedings
of the 2nd International Conference on Language Re-
sources and Evaluation, LREC-2000, Athens, Greece.
Sabine Brants, Stefanie Dipper, Silvia Hansen, Wolf-
gang Lezius, and George Smith. 2002. The TIGER
treebank. In Erhard Hinrichs and Kiril Simov, edi-
tors, Proceedings of the First Workshop on Treebanks
62
and Linguistic Theories (TLT 2002), pages 24?41, So-
zopol, Bulgaria.
Michael Daum, Kilian Foth, and Wolfgang Menzel.
2004. Automatic transformation of phrase treebanks
to dependency trees. In Proceedings of the 4th In-
ternational Conference on Language Resources and
Evaluation, LREC-2004, Lisbon, Portugal.
Kilian Foth. 2003. Eine umfassende Dependenzgram-
matik des Deutschen. Technical report, Fachbereich
Informatik, Universita?t Hamburg.
Johan Hall and Joakim Nivre. 2008. A dependency-
driven parser for German dependency and con-
stituency representations. In Proceedings of the ACL
Workshop on Parsing German, Columbus, OH.
Erhard Hinrichs, Sandra Ku?bler, Karin Naumann, Heike
Telljohann, and Julia Trushkina. 2004. Recent de-
velopments in linguistic annotations of the Tu?Ba-D/Z
treebank. In Proceedings of the Third Workshop
on Treebanks and Linguistic Theories, pages 51?62,
Tu?bingen, Germany.
Sandra Ku?bler, ErhardW. Hinrichs, andWolfgangMaier.
2006. Is it really that difficult to parse German?
In Proceedings of the 2006 Conference on Empiri-
cal Methods in Natural Language Processing, EMNLP
2006, pages 111?119, Sydney, Australia.
Sandra Ku?bler. 2005. How do treebank annotation
schemes influence parsing results? Or how not to com-
pare apples and oranges. In Proceedings of the Inter-
national Conference on Recent Advances in Natural
Language Processing, RANLP 2005, pages 293?300,
Borovets, Bulgaria.
WolfgangMaier. 2006. Annotation schemes and their in-
fluence on parsing results. In Proceedings of the ACL-
2006 Student Research Workshop, Sydney, Australia.
Mitchell Marcus, Beatrice Santorini, and Mary Ann
Marcinkiewicz. 1993. Building a large annotated cor-
pus of English: The Penn Treebank. Computational
Linguistics, 19(2):313?330.
S. Montegmagni, F. Barsotti, M. Battista, N. Calzolari,
O. Corazzari, A. Zampolli, F. Fanciulli, M. Massetani,
R. Raffaelli, R. Basili, M. T. Pazienza, D. Saracino,
F. Zanzotto, N. Mana, F. Pianesi, and R. Delmonte.
2000. The Italian syntactic-semantic treebank: Ar-
chitecture, annotation, tools and evaluation. In Pro-
ceedings of the Workshop on Linguistically Interpreted
Corpora LINC-2000, pages 18?27, Luxembourg.
Joakim Nivre, Johan Hall, Sandra Ku?bler, Ryan McDon-
ald, Jens Nilsson, Sebastian Riedel, and Deniz Yuret.
2007. The CoNLL 2007 shared task on dependency
parsing. In Proceedings of the CoNLL 2007 Shared
Task. Joint Conference on Empirical Methods in Natu-
ral Language Processing and Computational Natural
Language Learning, EMNLP-CoNLL 2007, Prague,
Czech Republic.
Slav Petrov and Dan Klein. 2008. Parsing German with
language agnostic latent variable grammars. In Pro-
ceedings of the ACL Workshop on Parsing German,
Columbus, OH.
Anna Rafferty and Christopher Manning. 2008. Parsing
three German treebanks: Lexicalized and unlexical-
ized baselines. In Proceedings of the ACL Workshop
on Parsing German, Columbus, OH.
Ines Rehbein and Josef van Genabith. 2007. Treebank
annotation schemes and parser evaluation for German.
In Proceedings of the 2007 Joint Conference on Em-
pirical Methods in Natural Language Processing and
Computational Natural Language Learning, EMNLP-
CoNLL, pages 630?639, Prague, Czech Republic.
Geoffrey Sampson. 1993. The SUSANNE corpus.
ICAME Journal, 17:125 ? 127.
Wojciech Skut, Thorsten Brants, Brigitte Krenn, and
Hans Uszkoreit. 1998. A linguistically interpreted
corpus of German newspaper texts. In ESSLLI
Workshop on Recent Advances in Corpus Annotation,
Saarbru?cken, Germany.
Heike Telljohann, Erhard W. Hinrichs, Sandra Ku?bler,
and Heike Zinsmeister, 2006. Stylebook for
the Tu?bingen Treebank of Written German (Tu?Ba-
D/Z). Seminar fu?r Sprachwissenschaft, Universita?t
Tu?bingen, Germany.
Christine Thielen and Anne Schiller. 1994. Ein kleines
und erweitertes Tagset fu?rs Deutsche. In Helmut Feld-
weg and Erhard Hinrichs, editors, Lexikon & Text,
pages 215?226. Niemeyer, Tu?bingen.
Yannick Versley. 2005. Parser evaluation across text
types. In Proceedings of the Fourth Workshop on Tree-
banks and Linguistic Theories, TLT 2005, pages 209?
220, Barcelona, Spain.
Sean Wallis and Gerald Nelson. 2006. The British com-
ponent of the International Corpus of English. Release
2. CD-ROM. London: Survey of English Usage, UCL.
63
