Anvik, J., Hiew, L., and Murphy, G. (2006). Who
should fix this bug? In Proceedings of the 28th
international conference on Software engineer-
ing, pages 361?370. ACM.
Bhattacharya, P. and Neamtiu, I. (2010). Fine-
grained incremental learning and multi-feature
tossing graphs to improve bug triaging. In
International Conference on Software Mainte-
nance (ICSM), pages 1?10. IEEE.
Blum, A., Kalai, A., and Langford, J. (1999).
Beating the hold-out: Bounds for k-fold and
progressive cross-validation. In Proceedings
of the twelfth annual conference on Computa-
tional learning theory, pages 203?208. ACM.
Crammer, K. and Singer, Y. (2002). On the al-
gorithmic implementation of multiclass kernel-
based vector machines. The Journal of Ma-
chine Learning Research, 2:265?292.
Duchi, J., Hazan, E., and Singer, Y. (2010). Adap-
tive subgradient methods for online learning
and stochastic optimization. Journal of Ma-
chine Learning Research.
Halpin, H., Robu, V., and Shepherd, H. (2007).
The complex dynamics of collaborative tag-
ging. In Proceedings of the 16th international
conference on World Wide Web, pages 211?
220. ACM.
Joachims, T. (1999). Making large-scale svm
learning practical. In Scho?lkopf, B., Burges,
C., and Smola, A., editors, Advances in Kernel
Methods-Support Vector Learning. MIT-Press.
Langford, J., Hsu, D., Karampatziakis, N.,
Chapelle, O., Mineiro, P., Hoffman, M.,
Hofman, J., Lamkhede, S., Chopra, S.,
Faigon, A., Li, L., Rios, G., and Strehl,
A. (2011). Vowpal wabbit. https:
//github.com/JohnLangford/
vowpal_wabbit/wiki.
Matter, D., Kuhn, A., and Nierstrasz, O. (2009).
Assigning bug reports using a vocabulary-
based expertise model of developers. In Sixth
IEEE Working Conference on Mining Software
Repositories.
McMahan, H. and Streeter, M. (2010). Adap-
tive bound optimization for online convex op-
timization. Arxiv preprint arXiv:1002.4908.
Rosenblatt, F. (1958). The perceptron: A prob-
abilistic model for information storage and or-
ganization in the brain. Psychological review,
65(6):386.
Tamrawi, A., Nguyen, T., Al-Kofahi, J., and
Nguyen, T. (2011). Fuzzy set and cache-based
approach for bug triaging. In Proceedings of
the 19th ACM SIGSOFT symposium and the
13th European conference on Foundations of
software engineering, pages 365?375. ACM.
Tsymbal, A. (2004). The problem of concept
drift: definitions and related work. Computer
Science Department, Trinity College Dublin.
Voorhees, E. (2000). The TREC-8 question an-
swering track report. NIST Special Publication,
pages 77?82.
Weinberger, K., Dasgupta, A., Langford, J.,
Smola, A., and Attenberg, J. (2009). Feature
hashing for large scale multitask learning. In
Proceedings of the 26th Annual International
Conference on Machine Learning, pages 1113?
1120. ACM.
Widmer, G. and Kubat, M. (1996). Learning in the
presence of concept drift and hidden contexts.
Machine learning, 23(1):69?101.
Zhang, T. (2004). Solving large scale linear
prediction problems using stochastic gradient
descent algorithms. In Proceedings of the
twenty-first international conference on Ma-
chine learning, page 116. ACM.
C?ubranic?, D. and Murphy, G. C. (2004). Auto-
matic bug triage using text categorization. In
In SEKE 2004: Proceedings of the Sixteenth In-
ternational Conference on Software Engineer-
ing & Knowledge Engineering, pages 92?97.
KSI Press.