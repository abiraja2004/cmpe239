CATEGORIAL SEMANTICS FOR LFG 
Mary Dalrymple 
Xerox PARC 
Palo Alto, CA 94304 USA 
dalrymple@parc.xerox.com 
1 In t roduct ion  
A categorial semantics for Lexical-khmctional 
Grammar provides a means for semantic inter- 
pretation of sentences of natural language that is 
appropriately constrained both syntactically and 
semantically. The f-structure of LFG provides a 
cross-lingnistically uniform format for represent- 
ing syntactic information; constraining a deriva- 
tion with respect o the f-structure rather than 
a phrase structure tree allows reference to rel- 
evant functional syntactic information without 
requiring construction of a phrase structure tree 
whose form is (often dubiously) motivated on se- 
mantic grounds. Additionally, a categorial se- 
mantics constrains emantic derivations appro- 
priately, obviating the need for an appeal to well- 
formedness conditions on the resulting semantic 
representation. 
2 P rev ious  Work  
Most semantic analyses appeal to syntactic on- 
straints on semantic derivations. In particular, 
many analyses assume that such syntactic on- 
straints are statable in terms of phrase structure 
tree configurations (Montague, 1974). However, 
it is well-known that a variety of phrase struc- 
ture configurations can express the same syn- 
tactic predicate-argunlent relations within and 
across languages (Kaplan and Bresnan, 1982); 
thus, syntactic constraints on semantic deriva- 
tions are better expressed at a level at which the 
relevant syntactic information is expressed more 
uniformly. Such a level is the f-structure of LFG. 
Halvorsen (1983) first provided a theory of 
semantic interpretation for LFG in which se- 
mantic interpretation rules are related to the 
f-structure. His system involves an intermedi- 
ate level of representation, the 'semantic struc- 
ture', which is represented as a directed graph 
{like the f-structure). Translation rules map from 
f-structures to semantic structures, and these 
structures are then interpreted (or translated 
into a formula of intensional logic). 
The approach to be presented here also re- 
lies on f-structure configurations to provide syn- 
tactic constraints on categorial semantic deriva- 
tions. However, an intermediate l vel of se- 
mantic representation such as Halvorsen's e- 
mantic structure is not introduced. In the cat- 
egoriai semantic framework developed by Fer- 
nando Pereira (Pereira, 1990; Pereira and Pol- 
lack, 1991; Pereira, 1991), syntactic structures 
are directly associated with interpretations (or 
their types), and syntactic onfigurations license 
the combination of these interpretations in a se- 
mantic derivation. On this approach, 'logical 
forms' are not viewed as manipulable syntactic 
objects; instead, a logical formula is simply a 
graphical representation f a meaning that is lex- 
ically provided or that is the outcome of a seman- 
tically justified derivation. In this, the approach 
differs from other recent approaches to seman- 
tic interpretation i LFG (Halvorsen and Kap- 
lan, 1988), in which the interpretation of an f- 
structure is represented as a directed graph, and 
semantic derivation proceeds principally by uni- 
fication of semantic representations. As a con- 
sequence, these approaches require constraints 
on semantic derivations to be stated as well- 
formedness conditions on semantic representa- 
tions, contrary to the commonly-held goal of dis- 
pensabihty of logical form. 
To illustrate a categorial semantic analysis 
within LFG, I will provide a small fragment of 
syntactic and semantic rules of English; the frag- 
ment contains rules for quantified noun phrases, 
nominal modification, and clauses headed by 
transitive and intransitive verbs. Many of these 
rules are modifications and extensions of rules 
originally described in Pereira (1990), though 
Pereira's system appeals to phrase structure 
configurations rather than f-structures to con- 
ACRES DE COLING-92. NANTES, 23-28 AOtff 1992 2 1 2 PROC. OF COLING-92, NANTES, AUG. 23-28. 1992 
strain semantic derivations; in part icular,  the 
rules Pereira provides for quantifiers and rela- 
tive clauses have direct counterparts in the set 
of rules to be described below. 
3 Sentence  In terpreta t ion  
A sentence such as (1) has the interpretat ion 
given in (2): 1 
(1) John crashed. 
(2) crash (john) 
This interpretation is the outcome of a deriva- 
t ion according to a set of rules to be described 
below. Some of the rules must be licensed by 
part icular  f-structure configurations, while some 
are unrestr icted in their apphcahihty. Example 
1 has the following hstructure: 
(3) \[PRED ,crash (SUBJ) , 1 
\[SkrBJ \[PRED 'John'\]\] 
Annotated phrase structure rules hke the follow- 
ing are assumed: 2 
S ---, NP VP 
(T suBJ)=~ 1- 
VP -~ V (NP) 
T=~ (T oB~)=l  
Notice that these phrase structure rules encode 
only syntactic information. No semantic infor- 
mat ion  or constraints are required. 
The lexical entries involved in the derivation 
of sentence (1) are: 
John NP (I PRED)= ' John' 
I~ = \[OP/\] 
crashed V (T PILED)= 'crash(suBJ}'  
(, TENSE) = PAST 
(T PRED)a : \[O \[- Ax.crash(z)\] 
The notat ion f~, stands for the interpretat ion 
of an f-structure f, often referred to as the se- 
mant ic  projection of f (Kaplan, 1987; Halvorsen 
and Kaplan, 1988). The interpretation for any 
f-structure f is a sequent: 
1I will ignore tense and aspect in the representation f 
sentence meanings. 
2See Bresnan (1982) for an explication of the relation 
between c-structure and f-structure and the notation com- 
monly used to represent that relation. 
(4) G : \ [o~-M\ ]  
The sequent '\[a ~ M\] '  is a pair consisting of 
a set of assumptions a, somewhat analogous to 
a 'quantif ier store' (Cooper, 1983), and a ma- 
tr ix term M in which free variables introduced 
by the asstutlptions in a may occur (Pereira, 
1990; Pereira, 1991; Dalrymple et al, 1991). In 
the following, I will speak of such expressions as 
introducing the meaning M under the assump- 
tions in a. 
I assume a fixed order of appl icat ion of the 
meaning of a verb to its semantic arguments,  
with the order determined by the syntax (though 
this assmnpt ion is not crucial to the analysis). 
Arguments are appl ied in the following order: s
(1) Obliques 
(2) o,~2 
(3) osJ 
(4) sunJ 
The PILED of the f-structure of an active verb 
such as own will, then, be associated via the a 
mapping with the following interpretat ion:  
(5) Ay.Ax.own(x,y) 
Notice that  the verb is required to combine with 
the object first, and then the subject, in accor- 
dance with the argument ordering given above. 
\]:'or a passive verb, the ordering will be reversed. 
For the passive verb (be) owned, the order will 
be: 
(6) x~.~v.ow,t(~,v) 
Here, the verb combines first with the oblique 
by-phrase, then with the subject. 
The rule for interpret ing art f-structure for a 
clause headed by an intransit ive verb is: 4 
(7) Clause with intransi t ive verb: 
3This order of application was also proposed by 
Dowry (1982), and is reminiscent of the obliqueness or- 
dering for arguments in HPSG (Pollard and Sag, 1987). 
4This rule should apply when f has a PRED and a sUB J, 
but no other governable grammatical functions; it should 
not apply if the verb is transitive and there is a slJl~J and 
an oB3, although f is unifiable with tile f-structure of a 
transitive verb as well as an intransitive one. There are 
several ways of ensuring the needed result: the valence of 
tire verb can be reflected in its semantic type; f-structures 
can be typed, with this rule applying only to intransitive 
f-structures (Zajac and Emele, 1990); or the PROD and 
its arguments can be separately specified, with the argu- 
marts of the PRED specified as a list which can be mntched 
against, as in recent work by John Maxwell, Ron Kaplan, 
and others. 
ACRES DE COLING-92, NANTES, 23-28 AOUT 1992 2 l 3 PROC. OV COL1NG-92, NANTES, AUG. 23-28, 1992 
" Lsos~ s J 
Pa = \[JR ~- mp\] -~ 
S~, = \[as ~- ms\] 
f,, = \[ap U as ~- mv (ms)\] 
The derivation of the meaning f~ of an f- 
structure f with a PRED and SUBJ proceeds by 
applying the meaning of the PILED to the mean- 
ing of the suBJ. The associated assumption set is 
the union of the assmnptions from the PRED and 
the SUna. The f-structure for sentence 1 hcenses 
the following derivation and provides the ex- 
pected meaning (under a null assumption set): 
(8) \['p RED f2:,craah (SUBJ) , J 
ks.., 'John'\]\] 
Lexically specified meanings: 
(f~)~ = \[0 ~- Ax.crash (~}\] 
(fa),~ -- \[0 ~- j\] 
By rule 7: 
(fl)~ = \[0 U 0 l- Ax.erash(x) ( j ) \ ]  
= \[0 }- crash( j ) \ ]  
4 Quant i f i ca t ion  
Sentence 9 contains a quantified noun phrase and 
has the meaning represented in (10): 
(9) Every car crashed. 
(10) every(Ay .car (y ) ,  Az.craMz(x)) 
This sentence has the f-structure shown in (11), 
constructed on the basis of the lexical entries be- 
low: 
(11) \ [Pa~D 'c~ash <sv.J) ' \] 
SPEC LPRED 'every' 
L LPRgD 'car' J J 
every DET (T PREP) = 'every' 
T ~ = \[0 ~- every\] 
car N (T PRZ.)= 'car' 
(T P~ZD)~ = \[0 ~ ay.ear(y)\] 
The type of the quantifier every is the familiar 
generalized quantifier type (e -+ t) ~ (e ~ t) ---* t: 
quantifiers are functions from properties to prop- 
erties, yielding a truth value. The following 
schematic rule is necessary to interpret quanti- 
fied noun phrases: 
(12) Quantified noun phrase, preliminary ver- 
sion (handles unmodified nominals only): 
f \[svzc S \ ]  \] 
: \[PriED P \ ]  
S~ = \[as ~- ms\] I 
P,  = lap F- me\] 
f ~ - \[a s \[5 ap , quant (ms, x, rap) ~- 2\] 
The notation 'a, A' represents he set a plus the 
singleton A. By this rule, a quant assumption is 
added to the assumption set for the noun phrase. 
The quant assmnption acts like an element in a 
Cooper store, keeping together the information 
associated with the quantified noun phrase, ms  
in the quant asstmlption is the meaning of the 
specifier (here, every); z is the variable intro- 
duced by the quantifier as the meaning of the 
quantified norm phrase; and mp is the meaning 
of the PRED, which will form the first argument 
of the generalized quantifier every when quan- 
tifier discharge takes place. The derivation of 
the meaning of sentence 9 according to the rnles 
given thus far proceeds as follows: 
fl : SPEC f4 : PROD 'every ~ 
SUBJ f3 : L PREp f5 :'car' 
Lexically specified meanings: 
(f2L = \[0 W A~.crash (z/\] 
By rule 12, 'Quantified noun phrase': 
(In), = \[{quant (every, z, Ay.car(y))} W z\] 
By rule 7, 'Clause with intransitive verb': 
(kL  - 
\ [{q~ant  (,~ery,,, ~y.ear(y))} ~cry*h(,)\] 
According to these rules, the meaning for f- 
structure fl is a meaning under an assumption 
about the variable x. The meaning of fl with- 
out assumptions i  obtained by discharging the 
(sole) quantifier assumption in the assumption 
set. The quantifier discharge rule relates a se- 
quent and a syntactic licensing environment to a 
new sequent: 
Acres DE COLING-92, NANT~. 23-28 ^O~" 1992 2 1 4 PROC. OF COLING-92, NANTES, AUG. 23-28, 1992 
(14) Quantifier discharge: 
disch(f, \[a, quaut (ms, x, mR) ~- SCOPE :t\]) = 
\[a ~ ms" (rap, Ax.SCO P E)\] 
Conditions on f: none 
By this discharge rule, the quant assumption is 
removed from the assumption set, the variable 
x introduced by the quantifier assmnption is ab- 
stracted out of the scope SCOPE (required to 
be of type t), and the quantifier is applied to 
its scope. The syntactic licensing environment is 
the f-structure f. in this rule, f is lmeonstrained; 
there are no conditions on f. This means that 
the quantifier discharge rule has art unrestricted 
syntactic licensing condition. A quantifier may 
scope over any syntactic onstituent, as long as 
it is of the correct semantic type. 5 
To interpret sentence 9, diseh can now be 
applied to the sequent (fl)~ associated with the 
f-structure \]1: 
disch (?, \[{quant(every, ~, )~y.car(y))} b crash(z:)\]) 
= \[0 \]- every (Xy.car (y), Xx.crash(x))\] 
The result is the meaning of fl with all assump- 
tions discharged. I will assume that what is gen- 
erally referred to as the 'meaning' of an utterance 
is the meazfing obtained when all assumptions 
have been discharged. 
In general, assumptions may be discharged 
after any application of a functor to an argument, 
as long as the syntactic enviromnent for assump- 
tion discharge has been met. Thus, a predicate 
apply can be defined: 
(15) apply(f, \[a~ ~ Fun\], \[aA ~ Arg\]) d9 
discharge(I, \[aF UaA '- Fun (Avg)\]) 
apply operates on sequents in a syntactic licens- 
ing environment f. discharge(f, S) is the re- 
sult of applying any number of discharge (disch) 
rules licensed by the syntactic onfiguration f to 
S. (Note that apply is not a function, since the 
result of apply depends on the Immber and the 
choice of assumptions tobe discharged.) By this 
function application rule for sequents, then, the 
meaning of the fimctor is applied to the mean- 
ing of the argunlent; the union of the functor 
assumptions and the argmnent assumptions i  
taken; and some number of discharge rules may 
be applied. This definition of apply will be used 
~Here \[ will not discuss conditions on preferred scopes 
for quantifiers ( uch as the tendency for the quantifier 
each to outscope other quantifiers, or for quantifiers to
scope inside the clause in which they appear). 
ACTES DE COLING-92, NANTES, 23-28 ho~r 1992 2 1 5 
in the tbllowing to apply predicates to their ar- 
guments and to permit subsequent assumption 
discharge. 
Given this new definition of apply, interpre- 
tation rule 7 for clauses headed by intransitive 
verbs can be restated: 
(16) Clause with intransitive verb: 
The interpretation for an f-structure f, repre- 
senting an umnodified clause with an intransitive 
verb, is obtained by applying the pREI) P to the 
SuBJ S in the syntactic heensing enviroltment f. 
In general, f~, will constitute an assignment of f 
to a sequent hat satisfies the constraints given 
by the lexical entries and the rules of interpreta- 
tion. 
It should be noted that rule 16 is incomplete 
in providing interpretations only for sentences 
not involving adverbial modification; an analy- 
sis of adverbials, though straightforward in this 
framework, will not be provided here. 
5 Nomina l  modif icat ion 
Rule 12 for tile interpretation f quantified norm 
plLrases is incomplete, since it apphes only to un- 
modified nominals. Consider sentence (17), its f- 
structure, displayed in Figure 1, and its meaning, 
(18): 
(17) Every car that John owned crashed. 
(18) 
~ery (~.ea~ (~) A ow,~ (j, ~), ~y.cra~h (y)) 
These lexical entries are necessary: 
that CMP (\[ PRED) : PRO 
(T TYPE) = REL 
owned V (~ PRED):-'own(SUBJ, OnJ)' 
(l 'rENSF~) " PAST 
(1 P~ED). = \[0 ~- @.a~.own(~,y)l 
Syntactically, a relative clause contains a fronted 
constituent (a TOPIC; see Bresnan and Mchombo 
(1987)) which is related to a gapped position in 
tim sentence. This fronted constituent contains 
a relative pronoun or that. Tile relative pro- 
noun nlay be deeply embedded in the fronted 
PROC. ol, COLING-92, NANTES, AUG. 23-28, 1992 
constituent, as in the ease of pied piping. Se- 
mantically, the interpretation of a relative clause 
is the property obtained when the position filled 
by the relative pronoun is abstracted out. For 
example, here are some relative clauses with a 
rough representation f their memfings: 
(19) a. (the man) that I saw: Az.saw(1,~) 
b. (the man) whose brother's ear I drove: 
A~.drove( I, z ' s brother's car) 
I assume that relative pronouns such as that 
or whose introduce a variable under a tel 
assumption which is abstracted out in the 
course of the derivation. The interpreta- 
tion of a relative clause is obtained by a 
rule allowing the discharge of the rel as- 
sumption associated with the relative pro- 
noun (and possibly other assumptions as well): 
(20) Relative clause interpretation: 
\[TOPIC TOP\] 
f : \[REL R J ~ "f~ = discharge(f,R~) 
The tel discharge rule applies only under syntac- 
tically licensed conditions: 
(21) Relative clause assumption discharge: 
disch( f , \[aREL, tel(x) ~ RE L :t\]) = 
\[aRE L ~- Az.REL l
Conditions: 
\[TOPIC TOP\] 
f :  \[REL R \] 
(/TOPIC GF* )=re lp :  \[PREDTypE a LJPRO\] 
,elp~ = \[,el(x) ~ x:  e} 
The relative pronoun must appear in the fronted 
TOPIC constituent. This is indicated in the 
second condition by the regular expression 
TOPIC OF*; this expression involves functional 
uncertainty (Kaplan and Maxwell, 1988) and re- 
quires that the relative pronoun relp must ap- 
pear at the end of a path that is a member of 
the language described by the regular expres- 
tmn. Here, the path expression does not con- 
strain where the relative pronoun may be found 
within the fronted constituent (OF* is a sequence 
of zero or more grammatical functions); a more 
complete syntactic analysis of relative clauses 
would constrain the path appropriately. The re- 
sult of the application of rule 21 is that the vari- 
able introduced by the relative pronoun is ab- 
stracted out. 
The value of the MOPS attribute is a set off- 
structures, interpreted according to the following 
r ule: 
(22) The semantic value of a set off-structures 
is the set of corresponding sequents. If F 
is a set of f-structures: 
F~--  { f~r fc  F} 
The rule for the interpretation ofquantified noun 
phrases with nominal modification is given in 
Figure 2. According to this rule, the derivation of 
the meaning of a quantified noun phrase proceeds 
by introducing a variable (x in Figure 2) under 
a quant assumption, consisting of the meaning 
of the specifier of the noun phrase, the variable, 
and the quantifier estriction ILEST. 
Recall the definition of apply given in 15: 
(23) apply(f, jaR ~- Fun\], \[aA F- Arg\]) d~=y 
discharge(f, \[aF U aA ~- Fun (Arg)}) 
This definition will now be extended so apply can 
take a set ofsequents as its argument. The result 
is a set of sequents: 
(24) apply (f, Set, Arg) dff 
{s \[ Fun E Set A s = 
apply (f, Fun, Arg)} 
The function conj is defined as the conjunction 
of a set of sequents; the matrices of the sequents 
are conjoined and the union of the assumptions 
is taken: 
(25) conj (S) de=/\[ U a F- A M\] 
IaP-M\]eS \[a~-M\]ES 
nEST, then, is the conjunction of the result of 
applying the PRED meaning and the meaning of 
each of the modifiers in MOPS to the variable z. 
Finally, a rule for the interpretation of a 
clause containing a transitive verb is also needed: 
(26) Clause with transitive verb: ??:l f : SUBJ 
OBJ O 
f~ = apply(f, apply(f, P~, O~), S~) 
The interpretation of sentence 17 can now be 
derived; the derivation is sketched in Figure 3. 
AcrEs DE COLING-92, NANTES. 23-28 AOI~'r 1992 2 1 6 PROC. OF COLING-92, NANTES, AUG. 23-28, 1992 
/1 : 
-PRED :'crash (sun,l)' 
TENSE PAST 
SUBJ f2: 
"SPEC \[PRED'every'\] 
PRED 'car' 
\[ \[TOPIC \[ PRE: PRLO \] 
! / I I 
MODS f3:\]/4: / /,E,,sE ,'AST I I ( 
\[ L t?'J  \]JJ 
,1 
/ 
Figure 1: F-structure for Every car that John owned crashed. 
\[S~E~ S 1 / 
f :  / P'E? P/  J LMODS M\] S~, = \[as k ms\] 
\[anEST ~- mnssr\] = couj (apply(f, M~ U {P~}, \[O ~- z\])) 
f ~ = \[a S 13 aREST , quant (ms, y, .'~x.mREST) ~- y\] 
Figure 2: Quantified noun phrase interpretation rule 
By rule 26 for clauses with transitive verbs and the lexical entries given: 
A~ = \[{tel(x)} ~own(j,~)\] 
By rule 20 for relative clauses, allowing the application of rule 21 for tile discharge of relative pronoun 
assumptions: 
f4~ = \[O I- Ax.own(j, x)\] 
By rule 22 for interpreting sets of f-structures: 
h~ = {\[0 k Ax.own(j,x)\]} 
By the rule for quantified noun phrases given in Figure 2 and the lexical entries tbr every and car: 
h.  = \[{q~ant(everv, y, ~ .ear (~)  A own(j, ~))} ~ Yl 
By rule 16 for clauses with intransitive verbs: 
f~  = \[{q~,ant(every, y, ~x.car(x) A own(j, x)} ~ crash(y)\] 
By quantifier discharge rule 14: 
A.  = \[0 ~ every (~z.ear(z) A own(j, x), Av.era~h(y))\] 
Figure 3: Derivation of the interpretation of Every car that John owned crashed. 
ACRES DE COLING-92. NANTES. 23-28 AO~' 1992 2 1 7 PROC, OF COLING-92. NANTES, AUG. 23-28, 1992 
6 Conclusion 
The small fragment of English presented above 
is easily extensible to handle other semantic phe- 
nomena, such as sentential modification. Con- 
straining semantic derivations with respect o f- 
structures i preferable to the standard approach 
of using phrase structure trees, since f-structures 
need not be specifically tailored to solving the in- 
terpretation problem, but are motivated on inde- 
pendent grounds. The categorial semantics rules 
presented above provide an interpretation for f- 
structures directly, without the need for con- 
structing an intermediate l vel of 'logical form'. 
7 Acknowledgements 
For invaluable assistance, I am very grateful to 
Feruando Pereira and Stuart Shieber. Many 
thanks are also due to John Lamping and Vijay 
Saraswat for their help and encouragement, and 
to Joan Bresnan, Ken Kahn, Ron Kaplan, Lauri 
Karttunen, Chris Manning, John Maxwell, and 
Annie Zaenen for helpful comments and discus- 
sion. 
References 
Joan Bresnan and Sam A. Mchombo. 1987. 
Topic, pronoun, and agreement in Chiche~'a. 
Language, 63(4):741-782. 
Joan Bresnan, editor. 1982. The Mental Rep- 
resentation of Grammatical Relations. The 
MIT Press, Cambridge, MA. 
Robin Cooper. t983. Quantification and Syntac- 
tic Theory, volume 21 of Synthese Language 
Library. D. Reidel, Dordrecht. 
Mary Dalrymple, Stuart M. 8hieber, and Fer- 
nando C. N. Pereira. 1991. Ellipsis and 
higher-order unification. Linguistics and 
Philosophy, 14(4):399-452. 
David R. Dowty. 1982. Grammatical relations 
and Montague Grammar. In Pauline Jacob- 
son and Geoffrey K. Pullum, editors, The Na. 
tune of Syntactic Representation, pages 79- 
130. Reidel, Dordrecht. 
Per-Kristian ttalvorsen and Ronald M. Kaplan. 
1988. Projections and semantic description 
in Lexical-Functional Grammar. In Proceed- 
ings of the International Conference on Fifth 
Generation Computer Systems, pages 1116- 
1122, Tokyo, Japan. Institute for New Gen- 
eration Systems. 
Per-Kristian Haivorsen. 1983. Semantics for 
Lexical-Functional Grammar. Linguistic In- 
quiry, 14(4):567-615. 
Ronald M. Kaplan and Joan Bresnam 1982. 
Lexical-Functional Grammar: A formal sys- 
tem for grammatical representation. In Joan 
Bresnan, editor, The Mental Representation 
of Grammatical Relations, pages 173-281. 
The MIT Press, Cambridge, MA. 
Ronald M. Kaplan and John T. Maxwell. 1988. 
An algorithm for functional uncertainty. In 
Proceedings of COLING-88, volume 1, pages 
297-302, Budapest. 
Ronald M. Kaplan. 1987. Three seductions 
of computational psycholinguistics. In Pe- 
ter Whitelock, Harold Somers, Paul Bennett, 
Rod Johnson, and Mary McGee Wood, edi- 
tors, Linguistic Theory and Computer Appli- 
cations, pages 149-188. Academic Press, Lon- 
don. 
Richard Montague. 1974. Formal Philosophy. 
Yale University Press, New Haven. Richard 
Thomason, editor. 
Fernando C. N. Pereira and Martha E. Pollack. 
1991. Incremental interpretation. Artificial 
Intelligence, 50:37-82. 
Fernando C. N. Pereira. 1990. Categorial seman- 
tics and scoping. Computational Linguistics, 
16(1):1-10. 
Fernando C. N. Pereira. 1991. Deductive inter- 
pretation. In ESPRIT Symposium on Natu- 
ral Language and Speech. Brussels, Novem- 
ber 1991. 
Carl Pollard and Ivan A. Sag. 1987. 
Information-Based Syntaz and Semantics, 
volume 1. CSLI/University of Chicago Press, 
Stanford University. CSLI Lecture Notes, 
Number 13. 
ROmi Zajac and Martin Emele. 1990. Typed 
unification grasnmars. In Proceedings of 
COLING-90, vohtme 3, pages 293-298, 
Helsinki. 
Acres DE COLING-92, NAN2T~, 23-28 AOI3T 1992 2 1 8 PROC. OF COLING-92, NANTES, AUG. 23-28, 1992 
