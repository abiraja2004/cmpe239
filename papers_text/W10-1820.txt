Proceedings of the Fourth Linguistic Annotation Workshop, ACL 2010, pages 142?146,
Uppsala, Sweden, 15-16 July 2010. c?2010 Association for Computational Linguistics
Building the Syntactic Reference Corpus of Medieval French
Using NotaBene RDF Annotation Tool
Nicolas Mazziotta
Universit?t Stuttgart, Institut f?r Linguistik/Romanistik
nicolas.mazziotta@ulg.ac.be
Abstract
In this paper, we introduce the NotaBene
RDF Annotation Tool free software used
to build the Syntactic Reference Cor-
pus of Medieval French. It relies on a
dependency-based model to manually an-
notate Old French texts from the Base de
Fran?ais M?di?val and the Nouveau Cor-
pus d?Amsterdam.
NotaBene uses OWL ontologies to frame
the terminology used in the annotation,
which is displayed in a tree-like view of
the annotation. This tree widget alows
easy grouping and tagging of words and
structures. To increase the quality of the
annotation, two annotators work indepen-
dently on the same texts at the same time
and NotaBene can also generate automatic
comparisons between both analyses. The
RDF format can be used to export the
data to several other formats: namely,
TigerXML (for querying the data and ex-
tracting structures) and graphviz dot for-
mat (for quoting syntactic description in
research papers).
First, we will present the Syntactic Reference
Corpus of Medieval French project (SRCMF) (1).
Then, we will show how the NotaBene RDF An-
notation Tool software is used within the project
(2). In our conclusion, we will stress further de-
velopments of the tool (3).
1 Introducing the SRCMF Project
1.1 Main goals
There currently exists no widely available syn-
tactically annotated corpus for Medieval French.
Several syntactic corpora are available for Latin1
1The Latin Dependency Treebank and the Index Thomisti-
cus Treebank (Bamman et al, 2008).
or Old Portuguese.2 Research for automatic anno-
tation of Medieval French is being carried out by
the Mod?liser le changement: les voies du fran?ais
project.3
SRCMF is an international initiative, gathering
French (dir. Sophie Pr?vost, CNRS, Paris) and
German (dir. Achim Stein, Institut f?r Linguis-
tik/Romanistik, University of Stuttgart) resources
and teams. The aim of this project is to provide
selected excerpts4 of the two biggest Medieval
French corpora ? the Base de Fran?ais M?di?val
(Guillot et al, 2007), and the Nouveau Corpus
d?Amsterdam (Kunstmann and Stein, 2007a) with
a syntactic annotation layer that is meant to follow
the same guidelines in both corpora.
It was decided at the very beginning of the
project that, at first, the syntactic analysis would
be manually added to the corpus by experts, rather
than automatically inserted by an automaton.5.
Accordingly, annotation layers that previously ex-
ist are not used to elaborate the new layer. This
choice leads to several consequences, when one
considers the mistakes that could be made during
the annotation procedure: 1/ errors are less sys-
tematic than those introduced by an automaton;
2/ the annotation model does not need to be for-
malised at first; 3/ proofreading is very important.
While the first point might be a major advantage
in a further statistical exploration of the data (be-
cause of the ?better? randomness of the errors),
the third is a major problem: proofreading is very
time-consuming. But as previous automatic POS
annotation is provided in both corpora, this tag-
ging can be used a posteriori. We plan to perform
mutual validation between the POS and the syn-
2Tycho Brahe project http://www.tycho.iel.
unicamp.br/~tycho/.
3Which provide syntactic annotation for 19 texts dating
from the 11th to the end of the 13th C. (Martineau, 2008).
4There are still legal and technical issues that interfere
with the final size of the corpus.
5Automatic annotation will be investigated later on.
142
tactic annotations: this procedure is allowed by the
independency of their elaborations.
At the time this paper was submitted, the sample
annotation of Le Roman de Tristan (Defourques
and Muret, 1947) (ca 28.000 words, ca 54.000 an-
notations)6 has been completed and will be made
available soon.
1.2 Syntactic Annotation Model
We will not give an in-depth description of the
model here: we limit ourselves to a general pre-
sentation that will make the rest of the paper more
easily understandable.
The deficient nominal flexion in Medieval
French makes the task of identifying the head of
NPs very difficult, and there is considerable am-
biguity. Therefore, the basic annotation we pro-
vide only concerns the structure of the clause, and
relations at phrase- or word-level (Lazard, 1984)
are not described, except by a basic identification
of prepositions and conjunctions, and by delimita-
tion, when necessary (e.g., relative clauses occur
at phrase-level: we mark their boundaries in order
to describe their structure).
It is to be stressed that the added annotations
are as genuinely syntactic as possible. This means
that neither semantic, nor enunciative analyses are
encoded ?following the Th?orie des trois points de
vue (Hag?ge, 1999). On the formal part, as far as
morphological features are concerned, only verbal
inflexion is taken into account, since it has obvious
effects on the syntax of the clause. It is also impor-
tant to distinguish between syntactic structures,
which occur at deep level, and word order, which
is considered as an expression of these structures
and does not receive any annotation.
The model is dependency-based (Polgu?re and
Mel?c?uk, 2009; Kahane, 2001), and relations are
centered on verb forms, which are the main gover-
nor nodes of the clauses. Everything in the clause
depends on this central verb ?including the sub-
ject, which is not compulsory in Medieval French,
and is therefore described as a complement. The
model gives higher priority to morphosyntactic
criteria than to semantic ones, and the relation
linking it to its satellites can be qualified by check-
ing precise criteria. E.g., subjects are identified by
verb-subject agreement, objects become subjects
in a passive transformation, etc.
6We do not provide exact figures, for they are subject to
change slightly as we review our annotation work.
1.3 Annotation Workflow
Four annotators are currently working on the
project.7 The annotation workflow for each por-
tion of text (ca 2000 words) is the following: 1/
two different annotators perform individual anno-
tation of the same portion of text; 2/ the same
people perform a crossed-correction for most ob-
vious errors by the annotators; 3/ two different
proofreaders perform a second-step comparison
and deal with complex cases.
2 NotaBene RDF Annotation Tool
Stein (2008, 165-168) has given a comprehensive
specification of what the features of the annota-
tion tool should be. Most importantly, we adopt
the principle that the software should provide a
convenient interface to manually annotate the syn-
tactic relations between words and also to perform
comparisons. NotaBene RDF Annotation Tool free
software (still in alpha version) focuses on those
features.8 An SRCMF-specific plugin has been
designed for manual annotation and annotation
comparisons.
2.1 General Presentation
As explained in (Mazziotta, forthcoming), No-
taBene is an attempt to use Semantic-Web tech-
niques to provide textual data with linguistic anno-
tations. This data has to be valid XML that iden-
tifies every taggable token with a unique identifier
(e.g.: an @xml:id attribute) that is interpreted as
a URI. It uses RDF formalisms (Klyne and Car-
roll, 2004)9 to store annotations and OWL ontolo-
gies to describe terminologies (Bechhofer et al,
2004). NotaBene focuses on multiple conceptu-
alisation and allows concurrent visualisations of
the same text/annotation10. The use of RDF rather
than the more commonly used XML makes it eas-
ier to cross several overlapping analysis without
having to elaborate complex jointing procedures
(Loiseau, 2007).
7Currently, the four annotators work part-time on the an-
notation task, hence, one could say there is the equivalent of
two full-time annotators.
8It is freely available at https://sourceforge.
net/projects/notabene/. Note that the documenta-
tion is still very sparse; please contact the author if you intend
to use the program.
9See also the current NotaBene conceptual specifica-
tion http://notabene.svn.sourceforge.net/
viewvc/notabene/trunk/doc/specification.
pdf, that explains how the RDF model has been restricted.
10Furthermore, it can show concurrent terminologies ap-
plied to the same text, but we will not discuss it here.
143
Figure 1: NotaBene SRCMF Working environment
Each visualisation is associated with one or
more OWL ontologies. The current terminology
is visible on the right panel of the application (see
fig. 1, showing some SRCMF-specific classes).11
Visualisations are dynamically linked with the
RDF data structure, which is updated on-the-fly.
2.2 SRCMF Plugin for Syntactic Annotation
For the sake of ergonomics, it turned out to be
easier to represent syntactic structures using a
constituent-like visualisation. By identifying the
governor of each structure, we can use such a visu-
alisation to represent a dependency graph, as there
is evidence (Robinson, 1970) of formal equiva-
lence on the two descriptions ?we will discuss this
later on (see section 2.4). Hence, the main plu-
gin for syntactic annotation is a tree-like widget in
which words are displayed vertically from top to
bottom in the order of the text. Here is an exam-
ple of a fully annotated sentence to introduce the
interface:
Li rois pense que par folie, Sire Tris-
tran, vos aie am? [?The king thinks that
it was madness that made me love you,
Lord Tristan?] ?B?roul, in (Defourques
and Muret, 1947, v. 20)
As it can be seen on the left panel in fig. 1, the text
is wrapped in a hierarchy of folders that mainly
11Although the figure shows a tree, the class hierarchy is a
graph. See n. 12 for some translations of the labels.
represent labelled subtrees12. Within each clause,
a disc is used to visually identify the main gover-
nor, whereas triangles mark its dependents.
At the beginning of the annotation task, the plu-
gin shows a simple list of words, which are se-
lected and wrapped into folders that represent the
linguistic analysis of the text. This can be done ei-
ther by using customisable keyboard shortcuts or
by pointing and clicking with the mouse.
A simultaneous view of the running text, pre-
serving references and punctuation, is synchro-
nised with the tree widget (see at the bottom-left
corner of fig. 1).
2.3 Comparison Procedures
NotaBene?s ability to display concurrent annota-
tions of the same text is used to compare the re-
sults of the syntactic analysis by two annotators.
It identifies structures that differ by not having the
same contents or label. As it can be seen in fig. 2,
the same structure has not been understood in the
same way by the first (who places the Apostro-
phe at the main clause level) and by the second
annotator (who places it at the subordinate clause
level). At the application level, NotaBene simply
sees that the Objet folder on the right pane con-
12The tag labels translate roughly (the srcmf prefix is the
namespace of the project): Phrase ?Clause?, SujetSujet ?Sub-
ject?, Objet ?Object?, Circonstant ?Adjunct?, N?udVerbal. . .
?Finite Verb?, Auxilie. . . ?Non-finite auxiliated form?, Rela-
teur. . . ?Conjunction/preposition?, Apostrophe ?Vocative?.
144
Figure 3: DOT Graph Export
Figure 2: Comparison (boxes manually added)
tains an additional Apostrophe and focuses on the
Objet structure on the right, and the first word of
the structure on the left. The person who performs
the comparison can immediately choose the right
interpretation, and correct the erroneous analysis.
2.4 Export Capabilities
The RDF data model underlying the tree wid-
get mimicks the tree structure and needs to be
converted to create a genuine dependency graph.
As the tree structure identifies SRCMF-specific
governors (formally equivalent to heads in Head-
Driven Phrase Structure Grammar), the transfor-
mation is relatively easy13. The resulting depen-
dency RDF graph can be validated against the on-
tology and additional class restrictions defining
the annotation model, but this feature still needs
to be implemented in NotaBene.
It is possible to create as many filters as neces-
sary to transform the RDF graph into other data
structures, using NotaBene as an interface. At
first, we have decided to focus on two objectives:
1/ corpus exploration; 2/ analysis rendering for the
purpose of human reading.
13Although the description of coordination relations ?
which is difficult in a dependency-based framework (Kahane,
2001, 6-7)? requires a more complex algorithm.
The best syntactic corpus exploration tool
we know about is TigerSearch (Brants et al,
2002).14 The TigerSearch documentation defines
the TigerXML format to represent dependency or
constituency structures. TigerSearch corpora can
be queried using a specific formalism and displays
the analysis in a tree-like from.
TigerSearch tree display is not sufficient to rep-
resent our syntactic model ? mainly because com-
plex relations involving coordinations are surim-
pressed on the tree drawing, creating too many
nodes to be conveniently readable. To enhance the
readablility of the syntactic relations, we export
our RDF graph into graphviz DOT files,15 to ren-
der an elegant representation of the syntactic struc-
tures ?fig. 3 (node labels are self-explanatory).
3 Conclusion and ?TODO?s?
The use of NotaBene satisfies the annotators of the
SRCMF project, providing a convenient means to
add manual annotations, compare parallel analy-
ses and export data structures to other formalisms
and tools.
In order to increase the quality of the project
output, further implementations will at first deal
with: 1/ data validation, using OWL reasoners16;
2/ a posteriori comparisons between POS annota-
tion and syntactic annotation
Acknowledgements
The project is funded from 2009 to 2012 by the
Agence Nationale de la Recherche, France and the
Deutsche Forschungsgemeinschaft, Germany. We
would like to thank Brigite Antoine, Beatrice Bar-
bara Bichoff, Tom Rainsford, Achim Stein and
Jean-Christophe Vanhalle for proofreading.
14See http://www.ims.uni-stuttgart.de/
projekte/TIGER/TIGERSearch/.
15http://www.graphviz.org/.
16Using Integrity Constraint Validation, currently being
added to Pellet semantic reasoner software, see http://
clarkparsia.com/.
145
References
David Bamman, Marco Passarotti, Roberto Busa, and
Gregory Crane. 2008. The annotation guidelines of
the latin dependency treebank and index thomisti-
cus treebank: the treatment of some specific syn-
tactic constructions in latin. In Nicoletta Calzolari,
Khalid Choukri, Bente Maegaard, Joseph Mariani,
Jan Odjik, Stelios Piperidis, and Daniel Tapias, ed-
itors, Proceedings of the Sixth International Lan-
guage Resources and Evaluation (LREC?08), Mar-
rakech, Morocco, may. European Language Re-
sources Association (ELRA).
Sean Bechhofer, Frank Van Harmelen, Jim Hendler,
Ian Horrocks, Deborah L. McGuinness, Peter F.
Patel-Schneider, and Lynn Andrea Stein, editors.
2004. OWL Web Ontology Language Refer-
ence. Reference. W3C Recommendation 10 Febru-
ary 2004.
Sabine Brants, Stefanie Dipper, Silvia Hansen, Wolf-
gang Lezius, and George Smith. 2002. The TIGER
Treebank. In Proceedings of The First Workshop on
Treebanks and Linguistic Theories (TLT2002) 20th
and 21st September 2002, Sozopol, Bulgaria.
L. M. Defourques and E. Muret, editors. 1947. B?roul.
Le roman de Tristan. Po?me du XIIe si?cle. Cham-
pion, Paris, 4 edition.
C?line Guillot, Alexei Lavrentiev, and Christiane
Marchello-Nizia. 2007. La Base de Fran?ais
M?di?val (BFM): ?tats et perspectives. In Kun-
stmann and Stein (Kunstmann and Stein, 2007b),
pages 143?152.
Claude Hag?ge. 1999. La structure des langues.
Number 2006 in Que sais-je? Presses Universitaires
de France, Paris, 5 edition.
Sylvain Kahane. 2001. Grammaires de d?pendance
formelles et th?orie sens-texte. In Actes TALN 2001,
Tours, 2-5 juillet 2001.
Graham Klyne and Jeremy J. Carroll, editors. 2004.
Resource Description Framework (RDF): Concepts
and Abstract Syntax W3C Recommendation 10
February 2004.
Pierre Kunstmann and Achim Stein. 2007a. Le Nou-
veau Corpus d?Amsterdam. (Kunstmann and Stein,
2007b), pages 9?27.
Pierre Kunstmann and Achim Stein, editors. 2007b. Le
Nouveau Corpus d?Amsterdam. Actes de l?atelier de
Lauterbad, 23-26 f?vrier 2006. Steiner, Stuttgart.
Gilbert Lazard. 1984. La distinction entre nom et
verbe en syntaxe et en morphologie. Mod?les lin-
guistiques, 6(1):29?39.
Sylvain Loiseau. 2007. Corpusreader: un dispositif de
codage pour articuler une pluralit? d?interpr?tations.
Corpus, 6:153?186.
France Martineau. 2008. Un corpus pour l?analyse de
la variation et du changement linguistique. Corpus,
7:135?155.
Nicolas Mazziotta. forthcoming. Logiciel NotaBene
pour l?annotation linguistique. annotations et con-
ceptualisations multiples. Recherches Qualitatives.
Alain Polgu?re and Igor Mel?c?uk, editors. 2009. De-
pendency in linguistic description. John Benjamins,
Amsterdam and Philadelphia.
Jane Robinson. 1970. Dependency structures and
transformational rules. Language, 46:259?285.
Achim Stein. 2008. Syntactic annotation of Old
French text corpora. Corpus, 7:157?171.
146
