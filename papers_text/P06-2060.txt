Proceedings of the COLING/ACL 2006 Main Conference Poster Sessions, pages 460?466,
Sydney, July 2006. c?2006 Association for Computational Linguistics
Minority Vote: At-Least-N Voting
Improves Recall for Extracting Relations
Nanda Kambhatla
IBM T.J. Watson Research Center
1101 Kitchawan Road Rt 134
Yorktown, NY 10598
nanda@us.ibm.com
Abstract
Several NLP tasks are characterized by
asymmetric data where one class label
NONE, signifying the absence of any
structure (named entity, coreference, re-
lation, etc.) dominates all other classes.
Classifiers built on such data typically
have a higher precision and a lower re-
call and tend to overproduce the NONE
class. We present a novel scheme for vot-
ing among a committee of classifiers that
can significantly boost the recall in such
situations. We demonstrate results show-
ing up to a 16% relative improvement in
ACE value for the 2004 ACE relation ex-
traction task for English, Arabic and Chi-
nese.
1 Introduction
Statistical classifiers are widely used for diverse
NLP applications such as part of speech tagging
(Ratnaparkhi, 1999), chunking (Zhang et al, 2002),
semantic parsing (Magerman, 1993), named entity
extraction (Borthwick, 1999; Bikel et al, 1997; Flo-
rian et al, 2004), coreference resolution (Soon et al,
2001), relation extraction (Kambhatla, 2004), etc. A
number of these applications are characterized by a
dominance of a NONE class in the training exam-
ples. For example, for coreference resolution, classi-
fiers might classify whether a given pair of mentions
are references to the same entity or not. In this case,
we typically have a lot more examples of mention
pairs that are not coreferential (i.e. the NONE class)
than otherwise. Similarly, if a classifier is predicting
the presence/absence of a semantic relation between
two mentions, there are typically far more examples
signifying an absence of a relation.
Classifiers built with asymmetric data dominated
by one class (a NONE class donating absence of a
relation or coreference or a named entity etc.) can
overgenerate the NONE class. This often results in a
unbalanced classifier where precision is higher than
recall.
In this paper, we present a novel approach for
improving the recall of such classifiers by using a
new voting scheme from a committee of classifiers.
There are a plethora of algorithms for combining
classifiers (e.g. see (Xu et al, 1992)). A widely
used approach is a majority voting scheme, where
each classifier in the committee gets a vote and the
class with the largest number of votes ?wins? (i.e. the
corresponding class is output as the prediction of the
committee).
We are interested in improving overall recall and
reduce the overproduction of the class NONE. Our
scheme predicts the class label C obtaining the sec-
ond highest number of votes when NONE gets the
highest number of votes, provided C gets at least
N votes. Thus, we predict a label other than NONE
when there is some evidence of the presense of the
structure we are looking for (relations, coreference,
named entities, etc.) even in the absense of a clear
majority.
This paper is organized as follows. In section 2,
we give an overview of the various schemes for com-
bining classifiers. In section 3, we present our vot-
460
ing algorithm. In section 4, we describe the ACE
relation extraction task. In section 5, we present em-
pirical results for relation extraction and we discuss
our results and conclude in section 6.
2 Combining Classifiers
Numerous methods for combining classifiers have
been proposed and utlized to improve the perfor-
mance of different NLP tasks such as part of speech
tagging (Brill and Wu, 1998), identifying base noun
phrases (Tjong Kim Sang et al, 2000), named en-
tity extraction (Florian et al, 2003), etc. Ho et al
(1994) investigated different approaches for rerank-
ing the outputs of a committee of classifiers and also
explored union and intersection methods for reduc-
ing the set of predicted categories. Florian et al
(2002) give a broad overview of methods for com-
bining classifiers and present empirical results for
word sense disambiguation.
Xu et al(1992) and Florian et al(2002) consider
three approaches for combining classifiers. In the
first approach, individual classifiers output posterior
probabilities that are merged (e.g. by taking an av-
erage) to arrive at a composite posterior probability
of each class. In the second scheme, each classifier
outputs a ranked list of classes instead of a proba-
bility distribution and the different ranked lists are
merged to arrive at a final ranking. Methods us-
ing the third approach, often called voting methods,
treat each classifier as a black box that outputs only
the top ranked class and combines these to arrive at
the final decision (class). The choice of approach
and the specific method of combination may be con-
strained by the specific classification algorithms in
use.
In this paper, we focus on voting methods, since
for small data sets, it is hard to reliably estimate
probability distributions or even a complete order-
ing of classes especially when the number of classes
is large.
A widely used voting method for combining clas-
sifiers is a Majority Vote scheme (e.g. (Brill and
Wu, 1998; Tjong Kim Sang et al, 2000)). Each
classifier gets to vote for its top ranked class and
the class with the highest number of votes ?wins?.
Henderson et al(1999) use a Majority Vote scheme
where different parsers vote on constituents? mem-
bership in a hypothesized parse. Halteren et al
(1998) compare a number of voting methods includ-
ing a Majority Vote scheme with other combination
methods for part of speech tagging.
In this paper, we induce multiple classifiers by us-
ing bagging (Breiman, 1996). Following Breiman?s
approach, we obtain multiple classifiers by first
making bootstrap replicates of the training data and
training different classifiers on each of the replicates.
The bootstrap replicates are induced by repeatedly
sampling with replacement training events from the
original training data to arrive at replicate data sets
of the same size as the training data set. Breiman
(1996) uses a Majority Vote scheme for combining
the output of the classifiers. In the next section, we
will describe the different voting schemes we ex-
plored in our work.
3 At-Least-N Voting
We are specifically interested in NLP tasks char-
acterized by asymmetric data where, typically, we
have far more occurances of a NONE class that sig-
inifies the absense of structure (e.g. a named en-
tity, or a coreference relation or a semantic relation).
Classifiers trained on such data sets can overgener-
ate the NONE class, and thus have a higher preci-
sion and lower recall in discovering the underlying
structure (i.e. the named entities or coreference links
etc.). With such tasks, the benefits yielded by a Ma-
jority Vote is limited, since, because of the asym-
metry in the data, a majority of the classifiers might
predict NONE most of the time.
We propose alternative voting schemes, dubbed
At-Least-N Voting, to deal with the overproduction
of NONE. Given a committee of classifiers (obtained
by bagging or some other mechanism), the classi-
fiers first cast their vote. If the majority vote is for a
class C other than NONE, we simply output C as the
prediction. If the majority vote is for NONE, we out-
put the class label obtaining the second highest num-
ber of votes, provided it has at least N votes. Thus,
we choose to defer to the minority vote of classifiers
which agree on finding some structure even when
the majority of classifiers vote for NONE. We expect
this voting scheme to increase recall at the expense
of precision.
At-Least-N Voting induces a spectrum of combi-
461
nation methods ranging from a Majority Vote (when
N is more than half of the total number of classifiers)
to a scheme, where the evidence of any structure by
even one classifier is believed (At-Least-1 Voting).
The exact choice of N is an empirical one and de-
pends on the amount of asymmetry in the data and
the imbalance between precision and recall in the
classifiers.
4 The ACE Relation Extraction Task
Automatic Content Extraction (ACE) is an annual
evaluation conducted by NIST (NIST, 2004) on in-
formation extraction, focusing on extraction of en-
tities, events, and relations. The Entity Detection
and Recognition task entails detection of mentions
of entities and grouping together the mentions that
are references to the same entity. In ACE terminol-
ogy, mentions are references in text (or audio, chats,
...) to real world entities. Similarly relation men-
tions are references in text to semantic relations be-
tween entity mentions and relations group together
all relation mentions that identify the same semantic
relation between the same entities.
In the frament of text:
John?s son, Jim went for a walk. Jim liked
his father.
all the underlined words are mentions referring to
two entities, John, and Jim. Morover, John and
Jim have a family relation evidenced as two relation
mentions ?John?s son? between the entity mentions
?John? and ?son? and ?his father? between the entity
mentions ?his? and ?father?.
In the relation extraction task, systems must pre-
dict the presence of a predetermined set of binary
relations among mentions of entities, label the rela-
tion, and identify the two arguments. In the 2004
ACE evaluation, systems were evaluated on their ef-
ficacy in correctly identifying relations among both
system output entities and with ?true? entities (i.e. as
annotated by human annotators as opposed to sys-
tem output). In this paper, we present results for ex-
tracting relations between ?true? entities.
Table 1 shows the set of relation types, subtypes,
and their frequency counts in the training data for the
2004 ACE evaluation. For training classifiers, the
great paucity of positive training events (where rela-
tions exist) compared to the negative events (where
Type Subtype Count
ART user-or-owner 140
(agent artifact) inventor/manufacturer 3
other 6
EMP-ORG employ-executive 420
employ-staff 416
employ-undetermined 62
member-of-group 126
partner 11
subsidiary 213
other 37
GPE-AFF citizen-or-resident 173
(GPE affiliation) based-in 225
other 63
DISCOURSE -none- 122
PHYSICAL located 516
near 81
part-whole 333
PER-SOC business 119
(personal/social) family 115
other 28
OTHER-AFF ethnic 28
(PER/ORG ideology 26
affiliation) other 27
Table 1: The set of types and subtypes of relations
used in the 2004 ACE evaluation.
relations do not exist) suggest that schemes for im-
proving recall might benefit this task.
5 Experimental Results
In this section, we present results of experiments
comparing three different methods of combining
classifiers for ACE relation extraction:
? At-Least-N for different values of N,
? Majority Voting, and
? a simple algorithm, called summing, where we
add the posterior scores for each class from all
the classifiers and select the class with the max-
imum summed score.
Since the official ACE evaluation set is not pub-
licly available, to facilitate comparison with our re-
sults and for internal testing of our algorithms, for
each language (English, Arabic, and Chinese), we
462
En Ar Ch
Training Set (documents) 227 511 480
Training Set (rel-mentions) 3290 4126 4347
Test Set (documents) 114 178 166
Test Set (rel-mentions) 1381 1894 1774
Table 2: The Division of LDC annotated data into
training and development test sets.
divided the ACE 2004 training data provided by
LDC in a roughly 75%:25% ratio into a training set
and a test set. Table 2 summarizes the number of
documents and the number of relation mentions in
each data set. The test sets were deliberately chosen
to be the most recent 25% of documents in chrono-
logical order, since entities and relations in news
tend to repeat and random shuffles can greatly re-
duce the out-of-vocabulary problem.
5.1 Maximum Entropy Classifiers
We used bagging (Breiman, 1996) to create replicate
training sets of the same size as the original training
set by repeatedly sampling with replacement from
the training set. We created 25 replicate training sets
(bags) for each language (Arabic, Chinese, English)
and trained separate maximum entropy classifiers on
each bag. We then applied At-Least-N (N = 1,2,5),
Majority Vote, and Summing algorithms with the
trained classifiers and measured the resulting perfor-
mance on our development set.
For each bag, we built maximum entropy models
to predict the presence of relation mentions and the
type and subtype of relations, when their presence
is predicted. Our models operate on every pair of
mentions in a document that are not references to
the same entity, to extract relation mentions. Since
there are 23 unique type-subtype pairs in Table 1,
our classifiers have 47 classes: two classes for each
pair corresponding to the two argument orderings
(e.g. ?John?s son? vs. ?his father?) and a NONE
class signifying no relation.
Similar to our earlier work (Kambhatla, 2004),
we used a combination of lexical, syntactic, and se-
mantic features including all the words in between
the two mentions, the entity types and subtypes of
the two mentions, the number of words in between
the two mentions, features derived from the small-
est parse fragment connecting the two mentions, etc.
These features were held constant throughout these
experiments.
5.2 Results
We report the F-measure, precision and recall for
extracting relation mentions for all three languages.
We also report ACE value1, the official metric used
by NIST that assigns 0% value to a system that pro-
duces no output and a 100% value to a system that
extracts all relations without generating any false
alarms. Note that the ACE value counts each rela-
tion only once even if it is expressed in text many
times as different relation mentions. The reader is
referred to the NIST web site (NIST, 2004) for more
details on the ACE value computation.
Figures 1(a), 1(b), and 1(c) show the F-measure,
precision, and recall respectively for the English test
set obtained by different classifier combination tech-
niques as we vary the number of bags. Figures 2(a),
2(b), and 2(c) show similar curves for Chinese, and
Figures 3(a), 3(b), and 3(c) show similar curves for
Arabic. All these figures show the performance of a
single classifier as a straight line.
From the plots, it is clear that our hope of increas-
ing recall by combining classifiers is realized for all
three languages. As expected, the recall rises fastest
for At-Least-N when N is small, i.e when small mi-
nority opinion or even a single dissenting opinion is
being trusted. Of course, the rise in recall is at the
expense of a loss of precision. Overall, At-Least-N
for intermediate ranges of N (N=5 for English and
Chinese and N=2 for Arabic) performs best where
the moderate loss in precision is more than offset by
a rise in recall.
Both the Majority Vote method and the Summing
method succeed in avoiding a sharp loss of preci-
sion. However, they fail to increase the recall signif-
icantly either.
Table 3 summarizes the best results (F-measure)
for each classifier combination method for all three
languages compared with the result for a single clas-
sifier. At their best operating points, all three combi-
nation methods handily outperform the single clas-
sifier. At-Least-N seems to have a slight edge over
the other two methods, but the difference is small.
1Here we use the ACE value metric used for the ACE 2004
evaluation
463
 43
 44
 45
 46
 47
 48
 49
 50
 0  5  10  15  20  25
F
Number of Bags
At-Least-1
At-Least-2
At-Least-5
Majority Vote
Summing
Single
(a) F-measure
 46
 48
 50
 52
 54
 56
 58
 60
 62
 64
 66
 68
 0  5  10  15  20  25
Pr
ec
is
io
n
Number of Bags
At-Least-1
At-Least-2
At-Least-5
Majority Vote
Summing
Single
(b) Precision
 34
 36
 38
 40
 42
 44
 46
 0  5  10  15  20  25
R
ec
al
l
Number of Bags
At-Least-1
At-Least-2
At-Least-5
Majority Vote
Summing
Single
(c) Recall
Figure 1: Comparing F-measure, precision, and recall of different voting schemes for English relation
extraction.
 61
 62
 63
 64
 65
 66
 67
 0  5  10  15  20  25
F
Number of Bags
At-Least-1
At-Least-2
At-Least-5
Majority Vote
Summing
Single
(a) F-measure
 56
 58
 60
 62
 64
 66
 68
 70
 72
 74
 76
 0  5  10  15  20  25
Pr
ec
is
io
n
Number of Bags
At-Least-1
At-Least-2
At-Least-5
Majority Vote
Summing
Single
(b) Precision
 52
 54
 56
 58
 60
 62
 64
 66
 68
 70
 0  5  10  15  20  25
R
ec
al
l
Number of Bags
At-Least-1
At-Least-2
At-Least-5
Majority Vote
Summing
Single
(c) Recall
Figure 2: Comparing F-measure, precision, and recall of different voting schemes for Chinese relation
extraction.
 25
 26
 27
 28
 29
 30
 31
 0  5  10  15  20  25
F
Number of Bags
At-Least-1
At-Least-2
At-Least-5
Majority Vote
Summing
Single
(a) F-measure
 28
 30
 32
 34
 36
 38
 40
 42
 44
 0  5  10  15  20  25
Pr
ec
is
io
n
Number of Bags
At-Least-1
At-Least-2
At-Least-5
Majority Vote
Summing
Single
(b) Precision
 18
 20
 22
 24
 26
 28
 30
 0  5  10  15  20  25
R
ec
al
l
Number of Bags
At-Least-1
At-Least-2
At-Least-5
Majority Vote
Summing
Single
(c) Recall
Figure 3: Comparing F-measure, precision, and recall of different voting schemes for Arabic relation ex-
traction.
464
English Arabic Chinese
Single 46.87 27.47 63.75
At-Least-N 49.52 30.41 66.79
Majority Vote 49.24 29.02 66.21
Summing 48.66 29.02 66.40
Table 3: Comparing the best F-measure obtained by
At-Least-N Voting with Majority Voting, Summing
and the single best classifier.
English Arabic Chinese
Single 59.6 37.3 69.6
At-Least-N 63.9 43.5 71.0
Table 4: Comparing the ACE Value obtained by At-
Least-N Voting with the single best classifier for the
operating points used in Table 3.
Table 4 shows the ACE value obtained by our
best performing classifier combination method (At-
Least-N at the operating points in Table 3) compared
with a single classifier. Note that while the improve-
ment for Chinese is slight, for Arabic performance
improves by over 16% relative and for English, the
improvement is over 7% relative over the single clas-
sifier2. Since the ACE value collapses relation men-
tions referring to the same relation, finding new re-
lations (i.e. recall) is more important. This might
explain the relatively larger difference in ACE value
between the single classifier performance and At-
Least-N.
The rules of the ACE evaluation prohibit us from
presenting a detailed comparison of our relation ex-
traction system with the other participants. How-
ever, our relation extraction system (using the At-
Least-N classifier combination scheme as described
here) performed very competitively in 2004 ACE
evaluation both in the system output relation ex-
traction task (RDR) and the relation extraction task
where the ?true? mentions and entities are given.
Due to time limitations, we did not try At-Least-N
with N > 5. From the plots, there is a potential for
getting greater gains by experimenting with a larger
2Note that ACE value metric used in the ACE 2004 eval-
uation weights entitites differently based on their type. Thus,
relations with PERSON-NAME arguments end up contribut-
ing a lot more the overall score than relations with FACILITY-
PRONOUN arguments.
number of bags and with a larger N.
6 Discussion
Several NLP problems exhibit a dominance of a
NONE class that typically signifies a lack of struc-
ture like a named entity, coreference, etc. Especially
when coupled with small training sets, this results in
classifiers with unbalanced precision and recall. We
have argued that a classifier voting scheme that is fo-
cused on improving recall can help increase overall
performance in such situations.
We have presented a class of voting methods,
dubbed At-Least-N that defer to the opinion of a mi-
nority of classifiers (consisting of N members) even
when the majority predicts NONE. This can boost
recall at the expense of precision. However, by vary-
ing N and the number of classifiers, we can pick an
operating point that improves the overall F-measure.
We have presented results for ACE relation ex-
traction for three languages comparing At-Least-N
with Majority Vote and Summing methods for com-
bining classifiers. All three classifier combination
methods significantly outperform a single classifier.
Also, At-Least-N consistently gave us the best per-
formance across different languages.
We used bagging to induce multiple classifiers for
our task. Because of the random bootstrap sam-
pling, different replicate training sets might tilt to-
wards one class or another. Thus, if we have many
classifiers trained on the replicate training sets, some
of them are likely to be better at predicting certain
classes than others. In future, we plan to experi-
ment with other methods for collecting a committee
of classifiers.
References
D. M. Bikel, S. Miller, R. Schwartz, and R. Weischedel.
1997. Nymble: a high-performance learning name-
finder. In Proceedings of ANLP-97, pages 194?201.
A. Borthwick. 1999. A Maximum Entropy Approach to
Named Entity Recognition. Ph.D. thesis, New York
University.
L. Breiman. 1996. Bagging predictors. In Machine
Learning, volume 24, page 123.
E. Brill and J. Wu. 1998. Classifier combination
for improved lexical disambiguation. Proceedings of
COLING-ACL?98, pages 191?195, August.
465
Radu Florian and David Yarowsky. 2002. Modeling con-
sensus: Classifier combination for word sense disam-
biguation. In Proceedings of EMNLP?02, pages 25?
32.
R. Florian, A. Ittycheriah, H. Jing, and T. Zhang. 2003.
Named entity recognition through classifier combina-
tion. In Proceedings of CoNNL?03, pages 168?171.
R. Florian, H. Hassan, A. Ittycheriah, H. Jing, N. Kamb-
hatla, X. Luo, N Nicolov, and S Roukos. 2004. A
statistical model for multilingual entity detection and
tracking. In Proceedings of the Human Language
Technology Conference of the North American Chap-
ter of the Association for Computational Linguistics:
HLT-NAACL 2004, pages 1?8.
J. Henderson and E. Brill. 1999. Exploiting diversity in
natural language processing: Combining parsers. In
Proceedings on EMNLP99, pages 187?194.
T. K. Ho, J. J. Hull, and S. N. Srihari. 1994. Deci-
sion combination in multiple classifier systems. IEEE
Transactions on Pattern Analysis and Machine Intelli-
gence, 16(1):66?75, January.
Nanda Kambhatla. 2004. Combining lexical, syntactic,
and semantic features with maximum entropy mod-
els for information extraction. In The Proceedings of
42st Annual Meeting of the Association for Computa-
tional Linguistics, pages 178?181, Barcelona, Spain,
July. Association for Computational Linguistics.
D. Magerman. 1993. Parsing as statistical pattern recog-
nition.
NIST. 2004. The ACE evaluation plan.
www.nist.gov/speech/tests/ace/index.htm.
Adwait Ratnaparkhi. 1999. Learning to parse natural
language with maximum entropy models. Machine
Learning, 34:151?178.
W. M. Soon, H. T. Ng, and C. Y. Lim. 2001. A ma-
chine learning approach to coreference resolution of
noun phrases. Computational Linguistics, 27(4):521?
544.
E. F. Tjong Kim Sang, W. Daelemans, H. Dejean,
R. Koeling, Y. Krymolowsky, V. Punyakanok, and
D. Roth. 2000. Applying system combination to base
noun phrase identification. In Proceedings of COL-
ING 2000, pages 857?863.
H. van Halteren, J. Zavrel, and W. Daelemans. 1998. Im-
proving data driven wordclass tagging by system com-
bination. In Proceedings of COLING-ACL?98, pages
491?497.
L. Xu, A. Krzyzak, and C. Suen. 1992. Methods of
combining multiple classifiers and their applications
to handwriting recognition. IEEE Trans. on Systems,
Man. Cybernet, 22(3):418?435.
T. Zhang, F. Damerau, and D. E. Johnson. 2002. Text
chunking based on a generalization of Winnow. Jour-
nal of Machine Learning Research, 2:615?637.
466
