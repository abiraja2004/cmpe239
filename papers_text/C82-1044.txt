COL~VG 82, J. Horec~ (~,) 
_So,~..l~e#a~ Rub~ Co,.,mm.r 
?,4eede,,aL~ 
AN ENGLISH-JAPANESE MACHINE TRANSLATION SYSTEM 
BASED ON FORMAL SEMANTICS OF NATURAL LANGUAGE 
Toyo-aki NISHIDA and Shuji DOSHITA 
Department of Information Science 
Faculty of En@ineering, Kyoto University 
8akyo-ku, Kyoto, 606, JAPAN 
Tbls paper  proposes  a new model of  machine t rans la t ion .  In 
th i s  model,  the lambda formula obta ined  from the syntact i c  
and Semantic analysis of a source language sentence is viewed 
as a target language generating function and the target 
language sentence is obtained as a result of evaluating the 
formula by functional application or ~-calculus. This model 
provides a systematic and powerful way of incorporating human 
knowledge on the languages. A prototype is constructed on the 
LISP system. The performance was tested for four sample texts 
taken from existing technical reports and computer manuals. 
INTRODUCTION 
This paper proposes a functional model of machine translation and describes its 
applcation to English-Japanese machine translation. In this model, we aimed 
to achieve: 
- systematization of translation process, 
- lexicon based autonomous framework, and 
- a translation model based on semantic interpretation. 
INTERMEDIATE REPRESENTATION 
Intermediate representation of this model is EFR (English-oriented Formal 
Repre~entatlon) and CPS (Conceptual Phrase Structure). 
EFR is a logical language based on Cresswell's lambda eategorial language 
(Cresswell (1973)), which can be considered to be a notationally simplified 
version of Montague Grammar (Montague (1974), Dowry (1981)). From an 
engineering point of view, EFR can be regarded as an artiflcial language in 
which each expression is unambiguous. So, there may be the cases in which 
more than one EFR expression can be associated with a given sentence. In 
such cases, ambiguities are resolved using inference, knowledge, or by human 
assistance. 
CPS is an extended phrase structure in that (I) CPS is a more general element 
including syntactic knowledge on the concept, so (2) CPS is implemented as a 
framo and (3) CPS is not only a data structure which is an object under 
operation but also a function which can operate on other CPS's. 
A CPS formula is a functional notation (lambda formula) of the operation 
sequence on CPS's. A CPS formula is evaluated to be a CPS or a functional 
va lue .  The eva luat ion  process  is  de f ined  by a (pure)  LISP l i ke  in terpreter .  
SOURCE LANGUAGE ANALYSIS 
Eng l l sh  sentence  ana lys i s  is  done us ing~wo layered  ru les ,  pat tern  d i rec ted  
277 
278 T. NISHIDA and S. DOSHITA 
augmented context  f ree  ru les  (AUGCF ru les )  and product ion type procedura l  
ru les .  AUGCF ru le  i s  a descr ip t ive  ru le .  Context f ree ru le  i s  extended in 
severa l  po in ts ,  (1)  a t tached  funct ion  for checking syntact i c  deta i l s  and 
semantic acceptab i l i ty ,  (2) d i rec t  notat ion  of gap in re la t ive  c lauses  or 
in ter rogat ive  sentences .  An AUGCF ru le  descr ibes  what EFR formula i s  
assoc ia ted  with a g iven syntact i c  pat tern  and in what cond i t ion  the pat tern  i s  
acceptab le .  Some examples look l i ke :  
S subjvp'+10'*seml(*sem2)~ NP.VP . . .  R1 
NP PmI'+0pc?ns-np-rel~Np.'~/tIICH".(S-NP) ... R2 
Although lo ts  of syntact i c  phenomena can be eas i ly  formel ized with AUGCF ru les ,  
the computer cannot e f f i c ient ly  analyze input  sentences only  with them. One 
reason i s  that  the computer nmst examine which ru les  are app l i cab le  in  a g iven 
s i tuat ion  and determine which one i s  p laus ib le .  Such process ings  make the 
computer very much slow and ine f f i c ient .  Another reason i s  that  some kind of 
heur i s t i c  knowledge, which i s  sometimes re fer red  to as knowledge on cont ro l  
(Davis (1980)) ,  cannot be e f fec t ive ly  incorporated  in to  the AUGCF ru les .  The 
knowledge on cont ro l  prov ides heur i s t i cs  on when and how to use each ru le .  
Condit ion -> act io~ formal ism (product ion ru le  formal ism) i s  cons idered to be 
su i tab le  to wr i te  such leve l  of knowledge. 
Our second leve l  ru le  i s  obta ined by a t tach ing  cont ro l  in formet ion  to each 
AUGCF ru le  and t ransforming the ru le  format.  The type of procedura l  ru les  
a re :  E - ru le ,  U - ru le ,  B - ru le ,  and L - ru le .  
- E - ru le  (expansion ru le )  i s  invoked when a goal  i s  expected.  E- ru le  
spec i f ies  subgoal decomposit ion of the given goa l .  
- U-rule (up-ped ru le )  i s  invoked when a parse t ree  node i s  generated.  This 
ru le  fu r ther  spec i f ies  add i t iona l  goa ls  and i f  a l l  of them succeed, a new 
node w i l l  be const ructed .  This ru le  i s  used mainly for  le f t  recurs lve  type 
AUGCF ru les .  
- B-ru le (Bottom-up ru le )  i s  re fe r red  to by a bottom-up parser  incorporated 
in  the ru le  in terpreter .  
- L - ru le  (Lexicon ru le )  i s  embedded in a d ic t ionary  and invoked when a key 
word i s  encountered in the given text .  
The ru les  RI and R2 are rewr i t ten  in to  procedura l  type ru les  as fo l lows:  
goal=S "~{T -* expand\[(NP VP);subJvp;+10;*seml(*sem2)\] } ... RI' (E-rule) 
constructed=NP =~?Iex\['~CHICH"\] --~ "oet the next goal an S with ~... R2' 
e~actly one NP deleted; | (U-rule)  
if it succeedej then apply R2. t~ 
Where RI', for example, says that: given a goal S then expand it into subgoals 
NP and VP; i f  both of them succeed then reduce them in to  an S node; at  that  
t ime,  a funct ion  subjvp checks sub jec t -verb  agreement; +10 i s  the score for  S; 
*seml(*sem 2) i s  a p~t tern  of the EFR express ion  for the S node, where *sem 1 
denotes the EFR express ion  for i t s  f i r s t  son (NP), e tc .  I f  some anomaly i s  
detected  by those funct iona l  a t tachments ,  the app l i ca t ion  of the ru le  i s  
re jec ted  ( funct iona l  augmentat ion of CF ru le ) .  
A not ion  of a frame i s  employed in order  to implement feature  semant ics .  A 
frame i s  an extended property  l i s t  in  which syntact i c  and semantic features  are 
descr ibed .  By pass ing  and checking cons is tency  among such features ,  (mainly 
semant ic)  const ra in ts  are implemented. 
AN ENGLISHJAPANESE MACHINE TRANSLATION SYSTEM 279 
In practice, the knowledge incorporated in a system can never be total and 
complete, so human being ~hould help computer analyze input sentences. The 
human halp is limited to resolving ambiguities. In order to make the human 
diagnosis efficient, some diagnostic facilities are implemented. 
It is also important to construct and manage dictionaries. Dictionary manager 
is implemented to make human modification of dictionary flexible by use of 
pattern directed dictionary editing commands. 
INTERPRETATION OF EFR AND TARGET LANGUAGE GENERATION 
The interpretation of an EFR expression can be defined in the conceptual level. 
For example, given an EFR expression: 
a(%y\[a*(communication))(~x\[(((*ap(for)(x))(facility))(y)\])\]), 
which corresponds to a noun phrase "a facility for communication". A detailed 
description of the conceptual interpretation in our conceptual model (Nishida 
(1980)) is given below. 
(I) conceptual interpretation of a(~y\[ ... \]) associates a conceptual 
element "something" (individual concept) with the variable y. 
(2) conceptual interpretation of a*(communication)(~x\[ ... \]) associates a 
conceptual element "(a) communication" with the variable x. 
(3) (*ap(for))(x) is interpreted as an adjective concept "for the sake of x", 
which becomes "for the sake of (a) communication" from (2). 
(4) the adjective concept obtained in (3) is applied as a function to the 
interpretation of "facility" (i.e., a noun concept "facility"). Thus 
we obtain a complex noun concept "system for the sake of (a) facility" 
for ((*ap(for))(x))(facility). 
(5) the application of a noun concept p to an individual concept q yields a 
sentence concept: "q is a p." This interpretation rule is used for the 
fragment: (((*ap(for))(x))(facility))(y). The result is a sentence 
concept: "something (y) is a facility for the sake of (a) communication." 
(6) Finally the interpretation of a given EFR expression results in a noun 
phrase concept: "something y: such that y is a facility for the sake of 
(a) communication." This noun phrase concept is a higher order concept 
which gives a name to an individual: "a facility for the sake of (a) 
co~m~unication." This higher order concept will be reduced if it is 
applied to a one place predicate (roughly speaking, a property like 
"being constructed", "being an x such that the paper is concerned with 
x", etc.). 
The above process of interpretation is stepwise and includes no "gap" nor 
"skip". Such property is crucially important i n constructing large and complex 
systems including machine translation systems. This process can be simulated 
in the "linguistic" domain; our idea of target language generation is this: 
- each conceptual element is accompanied with a target language phrase 
structure which gives the name of the concept. 
- each semantic interpretation of a complex structure is accompanied with a 
syntactic operation of creating new phrase structure from those for function 
part and argument part conceptual elements. 
Two types  of  Japanese  phrase  s t ructure  man ipu la t ing  ru le  can  be assoc ia ted  
w i th  funct iona l  app l i ca t ion :  
- embedding one phrase  in to  another  phrase  as a mod i f i ca t ion  par t  (generate  
KAKARI-UKE relation) 
- transforming one phrase by use of the information from another phrase. 
280 T. NISHIDA and S. DOSHITA 
a (Ay \[ (a* (communicatlon)) (%X~x)  ) (facility)) (Y) \]) \]) 
\ / I 
for (a) eonTnuni~on/ / 
\[NOUN\[NOUN-MODF" (aS ~5) ~ ~0 ~D\] \[NOUN ~ \]\] / 
f , ,~ty .,'o. c,,) .o . , r~o , ,  j /  
\[S\[NPaS~Gcr~:)\]\[Np (aS ~) ~6Dtc~?-~\]\[PRED"O~ \]\] 
something is a f a c i ~  con~nication 
\[Np(~ ) (~S) ~D/C~O~D~ \] 
(some) facility for (a) communication 
Fig.l. Outl ine of a sample generation from an EFR expression. 
Thus, a functional application corresponds to a primitive syntactic operation 
of Japanese language. 
CPS is defined to be a structure which conveys not only conceptual information 
on a concept but also syntactic infbrmation about the concept. All those 
information is structured as a frame. The descendant slot of a CPS is either 
a terminal value (lexicon frame) or a list of CPS's. Thus CPS can be linked as 
a tree structure. A CPS corresponding to a noun phrase: "the typewriter" 
looks like: 
\[NP \[DET 'the' with Q=DEFINITE\] 
r 'typewriter' with CLASS=PHYSOBJ \] with NBR=SGL \]. LNOUN . . . . . .  
A CPS works both as a data and as a function; it is sometimes applied to other 
CPS's to result in another CPS or functional value, or it sometimes is a data 
structure under some operation. Thus CPS is a higher order object. The 
semantics can be modeled in the notion of a categorial grammar. A CPS of an 
adjective concept, for example, meps a CPS of a noun concept into another 
(compound) CPS of a modif ied noun. This principle can he written as: 
ADJ=NOUN/NOUN. On the other hand, the adjective CPS can be modified by an 
adverbial CPS. Thus ADV=ADJ/ADJ. 
A CPS formula specifies a seqfience of operations on given CPS's. A CPS formula 
involves CPS as a data. Other elements of CPS formula are: variable (with 
AN ENGLISH-.IAPANESE MACHINE TRANSLATION SYSTEM 281 
coers ion  spec i f i ca t ion)~ lambda express ion ,  funct iona l  app l i ca t ion  fo rmula ,  
t rans format lona l  ru les ,  cond i t iona l  express ion ,  and compos i t ion  funct ion .  The 
eva luat ion  process  o f  a CPS fo rmula  i s  de f ined  as a funct ion  l i ke  LISP 
in terpreter .  
Fig.l illustrates an outline of target language generation process for a phrase 
"a facility for communication". (CPS formula is onmited there.) 
In practice, our system involves one step called the REFORM step after the CPS 
eva luat ion  process .  Th is  s tep  i s  needed main ly  because ,  ( I )  some d i rec t  
output  i s  not  readab le ;  the  content  can  be unders tood  w i thout  ambigu i ty ,  but  i? 
i s  much redundant  o r  not  commonly used ,  o r  much mere worse  (2) the  output  i s  
semant ica l ly  wrong.  Such cases  ar i ses  where the  EFR express ion  ext racted  f rom 
the  source  language i s  not  we l l  de f ined  to  the  language express ion  in  quest ion .  
Th is  case  occurs  when the  sys tem des igner  commits misconcept ion  or  fa i l s  to  
cor rect ly  capture  the  phenomenon.  In  pr inc ip le ,  the  second case  i s  obv ious ly  
bad  but  no theory  has  ever  succeeded in  mede l l ing  a l l  phenomena in  natura l  
language.  So in  pract i ce ,  the  second case  i s  unavo idab le .  
The REFORM process  uses  heur i s t i c  ru les  to  ' re form'  those  CPS s t ructure  in to  
reasonab le  one .  Pat tern  d i rec ted  t rans format ion  ru les  a re  used .  Those ru les  
a re  app l ied  unt i l  no ru le  i s  app l i cab le  to  the  g iven  CPS s t ructure .  
EXPERIMENTS 
A prototype  o f  the  sys tem has  been const ructed  on a persona l  LISP sys tem 
(Vosh i ta  (1978) ) ,  which i s  deve loped on a min icomputer  w i th  L ISP -or iented  
s torage  subsystem.  As to  the  ana lys i s  modu le ,  s ix th  vers ion  i s  in  use ;  as  to  
the generation module, first version is in use. About two years since the last 
COLING conference at Tokyo were mainly devoted to the development. 
At the first stage of experiment, sample sentences were tested for several 
sentence patterns. At the second stage, our purpose was to extend the system 
for practical test; to translate existing texts even if introducing human 
assists to some (reasonable) extent. Four sample texts (totally 40 sentences) 
selected from existing technical reports and computer menuals. Each of the 
s ~le texts orresponds to one section or a short chapter in the material. All 
s ences of each sample texts have been successfully translated into Japanese. 
No pre-editing is done except for three minor modifications to the original 
text (e.g., "16- or 32- bit" => "16-bit or 32-bit"). Human assist is limited 
to resolving ambiguities in the analysis phase. One example is shown in Fig.2. 
CONCLUSION 
This paper proposes a new approach to machine translation based on a functional 
semantics of natural langauge. The effectiveness of this approach is tested 
by exper i~nts for short chapters and an abstract taken from existing technical 
reports and computer menuals. 
ACKNOWLEGDEMENT 
This research was partially supported by Grant-in-Aid for Scientific Research. 
The authors want to thank Mr. Kiyoshi Agusa and Mr. Shigeo Sugimoto for 
providing conveniences of editing and printing this material. 
REFERENCES 
\[I\] Cresswell, M.J., Logics and Languages, (Methuen, 1973). 
\[2\] Davis, R., Meta-rules: reasoning about control, AI 15 (1980), 179-222. 
\[3\] Dosbita~ S., Hiramatsu, K.j and Kakui, K.j Implementation of LISP system 
282 T. NISHIDA and S. DOSHITA 
using direct accessible bulk memory, in: Trans. of IECE of Japan, vol. 
J61-D, no. 5, (1978), (in Japanese). 
\[4\] Dowry, D., Wall, R., and Peters, JR., Introduction to Montague Semantics, 
(Reidel, 1981). 
\[5\] Montague, R., Proper treatment of quantification in ordinary English, in: 
Thomason (ed.), Formal Philosophy, (Yale University, 1974). 
\[6\] Nishida, T. and Doshita, S., Hierarchical meaning representation and 
analysis of natural language documents, in: Proc. COLING 80, (1980), 85-92. 
ETHERNET IS A BRANCHING BROmDCAST COMMUNICATION SYSTEM FOR CARRYING 
(1 )  D IB ITAL  DgTI:I PACKETS RMOH6 LOCALLY D ISTR IBUTED COMPUTIHG STAT IONS / 
ETHEI~NET~I~+y J~- -  y \ ]~r ,~ ~- ~F.~Nfg+:~ ~_~.~f J~x7 - - .2 ~ >" ~)\['.'~ 
THE PACKET TRANSPORT MECHANISM PROUIDED BY ETHERHET HAS BEEN USED TO 
(2) BUILD SYSTEMS WHICH CAN BE UIEWED AS EITHER LOCAL COMPUTER NETWORKS OR 
LOOSELY COUPLED MULTIPROCESSORS / 
ETHERNETF  J: 9"C~8 t~\ ]~"~,  F ~ i~?~K~q~#. , ; ,  F V - # 
~N ETHERNET'S SHARED COMMUNICATION FACILITY '~ ITS ETHER ~, IS R PASSIUE 
(3 )  BROADCRST MEDIUM WITH NO CENTRAL CONTROL / 
COORDINATION OF ~CCESS TO THE ETHER FOR PACKET BROADCASTS IS 
(4) DISTRIBUTED AMONG THE CONTENDING TRANSMITTING ~TRTIONS USING CONTROLLED 
STATISTICAL ARBITRATIOM / 
(5) SWITCHING OF PACKETS TO THEIR DESTINATIONS ON THE ETHER IS DISTRIBUTED 
AMONG THE RECEIUIHG STATIONS USING ~ACKET ADDRESS RECOGNITION / 
_~ETHEIR(O_E<O Q~. (O\ ] *~ ,~ F ~)~.~??\]<~ 7  ~ F ~ I ~ ~  ~_~ 
DESIGN PRINCIPLES AND IMPLEMENTATION ARE DESCRIBED BASED ON EXPERIENCE 
(6) WITH AN OPERATING ETHERNET OF IOO NODES ALONG R KILOMETER OF COAXIAL 
CABLE / 
A MODEL FOR ESTIMATING PERFORMANCE UNDER HEAUY LOADS AND A PACKET 
(7) PROTOCOL FOR ERROR-CONTROLLED COMMUHICRTIOHS ARE INCLUDED FOR 
COMPLETENESS / 
Fig.2. Translation of a sample text: Metealfe) R.M. and Boggs, D.R.) 
Ethernet: distributed packet switching for local computer networks, 
CSL-75-7, Xerox Palo Alto Res. Centr., (1980}, (ABSTRACT). 
Online print out of the system is shown. --- separates sentences and 
separates paragraphs. Underlined are bad (-) or wrong (=) results, 
