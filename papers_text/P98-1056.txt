Syntactic and Semantic Transfer with F-Structures* 
Michae l  Dorna* ,  Anet te  F rank  t, J ose f  van  Genab i th*  and  Mar t in  C. Emele*  
*IMS, Universit~it Stuttgart tXerox Research Centre Europe *Dublin City University 
Azenbergstr. 12 6, chemin de Maupertuis Computer Applications 
D-70174 Stuttgart F-38240 Meylan Dublin 9, Ireland 
(dorna, emele}@ims, uni-stuttgart, de Anette. Frank@xrce. xerox, com j osef%compapp, dcu. ie 
Abst ract  
We present wo approaches for syntactic and se- 
mantic transfer based on LFG f-structures and 
compare the results with existing co-description 
and restriction operator based approaches, fo- 
cusing on aspects of ambiguity preserving trans- 
fer, complex cases of syntactic structural mis- 
matches as well as on modularity and reusabil- 
ity. The two transfer approaches are interfaced 
with an existing, implemented transfer com- 
ponent (Verbmobi1), by translating f-structures 
into a term language, and by interfacing f- 
structure representations with an existing se- 
mantic based transfer approach, respectively. 
1 In t roduct ion  
Target and source levels of representation i
transfer-based machine translation (MT) are 
subject o often competing demands: on the one 
hand, they need to abstract away from partic- 
ulars of language specific surface realization to 
ensure that transfer is as simple and straightfor- 
ward as possible. On the other hand, they need 
to encode sufficiently fine-grained information to 
steer transfer. Furthermore, target and source 
representations should be linguistically well es- 
tablished and motivated levels of representa- 
tion. Finally, from a computational perspective 
they need to be sensible representations forboth 
parsing and generation. LFG f-structures are 
abstract, "high-level" syntactic representations 
which go some way towards meeting these of- 
ten irreconcilable r quirements. 
" We would like to thank H. Kamp, M. Schiehlen and 
the anonymous reviewers for helpful comments on ear- 
lier versions of this article. Part of this work was funded 
by the German Federal Ministry of Education, Science, 
Research and Technology (BMBF) in the framework of 
the Verbmobil project under grant 01 IV 701 N3. 
Correspondence-based transfer on f-structures 
has been proposed in (Kaplan et al, 1989). 
A closer look at translation problems involv- 
ing structural mismatches between languages - 
in particular head switching phenomena (Sadler 
and Thompson, 1991) - led to the contention 
that transfer is facilitated at the level of seman- 
tic representation, where structural differences 
between languages are often neutralized. Struc- 
tural misalignment is treated in semantics con- 
struction involving a restriction operator (Ka- 
plan and Wedekind, 1993) where f-structures are 
related to (possibly sets of) disambiguated se- 
mantic representations. 
Given the high potential of semantic ambigui- 
ties, the advantage of defining transfer on se- 
mantic representations could well be counter- 
balanced by the overhead generated by multi- 
ple disambiguated structures as input to trans- 
fer. This and the observation that many seman- 
tic (and syntactic) ambiguities can be preserved 
when translating into a target language that is 
ambiguous in similar ways, sheds light on the 
issue of the properties of representations for the 
task of defining transfer. 
In principle, the problem of semantic ambi- 
guity in transfer can be tackled in a number 
of ways. Packed ambiguity representation tech- 
niques (Maxwell III and Kaplan, 1993) could be 
integrated with the approach in (Kaplan and 
Wedekind, 1993). In the linear logic based se- 
mantics of (Dalrymple t al., 1996) scope am- 
biguities are accounted for in terms of alterna- 
tive derivations of meaning assignments from 
a set of meaning constructors. Ambiguity pre- 
serving semantic transfer can be devised on 
sets of meaning constructors rather than dis- 
ambiguated meanings (Genabith et al, 1998). 
Transfer on packed representations is considered 
341 
in (Emele and Dorna, 1998). 
In the present paper we consider alternative ap- 
proaches to transfer on underspecified - syntac- 
tic or semantic - representations, focusing on is- 
sues of modularity, reusability and practicality, 
interfacing existing implemented approaches in
a flexible way. At the same time, the propos- 
als readdress the issue of what is an appropriate 
level of representation fortranslation, in view of 
the known problems engendered by structural 
mismatches and semantic ambiguity. 
We first show how the underlying machinery 
of the semantic-based transfer approach de- 
veloped in Dorna and Emele (1996b) can be 
ported to syntactic f-structure representations. 
Second, we show how the underspecified seman- 
tic interpretation approach developed in Gen- 
abith and Crouch (1997) can be exploited to in- 
terface f-structure representations directly with 
the named semantic-based transfer approach. 
Third, we compare the two approaches with 
each other, and with co-description and restric- 
tion operator based approaches. 
2 Syntact i c  T rans fer  
This section presents a simple bidirectional 
translation between LFG f-structures and term 
representations which serve as input to and 
output of a transfer component developed 
within the Verbmobil project (Dorna and Emele, 
1996a). The term representation is inspired by 
earlier work (Kay et al, 1994; Caspari and 
Schmid, 1994) which uses terms as a quasi- 
semantic representation for transfer and gener- 
ation. 
The translation between f-structures and terms 
is based on the correspondence between directed 
graphs representing f-structures and the func- 
tional interpretation of these graphs (cf. (John- 
son, 1991)). Given an arc labeled f which con- 
nects two nodes nl and n2 in a graph, the same 
can be expressed by a function f (n l )  = n2. An 
f-structure is the set of such feature equations 
describing the associated graph. Instead of fea- 
ture equations f (n l )  -- n2 we use the relational 
notation f (n l ,  n2). 
Using this idea f-structures can be converted 
into sets of terms and vice versa} F-structure 
1For motivation why we prefer term representations 
PRED features and their "semantic form" values 
are given special treatment. Instead of introduc- 
ing PRED terms we build unary relations with 
the semantic form predicate name as functor 
(see Example (1)). The resulting representation 
is similar to a Neo-Davidsonian style event se- 
mantics (Parsons, 1991) but uses syntactic roles. 
For a formalization of the f-structure-term cor- 
respondence s e Appendix A. 
l (I) a. /PRED ~o~.~,,(~SUBJ) /m 
LADJN { \[PRED GERNE\]\[~\]} J 
b. Hans kocht gerne 
C. { kochen(nl), 
SUBJ (nl ,n2), Hans (n2), 
ADJN(nl,n3), gerne(n3) } 
Consider the simple head switching example in- 
volving the German attitude adverb gerne and 
the English verb like (see (lb) and (3b)). (la) 
is the LFG f-structure for the German sen- 
tence (lb). 2 (lc) is the set of terms representing 
(la). 
Transfer works on source language (SL) and tar- 
get language (TL) sets of terms representing 
predicates, roles, etc. like the ones shown in (lc). 
The mapping is encoded in transfer ules as in 
(2). For a rule to be applied, the set on the SL 
side must be a matching subset of the SL input 
set. If this is the case, we remove the covering 
set from the input and add the set on the other 
side of the rule to the TL output. Transfer is 
complete, if the SL set is empty. 
(2) a. "\[ kochen(E) \]" <-> { cook(E) }. 
b. (SUBJ(E,X) } <-> { SUBJ(E,X) \]-. 
c. { Hans(X) } <-> { Hans(X) \]'. 
d. (ADJN(E,X) ,gerne(X) \]- # "\[ SUBJ(E,Y) } 
<-> { Iike(X),XCOMP(X,E),SUBJ(X,Y) }. 
The transfer operator <-> is bidirectional. Up- 
per case letters in argument positions are logical 
variables which will be bound to nodes at run- 
time. Because of the variable sharings on both 
sides of a rule we work on the same nodes of a 
graph. The result is a graph rewriting process. 
over feature structures for transfer, see (Emele and 
Dorna, 1998). 
2For presentational purposes we leave out morpho- 
syntactic information in f-structures here and in the fol- 
lowing examples. 
342 
The head switching rule (2d) shows two compo- 
nents on its lefthand side: the part to the right 
of # is a test on a copy of the original input. The 
test binds the variable Y at runtime when ap- 
plying the rule from left to right. In the reverse 
direction (and in general), TL tests are ignored. 
Applying the rule set in (2) to (lc), we get 
(3c). We now use the correspondence b tween f-
structures and term representations to construct 
the TL f-structure. The result is (3a) represent- 
ing the English sentence (3b). 
"suBJ \[PRED \] 
PRED LIKE(~ SUB J, I" XCOMP) / -  
(3) a. \[SUBJ \[PRED HANS\]I~I\]~/131 
XCOMe \[PRED ooo ( SUB.> jwj 
b. Hans likes cooking 
C. ( l i ke (n3)  
SUBJ(n3,n2), Hans(n2), 
XCOMP(n3,nl), cook(nl), 
SUBJ(nl,n2) } 
3 Semant ic  T rans fer  
Semantic-based transfer as detailed in (Dorna 
and Emele, 1996a; Dorna and Emele, 1996b) 
is based on rewriting underspecified seman- 
tic representations. The representations (Bos et 
al., 1996) are UDRS variants (Reyle, 1993). 
F-structures are abstract syntactic representa- 
tions. They do, however, encode basic predicate- 
argument relations, and this is essentially se- 
mantic information. It turns out that there 
are important structural similarities between 
f-structures and UDRSs: f-structures can be 
"read" as UDRSs and hence be assigned an 
underspecified truth-conditional interpretation 
(Genabith and Crouch, 1997). 3 Appendix B 
gives a relational formulation of the corre- 
spondence between f-structures and UDRSs. 
The UDRS representations are processed by 
semantic-based transfer. The resulting system is 
bi-directional. Consider again the simple head 
switching case discussed in (1) and (3) above. 
(4) shows the corresponding UDRSs. 
The structural mismatch between the two f- 
structures has disappeared on the level of UDRS 
representations and transfer is facilitated. 4 
3A similar corespondence between f-structures and 
QLFs (Alshawi and Crouch, 1992) has been shown in 
(Genabith and Crouch, 1996). 
4In the implementation, a Neo-Davidsonian style en- 
(4) 
z, "? 
Hans(x~\]) \] 
? ? 
l~\] : I gerne(l~l ) l--li-51 : I like(x~\], l~1) I 
7 
l\[i\]: I k?chen(x~\]) I~t\[ i : l  : \[ c??k(x~) l 
Hans kocht gerne Hans likes cooking 
4 Embedded Head Swi tch ing  and 
Mul t ip le  Ad juncts  
How do the two approaches fare with embed- 
ded head switching and multiple adjuncts? Due 
to space limits we will not discuss straightfor- 
ward cases where ambiguites represented in un- 
derspecified representations are carried over into 
the target language. Examples of this type in- 
volve quantificational nd plural NPs, negation, 
or adjunct sets. Instead, we concentrate on com- 
plex cases where a source language ambiguity 
needs to be resolved in target language. 
4.1 Embedded Head-Swi tch ing  
The syntactic transfer rules (2) are supple- 
mented by (5). The complex rule for gerne in 
(5) overrides 5 (2d) and the COMP rule in (5). For 
each additional level of embedding triggered by 
head switching adjuncts a special rule is needed. 
(5) { vermuten(E) } <-> { suspect(E) }. 
Ede(X) } <-> (Ede(X) }. 
? \[ COMP(E,X) } <-> { COMP(E,X) }. 
{ gerne(X),ADJN(E,X),COMP(E1,E) } # 
(SUBJ(E,Y) } <-> 
{ like(X),XCOMP(X,E),SUBJ(X,Y),COMP(EI,X) }. 
By contrast, on the level of UDRSs head switch- 
ing has disappeared and transfer is facilitated. 
Figure 1 shows the transfer correspondence b - 
tween terms and UDRSs. 
coding of predicate argument relations is used. The sub- 
ject of the target l ike relation is determined by the fol- 
lowing transfer ule: 
{ L:gerne(L1) } # { L2 ~ L1, L2:agent(A) } 
<-> { L:like(A,L1) }. 
_~ is the transitive closure over subordination con- 
straints <. Here and in the following we do not give set 
representations of UDRSs and transfer ules. Instead, we 
provide a graphical representations of standard UDRSs 
to better illustrate the structural mismatches discussion. 
5For the treatment of overriding see, e.g., the speci- 
ficity criterion in (Dorna and Emele, 1996a). 
343 
I zN, z? I IT : Ede(x~\]) 
Hans(x~\]) 
? 
tin: \[ "e"mut~n(xl~' lm~ ) l 
IN: \[ ge'~e(IN,) I
IN: \[ k?ehen(~) I
x\[\]\], z [\] 
IT : Ede(xl\] 1) 
Hans(xr4 \]) 
l\[\]: I S'~peet(~r~\] ' ImP) I 
lr~ : I l~ke(:':~n, l~, ) I 
lr~: I e??k(xmYl 
{ vermuten(nl), 
SUBJ(nl,n2), Ede(n2), 
COMP(nl,n3), kochen(n3), 
SUBJ(n3,n4), Hans(n4), 
ADJN(n3,n5), gerne(n5) } 
"SUBJ 
PRED 
COMP 
\[PRED EoE\]r~ } 
V~,aMUTEN('~ SUB J, ~" COMP} 
"suBJ \[,RED .~\]\[\] \  \[\] 
PRED KOCHE~(~" SUBJ> /N 
{ suspect (nl), 
SUBJ(nl,n2), Ede(n2), 
C0MP (nl,n5), like (n5), 
SUBJ(n5,n4), Hans(n4), 
XCOMP(n5,n3), cook(n3), 
SUBJ (n3,n4) } 
sms~ \[eR~,D ~D~\]r~ 
PRED SUSPECT(t SUB J, J" COMP> 
/PRED L,Kt:<~ SUBJ,~ XCOMP) |r~ COMP 'Lxco , rsu,. lrd 
\[PRED COOK(\]" SUBJ)J~J 
\[\] 
Ede vermutet daft Hans gerne kocht Ede suspects that Hans likes cooking 
Figure 1: Embedded Head Switching Example 
4.2 Mult ip le  Ad juncts  
Consider the sentences in (6). 
(6) a. Oft kocht Hans gerne 
b. Hans kocht gerne oft 
c. Often Hans likes cooking 
d. Hans likes cooking often 
(6a) is ambiguous between (6c) and (6d), (6b) 
can only mean (6d). (6c) and (6d) are not am- 
biguous. (6a) is represented by f-structure (7a). 
"SUBJ \[PRED HANS\]~\] }\] 
(7) a. PRED }<OCHEN<~" SUB J> 
\[PRED OFT\]\[~\] \[\] 
ADJN \[PRED OE.NE \] \['4\] 
b. kochen(nl), 
SUBJ(nl,n2), Han,.(n2), 
ADJN(nl,n3), oft(n3), 
ADJN(nl,n4), gerne(n4) } 
lr : Hans(x~) 
C. l r~:14t(% ) l l\[\]:l ge~ne(lr4n,) l 
lm: I koehen(x~) I
The corresponding term representation is (7b) 
and, in the absence of further constraints, we get 
a flat scopally underspecified UDRS (7c). Let 
(6a) be our translation candidate. For syntactic 
transfer, adding rules (9) to the ones introduced 
in (2) leads to (8a). 
(8) a. { like(n4), 
SUBJ(n4,n2), Hans(n2), 
XC0MP(n4,nl), cook(nl), 
SUBJ (nl ,n2), 
ADJN(nl,n3), often(n3) } 
\[suBJ \[PREp H~,Ns\]\[\] 
/PRED ~'~(1" SUm,T XCOMP) 
b. / rs~.~ \[\]r~ \] 
L LADJN {\[paED OFT~.\]Sl)J 
IT :J x\[~\] Hans(x~\]) I 
iN: I like(~, IN,) I 
c. 
l~: i oZten(l~,) I 
zm: I cook(~) I 
\[\] 
344 
(9) (ADJN(E,X) } <-> { ADJN(E,X) \].. 
{ o f t (E )  \]- <-> { often(E) }. 
(8a) corresponds to only one of the En- 
glish translations, namely (6d), of (6a). As 
in the correspondence-based approach (Ha- 
plan et al, 1989), often can only be assigned 
wide scope over like if the transfer formal- 
ism allows reference to and rewriting of par- 
tial nodes. In the present case the two terms 
kochen(nl). SUBJ(nl,n2) could then be rewrit- 
ten as the complement of like, XCOMP(n4,nl), 
whereas  ADJN(nl,n3) is rewritten as ADJN(n4,n3) 
or hDJN(nl ,n3).6 
The target f-structure for English must resolve 
the relative scope between like and often ((8b) 
and (10)). 
(10) 
rsuB; \[FRED H,,N \]m \] 
PRED LIKE(~" SUBS, 1" XCOMP) / 
r 
LPRED cooK(T SUBJ)J / 
.ADJN {\[PRED OFTEN\]\[~\]} J 
Semantic transfer on the source UDRS (7c) pre- 
serves the underspecification a d leads to (11). 
l-r :1 x\[\] Hans(x~\]) I 
(11) lr.5 \] :1 o#en(l~) I lr~ :1 like(x\[\],l~\]l) I 
I c??k(xm) I 
However, (11) is not in the direct f-structure - 
UDRS correspondence with (10) and (Sb). In- 
stead, the correspondences on the enumerations 
of the scoping possibilities of (11) yield (10) and 
(8b) as required. 
By contrast, the reading of (6b) is restricted by 
the surface order in which the two adverbials 
occur. On the semantic level this is reflected 
in terms of corresponding subordination con- 
straints (12). The target UDRS corresponds to 
f-structure (Sb). 
OAs an alternative, we can get both readings if 
we define special rules for adverbials in head switch- 
ing contexts, giving them wide or narrow scope rel- 
ative to the head switching adverbial. A narrow 
scope rule is already given in (9). A wide scope 
rule would be {hDJN(E,X)} # {HS(E1), XC0~IP(E1,E)} 
~-} {ADJN(EI,X)} where HS(E1) is a "marker" on the 
switched adverbial's node El. 
(12) 
lT :I x\[\] x\[\] Hons( )l lT:lHans(x~) I 
! 
? 4' 
l\[~: I gerne(l~ 1 ) I l\[~: I like(x~, 1~1) I 
7 
l~\] : I ?#(1\[\]1) I l~\] : I o ften(l~\],)'l 
In LFG linearization effects can be captured in 
terms of f-precedence onstraints 41 as in (13). 
Semantic subordination and f-precedence con- 
straints can then be linked as in (14). 
(14) \[~ -<$ \[\] ~ ~ l~ _< l\[il 1
With (14) the head switching - multiple adjunct 
interaction is correctly resolved in semantic- 
based transfer. Similarly, in syntactic transfer, 
the precedence constraint (13) can be used to 
steer translation to f-structure (8b). 
5 D iscuss ion  
We have presented two alternative architectures 
for transfer in LFG. In both cases, transfer is 
driven by the transfer module developed and 
implemented by Dorna and Emele (1996a). In 
the case of syntactic transfer, transfer is de- 
fined on term representations of f-structures. In 
the case of semantic transfer, transfer is de- 
fined on UDRS translations of f-structures. F- 
structure, term and UDRS correspondences are 
defined in the Appendix. The transfer ules are 
bi-directional, as are the f-structure-term and 
f-structure-UDRS correspondences. 
Co-description based approaches (Kaplan and 
Wedekind, 1993) require annotation of source 
and target lexica and grammars. By contrast, 
both approaches presented here support mod- 
ular grammar development: hey don't involve 
additional coding in the grammar specifications. 
An important issue, noted above, is the problem 
of ambiguities and ambiguity preserving trans- 
fer. F-structures and UDRSs are underspecified 
syntactic and semantic representations, respec- 
tively. Both support ambiguity preserving trans- 
fer to differing degrees (NP scope, operators, 
adjuncts). F-structure based syntactic represen- 
345 
tations may come up against structural mis- 
matches in transfer. The original co-description 
based approach in (Kaplan et al, 1989) faced 
problems when it came to examples involving 
embedded head-switching and multiple adjuncts 
(Sadler and Thompson, 1991), which led to the 
introduction of a restriction operator, to en- 
able transfer on partial f-structures or semantic 
structures (Kaplan and Wedekind, 1993). One 
might suppose that the need to refer to partial 
structures i an artifact of the correspondence- 
based approach, which doesn't allow the map- 
ping from a single node of the source f-structure 
to distinct nodes in the target f-structure with- 
out violation of the functional property of the 
correspondence. On closer inspection, though, 
the rewriting approach to syntactic f-structure- 
term translations presented above suffers from 
the very same problems that were met by the 
correspondence-based approach in (Kaplan et 
al., 1989). 
By contrast, transfer on the semantic UDRS 
representations does not suffer from such prob- 
lems. Head switching is dealt with in the con- 
struction of semantic representations. Under- 
specified semantic representations i  the form of 
UDRSs (or related formalisms) offer the follow- 
ing advantanges for transfer: they abstract away 
from cross-language configurational variation to 
facilitate transfer. Unlike the original restric- 
tion operator approach (Kaplan and Wedekind, 
1993) whenever possible they avoid the detour 
of multiple transfer on disambiguated represen- 
tations. At the same time they provide a flexible 
encoding of information essential to steer trans- 
fer. 
Of course, semantics does not come for free nor 
does it always blend as seamlessly with syntac- 
tic representations a  one would hope for. Se- 
mantics has to be encoded in the grammar or 
defined in terms of correspondences as below. 
System design has to address the question where 
to do what at which cost. Semantic representa- 
tions pay off when they are useful for a num- 
ber of tasks: evaluation (as against a database), 
inference and transfer. Even more so when ex- 
isting resources can be interfaced qua semantic 
representations: in our case the tested transfer 
methodology and resources developed in (Dorna 
and Emele, 1996a). 
Re ferences  
H. Alshawi and R. Crouch. 1992. Monotonic seman- 
tic interpretation. I  Proceedings of A CL, pages 32- 
39, Newark, Delaware. 
J. Bos, B. Gamb~ick, C. Lieske, Y. Mori, M. Pinkal, 
and K. Worm. 1996. Compositional Semantics in 
Verbmobil. Coling'96, pages 131-136, Copenhagen, 
Denmark. 
R. Caspari and L. Schmid. 1994. Parsing und 
Generierung in TrUG. Verbmobil Report 40, 
Siemens AG, December. 
M: Dalrymple, J. Lamping, F.C.N Pereira, and 
V. Saraswat. 1996. A deductive account of quan- 
tification in lfg. In M. Kanazawa, C. Pinon, and 
H. de Swart, editors, Quantifiers, Deduction and 
Context, pages 33-57. CSLI Publications, No. 57. 
M. Dorna and M. C. Emele. 1996a. Efficient Imple- 
mentation of a Semantic-based Transfer Approach. 
ECAI'96, Budapest, Hungary. 
M. Dorna and M. C. Emele. 1996b. Semantic-based 
Transfer. Coling'96, Copenhagen, Denmark. 
M. C. Emele and M. Dorna. 1998. Ambiguity 
Preserving Transfer Using Packed Representations. 
Coling'98, Montreal, Canada. 
J. van Genabith and R. Crouch. 1996. Direct and 
underspecified interpretations of lfg f-structures. In
COLING 96, Copenhagen, Denmark, pages 262-267. 
J. van Genabith and R. Crouch. 1997. On interpret- 
ing f-structures a udrss. In ACL-EACL-97, Madrid, 
Spain, pages 402-409. 
J. van Genabith, A. Frank, and M. Dorna. 1998. 
Transfer Constructors. LFG Conference '98, Bris- 
bane, Australia. 
M. Johnson. 1991. Features and Formulae. Compu- 
tational Linguistics, 17(2):131-151. 
R. M. Kaplan and J. Wedekind. 1993. Restriction 
and Correspondance-based Translation. EACL'93, 
pages 193-202, Utrecht, The Netherlands. 
R. Kaplan, K. Netter, J. Wedekind, and A. Zaenen. 
1989. Translation by Structural Correspondences. 
EACL'8g, pages 272-281, Manchester, UK. 
M. Kay, M. Gawron, and P. Norwig. 1994. Verbmo- 
bil: a Translation System for Face-to-Face Dialogs. 
Number 33 in CSLI Lecture Notes. University of 
Chicago Press. 
John T. Maxwell III and Ronald M. Kaplan. 1993. 
The interface between phrasal and functional con- 
straints. Computational Linguistics, 19(4):571-590. 
T. Parsons. 1991. Events in the Semantics of En- 
glish. MIT Press, Cambridge, Mass. 
U. Reyle. 1993. Dealing with Ambiguities by Un- 
derspecification: Construction, Representation a d 
Deduction. Jounal of Semantics, 10(2):123-179. 
L. Sadler and H. S. Thompson. 1991. Struc- 
tural Non-correspondence i  Translation. EACL'91, 
pages 293-298, Berlin, Germany. 
346 
A F -St ructures  and  Terms 
A 2-place relation between f-structures and sets of 
terms is defined below. ~\] are references to feature 
structures which are mapped into node constants 
ni used in terms. F are features (grammatical func- 
tions), and ~ are f-structures. Predicates occur as 
YI(/ if they do not subcategorize for an argument, 
else as II(T Fx , . . . ,  1" Fn). 
1. (simple predicates) 
(\[PRED l ' I<) \ ]~, - (n(n i )})  
2. (complex predicates) 
( / F1 \[PRED ~x\[i~\] n<t rl,..., t r,)\] \[\], 
\[\] 
{ II (nio), Fx (nio, ni 1 ) . . . . .  Pn (n/o, nin) } 
U T1 U . . .  U Tn) 
? ,I. '.. (~a\[~'\[\],  T~)  A . . .  A (~n\[ \ ] ,  T , )  
3. (set values) 
< \[ADJN {dr 1\[~\],  . . . , O~m~' \ ]}  \ ] \ [~  ,
{ADJN(nio,nil) ..... ADJN(nio,nin) } U 
TI U...UTn) 
". ~" (0tl\[~, T1) A . . .  A (an\ [ \ ] ,  Tn) 
B F-St ructures  and  UDRSs  
In (Genabith and Crouch, 1997) the correspondence 
between f-structures and UDRSs was defined in 
terms of translation functions ~- : and v -1 between 
subsets of the f-structure and UDRS formalisms. Be- 
low we give a relational formulation of the corre- 
spondence ~ with a treatment of simple (scopal) 
adjuncts: 7 
rPRED II(l" r l , . . . , l "  rn) \] 
/r, ~,,\[\] / 
LADJN {a,\[J-1\], ? ? ?, amid'I} J 
{l\[~ : n(T~\],..., ~ \ ] ) ,  lm~ _< l\[~ } u s 
u AlU. . .uAmuF~ U...UFn ?=:::> 
n<t r~q,...,t r\[\]> ~ {n(~3,...,~3)} 
n m 
i=1 i=1 
"SPEC 
IM : tin1Qx\[~l~, ~\[~ : x M, 
{ l~\]l : II (x\[i\]),IM < l'r,l\[\]~. <_ l\[~ } 
VIn LFG adjuncts do not subcategorize the material 
they modify nor are they subcategorized by that mate- 
rial. 
\[PRED\[SPEC \] \[\] 3. All() ~ ~> 
{ {lr~ : ~M,t\[~ : n(~03), 
< tv,l~\]~ < lm j 
4. \[PRED II014 
{lt : ~\[i\]' lT: H(~\[i\]), t\[\]. _< iT} 
rPRED If(l" FI,...,~" Fn)\] 
r l  ~1 \ [ \ ]  J I_AmN r~ 
r l  ~1 \ [ \ ]  
ADJN 
6. n<t r ,~ , . . . ,  t r .~)  ~ 
I 
{n(r~, . . . ,  r~\])} u s 
holds iff there is a lexically specified map be- 
tween subcategorizable grammatical functions 
in LFG semantic form and argument positions 
in the corresponding UDRT predicate, e.g.: 
{like( x\[-~, lira\] ' )} 
$ $ 
LIKE( 1"SUBJ'\], I"XCOMP~\] ) 
\[\] 
~. \[PREO n<>\]m <~o 
{tin: n(lm,),z $ <_ t\[\],,t\[\]~ < l\[~1} 
F-structures and UDRSs are in the ,~ relation iff 
their components are ,~> related (clause 1). ,~ re- 
lates f-structure tags and UDRS labels. Clausal tags 
\[\]\] introduce a local top \[i\] T and a local bottom \ [~.  
The global top is T. For readability, tops and bot- 
toms are suppressed in the example translations. 7/
refers to discourse referents or labels. S in clause 1 
is a set of subordination constraints induced lexi- 
cally by embedding verbs (clause 6). Clauses 2 - 4 
relate quantificational, indefinite and proper name 
f-structure and UDRS components, clause 5 embed- 
ded clauses. Clause 7 translates imple adjuncts. 
347 
