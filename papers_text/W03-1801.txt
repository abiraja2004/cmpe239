Complex structuring of term variants for Question Answering
James Dowdall, Fabio Rinaldi
Institute of Computational Linguistics
University of Zurich
fdowdall,rinaldig@cl.unizh.ch
Fidelia Ibekwe-SanJuan
ERSICO
University of Lyon3
ibekwe@univ-lyon3.fr
Eric SanJuan
LITA EA3097
University of Metz
eric.sanjuan@iut.univ-metz.fr
Abstract
Question Answering provides a method of
locating precise answers to specic ques-
tions but in technical domains the amount
of Multi-Word Terms complicates this task.
This paper outlines the Question Answer-
ing task in such a domain and explores two
ways of detecting relations between Multi-
Word Terms. The rst targets specic se-
mantic relations, the second uses a cluster-
ing algorithm, but they are both based on
the idea of syntactic variation. The pa-
per demonstrates how the combination of
these two methodologies provide sophisti-
cated access to technical domains.
1 Introduction
Nominal compounds are inherently ambiguous on
both the syntactic and semantic fronts. Whilst the
number of syntactic possibilities increase exponen-
tially with word length (Isabelle, 1984), semantic in-
terpretation is at best contextually dependent and in
the worst cases determined by extra-linguistic (prag-
matic) factors.
1
Technical documentation is an at-
tractive domain in which to explore nominal com-
pounds for two reasons. First, they present an abun-
dance of compounds, secondly they restrict semantic
interpretation by excluding compounds with opaque
(extra-linguistic) interpretation. The result is multi-
word terms (MWT) which are both compositional,
their formation is a function of their constituent ele-
ments (Kageura, 2002) and endocentric, the com-
pound is a hyponym of its head (Barker and Sz-
pakowicz, 1998).
1
For example, \apple juice place" (Levi, 1979)
This paper addresses the issue of structuring the
Multi-Word Terms (MWTs) for Question Answer-
ing (QA) in technical domains. The central prob-
lem is that unfamiliarity with MWTs that character-
ize such domains creates an eective barrier against
users nding answers.
Section 2 outlines the domain of focus, the
MWT extraction method and examples character-
istic MWTs. Section 3 explores the QA task in tech-
nical domains by describing the ExtrAns system,
and how it structures the MWTs for the task. Sec-
tion 4 presents TermWatch which identies syntac-
tic variants and uses a hierarchical clustering algo-
rithm to build classes of term variants. The common
ground between these two approaches is in the use
of syntactic variants to structure the terminology as
a whole. Section 5 explores how the resulting struc-
tures can be used in the QA task. After surveying
some related work in Section 6 the paper ends by
drawing conclusions on the approaches presented.
2 MWT Extraction
Before the MWTs can be structured, the terms
need to be extracted from a corpus of texts. This
stage was performed using the INTEX linguistic
parser (Silberztein, 1993). INTEX is a nite state
transducer parser. The corpus used in the present
study concerns scientic publications on the bread-
making process. It was made available by the French
Institute of Scientic Information (INIST). Without
going into much detail regarding the candidate term
extraction rules, the approach adopted can be sum-
marized as selective NLP followed by shallow pars-
ing, much in the same way as (Evans et al, 1992).
We dened morpho-syntactic properties of complex
nominal syntagms written as nite state automata,
implemented in the INTEX linguistic toolbox. IN-
TEX is equipped with linguistic resources to perform
 Knowledge 
Base
Document
Linguistic
Analysis
MWT
processing
(a)
Oine
 Knowledge 
Base
ANSWERS
Query
Document
Linguistic
Analysis
MWT
Recognition
(b)
Online
Figure 1: Schematic: ExtrAns Processing Stages
an overall morpho-syntactic analysis on the texts.
The NP automata are applied in an iterative way
on the corpus until we reach a satisfactory medium-
grained noun phrase splitting. Our concern was to
extract more or less complex terms as they appeared
in the text corpus and not atomic NP extraction.
The rationale was to conserve the associations be-
tween terms as the scientists (authors) made them
during their write-up. Examples of candidate terms
extracted at this stage are: \hydrophilic powdered
lecithin, traditional sour dough starter cultures, de-
velopment of traditional bread avour". More details
on the NP splitting rules can be found in (Ibekwe-
SanJuan, 2001). Manual validation by a domain ex-
pert produced 3651 MWTs.
3 ExtrAns
Question Answering systems attempt to extract
small snippets of text in response to a natural lan-
guage query. Briey, ExtrAns achieves this in two
distinct stages:
O-line the entire document collection is sub-
jected to linguistic analysis, which produces a full
syntactic parse for each sentence. After some inter-
mediate steps, such as anaphora resolution and dis-
ambiguation, the syntactic parse is translated into a
semantic representation designed to capture the core
meaning of the sentences. These representations are
stored in a Knowledge Base.
On-line user queries are subjected to the same
linguistic analysis. The resulting semantic rep-
resentation of the query is `matched' against the
knowledge base. These `matches' can be identied
in their original document location, so users can
contextualize these potential answers. Interest in
the specics of this process should be directed
toward (Rinaldi et al, 2002) (Dowdall et al, 2002).
In dealing with technical domains we have iden-
tied two major obstacles for a QA system which
can be summarize as the Parsing Problem and the
Paraphrase Problem.
The Parsing Problem consists in the increased
di?culty of parsing text in a technical domain due to
domain-specic sublanguage. Various types of MWT
characterize these domains, in particular referring
to specic concepts like tools, parts or procedures.
These multi word expressions might include lexical
items which are either unknown to a generic lexicon
(e.g. \acetic acid") or have a specic meaning unique
to this domain. Abbreviations and acronyms are an-
other common source of incosistencies. In such cases
the parser might either fail to identify the compound
as a phrase and consequently fail to parse the sen-
tence including such items. Alternatively the parser
might attempt to `guess' their lexical category (in
the set of open class categories), leading to an ex-
ponential growth of the number of possible syntactic
parses. Not only the internal structure of the com-
pound can be multi-way ambiguous, even the bound-
aries of the compounds might be di?cult to detect
and the parsers might try odd combinations of the
tokens belonging to the compounds with neighbour-
ing tokens.
The Paraphrase Problem resides in the imper-
fect knowledge of users of the systems, who cannot be
expected to be completely familiar with the domain
terminology. Even experienced users, who know the
domain very well, might not remember the exact
wording of a MWT and use a paraphrase to refer to
the underlying domain concept. Besides even in the
documents themselves, unless the editors have been
forced to use some strict terminology control system,
various paraphrases of the same compound will ap-
pear, and they need to be identied as co-referent.
However, it is not enough to identify all paraphrases
within the manual, novel paraphases might be cre-
ated by the users each time they query the system.
The task of QA in technical domains is to identify:
`what' needs to be known about `which' multi-word
term. Then to extract sentences that provide the
answer. How to nd the `what' is dependant on the
approach. ExtrAns uses linguistic processing which
results in a semantic representation. However, in
the TREC domain of newswire, considerable success
has been achieved by statistical measures and even
pattern matching. Here, these distinctions are unim-
portant.
What is of concern is in how to meet the two com-
peting search needs of answering specic questions
and navigating through a domain of specialized, un-
familiar MWTs.
Designed specically for technical domains, Ex-
trAns involves strategies for exploiting the abundant
MWTs that these domains hold. The approach uti-
lizes WordNet to gather the MWTs into synonymy
sets based on variation rules. The terminology is also
related through an hyponymy hierarchy.
Synonymy between MWTs is either strict, or
detected through WordNet. Strictly synonymous
MWTs coreference a single object/concept. This
link is a result of morpho-syntactic variation taking
\chemical improver action" and producing the anit-
symmetrical term \action of chemical improver".
The process simply involves inverting the Head and
introducing modiers with a preposition.
WordNet synonymy, on the other hand, comes in
three types of symmetrical variation depending on
which tokens from two MWTs can be found in the
same synset:
 WordNet Head substitution, (\bread ingestion"
and \bread consumption")
 WordNet modier substitution (\quantity of
yeast" and \amount of yeast")
 WordNet Modier and head substitution (\key
ingredient" and \functional component").
However, synonymy identied through WordNet is
dened by WordNet. As a general lexical database
not designed for specilized domains it represents
common synonymy between words. The resulting
links created between multi-word terms translates
into concepts non-specialists cannot easily distin-
guish. These links produced 1277 synsets the vast
majority of which contain two MWTs.
Hyponymy The MWTs are organized into a lex-
ical hyponymy (is a) hierarchy that exploits their
endocentricity (Barker and Szpakowicz, 1998). The
hyponymy relation is identied through two types of
rules, Left Expansions which further modies \dough
stickiness" to be \intense" producing \intense dough
stickiness". Here the original head-modier rela-
tions of the hypernym are unaltered in the hyponym.
However, with Insertion rules these relations are
stickiness
dough
stickiness
surface
stickiness
dough
increase
stickiness
wheat
dough
surface
stickiness
measure
surface
stickiness
intense
dough
stickiness
diminished
dough
stickiness
wheat
dough
stickiness
Figure 2: Hyponymy Hierarchy
changed in the potential hyponym. For example,
whatever is going on in \wheat dough stickiness", in-
serting the word \surface" to produce \wheat dough
surface stickiness" has altered the original head-
modier relations. So a generic/specic relation is
less certain. For the moment such links are permit-
ted.
This process allows multiple parents for a given
term. So \wheat dough surface stickiness" is also
a hyponym of \surface stickiness" through a left-
expansion rule. An example of this kind of hierarchy
can be seen in gure 2.
These two structures are exploited in the search
process during `matching' of queries against answers.
The strengths they bring and the limitations imposed
are explored in Section 5 after description of an al-
ternative approach to term variant structuring.
4 The TermWatch system
TermWatch (Ibekwe-SanJuan and SanJuan, 2003)
clusters term variants into classes, thus producing
a three-level structuring of terms: term, connected
component and class levels. It integrates a visual
interface developed with the Aisee graphic visualiza-
tion to enable the user explore the classes and browse
through the links between terms. Earlier stages of
this work were presented in (Ibekwe-SanJuan, 1998).
The system comprises of two major modules: a
syntactic variant identier and a clustering module
whose results are loaded onto the Aisee visualization
tool.
2
4.1 Variants identier module
Automatic term variant identication has been ex-
tensively explored in (Jacquemin, 2001). In the sec-
tions below, we will recall briey the denitions of
the variation types we identify and give examples
each type.
2
http://www.aisee.com/
Expansions are subdivided along the grammati-
cal axis: those that aect the modier words in a
term and those that aect the head word. Modier
expansions (L-Exp) describes two elementary op-
erations: left-expansion (L-Exp) and Insertion (Ins).
They both denote the addition at the leftmost po-
sition (L-Exp) or inside a term (Insertion or Ins) of
new modier elements. For instance, \gas holding
property of dough" is a left-expansion of \gas holding
property" because by transformation to a nominal
compound structure, we obtain \dough gas holding
property". Likewise, \bread dough quality character-
istics" is an insertion variant (Ins) of \bread char-
acteristics". Head expansions (R-Exp) describes
the addition of one or more nominals in the head po-
sition of a term, thus shifting the former headword
to a modier position. Thus \frozen sweet dough
baking" is a R-Exp of \frozen sweet dough". A com-
bination of the two expansion types yield left-right
expansion (LR-Exp) in that it describes addition of
words both in the modier and head positions. For
example, the relation between \nonstarch polysac-
charide" and \functional property of rye nonstarch
polysaccharide" (\rye nonstarch polysaccharide func-
tional property"). These relations are constrained in
that the added or inserted words have to be con-
tiguous, otherwise, we may not have the expected
semantic relations. Only nominal elements are con-
sidered (nouns, adjectives).
Substitutions are also dened along the gram-
matical axis to yield two sub-types : modier and
head substitution. Modier substitution (M-Sub)
describes the replacing of one modier word in term
t
1
by another word in term t
2
. Thus \bread dough
leavening" is a modier substitution (M-Sub) of
\composite dough leavening". Head substitution
(H-Sub) relates terms which share the same modi-
ers but dierent heads : \eect of xanthan gum"
and \addition of xanthan gum". These relations
are equally constrained in that they can only link
terms of equal length where one and only one item
is dierent, thus guaranteeing the interpretability of
the relations. Substitutions, since they denote non-
directional relations between terms of equal length,
engender symmetrical relations between terms on the
formal level: t
1
t
2
. Their transitive closure cre-
ates classes of terms. For instance, a set of terms
related by modier substitution (M-Sub) seem to
point to a class of \properties/attributes" shared by
a same concept (the head word) as in \bread texture,
endosperm texture, good texture" for binary terms
and \sour corn bread, sour dough bread, sour maize
bread" for ternary terms. In this last case, the chang-
ing properties seem to point to the possible special-
izations (\sour-") of the concept (\bread"). Head
substitution on the other hand gathers together sets
of terms that share the same \properties" (the mod-
ier words), thus creating a class of \concepts". For
instance, the set of term variants \frozen dough bak-
ing, frozen dough characteristics, frozen dough prod-
ucts". The common attribute is \frozen dough",
shared by this class of concepts \products, char-
acteristics, baking". (Ibekwe-SanJuan, 1998) al-
ready put forward the idea of these semantic rela-
tions and (Jacquemin, 1995) reported similar con-
ceptual relations for his insertion and coordination
variants.
4.2 Variant Clustering Module
The second module of TermWatch is a hierarchical
clustering algorithm, CPCL (Classication by Pref-
erential Clustered Link), which clusters terms based
on the variations described above. The six elemen-
tary variation relations are represented as a di-graph.
Clustering is a two-stage process. First the algorithm
builds connected components using a subset of the
variation relations, usually the modier relations (L-
Exp, Ins, M-Sub), these are the COMP relations.
The transitive closure COMP* of COMP partitions
the whole set of terms into components. These con-
nected components are sub-graphs of term variants
that share the same headword. At the second stage,
the connected components are clustered into classes
using the head relations (R-Exp, LR-Exp, H-sub),
this subset of relations is called CLAS. At this stage,
components whose terms are in one of the CLAS re-
lations are grouped basing on an edge dierentiation
coe?cient computed thus:
d
ij
=
X
R2CLAS
n
R
(i; j)
jRj
where CLAS is the set of binary head relations
(Exp D, Exp GD, Sub C), and n
R
(i; j) is the num-
ber of variants of type R between components i and
j. This coe?cient is higher when terms of two com-
ponents share many CLAS relations of a rare type
in the corpus. Components with the highest d
ij
are
clustered rst. The CPCL algorithm can be iterated
several times to suit the user's requirement or un-
til it converges. This means that the user is free to
either set the number of iterations or leave the algo-
rithm to do all the iterations until convergence. The
user only has to specify which set of variations s/he
wants to play the COMP and the CLAS role. In
theory, this distinction is already made in the sys-
tem but the user can change it. On the linguistic
Component 1 component 2
bromate measurement dough stickiness
dough stickiness measurement diminished dough stickiness
dough surface stickiness measurement dough increase stickiness
stickiness measurement intense dough stickiness
measure surface stickiness
soft red winter wheat lines dough stickiness
surface stickiness
wheat dough stickiness
wheat dough surface stickiness
Table 1: Example of a class built by TermWatch.
level, a class contains at least two connected com-
ponents, each comprising of sets of term variants
around the same head word. Class here should be
understood in a formal way: it corresponds to group-
ings of connected components resulting from a hier-
archical clustering algorithm. They are not strictly
dened semantically. Although, we nd semanti-
cally related terms within these classes, the exact
semantic relations involved between pairs of terms
are not explicitly tagged. So on the semantic level,
a class here comprises subsets of term variants re-
ecting, \class of" relations (engendered by substitu-
tions) and \hypernym/hyponym" relations (engen-
dered by modier expansions). For instance, Table
1 displays the term variants found in one class.
This class was built around two components, one
structured around the concept of \stickiness mea-
surement" (most frequent repeated segment) and the
other around the concept of \dough stickiness". We
can observe the COMP relations between term vari-
ants inside each component. The variants that ini-
tiated this class formation are in italics (the ones
sharing CLAS relations).
The TermWatch programs have been implemented
in the AWK language and can run on a Unix or
Windows system. The system is computationally
tractable and processing time is quite acceptable for
real-life applications. For instance, it took 40 sec-
onds on a normal PC running Windows to process a
graph of 3651 term variants and to load the results
onto the Aisee graphic interface. 33 classes of vari-
able sizes were produced at the 3rd iteration of the
clustering algorithm. The smallest class had 4 terms
and the biggest 218 terms! So class size depends very
much on the number and types of variation relations
present in the initial graph.
3
3
TermWatch was initially designed as a scientic and
technology watch system, hence the choices made in
syntactic term variant denitions, the clustering algo-
rithm and visualization mechanisms are tightly related
to this application. A WWW interface is currently under
construction to facilitate the return to the source texts
5 Combining the two systems
The two outlined methodologies use the existence
of syntactic variation between multi-word terms to
structure the terminology as a whole. However, each
approach reects a dierent aspect of this structure.
The ExtrAns approach is designed to identify
explicit relations between terms. The results are
(relatively) small synsets and a hierarchy of types.
For TermWatch, the organizing principle results in
larger classes of terms built around dierent head
words related by syntactic substitution or expansion.
Whilst, not specically targeting semantic relations
the classes do exhibit related terms. Some of these
relations are denable within the classes. For exam-
ple, the class presented in Table 1 contains all of the
hyponyms of \stickiness" identied in ExtrAns (g-
ure 2), but the relations are not rendered explicit in
the class. Also the class contains other terms not
involved in a specic hyponymy relation.
The utility of the classes is in capturing more
\fuzzy" relations between terms whilst avoiding the
problems of trying to dene the relation. For exam-
ple, how can the relation between t
1
: \frozen sweet
dough" and t
2
: \frozen sweet dough baking" be de-
ned ? The most obvious candidate is a part whole
relation but this is defendable only on a formal level:
i.e. t
1
is a subset of t
2
, but does that make t
1
really
a part of t
2
in any semantic sense? In other words, is
\frozen sweet dough" really a part of \frozen sweet
dough baking"?
The TermWatch system does not grapple with this
issue. The interest of these classes for the QA task is
that they exhibit these fuzzy relations. These repre-
sent wider categories of terms to be used for specic
search types. For example, when looking for gen-
eral information on \frozen sweet dough" a user may
well be interested in \baking" it, but when extract-
ing specic information on the same term the rela-
tion is inappropriate. TermWatch was designed orig-
inally for scientic and technological watch (STW).
through hyperlinks.
Term
Extraction
Term
Structure
ExtrAns
Document
synonymy
hyponymy
TermWatch
WordNet
Figure 3: Using the structures in ExtrAns
In this type of application, the expert is less inter-
ested in strict semantic relations between terms in
a taxonomy but more in capturing the association
of research topics in his/her eld. So such \fuzzy"
relations become all important.
Currently ExtrAns uses the synsets and hyponymy
hierarchy during the `matching' of queries against
documents. However, when this fails to locate any-
thing the process is nished without providing users
with any information or any further access into the
domain. What is required is to \relax" the denition
of semantic relation, or facilitate domain investiga-
tion through visualization of the terminology.
The combination of the two methodologies (de-
picted in gure 3) results in a terminology structured
along four levels of granularity. This structure repre-
sents MWTs that are: Strictly synonymous, Word-
Net related, Hierarchy of types and Clustered by
Class.
These levels can be eectively exploited in lo-
cating answers. First, extract potential answers
that involve strictly synonymous MWTs. Second,
look for potential answers with WordNet related
MWTs. Third, try hypernyms/hyponyms of the
search MWT. Finally, allow the user to browse the
classes of MWTs to identify which are of interest in
answer to the question.
TermWatch allows a user-friendly navigation of
the clustering results. Classes are mapped out as
nodes connected by edges whose length denote the
distance between them. The longer the length, the
farther the classes are from one another and thus the
lower their edge coe?cient (d
ij
). The Aisee inter-
face oers standard navigation functions which allow
users to unfold a class into its components and then
into the terms they contain. It thus reects the three-
level structuring eected by the TermWatch mod-
ules.
Figure 4 gives the graphic representation of results
obtained on the corpus. Note that only classes linked
to others are shown in this gure. Classes are la-
beled automatically by the most active term. The
layout points out central or core classes, here classes
(32, 22) which can represent the dominant terminol-
ogy, and by extension, core research topics in the
eld. This layout also brings out interesting con-
gurations like complete graphs and linear graphs.
Complete graphs. The four classes labeled by the
terms \dough behaviour" (32), \wheat our bread"
(29), \wheat bran" (6) and \dough improver" (20)
form a complete graph. They are all linked by sym-
metrical head substitution relations. We found in
these classes term variants like \wheat our dough"
(class 32); \wheat our bread" (class 29), \wheat
our supplementation, wheat our blend, wheat our
fractionation" (class 6), and nally \wheat our com-
position" (class 20). This complete graph is thus
structured around the two modier elements \wheat
our" which can reect a property shared by the
concepts of these four classes. Linear graphs. The
anti-symmetrical relations engendered by insertions
and expansions generate linear graphs, i.e., chains of
relatively long vertices starting from a central class to
the border of the graph. The visualization tool natu-
rally aligns the elements of these linear graphs, thus
highlighting them. For instance, the linear graph
formed by the three classes \dough behaviour" (32),
\frozen dough baking" (10), \dough procedure" (21)
is structured around the set of variants: \frozen
sweet dough (32) ! \frozen sweet dough baking (10)
 \frozen dough baking" (10). The last term \frozen
dough baking" establishes a strong variation relation
with terms in the third class (21) in which we found
the modiers \frozen dough" associated to three dif-
ferent head words: \characteristic, method, prod-
uct".
Given that the syntactic variations which helped
group terms give o semantic links, and given our
restricted denitions of variation relation (see 4.1), a
user seeking information can be oered these class's
contents at this stage in order to see loosely related
terms semantically which a terminological resource
(thesaurus) or WordNet may not have identied.
For instance, in the class shown in Table 1, many
of the terms may not have been related by any se-
mantic relation in WordNet (bromate measurement
and dough stickiness) because none of the head or
the modier words are in any synsets. The clus-
tering algorithm, brings these terms in one class
because \bromate measurement" is a modier sub-
stitution of \stickiness measurement" which is why
they are in the same component. Both tell us some-
thing about \measurement (or rather about measur-
able objects). On the other hand, \dough surface
stickiness measurement", in the same component, is
a left expansion of \stickiness measurement". The
Figure 4: Navigating the clusters of MWTs
two could point to a `hypernym/hyponym' relation.
Thus, from link to link, these terms are connected
to terms of the second component owing to the one
anti-symmetrical link between \dough surface stick-
iness measurement" and \surface stickiness".
From this kind of investigation, a user can choose
the MWTs of interest. This set then becomes the
basis of a second round of answering specic ques-
tions. In this way the system can provide high preci-
sion access to answers, whilst facilitating navigation
through a domain of unfamiliar MWTs.
6 Related Work
The importance of multi-word expressions (MWE)
in various natural language tasks such as auto-
matic indexing, machine translation, information
retrieval/extraction and technology watch need no
longer be proved.
The Multi-word Expression Project aims at study-
ing the properties of a wide range of expressions
including collocations, metaphors and terminology.
The motivation is in explicitly dening the character-
istics of such phrases. The results of the project will
suggest e?cient strategies for overcoming the prob-
lems MWEs cause for NLP applications (Sag et al,
2002)
Much work has been dedicated to the process of
nominal compounding (Levi, 1979) and the seman-
tic interpretation of nominal compounds (Downing,
1977) (Finin, 1980). Other works have addressed
the specic problem of extracting nominal multi-
word expressions for IR applications (Evans et al,
1992) (Smeaton and Sheridan, 1992) (Smadja, 1993)
or of representing them semantically in order to en-
hance IR systems (Popowich et al, 1992) (Gay and
Croft, 1990).
Many systems are dedicated towards structur-
ing terminology for ontology building or terminol-
ogy knowledge base construction (Aussenac-Gilles
et al, 2003). These approaches use the corpus
to identify linguistic markers which in turn point
to certain semantic relations between terms (hy-
pernym/hyponym, synonyms, meronyms). The ap-
proaches we describe are dierent in that relations
are gained through syntactic variations between the
terms.
Active research by the computational terminol-
ogy community (Jacquemin, 2001) (Bourigault et
al., 2001) (Pearson, 1998) has highlighted the im-
portance of discourse as a means of capturing the
essence of terms, hence as a good basis for struc-
turing them. Jacquemin's extensive study has also
highlighted the fact that terms are given to varia-
tions in discourse, so any endeavor to capture the re-
lations between terminological units should integrate
the variation paradigm.
7 Conclusions
Dening and identifying semantic relations between
terms is problematic but can be utilized as part of the
QA process. However, clustering MWTs based on
syntactic variation uncovers classes of terms which
reect more \fuzzy" semantic relations. These are
ideally suited to enabling navigation through the do-
main identifying terms to be used in the Question
Answering process, oering sophisticated access to a
domain. The resulting term structure can be utilized
as a computational thesaurus or incorporated as part
of a larger domain ontology.
References
N. Aussenac-Gilles, B. Biebow, and S. Szulman.
2003. D'une methode a un guide pratique de
modelisation de connaissances a partir de textes.
In Proc. of the 5th Conference on Terminologie
et Intelligence Articielle, Strasbourg, March 31 -
April 1.
K. Barker and S. Szpakowicz. 1998. Semi-Automatic
Recognition of Noun Modier Relationships. In
Proc. of COLING-ACL98, Montreal, Quebec,
Canada, August 10-14.
D. Bourigault, C. Jacquemin, and M-C. L'Homme,
editors. 2001. Recent Advances in Computational
Terminology, volume 2. John Benjamins.
J. Dowdall, M. Hess, N. Kahusk, K. Kaljurand,
M. Koit, F. Rinaldi, and K. Vider. 2002. Tech-
nical Terminology as a Critical Resource. In Proc.
of LREC-02, Las Palmas, 29 { 31 May.
P. Downing. 1977. On the creation and use of english
compound nouns. Language, (53):810 { 842.
D.A Evans, R.G. Leerts, G. Grefenstette, S.K. Han-
derson, W.R. Hersh, and A.A.Archbold. 1992.
CLARIT TREC design, experiments and results.
Technical report, Carnegie Mellon University.
T. Finin. 1980. The semantic interpretation of nom-
inal compounds. In Proceedings "Articial Intelli-
gence, pages 310 { 312. Stanford.
L.S. Gay and W.B. Croft. 1990. Interpreting nomi-
nal compounds for information retrieval. Informa-
tion Processing and Management, 26(1):21 { 38.
F. Ibekwe-SanJuan and E. SanJuan. 2003. From
term variants to research topics. Journal of
Knowledge Organization (ISKO), special issue on
Human Language Technology, 29(3/4).
F. Ibekwe-SanJuan. 1998. Terminological variation,
a means of identifying research topics from texts.
In Proc. of Joint ACL-COLING'98, pages 564 {
570, Quebec, 10-14 August.
F. Ibekwe-SanJuan. 2001. Extraction termi-
nologique avec intex. In Proc.of the 4th Annual
INTEX Workshop, Bordeaux, 10-11 June.
P. Isabelle. 1984. Another look at nominal com-
pounds. In Proc. of the 10th International Con-
ference on Computational Linguistics (COLING
'84), pages 509{516, Stanford, USA.
C. Jacquemin. 1995. A symbolic and surgical ac-
quisition of terms through variation. In Proc. of
IJCAI95, Montreal.
C. Jacquemin. 2001. Spotting and discovering terms
through Natural Language Processing. MIT Press.
K. Kageura. 2002. The dynamics of Terminology: A
descriptive theory of term formation and termino-
logical growth. John Benjamins, Amsterdam.
J. N. Levi. 1979. The syntax and semantics of com-
plex nominals. Academic press, New York.
J. Pearson. 1998. Terms in Context. John Ben-
jamins, Amsterdam.
F. Popowich, P. Mcfetridge, D. Fass, and G. Hall.
1992. Processing complex noun phrases in a natu-
ral language interface to a statistical database. In
Proceedings COLING'92, pages 46 { 51, Nantes,
August 23 { 28.
F. Rinaldi, M. Hess, D. Molla, R. Schwitter, J. Dow-
dall, G. Schneider, and R. Fournier. 2002. Answer
Extraction in Technical Domains. In Proc. of CI-
CLing 2002, Mexico City, February.
I. A. Sag, T. Baldwin, F. Bond, A. Copestake, and
D. Flickinger. 2002. Multiword Expressions: a
Pain in the Neck for NLP. In Proc. of CICLing
2002, Mexico City, February.
M. Silberztein. 1993. Dictionnaires Electroniques
et Analyse Lexicale du Francais - Le Systeme IN-
TEX. Masson, Paris.
F. Smadja. 1993. Retrieving collocations from text:
Xtract. Computational Linguistics, (19):143 { 177.
A. F. Smeaton and P. Sheridan. 1992. The appli-
cation of morpho-syntactic language processing to
eective phrase-matching. Information Processing
and Management, 28(3):349 { 369.
