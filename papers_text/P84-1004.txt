UN OUTIL MULTIDIMENSIONNEL DE L'ANALYSE DU DISCOURS 
J. CHAUCHE 
Laboratoire de Traitement de l'Information 
I.U.T. LE HAVRE Place Robert Schuman - 76610 LE HAVRE FRANCE 
& C.E.L.T.A. 23, Boulevard Albert let - 54000 NANCY FRANCE 
RESUME : 
Le traitement automatique du discours suppose 
un traitement algorithmique et informatique. Plu- 
s ieurs  m~thodes permet tent  d 'appr~hender  cet  as -  
pect .  L'utilisation d'un langage de programmation 
g~n~ral (par exemple PL/I) ou plus orient~ (par 
exemple LISP) repr~sente la premiere approche. A 
l'oppos~, l'utilisation d'un logiciel sp~cialis~ 
permet d'~viter l' ~tude algorithmlque n~cessaire 
dana le premier cas et de concentrer cette ~tude 
sur les aspects r~ellement sp~cifiques de ce trai- 
tement. Lea choix qui ont conduit ~ la d~finition 
du syst~ne SYGI4ART sont exposes ici. L'aspect mul- 
tldimensionnel eat analys~ du point de rue concep- 
tuel et permet de situer cette r~alisation par 
rapport aux diff~rents syst~mes existants. 
INTRODUCTION : 
Un iogiciel sp~cifique de traitement automati- 
que du discours comporte plusieurs ~l~ments : en 
premier l i eu  la  descr ip t ion  des ob je ts  manipul~s 
permet de d~f in i r  l ' un ivers  de t rava i l  du r~a l i sa -  
teur .  En second l ieu  la  mani~re de manipu ler  ces 
oh je ts  rend compte des potent ia l i t~s  de r~a l i sa -  
t ion  d 'app l i ca t ion  d iverses .  11 eat  n~cessa i re  au 
pr~a lab le  de d~f in i r  la nature  du module sous -  
jacent  par rappor t  aux theor ies  ex i s tantes .  Dana 
le  p resent  a r t i c le  on exposera  donc success ivement  
une approche du module th~or ique ,  une descr ip t ion  
des ob je ts  manipul~s et  en f ln ,  lea out i l s  de mani-  
pu la t ions .  L 'exemple du syst~me SYGMART montre une 
r~a l i sa t ion  concrete  des choix  pr~c~de,=,ent expo- 
ses .  
Le module transformationnel. 
Du point de rue formel lea outils utilis~s pour 
le traitement automatique des langues naturelles 
peuvent se diviser en deux grandes categories : 
- le module g~n~ratif d~finissant un processus 
formel engendrant un langage. L'analyse consiste 
alors ~ retrouver le processus d~ductif condulsant 
la phrase ou au texte ~tudi~. C'est dana ce 
cadre que sont effectu~es la plupart des r~alisa- 
tions actuelles. L'exemple le plus important 
eat sans doute la d~finitlon des grammaires 
syntagmatiques et des analyseurs associ~s. Nous 
pouvons sch~natiser une r~alisation par le graphe 
suivant : 
Gr~-,-,ire Algorithme d' analyse 
syntagnmtique > / associ~ 
s t ruc ture  g~n~rat ive  texte  
du texte  
Beaucoup de po in ts  s 'opposent  h cette d~marche. 
Lea pr inc ipa les  d l f f i cu l t~s  sont  : 
Ex i s te - t - i l  une gr ,m,ml re  compl~te des textes  
traiter ? 
Quel algorithme d'analyse mettre en oeuvre si 
lea res t r i c t ions  fo rmel les  sont  t rop  cont ra i -  
gnantes  ? 
Dana le  cas du t ra i tement  des langues nature l -  
l ea ,  l ' s lgor i thme ut i l i s~ es t - i l  su f f i sa -~ent  
soup le  pour permet t re  une adaptab i l i t~  cons -  
tante ? 
- Le module transformationnel qui d~finit une 
fonction d'un espace (textuel) dana un autre 
espace (relationnel) ou une fonctiou de l'espa- 
ce relationnel sur lui-m~me. 
Le schema eat  a lo rs  le  su ivant  : 
D~f ln i t ion  du module > Algor i thme de s imu la -  
t rans format ionne l  t ion  du modAle 
s t ruc ture  imag~ ~ ~ ' ~ ' ~  te!te 
Lea pr inc lpa les  quest ions  sont  a lo rs  lea 
suivantes : 
Analyse : comment d~finir un accepteur d'un 
langage donn~ ? 
Preuve que la fonction transformationnelle eat 
partout d~finie. 
Existe-t-il un algorithme transformationnel 
acceptab le  et co~ment le  d~cr i re  ? 
Des r~a l i sa t ions  out  d~j~ ~t~ e f fec tu~es  su ivant  
cet  aspect  formel ,  nota - , -ent  lea  sys t~nes  Q, 
CETA pu is  ROBEA. Le but  du present  a r t i c le  eat  
d 'exposer  une ~vo lu t ion  de cet te  approche et  en 
par t i cu l ie r  l ' approche  mul t i re la t ionne l le  ou 
mul t id lmens ionne l le .  
La s~parat ion  re la t ion  ~t iquet te  ou s t ruc ture  a t  
signification. 
Lorsque l ' on  u t i l i se  ~mod~le  pour une app l i -  
ca t ion  donn~e, on pro je t te  une s ign i f i ca t ion  sur  
un ob je t  rowe l .  Pour cet te  ra i son  chaque ~ l~ent  
de la  s t ruc ture  eat  a f fec t~ d 'une  ~t iquet te  ayant  
un sens  par t i cu l ie r .  
Ex~ple  : 
11 
Cet te  approche a l ' i nconv~nient  de rassembler  deux 
~ldments d i s t inc ts  par leurs  natures  et  leurs  s i -  
gn i f i ca t ions  : la  s t ruc ture  e t  les  ~t iquet tes .  
GN ART SUB le livre 
s t ruc ture  ~t iquet tes  
Sans cet te  s~parat ion  chaque po in t  posskde une 
seu le  ident i t~  et  la  s t ruc ture  do i t  a lo rs  r~pon-  
dre ~ au moins deux ob jec t i f s  : 
- l es  l i a i sons  ou re la t ions  syntax iques  
? - l es  l i a i sons  ou re la t ions  qua l l ta t ives  
Noun aurons  dana le  premier  can : 
GN d~f in i ssant  le  groupe nominal  
/ ~  composd d 'un  ar t i c le  e t  d 'un  
ART SUB substantlf 
dens le second can : 
ART ddf in i ssant  l'article comme 
/ d~f in i  S INGle  s ingu l  ie r  
DEF 
La p lupar t  des modules t rans format ionne ls  ont  
dt~ d~f in i s  avec un mul t i -~t iquetage .  
GN 
ART DEF SUB MAS 
SING MAS 
1 iv re  
Cet te  approche impor tante  d~termine les  ob je ts  qui  
seront  manipul~s de fa~on abst ra i te  ( th~or ique)  ou 
concrete  (p rogr - - - ,e ) .  A ins i  l es  sys t~nes  Q par 
exemple op~rent  sur  des Q-graphes dont chaque bran-  
che es t  ~t iquet~e par une arborescence  s lmplement 
~t iquet~e.  Le syst~me CETA op~re sur  des a rbores -  
cences mul t i -~t lquet~es .  Dana ces deux can l ' ana-  
l yse  du d i scours  cons is te  & rechercher  une s t ruc -  
tu re  qui  repr~sentera  lo rs  la  compr~henslou d  
sys t~ne pour ce texte .  L 'exp lo i ta t ion  de cet te  
s t ruc ture  d~f in i ra  a lo rs  t 'app l i ca t ion .  Une ~tude 
appro fond ie  condu i t  h d~f ln i r  comme ob je t  de base 
un t r ip le t  : s t ruc ture ,  mu l t i -~t iquet te ,  fonct ion  
d' assoc ia t ion .  
1 A : GN i ? A 
/ k  k B : ART DEF SING MAS 2 ? B 
2 4 C : le 3 "," C 
I ~ D : SUB HAS 4 ? D 
3 
E : livre 5 "* E 
structure mul ti-~tiquettes fonction 
d' association 
La fonction d'associetion n'est pas n~cessairement 
injective. Cette propri~t~ permet de mieux disso- 
cier structure et contenu : 
Exemple : Le grand et le petit arbre. 
I 
/ ~ A : COORD II : grand 
2' 3 B : GN I : DEF 
A A\  "? "  D : DEF K : SUB 
4 5 6 7 8 9 E : GA L : le 
G : le N : arbre 
i0 II 12 13 14 15 
I?A 8?J  
2?B 9?K 
3?C IO?G 
4?D I I?H 
5+E 12?N 
6?F 13?L 
7?I  14?M 
15?N 
L'ellipse du mot 'arbre" n'existe pan dana la 
structure et existe par la d~finition de la fonc- 
tion d'~tiquetage. Ce qui correspond sch~matique- 
ment au graphe suivant : 
\ .  
le  grand le  pet i t  a rbre  
La d~f in i t lon  pr~c~dente permet de d~f in i r  des a l -  
gor i thmes  de t ra i tements  s lmp les  et  e f f i caces  
a lo rs  que pour ce dern le r  type de graphe lea t ra i -  
tements  comporteront  des a lgor l thmes  complexes.  
E lements s t ruc tures .  
Un ~l~ment s t ruc tur~ es t  par d~f in i t ion  un ob- 
je t  mu l t id imens ionne l  ou mult ichamp.  La s t ruc ture  
pr~c@dente a t  i ssue  de l '~tude  syntax ique  des 
textes .  E l le  permet de d~f in i r  une forme @labor~e 
du texte  e t  d 'avo i r  un acc~s h ses  d i f f~rentes  
composantes en rapport avec leurs fonctions. Pour 
le traitement des langues naturelles il est bien 
sQr ~vident que cette analyse ne suffit pas. Cela 
ne signifie pan que tous les  probl~mes li~s 
cette analyse soient r~solus mais que la levde 
des obstacles, de l'analyse syntaxique ou autre, 
suppose une ~tude plus approfondie. Lorsqu'une 
r~alisation utilise le m~ne espece d~finitionnel 
pour representer le seas et la forme les probl~- 
mes ~voquds pr~cddemment sur les difficultds li~es 
la confusion strueture-~tiquette se multiplient 
et se transportent au niveau structurel. Comment 
representer deux structures d'un texte donn~ sous 
forme arborescente s i ces  deux arborescences sont 
contradictoires ? Ce probl~me eat insoluble dens 
le cadre arborescent classique. On peut bien sQr 
d~finir plusieurs types d'analyses, obtenir plu- 
sieurs arborescences du m~me texte. Dans ce cas 
la liaison entre ces diff~rentes arborescences 
sera tr~s difficile sinon impossible h formaliser 
et ~ mettre en oeuvre. El est donc n~cessaire d' 
avoir un module de representation qui permette de 
d~finir plusieurs structures sur le m@me ensemble 
de points, chacun de ces points ~tant associ~ 
une multi-~tlquette suivant une fonction quelcon- 
que. Cette d4finition correspond ~ la d~finition 
des ~l~ments structurds dont l'approche formelle 
eat la suivante : 
Un ~l~ment structur~ est d~fini par un 
quadruplet (P,S,E,F) o~ : 
P :es t  un ensemble fini de points 
S :es t  un ensemble fini de structures arbores- 
centes sur les points de Pet  tel que chaque 
point de P appartient ~ au moins une structu- 
re de S. 
E :es t  un ensemble f in i  de mul t i -~t iquet tes .  
12 
F : est une application surjective de P sur E. 
Exemple : ~ ~ 6 
34 715 
{E 1, E2, E3, E4} { 1~E4, 2-~E1,3~E1,4+E4,5?E3,6~E2, 
7-+E 1,8-~E3 } ) 
la representation graphique d'un tel objet est plus 
facile lorsque l'on regarde une seule structure 
(une seule dimension ou champ). La synth~se gra- 
phique de cet exemple donne la figure suivante : 
. 
. . . .  . \ . ,  ' ,  
\ \  L I  I ",,,:" . . .  ' ,  
Le problime classique de l 'analyse textuel le,  
(ddfinir une grau.naire syntagmatlque engendrant 
un langage), est transform~ et devient : d~finir 
pour chaque ~l~ment du langage un ~l~nent struc- 
tur~ associ~. Le probl~me qui se pose alors est 
similaire ~ celui obtenu dans le cadre des gram- 
maires syntagmatiques : la d~finition de l'image 
structurelle recouvre-t-elle l'ensemble du langa- 
ge ? On peut remarquer que le cas des grammaires 
syntagumtiques est un cas particulier de cette 
approche. L'association est alors la suivante : 
on affecte ~ chaque ~l~ment du langage engendr~ 
par la gr----nire la structure syntaxique de cet 
~l~ment. 
Cette approche permet de ddfinir une associa- 
tion plus complexe par la multlplicitd des struc- 
tures assocides au m~me ensemble de points. On 
aura donc associd ~ chaque texte ses structures 
syntaxiques, sdmantiques, logiques, etc... En 
pratique le nombre de champs ou dimensions est 
limit~ (par exemple 16 dans le cas du syst~me 
SYGMART). 
Rdseau transformationnel : 
Un objet formel est intdressant dans la mesure 
o~ il existe un moyen de le manipuler. Cet aspect 
algorithmique est n~cessaire ~ route r~allsation 
et limite la complexitd des objets ddfinis. Le 
module op~ratoire pour les ~l~ments structures 
d~finis ci-dessus est r~alis~ par un r~seau trans- 
formatlonnel. Chaque point du r~seau est consti- 
tu~ d'une grammaire transformationnelle et chaque 
arc partant d'un point de ce r~seau est ~tiquet~ 
d'une condition bas~e sur la presence d'un schema. 
Exemple : ~ . , ~ '  G2 / ~  
Le r~sultat de l'application du r~seau transfor- 
mationnel est d~fini par l'~l~ment structur~ obte- 
nu apr~s le parcours de ce r~seau d'un point 
d'entr~e E ~ un point de 9ortie S. Le r~seau 
d~finit donc une application de l'ensemble des 
~l~ments structures dans lui-mSme. Le parcours 
de ce r~seau peut @tre simple ou r~cursif sulvant 
la nature des r~gles appliqu~es dans les gr---,-i- 
res ~l~mentalres. Une gram,mire transformationnel- 
le ~l~mentaire a donc pour but de d~finir une 
transformation de l'~l~ment structure. Cette 
transformation est r~alis~e par un ensemble de 
r~gles transformationnelles ordonn~es. Chaque 
r~gle d~finie un module de remplacement permet- 
rant une modification d'un ~l~ment structur~ 
quelconque. Cette r~gle pouvant @tre simple ou 
r~cursive et dans ce dernier cas falre appel 
au r~seau pour son execution. Le point central 
d'une graummire ~l~mentaire est donc constitu~ 
par une r~gle ~l~mentaire. Une r~gle ~l~mentaire 
est d~finie par un ensemble de transformations 
d'arhorescences, chacunede ces transformations 
devant s'appliquer sur un champ simultan~ment 
aux autres transformations des autres champs. Des 
contraintes correspondant ~ des points communs 
inter-champs peuvent ~tre d~finies. On peut remar- 
quer que le syst~me CETA constitue dans ce cadre 
un cas particulier de traitement sur un seul 
champ. La transformation dans un champ est une 
extension des d~finitlons de transformations 
d'arbre d~finies par Gladkij et Melcuk \[ 7 3. One 
gra~maire 41~mentaire poss~de ~galement un mode 
d'application permettant de limiter l'applicabi- 
lit4 des rAgles, cecl afin de d~finir un proces- 
sus transformationnel fini. L'ensemble des r~gles 
d'une grammaire ~l~mentaire est ordonn~ et d~finl 
un algorithme de Markov ~ 8 ~ ~tendu aux ~l~ments 
structures. La d~finition d'un modAle de recon- 
naissance s'effectue suivant un processus analo- 
gue k la recherche d'un programme d~finlssant une 
fonctlon donn~e. Les objets trait~s sont des ob" 
jets non classiques en progra~Ination et les modi- 
fications de ces objets ne s'effectuent pas 
travers un parcours de l'objet traitS, mais par 
la d~finition de transformations oumodif lcat lons 
de sous -ob je ts .  
So l t  par exemple la  d~f in i t lon  de l ' ana lyse  d 'une  
phrase par Wang Huilln \[ 9 ~ : 
phrase : "sur ces donn~es, l'ordinateur dolt 
effectuer certains calculs sulvant un programme 
d~termin~." 
Structure recherch~e : 
? ULF~A 
I 
~ol ~ ~in . 
. . . .  o,a" I 
13 
Par convent ion  le  texte  es t  p ro je td  su ivant  la  
fomne d 'd ldment  s t ruc turd  la  p lus proche du texte :  
L'dcriture du r4seau de grammaire va d~finir un 
processus de transformations pour obtenir la 
structure souhait~e. Pour des raisons ~videntes 
nous avons simplifi4 la representation dans eat 
exemple en d~finissant sur chaque point une par- 
tie de l 'ensemble  des va leurs  de l'dtiquette as -  
soc ide  e t  an ne cons ld~rant  qu 'un  seul  champ. 
La premiare grammnlre do l t  permettre une d is t inc -  
t ion  ent re  phrase  au cas o~ le  texte  en comporte-  
ra i t  p lus ieurs  (b ien  s~r ~galement dans le  cas o~ 
l 'ana lyse  a dt~ cho is ie  phrase  par phrase) .  Ceci 
s'effectue en trois ~tapes : 
in i t ia l i sa t ion  ? > ~ A 
r~. le  . .n . r ique  / y ~  '~ /~  
X . X . PH 
? oA ? y ~ 
r~gle finale ? 
#A X 
La s t ructure  recherch~e s t  d~dui te  de la  s t ruc tu -  
re  syntax ique  qui  dana ce cas eat  la  su ivante  : 
^ ~ ~  
La r~gle su ivante  (rgnfl dans ~ 9 \] ~st  utilis~e 
pour obtenir les regroupements GN : 
Cette  r~g le  appl iqu~e sur le  texte  pr~cddent donne 
par exemple : 
"I '" "or dinar eur" "i ' " " " ordlnateur" 
Cet exemple utilise deux r~seaux de grammaires 
enchain4es, le premier correspondant ~ la recher- 
che de la structure syntaxique, le second, ~ la 
construction de la structure choisie (grammaire 
FI2 et FI3 dans \ [  9 3). 
La s~parat lon  s t ructure -~t lquet te  indu i t  une pro -  
p r i~t~ impor tante  par  rappor t  ~ la  pu issance  de 
d~finition d'une r~gle : 
La g~n~ralit~ des transformations peut se d4finir 
en deux 4tapes : d~finition structurelle et d~fi- 
nltion sdmantlque. La d4finition structurelle est 
tr~s g~n~rale et la d~finition s~mantique tr~s 
sp~cifique. La r~gle est alors applicable si la 
d~finition s4mantique adapt4e ~ la d~finition 
structurelle correspond ~ une rdallsation effec- 
tive clans l'~l~ment structur4 trait4. Nous avons 
le ach~na fonctionnel suivant : 
I base de .connaissance \[ 
d~finition structurelle ? r~gle produite 
Si par example on veut d~finir la transformation : 
apprendre quelque chose ~ quelqu'un ~ enseigner 
quelque chose ~ quelqu'un. 
la base de connaissance pr~cisera : apprendre 
? enseigner 
et  la  r~g le  s t ruc ture l le  : 
l /O~3 i /O~3 dans ce cas prdcis il n'y 
a pas de modification struc- 
I ~ I I turelle, la structure est 
2 4 2 4 n~ar~moins n~cessaire 
Avec la  mame r~gle nous pouvons avoir dans la 
base de connaissance la transformation : 
offrir ~ ? donner & 
permettant la transformation : 
offrir quelque chose h quelqu'un ? donner 
quelque chose ~ quelqu'un. 
hbus avons ainsi avec une seule r~gle structurelle 
d~fini deux r~gles potentiellement applicables. 
L'avantage d'une telle ddfinltion est 4vident : 
factorisatlon des r~gles, ind~pendance de la 
grammaire par rapport aux lexique, possibilitd de 
d~finir un comportement sp4cifique pour chaque 
~1~ment du lexique sans avoir h d~flnir une gram- 
.mire de transformations structurelles trop im- 
portante. 
Le syst~me SYGMART : 
Le syst~me SYGMART est un syst~me op4ratlonnel 
simulant un module transformationnel d'~l~ments 
structur4s. II est compos~ de trois sous-syst~mes 
OPALE, TELESI et AGATE, chacun de ces sous-syst~- 
mes correspondant aux diff~rentes fonctions essen- 
tielles de traitement d'un texte : 
OPALE effectue le passage texte 414ment struc- 
ture. 
TELESI effectue la transformation d'~l~ments 
structur4s. 
AGATE effectue le passage d'41~nent structur~ 
texte. 
La forme g4n4rale de l'applicatlon d'un sous 
syst~me est la suivante : 
l donn~es c o m p i l ~  donn~es 
programmes compil4es 
texte , I simulationl , image 
14 
Les donn4es programes comportent deux ~l~ments : 
un dictionnaire d~finissant la base de connaissan- 
ce et une grammaire d~finissant le processus 
transformationnel. 
Le sous-syst~me OPALE : 
Ce sous-syst~me permet de d~finir un ~14ment 
structur4 ~ partir d'un texte. Chaque champ com- 
portera la m~me structure et chaque point de 
cette structure sera associ4 h une 4tiquette 
correspondant au r~sultat d'une analyse d'un 
mot suivant ce sous-syst~me. Cette analyse est 
bas4e sur un automate d'4tats finis permettant 
une lecture d'un dictionnaire avec segmentation. 
Au cours de cette segmentation diff~rents 
renseignements sont ~valu4s et m~moris~s dans 
l'~tiquette r~sultante de l'analyse. 
Le sous-syst~me TELESI : 
Ce sous-syst~me d~finit le processus central 
du syst~nne SYCMART. Ii permet de d~finlr un 
r4seau transformationnel. Ce r~seau est compos~ 
de grammaires comportant un ensemble (4ventuel- 
lement vide) de r~gles. Chaque gra~snaire d~finit 
une transformation d'414ments structures et le 
r~sultat de cette grannnaire d4finit le parcours 
du r~seau. Chaque granm~aire poss~de un mode d'ap- 
plication, le plus complexe ~tant le mode r~cursif 
qui permet de d4finir un parcours de l'objet 
transformS. Le r~seau d~finit lui-m~me une trans- 
formation d'41~ments structures. L'entr4e du sys- 
t~me est compos~ soit du r~sultat du sous-syst~me 
OPALE soit du r~sultat de l'application de ce 
sous-syst~me lui-m~me. Le dictionnaire associ4 
au sous-syst~me TELESI d~finit la base de con- 
naissances h associer auX r~gles de transforma- 
tions. Cette application du contenu du dictionnai- 
re par rapport aux r~gles de transformations, 
s'effectue de mani~re dynamique. 
Le sous-syst~me AGATE : 
Ce dernier sous-syst~me d~finit la transfor- 
mation ~l~ment structur~ texte. Cette transfor- 
mation est n~cessaire dans beaucoup d'application 
et s'effectue par le parcours canonique d'une 
arborescence d'un champ d~termin~. Chaque ~tiquet- 
te associ~e ~ un point de ce parcours permet de 
d~finir un mot ~ l'alde d'un automate d'~tats 
finis de synth~se, mirolr du sous-syst~me OPALE. 
La forme g~n~rale de l'application du syst~me 
SYGMART est la suivante : 
'~TELESI  
OPALE . ~l&nent  AGATE ) texte  
texte structur~ 
Du point de rue  pratique, le syst~me SYGMART 
existe en trois versions. Deux versions PL/I et 
une version C. Les versions PL/I sont d~flnies 
sous les syst~nes IBM OS/MVS et Honeywell Multics. 
La version C est d~finie sous le syst~me UNIX et 
fonctionne sons un syst~me ~ base du microproces- 
seur MC680OO. Une r~alisatlon sur une traduction 
automatique Espagnol-Frangals effectu~e au CELTA 
avec le syst~me SYGMART donne un exemple du temps 
d'ex~cution n~cessaire : la traduction d'un texte 
de 800 mots trait~s ensembles (et non phrase par 
phrase, ce qui implique la manipulation d'arbo- 
rescences et d'~l~ments structures de plus d'un 
millier de points) a ~t~ r~alis~e sur un Amdahl 
470/V7 en 33 mn 38 s (soit 14 106 op~rations/mots) 
La version micro-ordinateur n~cessite une m~moire 
d'au moins 756 Ko et un dlsque dur d'au moins 20 
Mo. Les trois exemples sulvants sont extraits de 
trois r~alisations distlnctes et repr4sentent des 
parties de gra*mnaires TELESI : 
1) extrait de la grammaire d'analyse de l'espa- 
gnol C. VIGROUX CELTA France. 
2) extrait de la grammaire d'analyse du Chinois 
WANG HUIN LIN Institut de Linguistique 
Pekin Chine. 
3) extrait de la grammaire d'analyse du 
N~erlandais P. ROLF Universit~ Catholique 
de Nim~gue Hollande. 
- -~  - -m- -= --~= - -=- -= - -=  - -=  -~=-  
REFERENCES : 
\[ 1 \] : BOITET C.,  GUILLAUME P., QUEZEL-AMBRUNAZ M 
Manipulation d'arborescences et parall~lis- 
me : syst~me ROBRA, COLING 1978. 
\[ 2 U : ~UORE 3. 
Transducteurs et arborescences 
Th~se, Grenoble 1975. 
\[ 3 \] : c  CHE j 
Le Syst~me SYGMART 
Document privisoire, Le Havre 1980. 
\[ 4 \] : CHAUCHE J., CHEBOLDAEFF V., JATTEAU M., 
LESCOEUR R. 
Specification d'un syst~me de traduction 
assist~e par ordinateur. 
\[ 5 \] : COU'~E~UER A. 
Les syst~mes Q, Universit~ de Montreal 
1970. 
\[ 6 \] : n .a~ A, BOURQUIN Me, ATTALI A., 
I~COMTE J .  
Les probl~mes li~s au passage de la s t ructure  
de surface vers la structure d'interface. 
CELTA Nancy, 1981. 
\[ 7 \] : GLADKIJ A.V. ,  MEL'CUK I .A .  
Tree grammars, Linguistics Mouton 1975. 
\[ 8 \] : MENDELSON 
Introduction to mathematical logic 
VAN NOSTRAND 1964 
\ [9 \ ]  : WANG H. 
La place de la modalit~ dans un syst~me de 
traduction automatique trilingue 
Fran~ais-Anglals-Chinois. 
Thase, NANCY 1983 
15 
