Proceedings of the 2010 Conference on Empirical Methods in Natural Language Processing, pages 892?901,
MIT, Massachusetts, USA, 9-11 October 2010. c?2010 Association for Computational Linguistics
Automatic Comma Insertion for Japanese Text Generation
Masaki Murata
Graduate School of
Information Science,
Nagoya University, Japan
murata@el.itc.nagoya-u.ac.jp
Tomohiro Ohno
Graduate School of
International Development,
Nagoya University, Japan
ohno@nagoya-u.jp
Shigeki Matsubara
Graduate School of
Information Science,
Nagoya University, Japan
matubara@nagoya-u.jp
Abstract
This paper proposes a method for automat-
ically inserting commas into Japanese texts.
In Japanese sentences, commas play an im-
portant role in explicitly separating the con-
stituents, such as words and phrases, of a sen-
tence. The method can be used as an ele-
mental technology for natural language gen-
eration such as speech recognition and ma-
chine translation, or in writing-support tools
for non-native speakers. We categorized the
usages of commas and investigated the ap-
pearance tendency of each category. In this
method, the positions where commas should
be inserted are decided based on a machine
learning approach. We conducted a comma
insertion experiment using a text corpus and
confirmed the effectiveness of our method.
1 Introduction
In Japanese sentences, commas are inserted to mark
word boundaries that might be otherwise unclear be-
cause Japanese is a non-segmented language. They
are also inserted at sharp semantic boundaries to im-
prove the readability of a sentence. While there is a
tendency about the positions where commas should
be inserted in a Japanese sentence, there is no clear
standard for these positions. Therefore, it is hard
for non-natives of Japanese such as foreign students
to insert commas properly, and the method for au-
tomatic comma insertion is required to support sen-
tence generation by such people. In addition, this
method is expected to be useful for improving read-
ability of texts generated by automatic speech recog-
nition or machine translation.
This paper proposes a method for automatically
inserting commas into Japanese texts. There are
several usages of commas, and the positions to in-
sert commas depend on these usages. Therefore,
we grouped the usages of commas into nine cate-
gories, and investigated the appearance tendency for
each category to find the effective features of ma-
chine learning by using Japanese newspaper arti-
cles. Based on the analysis of comma positions, our
method decides whether or not to insert a comma
at each bunsetsu1 boundary in an input sentence by
machine learning.
We conducted an experiment on comma insertion
using the Kyoto Text Corpus (Kurohashi and Nagao,
1998), and obtained higher recall and precision than
those of the baseline, leading us to confirm the ef-
fectiveness of our method.
This paper is organized as follows: The next sec-
tion presents related works. Section 3 gives prelim-
inary analyses. Section 4 explains how our comma
insertion method works. An experiment and discus-
sions are presented in Sections 5 and 6, respectively.
2 Related Works
There have been many investigations on comma in-
sertion into output texts of speech recognition sys-
tems to improve the readability (Christensen et al,
2001; Kim and Woodland, 2001; Liu et al, 2006;
Shimizu et al, 2008). Their methods insert commas
using pause information of speakers, based on the
idea that a point at which a speaker takes a breath
partly corresponds to a point where a comma is in-
serted. However, since pause information cannot be
obtained from texts, we cannot use this approach be-
cause our targets are written texts.
In addition, there have been some investigations
1Bunsetsu is a linguistic unit in Japanese that roughly corre-
sponds to a basic phrase in English. A bunsetsu consists of one
independent word and zero or more ancillary words.
892
on comma insertion into non-Japanese written texts
(White and Rajkumar, 2008; Guo et al, 2010). In
Japanese, there are several usages of commas, and
some usages are specific to Japanese due to its lin-
guistic nature. Therefore, just adopting the above
mentioned methods, which have been developed
to process non-Japanese texts, is not sufficient to
enable high-quality comma insertion into Japanese
sentences. Development of a method based on the
detailed analysis of Japanese commas is required.
Furthermore, there have been some investiga-
tions on comma insertion into Japanese written texts
(Hayashi, 1992; Suzuki et al, 1995). These investi-
gations have adopted rule-based methods. However,
the number of their rules is not necessarily sufficient,
and no quantitative evaluation has been performed.
3 Analyses on Comma Usages
There have been several discussions on commas,
including the draft of ?Kutou-hou (punctuation)?
made by Archives Division, Minister?s Secretariat,
Japanese Ministry of Education, Science and Cul-
ture in 1906. There are several usages of commas,
and depending on the usage, the types of positions
where commas are inserted are different. First, we
examined some previous publications on commas
(Honda, 1982; Inukai, 2002; Shogakukan?s editior-
ial department, 2007). Based on the results of the ex-
amination, we classified the usages of commas into
nine categories shown in Table 1. Here, commas
in Japanese sentences and commas in English sen-
tences have some common roles. In Japanese sen-
tences, some commas have the same roles as com-
mas in English sentences, but some commas have
roles specific to Japanese due to its linguistic nature
such as ?Japanese is a non-segmented language? or
?Japanese has kanji characters and katakana charac-
ters.?
In our study, positions where a comma should
be inserted are detected by using machine learning.
We investigated the Kyoto Text Corpus version 4.0
(Kurohashi and Nagao, 1998) to find the effective
features. The Kyoto Text Corpus is a collection of
Japanese articles of Mainichi newspaper. We used
the articles on January 1st and from January 3rd to
11th in 1995 as the analysis data. Table 2 shows
the size of the data. The data had been manually
Table 1: Categorization of usages of commas
# usage of comma
1 commas between clauses
2 commas indicating clear dependency relations
3 commas for avoiding reading mistakes and
reading difficulty
4 commas indicating the subject
5 commas inserted after a conjunction or
adverb at the beginning of a sentence
6 commas inserted between parallel words or
phrases
7 commas inserted after an adverbial phrase to
indicate time
8 commas emphasizing the adjacent word
9 other
Table 2: Size of the analysis data
sentences 11,821
bunsetsus 117,501
characters 503,970
commas 16,595
characters per sentence 42.63
annotated with information on morphological anal-
ysis, bunsetsu segmentation and dependency2 anal-
ysis. Clause boundaries were detected by the clause
boundary detection program CBAP (Kashioka and
Maruyama, 2004).
Out of all the inserted commas, only 1.43%
were inserted at positions which were not bunsetsu
boundaries. Therefore, we analyzed only commas
inserted at bunsetsu boundaries. Of 105,680 bun-
setsu boundaries, commas were inserted at 16,357
bunsetsu boundaries, that is, the rate of comma
insertion was 15.48%. In the following sections,
we focus on morphemes, clause boundaries, depen-
dency relation and the number of characters between
commas, and investigate their relations with com-
mas.
3.1 Commas between Clauses
If a sentence consists of several clauses, inserting
a comma between clauses makes clear the sentence
2A dependency in a Japanese sentence is a modification re-
lation in which a modifier bunsetsu depends on a modified bun-
setsu. That is, the modifier bunsetsu and the modified bunsetsu
work as a modifier and a modifyee, respectively.
893
Table 3: Rates of comma insertion according to the clause
boundary type
type of clause boundary ratio of comma
insertion (%)
topicalized element-wa 16.94 (1,446/8,536)
adnominal clause 0.72 (43/5,960)
continuous clause 84.57 (2,685/3,175)
compound clause-te 23.31 (394/1,690)
quotational clause 4.40 (74/1,680)
supplement clause 17.53 (245/1,398)
discourse marker 60.13 (650/1,081)
compound clause-ga 93.85 (946/1,008)
compound clause-de 84.52 (606/717)
condition clause-to 81.66 (423/518)
structure. Therefore, a clause boundary is consid-
ered to be a strong candidate of a position where a
comma is inserted. For example, in the following
sentence3:
? ??????????????????????
?????????????????????
(Toward lifting the sanctions imposed on Iraq by
United Nations, the aim seems to be to request fur-
ther cooperation from France, which has close ties
to Iraq.)
a comma is inserted at the clause boundary right af-
ter the continuous clause ???????????
??? (Toward lifting the sanctions imposed
on Iraq by United Nations).? Like this example, the
same usage of commas is seen in English as well.
In the analysis data, there existed 29,278 clause
boundaries excluding sentence breaks. Among
them, commas were inserted at 8,805 positions
(30.01%). The rate is higher than that of bunsetsu
boundaries. This indicates that commas tend to be
inserted at clause boundaries.
We investigated the rate of comma insertion about
114 types4 of clause boundaries. Table 3 shows the
top 10 clause boundary types according to the oc-
currence frequency, and the rates of comma inser-
3We underlined commas which we mentioned in the exam-
ple and the corresponding positions in the translation of the ex-
ample.
4In our research, we used the types of clause boundaries de-
fined by the Clause Boundary Annotation Program (Kashioka
and Maruyama, 2004).
!"#$%&'()*+,-./.012345678#9:;1<=>?@ABC6*DE>1FG+HIJKLMBC6N!"#$%&'()*+',+$-.,/0.&$($,.#1.2$/3$1+.$42/*1+$/3$1+.$*/256)$1+.$&12/#4$72.&.#,.$/3$8+'#($#/1$/#59$-2'#4&$+/7.$-:1$(5&/$,(:&.&$6'33',:51$72/-5.0&;<!!"#$%&$" !'%(%#'%#)*+,%-.&/0#
!"#
!"#$%&#'!()*
$%&'()*
+#,&-$&(#!"#$%&#.(!'$%
+,-
/&,!0&1
./.0
2-#312+
12345
1$(!-.
67#
!"#4%2-+
89:
5(&1&-,&
;<=
%!5&
>?@AB5*CD=
-!$#!-)6#/(2-.1
EF+
*2""2,7)$
GHI
5(!/)&01
JKLAB5
,+71&1
Figure 1: Commas making clear dependency relations
tion. In cases of ?continuous clause? and ?com-
pound clause-de,? the rates were higher than 84%.
On the other hand, in cases of ?adnominal clause?
and ?quotational clause,? the rates were lower than
5%. This means that the likelihoods of comma inser-
tion are different according to the clause boundary
type.
3.2 Commas and Dependency Structure
Commas have a role to make dependency relations
clearer. Commas tend to be inserted right after a
bunsetsu that depends on a distant bunsetsu. In Fig-
ure 1, although the bunsetsu ?? ? (in Asia)?
depends on the bunsetsu ?? ? ? (causes),?
if the comma right after the bunsetsu ????? (in
Asia)? is not inserted, the readers might mistakenly
understand that the bunsetsu ????? (in Asia)?
depends on the next bunsetsu ?????? (strong).?
To avoid the mistake, the comma is inserted.
In the analysis data, there existed 66,984 bunset-
sus which depend on the next bunsetsu. Among the
bunsetsu boundaries right after them, 2,302 (3.44%)
were the positions where a comma was inserted. On
the other hand, in the case of a bunsetsu bound-
ary right after a bunsetsu which does not depend on
the next bunsetsu, the rate of comma insertion was
36.32% (14,055/38,696).
In addition, when the modifyee of a bunsetsu is
located outside the clause containing the bunsetsu,
i.e. to the right of the clause end, commas are con-
sidered to be more frequently inserted right after the
bunsetsu because such bunsetsu causes more com-
plex dependency structure. The rate of comma in-
sertion right after such bunsetsu is 54.24%.
894
3.3 Commas for Avoiding Reading Mistakes
and Reading Difficulty
Although, unlike English, Japanese is a non-
segmented language, word boundaries are easy to
detect because Japanese has three types of charac-
ters; hiragana characters, katakana characters, and
kanji characters. However, if the same types of char-
acters appear sequentially, readers may make a read-
ing mistake or feel difficulty in reading them. To
avoid such mistakes and difficulty, there is a usage
of commas specific to Japanese.
In the following example, a comma is inserted
between two sequentially appearing words ??
(burned)? and ?? (ashes)? both of which consist of
only kanji characters.
? ?????????????????????
??????????????????????
??????????(He seemed to acknowledge
that he had carried the corpse of Mr. Kawasaki to an
acquaintance in Hanasaki, Katashina-mura, Tone-
gun, Gunma Prefecture, burned it and abandoned
its ashes in the mountain forest in Katashina-mura.)
The comma was inserted because if there was no
comma, the word boundary would become unclear
and reading difficulty would be caused. Among
2,409 bunsetsu boundaries over which kanji charac-
ters appeared sequentially, commas were inserted at
2,188 (90.83%) bunsetsu boundaries. In the case of
katakana characters, the rate was 97.69% (211/216).
Commas tend to be inserted at most bunsetsu bound-
aries if kanji characters or katakana characters se-
quentially appear over a boundary.
3.4 Commas Indicating the Subject
Commas are considered to be inserted right after a
bunsetsu that represents the subject of a sentence.
For example, in Figure 2, a comma is inserted right
after the bunsetsu ??? (war)? to indicate that the
bunsetsu is the subject of the sentence. Here, we pay
attention to the clause boundary of the type ?topi-
calized element-wa.? The rate that commas were in-
serted at the clause boundaries ?topicalized element-
wa? was 16.94% (1,446/8,536). This rate is almost
the same as that of bunsetsu boundaries. On the
other hand, the commas inserted at the clause bound-
aries ?topicalized element-wa? accounted for 8.84%
(1,446/16,357) of all the inserted commas.
!"#$%&'()*+,-./"01234567-809:;<34=>?@ABC!"#$%&'#()*#+&#,)-.%/+) 0)1#2345#)()6#732%&'#8*%-#)#/393$%4-3&5:#)&/#0)1#+1%$)53/#503#*+93*#8*%-#4%$$;5+%&#35<=>!"#$%&'!"#$%&'()!% ()*("+ *+,,%- -."/./0("+ 01231-(&#%)/2/*(3&/"4 4565%6#0/34#%,%7 7/45/#-!2/- 89:;231-(&#3(**84!("#/49: <=>?@A5%6#!6(*%4/)!!"#$%&$" !'%(%#'%#)*+,%-.&/0#
Figure 2: Comma insertion at the clause boundary ?topi-
calized element-wa?
In the case of the clause boundary ?topicalized
element-wa? right after a bunsetsu which does not
depend on the next bunsetsu (e.g., the bunsetsu ??
? (war)? in Figure 2), the rate of comma inser-
tion was 20.71% (1,426/6,886). The rate is higher
than that of all the clause boundaries ?topicalized
element-wa.? This shows that commas tend to be
especially inserted at the ?topicalized element-wa?
right after bunsetsus which do not depend on the
next bunsetsu.
3.5 Commas after Conjunction or Adverb
Commas tend to be inserted right after a conjunc-
tion or an adverb located at the beginning of a sen-
tence. These commas correspond to English com-
mas which are inserted right after a word such as
?however? and ?furthermore? located at the begin-
ning of a sentence.
? ??????????????????????
(However, I do not feel like agreeing on it.)
In the analysis data, there existed 695 bunset-
sus whose rightmost morpheme is a conjunction
and which are located at the beginning of a sen-
tence. Among them, commas were inserted right
after 498 (71.65%) bunsetsus. In the case of bun-
setsus whose rightmost morpheme is an adverb, the
rate was 30.97% (140/452).
3.6 Commas Inserted between Parallel Words
or Phrases
Commas have a function which makes clear sepa-
ration between parallel words or phrases. The fol-
lowing example shows commas separating parallel
nouns.
895
? ??????????????????????
????????????????????(The
United Nations should play a lot of roles in a broad
range of fields, such as the global environment,
population, and food.)
In this example, commas are inserted to separate
parallel nouns ? ? (environment),? ?? (popula-
tion)? and ? ? (food)?. In English, there are com-
mas which perform the same role. In fact, commas
were inserted between ?environment? and ?popula-
tion? and between ?population? and ?food? in the
translation of the above example. When bunsetsus
whose rightmost morpheme is a noun appear se-
quentially, the rate of comma insertion between such
bunsetsus is 59.39% (3,330/5,607).
Also, commas are inserted to separate parallel
phrases. In the following example,
? ??????????????????????
??????????????????????
????????(The menu is decided by avoid-
ing the menu the Prime Minister ate on the previous
night, and by considering the balance between the
Japanese food and the European food.)
a comma is inserted right after the bunsetsu ???
? (avoiding)? to make clear separation between the
parallel phrases ?????????? (by avoid-
ing the menu)? and ??????????????
?? (by considering the balance between the
Japanese food and the European food).? The rate
of comma insertion between two parallel phrases is
79.89% (751/940). This is much higher than that of
bunsetsu boundaries, indicating that commas tend to
be inserted when phrases are paralleled.
3.7 Number of Characters between Commas
If there are too many commas at a short distance,
the sentence becomes hard to read. Therefore, the
number of characters between commas is expected
to be not too small. Also, because a long sequence
of characters without a comma is generated if the
distance between commas is very long, the occur-
rence frequency of such sequences of characters is
considered to be low.
We investigated the number of characters between
commas and its occurrence frequency. Figure 3
!
"!!
#!!
$!!
%!!
&!!
'!!
(!!
)!!
" $ & ( * "" "$ "& "( "* #" #$ #& #( #* $" $$ $& $( $* %" %$
!"
"#
$%
&"
%'
($
%)
#%
&"
*
!"#$%&'()'*+,&,*-%&.
Figure 3: Number of characters between commas and its
occurrence frequency
shows the results of investigation. When the num-
ber of characters between commas is either large or
small, the occurrence frequency is low.
4 Comma Insertion Method
In our method, a sentence, on which morphologi-
cal analysis, bunsetsu segmentation, clause bound-
ary analysis and dependency analysis have been per-
formed, is considered the input. Our method de-
cides whether or not to insert a comma at each bun-
setsu boundary in an input sentence. Based on the
analysis results in Section 3, our method adopts the
bunsetsu boundaries as candidate positions where a
comma is inserted. Our method identifies the most
appropriate combination among all combinations of
positions where a comma can be inserted, by using
the probabilistic model. In this paper, input sen-
tences which consist of n bunsetsus are represented
by B = b1 ? ? ? bn, and the results of comma inser-
tion by R = r1 ? ? ? rn. Here, ri is 1 if a comma
is inserted right after bunsetsu bi, and 0 otherwise.
We indicate the j-th sequence of bunsetsus created
by dividing an input sentence into m sequences as
Lj = b
j
1 ? ? ? b
j
nj (1 ? j ? m), and then, r
j
k = 0 if
1 ? k < nj , and rjk = 1 if k = nj .
4.1 Probabilistic Model for Comma Insertion
When an input sentence B is provided, our method
identifies the comma insertion R that maximizes
the conditional probability P (R|B). Assuming that
whether or not to insert a comma right after a bun-
setsu is independent of other commas except the
896
Table 4: Features used for the maximum entropy method
morphological the rightmost independent morpheme, i.e. head word, (part-of-speech and inflected form) and
information rightmost morpheme (part-of-speech) of a bunsetsu bjk
the rightmost morpheme (a surface form) of bjk if the rightmost morpheme is a particle
the first morpheme (part-of-speech) of bjk+1
commas inserted whether or not a clause boundary exists right after bjk
between clauses type of a clause boundary right after bjk if there exists a clause boundary
commas indicating whether or not bjk depends on the next bunsetsu
clear dependency whether or not bjk depends on a bunsetsu located after the final bunsetsu of the clause including
relations the next bunsetsu of bjk
whether or not bjk is depended on by the bunsetsu located right before it
whether or not the dependency structure of a sequence of bunsetsus between bjk and b
j
1 is closed
commas avoiding whether or not both the rightmost morpheme of bjk and first morpheme of b
j
k+1 are kanji
reading mistakes and characters
reading difficulty whether or not both the rightmost morpheme of bjk and first morpheme of b
j
k+1 are katakana
characters
commas indicating whether or not there exists a clause boundary ?topicalized element-wa? right after bjk and b
j
k
the subject depends on the next bunsetsu
whether or not there exists a clause boundary ?topicalized element-wa? right after bjk and the
string of characters right before bjk is ? ? (dewa)?
the number of characters in a phrase indicating the subject5 if there exists a clause boundary
?topicalized element-wa? right after bjk
whether or not a clause boundary ?topicalized element-wa? exists right after bjk and a bunsetsu
whose rightmost morpheme is a verb depends on the modified bunsetsu of bjk
commas inserted whether or not bjk appears at the beginning of a sentence and its rightmost morpheme is a
after a conjunction conjunction
or adverb at the be-
ginning of a sentence
whether or not bjk appears at the beginning of a sentence and its rightmost morpheme is an
adverb
commas inserted whether or not both the rightmost morphemes of bjk and b
j
k+1 are nouns
between parallel whether or not a predicate at the sentence end is depended on by bjk whose rightmost
words or phrases independent morpheme is a verb and by any of the bunsetsus which are located after bjk and of
which the rightmost independent morpheme is a verb
number of characters one of the following 4 categories if the number of characters from bj1 to bjk is found there
from bj1 to bjk ([num = 1], [2 ? num ? 3], [4 ? num ? 21], [22 ? num])
one appearing immediately before that bunsetsu,
P (R|B) can be calculated as follows:
P (R|B) (1)
=P (r11 = 0, ? ? ? , r
1
n1?1 = 0, r
1
n1 = 1, ? ? ? ,
rm1 = 0, ? ? ? , r
m
nm?1 = 0, r
m
nm = 1|B)
?=P (r11 = 0|B)? ? ? ?
?P (r1n1?1 = 0|r
1
n1?2 = 0, ? ? ? , r
1
1 = 0, B)
?P (r1n1 = 1|r
1
n1?1 = 0, ? ? ? , r
1
1 = 0, B)? ? ? ?
?P (rm1 = 0|r
m?1
nm?1 = 1, B)? ? ? ?
?P (rmnm?1 = 0|r
m
nm?2= 0,? ? ?, r
m
1 = 0, r
m?1
nm?1= 1, B)
?P (rmnm = 1|r
m
nm?1 = 0, ? ? ? , r
m
1 = 0, r
m?1
nm?1 = 1, B)
where P (rjk = 1|r
j
k?1 = 0, ? ? ? , r
j
1 = 0, r
j?1
nj?1 =
1, B) is the probability that a comma is inserted right
after a bunsetsu bjk when the sequence of bunset-
sus B is provided and the position of j-th comma is
identified. Similarly, P (rjk = 0|r
j
k?1 = 0, ? ? ? , r
j
1 =
0, rj?1nj?1 = 1, B) is the probability that a comma
is not inserted right after a bunsetsu bjk. These
probabilities are estimated by the maximum entropy
method. The result R which maximizes the condi-
tional probability P (R|B) is regarded as the most
appropriate result of comma insertion, and calcu-
lated by dynamic programming.
897
4.2 Features on Maximum Entropy Method
To estimate P (rjk = 1|r
j
k?1 = 0, ? ? ? , r
j
1 =
0, rj?1nj?1 = 1, B) and P (r
j
k = 0|r
j
k?1 = 0, ? ? ? , r
j
1 =
0, rj?1nj?1 = 1, B) by the maximum entropy method,
we used the features in Table 4 based on the analysis
described in Section 3.
5 Experiment
To evaluate the effectiveness of our method, we con-
ducted an experiment using a Japanese text corpus.
5.1 Outline of Experiment
As the experimental data, we used the newspaper ar-
ticles in the Kyoto Text Corpus version 4.0 (Kuro-
hashi and Nagao, 1998). We used the articles from
January 14th to 17th as the test data. The training
data is same as the analysis data. Table 5 shows the
size of the test data. Here, we used the maximum
entropy method tool (Le, 2008) with the default op-
tions except ?-i 2000.?
In the evaluation, we obtained the recall, the pre-
cision and their harmonic mean, i.e., F-measure.
The recall and precision are respectively defined as
follows.
recall=
# of correctly inserted commas
# of commas in the correct data
precision=
# of correctly inserted commas
# of inserted commas
In our research, to realize automatic comma in-
sertion with high quality, we analyzed each usage of
commas and decided the features for the ME method
based on the analysis. To confirm the effectiveness
of our features, we established the baseline method
as a comparative method whereby commas are in-
serted by the ME method in which only simple mor-
phological information is used. The baseline method
uses the morphological information in Table 4 and
the information of the rightmost morpheme (a sur-
face form) of a bunsetsu as features.
5.2 Experimental Results
Table 6 shows the experimental results of the base-
line and our method. The recall and precision
were 69.13% and 84.13% respectively, and we con-
firmed that our method had higher performance than
Table 5: Size of test data
sentences 4,659
bunsetsus 46,511
characters 198,899
commas 6,549
characters per sentence 42.69
Table 6: Experimental results
recall precision F-measure
our 69.13% 84.13% 75.90
method (4,527/6,549) (4,527/5,381)
baseline 51.38% 70.90% 59.58
(3,365/6,549) (3,365/4,746)
the baseline method. The percentage of sentences
wherein all commas were correctly inserted was
55.81%.
Figure 4 shows the comparison between the re-
sults of our method and the baseline method. The
baseline method was not able to insert commas right
after the bunsetsu ???????? (are floated)? or
?? ? ?? (not decided)? but inserted com-
mas at unnatural positions such as between ? ??
(calling himself)? and ?????? (the vice com-
mander).? On the other hand, our method was able
to insert commas properly at such bunsetsu bound-
aries.
6 Discussion
6.1 Error Analysis
Among positions where commas existed in the test
data, there existed 2,022 positions where our method
did not insert commas. Among them, 862 were
clause boundaries, and the clause boundary ?topical-
ized element-wa? accounted for 53.36% (460/862)
of them. There were a lot of clause boundaries of
the type ?topicalized element-wa,? and the number
of commas inserted at such boundaries was large.
But, the rate of comma insertion itself was not very
high. We can say that the four features about ?topi-
calized element-wa? did not always work well. Ta-
5Phrases indicating the subject is a sequence of bunsetsus
consisting of bjk and all bunsetsus that are connected to b
j
k when
we trace their dependency relationship in modifier-to-modifyee
direction.
898
!"#$%&'()*+,-./0-123456789:;<0=>?@ABCD=EFGHIJKLMGNBOPQRSTUO=BV$WUXYGZ[\O]^MWT_`=abcdef
!"#$%#&'()*)+,+-&.)/&0/1%.2&3)*/4&3+$*5/.&(/3,/.+,2-&6/.(%50#
'7+8%5*-&.)/&9+2#,&#4&':%9# 3*.2&*5&;)*9+5/- <%5*# =+.#2+9+-&
.)/&4#,9/,&>+$#,&9*5*(./,&+50&.)/&7,*./,&6+*3)* ;+8+*2+ +,/&
4>#+./0&+(&.)/&3+50*0+./-)#7/?/,-&(*53/&.)/&4,+9/7#,8&#4&
.)/&1,/0*3+./0&1#>*.*3+>&1+,.2&*(&5#.&0/3*0/0- .)/&3##,0*5+.*#5&
9+8/(&>*..>/&)/+07+2@&A
!"#$%&'(!)*
!"#$%&'()*+,-./0-123456789:;<0>?@ABCD=EFGHIJKLMGNBOPQRSTUOBV$WUXYGZ[\O]^MWT_`abcdef
!"#$%#&'()*)+,+-&.)/&0/1%.2&3)*/4&3+$*5/.&(/3,/.+,2-&6/.(%50#
'7+8%5*-&.)/&9+2#,&#4&':%9# 3*.2&*5&;)*9+5/ <%5*# =+.#2+9+-&
.)/&4#,9/,&>+$#,&9*5*(./,&+50&.)/&7,*./,&6+*3)* ;+8+*2+ +,/&
4>#+./0&+(&.)/&3+50*0+./ )#7/?/,-&(*53/&.)/&4,+9/7#,8&#4&
.)/&1,/0*3+./0&1#>*.*3+>&1+,.2&*(&5#.&0/3*0/0 .)/&3##,0*5+.*#5&
9+8/(&>*..>/&)/+07+2@&A
+,-&./0&*
ghij$NkU/lm-Ono:&pUO=qrGlm-cstf
!B)*>/&.)/&?*3/&3#99+50/, 3+>>*5C&)*9(/>4&D+,3#(&+11/+,(&
*5&1%$>*3-&+5&+3.%+>&3#99+50/,&*(&%53/,.+*5@A
!"#$%&'(!)*
ghij$NkU=/lm-Ono:&pUO=qrGlm-cstf
!B)*>/&.)/&?*3/&3#99+50/,- 3+>>*5C&)*9(/>4&D+,3#(&+11/+,(&*5&
1%$>*3-&+5&+3.%+>&3#99+50/,&*(&%53/,.+*5@A
+,-&./0&*
Figure 4: Comparison of the results of our method and
baseline method
ble 7 shows the results of comma insertion at the
clause boundaries ?topicalized element-wa.? While
there existed 601 commas at such boundaries in the
test data, only 141 commas were inserted correctly.
We need to consider more effective features about
?topicalized element-wa.?
As for other cases, there existed 130 bunsetsu
boundaries between parallel words where commas
were not inserted. One example of such case is
shown below.
? correct data:
? ???? ?????????
????????????????????
? (Put pork backfat, garlic, ginger and shredded
green onion in a bowl, and add red bell peppers for
color.)
Table 7: Result of comma insertion at the clause bound-
aries ?topicalized element-wa.?
recall precision F-measure
23.46% 59.49% 33.65
(141/601) (141/237)
? our method:
??????????????????????
??????????????????????
(Put pork backfat garlic, ginger and shredded green
onion in a bowl, and add red bell peppers for color.)
In the correct data, a comma was inserted between
the bunsetsu ?? (backfat)? and ????? (gar-
lic).?
If a comma should be inserted right after the bun-
setsu ?? ? (backfat),? the number of characters be-
tween commas would become too small to be judged
as appropriate by the proposed method. So, the fea-
ture about the number of characters between com-
mas may have had harmful effects there. On the
other hand, a comma was inserted properly between
the bunsetsu ????? (garlic)? and ? ???
(ginger).? This is because katakana characters ap-
peared sequentially in addition to appearing as par-
allel nouns.
6.2 Unnatural Comma Insertion
When commas are inserted at obviously unnatural
positions, they have a major impact on the under-
standing of a sentence by readers. Here, we inves-
tigated how many commas had been inserted at ob-
viously unnatural positions by our method. For the
article on January 14th (217 sentences, 2,349 bun-
setsus) in the test data, we examined 47 commas in-
serted incorrectly. Three persons decided whether
or not the inserted commas were obviously unnat-
ural through consultations. Concretely, when all of
the three persons felt that an inserted comma would
make readers understand wrongly the meaning of
the sentence, the comma was judged to be obviously
unnatural.
Among 47 commas, 4 commas were judged obvi-
ously unnatural. This result shows that our method
is capable of inserting commas at natural positions
on some level.
899
Table 8: Comparison with human judgement
recall precision F-measure
by human 78.30% 80.58% 79.42
(249/318) (249/309)
our method 71.07% 82.78% 76.48
(226/318) (226/273)
6.3 Comparison with Human Judgement
In our experiment, we evaluated the results of
comma insertion of our method by comparing them
with the correct data. However, the sufficient level
to be reached by automatic comma insertion is un-
certain. Here, we evaluated our method by com-
paring them with the results of comma insertion by
another person. By using the same data as used in
the subsection 6.2, we conducted an experiment on
comma insertion by an annotator who was familiar
with writing Japanese documents. Table 8 shows the
recall, the precision and the F-measure. The second
row shows the results of our method for the same
data. As the F-measure of the annotator was 79.42,
it turned out that comma insertion task was diffi-
cult even for humans. For F-measure, our method
achieved 96.30% (76.48/79.42) of the annotator?s re-
sult. Also, the precision of our method was 82.78%.
Although the comma insertion task is difficult, our
method was able to properly insert commas.
7 Conclusion
This paper proposed a method for inserting commas
into Japanese texts. Our method appropriately in-
serts commas based on the machine learning method
using such features as morphemes, dependencies
and clause boundaries. An experiment by using the
Kyoto Text Corpus (Kurohashi and Nagao, 1998)
showed an F-measure of 75.90, and we confirmed
the effectiveness of our method.
The analysis of the experimental results showed
that our method cannot insert commas of the par-
ticular usage. As a future work, it is necessary to
find more useful features for commas of this usage
and improve the recall of our method. Also, we will
examine ?commas emphasizing the adjacent word?
which were not included in our targets.
Acknowledgments
This research was partially supported by the Grant-
in-Aids for Scientific Research (B) (No. 22300051)
and Young Scientists (B) (No. 21700157), and by
the Continuation Grants for Young Researchers of
The Asahi Glass Foundation.
References
Heidi Christensen, Yoshihiko Gotoh, and Steve Renals.
2001. Punctuation annotation using statistical prosody
models. In Proceedings of ISCA Workshop on Prosody
in Speech Recognition and Understanding, pages 35?
40.
Yuqing Guo, Haifeng Wang, and Josef van Genabith.
2010. A linguistically inspired statistical model for
Chinese punctuation generation. ACM Transactions
on Asian Language Information Processing, 9(2):6:1?
6:27.
Yoshihiko Hayashi. 1992. A three-level revision model
for improving Japanese bad-styled expressions. In
Proceeding of 14th International Conference on Com-
putational Linguistics, pages 665?671.
Katsuichi Honda. 1982. Nihongo no sakubun gijutsu
(Japanese writing skill). Asahi Shimbun Publications
Inc. (In Japanese).
Takashi Inukai. 2002. Moji hyouki tankyuhou (Method of
questioning characters and notations). Asakura Pul-
ishing Co., Ltd. (In Japanese).
Hideki Kashioka and Takehiko Maruyama. 2004. Seg-
mentation of semantic unit in Japanese monologue.
In Proceedings of International Conference on Speech
Language Technology and Oriental COCOSDA, pages
87?92.
Ji-hwan Kim and P. C. Woodland. 2001. The use of
prosody in a combined system for punctuation gener-
ation and speech recognition. In Proceedings of 7th
European Conference on Speech Communication and
Technology, pages 2757?2760.
Sadao Kurohashi and Makoto Nagao. 1998. Building
a Japanese parsed corpus while improving the parsing
system. In Proceedings of 1st International Confer-
ence on Language Resources and Evaluation, pages
719?724.
Zhang Le. 2008. Maximum entropy modeling toolkit for
python and c++. http://homepages.inf.ed.
ac.uk/s0450736/maxent toolkit.html.
[Online; accessed 1-March-2008].
Yang Liu, Elizabeth Shriberg, Andreas Stolcke, Dustin
Hillard, Mari Ostendorf, and Mary Harper. 2006. En-
riching speech recognition with automatic detection of
900
sentence boundaries and disfluencies. IEEE Trans-
actions on Audio, Speech, and Language Processing,
14(5):1526?1540.
Tohru Shimizu, Satoshi Nakamura, and Tatsuya Kawa-
hara. 2008. Effect of punctuation marks for speech
translation unit boundary detection. IEICE technical
report. Speech, 108(338):127?131. (In Japanese).
Shogakukan?s editiorial department. 2007. kutoten,
kigou, hugou katuyoujiten (dictionary of punctuations
and symbols ). Shogakukan. (In Japanese).
Eiji Suzuki, Shizuo Shimada, Kunio Kondo, and Hisashi
Sato. 1995. Automatic recognition of optimal punc-
tuation in Japanese documents. In Proceedings of
50th National Convention of IPSJ, 50(3):185?186. (In
Japanese).
Michael White and Rajakrishnan Rajkumar. 2008.
A more precise analysis of punctuation for broad-
coverage surface realization with CCG. In Proceed-
ings of Workshop on Grammar Engineering Across
Frameworks, pages 17?24.
901
