Proceedings of the 49th Annual Meeting of the Association for Computational Linguistics, pages 653?662,
Portland, Oregon, June 19-24, 2011. c?2011 Association for Computational Linguistics
Phrase-Based Translation Model for Question Retrieval in Community
Question Answer Archives
Guangyou Zhou, Li Cai, Jun Zhao?, and Kang Liu
National Laboratory of Pattern Recognition
Institute of Automation, Chinese Academy of Sciences
95 Zhongguancun East Road, Beijing 100190, China
{gyzhou,lcai,jzhao,kliu}@nlpr.ia.ac.cn
Abstract
Community-based question answer (Q&A)
has become an important issue due to the pop-
ularity of Q&A archives on the web. This pa-
per is concerned with the problem of ques-
tion retrieval. Question retrieval in Q&A
archives aims to find historical questions that
are semantically equivalent or relevant to the
queried questions. In this paper, we propose
a novel phrase-based translation model for
question retrieval. Compared to the traditional
word-based translation models, the phrase-
based translation model is more effective be-
cause it captures contextual information in
modeling the translation of phrases as a whole,
rather than translating single words in isola-
tion. Experiments conducted on real Q&A
data demonstrate that our proposed phrase-
based translation model significantly outper-
forms the state-of-the-art word-based transla-
tion model.
1 Introduction
Over the past few years, large scale question and
answer (Q&A) archives have become an important
information resource on the Web. These include
the traditional Frequently Asked Questions (FAQ)
archives and the emerging community-based Q&A
services, such as Yahoo! Answers1, Live QnA2, and
Baidu Zhidao3.
?Correspondence author: jzhao@nlpr.ia.ac.cn
1http://answers.yahoo.com/
2http://qna.live.com/
3http://zhidao.baidu.com/
Community-based Q&A services can directly re-
turn answers to the queried questions instead of a
list of relevant documents, thus provide an effective
alternative to the traditional adhoc information re-
trieval. To make full use of the large scale archives
of question-answer pairs, it is critical to have func-
tionality helping users to retrieve historical answers
(Duan et al, 2008). Therefore, it is a meaningful
task to retrieve the questions that are semantically
equivalent or relevant to the queried questions. For
example in Table 1, given questionQ1,Q2 can be re-
turned and their answers will then be used to answer
Q1 because the answer ofQ2 is expected to partially
satisfy the queried question Q1. This is what we
called question retrieval in this paper.
The major challenge for Q&A retrieval, as for
Query:
Q1: How to get rid of stuffy nose?
Expected:
Q2: What is the best way to prevent a cold?
Not Expected:
Q3: How do I air out my stuffy room?
Q4: How do you make a nose bleed stop quicker?
Table 1: An example on question retrieval
most information retrieval models, such as vector
space model (VSM) (Salton et al, 1975), Okapi
model (Robertson et al, 1994), language model
(LM) (Ponte and Croft, 1998), is the lexical gap (or
lexical chasm) between the queried questions and
the historical questions in the archives (Jeon et al,
2005; Xue et al, 2008). For example in Table 1, Q1
and Q2 are two semantically similar questions, but
they have very few words in common. This prob-
653
lem is more serious for Q&A retrieval, since the
question-answer pairs are usually short and there is
little chance of finding the same content expressed
using different wording (Xue et al, 2008). To solve
the lexical gap problem, most researchers regarded
the question retrieval task as a statistical machine
translation problem by using IBM model 1 (Brown
et al, 1993) to learn the word-to-word translation
probabilities (Berger and Lafferty, 1999; Jeon et al,
2005; Xue et al, 2008; Lee et al, 2008; Bernhard
and Gurevych, 2009). Experiments consistently re-
ported that the word-based translation models could
yield better performance than the traditional meth-
ods (e.g., VSM. Okapi and LM). However, all these
existing approaches are considered to be context in-
dependent in that they do not take into account any
contextual information in modeling word translation
probabilities. For example in Table 1, although nei-
ther of the individual word pair (e.g., ?stuffy?/?cold?
and ?nose?/?cold?) might have a high translation
probability, the sequence of words ?stuffy nose? can
be easily translated from a single word ?cold? in Q2
with a relative high translation probability.
In this paper, we argue that it is beneficial to cap-
ture contextual information for question retrieval.
To this end, inspired by the phrase-based statistical
machine translation (SMT) systems (Koehn et al,
2003; Och and Ney, 2004), we propose a phrase-
based translation model (P-Trans) for question re-
trieval, and we assume that question retrieval should
be performed at the phrase level. This model learns
the probability of translating one sequence of words
(e.g., phrase) into another sequence of words, e.g.,
translating a phrase in a historical question into an-
other phrase in a queried question. Compared to the
traditional word-based translation models that ac-
count for translating single words in isolation, the
phrase-based translation model is potentially more
effective because it captures some contextual infor-
mation in modeling the translation of phrases as a
whole. More precise translation can be determined
for phrases than for words. It is thus reasonable to
expect that using such phrase translation probabili-
ties as ranking features is likely to improve the ques-
tion retrieval performance, as we will show in our
experiments.
Unlike the general natural language translation,
the parallel sentences between questions and an-
swers in community-based Q&A have very different
lengths, leaving many words in answers unaligned
to any word in queried questions. Following (Berger
and Lafferty, 1999), we restrict our attention to those
phrase translations consistent with a good word-
level alignment.
Specifically, we make the following contribu-
tions:
? we formulate the question retrieval task as a
phrase-based translation problem by modeling
the contextual information (in Section 3.1).
? we linearly combine the phrase-based transla-
tion model for the question part and answer part
(in Section 3.2).
? we propose a linear ranking model framework
for question retrieval in which different models
are incorporated as features because the phrase-
based translation model cannot be interpolated
with a unigram language model (in Section
3.3).
? finally, we conduct the experiments on
community-based Q&A data for question re-
trieval. The results show that our proposed ap-
proach significantly outperforms the baseline
methods (in Section 4).
The remainder of this paper is organized as fol-
lows. Section 2 introduces the existing state-of-the-
art methods. Section 3 describes our phrase-based
translation model for question retrieval. Section 4
presents the experimental results. In Section 5, we
conclude with ideas for future research.
2 Preliminaries
2.1 Language Model
The unigram language model has been widely used
for question retrieval on community-based Q&A
data (Jeon et al, 2005; Xue et al, 2008; Cao et al,
2010). To avoid zero probability, we use Jelinek-
Mercer smoothing (Zhai and Lafferty, 2001) due to
its good performance and cheap computational cost.
So the ranking function for the query likelihood lan-
guage model with Jelinek-Mercer smoothing can be
654
written as:
Score(q, D) =
?
w?q
(1 ? ?)Pml(w|D) + ?Pml(w|C)
(1)
Pml(w|D) =
#(w,D)
|D|
, Pml(w|C) =
#(w,C)
|C|
(2)
where q is the queried question, D is a document, C
is background collection, ? is smoothing parameter.
#(t,D) is the frequency of term t in D, |D| and |C|
denote the length of D and C respectively.
2.2 Word-Based Translation Model
Previous work (Berger et al, 2000; Jeon et al, 2005;
Xue et al, 2008) consistently reported that the word-
based translation models (Trans) yielded better per-
formance than the traditional methods (VSM, Okapi
and LM) for question retrieval. These models ex-
ploit the word translation probabilities in a language
modeling framework. Following Jeon et al (2005)
and Xue et al (2008), the ranking function can be
written as:
Score(q, D) =
?
w?q
(1??)Ptr(w|D)+?Pml(w|C) (3)
Ptr(w|D) =
?
t?D
P (w|t)Pml(t|D), Pml(t|D) =
#(t,D)
|D|
(4)
where P (w|t) denotes the translation probability
from word t to word w.
2.3 Word-Based Translation Language Model
Xue et al (2008) proposed to linearly mix two dif-
ferent estimations by combining language model
and word-based translation model into a unified
framework, called TransLM. The experiments show
that this model gains better performance than both
the language model and the word-based translation
model. Following Xue et al (2008), this model can
be written as:
Score(q, D) =
?
w?q
(1 ? ?)Pmx(w|D) + ?Pml(w|C)
(5)
Pmx(w|D) = ?
?
t?D
P (w|t)Pml(t|D)+(1??)Pml(w|D)
(6)
D:                      ?  for good cold home remedies ? document
E:                  [for,    good,    cold,    home remedies] segmentation
F:            [for1,    best2,    stuffy nose3,    home remedy4] translation
M:                     (1?3?2?1?3?4?4?2) permutation
q:                     best home remedy for stuffy nose queried question
Figure 1: Example describing the generative procedure
of the phrase-based translation model.
3 Our Approach: Phrase-Based
Translation Model for Question
Retrieval
3.1 Phrase-Based Translation Model
Phrase-based machine translation models (Koehn
et al, 2003; D. Chiang, 2005; Och and Ney,
2004) have shown superior performance compared
to word-based translation models. In this paper,
the goal of phrase-based translation model is to
translate a document4 D into a queried question
q. Rather than translating single words in isola-
tion, the phrase-based model translates one sequence
of words into another sequence of words, thus in-
corporating contextual information. For example,
we might learn that the phrase ?stuffy nose? can be
translated from ?cold? with relative high probabil-
ity, even though neither of the individual word pairs
(e.g., ?stuffy?/?cold? and ?nose?/?cold?) might have
a high word translation probability. Inspired by the
work of (Sun et al, 2010; Gao et al, 2010), we
assume the following generative process: first the
document D is broken into K non-empty word se-
quences t1, . . . , tK , then each t is translated into a
new non-empty word sequence w1, . . . ,wK , and fi-
nally these phrases are permutated and concatenated
to form the queried questions q, where t and w de-
note the phrases or consecutive sequence of words.
To formulate this generative process, let E
denote the segmentation of D into K phrases
t1, . . . , tK , and let F denote the K translation
phrases w1, . . . ,wK ?we refer to these (ti,wi)
pairs as bi-phrases. Finally, letM denote a permuta-
tion of K elements representing the final reordering
step. Figure 1 describes an example of the genera-
tive procedure.
Next let us place a probability distribution over
rewrite pairs. Let B(D,q) denote the set of E,
4In this paper, a document has the same meaning as a histor-
ical question-answer pair in the Q&A archives.
655
F , M triples that translate D into q. Here we as-
sume a uniform probability over segmentations, so
the phrase-based translation model can be formu-
lated as:
P (q|D) ?
?
(E,F,M)?
B(D,q)
P (F |D,E) ? P (M |D,E, F ) (7)
As is common practice in SMT, we use the maxi-
mum approximation to the sum:
P (q|D) ? max
(E,F,M)?
B(D,q)
P (F |D,E) ? P (M |D,E, F ) (8)
Although we have defined a generative model for
translatingD into q, our goal is to calculate the rank-
ing score function over existing q andD, rather than
generating new queried questions. Equation (8) can-
not be used directly for document ranking because
q and D are often of very different lengths, leav-
ing many words in D unaligned to any word in q.
This is the key difference between the community-
based question retrieval and the general natural lan-
guage translation. As pointed out by Berger and Laf-
ferty (1999) and Gao et al (2010), document-query
translation requires a distillation of the document,
while translation of natural language tolerates little
being thrown away.
Thus we attempt to extract the key document
words that form the distillation of the document, and
assume that a queried question is translated only
from the key document words. In this paper, the
key document words are identified via word align-
ment. We introduce the ?hidden alignments? A =
a1 . . . aj . . . aJ , which describe the mapping from a
word position j in queried question to a document
word position i = aj . The different alignment mod-
els we present provide different decompositions of
P (q, A|D). We assume that the position of the key
document words are determined by the Viterbi align-
ment, which can be obtained using IBM model 1 as
follows:
A? = argmax
A
P (q, A|D)
= argmax
A
{
P (J |I)
J
?
j=1
P (wj |taj )
}
=
[
argmax
aj
P (wj |taj )
]J
j=1
(9)
Given A?, when scoring a given Q&A pair, we re-
strict our attention to those E, F , M triples that are
consistent with A?, which we denote as B(D,q, A?).
Here, consistency requires that if two words are
aligned in A?, then they must appear in the same bi-
phrase (ti,wi). Once the word alignment is fixed,
the final permutation is uniquely determined, so we
can safely discard that factor. Thus equation (8) can
be written as:
P (q|D) ? max
(E,F,M)?B(D,q,A?)
P (F |D,E) (10)
For the sole remaining factor P (F |D,E), we
make the assumption that a segmented queried ques-
tion F = w1, . . . ,wK is generated from left to
right by translating each phrase t1, . . . , tK indepen-
dently:
P (F |D,E) =
K
?
k=1
P (wk|tk) (11)
where P (wk|tk) is a phrase translation probability,
the estimation will be described in Section 3.3.
To find the maximum probability assignment ef-
ficiently, we use a dynamic programming approach,
somewhat similar to the monotone decoding algo-
rithm described in (Och, 2002). We define ?j to
be the probability of the most likely sequence of
phrases covering the first j words in a queried ques-
tion, then the probability can be calculated using the
following recursion:
(1) Initialization:
?0 = 1 (12)
(2) Induction:
?j =
?
j?<j,w=wj?+1...wj
{
?j?P (w|tw)
}
(13)
(3) Total:
P (q|D) = ?J (14)
3.2 Phrase-Based Translation Model for
Question Part and Answer Part
In Q&A, a document D is decomposed into (q?, a?),
where q? denotes the question part of the historical
question in the archives and a? denotes the answer
part. Although it has been shown that doing Q&A
retrieval based solely on the answer part does not
perform well (Jeon et al, 2005; Xue et al, 2008),
the answer part should provide additional evidence
about relevance and, therefore, it should be com-
bined with the estimation based on the question part.
656
In this combined model, P (q|q?) and P (q|a?) are cal-
culated with equations (12) to (14). So P (q|D) will
be written as:
P (q|D) = ?1P (q|q?) + ?2P (q|a?) (15)
where ?1 + ?2 = 1.
In equation (15), the relative importance of ques-
tion part and answer part is adjusted through ?1 and
?2. When ?1 = 1, the retrieval model is based
on phrase-based translation model for the question
part. When ?2 = 1, the retrieval model is based on
phrase-based translation model for the answer part.
3.3 Parameter Estimation
3.3.1 Parallel Corpus Collection
In Q&A archives, question-answer pairs can be con-
sidered as a type of parallel corpus, which is used for
estimating the translation probabilities. Unlike the
bilingual machine translation, the questions and an-
swers in a Q&A archive are written in the same lan-
guage, the translation probability can be calculated
through setting either as the source and the other as
the target. In this paper, P (a?|q?) is used to denote
the translation probability with the question as the
source and the answer as the target. P (q?|a?) is used
to denote the opposite configuration.
For a given word or phrase, the related words
or phrases differ when it appears in the ques-
tion or in the answer. Following Xue et
al. (2008), a pooling strategy is adopted. First,
we pool the question-answer pairs used to learn
P (a?|q?) and the answer-question pairs used to
learn P (q?|a?), and then use IBM model 1 (Brown
et al, 1993) to learn the combined translation
probabilities. Suppose we use the collection
{(q?, a?)1, . . . , (q?, a?)m} to learn P (a?|q?) and use the
collection {(a?, q?)1, . . . , (a?, q?)m} to learn P (q?|a?),
then {(q?, a?)1, . . . , (q?, a?)m, (a?, q?)1, . . . , (a?, q?)m} is
used here to learn the combination translation prob-
ability Ppool(wi|tj).
3.3.2 Parallel Corpus Preprocessing
Unlike the bilingual parallel corpus used in SMT,
our parallel corpus is collected from Q&A archives,
which is more noisy. Directly using the IBM model
1 can be problematic, it is possible for translation
model to contain ?unnecessary? translations (Lee et
al., 2008). In this paper, we adopt a variant of Tex-
tRank algorithm (Mihalcea and Tarau, 2004) to iden-
tify and eliminate unimportant words from parallel
corpus, assuming that a word in a question or an-
swer is unimportant if it holds a relatively low sig-
nificance in the parallel corpus.
Following (Lee et al, 2008), the ranking algo-
rithm proceeds as follows. First, all the words in
a given document are added as vertices in a graph
G. Then edges are added between words if the
words co-occur in a fixed-sized window. The num-
ber of co-occurrences becomes the weight of an
edge. When the graph is constructed, the score of
each vertex is initialized as 1, and the PageRank-
based ranking algorithm is run on the graph itera-
tively until convergence. The TextRank score of a
word w in document D at kth iteration is defined as
follows:
Rkw,D = (1? d) + d ?
?
?j:(i,j)?G
ei,j
?
?l:(j,l)?G ej,l
Rk?1w,D
(16)
where d is a damping factor usually set to 0.85, and
ei,j is an edge weight between i and j.
We use average TextRank score as threshold:
words are removed if their scores are lower than the
average score of all words in a document.
3.3.3 Translation Probability Estimation
After preprocessing the parallel corpus, we will cal-
culate P (w|t), following the method commonly
used in SMT (Koehn et al, 2003; Och, 2002) to ex-
tract bi-phrases and estimate their translation proba-
bilities.
First, we learn the word-to-word translation prob-
ability using IBM model 1 (Brown et al, 1993).
Then, we perform Viterbi word alignment according
to equation (9). Finally, the bi-phrases that are con-
sistent with the word alignment are extracted using
the heuristics proposed in (Och, 2002). We set the
maximum phrase length to five in our experiments.
After gathering all such bi-phrases from the train-
ing data, we can estimate conditional relative fre-
quency estimates without smoothing:
P (w|t) = N(t,w)
N(t)
(17)
where N(t,w) is the number of times that t is
aligned to w in training data. These estimates are
657
source stuffy nose internet explorer
1 stuffy nose internet explorer
2 cold ie
3 stuffy internet browser
4 sore throat explorer
5 sneeze browser
Table 2: Phrase translation probability examples. Each
column shows the top 5 target phrases learned from the
word-aligned question-answer pairs.
useful for contextual lexical selection with sufficient
training data, but can be subject to data sparsity is-
sues (Sun et al, 2010; Gao et al, 2010). An alter-
nate translation probability estimate not subject to
data sparsity is the so-called lexical weight estimate
(Koehn et al, 2003). Let P (w|t) be the word-to-
word translation probability, and let A be the word
alignment between w and t. Here, the word align-
ment contains (i, j) pairs, where i ? 1 . . . |w| and
j ? 0 . . . |t|, with 0 indicating a null word. Then we
use the following estimate:
Pt(w|t, A) =
|w|
?
i=1
1
|{j|(j, i) ? A}|
?
?(i,j)?A
P (wi|tj)
(18)
We assume that for each position inw, there is ei-
ther a single alignment to 0, or multiple alignments
to non-zero positions in t. In fact, equation (18)
computes a product of per-word translation scores;
the per-word scores are the averages of all the trans-
lations for the alignment links of that word. The
word translation probabilities are calculated using
IBM 1, which has been widely used for question re-
trieval (Jeon et al, 2005; Xue et al, 2008; Lee et al,
2008; Bernhard and Gurevych, 2009). These word-
based scores of bi-phrases, though not as effective
in contextual selection, are more robust to noise and
sparsity.
A sample of the resulting phrase translation ex-
amples is shown in Table 2, where the top 5 target
phrases are translated from the source phrases ac-
cording to the phrase-based translation model. For
example, the term ?explorer? used alone, most likely
refers to a person who engages in scientific explo-
ration, while the phrase ?internet explorer? has a
very different meaning.
3.4 Ranking Candidate Historical Questions
Unlike the word-based translation models, the
phrase-based translation model cannot be interpo-
lated with a unigram language model. Following
(Sun et al, 2010; Gao et al, 2010), we resort to
a linear ranking framework for question retrieval in
which different models are incorporated as features.
We consider learning a relevance function of the
following general, linear form:
Score(q, D) = ?T ??(q, D) (19)
where the feature vector ?(q, D) is an arbitrary
function that maps (q, D) to a real value, i.e.,
?(q, D) ? R. ? is the corresponding weight vec-
tor, we optimize this parameter for our evaluation
metrics directly using the Powell Search algorithm
(Paul et al, 1992) via cross-validation.
The features used in this paper are as follows:
? Phrase translation features (PT):
?PT (q, D,A) = logP (q|D), where P (q|D)
is computed using equations (12) to (15), and
the phrase translation probability P (w|t) is
estimated using equation (17).
? Inverted Phrase translation features (IPT):
?IPT (D,q, A) = logP (D|q), where P (D|q)
is computed using equations (12) to (15) ex-
cept that we set ?2 = 0 in equation (15), and
the phrase translation probability P (w|t) is es-
timated using equation (17).
? Lexical weight feature (LW):
?LW (q, D,A) = logP (q|D), here P (q|D)
is computed by equations (12) to (15), and the
phrase translation probability is computed as
lexical weight according to equation (18).
? Inverted Lexical weight feature (ILW):
?ILW (D,q, A) = logP (D|q), here P (D|q)
is computed by equations (12) to (15) except
that we set ?2 = 0 in equation (15), and the
phrase translation probability is computed as
lexical weight according to equation (18).
? Phrase alignment features (PA):
?PA(q, D,B) =
?K
2 |ak ? bk?1 ? 1|,
where B is a set of K bi-phrases, ak is the start
position of the phrase in D that was translated
658
into the kth phrase in queried question, and
bk?1 is the end position of the phrase in D
that was translated into the (k ? 1)th phrase in
queried question. The feature, inspired by the
distortion model in SMT (Koehn et al, 2003),
models the degree to which the queried phrases
are reordered. For all possible B, we only
compute the feature value according to the
Viterbi alignment, B? = argmaxB P (q, B|D).
We find B? using the Viterbi algorithm, which is
almost identical to the dynamic programming
recursion of equations (12) to (14), except that
the sum operator in equation (13) is replaced
with the max operator.
? Unaligned word penalty features (UWP):
?UWP (q, D), which is defined as the ratio be-
tween the number of unaligned words and the
total number of words in queried questions.
? Language model features (LM):
?LM (q, D,A) = logPLM (q|D), where
PLM (q|D) is the unigram language model
with Jelinek-Mercer smoothing defined by
equations (1) and (2).
? Word translation features (WT):
?WT (q, D) = logP (q|D), where P (q|D) is
the word-based translation model defined by
equations (3) and (4).
4 Experiments
4.1 Data Set and Evaluation Metrics
We collect the questions from Yahoo! Answers and
use the getByCategory function provided in Yahoo!
Answers API5 to obtain Q&A threads from the Ya-
hoo! site. More specifically, we utilize the resolved
questions under the top-level category at Yahoo!
Answers, namely ?Computers & Internet?. The re-
sulting question repository that we use for question
retrieval contains 518,492 questions. To learn the
translation probabilities, we use about one million
question-answer pairs from another data set.6
In order to create the test set, we randomly se-
lect 300 questions for this category, denoted as
5http://developer.yahoo.com/answers
6The Yahoo! Webscope dataset Yahoo answers com-
prehensive questions and answers version 1.0.2, available at
http://reseach.yahoo.com/Academic Relations.
?CI TST?. To obtain the ground-truth of ques-
tion retrieval, we employ the Vector Space Model
(VSM) (Salton et al, 1975) to retrieve the top 20 re-
sults and obtain manual judgements. The top 20 re-
sults don?t include the queried question itself. Given
a returned result by VSM, an annotator is asked to
label it with ?relevant? or ?irrelevant?. If a returned
result is considered semantically equivalent to the
queried question, the annotator will label it as ?rel-
evant?; otherwise, the annotator will label it as ?ir-
relevant?. Two annotators are involved in the anno-
tation process. If a conflict happens, a third person
will make judgement for the final result. In the pro-
cess of manually judging questions, the annotators
are presented only the questions. Table 3 provides
the statistics on the final test set.
#queries #returned #relevant
CI TST 300 6,000 798
Table 3: Statistics on the Test Data
We evaluate the performance of our approach us-
ing Mean Average Precision (MAP). We perform
a significant test, i.e., a t-test with a default signif-
icant level of 0.05. Following the literature, we set
the parameters ? = 0.2 (Cao et al, 2010) in equa-
tions (1), (3) and (5), and ? = 0.8 (Xue et al, 2008)
in equation (6).
4.2 Question Retrieval Results
We randomly divide the test questions into five
subsets and conduct 5-fold cross-validation experi-
ments. In each trial, we tune the parameters ?1 and
?2 with four of the five subsets and then apply it to
one remaining subset. The experiments reported be-
low are those averaged over the five trials.
Table 4 presents the main retrieval performance.
Row 1 to row 3 are baseline systems, all these meth-
ods use word-based translation models and obtain
the state-of-the-art performance in previous work
(Jeon et al, 2005; Xue et al, 2008). Row 3 is simi-
lar to row 2, the only difference is that TransLM only
considers the question part, while Xue et al (2008)
incorporates the question part and answer part. Row
4 and row 5 are our proposed phrase-based trans-
lation model with maximum phrase length of five.
Row 4 is phrase-based translation model purely
based on question part, this model is equivalent to
659
# Methods Trans Prob MAP
1 Jeon et al (2005) Ppool 0.289
2 TransLM Ppool 0.324
3 Xue et al (2008) Ppool 0.352
4 P-Trans (?1 = 1, l = 5) Ppool 0.366
5 P-Trans (l = 5) Ppool 0.391
Table 4: Comparison with different methods for question
retrieval.
setting ?1 = 1 in equation (15). Row 5 is the phrase-
based combination model which linearly combines
the question part and answer part. As expected,
different parts can play different roles: a phrase to
be translated in queried questions may be translated
from the question part or answer part. All these
methods use pooling strategy to estimate the transla-
tion probabilities. There are some clear trends in the
result of Table 4:
(1) Word-based translation language model
(TransLM) significantly outperforms word-based
translation model of Jeon et al (2005) (row 1 vs. row
2). Similar observations have been made by Xue et
al. (2008).
(2) Incorporating the answer part into the models,
either word-based or phrase-based, can significantly
improve the performance of question retrieval (row
2 vs. row 3; row 4 vs. row 5).
(3) Our proposed phrase-based translation model
(P-Trans) significantly outperforms the state-of-the-
art word-based translation models (row 2 vs. row 4
and row 3 vs. row 5, all these comparisons are sta-
tistically significant at p < 0.05).
4.3 Impact of Phrase Length
Our proposed phrase-based translation model, due to
its capability of capturing contextual information, is
more effective than the state-of-the-art word-based
translation models. It is important to investigate the
impact of the phrase length on the final retrieval per-
formance. Table 5 shows the results, it is seen that
using the longer phrases up to the maximum length
of five can consistently improve the retrieval per-
formance. However, using much longer phrases in
the phrase-based translation model does not seem to
produce significantly better performance (row 8 and
row 9 vs. row 10 are not statistically significant).
# Systems MAP
6 P-Trans (l = 1) 0.352
7 P-Trans (l = 2) 0.373
8 P-Trans (l = 3) 0.386
9 P-Trans (l = 4) 0.390
10 P-Trans (l = 5) 0.391
Table 5: The impact of the phrase length on retrieval per-
formance.
Model # Methods Average MAP
P-Trans (l = 5) 11 Initial 69 0.38012 TextRank 24 0.391
Table 6: Effectiveness of parallel corpus preprocessing.
4.4 Effectiveness of Parallel Corpus
Preprocessing
Question-answer pairs collected from Yahoo! an-
swers are very noisy, it is possible for translation
models to contain ?unnecessary? translations. In this
paper, we attempt to identify and decrease the pro-
portion of unnecessary translations in a translation
model by using TextRank algorithm. This kind of
?unnecessary? translation between words will even-
tually affect the bi-phrase translation.
Table 6 shows the effectiveness of parallel corpus
preprocessing. Row 11 reports the average number
of translations per word and the question retrieval
performance when only stopwords 7 are removed.
When using the TextRank algorithm for parallel cor-
pus preprocessing, the average number of transla-
tions per word is reduced from 69 to 24, but the
performance of question retrieval is significantly im-
proved (row 11 vs. row 12). Similar results have
been made by Lee et al (2008).
4.5 Impact of Pooling Strategy
The correspondence of words or phrases in the
question-answer pair is not as strong as in the bilin-
gual sentence pair, thus noise will be inevitably in-
troduced for both P (a?|q?) and P (q?|a?).
To see how much the pooling strategy benefit the
question retrieval, we introduce two baseline meth-
ods for comparison. The first method (denoted as
P (a?|q?)) is used to denote the translation probabil-
ity with the question as the source and the answer as
7http://truereader.com/manuals/onix/stopwords1.html
660
Model # Trans Prob MAP
P-Trans (l = 5)
13 P (a?|q?) 0.387
14 P (q?|a?) 0.381
15 Ppool 0.391
Table 7: The impact of pooling strategy for question re-
trieval.
the target. The second (denoted as P (a?|q?)) is used
to denote the translation probability with the answer
as the source and the question as the target. Table 7
provides the comparison. From this Table, we see
that the pooling strategy significantly outperforms
the two baseline methods for question retrieval (row
13 and row 14 vs. row 15).
5 Conclusions and Future Work
In this paper, we propose a novel phrase-based trans-
lation model for question retrieval. Compared to
the traditional word-based translation models, the
proposed approach is more effective in that it can
capture contextual information instead of translating
single words in isolation. Experiments conducted
on real Q&A data demonstrate that the phrase-
based translation model significantly outperforms
the state-of-the-art word-based translation models.
There are some ways in which this research could
be continued. First, question structure should be
considered, so it is necessary to combine the pro-
posed approach with other question retrieval meth-
ods (e.g., (Duan et al, 2008; Wang et al, 2009;
Bunescu and Huang, 2010)) to further improve the
performance. Second, we will try to investigate the
use of the proposed approach for other kinds of data
set, such as categorized questions from forum sites
and FAQ sites.
Acknowledgments
This work was supported by the National Natural
Science Foundation of China (No. 60875041 and
No. 61070106). We thank the anonymous reviewers
for their insightful comments. We also thank Maoxi
Li and Jiajun Zhang for suggestion to use the align-
ment toolkits.
References
A. Berger and R. Caruana and D. Cohn and D. Freitag and
V. Mittal. 2000. Bridging the lexical chasm: statistical
approach to answer-finding. In Proceedings of SIGIR,
pages 192-199.
A. Berger and J. Lafferty. 1999. Information retrieval as
statistical translation. In Proceedings of SIGIR, pages
222-229.
D. Bernhard and I. Gurevych. 2009. Combining lexical
semantic resources with question & answer archives
for translation-based answer finding. In Proceedings
of ACL, pages 728-736.
P. F. Brown and V. J. D. Pietra and S. A. D. Pietra and
R. L. Mercer. 1993. The mathematics of statistical
machine translation: parameter estimation. Computa-
tional Linguistics, 19(2):263-311.
R. Bunescu and Y. Huang. 2010. Learning the relative
usefulness of questions in community QA. In Pro-
ceedings of EMNLP, pages 97-107.
X. Cao and G. Cong and B. Cui and C. S. Jensen. 2010.
A generalized framework of exploring category infor-
mation for question retrieval in community question
answer archives. In Proceedings of WWW.
D. Chiang. 2005. A hierarchical phrase-based model for
statistical machine translation. In Proceedings of ACL.
H. Duan and Y. Cao and C. Y. Lin and Y. Yu. 2008.
Searching questions by identifying questions topics
and question focus. In Proceedings of ACL, pages
156-164.
J. Gao and X. He and J. Nie. 2010. Clickthrough-based
translation models for web search: from word models
to phrase models. In Proceedings of CIKM.
J. Jeon and W. Bruce Croft and J. H. Lee. 2005. Find-
ing similar questions in large question and answer
archives. In Proceedings of CIKM, pages 84-90.
R. Mihalcea and P. Tarau. 2004. TextRank: Bringing
order into text. In Proceedings of EMNLP, pages 404-
411.
P. Koehn and F. Och and D. Marcu. 2003. Statistical
phrase-based translation. In Proceedings of NAACL,
pages 48-54.
J. -T. Lee and S. -B. Kim and Y. -I. Song and H. -C. Rim.
2008. Bridging lexical gaps between queries and ques-
tions on large online Q&A collections with compact
translation models. In Proceedings of EMNLP, pages
410-418.
F. Och. 2002. Statistical mahcine translation: from sin-
gle word models to alignment templates. Ph.D thesis,
RWTH Aachen.
F. Och and H. Ney. 2004. The alignment template ap-
proach to statistical machine translation. Computa-
tional Linguistics, 30(4):417-449.
661
J. M. Ponte and W. B. Croft. 1998. A language modeling
approach to information retrieval. In Proceedings of
SIGIR.
W. H. Press and S. A. Teukolsky and W. T. Vetterling
and B. P. Flannery. 1992. Numerical Recipes In C.
Cambridge Univ. Press.
S. Robertson and S. Walker and S. Jones and M.
Hancock-Beaulieu and M. Gatford. 1994. Okapi at
trec-3. In Proceedings of TREC, pages 109-126.
G. Salton and A. Wong and C. S. Yang. 1975. A vector
space model for automatic indexing. Communications
of the ACM, 18(11):613-620.
X. Sun and J. Gao and D. Micol and C. Quirk. 2010.
Learning phrase-based spelling error models from
clickthrough data. In Proceedings of ACL.
K. Wang and Z. Ming and T-S. Chua. 2009. A syntactic
tree matching approach to finding similar questions in
community-based qa services. In Proceedings of SI-
GIR, pages 187-194.
X. Xue and J. Jeon and W. B. Croft. 2008. Retrieval
models for question and answer archives. In Proceed-
ings of SIGIR, pages 475-482.
C. Zhai and J. Lafferty. 2001. A study of smooth meth-
ods for language models applied to ad hoc information
retrieval. In Proceedings of SIGIR, pages 334-342.
662
