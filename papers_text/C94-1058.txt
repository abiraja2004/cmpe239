DEFAULT HANDLING IN INCREMENTAL GENERATION 
Karin ItarbuschL Gen-ichiro Kikui{, Mine l(ilgeri 
ATR*, Pax: (+81 7749) 5 la08, E-mail: kikuiOitl.atr.eo.jp 
DFKI, Fax: (+49 681) 302 5341, E-mail: harbusch\[kilger@dfld.uni-sb.de 
Abstract Natural language generation must 
work with insufficient input. Underspecifications 
can be caused by shortcomings of the component 
providing the input or by the prelhninary stal.e 
of incrementally given input. The paper Mms to 
escape from such dead-end situations by making 
~ussumptions. We discuss global aspects of de- 
fault handling. Two i~roblem classes for defaults 
in the incrementM syntactic gener;ttor VM-GEN 
are presented to substantiate our discussion. 
1 MOTIVAT ION 
Natural Language Generation, i.e., the pro- 
cess of building an adequate utterance for 
some given content, is by nature a decision 
making problem (Appelt, 1985). Interna.1 de- 
cisions are made on the basis of the specified 
input. Unfortunately, input information can 
be insufficient in two respects: 
? If the input structure for generation is 
provided by another AI-system, .qloba.l prob- 
lems in producing svJ.Jicicnl inp't,t iuJ'orm.a.tio~, 
for the generator may occur, e.g., because o\[' 
translation mismatches in inachine transla- 
tion (Kameyama, 19!)1). In this case, the gen- 
erator eitl,er has to use a default or formulat.e 
a request for clarification in order to be abh~ 
to continue its processing, i.e., to produce an 
utterance. During simultaneous interpret a.- 
tion requests are rather unusual. Ilere de- 
faults allow for a sta.ndalone handling of t:he 
problem. For example, problems during 
speech recognition of automatic interprel:a- 
tion can lead to results like, "the (man/men) 
will come to the hotel tomorrow". If the sys- 
tem is not able to give a preference for one 
of the alternatives, e.g., by evaluating con- 
text information, the generator has to choose 
"The author is eurrent, ly at NTT Network lurer 
mation Systems Laboratories (kikui((Nlttnly.ntt..i P)  
a probable number value on its own to com- 
plete verbalization. 
? Furthermore, for incremental generation, 
the input information is produced and hand- 
e.d own' step by step, so that it can be tem- 
poraril 9 ineomplele - -  although as a whole 
it may become sufficient. This behaviour of a 
generator is motiw, ted by psycholinguistic ob- 
serva.tions which show that people~ start speak- 
lug 1)e\[bre all necessary linguistic material has 
been chosen (e.g., articulating a noun phrase 
be\['ore, the dominating w'.rb is selected). As a 
consequence of undersl)ecification , i cremen- 
tal generation is essentially based on working 
with defaults, l'~lements are uttered before 
the processing or input consuml%ion has been 
finished. (Kita.no, 1990) gives an example for 
defaults in i:he context of simultaneous inter- 
pretation: In Japanese, negation is specified 
at the end of the sentence while in English, it 
has to be specified ill \['rent of the finite verb. 
Tllere\[bre, during .lapanese-English transla- 
tion, where analysis, l;ransfer, and general;ion 
are l)erformed in a para.llel and incremental 
way, the system has to commit, e.g., positive 
wdm', l~el'ore knowing the actual polarlty I.
Generally spea.kiug, dcfa.'ull h.andlin, g speci- 
ties how processing, i.e., furthe,' decision-mak- 
ing, can contimu, witl~out sufficient input in- 
formation. So, one can compare default han- 
dling with advice to the system, l?or reasons 
o1" uncertainty of assumptions, incremental 
systems with this facility must be able to re- 
pair the default decision when the a.ssump- 
tion i;urns out to be wrong by information 
given later. Ca.tchi,lg on to the above exam- 
pie, there can be a nega.tion specifier given at 
the end of the Japanese input sentence which 
cannot be simply integrated into the output 
lAlt.ernatively, the system could use i,he dialogue 
COllt.exl. 1:o iufer a negal.ion wdue +/-. 
356 
sentence because the finite verb has ah'eady 
been uttered. In this case, the output has to 
be repaired, e.g., by repeating parts of the ut> 
terance: "I will be able to meet you .. .oops 
. . . I  won't; be able to meet you at the hotel 
this evening." 
In the tbllowing sections, we argue Ibr l.he 
appropriateness of processinq-conformi~ttj de- 
fault handling. Basically, tlte processing-con- 
forming mode makes the overall system ho- 
mogenemzs because the combination of 
default-caused processing and input-licensed 
processing requires no specific description. 
The homogeneity becomes especially hell)ful 
in the case where the inlmt wwifies the &,- 
fault assumption rendering mlnecessary any 
recomputation. For 1;he opposite case where 
the default ll'ltlSt; be withdrawn we haw~ to 
mark all defaults. Even more homogeneity 
is introduced to an hlcrementa.1 system iJ' the 
default descriptions are giwm in terms oJ" i~t- 
put specifications. Tiffs representai;ion Mlows 
for easy checking the coincidence between a 
chosen default and input giwm later. 
The content of this paper can he summa- 
rized as follows. Section 2 provides a geucral 
description for defaults iu generation empha- 
sizing the specific requirements in an incre- 
mental system. After identifying the condi- 
tions under which defaults are triggered (set> 
tion 2.1), the application of a default (set> 
tion 2.2) and the delhfition of its descrilltioll 
(section 2.3) is outlined. The crucial case of 
removing defa.ults not coi,lcidiug; wil.h n(,w- 
ly arriving input in an incremental system is 
discussed in section 2.4. 
In section 3, this mechanism is applic~l I.o 
the incremental sentence generator V M--(I EN. 
In tile beginning of the section, the basic <h'- 
sign of the sysi;em is outlined. Lator on, de- 
fault handling is included and exemplified for 
two general cases. 
In tile final section we summarize the main 
results of the paper, l,'urthermore, we dis- 
cuss how default handling can I)e adapt?'d 
to multilingual generatim~, as required by l:llc 
speech-to-speech translation system \/I~I{.IL 
MOBIl, (Block et al, I!)92). 
2 GENERAL D ISCUSSION OF  
DEFAULTS 
In the literature of norl-incremental genera- 
tion, the need for defaults is hardly ever tak- 
en into account. The conunon point of view 
restricts the iulmt to be sulIicient for genera- 
tion (see, e.g., the Te:ct Slructure by (Meteer, 
1990) for a syntactic generator). In incremen- 
tal gm,eration, most authors agree on the ne- 
cessity of using defaults (see, e.g., (l)e Smedt, 
1990; Kitano, 1990; Ward, 1991)). Neverthe- 
less, they do not in sufficient depth answer 
the question of how to guide the processes of 
default handling an(l repair wil;hin a gener- 
ator. This I~roblem is the starting--point tbr 
the following considerations. 
We assume tlm.t generation is a decision-- 
making process witll the aim o\[' producing it 
phmsiMe ul:t(wance 1)ased on given informa- 
tion. As mentioned in section 1, there are 
cases where this I)rocess stops (caused by un- 
derspccifical.ioll of the input) before finishing 
its output. 
We define a module named d@tv.l! han- 
dh:r which tries to resume the process by giv- 
ing advice to il;, i.e., by maldng assumptions 
about tile missing input specification. With 
respect to this task it is discussed 
1. in whicll situations de.faults are applied (see 
section 2.1 ), 
2. how default handling is integrated into a 
sb, st:cm (see sectiou 2.2), 
3. Ilow 1.he knowh'dg:e for de\['ault handling is 
~h!scrihed (see. s<'ctioll 2.3), and 
d. how assumptious arc cancelled when they 
I.urll out 1.o Im inconsistent wil,\], newly ar- 
riving input; (see section 2.4). 
hi incremental generation, as mentioned in 
section 1, interleaved input consumption and 
OUtlml. l)rodllcl.ion causes spc'cific default sit- 
uations. An incremental processing scheme 
allows for an increase of elficiency and flexi- 
bility, e.g., by making tlm analysis and gen- 
eral.ion l~rocesses of a system \['or simultane,- 
ous interl~ret, al:ion ow~rlap in Lime. There are 
two COmlml.ing goals of incremental genera- 
i;i(m for spoken oul, imt , thai, mnsl; be tal,:en 
357 
into account when estimating the usefulness 
of defaults: 
F luency :  Long hesitations hould be a.void- 
ed during the production of an utl;erance, 
in order to be aeceptalde to the hearer 2. 
Re l iab i l l ty :Er rors  in an utterance may 
cause misunderstanding. In most cases, er- 
rors should be recovered by appropriate self- 
corrections a. Excessive use of self-correc- 
tions or erroneous expressions should be 
avoided because they decrease intdligibil- 
ity of the utterance. 
Obviously there is a trade-off between fluency 
and reliability: maximal reliability requires 
'secure' decisions and theretbre leads to out- 
put delay. On the other hand, maximal flu- 
ency necessitates the use of assuml)tions and 
repair, respectively. 
2.1 When to T r igger  Defau l t  Hand l ing  
We define as de.fa.~dt sit'ltatio~z the situation 
where a generation system has not yet fin- 
ished the utterance but at the same t;ime has 
consumed all given iul)ut and is not ahle to 
continue processing. In non-incremental gel> 
eration, this corresponds to the fact that the 
input lacks necessary informatiou, because 
the entire input is assumed to be given at 
one time (e.g., the undecidable number wdue 
of the example described in section 1 ). Thus, 
default handling should be triggered inunedi- 
ately. 
In incremental generation, however, tile sys- 
tem may gel; a new piece of infBrmation lai:er 
on that enables it to continue processing (e.g., 
the specification of a negation wdue + as out- 
lined in the example in section 1). Tllere- 
fore, possible alternatives are either to wait 
for the next inpnt or to trigger default han- 
dling. The former violates the fluency goal, 
the latter may violate the reliability goal. We 
propose the explicit use of time-limits .lot de- 
lay intervals 4 . 
=Ilumans often fill such pauses with filler.s like %r" 
or "what shall I say". 
aSometimes, correct, ion is mmeeessary il' (I.he 
speaker believes that) the hearer ean inl>r t.he intend- 
ed utterance from errol~eous speech. 
4An explicit parameter xpressing tile desired e- 
gree of fluency influences the time--limit.s. 
Furthermore, the certainty of a &fault is 
described by a value. As soon aM a default 
situation is identified, the certainty of the de- 
fault is checked to see whether it exceeds a 
predefined threshold that: determines the de- 
gree of fluency/relia.bility r'. 
l'.;ach application o1" a default decreases the 
global certainty o\[' the system's tate. Conse- 
quently, there should be a limit Jbr the mnzi- 
real n'~,mbcr of dcfoults apl)licable to the same 
sentence.  
2.2 How to In tegrate  Defau l t  Hand l ing  
Basically, there are two strategies to integrate 
default handling into ongoing processing. 
\])efanlts may be handled in a way that dif- 
\[>rs from the 'normal' processing of the sys- 
tem, e.g., as short-cuts. One. advantage can 
be an eflicient haudling o\[' defaults, lVurther - 
more, the. designm' o\[' the de\['a.ult component 
is completely free in decidiug about the re- 
alization of defaults in the system. A dis- 
adwmtage is the di\[\[icull;y of providing con- 
sistency between del'aull;-caused and input- 
liceused processhlg. 
Alternal:iw~ly, l:l~e ongoing processing can 
deal with the de('aull: values in a.n ordinary 
manner (processing conlbrming default han- 
dling). This may he less efficient but guaran_- 
tees consistency during processing, especially 
in case of a replacement by an input-licensed 
wdue. got incremental generation, tile sys- 
tem has to provide repair fa.cilil;ies in any case. 
So, they can also be used \['or nmt-monoloT/c 
nlodi\[ical,iOllS {~\[" d~q'aull, caused results. We 
lake this opl;iou in order to make the own'all 
system \]J.(~mogc,~co'tzs. 
2.a How to Descr ibe  Defau l ts  
The knowledge source that is used for defaulg 
handling should provide the most plausible 
actions \[Br a dei'ault: situation. We represenl; 
the Iwlowledge as a sel: o\[' heuristic rules called 
dq/'a'tdl dc.~'("~'ip/io~.s. A default description de- 
fines a. set el' ol)eratious t\]lal; should be carried 
'>Pile I~asis for assigning cel'l,aill|,y wflues 1.o de- 
faults should be a corl311s sl.udy l.hal, can be used 1,o 
find sl.al.isl.ical evidem'e for various Datures with al- 
l.ernal.iw' values (like Immb(% w)ice, ..., see, e.g., 
(Beck aim Warr~m, 1!~85)). 
358 
out in a certain situation where the genera- 
tion process can not be continued. A def'ault 
description has the following form: 
\[default default eerl<ti',zt.y\] 
preconditions ~ body ; val,.c 
The set of defaull prceondilions defines tests 
that are applied to the given situal`ion in or- 
der to find out whether the corresponding de- 
fault body can be acl,ival,ed. They include 
tests for the existence of parl,icular informa- 
tion, tests for the strucl`ure undc'r creation 
and tests for the sl,ate of processing. 
The default body describes how to contin- 
ue 1)rocessing with de\['aull`s in an adequat.e 
way. For incremenl`al systems, we propose 
to express the body as a specification of in- 
put increments. An impotl,anl, prerequisil:e 
is that the size of inct'ements i defin(~d \[h'xi- 
bly enough to cope With varying amount;s o\[" 
information. Obviously, an import;ant; a(lvan- 
gage of this approach is homogeneity of l`\]te 
overall system. Especially, l;he homogeneous 
represenl,ation of default-caused and input- 
licensed sl`ructures i the easiest a.lld mosl` di- 
rect way l,o tesl` coincidences or conl`radicl~ious 
between defaull,-specified and hlpul; caused 
values. Ill section 3, this a.ppvoach is outlhled 
by differenl, examples. For non-h~cremenl`al 
systems, an operal,ional approach is pre\['ez- 
able since l,here is no way to consume ad- 
(til,ional input increments, presul)lmshlg l`hal; 
l,he input has been considered as a whole he- 
fore a defaull` situation occurs';. 
If several defaull` precon(lil:ions are al)ldi-- 
cable, the certainty vrtlucs for (lel'aull: d('scvil)- 
tions are examined to find which provides l.he 
system wil`h the most l)lausil)le aci.hm. 
The individual default (lescril~tions should 
take into account the aloha\] constraints \['~)r 
processing stated in the knowledge sources of 
the system. For example, the assuml)l`iol~ ()f 
nominative case for a, German NI' comph'- 
menl, can regularly be made only once \['or the 
aThe difl'erence between incremental aml non- 
incremental generation I)econles small(w, if we assume 
that defaults ira a non-incremental system can he trig- 
gered alter the system has only considered parts of its 
inlmt information, hr this case, tim input cousidel'ed 
after default han<lling I)ec<>m~s COml>aral)le to later 
increments. 
same verb. For reasons of homogeneity, the 
defaull, description should at least be compat- 
ible wil`h the specificat;ions of tile knowledge 
used \[Br basic processing. Ill order to guar- 
anl,ee consisl:ency, def'aull` descriptions should 
merely contain whal: is orl,hogonal to tire ba- 
sic 1,:nowledge sources. 
2.4 How to Cance l  Defau l ts  
The repair of false assumptions is a crucial 
point of defaull, llandling in l`he contexl, of in- 
cremenl`al processing because the defaull, in- 
formal`ion does not remain locally bul` cap. 
cause \['m'lahe.r decisions of the system. Con- 
trarily, for non--ilwremental input l`here will 
l)e no wdue gixq!n l.\]lal: can conl`radict default, 
Vgllrr(?s. 
As a \[h'st: step o\[' rc'.pah', inconsistencies l)e- 
l, ween \[lllml~--provlded and default:- camsed va.1- 
ues are hle.nl, ified by simply real, citing the val- 
ues. Tllen e\[\['ecl`s of l.he respecl`iw~ defaults 
are wil`hdrawn hll,roducing the inpul`-l)rovidcA 
values iul.o the sysl`eln. (\[enerally, a deci- 
sion during general.ion il~fluences other deci- 
sions all over the system. Thus l`he ell'eel` o\[' 
a deI'aull, body may tw. propagal`t;d through 
I;\]te enl:ire sysl,en: (e.g., choosing a consl`ruc- 
I:ion o\[' ma.iu clause, wil;h causal subordinate 
clause influences l.he choice o\[" synl`acl`ic rca.l- 
iza.l`ions). 
Roughly speaking, wil:hdrawlng a defaull` 
assuml~t.iou can be l'ea.lized l)y baekh'acking 
I`o the earlier sl`at,e o\[' the sysl`em where the 
d(d'aull~ had beeu inl`roduced or 1)y ~mu-mon- 
o/o,dc c/iruUics I.o t.he current, sl,ai.e o\[' the sys- 
I.em. The disa(lvalll;age of 1)ackln'acking is thai; 
imrt.ia\] resull`s are t:llrown away which could 
be reused duriug fm'I:her processhtg. Non- 
monol.onic hanges preserw; l,hese resull`s. Ill 
this framework, cancelling defaull`s requires 
l`lle sysl;em t:o idenl`i\[~, which resull;s are caused 
by del'a.ult, handling. 1)cpcnde.ney ling:s be- 
I.ween l`he immedial`e r'esull, of a defaulI; body 
and result:s of lshe influenced decisions allow 
for l`his ideul`ifica.l`iou. The disadvanl`age of 
non--monol:onic changes is I.he complexity o\[" 
COmlml.at:ion , e.g., SUl)lrorl`ed by a I;rul;h main- 
t:enance system. When designing an incre- 
ment.el sysl`em, simple lm.ckl,racking is ruled 
359 
out because the part of the sentence uttered 
cannot be withdrawn after it has been per- 
ceived by the addressee of the message r. 
So, we end up with a processing-conform- 
ing default handler for generation realizing re- 
pair by non-monotonic hanges. 
3 EXAMPLES OF DEFAULTS 
IN  VM-GEN 
The adaptation of our general discussion of 
default handling to the system VM-CEN not 
only provides concrete xamples for the read- 
er but also shows that a homogeneous com- 
bination of default handling, regula.r process- 
ing, and utterance repair is possible. 
The syntactic generator VM-GI'~N is a fur- 
ther development of TA G-G E N (Kilger, 19!)4) 
within the fi-amework of VERBMOBIL, a 
speech-to-speech translation system. Its use- 
fulness for simultaneous interpretation results 
from its incremental and pa'rallel style of pro- 
cessing. VM-GEN is able to consume input 
increinents of varying size. q'hese, increments 
describe lexical items or semantic relations 
between them. Single input increments are 
handed over to objects of a distril)uted paral- 
lel system, each of which tries to verbalize the 
structure that results from the corresponding 
input increment. VM-O,\]'~N uses ml exten- 
sion of Tree Adjoining Gra'm'mct'rs (TACs, c\['. 
(aoshi, 1985)) as its syntactic representation 
formalism that is not only adequate for Ihe 
description of natura.1 language hut also sup- 
ports incremental genera.lion (I(ilger aml Fin- 
kler, 1994). 
In the following, we iul;roduce xaml)h:'s for 
default processing triggered during the (ler- 
man inflection process in VM-GI'2N to suh- 
stantiate tile global statements made in sec~ 
Lion 2. Inflection uses some synta.cLic proper- 
ties of an element o compute its morpholog- 
ical form. This information has partly t:o be 
specified in the input (e.g., the numl)er for a 
noun) and is partly inherited fi'om other el- 
rlf some phrases inllueneed by defaull.s have al- 
ready been verbalized, the eft'eel; of verl~alizaLion can 
be cancelled by using repair words like "oops" or "sol 
ry" when starting t, he modified utt.erance. 
ements (e.g., tile number for a verb or tile 
case for a noun). The two reasons for missing 
information ecessitate different methods of 
treatment which nevertheless both can uni- 
formly be integrated into regular processing. 
If information of the first type is missing 
(e.g., because of problems during analysis, see 
section 1), an assuml~tion can be made locally 
by simulating the respective part of the input. 
The default for missing number information 
in VM-CIBN would look as follows: 
\[ (e*.I(OBJ,=N) (I;,'NTITY OB.I \] 
( ....... ber(OBd)=NIL) => ('au',,dm,' sg)) ; 0.8 8 
The set of default preconditions is applied 
to all 'j objects (OB.1) of VM-GEN in order 
to Lest the kind of underspecification ('num- 
ber' in the example). The default body intro- 
duces a new value (sg) by creating an input 
increment as a. default. The test for coinci- 
dence with the input-licensed value is realized 
by a comparison in the objects of VM-CEN. 
There is a. uuique association of input incre- 
ments and objocts of VM-(~EN (OBJ is used 
as identifier)l:hat allows for translating an in- 
put mo(lifica.l:ion into a. modification of the 
state of the respective object. In ease of con- 
tradictions the dofa.ult and all default-caused 
decisions are revised m (see below). 
Making a.n assumption can Im influenced by 
.qlolml constra.ints. An example, which is well 
studied in psycholinguistics, i  the utterance 
o\[" a noun before the vc~'l~ has been chosen. 
If, e.g., the nol.lll "Besucher" (l",nglish: "visi- 
tOl"') iS I':.IIOWll t(} I)e the age l l t  of all action, 
il: nlay Im uttered as sul@-ct in the first posi- 
t, ion of the sentence l~y del'a.ult. This treat- 
retail, l)reSUl)l)OSes I,lle clloi(;e of a ~(htmmy' 
v(.'rl), which at least sul)cal,egorizes a subject 
a.nd has active voice 11. The use of a dummy 
~'ENTITY' introduces information al)ouL a lexical 
item. For reasons of inerementaliLy, there may be 
several l~,NTlq'Y--lmCkages specified for the same item 
which are composed to reeeiw.' I,he global itl\['ormM;iOl|. 
For certainly values, we use wdues tmt.ween Oand I, 
where I means high reliability. 
~lhl the ael.ual imldementat.ion wepreselect candi- 
dates with missing values fi~r e;tsolls of efficiency. 
l?l,'or ongoing work on repair in VM-(IlCN see (Fin- 
kler, 1994). 
l lThis kind of expansion is called "provisional up- 
ward expansioll" by (I)e SmedL, 1990). 
360 
verb and an underspecified verbal structure, 
the NP is integrated inl,o allows for a shnl)le 
global test tlmt rules out the same case wdue 
assignment to different NP coml)h'ment:s as 
it is required for most of the C, erman verbs. 
This rule is represented in the grammar as 
a p~rt of the description of subcategorizal:ion 
fl'ames for verbs. For reasous of homogoue-- 
ity we use the information stored in the syn- 
tactic knowh'Age source, s of VM- G\]';N for ex~ 
pressing syntactic onstraints during default 
handling as well. 'Fit(', adwmtage of this ap- 
proach is, that processing is continued iu a 
consistent way, which eases the introduction 
of the input--licensed wdue. One default for 
choosing a missing case-wdue ix specified as 
lbllows: 
(l';NT'IT"Y ()ILl' \] 
cat(OttJ)=N) (UAT' ,,) \[ 
...... (O~</)=NH3 (vo le  J,: ,,,,ti,,,3) , => ;(1.81 I~ 
f~mction(OB,l)=agent ) (I?I,:LATION llb;L I 
t ......... (h~,,t(Ot~,l))=NIt,) (/II,:AI) OBJ') \] 
(AIODIIrlI?I~ ()H,I)) J 
The default preconditions of l,he rule charac- 
terize a sit;mttion where an object (O1LI) con. 
tains no information about the case \]>llt ideu- 
tifies the input category as 'N '  for noun. Fur- 
thermore, the semantic fuuction of l;\]w o\])jecl: 
is specified as 'a.gent ~but no verb deIim'(l yot 
(le,nma(h,,aa(Or J))=Nlr0 i,, lte.(t ( , , -  
ject. That is why, the N--object cannot inherit 
a case value and also does not know whether 
it is allowed to occupy the f'ront position ilt 
the utterance. 
\]'3valuating the (l('faull; body, I.he s.ysl.(.lll 
creates a V-object OILI'. On the basis of the 
input ildbrma.tion in (I.;NTrI'Y ( ) I L l ' . . . )  it 
chooses a l l l i l l i l l la l  sy l l l ;act ic  sI;r l lCtl lre \['roHl 
the inheritance net o\[' the grammar, thai. just 
desribes ~t verb category without conclel;c filler 
(a dummy verb) plus a subject cmnpleuwnt 
and active voice for the verbM phrase. Now, 
the N-strucl;ure is com_bilwd with the V. strm:- 
ture of the introduced V-ol)jecl. its dut'iug uo f  
real processing. Therefore, the case va.llle cau 
be inherit(xl. Additionally, the first posil:iou 
12'I/,ELtVFION' inl.l'oduces the specitical.iou f a re- 
lation bel.ween two \]exi(:al ii.enas whMl are ident.ified 
by the names of their objects. 
can be a.ssigne, d t,o Lhe subject which can be 
uttered now. 
Tile basic VM GI';N module provide.s re~ 
pair strategies in order to allow for tile spec- 
ificatiou of additions, modifications and dele- 
tions o\[' input \] l lCl'el ' l /(Hlts, i ,e. 1 t;o l i l odet  it 
flexible input inl:er\['a.ce. Throe fea, tures o\[' the 
system are lmsicMly used for repair: Fh'st, in- 
put illCrelllelitS are uuiquely associated with 
objects of VM-.(IEN, so that input modifica- 
tions can Im translated into modifications of 
the objects' states. Sccoud, each modification 
C' an object's tate makes it compare new and 
old information. Iu case of a difference, the 
modified parts a.re sent to all concerned ob- 
jecl:s. Third, the del)eudency relations tha.t 
determine l, he communi(:ation links between 
objects allow for a, hierarchical orgaIfization 
of tile olLiccts, which ix the, basis \[br synchro- 
uizing repair. 
A repair must be triggered in the exam-- 
pie described abovo if, e.g., a verb wil.h wfice 
passive ix actually specified, in this case, the 
it~al)l)iug o1' tlm selnaut:ic role 'agent' I;o tim 
sylkl:acth: \['uuction 'subject' is revised. The 
;igell\[; IIOW \]lit.S to  \])e realized as part of a 
"you" phrase, e.g. "dieser Tel'rain wh'd yon 
dcm lh:mwhc'r gewiiuscht." (word-for-word: 
"this date is whished b':l lhc v is i lor  (dative ob- 
.iect)"). F'urthermore, the object checks 
wlmtlwr the previously uttered part of the 
seul.em'e iuch|des ome of the revised material 
(i.e., whether the ol@~ct itsel\[' has lmrticilmt- 
ed hi littering). I\[' this is the case, it seuds 
an error message Itl~ 1.o tim Ul)l)ermost object 
C' the hierarchy l:llat actually is engaged in 
uH.crillp;. Tills o\[,jecl, is aide to synchronize 
global repair, lip to  now, we just realized a 
simple tel)air stra.i:egy that consists of repeat;- 
ing the concerned 1)ari:s el the utterance, e.g. 
"der Besucher ...f ih . . .dieser Terrain wird 
yon dcm l~e.~'twhc'r gewfinscld?'. 
4 D ISCUSSION 
This l)al)er prolmses a. processiug conformh~g 
default: hau(ller for geueration realizing repair 
hy non monotouh" changes. We provide the 
system with def'ault descriptions. The set of 
default preconditions expresses possil)le rea~ 
361 
sons for dead-end situations. A default is 
triggered, if the preconditions match the cu> 
rent situation and the certainty value of the 
default exceeds the i)redefined threshold. The 
default body is expressed in terms of the miss- 
ing input specification in order to make the 
system work homogeneously. We have veri- 
fied the advantages of processing-conforming 
default handling by implementing a default 
handler for VM-GEN. 
As future work, we will extend the default 
preconditions towards handling complex con- 
textual information. We will apply default 
handling to microplanning and lexical choice 
within VERBMOBIL. With respect to a so- 
phisticated output, we aim to combine VM- 
(\]I3N with a flexible repair component. 
The system VM-GEN is used in the VI"llB- 
MOBIL scenario for multilingual generation 
(English, German, and .Japanese). We mean 
by multilinguality that; the sa.me processing 
is applie(l for diflZ'rent languages. In the un- 
derlying knowledge sources language-specific 
constraints are defined. Default handling can 
be easily adapted to the requirements o\[' mul- 
tilingual generation \])y using language-si)eci(? 
ic default-descriptions. 
For all know/edge sources the question aris- 
es how knowledge can be shared. We Jut:end 
t:o use core knowledge so'urccs for represent- 
ing common phenomena. The core set of (le- 
fault descriptions for F, nglish and German, 
e.g., contains the description of a reactiol~ i:o 
a missing mmflmr vahm for a, nou.ll. We ailn 
to develo I) an efficient storing mechanism us- 
ing a hierarchy of locally inl;ersectil~g core de- 
scriptions. 
References 
Appelt, D. (1985). Phmning l'Tnglish ,%ntcnccs. 
Cambridge, MA: Ca.tnl)ri(Ige University Press. 
Block, II.-U., Bosch, P., Engelkamp, .l., v. 
Ila.hn, W., llauensehild, C., l\[~3ge, I1., llohror, 
C., Tilhnann, II., G., Wahlster, W., Waibel, 
A. (1992). Wissenschaflliche Ziele +rod Ncl> 
pliine fiir das VEI~BMOIIIL-Projekt. Tech- 
nica.l report, (,*et'lnan Research Cent;er for 
Artificial Intelligence (1)FKI Gmbll), Sa;u'- 
briicken, (lermany, 1992. 
Bock, J., and Warren, R. (198,5). Conceptual ac- 
cessibility and syntactic structure in sentence 
fol'rnnl,%ion. Cognition, 2i, 47-(17. 
f)e Smedt, K. (1990). incremental Sentence 
Generation: a Computer Model of Grammati- 
cal Encoding. PhD thesis, Nijmegen Institute 
for Cognition Research and Inform,~tion Tech- 
nolo~;y, Nijmegen, N1CI TR No 90-01. 
Fin- 
kler, W. (1994). Performing Self-Corrections 
During Incremental Natu~ul Language Gcn- 
eralimz. Document, Germ,~n Research Cen- 
ter for Artificia.l Intelligence (DFKI Gmbll), 
Saarbrficken, Germany, 1994. to appear. 
Joshi, A. (I985). An hd.roduetion to TAGs. 
Technical Rel)ort MS-CIS-8(1-64, LINC-LAI3- 
:11, l)ep;trtnmnt o\[' Coral)tiLer and Information 
Scionce, Moore School, University of Pennsyl- 
Va.ll ia,. 
l(anmyama, M., Ochitani, II., a.nd Peters, .q. 
(19!/1). Resolvi?t 9 Tra'nslation Mismatches 
llqth hd'ormation Flow. 29th Annua,l Meeting 
o\[' the Association for Cotnl)uta.tional Linguis- 
tics, 13erkeh, y, CA, 1)p. 19:{-200. 
Kitger, A. a.nd Finkh+r, W. (1994). 7'AG-bascd 
\[nctrmenlal (:encralion. "I~chnica.l report, 
German //esea.rch Center Ibr Artilicia\] Intelli- 
gence (DFKI Gmbll), Sa.arbriicken, Germ,'tny. 
to apl)ea.r. 
Kilger, A. (1994). Using UTAGs for Increnten- 
ta.l and Pa.rallel Generation. Comlmtalional 
\[nlclligenco. to a.ppear. 
Kit+a,t+o, I1. (1990). Incremental Sentence Pro- 
duction wilh a l',rallel Marker-Passing Al- 
gorithm. 13th International Conference on 
Comlmtat+ion;d l,ingulstics, llelsinki, Finland, 
1)p. 217 - 222. 
Meteor, M. (1990). Thc "Ge'ncralion Gap": 
the Problem of \]~xprcs.sibilil9 n Te:rl Plan- 
*ti*t 9. I)Ol:ctrt.ln<!llt; of ('.OUlpUl.er a.lld Infor- 
mation Science, Ulfiversity of Massachusetts, 
Amherst, MA, BBN lteport No. 7347. 
Wa.rd, N. (1991). A l;'le:rible, Parallel Model of 
Natural Langmt/\]c Ceneration. PhD thesis, 
Computer Science Division (EFCS), Univer- 
sity of Ca.lifornia., Berkeley, CA, Report No. 
UCP,/(',S D 91/629. 
362 
