ELU:  an Env i ronment  for Mach ine  Trans la t ion  
ISSCO 
54 rte des Acacias 
CH-1227 Geneva 
Switzerland 
e-mail: estival@ divsun.unige.ch 
L Introduction 
We present here ELU, 1 all environment for research 
in computational linguistics, and, in particular, 
machine u'anslation. As its name indicates, ELU is 
one of the growing number of systems designed to 
employ unification as the principal computational 
mechanism; we shall mention below some respects in 
which it difl~rs from other such systems. 
In addition to investigations of MT techniques, 
ISSCO has been involved in research on evaluation of 
MT systems (cf. King and Falkedal, 1990). 
The basic assumption underlying work on ELU is 
that the nature of (machine) translation is as shown in 
Figure 1 below - distinct grammars encoding 
language-specific infommdon, and defining a relation 
between texts and representations, u ed in conjunction 
with a mechanism for transforming these representa- 
~.ions: 
Analysis Synthesis 
German text French text 
German French 
Grammar Grammar 
representations representations 
Transfer 
mapping between representations 
Figure 1: Translation 
As will be apparent, the facilities provided in ELU 
have been strongly influenced by this view. 
2. ELU 
ELU exploits the parser and unifier of UD (Johnson 
and Rosner, 1989), but differs from that earlier system 
in the addition of a generator (Russell et al, 1990) and 
a transfer component (Estival et al, 1990; Russell et 
al., 1989). 
1 "E,lvironnement Linguistique d'Unification" 
ELU may be thought of as an enhanced PATR-II style 
environment for linguistic development. Throughout 
the system, including the transfer component, the syn- 
tax of the ELU language follows rather closely the 
PATR formalism which has become a standard for 
unification-based systems (Shieber, 1986). An 
environment of this kind is both a computational tool, 
and a formalism for representing linguistic 
knowledge, and we will consider ELU under those 
two aspects: 
? as a computational work environment which pro- 
vides 
? a language for stating linguistic descriptions. 
2.1. ELU: The Computational Tool 
The characteristics of ELU as a computational tool for 
linguistic development and applications derive from 
its clear and well-defined formalism, which allows the 
representation f linguistic knowledge independently 
of any particular machine or application. Some pro- 
perties of the system are worth emphasizing - it is: 
? machine independent: ELU is a Common LISP 
program, and requires no specific interface, and 
? general purpose: ELU is designed as a computa- 
tional tool suitable for a large range of linguistic 
applications, uch as: 
? the description of differing aspects of a particular 
language: lexical, morphological, syntactic, or 
semantic. 
? a specific task such as parsing or generating 
natural language texts or transfer between 
feature-structures ( .g. to map a range of logi- 
cally equivalent representations to a canonical 
form, cf. Russell et al (1989)). 
? translation, an application which includes the 
specific tasks mentioned above - parsing texts in 
the source language, manipulating the resulting 
representations by means of the transfer ides, 
and generating texts in the source language from 
the result of this manipulation. 
? user.friendly: 2 This is obviously very important 
since one of the goals of the project is to provide 
i 385  
their analyses in the easiest and most natural way. 
2.2. ELU: The Formalism 
ELU ks designed to offer the same formalism in all of 
its components, be it for synthesis, analysis or 
transfer. Such a formalism must have a clear trans- 
parent syntax and a declarative semantics. The basic 
properties of the FLU formalism are that it is declara- 
tive and it is unification-based. These two properties 
immediately give it certain advantages: 
Declarativeness means that a description is a set of 
independent s atements about he well-formed expres- 
sions of the language. This allows the system to be: 
? flexible, permitting changes during development; 
? incrementable, as the linguist need not be con- 
cemed with the order in which information is added 
or new phenomena accounted for; 
? reversible: Grammar eversibility (or bidirectional 
grammars) is a highly desirable goal in the context 
of machine translation, i.e, using the same grammar 
as either source or target language description, a
goal attested to in other centres working on MT (cf. 
Dymetman & Isabelle, 1988; Van Noord, to appear; 
Russell et al, 1990). And regardless of the applica- 
tion, the ability to generate with a grammar is 
extremely useful as a method of checking its ade- 
quacy. Transfer reversibility is a working 
hypothesis we are pursuing (Estival et al, 1990), 
but its consequences are harder to foresee; only 
experimentation will help us to (possibly) identify 
classes of natural anguage phenomena where the 
translation relation cannot be reversed. 
Among the advantages deriving from a unification- 
based system, we first note that unification has 
become a central concept for a number of computa- 
tional tools for linguistics (cf. Kay, 1983; Shieber, 
1986; Carroll et al, 1988), and linguistic theories uch 
as GPSG, HPSG and LFG (more generally, cf. Sag et 
al., 1986). More concretely, a unification-based for- 
malism can be characterized by the following proper- 
t ies:  
? expressivity, different types of analysis at different 
levels of abstraction, 
~, uniformity, across these different analyses or 
across grammatical components, 
? theory-neutrality - the system doesn't impose any 
particular linguistic theory (however, it is particu- 
larly well-suited for the implementation f some of 
the fundamental properties of modem linguistic 
The ELU work environment offers a number of facilities 
to the user: various levels of debugging; tracing on individual 
rules and macros; incremental compilation; repetition of com- 
mands; graphic trace of rule application; scripting, aI~l indica- 
tian of system status at any time. 
theories, i.e. lexicalism and the description of 
linguistic objects structured in terms of complex 
attribute-value pairs. 
Similar to other unification-based systems the gram~ 
mar is written as a set of context-free roles which 
define the structure of constituents. Constraining equa- 
tions annotated on these roles define the combination 
of information, thus establishing the mapping between 
a complex feature structure and the text, which is sim- 
ply a string of words. The lexicon in ELU, containing 
information about the morphological and syntactic 
processes that a given lexical item might undergo, is a 
separate component consisting of a 'base lexicon' and 
an optional morphological processor. In the morpho- 
logical component, word forms are described as a 
concatenation of surface characters (organized as a 
finite-state automaton) and feature structures are 
assigned to a given sequence of characters or globally 
to a transition state. These word forms are associated 
to entries in the base lexicon where relational abstrac- 
tions (see below) provide a concise way to express 
powerful exical generalizations about the behaviour 
of the words. 
Finally, the ELU formalism provides ome exten- 
sions to the well-kiaown unification-based systems 
(such as PATR-II and its derivatives) which make it 
more expressive and permit a more direct expression 
of linguistic generalizations. In particular: 
? ELU provides a language for stating 
? disjunction over both atomic and general feature 
structures 
? atomic negation. 
? ELU accepts terms (trees) and lists as attribute 
values in addition to feature structures. 
? ELU allows direct manipulation of lists defined as 
feature values with primitives imilar to 'append' 
and 'member'. 
? ELU allows the linguist: 
? to define variable path names, 
e to type feature structures as a means of impos- 
ing linguistic onstraints. 
? FLU allows abstracting over sets of equations with 
relational abstractions. Relational abstractions, or
macros, are similar to PATR templates, but they are 
a much more powerful tool, because they admit 
recursive and multiple definitions. They thus allow 
the user to state lexical, morphological nd syntac- 
tic generalizations in a concise way. 
? ELU allows mapping between representations. 
The transfer component in ELU provides a formalism 
to state relations over sets of feature structures in 
order to e.g. transfer from a feature structure of one 
language to the feature structure of another (the output 
of which can serve as input to generation). Transfer 
roles associate the analysis of one feature structure 
with the synthesis of another; they may be thought of 
386 
as a specialized variety of pattem-matching rule. They 
are local in nature, and permit the recursive analysis 
and synthesis of complex feature structures according 
to patterns pecified in a format closely related to that 
of the other FLU components. The interpretation of 
transfer oles involves unification, albeit in a context 
which restricts it to the role of a structure-building 
operation. The rules specify information about two 
distinct feature structures (e.g. one for German and 
one for French) but they do not indicate the direction 
they will be applied in (i.e. no mention of source or 
target language); they are truly bidirectional, simply 
stating a relation that must hold between two feature 
structures. The direction they are to be applied in is 
specified when the rules are compiled in order to 
determine which set of feature structures will be 
matched against and which set are to be 'built', thus 
the same rules can be used in either direction. 
3. Condusion 
The demo will present he various components of 
ELU - morphological nalysis and generation, pars- 
ing, tramfer and generation with grammars for French 
and German. The demonstration will he given by 
Dominique Estival. 
References 
Carroll, J, B. Boguraev, C. Grover and T. Brkscoe 
(1988) "A Development Environment for Large 
Natural Language Grammars". Technical Report 
127, Computer Laboratory, University of Cam- 
bridge. 
Dymetman, M. and P. Isabelle (1988) "Reversible 
Logic Grammars for Machine Translation". 
Proceedings of the Second International Confer- 
ence on Theoretical and Methodological Issues in 
Machine Translation of Natural Languages, 
Came#e-Mellon University, Pittsburgh. 
Estival, D. (1990) "Generating French with a Reversi- 
ble Unification Grammar". Proceedings of COL- 
ING 1990, Helsinki. 
Estival, D., A. Ballim, G. Russell and S. Warwick 
(1990) "A Syntax and Semantics for Feature Struc- 
ture Transfer". Presented at the Third International 
Conference on Theoretical and Methodological 
Issues in Machine Translation of Natural 
Languages, University of Texas at Austin. 
Johnson, R. and M. Rosner (1989) "A rich environ- 
ment for experimentation with unification gram- 
mars". Proceedings of the Fourth Conference of the 
European Chapter of the Association for Computa- 
tional Linguistics, 182-189. 
Kay, M. (1983). "Unification Grammar". Technical 
Report, Xerox Palo Alto Research Center. 
King, M. and K. Falkedal (1990) "Using Test Suites 
in the Evaluation of Machine Translation Systems". 
Proceedings of COLING 1990, Helsinki. 
Russell, G., A. Ballim, D. Estival and S. Warwick 
(1989) "A Language for the Statement of Binary 
Relations over Feature Structures". Internal report, 
ISSCO. 
Russell, G., S. Warwick and J. Carroll (1990) "Asym- 
metry in Parsing and Generating with Unilication 
Grammars". Proceedings of the 28th Annual Meet. 
ing of the Association for Computational Linguis- 
tics, Pittsburgh. 
Sag, I., R. Kaplan, L. Karttunen, M. Kay, C. Pollard, 
S. Shieber and A. Zaenen (1986) "Unification ~md 
Grammatical Theory". Proceedings of the West 
Coast Conference on Formal Linguistics, vol.5, U. 
of Washington. Stanford Linguistics Association. 
Shieber, S. (1986) An Introduction to Unifwation- 
based Approaches to Grammar. Volume 4 of CSLI 
Lectme Notes. 
Van Noord, G. (to appear) "Bottom Up Generation i  
Unification-Based Formalisms", in C. Mellish, R. 
Dale, and M. Zock (eds.) Proceedings of the 
Second European Workshop on Natural Z~angzutge 
Generation. 
3 387 
