20 
1965 I n te rnat iona l  Conference  on 
Computational Linguistics 
ENDOCENTRIC CONSTRUCTIONS AND TIlE COCKE 
PARSING LOGIC 
J ane  J .  Rob inson  
The RAND Corporat ion  
1700 Main S t reet  
Santa  Monica  D Ca l i fo rn ia  90406 
h.- Uo/~ x 
I _~, ..~.' ~ '%.  "~,.\ 
Robinson 2 
ABSTRACT 
Automatic syntactic analysis is simplified by dis- 
engaging the grammatical rules, by means of a parsing 
logic, from the computer routines that apply them. A case 
in point is the John Cocke logic. It iterates on five 
simple parameters and finds all structures permitted by 
the grammar, thus testing the rules, which can then be 
changed without changing the routines. The rules them- 
selves need not be ordered so far as the logic of the 
system is concerned. However, in operating with an IC 
grammar, rules for bracketing endocentric constructions 
must be made quite complex merely to avoid multiple analy- 
ses of unambiguous or trivially ambiguous expressions. 
The rules can be simplified if they are classified and 
if the system is provided with an additional capability 
for applying them in a specified order. Although an 
additional parameter is introduced into the system, the 
disengagement of grammar from routine is preserved. The 
additional parameter controls the direction, left-to-right 
or right-to-left, in which constructions are put together. 
The decision as to which direction should be specified is 
a grammatical decision, and is related to Yngve's hypothe- 
sis of asymmetry in language. It does not affect the opera- 
tion of the parsing logic. 
Robinson 3 
ACKNOWLEDGMENTS 
I wish to acknowledge the ass i s tance  of M. Kay and 
S. Marks in  d i scuss ing  po in ts  ra i sed  in the paper and in 
prepar ing  the f lowchar t .  A more genera l  acknowledgment i s  
due to D. G. Hays,  who f i r s t  ca l led  my at tent ion  to the 
problem of o rder in~ the a t tachment  of  e lements .  
Robinson 4 
ENDOCENTRIC CONSTRUCTIONS AND THE 
COCKE PARSING LOGIC 
Automat ic  sentence  s t ruc ture  determinat ion  (SSD) i s  
g reat ly  s imp l i f ied  i f ,  through the in tervent ion  of a 
pars ing  log ic ,  the grammat ica l  ru les  that  determine  the 
s t ruc ture  are par t ia l l y  d i sengaged from the computer rou- 
t ines  that  apply  to them. Some ear l ie r  pars ing  programs 
ana lyzed  sentences  by rout ines  that  b ranched accord ing  to 
the grammat ica l  p roper t ies  or s igna ls  encountered  at par -  
t i cu la r  points in the sentence, making the routines them- 
selves serve as the rules. This not only required separate 
programs for each language, but led to extreme proliferation 
in the routines, requiring extensive rewriting and debu~gin~ 
with every discovery and incorporation of a new ~rammatical 
feature. More recently, programs for SSD have employed 
generalized parsing logics, applicable to different lan- 
guages and providing primarily for an exhaustive and sys- 
tematic application of a set of rules. (1,2,5,5) The rules 
themselves can be changed without changing the routines 
that apply them, and the routines consequently take fuller 
advantage of the speed with which digital computers can 
repeat the same sequence of instructions over and over 
again, changing only the values of some parameters at each 
cycle. 
Rob inson  S 
The case in point is the parsing logic (PL) devised 
by John Cocke in 1960, for applying the rules of a context- 
free phrase structure grammar (PSG), requiring that each 
structure recognized by the grammar be analyzed into two 
and only two immediate constituents.(I) 
Although all PSGs appear to be inadequate in some 
important respects to the task of handling natural lan- 
guage, they still form the base of the more powerful 
transformational grammars, which are not yet automated 
for SSD. Moreover, even their severest critic acknowledges 
that "The PSG conception of grammar...is a quite reasonable 
theory of natural language which unquestionably formalizes 
many actual properties of human language."(6,P "78) Both 
theoretically and empirically the development and automatic 
application of PSGs are of interest to linguists. 
The PSG on which the Cocke Pl, operates is essentially 
a table of constructions. Its rules have three entries, 
one for the code (a descriptor) of the construction, the 
other two specifying the codes of the ordered pair of 
immediate constituents out of which it may be formed. 
The logic iterates in five nested loops, controlled by 
three simple parameters and two codes supplied by the 
grammar. They are: i) the string length, starting with 
length 2, of the segment being tested for constructional 
Robinson 6 
s ta tus ;  2) the  pos i t ion  of the f i r s t  word in the  tes ted  
s t r ing ;  3) the  length  of  the  f i r s t  const i tuent ;  4) the  
codes of  the  f i r s t  const i tuent ;  and 5) the  codes of  the  
second const i tuent .  
A f te r  a d ic t ionary  lookup rout ine  has ass i~.ned grammar 
codes to a l l  the  occur rences  in  the  sentence  or  to ta l  
s t r ing  to  be parsed  ( i t  need not  be a sentence) ,  the PL 
operates  to o f fe r  the  codes of  pa i rs  o f  ad jacent  segments  
to a pars ing  rout ine  that  tes ts  the i r  connectab i l i ty  by 
look ing  them up in  the  s tored  tab le  of  const ruct ions ,  i .e . ,  
in the  grammar.  I f  the  ordered  pa i r  i s  matched by a pa i r  
of ICs in  the  tab le ,  t i le code of  the  const ruct ion  formed 
by the  ICs is  added to  the  l i s t  of  codes to be o f fe red  
fo r  tes t in~ when i te ra t ions  are per fo rmed on longer  s t r ings .  
In the RAND program for  pars ing  Eng l i sh ,  the  rout ines  
produce  a labe led  b inary -branch ing  t ree  fo r  every  complete  
s t ruc tura l  ana lys i s .  There w i l l  be one t ree  i f  the  grammar 
recogn izes  the  s t r ing  as we l l - fo rmed and syntact i ca l l y  
unambiguous ;  more than  one i f  i t  i s  recogn ized  as ambiguous .  
Even i f  no complete  ana lys i s  i s  made of  the  whole s t r ing ,  
a resum~ l i s t s  a l l  const ruct ions  found in  the  process ,  
including those which failed of inclusion in larger con- 
structions. (8,9) 
*This  in teract ion  between a PL and a rout ine  fo r  tes t ing  
the connectab i l i ty  of  two i tems is  descr ibed  in somewhat 
greater  deta i l  in Hays (2 ) .  
Rob ins on 7 
Besides simplifying the problem of revising the grammar 
by separating it from the problem of application to sen- 
tences, the PL, because it leads to an exhaustive application 
of the rules, permits a rigorous evaluation of the 
grammar's ability to assign structures to sentences and 
also reveals many unsuspected yet legitimate ambiguities 
in those sentences.(4, 7) But because of the difficulties in- 
herent in specifying a sufficiently discriminatory set of 
rules for sentences of any natural language and because 
of the very many syntactic ambiguities, resolvable only 
through lar~er context, this method of parsing produces 
a long list of intermediate constructions for sentences 
of even modest length, and this in turn raises a storage 
prob lem. 
By way of illustration, consider a string of four 
occurrences, x I x 2 x 3 x4, a dictionary that assigns a 
single grammar code to each, and a grammar that assigns 
a unique construction code to every different combination 
of adjacent segments. Given such a grammar, as in Table I, 
the steps in its application to the string by the parsing 
routines operating with the Cocke PL are represented in 
Table II. (The preliminary dictionary lookup assigning 
the original codes to the occurrences is treated as equiv- 
alent to iterating with the parameter for string length 
set to I ) .  
Rob inson  8 
Table I 
Rule # ICl IC2 CO 
I. A B E 
2o B C F 
3. c D o 
4. A F H 
5. E C I 
6. B G J 
7. F D I< 
ICl: 
IC2: 
code of first constituent 
code of second constituent 
Rule # iCl 102 CO 
8. A J L 
9. A K M 
lO. E G N 
ii. H D 
12. I D P 
13. A C Q 
14. etc. 
CC: code of construction 
Table II 
Steps 
?i ~ M W P C(P) C(Q) C(M) Rule ~ Combined Structure Assigned 
I. i I i A A 
2. 1 2 i B B 
3. I 3 \] c c 
4. 1 4 1 D D 
Dictionary x I 
lookup x 2 
assio~ning x 3 
codes to: x 4 
5. ? 
6. 2 
7. 2 
8. 3 
9. 3 
I0. x 
ll. 3 
12. 4 
13. 4 
14. 4 
15. 4 
16. 4 
#: 
P: 
c(P). 
i 1 
2 i 
3 1 
1 1 
! 2 
2 I 
2 
1 1 A 
I I ,'. 
I o E 
i 3 H 
1 3 i 
A R 
B C F 
C D G 
A F H 
~ C I 
B G J 
F D K 
J L 
i,; M 
O >T 
D i' 
stel; number 
strinj \].en~Tth of segment 
I t  
3. 
o 
5. 
6. 
7. 
~o 
9. 
\].0. 
Ii. 
12. 
lenr'th of first construction 
s t,-ing 
code of first construction 
1+2 (Xl+X 2 ) 
2+3 (x2~x 3) 
~+4 (x3+x 4) 
5+3 < (Xl+~2)~," 3 ) 
? 2+7 (x2(x3+x 4) ) 
/ X 6~ (~x2+. 3)x4) 
c(M). 
i+i0 
!+ll 
5+7 
8+4 
9+4 
(x1(x2(x3+x4))) 
(Xl((x2+x3)%)) 
( (:c I ,x~) (~ 3?~4) )
( (xj (x2+x 5) )xg) 
(((x l+x2)x ~)xL~) 
code of second const, string 
code for string, to be stored 
when C(P) and C(Q) are matched 
in the o~r_ammar. 
C(M) = CC of crammar. 
The boxed section represents the PL iterations. 
Rob inson  9 
With such a grammar, the number of constructions to 
be stored and processed through each cycle increases in 
proportion to the cube of the number of words in the 
sentence. If the dictionary and grammar assign more than 
one code to occurrences and constructions, the number may 
grow multiplicatively, making the storage problem still 
more acute. For example, if x I were assigned two codes 
instead of one, additional steps would be required for 
every string in which x I was an element and iteration on 
string length 4 would require twice as many cycles and 
twice as much storage. 
Of course, reasonable grammars do not provide for 
combining every possible pair of adjacent segments into 
a construction, and in actual practice the growth of the 
construction list is reduced by failure to find the two 
codes presented by the PL, when the grammar is consulted. 
If Rule i is omitted from the grammar in Table I, then 
steps S, 9, 14, and 16 will disappear from Table II and 
both storage requirements and processing time will be cut 
down. Increasing the discriminatory power of the grammar 
through refining the codes so that the first occurrence 
must belong to class Aa and the second to class Bb in 
order to form a construction provides this limiting effect 
in essentially the same way. 
Robinson I0 
Another way o? limiting the growth o? the stored 
constructions is to take advantage of the fact that in 
actual grammars two or more different pairs of constituents 
sometimes combine to produce the "same" construction. 
Assume that A and F (Table I) combine to form a construc- 
tion whose syntactic properties are the same, at least 
within the discriminatory powers of the grammar, as those 
of the construction formed by E and C. Then Rules 4 and S 
can assign the same code, }l, to their constructions. In 
consequence, at both steps 8 and 9 in the parsing (Table 
If), |1 will be stored as the construction code C(M) for 
the string x I x 2 x3, even though two substructures are 
recorded for it: i.e. (Xl(X 2 + x3) ) and ((x I + x2)x3). 
The string can be marked as having more than one structure, 
but in subsequent iterations on string length 4, only one 
concatenation of the string with x 4 need be made and step 
16 can be omitted. When the parsing has terminated, all 
substructures of completed analyses are recoverable, 
including those of marked strings. 
Eliminating duplicate codes for the same string from 
the cycles of the PL results in dramatic savings in time 
and storage, partly because the elimination of any step 
has a cumulative effect, as demonstrated previously. In 
addition, opportunities to eliminate duplicates arise 
frequently, in English at least, because of the frequent 
Rob in s on 11 
occur rence  o? endocent r i c  const ruct ions ,  . const ruct ions  
whose syntact i c  p roper t ies  are  la rge ly  the  same as those  
o? one of  the i r  e lements - - the  head.  In Eng l i sh~ noun 
phrases  are  typ ica l ly  endocent r i c ,  and when a noun head 
is flanked by attributives as in a phrase consisting of 
article, noun, prepositional phrase (A N PP), the require- 
ment that constructions have only two ICs promotes the 
assignment of two structures, (A(N+PP)) and (~A+N) PP), 
unless the grammar has been carefully formulated to avoid 
it. Since NPs of this type are ubiquitous, occurrinp, 
as subjects, objects of verbs, and objects of prepositions, 
duplicate codes for them are likely to occur at several 
points in a sentence. 
Consideration of endocentric constructions, however, 
raises other questions, some theoretical and some practi- 
cal, suggesting modification of the grammar and the 
parsing routines in order to represent the language more 
accurately or in order to save storage, or both. Theoreti- 
cally, the problem is the overstructuring of noun phrases 
by the insistence on two ICs and the doubtful propriety 
of permitting more than one way of structuring them. 
Practically, the problem is the elimination of duplicate 
construction codes stored for endocentric phrases when 
the codes are repeated for different string lengths. 
Rob inson  12 
Cons ider  the  noun phrase  sub jec t  in  A l l  the  o ld  men 
on the  corner  s ta . red .  I t s  syntact i c  p roper t ies  a re  
essent ia l l y  the  same as that  o f  men. But f i f teen  o ther  
phrases ,  a l l  made up f rom the  same e lements  but  vary ing  
in  length ,  a l so  have  the  same proper t ies .  They are  
shown be low:  
Tab le  I I I  
Length  
I .  7 
2. 6 
5. 6 
4. 6 
5. 5 
6. 5 
7. 5. 
8. 4 
9. 4 
i0.  3 
i i .  3 
12. 3 
13. 2 
14. 2 
15. 2 
16. 1 
Noun phrase  
A l l  the  o ld  men on the  corner  
The o ld  men on the  corner  
A l l  the  men on the  corner  
A l l  o ld  men on the  corner  
O ld  men on the  corner  
The men on the  corner  
A l l  men on the  corner  
Men on the  corner  
A l l  the  o ld  men 
The o ld  men 
A l l  the  men 
A l l  o ld  men 
Old  men 
The men 
A l l  men 
Men 
(s ta red)  
A reasonab ly  good grammar shou ld  prov ide  fo r  the  
recogn i t ion  of  a l l  s ix teen  phrases .  Th is  i s  not  to  say  
that  s ix teen  separate  ru les  a re  requ i red ,  a l though th i s  
wou ld  be one way o f  do ing  i t .  M in ima l ly ,  the  grammar must  
p rov ide  two ru les  fo r  an endocent r i c  NP, one to  combine  
the  head  noun or the  s t r ing  conta in ing  i t  w i th  a preced ing  
a t t r ibut ive  and another  to  combine  i t  w i th  a fo l low ing  
Robinson 13 
attributive. The codes for all the resulting constructions 
may be the same, but even so, the longest phrase will re- 
ceive four different structural assignments or bracketings 
as its adjacent elements are gathered together in pairs; 
(a l l  (the (old (men (on the corner ) ) ) ) )  
(a l l  (the ((o ld men) (on the corner ) ) ) )  
(a l l  ( ( the (old men)) (on the corner ) ) )  
and ( (a l l  (the (old men))) (on the corner))  
I f  i t  is assumed that  the same code, say that  of a 
p lura l  NP, has been assigned at each s t r ing  length,  i t  is 
true that  only one add i t iona l  step is needed to concatenate 
the string with the following verb when the PL iteration 
is performed for string length 8. But meanwhile a number 
of intermediate codes have been stored during iterations 
on string lengths 5, 6, and 7 as the position of the first 
word of the tested string was advanced, so that the list 
also contains codes for: 
men on the corner stared (length 5) 
old men on the corner stared (length 6) 
and the old men on the corner stared (length 7) 
Again, the codes may be the same, but duplicate codes will 
not be eliminated from processing if they are associated 
with different strings, and strings of different length are 
treated as wholly different by the PL, regardless of over- 
lap. If this kind of duplication is to be reduced or 
name ly: 
Robinson 14 
avo ided ,  a d i f fe rent  p rocedure  i s  requ i red  from that  ava i l -  
ab le  fo r  the  case  of  s imp le  dup l i ca t ion  over  the  same 
s t r ing .  
But f i r s t  a theoret i ca l  quest ion  must be dec ided .  
Is  the  noun phrase ,  as exempl i f ied  above ,  perhaps  rea l ly  
four -ways  ambiguous and do the  four  d i f fe rent  b racket ings  
cor re la te  sys temat ica l ly  w i th  four  d i s t inc t  in terpreta t ions  
or  ass ignments  of  semant ic  s t ruc ture?  (Cf"  4 ,7)  And  i f  so ,  
i s  i t  des i rab le  to  e l im inate  them? I t  i s  poss ib le  to  a rgue  
that  some of  the  d i f fe rent  b racket ings  do cor respond to  
d i f fe rent  mean ings  or  emphases ,  o r - - in  ear l ie r  t rans forma-  
t iona l  te rms- - to  d i f fe rent  o rder ings  in the  embeddings  o f  
the  men were o ld  and the  men were on the  corner  in to  a l l  the  
men s tared .  Admi t ted ly  the nat ive  speaker  can ind icate  
contrasts in meaning by his intonation, emphasizing in one 
reading that all the men stared and in another that it was 
all the ol___dd men who stared; and the writer can resort to 
italics. But it seems reasonable to assume that there is 
a normal intonation for the unmarked and unemphatic phrase 
and that its interpretation is structurally unambiguous. 
In the absence of italics and other indications, it seems 
~_~_reasonable to produce four different bracketings at every 
encounter with an NP of the kind exemplified. 
Robinson 15 
One way to reduce the duplication is to write the 
grammar codes so that, with the addition of each possible 
element, the noun head is assigned a different construction 
code whose distribution as a constituent in larger construc- 
tions is carefully limited. For the sake of simplicity, 
assume that the elements of NPs have codes that reflect, 
in part, their ordering within the phrase and that the NP 
codes themselves reflect the properties of the noun head 
in first position and are subsequently differentiated by 
codes in later positions that correspond to those of the 
at t r ibutes .  Let the codes fo r  the elements be 1 (a l l ) ,  
2 ( the) ,  3 (o ld ) ,  4 (men), 5 (on the corner ) .  Rules may 
be written to restrict the combinations, as follows: 
Robinson 16 
Tab le IV 
R# ICI IC2 CC 
i ,  1+4 ?41 
2. 2+4 ?42 
3. 3+4 ?43 
4. 4+5 ?45 
5. i + 42 ? 412 
6. 1 + 43 ? 413 
7. 2 + 43 ? 423 
8. I + 423 ? 4123 
9. 1 + 45 ? 41S 
10. 2 ? 45 ? 42S 
I I .  3 + 45 ? 435 
12. 2 + 435 ? 4235 
13. 1 ? 4235 ? 41235 
(a l l  men) 
(the men) 
(old men) 
(men on the corner)  
(a l l  the men) 
(a l l  old men) 
(the old men) 
(a l l  the old men) 
(a l l  men on the corner ) ;  but not 
"41 + S ? 415 
(the men on the corner ) ;  but  not 
*42 + 5 ? 425 
(o ld  men on the corner ) ;  but  not 
*43 + 5 ? 435 
( the o ld  men on the corner ) ;  but  not 
*423 + 5 ? 4235 
(a l l  the o ld  men on the corner ) ;  but  
not  "4123 + 5 ? 41235 
With these ru les ,  the Rrammar prov ides  for  only one 
s t ructura l  ass ignment o the s t r ing :  (a l l  ( the (old (men + 
on the corner ) ) ) ) .  
This method has the advantage of acknowledging the 
genera l  endocent r i c i ty  of the NP whi le a l lowing for  i t s  
l im i ta t ions ,  so that  where the subt le r  d i f fe rences  among 
NPs are not re levant ,  they can be ignored by ignor ing  
cer ta in  pos i t ions  of the codes, and where they are re levant ,  
the fu l l  codes are ava i lab le .  The method should lend 
Robinson 17 
i t se l f  qu i te  wel l  to code matching rout ines  for  connect-  
ab i l i ty .  However, i f  car r ied  out fu l l y  and cons is tent ly ,  
i t  g reat ly  inc reases  the length and complex i ty  of both 
the codes and the ru les ,  and th i s  may a lso  be a source of 
problems in s torage  and process ing  t ime.  (c f .  Flays, 2) 
Another method is to make use of a classification of 
the rules themselves. Since the lowest loop of the PL 
(see Fig. I) iterates on the codes of the second constitu- 
ents, the rules against which the paired strings are 
tested are stored as ordered by first IC codes and sub- 
ordered by second IC codes. If the iterations of the 
logic were differently ordered, the rules would also be 
differently ordered, for efficiency in testing. In other 
words, the code of one constituent in the test locates 
a block of rules within which matches for all the codes 
of the other constituent are to be sought; but the hierarchy 
of ordering by one constituent or the other is a matter 
of choice so long as it is the same for the PL and for storing 
the table of rules that constitute the grammar. In writing 
and revising the rules, however~ it proves humanly easier 
if they are grouped according to construction types. 
Accordingly, all endocentric NPs in the RAND grammar are 
given rule identification tags with an A in first position. 
Within this grouping, it is natural to subclass the rules 
according to whether they attach attributives on the right 
Robinson 18 
or  on the  le f t  of  the  noun head .  I f  p roper ly  fo rmal i zed ,  
th i s  p ract i ce  can lead  to  a reduct ion  in the  mul t ip le  
ana lyses  of  NPs w i th  fewer  ru les  and s imp ler  codes  than  
those  of  the  prev ious  method.  
As app l ied  to the  example ,  the th i r teen  ru les  and 
f i ve -p lace  codes of  Tab le  IV can be reduced  to two ru les  
w i th  one-p lace  codes and an add i t iona l  feature  in  the  ru le  
identification tag. 
*AI 
The rules can be written as: 
1 N N 
2 
3 
$A2 N 4 N 
Although the construction codes are less finely differen- 
tiated, the analysis of the example will still be unique, 
and the number of abortive intermediate constructions will 
be reduced. To achieve this effect, the connectability 
test routine must include a comparison of the rule tag 
associated with each C(P) and the rule tags of the grammar. 
If a rule of type *A is associated with the C(P), that is, 
if an *A rule assigned the construction code to the string 
P which is now being tested as a possible first constitu- 
ent, then no rule of type $A can be used in the current 
test. For all such rules, there will be an automatic 
"no match" without checking the second constituent codes. 
(See Fig. I.) As a consequence of this restriction, in 
Robinson 19 
the final analysis, the noun head will have been com- 
bined with all attributives on the right before acquiring 
any on the left. 
To be sure, the resume of intermediate constructions 
will contain codes for ol___dd men, the old men, and all the 
ol__.dd me__n_n , produced in the course of iterations on string 
lengths 2, 3, and 4, but only one structure is finally 
assigned to the whole phrase and the intermediate dupli- 
cations of codes for strings of increasing length will 
be fewer because of the hiatus at string length 5. Of 
course, in the larger constructions in which the NP par- 
ticipates, the reduction in the number of stored inter- 
mediate constructions will be even greater. 
Provisions may be made in the rules for attaching 
still other attributives to the head of the NP without 
great increase in complexity of rules or multiplication 
of structural analyses. Rule $A2, for example, could 
include provision for attaching a relative clause as well 
as a prepositional phrase, and while a phrase like the 
men on the corner who were sad might receive two analyses 
unless the codes were sufficiently differentiated to pre- 
vent the clause from being attached to corner as well as 
to me___n, at least the further differentiation of the codes 
need not also be multiplied in order to prevent the multiple 
analyses arising from endocentricity. 
Robinson 20 
S imi la r ly ,  fo r  verb phrases  where the ru le  must a l low 
fo r  an indef in i te  number of  adverb ia l  mod i f ie rs ,  a s ing le  
ana lys i s  can be obta ined  by marking the s t r ings  and the 
ru les  and fo rc ing  a combinat ion  in  a s ing le  d i rec t ion .  In 
shor t ,  a l though the  Cocke PL tends to promote mul t ip le  ana ly -  
s i s  of  unambiguous or t r i v ia l l y  ambiguous endocent r i c  
phrases ,  at the same t ime increas ing  the problem of s to r ing  
in termed ia te  const ruct ions ,  the number of  ana lyses  can be 
great ly  reduced and the s torage  problem great ly  a l lev ia ted  
i f  the  ru les  of  the grammar recogn ize  endocent r i c i ty  wherever  
poss ib le  and i f  they  are c lass i f ied  so that  ru les  fo r  endo- 
cent r i c  const ruct ions  are marked as le f t  (*) or r ight  ($ ) ,  
and the i r  o rder  of  app l i ca t ion  is  spec i f ied .  
A f ina l  theoret i ca l -p ract i ca l  cons iderat ion  can at 
leas t  be touched on, a l though i t  i s  not poss ib le  to develop 
i t  adequate ly  here .  The fo rego ing  descr ip t ion  prov ided  fo r  
combin ing a head w i th  i t s  a t t r ibut ives  (or dependents )  on the 
right before combining it with those on the left, but 
either course is possible. Which is preferable depends 
on the type of construction and on the language generally. 
If Yngve's hypothesis that languages are essentially 
asymmetrical, tending toward right-branching constructions 
to avoid overloading the memory, is correct, then the 
Robinson 21 
requirement to combine first on the right is pre ferab le .  (10) 
This is  a pure ly  grammatical  cons iderat ion ,  however, and 
does not affect the procedure sketched above, in principle. 
For example, consider an endocentric construction of string 
length 6 with the head at position 3, so that its extension 
is predominantly to the right, thus: 1 2 (3) 4 5 6. If all 
combinations were allowed by the rules, there would be 
thirty-four analyses. If combination is restricted to 
either direction, left or right, the number of analyses is 
reduced to eleven. However, if the Cocke PL is used to 
analyze a left-branching language, making it preferable to 
specify prior combination on the left, then the order of 
nesting of the fourth and fifth loops of the PL should be 
reversed (Fig. I) and the rules of the grammar should be 
stored in order of their second constituent codes, subordered 
on those of the first constituents. 
Robinson 22 
N" 
P: 
Q: 
M: 
Fig. I 
FLOWCHART FOR THE COCKE PL 
sentence length 
string length of first 
constituent 
string length of second 
constituent 
P+Q - string length of 
construction 
W" 
L(W) : 
C(P): 
c (Q) : 
number of first word of M 
N-M+I = limit of first word 
code of first constituent 
code of second constituent 
l~ M+I?MI<~ > 
CONSTRUCTION CODE 
ASSOCIATED WITH M, 
AND KEEP TRACK 
INPUT SENTENCE OF LENGTH N 
do dictionary lookup 
associate grammar codes 
with words and keep track 
\[SET M EQUAL TO 2\[ 
> 
ISET L(W) EQUAL TO (N-M+I) 
l .... SET W EQUAL TO I 
,<  
~OMPARE W AND L(W)~ 
\[SET p EQUAL iO I l 
~OMPARE P AND_~M~---- " \ ]  W+: 
OUTPUT 
l 
I?W I 
no more t 
. l P+I?P 
mo re  
RESET TO FIRST C(Q), GET 
NEXT C (P) 
IM-P I 
COMPARE C(P), C(Q) WITH DE~ 
IRST IC CODE, SECOND IC CO 
IN THE GRAMMAR 
match ~no match 
STORE RULE # AND (~EST FOR MORE C(Q) S~ k ' -  - j  
no more ~ ~ more 
Robinson 23 
REFERENCES 
. 
. 
. 
. 
. 
. 
. 
. 
. 
I0. 
}lays, D. G., "Automatic Language-Data Processing," 
Computer Applications in the Behavioral Sciences, 
Chapter 17, Prentice-Hall, 1962. 
}lays, D. G. "Connectability Calculations, syntactic 
Functions, and Russian Syntax," Mechanical Transla- 
tio.___~n, Vol. 8, No. 1 (August 1964). 
Kuno, S . ,  and A. G. Oet t inger ,  "Mu l t ip le -path  Syntact i c  
Analyzer," Mathematical Linguistics and Automatic 
Translation, Report No. NSF-8, Sec. TT-The Computa- 
tion Laboratory of }larvard University, 1965. 
Kuno, S., and A. G. Oettinger, "Syntactic Structure and 
Ambiguity of English," AFIPS Conference Proceedings 
Vol. 24, 1965 Fall Joint--~mputer Con?erence.  
National Physical Laboratory, 1961 International 
Conference o__n_n Machine Trans-T~ion of Languages and 
Applied Language Analysis, Vol. 2,-\[\[. M. Stationery 
Office, 1962. 
Postal, P. M. Constituent Structure, Publication Thirty 
of the Indiana Un ivers~rch  Center in Anthro- 
pology, Folklore, and Linguistics, January 1964. 
Robinson, J.) "Automated Grammars as Linguistics Tools," 
(Unpublished), Presented at the Thirty=ninth Annual 
Meeting of the Linguistic Society of America, New 
York, December 1964. 
Robinson, J., The Automatic Recognition of Phrase 
Structure and Paraphrase, RM-4005-PR (Abridlged), 
The RAND Corporation, Santa Monica, December 1964. 
Robinson, J., Preliminary Codes and Rules for the Automatic 
Parsing of English, RM-S339-PR, =The RAN\]) Corporation, 
Santa Mort}ca, December 1962. 
Yngve, V. li., "A Model and an Hypothesis for Language 
Structure," Proceedings of the American Philosophical 
Society, Vol. 104, No. S--\[Oct-~e-r 1960). 
