Proceedings of the 51st Annual Meeting of the Association for Computational Linguistics, pages 615?621,
Sofia, Bulgaria, August 4-9 2013. c?2013 Association for Computational Linguistics
Decipherment Complexity in 1:1 Substitution Ciphers
Malte Nuhn and Hermann Ney
Human Language Technology and Pattern Recognition
Computer Science Department, RWTH Aachen University, Aachen, Germany
<surname>@cs.rwth-aachen.de
Abstract
In this paper we show that even for the
case of 1:1 substitution ciphers?which
encipher plaintext symbols by exchang-
ing them with a unique substitute?finding
the optimal decipherment with respect to a
bigram language model is NP-hard. We
show that in this case the decipherment
problem is equivalent to the quadratic as-
signment problem (QAP). To the best of
our knowledge, this connection between
the QAP and the decipherment problem
has not been known in the literature be-
fore.
1 Introduction
The decipherment approach for MT has recently
gained popularity for training and adapting trans-
lation models using only monolingual data. The
general idea is to find those translation model
parameters that maximize the probability of the
translations of a given source text in a given lan-
guage model of the target language.
In general, the process of translation has a wide
range of phenomena like substitution and reorder-
ing of words and phrases. In this paper we only
study models that substitute tokens?i.e. words
or letters?with a unique substitute. It therefore
serves as a very basic case for decipherment and
machine translation.
Multiple techniques like integer linear program-
ming (ILP), A? search, genetic algorithms, and
Bayesian inference have been used to tackle the
decipherment problem for 1:1 substitution ciphers.
The existence of such a variety of different ap-
proaches for solving the same problem already
shows that there is no obvious way to solve the
problem optimally.
In this paper we show that decipherment of 1:1
substitution ciphers is indeed NP-hard and thus ex-
plain why there is no single best approach to the
problem. The literature on decipherment provides
surprisingly little on the analysis of the complexity
of the decipherment problem. This might be re-
lated to the fact that a statistical formulation of the
decipherment problem has not been analyzed with
respect to n-gram language models: This paper
shows the close relationship of the decipherment
problem to the quadratic assignment problem. To
the best of our knowledge the connection between
the decipherment problem and the quadratic as-
signment problem was not known.
The remainder of this paper is structured as
follows: In Section 2 we review related work.
Section 3 introduces the decipherment problem
and describes the notation and definitions used
throughout this paper. In Section 4 we show that
decipherment using a unigram language model
corresponds to solving a linear sum assignment
problem (LSAP). Section 5 shows the connection
between the quadratic assignment problem and de-
cipherment using a bigram language model. Here
we also give a reduction of the traveling sales-
man problem (TSP) to the decipherment problem
to highlight the additional complexity in the deci-
pherment problem.
2 Related Work
In recent years a large number of publications
on the automatic decipherment of substitution ci-
phers has been published. These publications were
mostly dominated by rather heuristic methods and
did not provide a theoretical analysis of the com-
plexity of the decipherment problem: (Knight and
Yamada, 1999) and (Knight et al, 2006) use the
EM algorithm for various decipherment problems,
like e.g. word substitution ciphers. (Ravi and
Knight, 2008) and (Corlett and Penn, 2010) are
able to obtain optimal (i.e. without search errors)
decipherments of short cryptograms given an n-
615
gram language model. (Ravi and Knight, 2011),
(Nuhn et al, 2012), and (Dou and Knight, 2012)
treat natural language translation as a deciphering
problem including phenomena like reordering, in-
sertion, and deletion and are able to train transla-
tion models using only monolingual data.
In this paper we will show the connection be-
tween the decipherment problem and the linear
sum assignment problem as well as the quadratic
assignment problem: Regarding the linear sum as-
signment problem we will make use of definitions
presented in (Burkard and ela, 1999). Concern-
ing the quadratic assignment problem we will use
basic definitions from (Beckmann and Koopmans,
1957). Further (Burkard et al, 1998) gives a good
overview over the quadratic assignment problem,
including different formulations, solution meth-
ods, and an analysis of computational complexity.
The paper also references a vast amount of fur-
ther literature that might be interesting for future
research.
3 Definitions
In the following we will use the machine trans-
lation notation and denote the ciphertext with
fN1 = f1 . . . fj . . . fN which consists of cipher
tokens fj ? Vf . We denote the plaintext with
eN1 = e1 . . . ei . . . eN (and its vocabulary Ve re-
spectively). We define
e0 = f0 = eN+1 = fN+1 = $ (1)
with ?$? being a special sentence boundary token.
We use the abbreviations V e = Ve ? {$} and V f
respectively.
A general substitution cipher uses a table
s(e|f) which contains for each cipher token f a
probability that the token f is substituted with the
plaintext token e. Such a table for substituting
cipher tokens {A,B,C,D} with plaintext tokens
{a, b, c, d} could for example look like
a b c d
A 0.1 0.2 0.3 0.4
B 0.4 0.2 0.1 0.3
C 0.4 0.1 0.2 0.3
D 0.3 0.4 0.2 0.1
The 1:1 substitution cipher encrypts a given
plaintext into a ciphertext by replacing each plain-
text token with a unique substitute: This means
that the table s(e|f) contains all zeroes, except for
one ?1.0? per f ? Vf and one ?1.0? per e ? Ve.
For example the text
abadcab
would be enciphered to
BCBADBC
when using the substitution
a b c d
A 0 0 0 1
B 1 0 0 0
C 0 1 0 0
D 0 0 1 0
We formalize the 1:1 substitutions with a bijective
function ? : Vf ? Ve. The general decipher-
ment goal is to obtain a mapping ? such that the
probability of the deciphered text is maximal:
?? = argmax
?
p(?(f1)?(f2)?(f3)...?(fN )) (2)
Here p(. . . ) denotes the language model. De-
pending on the structure of the language model
Equation 2 can be further simplified.
Given a ciphertext fN1 , we define the unigram
count Nf of f ? V f as1
Nf =
N+1?
i=0
?(f, fi) (3)
This implies that Nf are integer counts > 0. We
similarly define the bigram count Nff ? of f, f ? ?
V f as
Nff ? =
N+1?
i=1
?(f, fi?1) ? ?(f ?, fi) (4)
This definition implies that
(a) Nff ? are integer counts > 0 of bigrams found
in the ciphertext fN1 .
(b) Given the first and last token of the cipher f1
and fN , the bigram counts involving the sen-
tence boundary token $ need to fulfill
N$f = ?(f, f1) (5)
Nf$ = ?(f, fN ) (6)
(c) For all f ? Vf
?
f ??Vf
Nff ? =
?
f ??Vf
Nf ?f (7)
must hold.
1Here ? denotes the Kronecker delta.
616
Similarly, we define language model matrices S
for the unigram and the bigram case. The uni-
gram language model Sf is defined as
Sf = log p(f) (8)
which implies that
(a) Sf are real numbers with
Sf ? [??, 0] (9)
(b) The following normalization constraint holds:
?
f?Vf
exp(Sf ) = 1 (10)
Similarly for the bigram language model matrix
Sff ? , we define
Sff ? = log p(f ?|f) (11)
This definition implies that
(a) Sff ? are real numbers with
Sff ? ? [??, 0] (12)
(b) For the sentence boundary symbol, it holds
that
S$$ = ?? (13)
(c) For all f ? Vf the following normalization
constraint holds:
?
f ??Vf
exp(Sff ?) = 1 (14)
4 Decipherment Using Unigram LMs
4.1 Problem Definition
When using a unigram language model, Equa-
tion 2 simplifies to finding
?? = argmax
?
N?
i=1
p(?(fi)) (15)
which can be rewritten as
?? = argmax
?
?
f?Vf
NfS?(f) (16)
When defining cff ? = Nf log p(f ?), for f, f ? ?
Vf , Equation 16 can be brought into the form of
?? = argmax
?
?
f?Vf
cf?(f) (17)
Figure 1 shows an illustration of this problem.
A
B
C
a
b
c
Ve Vf
cij A B Ca NA log p(a) NB log p(a) NC log p(a)b NA log p(b) NB log p(b) NC log p(b)c NA log p(c) NB log p(c) NC log p(c)
Figure 1: Linear sum assignment problem for a
cipher with Ve = {a, b, c}, Vf = {A,B,C}, uni-
gram counts Nf , and unigram probabilities p(e).
4.2 The Linear Sum Assignment Problem
The practical problem behind the linear sum
assignment problem can be described as fol-
lows: Given jobs {j1, . . . , jn} and workers
{w1, . . . , wn}, the task is to assign each job ji to a
worker wj . Each assignment incurs a cost cij and
the total cost for assigning all jobs and workers is
to be minimized.
This can be formalized as finding the assign-
ment
?? = argmin
?
n?
i=1
ci?(i) (18)
The general LSAP can be solved in polynomial
time using the Hungarian algorithm (Kuhn, 1955).
However, since the matrix cij occurring for the de-
cipherment using a unigram language model can
be represented as the product cij = ai ? bj the
decipherment problem can be solved more easily:
In the Section ?Optimal Matching?, (Bauer, 2010)
shows that in this case the optimal assignment is
found by sorting the jobs ji by ai and workers wj
by bj and then assigning the jobs ji to workers wj
that have the same rank in the respective sorted
lists. Sorting and then assigning the elements can
be done in O(n log n).
5 Decipherment Using Bigram LMs
5.1 Problem Definition
When using a 2-gram language model, Equation 2
simplifies to
?? = argmax
?
?
?
?
N+1?
j=1
p(?(fj)|?(fj?1))
?
?
? (19)
617
xy
l1l2
l3 l4
Assignments
l1 l2 l3 l4(a) f1 f2 f3 f4(b) f1 f4 f3 f2
Flows
f1 f2 f3 f4
f1 1
f2 1
f3 1
f4 1
Figure 2: Hypothetical quadratic assignment prob-
lem with locations l1 . . . l4 and facilities f1 . . . f4
with all flows being zero except f1 ? f2 and
f3 ? f4. The distance between locations l1 . . . l4
is implicitly given by the locations in the plane,
implying a euclidean metric. Two example assign-
ments (a) and (b) are shown, with (b) having the
lower overall costs.
Using the definitions from Section 3, Equation 19
can be rewritten as
?? = argmax
?
?
?
?
?
f?Vf
?
f ??Vf
Nff ?S?(f)?(f ?)
?
?
? (20)
(Bauer, 2010) arrives at a similar optimization
problem for the ?combined method of frequency
matching? using bigrams and mentions that it can
be seen as a combinatorial problem for which an
efficient way of solving is not known. However,
he does not mention the close connection to the
quadratic assignment problem.
5.2 The Quadratic Assignment Problem
The quadratic assignment problem was introduced
by (Beckmann and Koopmans, 1957) for the fol-
lowing real-life problem:
Given a set of facilities {f1, . . . , fn} and a set
of locations {l1, . . . , ln} with distances for each
pair of locations, and flows for each pair of facili-
ties (e.g. the amount of supplies to be transported
between a pair of facilities) the problem is to as-
sign the facilities to locations such that the sum
of the distances multiplied by the corresponding
flows (which can be interpreted as total transporta-
tion costs) is minimized. This is visualized in Fig-
ure 2.
Following (Beckmann and Koopmans, 1957)
we can express the quadratic assignment problem
as finding
?? = argmin
?
?
?
?
n?
i=1
n?
j=1
aijb?(i)?(j) +
n?
i=1
ci?(i)
?
?
?
(21)
where A = (aij), B = (bij), C = (cij) ? Nn?n
and ? a permutation
? : {1, . . . , n} ? {1, . . . , n}. (22)
This formulation is often referred to as Koopman-
Beckman QAP and often abbreviated as
QAP (A,B,C). The so-called pure or ho-
mogeneous QAP
?? = argmin
?
?
?
?
n?
i=1
n?
j=1
aijb?(i)?(j)
?
?
? (23)
is obtained by setting cij = 0, and is often denoted
as QAP (A,B).
In terms of the real-life problem presented in
(Beckmann and Koopmans, 1957) the matrix A
can be interpreted as distance matrix for loca-
tions {l1 . . . ln} and B as flow matrix for facilities
{f1 . . . fn}.
(Sahni and Gonzalez, 1976) show that the
quadratic assignment problem is strongly NP-
hard.
We will now show the relation between the
quadratic assignment problem and the decipher-
ment problem.
5.3 Decipherment Problem  Quadratic
Assignment Problem
Every decipherment problem is directly a
quadratic assignment problem, since the ma-
trices Nff ? and Sff ? are just special cases of
the general matrices A and B required for the
quadratic assignment problem. Thus a reduction
from the decipherment problem to the quadratic
assignment problem is trivial. This means that all
algorithms capable of solving QAPs can directly
be used to solve the decipherment problem.
5.4 Quadratic Assignment Problem 
Decipherment Problem
Given QAP (A,B) with integer matrices A =
(aij), B = (bij) i, j ? {1, . . . , n} we construct
the count matrix Nff ? and language model ma-
trix Sff ? in such a way that the solution for the
decipherment problem implies the solution to the
618
quadratic assignment problem, and vice versa. We
will use the vocabularies V e = V f = {1, . . . , n+
3}, with n + 3 being the special sentence bound-
ary token ?$?. The construction of Nff ? and Sff ?
is shown in Figure 3.
To show the validity of our construction, we will
1. Show that Nff ? is a valid count matrix.
2. Show that Sff ? is a valid bigram language
model matrix.
3. Show that the decipherment problem and
the newly constructed quadratic assignment
problem are equivalent.
We start by showing that Nff ? is a valid count
matrix:
(a) By construction, Nff ? has integer counts that
are greater or equal to 0.
(b) By construction, Nff ? at boundaries is:
? N$f = ?(f, 1)
? Nf$ = ?(f, n+ 2)
(c) Regarding the properties ?
f ?
Nff ? =
?
f ?
Nf ?f :
? For all f ? {1, . . . , n} the count proper-
ties are equivalent to
a?f? +
?
f ?
a?ff ? = a??f +
?
f ?
a?f ?f + ?(f, 1)
(24)
which holds by construction of a??f and
a?f?.
? For f = n+1 the count property is equiv-
alent to
1 +
?
f ?
a?f ?? = 2 +
?
f ?
a??f ? (25)
which follows from Equation (24) by
summing over all f ? {1, . . . , n}.
? For f = n+2 and f = n+3, the condi-
tion is fulfilled by construction.
We now show that Sff ? is a valid bigram lan-
guage model matrix:
(a) By construction, Sff ? ? [??, 0] holds.
(b) By construction, S$$ = ?? holds.
(c) By the construction of b?f?, the values Sff ? ful-
fill ?f ? exp(Sff ?) = 1 for all f . This works
since all entries b?ff ? are chosen to be smaller
than ?log(n+ 2).
We now show the equivalence of the quadratic
assignment problem and the newly constructed de-
cipherment problem. For this we will use the defi-
nitions
A? = {1, . . . , n} (26)
B? = {n+ 1, n+ 2, n+ 3} (27)
We first show that solutions of the constructed
decipherment problem with score > ?? fulfill
?(f) = f for f ? B?.
All mappings ?, with ?(f) = f ? for any f ?
A? and f ? ? B? will induce a score of ?? since
for f ? A? all Nff > 0 and Sf ?f ? = ?? for
f ? ? B?. Thus any ? with score > ?? will fulfill
?(f) ? B? for f ? B?. Further, by enumerating all
six possible permutations, it can be seen that only
the ? with ?(f) = f for f ? B? induces a score of
> ??. Thus we can rewrite
n+3?
f=1
n+3?
f ?=1
Nff ?S?(f)?(f ?) (28)
to
?
f?A?
?
f?A?
Nff ?S?(f)?(f ?)
? ?? ?
(AA)
+
?
f?A?
?
f ??B?
Nff ?S?(f)f ?
? ?? ?
(AB)
+
?
f?B?
?
f ??A?
Nff ?Sf?(f ?)
? ?? ?
(BA)
+
?
f?B?
?
f ??B?
Nff ?Sff ?
? ?? ?
(BB)
Here
? (AB) is independent of ? since
?f ? A?, f ? ? {n+ 1, n+ 3} : Sff ? = S1f ?
(29)
and
?f ? A? : Nf,n+2 = 0 (30)
? (BA) is independent of ? since
?f ? ? A?, f ? B? : Sff ? = Sf1 (31)
? (BB) is independent of ?.
619
Nff ? =
?
??????????
a?11 a?12 ? ? ? a?1n a?1? 0 0
a?21 a?22 ? ? ? a?2n a?2? 0 0... ... . . . ... ... ... ...
a?n1 a?n2 ? ? ? a?nn a?n? 0 0
a??1 a??2 ? ? ? a??n 0 2 0
0 0 ? ? ? 0 1 0 1
1 0 ? ? ? 0 0 0 0
?
??????????
Sff ? =
?
???????????
b?11 b?12 ? ? ? b?1n ?2 b?1? ?2
b?21 b?22 ? ? ? b?2n ?2 b?2? ?2... ... . . . ... ... ... ...
b?n1 b?n2 ? ? ? b?nn ?2 b?n? ?2
?1 ?1 ? ? ? ?1 ?? ?1 ??
?2 ?2 ? ? ? ?2 ?2 ?? ?2
?0 ?0 ? ? ? ?0 ?? ?? ??
?
???????????
a?ff ? = aff ? ?min
f? f? ?
{af? f? ?}+ 1 b?ff ? = bff ? ?maxf? f? ?
{bf? f? ?} ? log(n+ 2)
a?f? = max
?
?
?
n?
f ?=1
af ?f ? aff ? , 0
?
?
?+ ?(f, 1) b?f? = log
?
?1?
n?
f ?=1
exp(b?ff ?)?
2
n+ 2
?
?
a??f ? = max
?
?
?
n?
f=1
aff ? ? af ?f , 0
?
?
? ?i = ? log(n+ i)
Figure 3: Construction of matrices Nff ? and Sff ? of the decipherment problem from matrices A = (aij)
and B = (bij) of the quadratic assignment problem QAP (A,B).
Thus, with some constant c, we can finally rewrite
Equation 28 as
c+
n?
f=1
n?
f ?=1
Nff ?S?(f)?(f ?) (32)
Inserting the definition of Nff ? and Sff ? (simpli-
fied using constants c?, and c??) we obtain
c+
n?
f=1
n?
f ?=1
(aff ? + c?)(b?(f)?(f ?) + c??) (33)
which is equivalent to the original quadratic as-
signment problem
argmax
?
?
?
n?
f=1
n?
f ?=1
aff ?b?(f)?(f ?)
?
?
? (34)
Thus we have shown that a solution to the
quadratic assignment problem in Equation 34 is
a solution to the decipherment problem in Equa-
tion 20 and vice versa. Assuming that calculat-
ing elementary functions can be done inO(1), set-
ting up Nff ? and Sff ? can be done in polynomial
time.2 Thus we have given a polynomial time re-
duction from the quadratic assignment problem to
2This is the case if we only require a fixed number of dig-
its precision for the log and exp operations.
the decipherment problem: Since the quadratic as-
signment problem is NP-hard, it follows that the
decipherment problem is NP-hard, too.
5.5 Traveling Salesman Problem 
Decipherment Problem
Using the above construction we can immediately
construct a decipherment problem that is equiva-
lent to the traveling salesman problem by using
the quadratic assignment problem formulation of
the traveling salesman problem.
Without loss of generality3 we assume that the
TSP?s distance matrix fulfills the constraints of a
bigram language model matrix Sff ? . Then the
count matrix Nff ? needs to be chosen as
Nff ? =
?
??????????
0 1 0 ? ? ? 0 0 0
0 0 1 ? ? ? 0 0 0
0 0 0 ? ? ? 0 0 0
... ... ... . . . ... ... ...
0 0 0 ? ? ? 0 1 0
0 0 0 ? ? ? 0 0 1
1 0 0 ? ? ? 0 0 0
?
??????????
(35)
which fulfills the constraints of a bigram count
matrix.
3The general case can be covered using the reduction
shown in Section 5.
620
This matrix corresponds to a ciphertext of the
form
$abcd$ (36)
and represents the tour of the traveling salesman in
an intuitive way. The mapping ? then only decides
in which order the cities are visited, and only costs
between two successive cities are counted.
This shows that the TSP is only a special case
of the decipherment problem.
6 Conclusion
We have shown the correspondence between solv-
ing 1:1 substitution ciphers and the linear sum as-
signment problem and the quadratic assignment
problem: When using unigram language models,
the decipherment problem is equivalent to the lin-
ear sum assignment problem and solvable in poly-
nomial time. For a bigram language model, the de-
cipherment problem is equivalent to the quadratic
assignment problem and is NP-hard.
We also pointed out that all available algorithms
for the quadratic assignment problem can be di-
rectly used to solve the decipherment problem.
To the best of our knowledge, this correspon-
dence between the decipherment problem and the
quadratic assignment problem has not been known
previous to our work.
Acknowledgements
This work was partly realized as part of the
Quaero Programme, funded by OSEO, French
State agency for innovation.
References
Friedrich L. Bauer. 2010. Decrypted Secrets: Methods
and Maxims of Cryptology. Springer, 4th edition.
Martin J. Beckmann and Tjalling C. Koopmans. 1957.
Assignment problems and the location of economic
activities. Econometrica, 25(4):53?76.
Rainer E. Burkard and Eranda ela. 1999. Linear as-
signment problems and extensions. In Handbook
of Combinatorial Optimization - Supplement Volume
A, pages 75?149. Kluwer Academic Publishers.
Rainer E. Burkard, Eranda ela, Panos M. Pardalos, and
Leonidas S. Pitsoulis. 1998. The quadratic assign-
ment problem. In Handbook of Combinatorial Op-
timization, pages 241?338. Kluwer Academic Pub-
lishers.
Eric Corlett and Gerald Penn. 2010. An exact A*
method for deciphering letter-substitution ciphers.
In Proceedings of the 48th Annual Meeting of the
Association for Computational Linguistics (ACL),
pages 1040?1047, Uppsala, Sweden, July. The As-
sociation for Computer Linguistics.
Qing Dou and Kevin Knight. 2012. Large scale deci-
pherment for out-of-domain machine translation. In
Conference on Empirical Methods in Natural Lan-
guage Processing and Computational Natural Lan-
guage Learning (EMNLP-CoNLL), pages 266?275,
Jeju Island, Korea, July. Association for Computa-
tional Linguistics.
Kevin Knight and Kenji Yamada. 1999. A computa-
tional approach to deciphering unknown scripts. In
Proceedings of the ACL Workshop on Unsupervised
Learning in Natural Language Processing, num-
ber 1, pages 37?44. Association for Computational
Linguistics.
Kevin Knight, Anish Nair, Nishit Rathod, and Kenji
Yamada. 2006. Unsupervised analysis for deci-
pherment problems. In Proceedings of the Confer-
ence on Computational Linguistics and Association
of Computation Linguistics (COLING/ACL) Main
Conference Poster Sessions, pages 499?506, Syd-
ney, Australia, July. Association for Computational
Linguistics.
Harold W. Kuhn. 1955. The Hungarian method for
the assignment problem. Naval Research Logistic
Quarterly, 2(1-2):83?97.
Malte Nuhn, Arne Mauser, and Hermann Ney. 2012.
Deciphering foreign language by combining lan-
guage models and context vectors. In Proceedings
of the 50th Annual Meeting of the Association for
Computational Linguistics (ACL), pages 156?164,
Jeju, Republic of Korea, July. Association for Com-
putational Linguistics.
Sujith Ravi and Kevin Knight. 2008. Attacking de-
cipherment problems optimally with low-order n-
gram models. In Proceedings of the Conference on
Empirical Methods in Natural Language Processing
(EMNLP), pages 812?819, Honolulu, Hawaii. Asso-
ciation for Computational Linguistics.
Sujith Ravi and Kevin Knight. 2011. Deciphering
foreign language. In Proceedings of the 49th An-
nual Meeting of the Association for Computational
Linguistics: Human Language Technologies (ACL-
HLT), pages 12?21, Portland, Oregon, USA, June.
Association for Computational Linguistics.
Sartaj Sahni and Teofilo Gonzalez. 1976. P-complete
approximation problems. Journal of the Association
for Computing Machinery (JACM), 23(3):555?565,
July.
621
