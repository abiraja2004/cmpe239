Interaction between Structural Changes in Machine 
Translation 
Satoshi KINOSHITA, John PHILLIPS, Jun-ichi TSUJII 
Cent re  for Computat iona l  L ingu is t i cs  
Un ivers i ty  of Manchester  Ins t i tu te  of Sc ience and  Techno logy  
PO Box 88, Manchester M60 1QD, United Kingdom 
ABSTRACT 
This paper discusses complex structural changes dur- 
ing transfer within a non-destructive transfer framework. 
Though the description of each individual structural change 
is not difficult, special provision must be made when they 
are combined, because interaction between them sometimes 
causes unexpected problems. Transfer of coordinate struc- 
tures is also discussed as this often necessitates a structural 
change and interacts with other structural changes in a prob- 
lematic way. 
1. In t roduct ion  
Several focal issues have emerged in machine translation 
(MT) research as the result of recent intensive studies in 
the field. That  is, 
? Declarative Frameworks for expressing Bi-lingual 
Knowledge 
? Integration of Knowledge-based Processing and 
Contextual Processing with the Translation Process 
? Effective Exploitation of Domain/Text Type Speci- 
ficity (or Sublanguageness) in MT and Discovery 
Processes for such Specificities 
Though new frameworks of MT such as Statistics-based 
MT (SBMT), Example-based MT (EBMT), Analogy- 
based MT (ABMT), Knowledge-based MT (KBMT) 
etc. look radically different from conventional linguistic- 
based MT (LBMT) such as Transfer-based, they address 
one or two of the above focal issues and ignore the rest 
\[7\] \[9\]. In particular, the new paradigms of MT tend 
to ignore the first issue ie. declarative representation of
bi-lingual knowledge and the complexities involved n the 
process of combining units of bi-lingual knowledge. 
It is our contention that any MT system, whichever 
paradigm it belongs to, has to store a set of translation- 
equivalent units for a pair of languages and combine 
these to produce larger units of translation. In EBMT, 
for example, a set of translation examples has to be 
stored and several of them have to be combined prop- 
erly to produce translation. Because of the declarative 
nature of translation examples, EBMT inevitably en- 
counters the same complexities of combining translation 
units in declarative representation as LBMT does. 
Research in LBMT \[1\] \[2\] \[31 \[10\] [12\] has revealed that 
difficulties in the declarative representation of bi-lingual 
knowledge stem mainly from the treatment of idiosyn- 
cratic structural changes caused by lexical items, and in- 
teractions of such idiosyncratic structural changes when 
they co-exist in single sentences. These types of struc- 
tural changes also cause problems when they are com- 
bined with general or ordinary linguistic phenomena 
such as coordination. A formal framework to cope with 
these matters is essential in other approaches, such as 
EBMT, as in LBMT, if the translation is produced in a 
compositional way. 
In this paper, we discuss problems caused by such in- 
teraction, and give solutions in our logic-based transfer 
framework \[8\]. Our transfer model views the transfer 
process as deduction; it produces the target linguistic de- 
scription without changing the source description. This 
gives a clear contrast o the conventional tree-transducer 
model, which gradually transforms the source descrip- 
tion, and is therefore hard to control. 
Because of the logic oriented nature of out framework, 
it can also be extended to cope with the other focal is- 
sue of MT such as the integration of knowledge-based 
processing with translation\[4\]. 
2. Formal i sm 
We use a simple formalism, representing a sentence as 
a network of semantic dependencies. The basic units of 
the formalism are indices, properties, and relations. A 
logical form consists of an unordered set of terms; each 
term is either a property predicated of an index, or a rela- 
tion between two indices. The written notation depicts 
properties and relations as unary and binary functors, 
respectively, and indices as their arguments, i.e. within 
brackets. A logical form representing ' John saw Mary' 
might be 
e : john(j) ~5 see(e) ~ mary(m) & tense(e,past) &
255 
subj(e,j) & obj(e,m) 
This representation is simplified particularly in that the 
relation tense here stands for what should be a com- 
plex representation of tense, aspect, and aktionsart, re- 
lated anaphorically to the preceding discourse. It can be 
seen that the representation includes the names of the 
concepts, both objects and events, which are mentioned 
in the sentence, and the semantic relationships between 
them. Each of the three indices, j, m and e, is a unique 
label given to a node in the dependency network. The 
root node of the network is specified at the beginning of 
the representation, in this case e, the node representing 
the seeing event. As long as the toot node of the net- 
work is specified, it is possible to convert a logical form 
mechanistically into a structured representation such as 
a dependency graph or a feature structure. The par- 
ticular characteristics of the formalism -- the types of 
relations and predicates used and the manner of their 
use - -  are justified elsewhere\[11\]. 
3. Transfer 
We follow the standard division of a machine transla- 
tion system into stages of analysis, transfer, and gener- 
ation. It is a requirement for the transfer description 
that it should state all and only the equivalence rela- 
tionships between expressions of a pair of languages. It 
should contain no general inguistic information, either 
universal or specific to any single language: these types 
of information belong in the formalism and content, re- 
spectively, of the descriptions of individual languages. 
In fact most of our transfer descriptions consist of direct 
equivalences between predicates or groups of predicates 
of the language pair. 
A transfer ule shows a particular translation equivalence 
between two languages. It consists of three parts: a pair 
of logical forms, one for each language, representing the 
equivalence, and a third logical form giving the condi- 
tions under which the equivalence is applicable. We call 
these the equivalence pair and the condition respectively. 
Two ~ logical forms form an equivalence pair if the natu- 
ral language xpressions they represent have overlapping 
denotations. The rule can therefore be used for trans- 
lating in either direction: the two logical forms of the 
equivalence pair are always translationally equivalent if 
the condition is satisfied. The logical forms of the equiv- 
alence pair will be indistinguishable from logical forms of 
the respective languages, using the same predicates and 
relations. The logical forms of the condition use meta- 
predicates which allow reference to to the logical form 
of the current local translation unit (sentence or clause) 
and to the linguistic context. In practice, most transfer 
rules have no condition; they consist just of an equiva- 
lence pair. Some examples of rules follow: 
English Japanese Explanation 
table(X) teeburu(X)  table --- teeburu 
paper(P) ronb~(P)  paper = ronb~ 
paper(P) sinbun(P) paper = sinbun 
subj(E,X) ga(E,X) subject marker 
obj(E,X) wo(Z,X) object marker 
hypothetical(E),like(E) -tai(F),omou(E) would like = 
i.l~ inLeft (obj (E,F))  -tai  omou 
The following is the basic definition of transfer between 
two texts (sentences, clauses, or whatever): 
A source logical form and a target logical form 
are correctly transferred if the terms of each can be 
divided into non-overlapping subsets uch that the 
source subsets can be placed into one-to-one cor- 
respondence with the target subsets by each corre- 
sponding pair being 'unified' with the two halves of 
the equivalence pair of a transfer ule, and if the ac- 
cumulated conditions of the transfer ules used are 
satisfied. ('Unification' in this definition is rather 
similar to graph unification). 
4. 'Complex'  Transfer 
4.1. Types of Complex Transfer 
Lindop & Tsujii (1991) list and discuss a variety of exam- 
ples that are always problematic for machine translation 
systems. We suggest that what makes these examples 
difficult is that different dependency structures are as- 
sociated with otherwise synonymous lexical items. We 
break the problem down into four subparts. 
* i) 
Argument-swiiching as in the translation of the German 
Der Wagen gef~llt mir - -  I like the car 
The car pleases me 
gefallen(E) & nom(O) & dat(S) , , like(E) & subj(S) 
& obj(O) 
In argument-switching, the relations between the lexical 
item and its dependents are not translated standardly. 
Although the German nominative normally corresponds 
to an English subject, it must in this example be trans- 
lated as a dative. 
* ii) Head-switching as in the translation of German 
Hans schwimmt gern - -  John likes swimming 
John swims gladly 
like(L) ~ oDj(L,S), , gem(L) ~ subj(L,S) iffshift(L,S) 
The German sentence is a description of a situation to 
do with swimming; the English is a description of a situ- 
ation to do with liking. The shift predicate is explained 
below. 
256 
* iii) Decomposition as in the translation of the 
Japanese John-ga zisatusita - -  John committed suicide 
zisatusuru(E) , , commit(E) & suicide(S) & obj(E,S) 
Here the single Japanese word zisatusuru is translated 
as the English phrase to commit suicide. Some types 
of decomposition can give rise to special problems when 
there are modifiers or dependents involved. These are 
discussed in detail by Tsujii et al (1992). Shortage of 
space and the variety and complexity of examples pre- 
vents their discussion here. 
* iv) Raising as in the translation of the Welsh 
Fe ddigwydd fod Si6n yma 
happens be John here 
John happens to be here 
digwydd(E1) & subj(E1,E2) & subj(E2,X) , , hap- 
pen(E1) & subj(E1,X) & obj(E1,E2) 
In the English, the subject of happen is John, but in the 
Welsh, the subject of digwydd ('happen') is the situation 
of John's being here. 
The predicate shift is introduced to define a transla- 
tion equivalence where certain dependencies are differ- 
ently arranged in the target language, as compared to 
the source language. It can be understood in terms of 
semantic type-shifting - -  the types are differently dis- 
tributed in the source- and target-language logical forms. 
Shift(H,E) means that in any instance of subj(H,X} or 
P(X,H) (where P stands for any relation) in the logical 
form representing the English text, the H corresponds to 
an E in the logical form representing the other language. 
The following example shows how the example under (ii) 
above would work in practice. 
Ich weiB Hans schwimmt gern- I know John likes swim- 
ming 
ich(i) me(i) me(i) 
wissen(w) know(w) know(w) 
subj(w,i) subj(w,i) subj(w,i) 
obj(w,s) obj(w,s) obj(w,g) 
Hans(j) John(j) John(j) 
schwimmen(s) swim(s) swim(s) 
subj(s,j) subj(s,j) subj(g,j) 
gern(g) 
subj(g,s) 
like(g) 
obj(g,s) 
{shift (s,g)} 
like(g) 
obj(g,s) 
The columns of the table show the German source logical 
form, the English logical form as it would be without 
shift, and the actual English target logical form. The 
horizontal divisions of the table represent he fields of 
operation of separate transfer ules. 
4 .2 .  In teract ion  between types  o f  complex  
t rans fer  
When several of these syntactic changes are combined 
in one example, the logical form resulting from transfer 
tend to be incoherent. The following examples are types 
on which most, if not all, existing machine translation 
systems will fail, as will the mechanism proposed here so 
far. 
English - Welsh; raising with argument-switching: 
John happens to like swimming 
fe ddigwydd fod yn dda gan John nofio 
happens be nice by John swim 
(swimraing-being-rdce-i~-John's-olairdon occurs) 
Dutch - English; verb - head-switching twice: 
Jan zwemt graag toevallig 
John swims gladly happeningly 
John happens to like swimming 
(also 'John likes happening to swim 3 
There are two separate causes of difficulty in these ex- 
amples. Firstly, the long-distance movement caused by 
raising causes problems n the transfer of structures which 
have been the target of raising. The simplest way to get 
round the problem is to require syntactically-deleted ar- 
guments to be marked explicitly on all the verbs of which 
they are logical arguments, treating the phenomenon 
syntactically as an example of lexically-triggered xtrac- 
tion, on a par with the extractions of syntactic objects 
in a man I know and an easy man to please. Transfer 
rules which introduce raising predicates will then have to 
bring in the new subject explicitly. For instance, the rule 
for happen and digwydd, (iv) in ?4.1, will be re-written 
as 
digwydd(E1) & subj(E1,E2) , , happen(E1) & 
subj(E1,X) & obj(E1,E2) iffsubj(E2,X) 
The second point is that the shift predicate must be 
defined in such a way that it can cope with recursive 
changes in the dependency structure brought about by 
the occurrence of several interdependent head-switching 
translations. It seems that shift can be made to do 
this simply by having e.g. shift(H,E) affect all in- 
stances of subj(H,X) or P(X,H) (including shift(X,H)) 
257 
not transferred by the transfer ule which introduced the 
shift(tiT, E). 
Together, these two stipulations enable the transfer of 
examples involving head-switching, argument-switching, 
raising, and most types of decomposition. 
5. ' I Yans fer  o f  Coord inate  S t ructures  
5 .1 .  P rob lems in  t rans fer  o f  coord inate  
s t ruc tures  
Though transfer of coordinated structures often inter- 
acts with transfer of other translation units to produce 
miserable results in translation, few attempts have been 
reported to formalize this problem. We here divide the 
problem into two categories: 
? Divergence in semantic onstraints 
? Combination of complex transfers 
A typical example of the first type is shown in the fol- 
lowing. 
Japanese. 
( la) She wears a hat and shoes. 
( lb) kanojo-ga boushi-wo kaburi, kutsu-wo 
she-subj hat-obj wear shoe-obj 
haku. 
wear  
As is understood from its translation, "wear" is trans- 
lated "kaburu" or "haku" in Japanese, depending on 
whether its object is something worn on the head or 
on the foot(or leg). This means that, in this example, 
coordination of objects in English should be altered to 
that of verb phrases in Japanese. 
This type of knowledge for lexical choice is very com- 
mon in a transfer or bi-lingual dictionary, and plays an 
essential role in lexical transfer of most current transfer- 
based MT systems. The problem arises because neither 
a transfer program or a transfer-rule writer expects uch 
an awkward problem ot be caused by coordination. To 
translate "wear" into "kaburu" in the above example, a 
rule writer may usually write the following rule in our 
notation1: 
1 In this section, we consider translation whose source and target 
logical forms are on the left and right sides of a transfer rule. For 
the sake of simplicity, transfer rules hereafter are described as uni- 
directional ones. 
wear(X) , kaburu(X) i f f  obj(X,Y)&HAT(Y) 
But the condition part of this rule is implicitly expected 
to be interpreted as follows. 
wear(X) , kaburu(X) iff V Y obj(X,Y)&HAT(Y) 
The precise definition may change depending on how the 
coordinate structure is represented. But the point is that 
"wear" may be translated "kaburu" only if all the objects 
have a feature of being a "HAT". 
A simple transfer algorithm, for example, may choose the 
target word when it finds the first applicable transfer ule 
for a source word: this algorithm may produce "boushi- 
to kutsu-wo kaburu" for the sentence (la), which means 
that the semantic relation between "wear" and "shoes" 
is ignored. 
The second type of problems occurs when one of the 
coordinated objects triggers a complex transfer which is 
described in ?3. This type of problem can be seen in the 
following translation. 
He committed murder then suicide. 
kare-ga satsujin-wo okashi, jisatsu-shita. 
he-subj murder-obj commit commlt-ed suicide 
This problem is more complicated than the previous one 
because complex transfer, in this example "many-to-one 
transfer", causes a structural change. 
There are several possible solutions to this problem. The 
simplest one is that a transfer-rule writer writes all the 
transfer rules which explicitly describe every possible 
sub-structure with coordination. This is of course unre- 
alistic. Another solution is to make a transfer program 
which modifies the transfer result dynamically when, 
for example, a source word is given two different tar- 
get words. But such a dynamic modification of the re- 
sult during transfer is against our policy of logic-based 
transfer, because this means gradual transformation of
the source structure and therefore transfer cannot be for- 
malized as logical inference. 
5 .2 .  T rans fer  w i th  Coord inate  
Expans ion  
Coord inate  Expans ion  Hereafter we concentrate on 
a case where coordinated objects of a verb cause the 
problem, though there is apparently an example where 
other cases such as "subj" cause the same problem. The 
258 
Input Logical Form 
Ezpansion ~-- 
T rans fer  ~-- 
It 
Reduction 
Output Logical Form 
Expand rules 
I Transfer ules \] 
Figure h Transfer with Coordinate Expansion 
basic requirement in logic-based transfer is that coordi- 
nation of objects should be reorganized to that of verb 
phrases or sentences, which is not supposed to cause 
problems in transfer. We call this reorganization "co- 
ordinate expansion". The following is a part of logical 
form for (la), which involves a coordinate structure. 
wear(w)&obj (w,o)&coord(o,ol)&hat (ol)& 
coord(o,o2)&shoe(o2) 
In this form, o is a linguistic object, and a predicate 
coord represents a relation between the linguistic object 
and its constituents. The following is a result of expan- 
sion. 
coord(w,wl)&wear(wl)&obj (wl ,ol)&hat(ol)& 
coord(w,w2)&wear(w2)~:obj (w2,o2)~shoe(o2) 
The most naive and simplest strategy using this expan- 
sion is to expand every coordination within a sentence 
and represent it in sentence coordination before trans- 
fer. This transfer result will be reorganized again into 
an appropriate representation f coordination i  the tar- 
get language. But this solution seems inefficient from 
the computational point of view because caseswhere ex- 
pansion is necessary are rare . Unnecessary expansion 
and reorganization of coordinate structures hould be 
avoided. The strategy we propose executes coordination 
expansion only if it is necessary\[5\] (See Fig. 1). 
Transfer is divided into three phases; in the first phase, 
logical forms are expanded if expand rules (explained 
below) find the necessity of coordinate xpansion. This 
process continues as long as the necessity remains. In 
the second phase, transfer described in previous ections 
is executed. Finally, in the third phase, coordination is
reorganized if the target language has a more appropriate 
structure for coordination than the second phase result. 
(Consider the translation of (lb). Without reorganizing 
coordination, the transfer esult will contain two "wear"s 
.) 
The following is an expand rule which detects the neces- 
sity of expansion concerned with translation of "wearing 
a hat". 
wear(X)&obj (X,Y)&coord(Y,Yi)&HAT(Yi)& 
coord(Y,Y2)&Yl #Y2&-~HAT(Y2) 
expand(Y,X) 
In the rule, ezpand(Y,X) means that coordination of the 
level Y should be expanded to that of X. This rule sug- 
gests that coordinate xpansion is necessary if the object 
of "wear" is a coordinate structure, and one constituent 
is a HAT while another isn't. 
We assume that expand rules are produced automati- 
cally from transfer ules before the actual transfer oper- 
ation. The simplest way of extracting such a rule refers 
only one transfer ule at one time. This means that the 
necessity of expansion can be detected not by creating 
expand rules but by referring transfer rules in actual 
transfer phase. But the former approach seems essential 
if we wish to optimize expansion detection. 
Other  examples  Expand rules from a transfer rule 
which involves a structural change are a little different in 
forms to the previous case. The following are a transfer 
rule for translating "commit suicide" into Japanese and 
its expand rule. 
commit (X)&obj (X,Y) &suicide(Y) 
, jisatsu_suru(X) 
commit(X)&obj (X,Y)&coord(Y,Y1)&suicide(Y1)& 
coord(Y,Y2) 8zYl #Y2&-~suicide(Y2) 
, expand(Y,X) 
Another example is the translation of the English "HU- 
MAN have ADJ NOUN" construction into Japanese. 
The sentence (2E) is translated (2J) using the rule (3). 
(2E) She has beautiful eyes. 
(2J) kanojo-no me-ga utsukushii. 
she-poss eye-subj beautiful 
(3) have(H)&subj (H,S)&obj (H,X)amod(X,M) 
poss(X,S)&subj(M,X) 
iff HUMAN(S)&PART_OF_BODY(X) 
259 
This case is more complicated than the previous ones 
because the transfer ule refers to two semantic features. 
Therefore we will get two expand rules, one of which is 
the following rule. 
have(X)&subj (X,Y)&coord(Y,Y1)&HUMAN(Yi)& 
coorH(Y,Y2)&Yi#Y2&~HUMAN(Y2) & 
obj(X,Z) & mod(Z,_) & PART_OF_BODY(Z) 
, expand(Y,X) 
In addition, we need another expand rule which checks 
another type of coordinate construction. This rule will 
apply when the system translates "she has long hair and 
beautiful eyes". 
have(X) & subj(X,S) & 
HUMAN(S) & obj(X,Y) & -~mod(Y,_) & coord(Y,Y1) 
& rood(Y1,_) & PART_OF_BODY(Y1) 
, expand(Y,X) 
D iscuss ion  Our coordinate xpansion detection works 
even if a coordinate structure has more than two con- 
stituents. What we have to consider is an appropri- 
ate expansion algorithm. For example, in translating 
(4a), an appropriate xpansion should keep coordination 
of "shoes" and "stockings", as shown in (45), because 
both satisfy a semantic onstraint on which the system 
chooses "haku" as the translation of "wear". Otherwise 
reorganizing a coordination in the generation phase is 
inevitable. 
(4a) She wears a hat, stockings and shoes. 
(4b) She wears a hat and wears stockings and shoes. 
Reorganization of a coordination in the target language 
does not only occur as outlined in the above case. Since 
the coordinate xpansion is completely separate from the 
actual transfer process, transfer ules which do not cause 
problems might be used. 
There is still an open problem to be solved with regard 
to the transfer of coordination with "expansion"; expan- 
sion is not always straightforward. There is often a case 
where coordinate xpansion is impossible without deep 
understanding of the sentences, or it is impossible in that 
it may change their semantic structures. For example, 
the sentence (55) cannot be the expansion of (ha) though 
it seems so at first glance. 
(ha) I saw a group of men and women. 
(55) I saw a group of men and I saw a group of women. 
6. Conc lus ion  and  fu ture  work  
In this paper, we showed how complex structural changes 
in transfer are treated within our logic-based transfer 
model, in which the target linguistic description is ob- 
tained from the source description in a non-destructive 
manner. These types of structural changes cause a prob- 
lem when they co-occur and their transfer rules are in- 
teracted. We also discussed a problem in transferring 
coordinate structures and presented an extended trans- 
fer model with coordinate xpansion. 
One of our current concerns is to implement our transfer 
model in a parallel processing framework. Our current 
algorithm for transfer and its implementation have a pro- 
cedural aspect of operation. That  is, the sense of "logic" 
in the name of our model has not been fully achieved. 
We think that the search for parallel implementation will 
lead to "logic-based transfer" in the true sense. 
Re ferences  
1. H.Alshawi, D.Carter and M.Rayner: 'Translation by 
Quasi Logical Form Transfer', in Proc. o\]2gth ACL Con- 
ference, Berkeley, 1991. 
2. C.Copeland, et.al.: 'The Eurotra Linguistic Specifica- 
tion', in Studies in Machine Translation and Natural 
Language Processing Vol. 1, Office for Official Pubhca- 
tion of the EC, 1991 
3. R.Kaplan,K.Netter, et.al.: 'Translations by Structural 
Correspondences', in Proc. of 4th E-ACL Conference, 
Manchester, 1989. 
4. S.Kinoshita and J.Tsujii: 'Framework for Incorporating 
Knowledge into Machine Translation', in Proc. off Work- 
shop on FGNLP, Kyoto, 1991. 
5. S.Kinoshita: Transffer off Coordinate Structures, CCL 
Report 91/13, 1991. 
6. J.Lindop and J.Tsujii: Complex Transffer in MT: A Sur- 
vey off Examples, CCL/UMIST Report 91/5, 1991. 
7. S.Nirenburg: Machine Translation, Cambridge Univer- 
sity Press, 1987. 
8. J.D.Phfllips, et.al.: 'Linguistic Context for Machine 
Translation', in Proc. of SICONLP '90, Seoul, 1990. 
9. S.Sato and M.Nagao: 'Memory-based Translation', in 
Proc. of COLING 90, Helsinld, 1990. 
10. J.Tsujii et.al.: 'Lexical Transfer based on Bilingual 
Signs: Towards interaction during transfer', in Proc. off 
5th E-ACL Conference, 1991. 
11. \].Tsujii, et.al.: An Architecture for Machine Transla- 
tion, CCL/UMIST Report 92/1, 1992. 
12. G.van Noord, et.al.: 'The MiMo2 Research System', 
in Proc. of the 3rd International Confference on TMI, 
Austin, 1990. 
13. H. Watanabe: 'A Model of a Transfer Process Using 
Combinations of Transfer Rules', in Proc. off PRICAI  
'90, 1990. 
260 
