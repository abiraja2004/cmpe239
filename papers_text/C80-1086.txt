INTERACTION WITH A L IMITED OBJECT DOMAIN - 
ZAPSIB PROJECT 
A .S .Nar in 'yan i  
Comput ing  Center, S iber ian  Branch USSR Ac. Sci. 
630090 Novos ib i rsk ,  USSR 
Abstract .  The report  presents  the 
basis pr inc ip les  of the ZAPSIB pro ject  
a imed at the deve lopment  of a modular  
ser ies of l inguist ic  processors  des igned 
for natura l  language (NL) in teract ion  
with appl ied data bases. The genera l  
s t ructure of the ZAPSIB processors  and 
funct ions of the main  modules  are dis- 
cussed, as wel l  as techno logy of the pro- 
ject inc lud ing prob lem of processors  
adaptat ion  to an ob ject  domain of the in- 
teract ion.  
I. Basic pr inc ip les  
Launch ing  the pro ject  the authors  x) were 
aware of spec ia l i t ies  of commerc ia l  sys- 
tems which are pr inc ipa l ly  d i f fe rent  in 
many respects  from the exper imenta l  prog-  
rams deve loped as their  prototypes  
at the beg inn ing  of the app l i ca t iona l  
d i rect ion  of our NL works.7,  2 
This pos i t ion  was implemented in the ba- 
sic pr inc ip les  of the pro ject  which  could 
be formulated as fol lows: 
(a) C iv ing up the rea l i za t ion  of any 
"genera l ized"  scheme of in teract ion  (an 
"average" user ~ an "average" object  
domain) .  No scheme of that k ind is pos- 
sible in pr inc ip le:  a customer 's  demands 
could d i f fer  dec is ive ly  on the main pa- 
rameters  of the interact ion,  such as 
- l imi tedness  of the NL syntax ; 
- contents  and complex i ty  of the object  
domain; 
- the lex icon size; 
- the computer 's  resource;  
- the e f f i c iency  of L -processor ,  etc. 
For some of the parameters  the l imits of 
those demands can vary up to 100, I 0OO 
or even 10 O00 times. In this spectrum 
of d ivers i ty  it is not poss ib le  to ex- 
t ract  one or two dominant  s tereotypes  - 
p rac t i ca l l y  every customer needs his own 
L-processor ,  adequate to his specia l  con- 
d i t ions and in teract ion  domain. 
This s i tuat ion determines  the st rategy 
of the project:  it programs the develop-  
ment  of not one but aser ies  of L -processors  
wi th  the same general  s t ructure whose 
basic modules  are rea l i zed as sequences 
of success ive ly  extend ing and compat ib le  
R) The pro ject  being carr ied  out by A.I. 
Laboratory  of the Comput ing  Center  of 
the S iber ian  Div. of the USSR Acad. Sci. 
vers ions.  Imp lementat ion  of this pr in-  
c ip le is supposed to prov ide more ade- 
quate choice of L -p rocessor  conf igura-  
t ion wi th  regard to a par t i cu lar  user. 
(b) Each L -processor  is to be par t i t ion -  
ed into the un iversa l  and adaptable  
parts. The latter covers all the infor-  
mat ion  depend ing  on the domain of ap- 
p l i cat ion  and includes 
- the data base structure:  ob jec t , the i r  
at t r ibutes  and relat ions;  
- the lexicon of in teract ion  domain, in- 
c lud ing the vocabulary ,  s tandard word-  
complexes  and denotat ions.  
- the syntax of the formal language of 
the system the L -processor  works with. 
To spec i f i cate  the adaptable  part  of 
L -p rocessor  dur ing its "tuning in" the 
ob ject  domain, the processor ' s  modules  
are completed  wi th  special  means. For a 
bet ter  e f fec t iveness  of the adaptat ion  a 
pro fess iona lcar ry ing  out this process  is 
prov ided with a h igh- leve l  dec la ra t ive  
language and a set of spec ia l i zed  meta-  
processors  which compi le  the "outer" 
spec i f i ca t ion  into the inner representa-  
tion. 
The complex of these metaprocessors  com- 
poses the STEND system which is construc-  
ted spec ia l ly  to ensure maximal  comfort  
and e f fec t iveness  of adaptat ion  proce-  
dure (fig.l) ? 
(c) Shor tcomings  of the t rad i t iona l  "syn- 
tact ica l  ana lys is  ~ semant ica l  analy-  
sis" sequence are wel l  known: 
- This scheme enables to process  only 
"syntact ica l ly  normal"  texts. Any v io la-  
t ion of the norm (which is rather  rule 
than except ion  for a mass user) leads to 
faults. 
- In pr inc ip le  this scheme is based on 
assumpt ion  of ex istence of a "complete" 
formal NL model.  But no such a model  has 
been e laborated  up to the moment  and 
most  probab ly  it wi l l  not be ava i lab le  
dur ing nearest  ten years. 
- Even rather rough approx imat ions  of 
the model  being deve lopped recent ly  are 
cumbersome,  expens ive  and too e f f i c iency-  
k i l l ing  for a commerc ia l  type system. 
Semant ica l l y -o r iented  analys is  of text 
based on maximal  u t i l i za t ion  of semant ic  
" foundat ion"  of a message and us ing syn- 
tax in format ion  as loca l ly  as poss ib le  
for e l iminat ion  of super f luous  meanings,  
seems free of the ment ioned  shor tcomings  
and much more adequate as a model  of un- 
ders tand ing  process.  2,3,4 
--567-- 
Module' s input i 1 
Universal  part \ ] ~  pdaptab leer  Adaptat ion  
J<_____~ representat ion)~ s metaprOces-  
a module of L -processor  J I i 
II 
Module 's  output  
ZAPSIB L -processor  
I 
i 
~ S~pecif icatio~n 
l of adaptable I 
Ipart (outer I 
I representa-  i 
~on)  J 
i i STEND System 
Fig.1. A module of a ZAPSIB L -processor  
and the scheme of its adaptat ion 
through the STEND system. 
The sphere of appl icat ions of the ap- 
proach is l imited now to rest r ic ted ob- 
ject domains, and 'user - appl ied data 
base' interface is one of the most ac- 
tual examples of such a problem. 
For rea l izat ion of the semant ica l ly -or i -  
ented analys is  the ZAPSIB L-processors  
are completed with special  means enabl- 
ing to specify and use deta i led data 
about the interact ion domain. 
(d) The main procedure of the analys is  
is organized as a non-determin is t i c  bot- 
tom-up parse process, one- or mul t i -va-  
riant, depending on the processor  version. 
This organizat ion corresponds opt imal ly  
to chosen formal apparatus based on the 
not ion of c o m p o n e n t which 
genera l izes the means of dependency and 
const i tuents  grammars. 
2. General  scheme of 
ZAPSIB L-processors  
The minor vers ions of ZAPSIB L -processors  
being under development  now have the ge- 
neral scheme(f ig.2) .  
Preprocess in~ module includes 
- lexical  analysis  which decomposes the 
str ing of input text and div ides it into 
words, numbers of var ious notat ions and 
let ter -d ig i ta l  denotat ions;  
- assemblage of word-complexes,  i.e. 
standard combinat ions of lexemes which 
are used as an integrate semantic  unit 
under further stages of analys is  (War and 
Peace Internat ional  Federat ion of In- 
formation Processing,  etc). 
Main process operates with a system 
of rules, each of them being product ion 
real ized in a h igh- level  context -depen-  
dent grammar. The system includes spe- 
cial means to control  part ia l  order ing 
of the rules appl icat ion.  The level of 
the grammar and control  means depends on 
the L-processor  version. At the module 's  
output  one or more (in a case of ambigu- 
ous result  of the analysis) acycl ic  parse 
graphs are formed. 
Postprocess ing  comprises three 
stages: 
- e l iminat ion of the local ambigui t ies  
with the help of global  in format ion about 
the text meaning formed up to the end of 
the parse; 
- synthesis  of the text semantic  repre- 
sentat ion according to the parse graph; 
- generat ion of the output  representat ion  
of the text meaning in the User 's  system 
formal language. 
Model of interact ion domain incorpo- 
rates all the semantic and pragmat ic  in- 
format ion concern ing the interact ion do- 
main and necessary  for the operat ing of 
all other modules.  
Feed-back with the user serves, i f  
necessary to specify the user 's  inten- 
t ions and ver i fy  the results of the ana- 
lysis. The ZAPSIB strategy regards ap- 
p ly ing to the user as an extreme measure 
in the most urgent  cases. 
Each of the main modules  is in its turn 
a complex of modules and this provides 
suf f ic ient  f lex ib i l i ty  and compat ib i l i ty  
of d i f ferent  vers ions of the modules.  
3. Technology of the pro ject  
For the development  of indiv idual  modules 
as well  as "assembled" conf igurat ions  we 
use a two-stage technolog ica l  cycle: 
(I) Creat ion of the work ing pi lot  program 
in the very h igh- level  SETL language; 
(2) Transfer r ing  the SETL-program into 
the instrumental  language (PL/I). 
Such a technology helps to cut down ef" 
forts on the development  of the univer-  
sal part  of the software up to three 
times. 
Special  at tent ion in the project  is paid to 
automat ion of the adaptat ion procedure 
of the L-processor  to the user 's  object  
--568-- 
Model  of 
in teract ion  
domain  \ 
\x Feed-back 
with  the user  
Answer  for- 
~ _~ mulat ion  
I 
j ' 
Natura i  l anguage~ 
text  / 
L 
Preprocess ing  
Ma in  process  
Pos tprocess ing  
Representat ion  of ~ 
the text  mean ing  
in the user ' s  
sys tem language 
\]L 
The user ' s  sys tem 
~ I VOCABULARY 
I Lex ica l  ru les  
~ Ma in  ru les  
Fig. 2. Genera l  scheme of ZAPSIB  L -processors .  
domain.  The adaptat ion  is expected  to be 
rea l i zed  on the p i lo t  "L -processor  - da- 
ta base"  tandem by means  of the STEND 
system. 5, 6 P rov ided  w i th  a set of spe- 
c ia l i zed  d ia logue  means  the sys tem enab-  
les to car ry  out  p rocedure  by d i rec t  in- 
te rac t ion  w i th  any of the L -processor  
modules .  
Re ferences  
i. HapMH~HM A.C.,  HXHO T.M. KOHTeKCTHO-- 
3aBHcHMaH FpaN~4aTHKa C pa3p~BH~MM COCTaS- 
~HD~MMH B CHCTeMe BOCXO~eFo aHa~H3a.  - 
B KH. :  BSaHMo~e~CTBHe C 9BM Ha eCTeCTBeH-- 
HOM HS~Ke.  - HOBOCH6HpcK:  1978,C .157-165 .  
2. ~eBMH ~.~.,  HapHHBHHH A.C. 9KcnepM-  
MeHTanBH~ MHHMnpoueccop:  ceMaHTHqeCKH 
opMeHTMpOBaHH~ aHanHs.  - B KH.: BSa~MO-  
~e~CTBMe C 9BM Ha eCTeCTBeHHOM ~s~Ke.  - 
HOBOCH6HpCK:  1978, C. 223--233. 
3. Nar in 'yan i  A.S. AI Work  in the Com- 
puter  Center  of the S iber ian  Branch  of 
the USSR Acad. of Sc iences .  - In: Mach ine  
In te l l igence ,  E l l i s  Horwood Ldt. 1979, 
V.9. 
4. HapMH~HH A.C. ~HHFBMCTM~ecKHe npo- 
~eccop~ BAHCHB (qacTB I - 3a~aqH npoeK-  
Ta) . - HOBOCM6HpcK,  1979. - 22 c . (Hpen-  
pHHT/B~ CO AH CCCP, 199). 
5. HapMHBHHM A.C. ~HHFBHCTMKecKHe npo-  
~eccopN 3AHCHB (qaCTb 2 - 0~a~ cxeMa 
M OCHOBH~e Mo~ynH) .  - HOBOCH6MpCK,  1979. -  
48 C. (HpenpHHT/B~ CO AH CCCP, 202). 
6. ~eBHH ~.~. CTEH~ - CHCTeMa a~anTauzH 
nHHFBMCTMqecKHx npoueccopoB.  - HOBOCH-  
6HpcK, 1980. - 29 C. (HpenpMHT/B~ CO AH 
CCCP, 238). 
--569-- 
