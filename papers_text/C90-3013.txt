Efficient Disjunctive Unification 
for Bottom-Up Parsing 
Dav id  Car ter  
SRI International Cambridge Research Centre 
23 Millers Yard, Mill Lane, Cambridge, CB2 1RQ, U.K. 
dmc@ai.sri.com, dmc@sri.co.uk 
Abstract  
This paper describes two novel techniques which, 
when applied together, in practice significantly re- 
duce the time required for unifying disjunctive fea- 
ture structures. The first is a safe but fast method 
for discarding irrelevant disjunctions from newly- 
created structures. The second reduces the time re- 
quired to check the consistency of a structure from 
exponential to polynomial in the number of disjunc- 
tions, except in cases that, it will be argued, should 
be very unusual in practical systems. The techniques 
are implemented in an experimental Japanese anal- 
yser that uses a large, existing disjunctive Japanese 
grammar and lexicon. Observations of the time be- 
haviour of this analyser suggest hat a significant 
speed gain is achieved. 
1 Introduct ion 
This paper describes the approach taken to the uni- 
fication of disjunctive feature structures in an exper- 
imental bottom-up shift-reduce Japanese aaalyser 
called Propane, for Prolog Parser using the Nadine 
Grammar. Nadine (Kogure, 1989; Kogure and Na- 
gata, 1990), which is inlplemented in Lisp, is the 
analysis and translation component of SLoTRANS, 
the spoken language translation system under de- 
velopment at ATIt Interpreting Telephony Research 
Laboratories, and its large (12,000 line) grammar 
and lexicon make extensive use of disjunction. 
The general problem of unifying two disjunctive 
feature structures is non-polynomial in the number 
of disjunctions (Kasper, 1987). That is, barring rev- 
olutionary developments in the theory of algorithms, 
the problem is NP-complete, and the time taken to 
pertbrm such a unification can, in general, at best be 
an exponentially increasing function of the number 
of disjunctions, tlowever, in writing large grammars 
of natural anguages, it is often convenient to be able 
to specify constraints in terms of disjunctions. This 
seems especially to be the case for Japanese, because 
of its relatively free word order and widespread el- 
lipsis. It is therefore important o develop unifica- 
tion algorithms that can in practice unify disjunctive 
feature structures in a reasonable time, despite the 
inherent NP-completeness of the task. 
70 
Propane's unification method embodies two novel 
techniques. Firstly, when a new mother constituent 
is created by the application of a grammar rule 
to daughter constituents during bottom-up arsing, 
disjunctions not relevant o the mother can safely 
be removed, tIowever, deciding on relevance in 
less titan exponential time is a non-trivial problem. 
Propane's techniqne is rapid, and resuh.s in the re- 
moval of enough irrelevant disjunctions that con- 
stituents higher in a parse tree are not burdened 
with inordinately many of them. Secondly, Propane 
adopts a modification to Kasper's (I987) disjunctive 
unification algorithm that "ahnost all the time" (in 
a sense of that phrase to be discussed), runs in bi- 
nomial time. 
Practical results, which will be presented through- 
out this paper, suggest hat these techniques have 
the desired effect of allowing Propane to parse even 
quite long sentences in a reasonable time. These 
results need, however, to be evaluated in the con- 
text of ATR's Japanese language processing research 
programme in general and of Propane's approach to 
parsing in particular, which will therefore be pre- 
sented in the next section as a preliminary to the 
main body of the paper. 
2 Bot tom-up Pars ing  o f  Japanese  
'Pile Nadine system is geared towards the processing 
of Japanese sentences of the type encountered in tele- 
phone conversations. At ATR, a substantial corpus 
of dialogues has been collected by simulating, both 
by speech and by keyboard, telephone calls to the 
organizing otfice of an international conference. At 
tile time the research described here was carried out, 
Nadine's grammar and lexicon were being developed 
and tested mainly on a subcorpus of 100 sentences 
comprising five of these dialogues. The results pre- 
sented in this paper therefore all derive fl'om apply- 
ing Propane to this same sentence set. Although the 
size of the set is comparatively small, the sentences 
in it were not in any sense "made up" to suit either 
the Nadine or Propane parsers. Rather, to the de- 
gree that a simulation can approach reality, they can 
be taken as representatives of the kinds of sentences 
to be handled in a realistic language processing ap- 
plication. 
Japanese has severM characteristics which suggest 
that bottom-up arsing~approaehes might be partic- 
ular~ly fl'uitflfl.. The language is a head-finM, strongly 
left-branchirlg~ one..  This means that modifiers ale 
ways attach to a head on.their ight, and that there 
is a~prefet~ence for:attachment.to the nearest such 
head .that obe.ys:the constraints that syntax, seman~ 
tics aud:~pragmatics ,place.. on possible combinations. 
"l?his,prefe~rence~is: so, trong, as to suggest a parsing 
alger:it hm Ltrat~.,firgt- e6nstructs analyses that: obey iG 
bacl~urac, king: and ,pro&a:oing analyses with~ different 
braeketfn~gs only,if.the:initial !analysisor analyses are 
i udgeld ~un,aceeptable ,by,some. outside process. 
Atgempt;s. traX, e b~en made, for example in Na- 
dine and \[iy Shi~tzu.i~nd Naito (1989); to use the 
left-branchingpref~rence to s lect among alternative 
aeti0ns;:in ~:c~art"parser. However, the approach 
adopte'd' in  Propane-is to  implement the preference 
dire'etly' into' the tnedianish~ Of a shift-reduce parser: 
In gener~l:, a stiiftxreduce parser uses a ~able of 
parsd states and po~sibl~ adti0iis ttiat determine, at 
each St'age, whether a shift or a reduction is appro- 
priate , ?h'd'in tile liit'ter case, what grammar rule 
~.,'hoU\]d'%~e us d. IIoweVer, When Japanese is formal- 
ized"6si'ng a'grammar i'n which every rule has ex- 
actlj, two rightxhiindiside elements - ms is the case 
in Nadine grammar - the left-br~mching preference 
corresp'6nds ~ t0 astl 'at~gy of reducing the top two 
categorfes i ot~ tlie: st:ack ~vhdhever th:ere is a grammar 
rule ~thaf allows t, l iemt0 b'e ~ 'reduced. and shifting 
only wti;en this cannot, b'e done. No table is there- 
Ibre requiked ~.Nadihe'~ grammar ules include syn- 
tactic, s6~aniiC-afid;piiaglfiati? information, so that 
Prop~i\]g'g:decisi'6n ~o redt/ce or not depends on the 
aecei~t'liSitf'ty '0fth:e ~'restflt ~at: all three of these lin- 
guisttd'16Vo.lg1" $/~cti.'a'test; fakes advantage of the 
maXtmfim-dmotmg Of~vMlableinformation. and ap- 
plies'it ~in ~ fai.rl 2' straightforward' and' efficicnt way. 
Aif~rni~t~vC lekicdlen~rfes'for Words, and alterna- 
tive grammar ules that 'can apply to the same pair 
of daiight6r categories, mean that each position on 
the p~,rse'r~s:'stack is in fact occupied no~ by a single 
eateg9i' ~ bii~ by a list of categories (each of which, 
of ebfirse, cbn~aifis a disjunctive structure that may 
have many realiZatiOns): The lengths of these lists 
do not grow significantly as parsing progresses, be- 
cause just as the lexicon and the grammar can in- 
troduce al\[ernatives, so the application of grammar 
rules c~tii remove thern/The attempt o reduce each 
of m ~qssiblehead' daughters with each of n possi- 
ble n0ii-hea,d' augliterg typically results in far fewer 
than 'm,:)f. md~het ,structures , because not every rule 
appli~at\]bn suecoeds. . . . . . . .  
O~'c0mplicati0ti  hat arises in parsing written 
Japanese ~s that wor d born}danes a.re not mdmated 
explic~\[ly. "I~lns fiaea~.ns that the lexicon imposes a 
la.ttice structure, not a simple sequence of tokens, on 
the input, so that, when a shff ope~:atmn ~s needed 
the t)o~at o ~l~fft, ffor~,~ s, not necessarily well-defined 
Propane deals with this situation in the follow- 
iug~ way. When shifting, edges of all lengths are 
placed onto the stack, and are allowed to partici- 
pate in any following sequence of reductions. Before 
the next shift, however, Propane "prunes" the edges 
that constitute the top of the stack, removing all 
but the longest. This corresponds to the assump~ 
lion that there is a preference for longer strings of 
characters to correspond to lexical items where pos- 
sible, but that this preference should be overturned 
when a shorter string, but not a longer one, allows 
a reduction with what precedes it. 
A laa'ge proportion of the lO0-sentence subcorpus 
targeted by Nadine can be parsed correctly by this 
simple approach of always preferring reductions to 
shifts and longer edges to shorter ones. Nevertheless, 
on .many occasions the correct parse will involve at 
least one violation of these pre\['erenees. In general, 
some kind of intelligent backtracking and/or looka- 
head is required. In Propane, only a limited form 
of \]ookahead exists. Sometimes, an examination of 
the parts of speech (i.e. category names only and not 
feature values) in the grammar and those of the con- 
stituents in the stack and of t.he item that would be 
consumed in a shift shows the following situation: 
a reduction is possible, but if it is performed, the 
next shift cannot itself be followed by a reduction, 
whereas if a shift is performed next, two reductions 
may be possible. That is,, there are two alterna- 
tives: reduce now and then be forced to shift twice, 
or shift now and, unless unification failure prevents 
it, reduce twice. In such situations, Propane chooses 
the second option. This often allows sentences to be 
parsed which would not otherwise be, and does not 
prevent he parsing of any sentences in the subcor- 
pus. Because only category names, and not features, 
are examined, the lookahead procedure is very quick. 
With this small amount of lookahead included, 
Propane was able to parse 75 of the 100 sentences in
the subcorpus. No attempt was made to check thor- 
oughly the validity of these because of the present 
author's limited farniliarity with Japanese and the 
Nadine grarnmar; however, they were inspected in- 
formally, and none seemed to be obviously wrong. 
Of the 25 sentences for which no parse was found, 
ten involved an incorrect reduction. Eight of these 
might: have been prevented had information corre- 
sponding to Gunji's (1988) treatment of "sentence 
levels" for modification been present in the gram- 
mar. Twelve sentences failed through incorrectly 
favouring longer edges over shorter; all of these fail- 
ures involved a lexical entry for the same particle 
sequence, and could have been prevented either by 
altering the treatment of that sequence or by im-: 
plementing the same kind of lirnited lookahead for: 
the long-over-short preferel~ee as was clone for the = 
reduce-over-shift preference. Of the other three fail- 
ures, two were sentences on which the Nadine parser 
also failed, suggesting that they were outside gram- 
matical and/or lexical coverage, and one remained 
unexplained. '\]'hus in summary, up to 98% of the 
71 
subcorpus could have been assigned plausible anal- 
yses: by Propane given the improvements just,listed, 
3 '  P run ing  I r re levant  D is juncts  
If"bottom-up arsing is to be effident, it is impe l  
tan(~liat disjunctions that are irrelevant to. a newly-: 
er~eat:'ed  mother Coiisti~uent -~'that is ~ d~sj~nCtions 
wli~se values never affect the'reaiizat~ons Of the 'con; 
st:i:thefit, i.el tlle se't of tin'mS i~i its disjunctive' norm~i' 
form 2_ are:disC~ded WheneVer possib.lel Otherwise, 
the number of disjunCt'i0ns in a constihlent will be 
roug,hly.proportional t'6 themumber'~f'\[e~ical:'en{ries 
andlgralnmar:rules used, to construct, it~ land: ttie. time 
ta.l~en, to unify two constituents~wil,1, ncrease at"l~ast 
as;:fasV as' that number Jand, probably ra~herdaster. 
However, :i't i s  ,nov possibte si~mply' to-dlscard, dis- 
junctive' constraints t,t~at refer, 0nty' ~o t;he daugtrter 
nod'~s,,' because feature, struct~ures are, grap'hs, not '  
tree's~ ~he.sa~me substructure' frequen-tty appears ~;in 
more ~ ~,h,a.n oue placei When a grammar ole' has 
ide:n~ifl~d :par:t of,the,motl~er st, ~c'ture~with::p'arg of 
a-d~ugh'tie~ one; ~he'n, any disjune~ions ~i~iV~lving~ the 
la.t,~m,~ m~tst*,be preserved. Some: means mus~ ~there- 
fore be ~ou.nd, of.k~eping track of wllat pieces'of struc- 
tu, re' ateMm~ed? or in~ other' wovd~s; w.hat pai.fs of!fea- 
tm~e, pat~hs, lead to  the~ same V~kues. I~fqhds.qs; done; ~ 
a:di~jn,~6tion that:.enpt:icitlyqn:vOlve~ ;Only daug:h~er 
constituents, ~cau,, safely be di~carde'd :: if.. no feature' 
path ,tJhmugh,' the ~mother ? l~ads, :to ~ i,t~ oe 't'o ~ ,any: o'f 
its, ~coinponents. 
:'O~ course; t'he set of featu.re paths, t'hat 's'la:are' a 
valise will' di~ffer fo.v t~he different reM~z~tions ~Com- 
ple~e ch~ice~ 'of disjut~e~s)of a 'disjtlnetiVe' sti~ueture. 
It ~is) not even simpty' the Case ttra~ eacI\] disjun:Ct 
co~atvibut'es~:its own:s'et'.of',cm~iirtion p't~ths; naembe~s 
of:~.wc~,differ~nt, ,~i;sj:une~ions va~ii,ehu.~e t~V6; p'a:~hs' ~'6 
h~y~ t~t~,%~a~.~e ya:\[nai ir~ a xe~li~,ati0n i w,hich itt)ey 
ar~ b,qt,t~ lec.t~d. if'Mmy pl,a~e the (same vgF~i,~bl,e 
in ,t.go different ,positions Thus .to de~ide inNltibty 
w!!~ti~qr ' a,gi,vea d;isj,~met shg,~tldi,qr, shg~tg ng~. b,,el gliifi, 
ca$.de~l, one would need to ~y.<l~ it.hr.ot}~t~ ?yery:~pg~tsi, 
blg~.~'e~Jiz~.t.i~n Qfthe whole str, u,c~;,ur~, l~'o~.gss,tS~,t/ 
is ,eN?.o~mi~ti~ ig !he nI~mher of.disj~wta ,~nd,tb, er,.~r 
foi'e ~pl:a?c~pt~,bl? This rute%~ut, .~9~I~ p~rp.~gesi 
a ~eptt?e,~gn,t~,tion Si!~l~',: to t, ha, t~,0f,Eis~le!~a~)GDbrre: 
p ~,@:io~: ;tp-! g~,~i ,c l~.~t,!:a ~ .?: ire.f<r..c m~:,#\] ~o, ,t~, g ,~ff.~?gq4 rb.,y. 
elglhe, t ,~l~t,emg,t, iy~.,aflo,Bt efl,,i,n ~P l'~t?&g~, aft; qn?,~ h~t,, 
somethnes, keep;;~ di~j,u~ct,4~l~ ~b, aald,,ba ~hl~w~! 
to, gj,v,~ io,qo.r~ect,~!e,s~.!~,bu~ me,.. 'el.~ ~toer~u:mber .th?~, 
I ,Each, disjunctive, stmct,ure, ~ie~m n~-A < hy~ a; lexi eon~ 
72 3 
or grammar predicate, therefore, is assigned a set 
of "path groups!!, which each correspond either to a 
variable that: .appears more than once in the original 
Nadine definition, or to  an explicit identity equa- 
tion between two:or more positions in the feature 
structure: To some, extent,, a path group is anal- 
ogous to  a set .of Eisele, and:'rD.5rre pointers that 
all, p,oint to:the,, same position.. However, the cru- 
cial,,poil~, is ,.tha~,i;n. Bropane,.,no:record is kept of 
w,hieh, position: i~n,,the and/or, tree each path comes 
from. This aneans,, two things.. ,Firstly when deciding 
whether; ~to4hro,~caway,  disju.n~tior~ referring ~o a 
p articular~gositionSn-a:daugil~er, st uct ure, Propane 
can check the,(m4ique,, disjunctiondndependent) se  
of patti,group, s,  .and ff n,0, p,ossib!e equivalence with 
pant of.the mo~,~mr, z~r,u?tu~? is found, the: disjunc- 
tion c~n safei~ be pruned. The. p~'ice we pay for this 
disju,nctifm,i~gtep9 ~ndence is th~,t.the pathgroups can 
sp~ecify~sp, uriQu~.~,~va\[?nees. It is possible for two 
p~hs .t9 be ~so~ia~ted wher*.;th~y, arise from two~dif, 
ferent,, inc0mpatible di~jullcJ~s or to remain asso?i- 
a~ed after the d\[sjunct{s).from which they arose have 
been eliminated through later unificatmn. Itoweve L 
sn)ce path groups ~are used only for demdmg wtmt 
digjunct{ons "to d~;eard, and not as part of the fea~ 
- ? ? % , ; ( ~ : ,  . 
ture structure representation itself a spurious path 
group c~a.n only result in some inefficiency and not 
in an irtco 't', ct. result. 
This tec ~n'ique is.thus a compromise between on 
the pge:!~nd,i ?~r,{-y,jagoBt.,possibly exhaustive com- 
pg;~i~;u t~p,,ach~ey  a perfect, result,, and on the oth,e.r 
hand ,not ~!}5.e~r~ing ar~y:thiag.~t all. It avoids any 
expone~)!)i~):Sx.p,~,nsi~n: 0f, disjunctions at the cost,of 
so,me sli.gb,! .tt!~,~)eee, ss, a~? proge~sir~g at a later sta ~. 
I~ prg.ct, ic%'t'~;'co}t invoive, qt seen~, quite accepta~,  
in,t~aat th~ 1.1,~m3'~r, qf di~juac~s in. ,~ constituent dQ~s 
no,~ iqcre~s.c~,~.~!y ith i~ heigt~t in the. parse.tre~, 
:~M~q~her,<~?p~fl~le, nc .,of .keeping. irrelevant dis,- 
jt!~,CSS {S~,t,l~i~:if  ~.t; t, bgend, of the parse, the set.of all 
full re~\]iz~tions of a disjunctive .feature structure.is 
exhaustwely epume~ated then ,tl~e same realization 
t t  ,~  G( :  ; , ' ,  ' , ' ;  ( ) l  ':' ~ ? ' :  ~', 
may'be  .encotlntered'.repeatedly However, experb 
enne suggests that for t!~e current Nadine gra~mnarl 
i t ) l~ ' ,  ,~  ' !~  !.l I )  . F , ! ) '~  , . " ' ; ,  ahzatmns (~enihcal or .d~fferertt) per parse of'the 
75 senten,c, es su?cess\[ully.parsed was exactly two, 
and, on!y one sentence received more than six real- 
i.z~{idiis . . . .  " 
he l?runinz ot~e,~tion i fact resulted in, on av- 
e~e ~ ,~0,~ decre~e ~)a the,numbe~ of &sjunctions 
t . ' ) 'g~")  " ) ) I I~) : l '~  03  , I ( ! f l  , : i  ~ , ~ , " : 
in. a new\]yi created tnother constit,uent, over all "re- 
.I "~  O \[ .l~ IC* I \ [ ' )G  l i  "t'.,.' ' f  " ~. ' " 
dace"., operations t)erfgrmed in processing ~he cor- 
"U; ' ? ,e? ) l  "LAI  U I  ~;d I? fU , ' ;  ~" V U ' " ' :  ' " ' ? .  " " 
pus Probal~lv for t,j.gS reaso$~ the number ofdisjunc- 
f ) \ [ \ [ l ' t  ~ ' \ [ " ) " f~)  . (Y t \ [  f ) t~ i t f ;  ) " ,  V "" ~ "~ "" ' : ' ." 
tmns fn a new mother constituent.only barely show. s
a positive cQrrelation to the size, in constituents, of
t!m su )itr ~-~ l~a~'~t domg~ates ~nd from which tt has 
~\] ) " )~\ ]G~) \ ] I .~t t  | JOf l~. ' ;~ '1 '  . I ; ~ '  * 'b  " ' DeeD- o f f \ ] i t .  ton  the  o ther  nano ,  \] i  p run ing  were  not  
~'he correlation between subtree ~ize and  number of dis- 
jUnctmns, for d~e 406 tree nodes crea, ted, w,%s only just, slg- 
,?  ~q t ? , , :  , ,  , , .  ? . "  ." 
n\]ti~e~fl~ ,)?t ,t~ff6 "'5%' lex,el: 'gfgell' the, mlll hypothems that the 
pertbrmed, each constituent eottld be expected to 
add its quota of irrelevant disjm~cts to ~very ottmr 
constituent that dominated it. l)espite the relatively 
modest figure of a 20% decrease over one reduction, 
the cumulative ffect of such decreases over a whole 
parse is theretbre quite significant. 
In particular, it is worth noting that if', through 
pruning, the number of disjunctions in a node does 
not increase with the number of nodes it dominates, 
{;hen disjunctive unification will have no ef\['ect on the 
time complexity of parsing as a flmction of sentence 
length. There is reason to hope that this will often 
be the case; while disjunction may be widespread 
in grammar ules and texical entries, Kasper (1987) 
observes that in his implementation, "in the anal- 
ysis of a particular sentence most fieatures have a 
unique value, and some features are not present at, 
all. \Vhen disjunction remains in the description of 
a sentence after parsing, it usually represents ambi- 
guity or an underspecified part of the grammar." it 
is tempting to interpolate between the extremes of 
single words and whole sentences and to speculate 
that, with thorough pruning, the number of disjunc- 
tions in a node should decrease with its height in the 
tree. 
4 Pairwise Consistency Checking 
When a new mother constituent has been creal, ed 
by rule application, it is essential to verify that it. 
does in fact have at least on~ cousistent realization. 
Although redundancy is not a major problenl for our 
i)urposes, a representation that did not di:-stinguish 
bet.ween realizable and ~,nrealizable struc*ures (that 
5:< between success and failure i~l unification) would 
eseriously flawed. Ilowever. consistency checking is, 
in the general case: an N\['-complete problem. 
Kasper (1987) describes a teelmique which, lbr ev- 
ery set of ',~ conjoined disjt,p.ctions, checks the:, con- 
:;~stcncy first of single disjuncls against the delinite 
part of the description. :h<, ixhat of pairs, and so on 
u I0 to ~>tuples for full cca~sistency. At each stage l,:, 
m~y disjunct that does not take part in any consis- 
t.ent /c'-tuple is eliminated. 2 If all the disjuncts in a 
disjunction are elhninated, the conjunction of which 
I:l~at disjm~ction is a conjuncl is eliminated too; and 
if the ooter lY lOSt  c.onjm~ct.ion of the whole foaturc 
.~;tructure is ,qiminat.c-d, unifica.tiorl fails. This tech- 
l~ique has the adwmtage that the pruning of nodes 
a~ stage/e will make stage /c' + 1 more eflicieJqt. Nev- 
ertheless, since n can sometimes be quite large, this 
exhaustive process be time~consunfiug, and indeed 
in the limit will take exponential time. 
Propane's attempted solution to this problem is 
based on the hypothesis that the vast majority of 
large unrealiza.t~le di@mctive feature struct.ures that 
i:~mnber of dis junct ions is independcnl  o\[" subCree size. 
2 Smnewha.t confusingly, l (aspee uses the term "n-wise con- 
sb~tency" for I.he ched?ing of 'n q-- l - luples of (tis.itmcts. \Ve 
avoid |,his usage. 
will be created in the use o fa  practical natllt:al an- 
guage grannnar will be not o~tly unrca.lizable, \])ut 
also "pairwise ~mrealizable", in the sense that they 
will Nil at or betb,'e the second stage of l(asper's 
consistency check, for k = 2. 
The reasotl we can expect most unrealizable struc- 
tures also to be pairwise unrealizable is that most 
comn rely, unrealizability will result from the con- 
tents of two nodes in the tree being incompatible, 
through assigning non-unifiable vah~es to the same 
positiol~ in a feature structure. Although there can 
clearly be exceptions, the hypothesis is that it is 
fairly unlikely, in a large disjunctive structure (which 
is the case where exponen|.iality would be harmful) 
that there would be a non-pairwise inconsistency but 
no pairwise inconsistency. 
Following this hypothesis, when the Propane uni- 
tier has created a structure, it checks a~d prunes it 
first for pairwise consistency, and if this succeeds, 
risks trying for a single full realization (one choice 
at each disjunct) straight away. Thus it differs from 
Kasper's algorithm in two ways: no exhaustive leo 
wise checks are made for k > 2. and when a flfll 
check is made, only one success is required, avoid- 
ing an exhaustive search through all combinations of
disjuncts, a Of course, if the structure is pairwise re- 
alizable but not flflly realizable, the search for a sin- 
gle success will take exponential time; but., accord- 
lug to the hypothesis, such occurrences, for struc- 
ture.s with enough disjuncts for exponential time co 
be unacceptably long, should be extremely rare. 
The effectiveness of this strategy can only be 
judged by' observing its behaviour in practice. In 
fact, 7~o instances were observed of the search for a 
flfll realizabition taking an inordinately long time ar- 
Iel' pairwise consistency checking and pruning have 
succeeded. Thus it can be tentatively concluded 
that, wilh the current version of the Nadine gram- 
mar and with bottom-up parsing, the risk is worth 
taking: that is, a full realization is virtually always 
possible, in reasonable ~irne, tbr a pairwise consis- 
tent structure. Maxwell and Kaplan's (1989) belief 
that %.. \[simple inconsistencies\] become less pre- 
dominant as grarnmars  are extended to cover more 
and more linguistic phenomena" does not therefore 
al ?ear to) be true of the Nadine grammar, in spite of 
its coverage of a wide range of phenomena t many 
linguisr, ie levels; or if it is true, it. does not affect the 
success of Propar~e's strategy'. That is. even if simple 
ineGnsistencies art less predominant, they are still 
common enough that a large structure that is unre- 
alizable because of complex inconsistencies will also 
3According to M\[axwell and Kap lan (1989), "in practice, 
Kasper  noted that. . .once bad singleton disjuncts have been 
el iminated, il is more efficient to switch to DNF \[disjunctive 
normal form\] (hart to compnie  at\[ of tim higher degrees of 
consistency." This variation of the algor i thm given in Kasper 
(1987) is closer t.o Propane's  strategy, b~H. the expansion io 
full \[)N\[," is it.self in general an exponeatia\] pt'ocess and will. 
when many disjunctions remain, l.,e far more expensive Ihan 
looking for a single realizatiola. 
4 
73 
be unrealizable because of simple ones. 
Of course, this does not alter the fact that in 
general, i.e. for an arbitrary input and for an ar- 
bitrary grammar written in the Nadine formalism, 
Propane's unification algorithm, like Kasper's, is ex- 
ponential in behaviour. In the limit, an exponential 
term in the formula for the time behaviour of an al- 
gorithm will dominate, however small its associated 
constant factor. 
Unlike Nadine's unifier, Propane's strategy has 
the property that when a structure survives consis- 
tency checking, not every member of every disjunct 
in it can necessarily participate in a full realization; 
that is, ideally, it should have been pruned. How- 
ever, this property is only undesirable to the extent 
that, at the end of the parse, ii. makes any exhaus- 
tive search for flfll realizations inefficient hrough ex- 
cessive backtracking. Again, in practice, this seems 
not to be a problem; exhaustive full realizat~ion is 
extremely quick compared to parsing. 
An analysis of Propane's processing of its corpus 
reveals quite wide variation in the relationship be- 
tween the total number of disjunctions in a rule 
application (in both daughters and the rule) and 
the time taken to perform the unification. How- 
ever, although, unsurprisingly, unification time in- 
creases with the number of (|isjunctions, it. appears 
from inspection to be perhaps linear with a small 
binomiM component, and not exponential. This is, 
in fact, what an analysis of the algorithm predicts. 
The linear component derives from the check of each 
disjunct sepa.rately against the definite part., while 
the parabolic component derives from the pairwise 
check. The relatively small size of the latter may 
imply t.hat a majority of disjuncts are eliminated 
during the first phase, so the second has less work 
to do. 
5 Uni f i ca t ion  and  Pars ing  T imes  
The al.~sence of any known exponential process 
(other than the final phase of unification, which ap- 
pears never to take very long) in Propane's parsing 
and unification algorithms gives grounds for expect- 
ing that in practice, the time taken to parse a. sen- 
teuce of 7~ lexical items should be polynomial in n. 
Because of the pruning of irrelevant disjuhctions, the 
value of n should be fairly small, leading to a signif- 
icant speed advantage over systems like the Nadine 
parser that do not, prune disjunctions and that use 
the full (exponential) version of Kasper's algorithm. 
The results of a comparison between Nadine's and 
Propane's parsing times suggest hat such an advan- 
tage does exist. However, the results are not sufl'i- 
ciently detailed to allow the verification of Propane's 
exact time behaviour. 
As senCence lengt.h grows, Propane. tends to per- 
form progressively faster in a stntistically significant 
way. 4 In particular, Nadiue's attempts to parse two 
'tI"or each of (:lie 31 sell.i, ences containing more than one 
fairly long sentences (12 and 18 lexical items respec- 
tively) in the corpus had to be aborted because of the 
time they took, but both these sentences received a 
parse from Propane in ten to (;hirteeu minutes. Had 
Nadine not been aborted in these cases, two more 
data points would be available that would increase 
the significance further. 
The progressive speed advantage of Propane may 
be dug partly to the fact that, a.s discussed above, 
it; follows only the single sequence of shifts and re- 
ductions specified by the algorithm described in sec- 
tion 2, and does not explore alternative bracketings. 
IIowever, Nadine is also, through numerical scot  
ing, sensitive to the left branching preference, which 
guides it to explore, and presumably to find, pre- 
ferred parses first; and the Nadine times used in 1he 
comparison were those taken to find the first parse, 
not all parses. 
Another difference between the two parsers is thai 
Nadine, being chart-based, stores the edges it cre- 
ates so that later backtracking need not cause work 
to be rel)eated. Propane does not backtrack in this 
way. However, because o\[" a mundane practical im- 
itation in the Prolog implementation used, Propane 
is also forced to store (assert in the database) every 
constituent it. creates, advancing the. parse by suc- 
cessive storing, lhiling and backtracking rather than 
by the simple recursion that would otherwise be per- 
formed. The time taken to store constituents in fact 
increases faster than that used by or.her aspects of 
processing, and :\['or the longest sentences parsed rep- 
resents 70 to 80 per cent of the total time. It might 
be, therefor< tha.t if storage time were ignored for 
both parsv,>, Propane's peed advantage would be 
eveI1 more  apparent. 
Such vague remarks are admittedly unsatis~qng 
and should, given time, be firmed up by the acqui- 
sition and analysis of more data., and by separate 
evaluations of the parsing and unification time be- 
haviours. The latter would im~olve comparing the 
two pa.rsers framing with the same unifier and then 
the two unifiers rmming  under the same parsing al- 
gorithm. Nevertheless, there are, as already men- 
tioned, a priori grounds for ex-pect.ing Propane's uni- 
tier to have an increasingly marked advantage, and 
the data presented here are fully consistent with that 
expectation, showing as they do a statistically sig- 
nificant trend. 
A formal complexity analysis of a botton>up 
parser using the techniques described in this paper 
would only be of limited interest. Complexity anal- 
yses deal with worst cases, and in those terms, the 
essential hypothesis th at p airwise consistency check- 
ing will ':ahnost all the time" be suNcient is mean- 
ingless. Likewise, to claim that disjmlction pruning 
lexicM i tem and succes~f,dly parsed t35' both  systems,  the cor- 
relation was mea.sured bt~tween the nmnber  of lexieM items in 
the seatence and tile \ ]ogar i thm of the ratio of parsing times. It 
was easily statist ical ly siglfificant at the 5% level, and its sign 
indicated that the correlation is in the direction of Propane 
performing bett.er for longer sentences. 
5 
74 
greatly reduces the number of disjunctions it, higher 
tree nodes in the case of Propane and the Nadine 
grammar, is to say nothing about its effectiveness in 
the worst ease. One could easily write a grammar 
in which every disjunction fi'om daughter nodes was 
needed by mothers, so that nothing would be pruned 
at all. And thirdly, it is not claimed that the left- 
branching preference in aNpanese is anything more 
than a preference, albeit quite a strong one. 
However, because the grammar, lexicon and sen- 
tence set dealt with here are in no sense toy ones 
written to test unification techniques but are the 
tools of a major effort to process natural language 
us it ~ actually used, it is of interest to anal- 
yse Propane's overall time behaviour under the 
assumption that the relationships inferred a.bove 
through observation and statistical rnethods are 
valid) There seems to be no a priori reason to doubt 
that the same behaviour could be achieved by' other 
system,~ or. for other languages (except, of course, 
that the left-branching characteristic is language- 
dependent). 
Thus in Propane, the number of unifications at- 
tempted (luring the successful parsing of a sentence 
of length N is O(N) (this happy situation is, of 
course, bought at the price of failure when the pref- 
erence heuristics fail). Let us a.ssnme a strongly left- 
branching structure, which, being maximally unbal- 
anced, is the worst case. Then the number k of nodes 
dominated by each new mother node the parser (at- 
tempts to) create will be uniformly distributed be- 
tween 0 and N. From observation, it seems that 
the number of disjunctions d involved in a unifica- 
tion that. dominates k nodes will be proportional to 
k (This is the pessimistic option; as argued earlier, 
there are grounds for hoping that, with suNeient 
pruning, d will not increase with k at all, so that 
disjunctive unification time will made no contribu- 
tion to parsing time as a flmction of N). Unification 
time for d disjunctions, under the pairwise consis- 
tency hypothesis, appears to be proportional to d 2. 
Compositional semantic interpretation will probably 
mean in the limit that the size of the non-disjunctive 
part of a constituent will also be proportional to the 
number of constituents dominated. Unification time 
here is order n lo,q n in the sizes n of the input struc- 
tures (Kasper, 1987). Thus a node dominating k 
others will take order kalog k time to create. Sum- 
ming over k fi'om 0 to N gives an order N41o.qN 
result. More generally, a parsing algorithm that on 
atomic categories h~s order f (N)  should, with dis- 
junction, have order f(N)N21ogN if the distribution 
of k over nodes created is also uniform. 
In conclusion, the assessnrents of the various as- 
pects of Propane's time behaviour are all consistent 
with, and in some eases provide good evidence for, 
5StatisticM correlation tests, of course, cannot tell us what  
relationship, e.g. linear or exponential, holds between two 
variables; they can only tell us that sore  e relationship appears 
to exist. ~J'he time anMysis can therefore only be tentative. 
the claim that the two novel techniques described 
here can signifieantly enhance the speed with which 
sentences can be parsed using a large grammar con- 
taining disjunctions. As long us the essential hypoth- 
esis about pairwise consistency holds \[br the partic- 
ular grammar and the sentences it will in practice 
encounter, polynomial time behaviour can bc ex- 
pected, as compared to an exponential time for other 
approaches involving disjunctive unification. 
Acknowledgements  
This research was carried out while I was a visiting 
researcher at A'FR Interpreting Telephony Hesearch 
l,aboratories, Kyoto, Japan. I am grateful t.o Dr 
Akira Knrematsu, Mr Kiyoshi Kogure and others 
at ATR for thought-provoking discussions and tbr 
providing a very pleasant research environment. 
References  
Eisele, A., and DSrre, J. (1988) "Unification of l)i:-,- 
junctive Feature Descriptions", Proceed~w/s of t/~e 
26th Annual Meeling of the As.~ociatio~ for Com- 
pulalional Lin.guistics. 
Gunji, T. (1989) "Synta.ctic Sketch 88: Japanese". 
In: Syntax: an International I andbook of ('or~tt:7~- 
porary Research, de Gruyter. 
Kasper, R. (\]987) '% Unification Method for Dis- 
junctive Feature Desc:riptions', Pr'oceedings o/ the 
2515 Annual Meeting of the AssocialioT~ for Com- 
putational Linguistics. 
Kogure, K. (1989) "Parsing Japanese Spoken Sen- 
tences based on HPSG", Proceedings of lhc: Interna- 
tional Workshop on Parsing9 Technologies, Carnegie 
Mellon University, 132-\]41. 
Kogure, K., and Nagata, M. (1.990) "Parsing Spol.>n 
Japanese Sentences Bused on I-IPSG", Procccdin(.}s. o/ 
C'oling- 90. 
Maxwell, J.T., and Kaplan, R. (1989) "An Overview 
of Disjunctive Constraint Satisfaction", Proccedi~gs 
of lhc International Workshop on Par~sing Tc.ch~zolo- 
ales, Carnegie Mellon University, 18-27. 
Shimazu, A., and Naito, S. (1989) "t'refi~rence R ad- 
ing Models of Japanese Sentences", Gengo Short lo 
Communication Kenky?ikai, 89:114 (in Japanese). 
6 
75 
