Proceedings of the Second Workshop on Statistical Machine Translation, pages 216?219,
Prague, June 2007. c?2007 Association for Computational Linguistics
The Syntax Augmented MT (SAMT) System for the Shared Task in the 2007
ACL Workshop on Statistical Machine Translation
Andreas Zollmann and Ashish Venugopal and Matthias Paulik and Stephan Vogel
School of Computer Science, Carnegie Mellon University, Pittsburgh
interACT Lab, University of Karlsruhe
{ashishv,zollmann,paulik,vogel+}@cs.cmu.edu
Abstract
We describe the CMU-UKA Syntax Augmented
Machine Translation system ?SAMT? used for the
shared task ?Machine Translation for European Lan-
guages? at the ACL 2007 Workshop on Statistical
Machine Translation. Following an overview of syn-
tax augmented machine translation, we describe pa-
rameters for components in our open-source SAMT
toolkit that were used to generate translation results
for the Spanish to English in-domain track of the
shared task and discuss relative performance against
our phrase-based submission.
1 Introduction
As Chiang (2005) and Koehn et al (2003) note,
purely lexical ?phrase-based? translation models
suffer from sparse data effects when translating con-
ceptual elements that span or skip across several
source language words. Phrase-based models also
rely on distance and lexical distortion models to rep-
resent the reordering effects across language pairs.
However, such models are typically applied over
limited source sentence ranges to prevent errors in-
troduced by these models and to maintain efficient
decoding (Och and Ney, 2004).
To address these concerns, hierarchically struc-
tured models as in Chiang (2005) define weighted
transduction rules, interpretable as components of
a probabilistic synchronous grammar (Aho and Ull-
man, 1969) that represent translation and reordering
operations. In this work, we describe results from
the open-source Syntax Augmented Machine Trans-
lation (SAMT) toolkit (Zollmann and Venugopal,
2006) applied to the Spanish-to-English in-domain
translation task of the ACL?07 workshop on statisti-
cal machine translation.
We begin by describing the probabilistic model of
translation applied by the SAMT toolkit. We then
present settings for the pipeline of SAMT tools that
we used in our shared task submission. Finally, we
compare our translation results to the CMU-UKA
phrase-based SMT system and discuss relative per-
formance.
2 Synchronous Grammars for SMT
Probabilistic synchronous context-free grammars
(PSCFGs) are defined by a source terminal set
(source vocabulary) TS , a target terminal set (target
vocabulary) TT , a shared nonterminal setN and pro-
duction rules of the form
X ? ??, ?,?, w?
where following (Chiang, 2005)
? X ? N is a nonterminal
? ? ? (N ?TS)? : sequence of source nonterminals
and terminals
? ? ? (N ? TT )? : sequence of target nonterminals
and terminals
? the count #NT(?) of nonterminal tokens in ? is
equal to the count #NT(?) of nonterminal tokens
in ?,
? ?: {1, . . . ,#NT(?)} ? {1, . . . ,#NT(?)} one-
to-one mapping from nonterminal tokens in ? to
nonterminal tokens in ?
? w ? [0,?) : nonnegative real-valued weight
Chiang (2005) uses a single nonterminal cate-
gory, Galley et al (2004) use syntactic constituents
for the PSCFG nonterminal set, and Zollmann and
Venugopal (2006) take advantage of CCG (Combi-
natorial Categorical Grammar) (Steedman, 1999) in-
spired ?slash? and ?plus? categories, focusing on tar-
get (rather than source side) categories to generate
well formed translations.
We now describe the identification and estima-
tion of PSCFG rules from parallel sentence aligned
corpora under the framework proposed by Zollmann
and Venugopal (2006).
216
2.1 Grammar Induction
Zollmann and Venugopal (2006) describe a process
to generate a PSCFG given parallel sentence pairs
?f, e?, a parse tree pi for each e, the maximum a
posteriori word alignment a over ?f, e?, and phrase
pairs Phrases(a) identified by any alignment-driven
phrase induction technique such as e.g. (Och and
Ney, 2004).
Each phrase in Phrases(a) (phrases identifiable
from a) is first annotated with a syntactic category
to produce initial rules. If the target span of the
phrase does not match a constituent in pi, heuristics
are used to assign categories that correspond to par-
tial rewriting of the tree. These heuristics first con-
sider concatenation operations, forming categories
like ?NP+VP?, and then resort to CCG style ?slash?
categories like ?NP/NN? giving preference to cate-
gories found closer to the leaves of the tree.
To illustrate this process, consider the following
French-English sentence pair and selected phrase
pairs obtained by phrase induction on an automat-
ically produced alignment a, and matching target
spans with pi.
f = il ne va pas
e = he does not go
PRP ? il, he
VB ? va, go
RB+VB ? ne va pas, not go
S ? il ne va pas, he does not go
The alignment a with the associated target side
parse tree is shown in Fig. 1 in the alignment visual-
ization style defined by Galley et al (2004).
Following the Data-Oriented Parsing inspired
rule generalization technique proposed by Chiang
(2005), one can now generalize each identified
rule (initial or already partially generalized) N ?
f1 . . . fm/e1 . . . en for which there is an initial rule
M ? fi . . . fu/ej . . . ev where 1 ? i < u ? m and
1 ? j < v ? n, to obtain a new rule
N ? f1 . . . fi?1Mkfu+1 . . . fm/e1 . . . ej?1Mkev+1 . . . en
where k is an index for the nonterminal M that in-
dicates the one-to-one correspondence between the
new M tokens on the two sides (it is not in the space
of word indices like i, j, u, v,m, n). The initial rules
listed above can be generalized to additionally ex-
tract the following rules from f, e.
S ? PRP1 ne va pas , PRP1 does not go
S ? il ne VB1 pas , he does not VB1
S ? il RB+VB1, he does RB+VB1
S ? PRP1 RB+VB2, PRP1 does RB+VB2
RB+VB ? ne VB1 pas , not VB1
Fig. 2 uses regions to identify the labeled, source
and target side span for all initial rules extracted on
our example sentence pair and parse. Under this rep-
resentation, generalization can be viewed as a pro-
cess that selects a region, and proceeds to subtract
out any sub-region to form a generalized rule.
S
q
q
q
q
q
q
q
M
M
M
M
M
M
M
NP VP
q
q
q
q
q
q
q
M
M
M
M
M
M
M
PRN AUX RB VB
he does not
q
q
q
q
q
q
q
M
M
M
M
M
M
M
go
q
q
q
q
q
q
q
il ne va pas
Figure 1: Alignment graph (word alignment and target parse
tree) for a French-English sentence pair.
il 1 ne 2 va 3 pas 4
he 1
does 2
not 3
go 4

ffi
ff
ff
9
S
RB+VB
VB
VP
NP+AUX
NP
Figure 2: Spans of initial lexical phrases w.r.t. f, e. Each phrase
is labeled with a category derived from the tree in Fig. 1.
2.2 Decoding
Given a source sentence f , the translation task under
a PSCFG grammar can be expressed analogously to
monolingual parsing with a CFG. We find the most
likely derivation D with source-side f and read off
the English translation from this derivation:
e? = tgt
(
argmax
D:src(D)=f
p(D)
)
(1)
where tgt(D) refers to the target terminals and
src(D) to the source terminals generated by deriva-
tion D.
Our distribution p over derivations is defined by a
log-linear model. The probability of a derivation D
217
is defined in terms of the rules r that are used in D:
p(D) =
pLM (tgt(D))?LM
?
r?D
?
i ?i(r)
?i
Z(?)
(2)
where ?i refers to features defined on each rule,
pLM is a language model (LM) probability applied to
the target terminal symbols generated by the deriva-
tion D, and Z(?) is a normalization constant cho-
sen such that the probabilities sum up to one. The
computational challenges of this search task (com-
pounded by the integration of the LM) are addressed
in (Chiang, 2007; Venugopal et al, 2007). The
feature weights ?i are trained in concert with the
LM weight via minimum error rate (MER) training
(Och, 2003).
We now describe the parameters for the SAMT
implementation of the model described above.
3 SAMT Components
SAMT provides tools to perform grammar induc-
tion ( ?extractrules?, ?filterrules?), from bilingual
phrase pairs and target language parse trees, as well
as translation (?FastTranslateChart?) of source sen-
tences given an induced grammar.
3.1 extractrules
extractrules is the first step of the grammar induc-
tion pipeline, where rules are identified based on the
process described in section 2.1. This tool works on
a per sentence basis, considering phrases extracted
for the training sentence pair ?si, ti? and the corre-
sponding target parse tree pii. extractrules outputs
identified rules for each input sentence pair, along
with associated statistics that play a role in the esti-
mation of the rule features ?. These statistics take
the form of real-valued feature vectors for each rule
as well as summary information collected over the
corpus, such as the frequency of each nonterminal
symbol, or unique rule source sides encountered.
For the shared task evaluation, we ran extrac-
trules with the following extraction parameter
settings to limit the scope and number of rules
extracted. These settings produce the same initial
phrase table as the CMU-UKA phrase based sys-
tem. We limit the source-side length of the phrase
pairs considered as initial rules to 8 (parameter
MaxSourceLength). Further we set the max-
imum number of source and target terminals per
rule (MaxSource/MaxTargetWordCount)
to 5 and 8 respectively with 2 of nonter-
minal pairs (i.e., substitution sites) per rule
(MaxSubstititionCount). We limit the
total number of symbols in each rule to 8
(MaxSource/TargetSymbolCount) and
require all rules to contain at least one source-side
terminal symbol (noAllowAbstractRules,
noAllowRulesWithOnlyTargetTerminals)
since this reduces decoding time considerably. Ad-
ditionally, we discard all rules that contain source
word sequences that do not exist in the development
and test sets provided for the shared task (parameter
-r).
3.2 filterrules
This tool takes as input the rules identified by ex-
tractrules, and associates each rule with a feature
vector ?, representing multiple criteria by which the
decoding process can judge the quality of each rule
and, by extension, each derivation. filterrules is also
in charge of pruning the resulting PSCFG to ensure
tractable decoding.
? contains both real and Boolean valued features
for each rule. The following probabilistic features
are generated by filterrules:
? p?(r| lhs(X)) : Probability of a rule given its left-
hand-side (?result?) nonterminal
? p?(r| src(r)) : Prob. of a rule given its source side
? p?(ul(src(r)),ul(tgt(r))|ul(src(r)) : Probability
of the unlabeled source and target side of the rule
given its unlabeled source side.
Here, the function ul removes all syntactic la-
bels from its arguments, but retains ordering nota-
tion, producing relative frequencies similar to those
used in purely hierarchical systems. As in phrase-
based translation model estimation, ? also contains
two lexical weights (Koehn et al, 2003), counters
for number of target terminals generated. ? also
boolean features that describe rule types (i.e. purely
terminal vs purely nonterminal).
For the shared task submission, we pruned away
rules that share the same source side based on
p?(r| src(r)) (the source conditioned relative fre-
quency). We prune away a rule if this value is
less that 0.5 times the one of the best performing
rule (parameters BeamFactorLexicalRules,
BeamFactorNonlexicalRules).
3.3 FastTranslateChart
The FastTranslateChart decoder is a chart parser
based on the CYK+(Chappelier and Rajman, 1998)
algorithm. Translation experiments in this paper
are performed with a 4-gram SRI language model
trained on the target side of the corpus. Fast-
TranslateChart implements both methods of han-
dling the LM intersection described in (Venugopal
et al, 2007). For this submission, we use the Cube-
Pruning (Chiang, 2007) approach (the default set-
ting). LM and rule feature parameters ? are trained
with the included MER training tool. Our prun-
ing settings allow up to 200 chart items per cell
218
with left-hand side nonterminal ? S? (the reserved
sentence spanning nonterminal), and 100 items per
cell for each other nonterminal. Beam pruning
based on an (LM-scaled) additive beam of neg-
lob probability 5 is used to prune the search fur-
ther. These pruning settings correspond to setting
?PruningMap=0-100-5-@_S-200-5?.
4 Empirical Results
We trained our system on the Spanish-English in-
domain training data provided for the workshop. Ini-
tial data processing and normalizing is described
in the workshop paper for the CMU-UKA ISL
phrase-based system. NIST-BLEU scores are re-
ported on the 2K sentence development ?dev06? and
test ?test06? corpora as per the workshop guide-
lines (case sensitive, de-tokenized). We compare
our scores against the CMU-UKA ISL phrase-based
submission, a state-of-the art phrase-based SMT
system with part-of-speech (POS) based word re-
ordering (Paulik et al, 2007).
4.1 Translation Results
The SAMT system achieves a BLEU score of
32.48% on the ?dev06? development corpus and
32.15% on the unseen ?test06? corpus. This is
slightly better than the score of the CMU-UKA
phrase-based system, which achieves 32.20% and
31.85% when trained and tuned under the same in-
domain conditions. 1
To understand why the syntax augmented ap-
proach has limited additional impact on the Spanish-
to-English task, we consider the impact of reorder-
ing within our phrase-based system. Table 1 shows
the impact of increasing reordering window length
(Koehn et al, 2003) on translation quality for the
?dev06? data.2 Increasing the reordering window
past 2 has minimal impact on translation quality,
implying that most of the reordering effects across
Spanish and English are well modeled at the local or
phrase level. The benefit of syntax-based systems to
capture long-distance reordering phenomena based
on syntactic structure seems to be of limited value
for the Spanish to English translation task.
5 Conclusions
In this work, we briefly summarized the Syntax-
augmented MT model, described how we trained
and ran our implementation of that model on
1The CMU-UKA phrase-based workshop submission was
tuned on out-of-domain data as well.
2Variant of the CMU-UKA ISL phrase-based system with-
out POS based reordering. With POS-based reordering turned
on, additional window-based reordering even for window length
1 had no improvement in NIST-BLEU.
ReOrder 1 2 3 4 POS SAMT
BLEU 31.98 32.24 32.30 32.26 32.20 32.48
Table 1: Impact of phrase based reordering model settings com-
pared to SAMT on the ?dev06? corpus measured by NIST-
BLEU
the MT?07 Spanish-to-English translation task.
We compared SAMT translation results to
a strong phrase-based system trained under
the same conditions. Our system is available
open-source under the GNU General Pub-
lic License (GPL) and can be downloaded at
www.cs.cmu.edu/?zollmann/samt
References
Alfred Aho and Jeffrey Ullman. 1969. Syntax directed
translations and the pushdown assembler. Journal of
Computer and System Sciences.
Jean-Cedric. Chappelier and Martin Rajman. 1998.
A generalized CYK algorithm for parsing stochastic
CFG. In Proc. of Tabulation in Parsing and Deduction
(TAPD?98), Paris, France.
David Chiang. 2005. A hierarchical phrase-based model
for statistical machine translation. In Proc. of ACL.
David Chiang. 2007. Hierarchical phrase based transla-
tion. Computational Linguistics. To appear.
Michel Galley, Mark Hopkins, Kevin Knight, and Daniel
Marcu. 2004. What?s in a translation rule? In Proc.
of HLT/NAACL, Boston, Massachusetts.
Philipp Koehn, Franz Josef Och, and Daniel Marcu.
2003. Statistical phrase-based translation. In Proc.
of HLT/NAACL, Edmonton,Canada.
Franz Och and Hermann Ney. 2004. The alignment tem-
plate approach to statistical machine translation. Com-
put. Linguistics.
Franz Josef Och. 2003. Minimum error rate training in
statistical machine translation. In Proc. of ACL, Sap-
poro, Japan, July 6-7.
Matthias Paulik, Kay Rottmann, Jan Niehues, Silja
Hildebrand, and Stephan Vogel. 2007. The ISL
phrase-based MT system for the 2007 ACL work-
shop on statistical MT. In Proc. of the Association
of Computational Linguistics Workshop on Statistical
Machine Translation.
Mark Steedman. 1999. Alternative quantifier scope in
CCG. In Proc. of ACL, College Park, Maryland.
Ashish Venugopal, Andreas Zollmann, and Stephan Vo-
gel. 2007. An efficient two-pass approach to syn-
chronous CFG driven MT. In Proc. of HLT/NAACL,
Rochester, NY.
Andreas Zollmann and Ashish Venugopal. 2006. Syntax
augmented machine translation via chart parsing. In
Proc. of the Workshop on Statistical Machine Transla-
tion, HLT/NAACL, New York, June.
219
