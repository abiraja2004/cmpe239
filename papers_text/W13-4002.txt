Proceedings of the SIGDIAL 2013 Conference, pages 2?11,
Metz, France, 22-24 August 2013. c?2013 Association for Computational Linguistics
Expressivity and comparison of models of discourse structure
Antoine Venant1 Nicholas Asher2 Philippe Muller1 Pascal Denis3 Stergos Afantenos1
(1) IRIT, Toulouse University, France, (2) IRIT, CNRS, France (3) Mostrare, INRIA, France ?
Abstract
Several discourse annotated corpora now ex-
ist for NLP. But they use different, not eas-
ily comparable annotation schemes: are the
structures these schemes describe incompati-
ble, incomparable, or do they share interpre-
tations? In this paper, we relate three types
of discourse annotation used in corpora or dis-
course parsing: (i) RST, (ii) SDRT, and (iii)
dependency tree structures. We offer a com-
mon language in which their structures can be
defined and furnished a range of interpreta-
tions. We define translations between RST and
DT preserving these interpretations, and intro-
duce a similarity measure for discourse repre-
sentations in these frameworks. This will en-
able researchers to exploit different types of
discourse annotated data for automated tasks.
1 Introduction
Computer scientists and linguists now largely agree
that representing discourse structure as a hierarchical
relational structure over discourse units linked by dis-
course relations is appropriate to account for a variety
of interpretative tasks. There is also some agreement
over the taxonomy of discourse relations ?almost all
current theories include expressions that refer to rela-
tions like Elaboration, Explanation, Result, Narration,
Contrast, Attribution. Sanders, Spooren, and Noord-
man 1992; Bateman and Rondhuis 1997 discuss corre-
spondences between different taxonomies.
Different theories, however, assume different sets of
constraints that govern these representations; some ad-
vocate trees: RST Mann and Thompson 1987, DLTAG
Webber et al 1999; others, graphs of different sorts:
SDRT Asher and Lascarides 2003, Graphbank Wolf
and Gibson 2005. Consider:
(1) [?he was a very aggressive firefighter.]C1 [he
loved the work he was in,?]C2 [said acting fire
chief Lary Garcia.]C3 . [?He couldn?t be bested
in terms of his willingness and his ability to do
something to help you survive.?]C4 (from Egg
and Redeker 2010)
Using RST, Egg and Redeker 2010 provide the tree an-
notated with nuclearity features for this example (given
by the linear encoding in (s1)), while SDRT provides
?This research was supported by ERC grant 269427.
a different kind of structure (s2). Dependency trees
(DTs), similar to syntactic dependency trees and used
in Muller et al 2012 for automated parsing, give yet an-
other representation (s3). Elab stands for elaboration,
Attr for attribution, and Cont for continuation.
Elab1(Attr(Elab2(C1N ,C2S )N ,C3S )N ,C4S ) (s1)
Attr(pi,C3) ? pi :Elab(C1, pi1) ? pi1 :Cont(C2,C4) (s2)
Elab1(C1,C2) ? Attr(C1,C3) ? Elab(C1,C4) (s3)
Several corpora now exist annotated with such struc-
tures: RSTTB Carlson, Marcu, and Okurowski 2002,
Discor Baldridge, Asher, and Hunter 2007, Graph-
Bank1. But how exactly do these annotations compare?
In the illustrative example chosen and for the relation
types they agree on (Elaboration and Attribution), dif-
ferent annotation models and theoretical frameworks
invoke different numbers of instances of these relations
and assign the instances different arguments or differ-
ent scopes, at least on the surface. In this paper we de-
velop a method of comparing the scopes of relations in
different types of structures by developing a notion of
interpretation shared between different structures. This
interpretation specifies the set of possible scopes of re-
lations compatible with a given structure. This theoret-
ical work is important for furthering empirical research
on discourse. Discourse annotations are expensive. It
behooves researchers to use as much data as they can,
annotated in several formalisms, while pursuing pre-
diction or evaluation in their chosen theory. This paper
provides a theoretical basis to do this.
What a given structure expresses exactly is often not
clear; some discourse theories are not completely for-
malized or lack a worked out semantics. Neverthe-
less, in all of them rhetorical relations have semantic
consequences bearing on tasks like text summarization,
textual entailment, anaphora resolution, as well as the
temporal, spatial and thematic organization of a text
Hobbs, Stickel, and Martin 1993; Kehler 2002; Asher
1993; Lascarides and Asher 1993; Hobbs, Stickel, and
Martin 1993; Hitzeman, Moens, and Grover 1995, inter
alia. Theories like SDRT or Polanyi et al 2004 adopt a
conception of discourse structure as logical form. Dis-
course structures are like logical formulae and relations
1The Penn Discourse Treebank Prasad et al 2008 could
also be considered as a corpus with partial dependency struc-
tures.
2
function like logical operators on the meaning of their
arguments. Hence their exact scope has great semantic
impact on the phenomena we have mentioned, in ex-
actly the way the relative scope of quantifiers make a
great semantic difference in first order logic. By con-
centrating on exact meaning representations, however,
the syntax-semantics interface becomes quite complex:
as happens with quantifiers at the intra sentential level,
discourse relations might semantically require a scope
that is, at least a priori, not determined by syntactic
considerations alone and violates surface order (see s2).
Other theories like Polanyi?s Linguistic Discourse
Model (LDM) of Polanyi 1985; Polanyi and Scha 1984,
and DLTAG Webber et al 1999 explicitly adopt a
syntactic point of view, and RST with strongly con-
strained (tree-shaped) structures is subject to parsing
approaches duVerle and Prendinger 2009; Sagae 2009;
Subba and Di Eugenio 2009 that adhere to the syntac-
tic approach in adopting decoding strategies of syntac-
tic parsing. In such theories, discourse structure repre-
sentations, subject to syntactic constraints (e.g. domi-
nance of spans of text one over another) respect surface
order but do not always and unproblematically yield a
semantic interpretation that fits intuitions. According
to Marcu 1996, an RST tree is not by itself sufficient to
generate desired predictions; he employs the nuclearity
principle, NP, as an additional interpretation principle
on scopes of relations.
We focus on two theories: RST, which offers the
model for the annotations of the RST treebank Carl-
son, Marcu, and Okurowski 2002 and the Potsdam
commentary corpus Stede 2004, and on SDRT, which
counts several small corpora annotated with semantic
scopes, Discor Baldridge, Asher, and Hunter 2007 and
Annodis Afantenos et al 2012. We describe these the-
ories in section 2. We will also compare these two the-
ories to dependency tree representations of discourse
Muller et al 2012. Section 3 introduces a language for
describing semantics scopes of relations that is power-
ful enough to: i) compare the expressiveness (in terms
of what different scopes can be expressed) of the dif-
ferent formalisms considered; ii) give a formal target
language that will provide comparable interpretations
of the different structures at stake. Section 4 discusses
Marcu?s nuclearity principle and proposes an alterna-
tive way to interpret an RST tree as a set of different
possible scopes expressed in our language. Section 5
provides intertranslability results between the different
formalisms. Section 6 defines a measure of similarity
over discourse structures in different formalisms.
2 Discourse formalisms
These formalisms we introduce here all require the in-
put text to be segmented into elementary units (EDUs).
The definition of what an EDU is varies slightly with
the formalism, but roughly corresponds to the clause
level in RST, SDRT and other theories. We assume a
segmentation common to the different formalisms and
use examples with a non controversial and intuitive
segmentation.
Rhetorical Structure Theory (RST), the theory un-
derlying the RST-Treebank is the most used corpus for
discourse parsing, cf. duVerle and Prendinger 2009,
Subba and Di Eugenio 2009, inter alia.
In its Mann and Thompson 1987 formulation, RST
builds a descriptive tree for the discourse by the recur-
sive application of schemata in a bottom-up procedure.
Each schema application ideally reflects the most plau-
sible relation the writer intended between two contigu-
ous spans of text, as well as hierarchical information
about the arguments of the relation, distinguishing be-
tween nuclei as essential arguments of a relation and
satellites as more contingent parts. The set of RS Trees
is inductively defined as follows:
1- An EDU is a RS Tree.
2- if R is a nucleus-statellite relation symbol, s1 and
s2 are both RS Trees with contiguous spans (the left-
most leaf in s2 is textually located right after the right-
most one in s1), and ?a1, a2? ? {?N, S ?; ?S ,N?} then
R(t1 a1, t2 a2) is an RS Tree.
3- if R is a multinuclear relation symbol and
?s1, . . . , sn? are n RS Trees with contiguous spans then
R(s1 N, . . . , sn N) is an RS Tree.
Following Mann and Thompson 1987 a complete RS
tree makes explicit the content the author intended to
communicate. RS Trees are graphically represented
Marcu 1996 with intermediate nodes labelled with re-
lation names, leaves with symbols referring to EDUs,
and edges with nucleus/satellite distinctions.
Segmented Discourse Representation Theory
(SDRT), our second case-study theory, inherits a
framework from dynamic semantics and enriches
it with rhetorical relations. The set of SDRSs is
inductively defined as follows:
Assume a set of rhetorical relations R, distinguished
between coordinating and subordinating relations.
- Any EDU is an SDRS.
- Any Complex Discourse Unit (CDU) is a SDRS.
- a CDU is an acyclic labelled graph (A, E) where
every node is a discourse unit (DU) or SDRS and each
labelled edge is a discourse relation such that:
(i) every node is connected to some other node;
(ii) no two nodes are linked by subordinating and co-
ordinating relations,
(iii) given EDUs a1, . . . , an+1 in their textual order
that yield a CDU (A, E) = G, each EDU a j+1 j < n is
linked either: (a) to nodes on the right frontier of the
CDU G? a subgraph of G constructed from a1, . . . , a j;
or (b) to one or more nodes in G? = (A?,G?), a subgraph
of G, which linked to one or more nodes on the right
frontier of the graph G?, and where G? is constructed
from a subset of a j+2, . . . an.
The right frontier of a graph G consists of the nodes
a that are not the left arguments to any coordinating
relation and for which if any node b is linked to some
node dominating a, then there is a path of subordinating
3
relations from b to a.
A Segmented Discourse Representation Structure
(SDRS), is assigned a recursively computed meaning
in terms of context-change potential (relation between
pairs of ? world, assignation function ?) in the tradi-
tion of dynamic semantics. The semantics of a complex
constituent is compositionally defined from the seman-
tics of rhetorical relations and the interpretation of its
subconstituents. In the base case of an EDU, the se-
mantics is given in dynamic semantics.
We also consider dependency trees (DTs). Muller
et al 2012 derive DTs from the SDRSs of the ANN-
ODIS corpus to get a reduced search space, simplify-
ing automated discourse parsing. A DT is an SDRS
in which there are no CDUs and there is a unique arc
between any two nodes. Muller et al 2012 provide
a procedure from SDRSs to DTs, which we slightly
modify to respect the Frontier Contraint that they use.
? works in a bottom-up fashion replacing every CDU
X that is an argument of a rhetorical relation in ? by
their top-most immediate sub-constituent which do not
appear on the right of any relation in X, or distributing
the top relation when necessary to preserve projectivity.
To give a simple example: ?(R([R?(a, [R??(b, c)])], d)) =
?(R([R?(a, b) ? R??(b, c)], d)) = R(a, d) ? R?(a, b) ?
R??(b, c). (1) provides a more complicated example we
discuss in Section 6).
3 Describing the scope of relations
We provide here a language expressive and general
enough to express the structures of the 3 theories. All
our case-study theories involve structures described by
a list of rhetorical relations and their arguments. Two
things may vary: first, the nature of the arguments.
SDRT for instance, introduces complex constituents
as arguments of relations (e.g.
{
pi : Rsubord(b, c)
Rsubord(a, pi) ),
which finds a counterpart within RS Trees, where a
relation may directly appear as argument of another
(R(aN ,R(bN , cS )S )) but not within dependency trees.
Second, the set of constraints that restrict the possi-
ble lists of such relations can vary across theories (e.g.
right frontier, or requirement for a tree structure).
To deal with the first point above, we remark that
it suffices to list, for each instance of a discourse rela-
tion, the set of elementary constituents that belong to its
left and right scope in order to express the three kinds
of structures. We do this in a way that an isomorphic
structure can always be recovered. Models of our com-
mon language will be a list of relation instances and el-
ementary constituents, together with a set of predicates
stating what is in the scope of what. As for the second
point, we axiomatize each constraint in our common
language, thereby describing each of the 3 types of dis-
course structures as a theory in our language.
Our language contains only binary relations. Among
discourse formalisms, only RST makes serious (and
empirical) use of n?ary discourse relations. Neverthe-
less, such RST structures are expressible in our frame-
work, if we assume certain semantic equivalences.
RST allows for two cases of non-binary trees: (i) nu-
cleus with n satellites, each one linked to the nucleus
by some relation Rn. Such a structure is semantically
equivalent to the conjunction of n-binary relations Rn
between the nucleus and the nth satellite, which is ex-
pressible in our framework. (ii) RST also allows for n-
ary multinuclear relations such as List and Sequence. In
our understanding, multinuclear relations R(a1, . . . an),
essentially serve a purpose of expressiveness, and such
an n-ary tree is an equivalent to the split non-tree
shaped structure R(a1, a2) ? R(a2, a3) . . .R(a(n?1), an).
This seems clear for the Sequence relation, which
states that a1 . . . an are in temporal sequence and can
be equivalently formulated as ?each ai precedes ai+1?.
This might appear less obvious for the List relation.
The semantics (as it appears on the RST website http:
//www.sfu.ca/rst/) of this relation requires the ai to
be ?comparable?, and as far as this is a transitive prop-
erty, we can split the relation into a set of binary ones.
Formally, our scope language Lscopes is a fragment of
that of monadic second order logic with two sorts of in-
dividuals: relation instances (i), and elementary consti-
tuants (l). Below, we assume R is the set of all relation
names (elaboration, narration, justification, . . . ).
Definition 1 (Scoping language). Let S be the set {i, l}.
The set of primitive, disjoint types of Lscopes consists of
i, l and t (type of formulae). For each of the types in
S , we have a countable set of variable symbols Vi (Vl).
Two additional countable sets of variable symbols V?i,t?
and V?l,t? range over sets of individuals. These four sets
of variable symbols are pairwise disjoint.
The alphabet of our language is constituted by Vi, Vs,
a set of predicates, equality, connector and quantifier
symbols. The set of predicate symbols is as follows:
1) For each relation symbol r in R, LR is a unary
predicate of type ?i, t??i.e., LR : ?i, t? .
2) unary predicates, sub, coord and sub?1 : ?i, t?.
3) binary predicates ?l and ?r : ?i, l, t?.
4) two equality relations, =s : ?s, s, t? for s ? {i, l}.
Logical connectors, and quantifiers are as usual.
The sets of terms ?i,?l and ?t are recursively defined:
1. Vi ? ?i, Varl ? ?l. 2. For v ? Vs,t, v : ?s, t?. 3. For
each symbol ? of type ?u1, . . . , un? in the alphabet, for
all (t1, . . . , tn?1) ? ?u1?? ? ???un?1, ?[t1, . . . , tn?1] ? ?un .
?t is the set of well formed formulae of the scope lan-
guage.
The predicates ?l and ?r take a relation instance r of
type i and a elementary constituent x of type l as argu-
ments. Intuitively, they mean that x has to be included
in the left (for ?l) or right (for ?r) scope of r. For each
relation symbol R such as justification or elaboration,
the predicate LR takes a relation instance r has argu-
ment and states that r is an instance of the rhetorical re-
lation R. Predicates sub, coord and sub?1 apply to a re-
lation instance r, respectively specifying that r?s left ar-
gument hierarchically dominate its right argument, that
4
both are of equal hierarchical importance, or that the
left one is subordinate to the right one.
Definition 2 (Scope structure and Interpretation).
A scope structure is an Lscopes-structure M =
?Di,Dl, |.|M?. Di and Dl are disjoint sets of individu-
als for the sorts i and l respectively, and |.|M assigns to
each predicate symbol P of type ?u1, . . . , un, t? a func-
tion |.|P : Du1?? ? ??Dun 7? {0, 1}. Variables of type ?i, t?
are assigned subsets of Di and similarly for variables of
type ?l, t?, The predicates =i and =s are interpreted as
equality over Di and Dl respectively.
The interpretation ~?Mv of a formula ? ? ?S is the
standard interpretation of a monadic second order for-
mula w.r.t to a model and a valuation (interpretation of
first order quantifiers and connectors is as usual, quan-
tification over sets is over all sets of individuals). Va-
lidity |= also follows the standard definition.
These scope structures offer a common framework
for different discourse formalisms. Given one of the
three formalisms, we say that two structures S 1 and S 2
are equivalent iff there is an encoding from one struc-
ture into a scoped structure or set of scoped structures
and a decoding back from the scoped structure or set of
scoped structures into S 2
Fact 1. One can define two algorithms I and E such
that:
? from a given structure s which is a RS Tree, a
SDRS or a DT, I computes a scope structure I(s).
? given such a computed structure, E allow to re-
trieve the original structure s (E(I(s)) = s).
RST Encoding and Decoding To flesh out I and E
for RST, we need to define dominance. Set lArgs(r) =
{e ? Dl | (r, e) ? |?l|M}; rArgs(r) is defined analogously
(where ?r replaces ?l). The left and right dominance
relations vl and vr are defined as follows: r vl r? iff
(Args(r) ? lArgs(r?)).
- r vl r? ? ?z : l((z ?l r)? z ?r r))? z ?l r?) with r vr r?
defined analogously.
Dominance v is: v=vl ? vr.
- lArgs(r, X)??z : l(z ?l r) ? z ? X), with rArgs(r, X)
similar and
-Args(r, X)? ?z : l((z ?l r) ? z ?r r))? z ? X).
The NS, NN and NS schemes of RST will be re-
spectively encoded by the predicates sub, coord and
sub?1. We proceed recursively. If t is an EDU e, re-
turn Mt = ?Di = ?,Dl = {e}, ? where  is the inter-
pretation that assigns the empty set to each predicate
symbol. If the root of t is a binary node instantiating
a relation R(t1a1 , t2a2 ), let Tr ? {sub, coord, sub?1} bethe predicate that encodes the schema a1a2, let Mt1 =
?D1i ,D1l , |.|1? and Mt2 = ?D2i ,D2l , |.|2?. The algorithm re-turns Mt = ?D1i ? D2i ? {r},D1l ? D2l , |.|Mt ? where r is a?fresh? relation instance variable not in D1i or D2i , and
|.|Mt is updated in the appropriate fashion to reflect the
left and right arguments of r. Finally, if the root of t is
an n-ary node, split it into a sequence of binary relation
R1(t1, t2),R2(t2, t3), . . . , proceed to recursively compute
the scope-structures Mi for each of the relations using
2 (take care to introduce a ?fresh? relation instance in-
dividual for each relation of the sequence), then return
the union of the models Mi.
RST Decoding Given a finite scope structure M =
?Di,Dl, |.|M?, for each relation instance r compute the
left arguments of r and its right arguments. We then
identify L(r), the unique relation symbol R such that
r ? |LR|M. If that fails, the algorithm fails. Similarly
retrieve the right nuclearity schema from the adequate
predicate that applies to r. Then compute the domi-
nance relations for r. If the input structure M = I(t)
for some RS Tree t then there is at least one maximal
relation instance for the dominance relation. If t the
root node of t is a binary relation, there is exactly one
maximal element in the dominance relation. If there
is none, then we return fail. If there is exactly one,
recursively compute the two RS Trees obtained from
the models computed from the left and right arguments
and descendants of r. If there is more than one, the root
node of the encoded RS Tree was a n-ary relation and
one has to reconstruct the n-ary node if that is possi-
ble; if not the algorithm fails (but that means the input
structure was not obtained from a valid RS Tree).
SDRT Encoding and Decoding: This is similar to
the RST encoding and decoding; for the encoding al-
gorithm, we proceed recursively top down. A SDRS
s is a complex constituent that contents a graph g =
?V, E? whose edges are relations holding between sub-
constituents, simple or complex as well. First come
up with an encoding of the set E of all edges that
hold between two sub-constituents of s, i.e. a struc-
ture M = ?Di = Ei,Dl = V, {LR}, ?l, ?r?, where, for
each edge e ? Ei, LR encodes its relation type, and
?l1 and ?r1 consists of all the pairs (x, e) of left and
right nodes x of the edges e ? E. Finally, for each
complex immediate sub-constituent of s in Dl, update
M as follows: for c such a subconsituent, recursively
compute its encoding Mc, then add everything of Mc
to M, finally remove c from M but add instead for
each relation r scoping over c to the right (left), all
the pairs {(r, x) | x is a constituent in Mc}. The decod-
ing works again similarly to the one for RST, top-down
once again: one recursively retrieves immediate con-
tent of the current complex constituent at each level
then moves to inner constituents.
DT: Dependency trees are syntactically a special case
of SDRSs; there is only one CDU whose domain is
only EDUs.
The scope language allows us to axiomatize three
classes of scope structures corresponding to RS Trees,
SDRSs and DTs. Not every scope structure will yield
a RS Tree when fed to the RST decoding algorithm,
only those obtainable from encoding an RS tree. As not
all scope structures obey these axioms, our language is
5
strictly more expressive than any of these discourse for-
malisms.
As an example of an axiom, the following formula
expresses that a relation cannot have both left and right
scope over the same elementary constituent:
Strong Irreflexivity:
?r : i?x : l?(x ?l r ? x ?r r)) (A0)
Strong irreflexivity entails irreflexivity; a given relation
instance cannot have the same (complete) left and right
scopes. All discourse theories validate A0.
In the Appendix, we define left and right strong dom-
inance relations vl(r) as well as n-ary RS trees and
CDUs of SDRT. We exploit these facts in the Appendix
to express axioms (A1-A9) that axiomatize the struc-
tures corresponding to RST, SDRT and DTs. Axiom
A1 says that every discourse unit is linked via some dis-
course relation instance. Axiom A2 insures that all our
relation instances have the right number of arguments;
Axioms A3 and A4 ensure acyclicity and no crossing
dependencies. A5a and A5b restrict structures to a tree-
like dominance relation with a maximal dominating el-
ement, while A6 defines the Right Frontier constraint
for SDRT, and A7 fixes the domain for SDRT con-
straints on CDUs. A8 ensures that no coordinating and
subordinating relations have the same left and right ar-
guments, while A9 provide the restrictions needed to
define the set of DTs. We use the encoding and decod-
ing maps to show:
Fact 2.
1. The theory TRS T ={A0, A1, A2, A3, A4, A5a, A5b, A8}
characterizes RST structures in the sense that:
- E applied to any structure M such that M |= TRS T
yield an RST Tree.
- for any RST Tree t, I(t) |= TRS T .
2. The theory TS DRT ={A0, A1, A2, A3, A6, A7, A8}
similarly characterizes SDRSs.
3. The theory TDT =TS DRT ? {A9a, A9b} similarly
characterizes Dependency Trees structures.
4 Different Interpretations of Scope
The previous section defined the set of scope structures
as well as the means to import, and then retrieve, RS
trees, DTs, or SDRs into, and from, this set. Some of
these scope structures export both into RST and SDRT,
yielding a 1 ? 1 correspondence between a subset of
SDRT and RST structures. But what does this corre-
spondence actually tell us about these two structures?
In mathematics, the existence of an isomorphism relies
on a bijection that preserves structure. Our correspon-
dence preserves the immediate interpretation of the se-
mantic scopes of relations.
Immediate Interpretation Consider a scope struc-
tureM (validating A0, A1, A2). The predicates lArgs(r)
and rArgs(r) are the sets of all units in the left or right
scope of a relation instance r. Whether r, labelled by
relation name R holds of two discourse units or not
in M, depends on the semantic content of its left and
right arguments, recursively described by lArgs(r) and
all relations r? such that r? @l r, and rArgs(r) and all
relations r? such that r? @r r. Algorithm I computes
what we call the immediate interpretation of an input
structure. Intuitively, in this interpretation the semantic
scope of relations is directly read from the structures
themselves; a node R(t1, t2) in a RS Tree expresses that
R holds between contents expressed by the whole sub-
structures t1 and t2. Similarly, for SDRT and DTs, im-
mediate interpretation of an edge pi1 ?R pi2 is that R
holds between the whole content of pi1 and pi2.
While this immediate interpretation is standard in
SDRT, it is not in RST. Consider again (1) from the
introduction or:
(2) [In 1988, Kidder eked out a $ 46 mil-
lion profit,]31 [mainly because of severe cost
cutting.]32 [Its 1,400-member brokerage oper-
ation reported an estimated $ 5 million loss last
year,]33 [although Kidder expects to turn a profit
this year]34 (RST Treebank, wsj 0604).
(3) [Suzanne Sequin passed away Saturday at the
communal hospital of Bar-le-Duc,]3 [where she
had been admitted a month ago.]4 [. . . ] [Her fu-
neral will be held today at 10h30 at the church
of Saint-Etienne of Bar-le-Duc.]5 (annodis cor-
pus).
These examples involve what are called long distance
attachments. (2) involves a relation of contrast, or com-
parison between 31 and 33, but which does not involve
the contribution of 32 (the costs cutting of 1988). (3)
displays something comparable. A causal relation like
result, or at least a temporal narration holds between
3 and 5, but it should not scope over 4 if one does
not wish to make Sequin?s admission to the hospital
a month ago a consequence of her death last Saturday.
Finally in (1) C4 elaborates on C1, but not on the fact
that C1 is attributed to chief Garcia, so the correspond-
ing elaboration relation should not scope over C3.
It is impossible however, to account for long distance
attachment using the immediate interpretation of RST
trees. (2), for instance, also involves an explanation
relation between 31 and 32, which should include none
of 33 or 34 in its scope. Since 31 is in the scope of both
the explanation and the contrast relation, Axiom A5a of
the previous section entails than an RST tree involving
the two relations has to make one of the two relations
dominates the other.
Marcu?s Nuclearity Principle (NP) Marcu 1996 pro-
vides an alternative to the immediate interpretation and
captures some long distance attachments Danlos 2008;
Egg and Redeker 2010. According to the NP, a rela-
6
tion between two spans of text, expressed at a node of
a RS Tree should hold between the most salient parts
of these spans. Most salient part is recursively defined:
the most salient part of an elementary constituent is it-
self, for a multinuclear relation R(t1N , . . . , tkN) its most
salient part is the union of the most salient parts of the
ti2. Following Egg and Redeker 2010, the NP, or weak
NP is a constraint on which RST trees may correctly
characterize an input text; it is not a mechanism for
computing scopes. Given their analysis of (1) given in
the introduction, NP entails that Elab1 holds between
C1 and C4, accounting for the long distance attach-
ment, and that Attribution holds between C1 and C4
which meets intuition in this case. There is however no
requirement that Attribution do not hold between the
wider span [C1,C2] and C3, as there is no requirement
that Elab1 does not hold between [C1,C2,C3] and C4.
In order to accurately account for (1), the former must
be true and the latter false.
However, this interpretation of NP together with an
RST tree does not determine the semantic scope of all
relations. Danlos 2008 reformulates NP as a Mixed
Nuclearity Principle (MNP) that outputs determinate
scopes for a given structure. The MNP requires for a
given node, that the most salient parts of his daughters
furnish the exact semantic scope for the relation at that
node. The MNP transforms an RST tree t into a scope
structureMt, which validates A0 ? A3 but also A6.3, A7
and A8. HenceM could be exported back to SDRT and
the MNP would yield a translation from RST-trees to
SDRSs.
But when applied to the RST Treebank, the MNP
yields wrong, or at least incomplete, semantic scopes
for intuitively correct RS Trees. The mixed principle
applied to the tree of s1 gives the Attribution scope
over C1 only, but not C2, which is incorrect. Focus-
ing on the attribution relation which is the second most
frequent in the RST Treebank, we find out that, regard-
less of whether we assign Attribution?s arguments S
and N or N and S, this principle makes wrong predic-
tions 86% of the time in a random sampling of 50 cases
in which we have attributions with multi-clause second
argument spans. Consider the following example from
the RST Treebank:
(4) [Interprovincial Pipe Line Co. said]1 [it will de-
lay a proposed two-step, 830 million Canadian-
dollar [(US$705.6 million)]3 expansion of its
system]2 [because Canada?s output of crude oil
is shrinking.]4
Applied to the annotated RS Tree for this example (fig-
2Except for Sequence which only retains the most salient
part of tk
3That A6 is valid in the resulting model is not immediate.
Assume a multinuclear (coordinating) relation instance r has
scope over xn and xn+k later in the textual order. Then it is
impossible to attach with r? a later found constituent xn+k+l to
xn alone, for it would require that xn+1 escapes the scope of r?
from the MNP which it will not do by multinuclearity of r.
attribution
1
S
reason
restatement
2
N
3SN
5S
N
Figure 1: Annotated RST Tree for example (4).
ure 1), the MNP yields an incorrect scope of the attribu-
tion relation over 2 only, regardless of whether the at-
tribution is annotated N-S or S -N. The idea behind the
weak NP provides a better fit with intuitions. The prin-
ciple gives minimal semantic requirements for scoping
relations; everything beyond those requirements is left
underspecified. We formalize this as the relaxed Nu-
clearity Principle (RNP), which does not compute one
structure where each relation is given its exact scope,
but a set of such structures.
The target structures are not trees any more, but we
want them to still reflect the dominance information
present in the RS Tree. We therefore define a notion
of weak dominance over structures of the scoping lan-
guage: for two sets of constituents, X  Y iff X ? Y or
there is a subordinating relation whose left argument is
X and right one Y . Weak dominance is given by tran-
sitive closure ? of . For two relations, r ?l r? iff theleft argument of r weakly dominates both arguments
of r?. ?r is symmetrically defined. Finally, structures
computed by the RNP have to validate the weakened
version of A5: if two relations scope over the same el-
ementary constituent one has to weakly dominates the
other. Let AW5 denote this axiom.
Definition 3 (Relaxed Nuclearity Principle). One can
assign to an RS Tree t a formula of the scoping lan-
guage ?t = ?x??r??t ? ?t such that:
1? ?t is a formula specifying that all individuals
quantified in x? and r? are pairwise distinct, and that there
is no other individuals that the ones just mentioned. ?t
also specifies for each intermediate node n that the cor-
responding relation instance rn is labelled with the ad-
equate relation symbol R and relation type (subordinat-
ing if N-S . . . ).
2? ?t encodes the nuclearity principle applied to t:
for all intermediate nodes ni and n j in t such that nl is
the left (resp. right) daughter of ni, ?t specifies that ni
must scope to the left (resp. right) over the nucleus of
n j.
The interpretation ~t is defined as the set of struc-
turesM that validate ?t and A0, A1, A2, A3, AW5 (they allhave |t| individuals, as fixed by ?t). Moreover, it can
be shown that each model of this set validates TS DRT ;
so we have a interpretation of an RS-Tree into a set of
SDRSs.
5 Intertranslability between RST/DTs
DTs are a restriction of SDRSs to structures without
complex constituents. So the ? function of section 2
7
can transform distinct SDRSs transform into the same
DT with a consequent loss of information.
a?R1 pi
pi : b?R2 c | a?R1 b?R2 c |
pi?R2 b
pi : a?R1 b (1)
Each of the SDRSs above yields the same DT after sim-
plification, namely the second one a?R1 b?R2 c.
The natural interpretation of a DT g describes the
set of fully scoped SDRS structures that are compat-
ible with these minimal requirements, i.e that would
yield g by simplification. To get this set, every edge
r(x, y) in g, r, must be assigned left scope among the
descendants of x in g (and right scope among those of
y); this is a consequence of i) x and y being heads of the
left and right arguments of r and ii) the SDRSs that are
compatible with g do not admit relations with a right
argument in one constituent and a left one outside of it.
Definition 4. Assume that we map each node4 x of g
into a unique variable vx ? Vl and each edge e into a
unique variable symbol re ? Vi. Define x? and r? in an
analogous way as in definition 3.
For a given dependency tree g, we compute a for-
mula ?g = ?x??r? ?g ? ?g such that
? ?g is defined analogously as in definition 3, defin-
ing the set of relation instances and EDUs.
? ?g is the formula stating the minimal scopes for
each relation instance: for all edge in e = R(x, y)
in g, ?g entails i) re has vx in its left scope and
vy in its right scope and ii) let Des(x) be the set
of variable symbols for all the descendants of x in
g, ?g entails that if re has left scope over some vz
then vz is in Des(x) (symmetrically for y and right
scope).
The interpretation ~g of a DT is: {M | M |=
?g, A0-A3, A6, A7}. The DT a ?R1 b ?R2 c for in-
stance, is interpreted as a set of three structures iso-
morphic to the ones in (1) above.
We now relate DTs to RS Trees interpreted with the
RNP. To this aim, we focus on a restricted class of DTs,
those who involve i) coordinating chains of 3 edus or
more only if they involve a single coordinating relation:
x1 ?R1 x2 ?R2 ? ? ? ?Rn?1 xn may appear only for n >
2 if all the Ri are the same coordinating relation, and
ii) subordinating nests of 3 edus or more only if they
involve a single subordinating relation:
x
y1
R1
. . . yn
Rn
is allowed for n > 1 only if all Ri
are labelled with the same subor-
dinating relation.
This restricted class of DTs corresponds exactly with
the set of RS-Trees interpreted with the RNP, provided
that we restrict the interpretation of a DT in the fol-
lowing way: a principle called Continuing Discourse
Pattern, CDP Asher and Lascarides 2003 must apply,
4Recall that unlike RS Trees, DTs have EDUs as nodes
and relations as edges.
who states that whenever a sequence of coordinating
relation Ric originates as a node which appear to be
also in the right scope of a subordinating relation Rs,
Rs must totally include all the Ric in its right scope. A
second principle is required, who states that whenever
two subordinating relations R0s and R?s originate at the
same node in the DT, and the right argument of R?s is
located after the right argument of Rs, any structure in
the interpretation of the DT must verify R?s l Rs. The
translation needs these requirements to work, because:
i) with the NP a relation scoping over a multinuclear
one must includes all the nucleus in RST, and ii)a node
in a RS Tree cannot scope over something that is not its
descendant). Let CDP+ denote these requirements.
Using the restricted interpretation of a DT g;
~gCDP = {M | M |= A0-A3, A6, A7,CDP+}, we trans-
form an RS Tree t into a dependency graph G(t) such
that ~t = ~G(t)CDP:
Definition 5 (RS Trees to dependency graphs). The
translation G takes a RS Tree t as input and outputs
a pair ?G, n?, where G = ?Nodes, Edges? is the corre-
sponding dependency graph, and n an attachment point
used along the recursive definition of G.
? If t is an EDU x then (G)(t) = ?({x}, {}), x?.
? If t = R(t1N , t2S ) then let ?G1, n1? = G(t1) and
?G2, n2? = G(t2).
G(t) = ?(G1 ?G2 ? {Rsubord(n1, n2))}; n1?
? If t = R(t1S , t2N) then G(t) = G(R(t2N , t1S ))
? If t = R(t1N , . . . , tkN) (multinuclear), let ?Gi, ni? =
G(ti), let G be the result of adding a chain
n1 ?Rcoord ? ? ? ?Rcoord nk to the union of the Gi,
G(t) = ?G; n1?
? If t is a nuclear satellite relation with several satel-
lites R(t1S , . . . t jN , . . . tkS ), compute the Gi has inthe previous case, then add to the union of the Gi
the nest of k ? 1 subordinating relations R linking
n j to each of the ni, i , j.
Recall RS Tree (s1). Applying G to this tree yields
the dependency tree (s3): Elab1(C1,C2)?Attr(C1,C3)?
Elab2(C1,C4). ~s3 supports any reading of (s1) pro-
vided by RNP, but also an additional one where Attr
scopes over [C1,C2,C4]. This is however forbidden
by CDP+ for C4 is after C3 in the textual order but
Elab(C1,C4) l Attr(C1,C3).
6 Similarities and distances
The framework we have presented yields a notion of
similarity that applies to structures of different for-
malisms. To motivate our idea, recall example (1);
the structure in (s3) in which Attribution just scopes
over C1 differs from the intuitively correct interpreta-
tion only in that Attribution should also scope over C2
8
as in (s2), while a structure that does this but in which
C3 is in the scope of the Elaboration relation is intu-
itively further away from the correct interpretation.
Our similarity measure Sim over structures M1 and
M2 assumes a common set of elementary constituents
and a correspondence between relation types in the
structures. We measure similarity in terms of the
scopes given to the relations. The intuition, is that given
a map f from elements of relation instances inM1 re-
lation instances in M2, we achieve a similarity score
by counting for each relation instance r the number of
EDUs that are both in the left scope of one element of
r and in f (r), then divide this number by the total num-
ber of diffrents constituents in the left scope of r1 and
r2, and do the same for right scopes as well. The global
similarity is given by the correspondence which yields
the best score.
Given a relation r1 ? M1 and a relation r2?M2, let
?(r1, r2) =
{ 1 if r1 and r2 have the same label
0 otherwise . De-
fine Cl(r1, r2) = |{x : l | M1 |= x ?l r1 ?M2 |= x ?l r2}|,
the number of constituents over which r1 and r2 scope
and Dl(r1, r2) = |{x : l |M1 |= x ?l r1?M2 |= x ?l r2}|.
Define Cr and Dr analogously and assume thatM1 has
less relation instances thanM2. Let Inj(D1i ,D2i ) be theset of injections of relations instances of M1 to those
ofM2.
S im(M1,M2) = 12Max(|M1|, |M2|)?
Max
f?Inj(D1i ,D2i )
?
r:i
?(r, f (r)) ? ( Cl(r, f (r))Dl(r, f (r)) +
Cr(r, f (r))
Dr(r, f (r)) )
If M2 has more relation instances, Invert arguments
and use the definition above. If they have same number
of instances, both directions coincide.
d(M1,M2)=1 ? S im(M1,M2)
For a discourse structureM, S im(M,M) = 1; Sim
ranges between 1 and 0. d is a Jaccard-like met-
ric obeying symmetry, d(x, x) = 0 d(x, y) , 0 for
x , y, and the triangle equality. One can further define
the maximal or average similarity between any pair of
structures of two sets S 1 and S 2. This gives an idea
of the similarity between two underspecified interpre-
tations, such as the ones provided by RNP of section 4.
For example, the maximal similarity between (s2) in-
terpreted as itself (immediate interpretation) and a pos-
sible scope structure for the DT (s3), interpreted with
the underspecified ~ of section 5, is 7/12. It is pro-
vided by the interpretation of (s3) where Attr is given
left scope over C1,C2,C4, Elab1 holds between C1 and
C2, and the second Elab fails to match the continua-
tion of (s3). sim(~s2, ~?(s2) = 7/12 also, because
? must distribute [2, 4] in s2 to avoid crossing depen-
dencies; so ~?(s2)  ~s3. The maximal similarity
between the RS tree in (s1) with RNP (or equivalently,
(3) with ~CDP+) and (s2) is 19/36, achieved when both
C1 and C2 are left argument of Attr (though not C4).
With MNP, the similarity is 17/36.
Given our results in sections 4 and 5, we have:
Fact 3. (i) For any DT g without a > 3 length flat se-
quence and interpreted using CDP+, there an RS tree
t interpreted with RNP such that S im(g, t) = 1. (ii)
For any RS tree with RNP there is a DT g such that
S im(t, g) = 1.
To prove (i) construct a model using Definition 4 and
then use RST decoding. To prove (ii) construct a model
given Definition 3 and use DT encoding. Our similarity
measure provides general results for SDRSs and DTTs
(and a fortiori SDRSs and RS trees) (See Appendix).
7 Related Work
Our work shares a motivation with Blackburn, Gardent,
and Meyer-Viol 1993: Blackburn, Gardent, and Meyer-
Viol 1993 provides a modal logic framework for for-
malizing syntactic structures; we have used MSO and
our scope language to formalize discourse structures.
While many concepts of discourse structure admit of
a modal formalization, the fact that discourse relations
can have scope over multiple elementary nodes either
in their first or second argument makes an MSO treat-
ment more natural. Danlos 2008 compares RST, SDRT
and Directed Acyclic Graphs (DAGs) in terms of their
strong generative capacity in a study of structures and
examples involving 3 EDUS. We do not consider gen-
erative capacity, but we have given a generic and gen-
eral axiomatization of RST, SDRT and DT in a formal
interpreted language. We can translate any structure of
these theories into this language, independent of their
linguistic realization. We agree with Danlos that the
NP does not yield an accurate semantic representation
of some discourses. We agree with Egg and Redeker
2010 that the NP is rather a constraint on structures, and
we formalize this with the relaxed principle and show
how it furnishes a translation from RS trees to sets of
scoped structures. Danlos?s interesting correspondence
between restricted sets of RST trees, SDRSs and DAGs
assumes an already fixed scope-interpretation for each
kind of structure: SDRSs and DAGs are naturally in-
terpreted as themselves, and RS Trees are interpreted
with the mixed NP Our formalism allows us both to
describe the structures themselves and various ways of
computing alternate scopes for relations.
With regard to the discussion in Egg and Redeker
2008; Wolf and Gibson 2005 of tree vs. graph struc-
tures, we show exactly how tree based structures
like RST with or without the NP compare to graph
based formalisms like SDRT. We have not investigated
Graphbank here, but the scope language can axioma-
tize Graphbank (with A0-A3, A8).
8 Conclusions
We have investigated how to determine the semantic
scopes of discourse relations in various formalisms by
9
developing a canonical formalism that encodes scopes
of relations regardless of particular assumptions about
discourse structure. This provides a lingua franca for
comparing discourse formalisms and a way to measure
similarity between structures, which can help to com-
pare different annotations of a same text.
References
Afantenos, S. et al (2012). ?An empirical resource for
discovering cognitive principles of discourse organ-
isation: the ANNODIS corpus?. In: Proceedings of
LREC 2012. ELRA.
Asher, N. and A. Lascarides (2003). Logics of Conver-
sation. Cambridge University Press.
Asher, N. (1993). Reference to Abstract Objects in Dis-
course. Studies in Linguistics and Philosophy 50.
Dordrecht: Kluwer.
Baldridge, J., N. Asher, and J. Hunter (2007). ?Anno-
tation for and Robust Parsing of Discourse Structure
on Unrestricted Texts?. In: Zeitschrift fr Sprachwis-
senschaft 26, pp. 213?239.
Bateman, J. and K. J. Rondhuis (1997). ?Coherence re-
lations : Towards a general specification?. In: Dis-
course Processes 24.1, pp. 3?49.
Blackburn, P., C. Gardent, and W. Meyer-Viol (1993).
?Talking about Trees?. In: EACL 6, pp. 21?29.
Carlson, L., D. Marcu, and M. E. Okurowski (2002).
RST Discourse Treebank. Linguistic Data Consor-
tium, Philadelphia.
Danlos, L. (2008). ?Strong generative capacity of RST,
SDRT and discourse dependency DAGSs?. English.
In: Constraints in Discourse. Ed. by A. Benz and P.
Kuhnlein. Benjamins, pp. 69?95.
duVerle, D. and H. Prendinger (2009). ?A Novel Dis-
course Parser Based on Support Vector Machine
Classification?. In: Proceedings of ACL-IJCNLP
2009. ACL, pp. 665?673.
Egg, M. and G. Redeker (2008). ?Underspecified dis-
course representation?. In: PRAGMATICS AND BE-
YOND NEW SERIES 172, p. 117.
? (2010). ?How Complex is Discourse Structure?? In:
Proceedings of LREC?10. Ed. by N. Calzolari et al
ELRA.
Hitzeman, J., M. Moens, and C. Grover (1995). ?Algo-
rithms for Analyzing the Temporal Structure of Dis-
course?. In: Proceedings of the 7th Meeting of the
European Chapter of the Association for Computa-
tional Linguistics, pp. 253?260.
Hobbs, J. R., M. Stickel, and P. Martin (1993). ?In-
terpretation as Abduction?. In: Artificial Intelligence
63, pp. 69?142.
Kehler, A. (2002). Coherence, Reference and the The-
ory of Grammar. CSLI Publications.
Lascarides, A. and N. Asher (1993). ?Temporal In-
terpretation, Discourse Relations and Commonsense
Entailment?. In: Linguistics and Philosophy 16,
pp. 437?493.
Mann, W. C. and S. A. Thompson (1987). ?Rhetorical
Structure Theory: A Framework for the Analysis of
Texts?. In: International Pragmatics Association Pa-
pers in Pragmatics 1, pp. 79?105.
Marcu, D. (1996). ?Building up rhetorical structure
trees?. In: Proceedings of the thirteenth national
conference on Artificial intelligence - Volume 2.
AAAI?96. Portland, Oregon: AAAI Press, pp. 1069?
1074. isbn: 0-262-51091-X.
Muller, P. et al (2012). ?Constrained decoding for
text-level discourse parsing?. Anglais. In: COLING
- 24th International Conference on Computational
Linguistics. Mumbai, Inde.
Polanyi, L. (1985). ?A Theory of Discourse Structure
and Discourse Coherence?. In: Papers from the Gen-
eral Session at the 21st Regional Meeting of the
Chicago Linguistics Society. Ed. by P. D. K. W. H.
Eilfort and K. L. Peterson.
Polanyi, L. and R. Scha (1984). ?A Syntactic Ap-
proach to Discourse Semantics?. In: Proceedings of
the 10th International Conference on Computational
Linguistics (COLING84). Stanford, pp. 413?419.
Polanyi, L. et al (2004). ?A Rule Based Approach
to Discourse Parsing?. In: Proceedings of the 5th
SIGDIAL Workshop in Discourse and Dialogue,
pp. 108?117.
Prasad, R. et al (2008). ?The penn discourse tree-
bank 2.0?. In: Proceedings of the 6th International
Conference on Language Resources and Evaluation
(LREC 2008), p. 2961.
Sagae, K. (2009). ?Analysis of Discourse Structure
with Syntactic Dependencies and Data-Driven Shift-
Reduce Parsing?. In: Proceedings of IWPT?09. ACL,
pp. 81?84.
Sanders, T., W. Spooren, and L. Noordman (1992).
?Toward a taxonomy of coherence relations?. In:
Discourse processes 15.1, pp. 1?35.
Stede, M. (2004). ?The Potsdam Commentary Cor-
pus?. In: ACL 2004 Workshop on Discourse Annota-
tion. Ed. by B. Webber and D. K. Byron. Barcelona,
Spain: Association for Computational Linguistics,
pp. 96?102.
Subba, R. and B. Di Eugenio (2009). ?An effective Dis-
course Parser that uses Rich Linguistic Information?.
In: Proceedings of HLT-NAACL. ACL, pp. 566?574.
Webber, B. et al (1999). ?Discourse Relations: A
Structural and Presuppositional Account Using Lex-
icalised TAG?. In: Proceedings of the 37th ACL
Conference. College Park, Maryland, USA: Associ-
ation for Computational Linguistics, pp. 41?48. doi:
10.3115/1034678.1034695.
Wolf, F. and E. Gibson (2005). ?Representing Dis-
course Coherence: A Corpus Based Study?. In:
Computational Linguistics 31.2, pp. 249?287.
Appendix
In what follows, let @ denotes the irreflexive part of
v We assume that we have access to the textual order
10
of EDUs as a function f : EDUs ? N with an associ-
ated strict linear ordering < over EDUs. We also ap-
peal to the notion of a chain over EDUs {x1, x2, . . . xn}
with a set of relation instances r1, . . . , rn} all of which
are instances of an n-ary relation type, of the form
x1 ?r1 x2 ?r2 . . . ?rn xn which can be defined in
MSO. To handle RST relations with multiple satellites,
we define a nest: Nest(X,R) iff all r ? R have the same
left argument in X but take different right arguments in
X. Finally, we define CDUs:
cdu(X,R)? ?rArgs(r, X)?
?r? (?x x ?r r? ? x ? X)? r? ? R
Axiomatization
?x : l ?r : i (x ?l r) ? (x ?r r)
(A1:Weak Connectedness)
?r?x, y(x ?r r) ? y ?l r))
(A2 :Properness of the relation)
?X : (l, t)(X , 0? ?y?X ?n?y ?l n
(A3 :Acyclicity or Well Foundedness)
No crossing dependencies using the textual order < of
EDUs:
?x, y, z,w((x < y < z < w) ?
?m, n?(x ?l n ? z ?r n
? y ?l m ? w ?r m)) (A4)
Tree Structures. Define scopes(r, x) := x ?l r ? x ?r r.
?r, r? ((?(?X,R r, r? ? R ? chain(X,R) ? nest(X,R))
? (?x scopes(r, x) ? scopes(r?, x)))
? (r v r? ? r? v r))
(A5a)
?R : (i, t)?!r : i ?r? ? R r? v r (A5b)
Right Frontier:
?n, xn, xn+1?r ((xn+1 ?r r)? (xn ?l r) ? (?xn ?l r
? ?X,R(chain(X,R) ? ?r?(r? ? R? sub(r?))
? ?y ? X?z?k ?m, j ? R (scopes( j, y) ? acc(z, y)
? scopes(m, xn) ? z ?l k ? k ? ?xn+1)))) (A6)
(The definition of SDRS accessibility acc is easy)
CDUs or EDUs and no overlapping CDUs:
?!x : l ? ?X,R cdu(X,R)?
?X,Y,R,R? (cdu(X,R) ? cdu(Y,R?)?
(R ? R? , 0? (R ? R? ? R? ? R))
(A7)
The same arguments cannot be linked by subordinating
and coordinating relations. The formal axiom is evi-
dent.
Finally, two axioms for restricting SDRSs to depen-
dency trees:
?r?x, y((x ?l r) ? y ?l r))
? (x ?r r) ? y ?r r)))? x = y
(A9a : NoCDUs.)
?r?r??X,Y(lArgs(r, X) ? rArgs(r,Y)
? lArgs(r?, X) ? rArgs(r?,Y))
? r = r?
(A9b :unique arc)
We note that as a consequence of A5a and A5b we have
no danglers or contiguous spans:
?x, y, n (x ?l n ? y ?l n ? x , y)
? ??m?z (x ?l m ? z ?r m
? ?(z ?l n ? z ?r n))
We also note that A5a and A5b entail A7, A8 and A9b,
though not vice-versa.
Fact 4. Where ? is any SDRS and ? : S DRS ? DT as
in section 2, set R1 = {r : i : |{x : M? |= x ?l r)}| > 1},
R2 = {r : i : |{x : M? |= x ?r r)}| > 1}, and
R{x,y} = {r|?r? : i(x ?l r? ? y ?r r? ? r? , r}. Assume the
immediate interpretation of ? and ?(?):
S im(?, ?(?))=
2|I| ? |(R1 ? R2) ??x,y?D2l X{x,y}|
2|I|
+
1
2|I| {?r?R1
1
|x : M? |= x ?l r)}|
+?r?R2
1
|x : M? |= x ?r r)}| }
Explanation: We suppose that I is the number of re-
lation instances in the SDRS. ? removes CDUs in an
SDRS and attaches all incoming arcs to the CDUs to
the head of the CDU. It also removes multiple arcs
into any given node. So for any node m such that
|{r : m ?r r}| = a > 1, then the information contained
in the a ? 1 arcs will be lost. In addition ? will restrict
that one incoming arc that in the SDRS has in its scope
all the elements in the CDU to just the head. So the
scope information concerning all the other elements in
the CDU will be lost.
11
