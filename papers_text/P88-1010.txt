An Integrated Framework for Semantic and Pragmatic 
Interpretation 1 
Martha E. Pollack 
Artificial Intelligence Center 
SRI International 
333 Ravenswood Ave 
Menlo Park, CA 94025, USA 
Fernando C.N. Pereira 
Cambridge Computer Science Research Centre 
SRI International 
Suite 23, Millers Yard, Mill Lane 
Cambridge CB2 1RQ, England 
Abstract 
We report on a mechanism for semantic and prag- 
matic interpretation that has been designed to 
take advantage of the generally compositional na- 
ture of semantic analysis, without unduly con- 
straining the order in which pragmatic decisions 
are made. To achieve this goal, we introduce the 
idea of a conditional interpretation: one that de- 
pends upon a set of assumptions about subsequent 
pragmatic processing. Conditional interpretations 
are constructed compositionally according to a set 
of declaratively specified interpretation rules. The 
mechanism can handle a wide range of pragmatic 
phenomena and their interactions. 
1 In t roduct ion  
Compositional systems of semantic interpretation, 
while logically and computationally very attrac- 
tive \[6,20,26\], seem unable to cope with the fact 
that the syntactic form of aa utterance is not 
the only source of information about its mean- 
ing. Contextual information--information about 
the world and about the history of a discourse-- 
influences not only an utterance's meaning, but 
even its preferred syntactic analysis \[3,5,7,16\]. Of 
course, context also influences the interpretation 
(or meaning in context) of the utterance, in which, 
for example, referring expressions have been re- 
solved. 
One possible solution is to move to an integrated 
system of semantic and pragmatic interpretation, 
defined recursively on syntactic analyses that are 
1 This research as been funded by DARPA under Con- 
tract N00039-84-C-0524, and by a gift from the Systems 
Development Foundation as part of a coordinated research 
effort with the Center for the Study of Language and In- 
formation, Stanford University. We would like to thank 
David Israel, FLay Perrault, and Stuart Shieber for their 
helpful discussions regarding this work. 
neutral about those decisions that depend upon 
context. In this approach, a least-commitment 
grammar may be used to produce neutral repre- 
sentations that can be reconfigured later. Such 
a grammar might, for example, leave quantifiers 
in place \[30\], attach all prepositional phrases low 
and right \[22\], and bracket o the right all com- 
pound nominals. 2 These neutral analyses can then 
serve as input to a system that produces inter- 
pretations (and not meanings) in a nearly com- 
positional manner, in that the interpretation of a 
phrase a is a function of the interpretations of its 
syntactic onstituents ogether with its context of 
utterance. 
This model of semantic interpretation assumes 
that contextual information is available whenever 
it is needed for deciding among alternative inter- 
pretations. However, this is often not the case: 
questions about the interpretation of some con- 
stituent of an utterance might be answerable only 
when information about the interpretation ofsyn- 
tactically distant constituents becomes available. 
Familiar examples of this can be found, for in- 
stance, in sentences with quantifier scoping ambi- 
guities and in sentences that include intrasenten- 
tial anaphora. The so-called donkey sentences \[9\] 
exhibit both these phenomena. 
These difficulties do not necessitate a complete 
abandonment of compositionality. To take advan- 
tage of the generally compositional nature of se- 
mantic analysis without constraining unduly the 
order in which pragmatic decisions are made, 
we assign to phrases conditional interpretations, 
2Tllere are reasons to suspect hat ultinmtely syntactic 
analysis hould be incorporated into the same stage of pro- 
cessing as semantic and pragnuLtic analysis; in particular, it 
is difficult to develop syntactically neutral representations 
for certain constructions such as conjunction. 
3For simplicity, we shall use the term "phrase" to refer 
both to an entire utterance and to a constituent of an ut- 
terance, distinguishing betweeal the two only when needed. 
75 
which represent the dependence of a phrase's inter- 
pretation on assumptions about subsequent prag- 
matic processing. Conditional interpretations are 
built compositionally according to declaratively 
specified interpretation rules. 
The interpretation mechanism we discuss here 
has been implemented in Prolog as part of the 
Candide system, a multimodal tool for knowledge 
acquisition. Incorporating both a graphical inter- 
face and a processor for English discourse, Can- 
dide allows a user of the Procedural Reasoning 
System (PITS) \[10\] to build and maintain proce- 
dural networks in a natural way. Procedural net- 
works, an essential part of PRS's knowledge base, 
encode the information about procedures that is 
used by PItS for reasoning about and performing 
tasks in any given domain. The current version of 
Candide has been used to construct networks for 
malfunction procedures for NASA's space shuttle. 
Further details of the Candide system will be pre- 
sented elsewhere \[24\]. 
2 Condit ional  
Interpretat ions 
In our approach to semantic and pragmatic in- 
terpretation, conditional interpretations separate 
the context-independent aspects of an interpreta- 
tion from those that are context-dependent. Each 
conditional interpretation consists of a sense and 
a \[possibly empty\] set of assumptions. As a first 
approximation, one might think of the sense of a 
phrase as representing purely semantic informa- 
tion, that is, information that can be adduced 
solely from the linguistic ontent of the phrase, no 
matter in which context he phrase has been ut- 
tered. The assumptions then represent constraints 
relating the phrase's ense to its ultimate interpre- 
tation. A complete interpretation has an empty 
assumption set, indicating that all of its depen- 
dencies on context have been resolved. 
The present version of the theory allows for two 
kinds of assumptions. A bind assumption intro- 
duces a new parameter in an interpretation and 
places constraints on the binding of the parameter 
to individuals in the context. A restrict assump- 
tion does not introduce a new parameter, but in- 
stead further estricts the way in which an existing 
parameter can be bound. 
These concepts are illustrated by the following 
conditional interpretation f the sentence "The jet 
failed": 
\[\["The j t failed"\] = 
(fail(z), {bind(z, def, jet)}) (:) 
The first element of the interpretation is the sense 
fail(z), while the second is the set of assump- 
tions containing a single assumption whose infor- 
mal reading is that z should be bound to some- 
thing of the sort jet according to the constraints 
of definite reference. 
3 The Interpretat ion Pro- 
cess 
The process of semantic and pragmatic interpre- 
tation computes complete interpretations of sen- 
tences from least-commitment parse trees. Two 
types of rules govern the interpretation pro- 
cess: semantic.interpretation rules and pragmatic- 
discharge, rules. 
Semantic-interpretation rules specify the con- 
ditional interpretation of a phrase in terms of 
the conditional interpretations of its constituents. 
Compositionality is enforced by making semantic- 
interpretation rules sensitive only to the syntac- 
tic types of a phrase and its constituents, as well 
as to the types of assumptions in the conditional 
interpretations a sociated with the constituents; 
semantic-interpretation rules are not sensitive to 
the senses of the constituents. 
Pragmatic-discharge rules change the condi- 
tional interpretation fa phrase by specifying how 
assumptions in the conditional interpretation may 
be eliminated with respect o the context of utter- 
ance. For example, one discharge rule applies to 
assumptions constraining a parameter to be bound 
as a definite reference. This rule allows an assump- 
tion of the form bind(v, def, T) to be discharged, 
provided that there is a unique contextually avail- 
able entity of sort T. The effect of applying the 
definite discharge rule to an interpretation (S, A) 
is twofold: the bind assumption operated upon is 
removed from the set of assumptions A; the sense 
S is changed to reflect the binding. For instance, 
if the rule were applied to the interpretation i
(1), and if the context of utterance C contained a
unique available ntity j of sort jet, the resulting 
interpretation would be 
~fail(j),q~) (2) 
As we shall see in the next section, assumption dis- 
charge will in general not only make use of but also 
change the discourse context. Therefore, discharge 
rules should be viewed as four-place relations. For 
example, the following would be an instance of the 
76 
discharge relation: 
discharge(C, (fail(z), {bind(z, def, jet)}), 
(/air(j), ~), C'), 
where C is the discourse context before the as- 
sumption is discharged, while C I is the resulting 
discourse context. 
Semantic-interpretation rules are obligatory in 
that some semantic-interpretation rule associated 
with a given syntactic rule must be applied to any 
phrase analyzed by the syntactic rule. In contrast, 
the application of pragmatic-discharge rules is op- 
tional, although discharging a particular assump- 
tion too early or too late may lead to a dead end 
in the interpretation process. Applying the same 
discharge rule at different points in the interpreta- 
tion process for some utterance may lead to alter- 
native interpretations, as we shall illustrate with 
the examples in Sections 6 and 7. 
Given a sentence and its syntactic analy- 
sis, the interpretation process applies semantic- 
interpretation and pragmatic-discharge rules, ac- 
cording to their applicability conditions, to con- 
struct the derivation of a complete interpretation 
of the sentence. In Candide, this process resem- 
bles a syntax-directed translation system \[1\]. In- 
terpretation starts at the root node of the anal- 
ysis tree. For each node of the tree, the inter- 
pretation process selects an appropriate semantic- 
interpretation rule and calls itself recursively for 
each of the node's daughters. Interpretations are 
constructed on return from the recursion, and 
pragmatic-discharge rules are optionally applied 
in a discharge cycle that follows each application 
to a node of a semantic-interpretation rule. 
Lexical ambiguity, multiple semantic-interpre- 
tation rules for a given syntactic onstruction, op- 
tional application of discharge rules, and alter- 
native ways of discharging a given assumption. 
are all sources of nondeterrninism in the interpre- 
tation process, which need to be somehow con- 
trolled. In Candide, we adopted four simple con- 
trol tactics: overall depth-first search, early dis- 
charge of assumptions, breadth-first earch for al- 
ternative bindings of a discharged parameter, and 
bounds on assumption percolation wherever it can 
be shown that an assumption would not be dis- 
chargeable outside a certain syntactic domain. For 
lack of space, a fuller discussion of these heuristics 
will be conducted elsewhere \[24\]. 
4 The  D iscourse  Context  
Pragmatic-discharge rules need access to a dis- 
course context hat encodes information about rel- 
evant world knowledge and the discourse history. 
Although our framework for semantic and prag- 
matic interpretation can accommodate alternative 
representations of the discourse context, the spe- 
cific discharge rules we have written and incorpo- 
rated into the Candide system rely on a particular 
representation comprising four parts: immediate 
con~ez4, local contez~, global contezt, and a knowl- 
edge base. 
During the analysis of a sentence, the immediate 
context contains detailed information about the 
entities referred to in that sentence; it is used pri- 
marily for resolving intrasentential anaphora. The 
local context generally contains detailed informa- 
tion about the immediately preceding sentence, 4 
while the global context includes somewhat less 
detailed information about entities referred to 
throughout longer stretches of the discourse. We 
use the local context primarily for pronoun resolu- 
tion, following the theory of centering introduced 
by Grosz et aL\[12\]. The global context is employed 
primarily for the resolution of definite anaphora, 
and is structured as a stack to make use of the 
theory of focusing. Each element of the global- 
context stack is itself a list of entries containing 
information about the entities referred to in a dis- 
course segment \[13\]. We refer to the top element 
of the global context as the intermediate contezt. 
Individual discharge rules used in processing a
sentence can extend the immediate context for 
that sentence. For instance, the rule mentioned 
earlier that binds a parameter as a definite refer- 
ence acids to the irmnediate context an entry for 
the entity to which the parameter isbound. When 
the assumption in (1) is discharged, resulting in 
the interpretation i (2), an entry for j must be 
added to the immediate context. The entry will 
include the sort of j (jet) and the surface position 
of that phrase in the sentence (subject). 
The discourse context must also be updated af- 
ter each sentence has been processed. In the sim- 
plest case, tile update will be quite straightfor- 
ward, as illustrated in Figure 1: the current im- 
mediate context will become the new local con- 
text, while a subset of the information encoded in 
the immediate context will be also added to the 
intermediate context (the topmost element of the 
global-context s ack). The immediate context will 
4This will not be true when a "pop" of the global context  
has just  occurred \[13\]. 
77 
Discourse context 
Immediate context J 
Local context J 
Intermediate context 
LC I . I~  LCI J 
DS. 
DS~ 
-,~LC H 
DS. 
. .  
DS~ 
Know e00e o I K8 I 
i-1 
Figure 1: Updating the Discourse Context 
be cleared in preparation for the next sentence. 
For the moment, we shall assume that the knowl- 
edge base is static, although it will ultimately have 
to be reorganizable dynamically so as to reflect a 
language user's current perspective. 
In fact, the update function can be rather more 
complex. For example, if the current utterance is 
recognized to be the start of a subordinate dis- 
course segment, a new, empty element can be 
pushed onto the global-context s ack after the lo- 
cal context has been merged into the previous top 
element. We shall discuss the discourse-context 
update function further elsewhere \[24\]. 
5 A Simple Discourse 
The following simple discourse will provide our 
first illustration of the interpretation mechanism 
and, in particular, the treatment of reference and 
coreference: 
The jet failed. (3) 
Close the manifold. 
In the subsequent sections, we shall turn to more 
complex examples that provide further insight into 
the way in which pragmatic processes can interact 
with one another affecting syntactic and semantic 
decisions. 
The three semantic-interpretation rules given in 
Figure 2 are needed in the example. Recall that 
the interpretation process is driven by semantic- 
interpretation rules, which apply compositionaUy 
to phrases. Each such rule has three parts: an ap- 
plicability condition (AC), a set of selection f~nc- 
tions (SF), and a condflionai-interpretation fu c. 
tion (CIF). The applicability condition specifies 
the syntactic type of phrase to which the seman- 
tic interpretation rule applies; it is stated in terms 
of a predicate on trees. 5 The selection func- 
tions specify how to access the constituents of the 
phrase to which the rule is to he applied. Fi- 
nally, the conditional-interpretation fu ction de- 
fines the conditional interpretation of the phrase 
as a function of the conditional interpretations 
of its constituents. A conditional-interpretation 
function will often depend separately on the sense 
and assumptions of a conditional interpretation I, 
for which we use the notations Is and IA, respec- 
tively. 
Figure 3 shows an annotated tree  represent- 
5The meanings of the predicates on trees used in this 
paper should be clear from their names. 
eOur analysis trees are closer to the functional s t ruc -  
78 
r (fail0). ?) 
1 (fai/(a), {bind(a, argl, device), restrict(argl,  fl}) 
2 (fail(a). {bind(a, argl, device)}> ? 
I failed 3 (b, {bind(b, def, jet)}) 
4 the 5 qet, 0) 
iet 
Figure 3: Interpretation of "The jet failed" 
\ [ iv-c lause\] :  
AC: intrans-verb-clause(T ) 
SF: pred(T) = V, argl(T) = A 
CIF: IT\] = (~VIs, \[VIA U \[A\]AU 
{restrict(argl, =, \[A\]s) }) 
\[def-np\]: 
AC: def-np(T) 
SF: argl(T) = N 
CIF: \[~I = (z, \[N\]A U {bind(z, def,\[N\]s)}) 
\[lex\]: 
AC: lex-ltem(T) 
SF: wordstem(T) = W 
CIF: I T \ ]=  Iw 
Figure 2: Semantic-Interpretation Rules I 
ing the derivation of a complete interpretation of
the first sentence in (3). Conditional interpreta- 
tions of constituents of the complete sentence are 
shown above the root nodes of the corresponding 
subtrees. 
Semantic-interpretation rule\[lex\] applies to lex- 
ical subtrees (Nodes 2 and 5 in Figure 3 ~) associ- 
tures of lexlcal-functional grammar \[4\] than to the usual 
surface const ituent s t ruc ture .  The sample analyses have 
been extrsmely simplified for expesitory reasons; terminal 
nodes, in particular, appear in the trees simply as the corre- 
sponding word, but  their actual representation, asrequired 
by interpretation rule \[lex\], has  two branches: wordstem for 
the actual root form of the terminal, cat for its syntactic 
category. Finally, tree nodes relevant o the discussion are 
numbered for ease of reference. 
7Node 4 is also lexical, but defudte determiners con- 
tribute only to the interpretation of their mother  noun 
ating with each wordstem W conditional interpre- 
tations Iw according to the lexicon. The lexical 
entries relevant o the current discussion are: 
/jet = (jet, ?) 
/fail = (fail(z), {bind(z, argl, device)}) 
In the conditional interpretation of a common 
noun, the sense is always a sort term. The assump- 
tion set may be empty, as it is for ~jet" above, but 
for a relational noun it will contain hind assump- 
tions for the relation's arguments, binding param- 
eters occurring in the sort term. 
The lexical entries for verbs and the structural 
rules that combine a verb with its subject and 
complements must refer, through assumptions, to 
the grammatical functions that provide the argu- 
ments of the predicates that represent the senses of 
verbs (roughly the govcrnable grammatical func- 
tions of lexical-functional grammar \[4,27\]). Since 
we are not defending any particular theory of 
grammar in this paper, we shall skirt a theoretical 
and terminological minefield by naming the gram- 
matical functions relevant to our purposes argi 
for i = 1, . . . ,  n, and calling them simply "argu- 
ments." Arguments are used as edge labels in our 
analyses, as well as in bind and restrict assump- 
tions, and their intended interpretation should be 
clear from the examples we are discussing. 
The encoding of selectional restrictions is illus- 
trated here in the conditional interpretation of the 
verb "fail," which is fail(z), under the assumption 
that z must be bound as first argument of the 
verb to something of the sort device. This inter- 
phrase, by rule \[def-np\], rather than being given a sepa- 
rate interpretation. 
79 
pretation effectively encodes the information that 
things that fail are devices,  
Because the local tree rooted at Node 3 repre- 
sents a definite noun phrase, rule \[def-np\] applies 
to it in a straightforward fashion, yielding the con- 
ditional interpretation 
(b, (bind(b, def, jet)}) (4) 
That is, "the jet" is interpreted as b under the as- 
sumption that b can be bound in accordance with 
the constraints of definite reference to an entity of 
sort jet. 
As mentioned earlier, a pragmatic-discharge 
rule may be used whenever it is applicable to some 
conditional interpretation i context. In the cur- 
rent example, the rule for discharging the bind as- 
sumption is applicable to the conditional interpre- 
tation in (4), and it is actually used in the deriva- 
tion to determine a referent for the definite noun 
phrase. 
The process of resolving a definite reference is 
of course quite complex \[5,11,28,29\], and the rule 
that discharges assumptions to bind a parameter 
as a definite reference must reflect this complex- 
ity. For the moment, let us assume that there is 
only one entity of the correct sort available for def- 
inite reference (perhaps introduced in a preceding 
portion of the discourse): the jet identified as j. 
The pragmatic discharge rule can thus bind the 
parameter b to j ,  extend the immediate context 
accordingly, and delete the bind assumption from 
the list of assumptions in the current conditional 
interpretation. The resulting conditional interpre- 
tation of the string "the jet" is (j, ~b), shown in 
Figure 3 above Node 3 ~. 
Finally, consider the interpretation of the whole 
sentence. Rule \[iv-clause\] applies to the parse tree 
for the sentence, specifying that its sense is the 
sense of the predicate (pred) constituent, namely 
fail(a), and that its set of assumptions is the 
union of (i) the assumptions from its predicate 
constituent, (ii) the assumptions from its argu- 
ment (argl) constituent, and (iii) the new assump- 
tion restrict(argl, =, j), where j is the sense of the 
argument constituent. The restrict assumption, 
which arises from the sentence's syntactic form, 
applies to whatever parameter is to be bound as 
the first argument of the sense of the sentenc~ in 
STile conditional interpretation shown above Node 2 in 
the figure has a new parameter, Q, substituted for the vari- 
able z of the lexical entry because parameters introduced 
through bind assumptions in distinct appllcAtious of seman- 
tic interpretation-rules in a derivation must be themselves 
distinct. 
this case, a, as specified by the bind assumption 
inherited from the predicate constituent. The re- 
strict assumption further constrains the binding 
of this parameter by requiring that it be equated 
with the entity j. 
The interpretation process is completed after 
the two remaining assumptions are discharged, as 
indicated at the top of Figure 3. 9 They can be 
discharged successfully in parallel: binding a to j 
is legitimate because j is a jet, and jet is a subsort 
of device. Before the next sentence is processed 
the discourse context needs to be updated, as de- 
scribed earlier. 
The second sentence of our example is "Close 
the manifold"; we shall be concerned primarily 
with the way in which the reference resolution 
problem is handled. The conditional interpreta- 
tion for the definite noun phrase "the manifold" 
is 
(c, {bind(c, def, manifold)}) (5) 
Discharging the bind assumption here requires the 
use not only of world knowledge - -  namely, that 
each jet is attached to one and only one manifold 
- -  but also of knowledge of the discourse history-- 
namely that there is a single salient jet in context, 
the one identifed as j. The latter information can 
be derived from the discourse context, while the 
former must be encoded in the knowledge base. 
This information is sufficient to resolve the ref- 
erence in the sentence under consideration: "the 
manifold" refers to the manifold that is attached 
to j. Hence the interpretation we derive from (5) 
is 
(,.,+,), CO) 
where m is the unique manifold attached to jet j. 
For use in constraining subsequent reference, the 
discourse context must be updated with the infor- 
mation that m has the restricted sort : manifold I
Az.attached-~o(z,j), where sip is the subsort of s 
whose elements atisfy property P. 
9In the Candide system as it currently exists, a bind 
assumption encoding a selectlonal restriction and a restrict 
assumption encoding the filler of an argument must be dis- 
charged as soon as the latter has been is introduced; oth- 
erwise an erroneous interpretation might he derived if the 
restrict asmarnption is mistakenly applied at a higher clause 
node. A better scheme would encode sufficient inforn~tion 
in these restrict assumptions to ensure that they could ap- 
ply only to the appropriate clause. 
80 
6 Quant i f ie r  Scope  
We shall now turn to the kind of interactions in 
pragmatic processing that challenge compositional 
systems. In this section we shall discuss an exam- 
ple of quantifier scope ambiguity; following that, 
we shall give an example of our analysis of donkey 
sentences, involving interactions between quanti- 
fier scoping and reference resolution. 
The following sentence illustrates the quantifier 
scoping problem in its simplest form: 
Every driver controls a jet. (7) 
This sentence might be given either a wide-scope 
existential (3V) interpretation, in which all the 
drivers control the same jet, or a narrow-scope ex- 
istential (V3) interpretation, in which each driver 
controls its own, possibly different, jet. 
\[tv-clause\]: 
AC: trans-verb-clause(T) 
SF: pred(T) = V, argl(T) = A1, arg2 = A2 
CIF: \[T\] = (IV\]s, 
\[vh u \[A~h u \[AZ\]AU 
{restrlct(argl,--, \[A1\]s), 
restrlct(arg2, = \[A2\]s)}) 
\[gen-quant\]: 
AC: gen-quant(T) 
SF: pred(T) = Q, argl(T) = N 
ClF: IT\] = (x, \[N\]Au{bind(z, \[Q\]s, \[NIs)}) 
\[indef-np\]: 
AC: indef-np(T) 
SF: argl(T) = N 
CIF: \[T\] = (z, \[N\]AU{bind(z, indef, IN\]s)}) 
Figure 4: Semantic-Interpretation Rules II 
Interpreting (7) requires additional rules of se- 
mantic interpretation, shown in Figure 4, and the 
lexical entry 
/control = 
( co,,~rols( z, y ), 
{bind(z, argl, device), 
bind(y, arg2, device)}) 
Derivations of the 3V and the V'~ interpretations 
are shown in Figures 5 and 6, respectively. 
In both derivations, the general noun phrase 
"every driver" is interpreted at Node 2 by rule 
\[gen-quant\] and the indefinite noun phrase "a jet" 
is interpreted at Node 1 by rule \[indef-np\]. How- 
ever, the two derivations differ as to where the 
indefinite-reference assumption is discharged. In 
Figure 5 the assumption isdischarged immediately 
after its introduction. The resulting sense is a new 
entity j of sort jet. The same 3V reading could 
also be derived by allowing the indefinite-reference 
assumption to percolate up to Node 3, but then 
discharging it before the generalized quantifier as- 
sumption. In either case, the immediate context 
is updated at the time of the discharge with an 
entry for the new entity j. 
Somewhat more interesting is the derivation of 
the ~ reading, shown in Figure 6. The indefinite- 
reference assumption is allowed to percolate to 
Node 3, where the generalized-quantifier assump- 
tion is discharged. This discharge applies a quan- 
tifier to its scope, but it also selects some sub- 
set of the outstanding indefinite-reference assump- 
tions in the current conditional interpretation a d 
discharges them, by existential quantification of 
the respective parameters, within the scope of the 
generalized quantifier. In our example, the rule 
converts the conditional interpretation 
( con~rots( a, b ), 
{bind(a,V, driver), bind(b, indef, je0} )
into the completed interpretation 
{Ya : driver 3b :jet controls(a, b), qb) 
? 7 A Donkey  Sentence  
We can now discuss the more complicated inter- 
actions between assumptions occurring in donkey 
sentences. Our example will be the sentence: 
Every driver controlling a jet closes it. (8) 
Clearly, this sentence has an interpretation i  
which, for every driver controlling ajet, the driver 
closes the jet. However, it is difficult to see how 
this interpretation can be derived compositionally. 
The weU-recognized problem is that, in the in- 
tended reading, the indefinite noun phrase % jet" 
has narrower scope than the determiner "every," 
forcing its interpretation to be part of the sort 
term translating the nominal "driver controlling 
a jet." But this means that the interpretation of
the pronoun "it" will be outside the scope of the 
indefinite "a jet." 
Our solution to the problem of interpreting don- 
key sentences involves two new mechanisms: cap- 
ture rules that allow the quantifier in a general 
81 
(mnuv/s(x, y), 
{bind(x, argl, d~/ce), 
bind(y, arg2, d~/ce)}) 
controls 
(V~r.arriver ~mrols(~ D. ~) 
(controls(a, j), {bind(a, V, driver)}) 
? 
3 
2 (a, {bind(a, V, driver)l) I (b, {bind(b, indef, jet)}) 
p r~arg l~ pred/argl~ 
every driver a jet 
Figure 5: ~ Interpretation 
(mntro/s(x, y), 
{bind(x, argl, dev/ce), 
bind(y, arg2. d~/m)}) 
controls 
(Va~river 3b:jet controls(a, b), ~) 
(controls(a, b ), {bind(,*, V, driver), bind(b, indof, jet)}) 
? 
3 
1 (b, {bind(b, indef, jet)}) 
a jet 
2 (a, {bind(a, V, driver)}) or./o\ 
every driver 
Figure 6: V'~ Interpretation 
noun phrase to discharge in a particular way bind 
assumptions derived from singular noun phrases 
occurring in the general noun phrase, and a pro- 
noun resolution rule that discharges a pronoun- 
introduced bind assumption by replacing the as- 
sumption's parameter with the parameter bound 
by the assumption for a possible antecedent of the 
pronoun. 
Figure 7 shows a simplified derivation of an 
interpretation of sentence (8), with some of the 
less interesting assumptions discharged immedi- 
ately after their introduction rather than being 
listed explicitly. Before discussing the main points 
of this example we need to explain our somewhat 
nonstandard representation of \[reduced\] relative 
clauses, as in the compound nominal "driver con- 
trolling a jet" (Node 2). A relative clause is rep- 
resented as a main clause but has one of its argu- 
ment positions filled by a nominal (the head noun 
modified by tile relative clause) instead of a noun 
phrase. The discharge rule discussed in Section 5 
that combines a verb argument with its filler then 
has two versions: one in which the filler sense is 
an entity, already described, and one in which the 
filler sense is a sort. In the latter case, the rule 
produces an interpretation whose sense is the filler 
sort restricted by the sense of the clause. In the 
foregoing example, the sort-filler discharge rule is 
applied to the interpretation 
( controis( z,  b ), 
? {bind(z, argl, device), 
restrict(argl, --, driver), 
bind(b, indef', jet)}) 
82 
4'"  (Vb;jet 'Ca : (dr/verl Zx.conwols(x, b)) closes(a, b), ~b) 
? 
4"" CCa : (driver Ikx.conwols(x, b )) closes(a, b ), {bind(b, V, jet)I) 
4' (Va : (driver IZx.controls(x, b )) closes(a, c), {bind(b, V, jet), 
bind(c, pron, neuter)}) 
? 
4 (closes(a, c), {bind(a, V, driver l~x.controlxOc, b), {bind(b, indef, jet)}), 
bind(c, pron. neuter)}) 
closes argl (c. {bind(c. pron. neuter)}) 
i t  
3 (a, {bind(a, V, driver I~.controls(x, b), {bind(b, Indef, jet)})}) 
every 2 (driver I ~.x.contro ls(x, b ), {bind(b, indef, jet)I) 
controls driver 1 (b, {bind(b, indef, jet)}) 
a jet 
Figure 7: Interpretat ion of a Donkey Sentence 
to produce the restricted sort 
( driveflAx.controls( z, b ), {bind(b, indef, jet)}) 
After these preliminaries, we can go on to the 
main point of the example. The first observation 
to make is that the sentence has an alternative 
(albeit  unlikely) interpretat ion i which "a jet" is 
taken to refer to a specific jet  that every driver 
controls. This interpretat ion would be derived by 
discharging the corresponding indefinite-reference 
assumption at Nodes 1 or 2 in the derivation. 1? 
We shall assume that this is not done, and that the 
indefinite-reference assumption is therefore avail- 
able at Node 3. 
So far bind assumptions have been given as 
triples of a parameter, a binding criterion (derived 
from a determiner), and a sort restriction for the 
parameter.  In fact, a fourth component of depen- 
10 A third interpretation is also possible, in which "a jet" 
is interpreted asa narrow-scope (no nreferential) existential, 
and "it" is interpreted as having an extrasentential refer- 
ent. Limitations in Candide's handling of nonreferential 
indefinites preclude this reading, but a somew|mt different 
rule system will generate all three readings correctly \[23\]. 
dencies is in general required, a set of other as- 
sumptions that the given assumption may depend 
on. 11 An assumption a (the dependent assump- 
tion) depends on another assumption ~ (the inde- 
pendent assumption) whenever the parameter for 
\]~ occurs in the sort constraint of ~. For the lan- 
guage fragment under discussion, a would be the 
bind assumption for a complex noun phrase and 
the bind assumption for a noun phrase within a 
preposit ional phrase or relative clause in the com- 
plex noun phrase. For correct binding of quanti- 
fied parameters, emantic interpretation and dis- 
charge rules must maintain the invariant hat as- 
sumptions on which a given assumption depends 
can occur only in its set of dependencies. Con- 
sequently, whenever a dependent assumption c~ 
is introduced any other assumption on which it 
depends must be moved into <~'s dependencies, 
thereby becoming inaccessible to discharge rules. 
If a is later discharged, the assumptions in its set 
of dependencies again become accessible to dis- 
11In the examples so far this set  has been empty and 
therefore omitted for the sake of clarity. 
83 
charge rules. Semantic interpretation must be 
modified to fit this analysis. For instance, rule 
\[gen-quant\], given earlier, should be instead 
\[gen-quant'\]: 
AC: gen-quant(T) 
SF: pred(T) -- Q, argl(T} -- N 
CIF: \[T\] = (z, {bind(z, \[Q\]s, \[N\]s, IN\]A)}) 
In Figure 7, this rule is applied at Node 3. 
Capture may occur whenever a generalized- 
quantifier assumption with a nonempty set of de- 
pendencies D is discharged. Any indefinite as- 
sumption in D may be captured by turning it into 
a universal-quantification assumption and putting 
it into the set of assumptions for the new con- 
ditional interpretation. In our example, the in- 
definite assumption for "a jet" is captured in the 
discharge of the universal assumption for "every 
driver...", from Node 4 to Node 4' in the deriva- 
tion. The resulting assumption is now Universal. 
If this assumption were discharged immediately, 
there would be no way of discharging the pronoun 
assumption as an intrasentential naphoric refer- 
ence. Instead the pronoun resolution rule is ap- 
plied to discharge the pronoun assumption, caus- 
ing identification of the pronoun parameter c with 
the jet parameter b. The resulting conditional in- 
terpretation is 4". Finally, the remaining assump- 
tion can be discharged by quantification leading 
to the complete interpretation at Node 4 ~a. 
The example shows how assumptions allow in- 
teractions between reference and quantification to 
be left unresolved until all the necessary informa- 
tion becomes available. Early discharge of the 
assumption for "a driver" blocks the desired in- 
terpretation for the pronoun "it"; capture makes 
available the attributive use of "a driver ~" at an ap- 
propriate point for its identification with the direct 
object of "close." 
8 Re la ted  Research  
Strictly compositional pproaches to semantic in- 
terpretation, such as Montague grammar \[19\], 
have so far proved inadequate for dealing with 
interactions between meaning and context; rea- 
sons for this are noted in Section 1. Our ap- 
proach can be thought of as a generalization of 
the compositional mechanism of Cooper storage 
\[6\], or of its computational nalogue developed by 
Woods \[30\]. Alternative approaches that attempt 
to address these interactions include discourse- 
representation theory (DRT) \[14,18\] and Barwise's 
partial-valuation approach \[2\]. 
In DRT, the interpretation of a sentence is 
derived in a compositional manner from an 
intermediate representation called a discourse- 
representation structure (DRS). Itowever, the 
rules that have been developed for constructing 
DRSs are not themselves compositional. Accord- 
ing to the DRS-construction rules presented by 
Kamp \[18\], the DRS for a phrase is found only as 
a by-product of finding the DRS for the embed- 
ding discourse. In particular, DRS-construction 
rules apply only after the relative scope of noun 
phrases and anaphoric bindings have been deter- 
mined. It is conceivable that our notion of con- 
ditional interpretation might be reexpressible in
DRT terms, leading to a compositional system for 
DRS construction. 
Barwise \[2\] uses the notion of partial valuation, 
that is, partial assignments of values to variables, 
to analyze the sorts of interactions exemplified by 
the donkey sentences. Similar comments apply to 
Webber's work \[29\]. In addition, none of the afore- 
mentioned accounts has been concerned with as 
wide a range of phenomena s is currently haw 
died in Candide. 12 One of the motivations for 
our work has been to see how Barwise's direct- 
interpretation approach could be turned into a 
two-stage one in which phrases are first "com- 
piled" into conditional interpretations, which are 
then "executed" by applying pragmatic-discharge 
rules. 
Finally, several other computational systems de- 
veloped recently are concerned with interactions 
between context and meaning, especially Pundit 
\[8,21\] and Tacitus \[17,16\]. Both these systems 
have emphasized solutions to such difficult prag- 
matic problems as reference r solution. In particu- 
lar, the Pundit project has made notable progress 
on the question of resolving missing arguments, 
while the Tacitus group has done the same for 
questions involving the determination of implicit 
relations. In Candide, solutions to such prag- 
matic problems hould be encoded in the proce- 
dures that discharge assumptions; in future ver- 
sions of the system the discharge procedures might 
be improved applying some of the techniques de- 
veloped in this other work. What neither Pundit 
nor Tacitus has been concerned with is the ques- 
tion of how to build interpretations composition- 
12To date, we have included capabilitea for process- 
ing reference and coreference (definlte and indefinite noun 
phraaea, pronouns, poeatesaivea, and proper nouns), quan- 
tifier scope, compound nominals, prepmltional-phrase t- 
tachment, and certain types of underapecified relations 
(e.g., maln-verb "have"). We shall report on these mecha, 
nisms elsewhere \[24\]. 
84 
ally. Both systems first build partial interpreta- 
tions of sentences, and then attempt to solve a 
collection of associated pragmatic problems. Pun- 
dit does the latter in an overly constrained way, 
with the result that it cannot handle systemati- 
cally the sort of interactions exemplified by the 
donkey sentences. Tacitus, on the other hand, 
casts all the pragmatic problems as theorems to be 
proved; the result is an underconstrained control 
strategy. We believe that the generally composi- 
tional approach developed in Candide enables us 
to avoid both these extremes. 
9 Further Work  
We have developed a mechanism of semantic and 
pragmatic interpretation that relaxes the con- 
straints of compositional semantics just-enough 
to allow pragmatic information to play its neces- 
sary role in the derivation of sentence interpreta- 
tions. Central to the mechanism are conditional 
interpetations, which allow us to separate con- 
straints on interpretation that depend only on syn- 
tactic structure, represented by the sense compo- 
nent of the conditional interpretation, from those 
that depend on pragmatic hoices, represented 
by the assumption component. The interpreta- 
tion process is carried out by a combination of 
semantic-interpretation rules, which build condi- 
tional interpretations of phrases on the basis of 
lexical and syntactic information, and pragmatic- 
discharge rules, which satisfy assumptions on the 
basis of discourse and domain information. While 
the system we have implemented deals with a va- 
riety of semantic and pragmatic phenomena, of 
which only a few were discussed in this paper, it 
can only be seen as a first limited instantiation 
of a system architecure that requires much further 
work. We shall mention ow a few of the directions 
that might be pursued in developing the architec- 
ture further. 
At the most theoretical level, it is interesting 
to note the formal similarity of our interpretation 
rules to rules in "deductive ~ models of program- 
ruing language semantics \[25\]. It is also interest- 
ing to consider the connection between conditional 
interpretations and the relational theory of mean- 
ing from situation semantics \[3\]. These two simi- 
larities might be fruitful in developing a semantic 
justification for our formal interpretation rules in 
terms of constraints on interpretation relations. 
The applicability of discharge rules depends in 
many cases on the compatibility of expected and 
supplied sorts for relation arguments. In gen- 
eral, these sorts may be parameterized by assump- 
tion parameters, and some semantic interpretation 
problems not considered here suggest that higher- 
order parameterized types, instead of first-order 
sorts, may be needed. A suitable notion of type 
subsumption for such higher-order parameterized 
types \[15\] would be useful. More generally, the 
whole architecture would benefit from a semanti- 
cally grounded treatment of parameters and pa- 
rameterized objects. 
Other pragmatic processes associated with dis- 
charge rules, such as those for reference resolution, 
also must be able to reason with parameterized 
objects--for example in checking the uniqueness of 
a dependent object relative to arbitrary parame- 
ter assignments. Ultimately, the proper treatment 
of singular noun phrases in context will require a 
closer connection between assumptions and \[pa- 
rameterized\] fragments of the discourse context. 
References 
\[1\] A. V. Aho, R. Sethi, and J. D. Ullman. Compil- 
ers: Principles, Techniques and Tools. Addison- 
Wesley, Reading, Massachusetts, 1985. 
\[2\] J. Barwise. Noun phrases, generalized quanti- 
tiers and anaphora. In P. G~xdenfors, editor, 
Generalized Quantifiers: Linguistic and Logical 
Approaches, pages 1-29, D. Reidel, Dordrecht, 
Netherlands, 1987. 
\[3\] J. Barwise and J. Perry. Situations and Attitudes. 
MIT Press, Cambridge, Massachusetts, 1983. 
\[4\] J. Bresnan and R. Kaplan. Lexical-functional 
.grammar: a formal system for grammatical repre- 
sentation. In J. Bresnan, editor, The Mental Rep- 
resentation of Grammatical R~lations, pages 173- 
281, MIT Press, Cambridge, Massachusetts, 
1982. 
\[5\] D. Caxter. Interpreting Anaphors in Natural Lan. 
guage Tezts. Ellis Horwood, Chichester, England, 
1987. 
\[6\] R. Cooper. Quantification and Syntactic Theory. 
D. Reidel, Dordrecht, Netherlands, 1983. 
\[7\] S. Crain and M. Steedman. On not being led up 
the garden path: the use of context by the psycho- 
logical syntax processor. In D. Dowty, L. Kart- 
tunen, and A. Zwicky, editors, Natural Language 
Parsing: Psychological, Computational, and The- 
oretical Perspectives, pages 320-358, Cambridge 
University Press, Cambridge, England, 1985. 
\[8\] D. A. Dahl, M. S. Palmer, and R. J. Passonneau. 
Nominalizations in Pundit. In Proceedings of the 
85 
~4th Annual Meeting of the Association for Com- 
putational Linguistics, pages 131-139, Stanford, 
California, 1987. 
\[9\] P. Geach. Reference and Generality. Cornell Uni- 
versity Press, Ithaca, New York, 1962. 
\[10\] M. P. Georgeff and A. L. Lansky. Procedu- 
ral knowledge. Proceedings of the IEEE, Special 
Issue on Knowledge Representation, 1383-1398, 
1986. 
\[11\] B. J. Grosz. The Representation a d Use of Fo- 
cus in Dialogue Understanding. Technical Re- 
port 151, SRI International, Menlo Park, Ca., 
1977. 
\[12\] B. J. Grosz, A. K. Joshi, and S. Weiustein. Pro- 
viding a unified account of definite noun phrases 
in discourse. In Proveedings o\] the 21st An- 
nual Meeting of the Association for Computa. 
tional Linguistics, pages 44-50, Cambridge, Mas- 
sachusetts, 1983. 
\[13\] B. J. Grosz and C. L. Sidner. Attention, inten- 
tions, and the structure of discourse. Computa- 
tional Linguistics, 12(3):175-204, 1986. 
\[14\] F. Guenthner, H. Lehmann, and W. Schonfeld. A 
theory for the representation f knowledge. IBM 
Journal of Research and Development, 30(1):39- 
56, January 1986. 
\[15\] R. Harper, F. Honsel\], and G. Plotkin. A frame- 
work for defining logics. In Proceedings of the Sec- 
ond Symposium on Logic in Computer Science, 
Cornell University, IEEE, Ithaca, New York, 
1987. 
\[16\] J. R. Hobbs. Interpretation azabduction. In Pro- 
ceedings of the ?6th Annual Meeting of the As- 
sociation for Computational Linguistics, Buffalo, 
New York, 1988. 
\[17\] J. R. Hobbs. Overview of the TACITUS project. 
Computational Linguistics, 12(3), 1986. 
\[18\] H. Kamp. A theory of truth and seman- 
tic interpretation. In J. A. G. Groenendijk, 
T. M. V. Janssen, and M. B. J. Stokhoi~ edi- 
tors, Formal Methods in the Study o\] Language, 
pages 277-322, Mathematisch Centrum, Amster- 
dam, Netherlands, 1981. 
\[19\] R. Montague. The proper treatment of quantifi- 
cation in ordinary English. In R. H. Thomason, 
editor, Formal Philosphy, Yale University Press, 
1973. 
\[20\] R. C. Moore. Problems in logical form. In Pro- 
ceedings o\] the 19th Meeting o\] the Association for 
Computational Linguistics, pages 117-124, Stan- 
ford, California, 1981. 
\[21\] M. S. Palmer, D. A. Dahl, R. J. Schiffman, 
L. Hirschman, M. Linebarger, and J. Dowding. 
Recovering implicit information. In Proceedings 
of the ~.~th Annual Meeting of the Association 
, \ [22 \ ]  
for Computational Linguistics, pages 10-19, New 
York, 1986. 
F. C. Pereira- Logic for Natural Language Anal- 
ysis. Technical Report 275, SRI International, 
Menlo Park, California, 1983. 
\[23\] F.C. Pereira- Towards a deductive theory of sen- 
tence interpretation. Unpublished manuscript. 
\[24\] F.C. Pereira and M. E. Pollack. A compositional, 
declarative system for semaattic and pragmatic in- 
terpretation. In preparation. 
\[25\] G. D. Plotkin. A Structural Approach to Oper- 
ational Semantics. Lecture notes DAIMI FN-19, 
Aarhus University, Aarhus, Denmark, September 
1981. 
\[26\] L. K. Schubert and F. 3. Pelletier. From English 
to logic: context-free computation of 'conven- 
tional' logical translation. Computational Lin- 
guistics, 8(1):26-44, 1982. 
\[27\] P. Sells. Lectures on Contemporary Syntactic 
Theories. Volume 3 of CSLI Lecture Not~, Cen- 
ter for the Study of Language and Information, 
Stanford University, Stanford, California, 1985. 
Distributed by University of Chicago Press. 
\[28\] C. L. Sidner. Focusing in the comprehension 
of definite anaphora- In Computational Mod- 
els of Discourse, MIT Press, Cambridge, Mas- 
sachusetts, 1983. 
\[29\] B. L. Webber. So what can we talk about 
now? In Computational Models of Discourse, 
MIT Press, Cambrige, Ms., 1983. 
\[30\] W. A. Woods. Semantics and quantification 
in natural language question answering. In 
M. Yovits, editor, Advances in Computers, Vol. 
17, pages 2-64, Academic Press, New York, New 
York, 1978. 
86 
