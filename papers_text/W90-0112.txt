Domain Communicat ion Knowledge 
Owen Rambow* 
Department ofComputer and Information Science 
University of Pennsylvania 
Philadelphia, PA 19104 
Abstract 
This paper advances the hypothesis that any text plan- 
ning task relies, explicitly or implicitly, on domain- 
specific text planning knowledge. This knowledge, "do- 
main communication k owledge", is different from both 
domain knowledge and general knowledge about com- 
munication. The paper presents the text generation 
system Joyce, which represents such knowledge xplic- 
itly. 
The Joyce Text Generation System 
The Joyce text generation system is a part of the soft- 
ware design environment Ulysses (Korelsky and Ulysses 
Staff, 1988; Rosenthal el al., 1988). Ulysses is a graph- 
ical environment for the design of secure, distributed 
software systems. The design proceeds hierarchically 
by top-down refinement. A formal specification i ter- 
face and a theorem prover allow the user to formally 
verify the flow security of the designed system. 
Joyce is part of the user interface. Joyce generates 
different types of texts about software designs: 
? It generates annotations of the design which are in- 
tended to serve as system documentation during and 
after the design process. 
? It is used to explain the result of a heuristic security 
design tool, the "flow analyzer". 
The texts Joyce generates are specifically conceived 
of as written texts: there is no feature for interactive 
natural-language explanation. The texts may be several 
paragraphs long. The text in figure 1 is an annotation 
of the component "Host"; the graphical representation 
of the first level of the design of the Host is shown in fig- 
ure 2. (This picture corresponds to the first of the two 
paragraphs of the text.) The text annotates the soft- 
ware design by describing its structure and interpreting 
it in terms of its security characteristics. 
*The research reported in this paper was carried out 
while the author was at Odyssey Research Associates, 
Ithaca, NY. It was supported by the Air Force Systems 
Command at Rome Air Development Center under Con- 
tract No. F30602-85-C-0098 
St ructure  of  Joyce 
Joyce consists of three separate modules, which perform 
distinct asks and access their own knowledge bases. 
1. The text planner produces a list of propositions, 
which represents both the content and the structure 
of the intended text. Thus, the task of Joyce's text 
planner is similar in definition to TEXT's (McKe- 
own, 1985), but different from that of Penman (Hovy, 
1988), which expects the content selection task to 
have already been performed. Each proposition isex- 
pressed in a language-independent, conceptual frame- 
like formalism. It encodes aminimal amount of infor- 
mation, but can be realized as an independent sen- 
tence if necessary. The text planner draws on domain 
communication k owledge xpressed in a high-level 
schema language (see below). 
2. The sentence planner takes the list of propositions 
and determines how to express them in natural 
language. This task includes choosing lexicaliza- 
tions and a syntactic structure for each propositions, 
and assembling these lexico-syntactic structures into 
larger sentences. It draws on knowledge captured in 
the conceptual/Engish dictionary. 
3. The linguistic realizer takes the syntactic structures 
and produces urface sentences. It draws on syntactic 
and morphological knowledge, expressed in the lexi- 
con. The linguistic omponent is based on Meaning- 
Text Theory (Mel'~uk, 1988), and is a reimplementa- 
tion in Lisp of Polgu~re's Prolog implementation (see 
(Iordanskaja etal., 1988a; Iordanskaja etat., 1988b)). 
Usually, the task of text generation is subdivided 
into two subtasks (planning and realization), not three. 
However, there is a certain amount of disagreement 
about where the line between the two is to be drawn. 
For example, McKeown's TEXT (McKeown, 1985) and 
R/Ssner's SEMTEX (RSsner, 1987) seem to consider 
the tasks that Joyce classifies as sentence planning 
as part of the realization process, whereas Meteer's 
SPOKESMAN (Meteer, 1989) classifies them as part 
of text planning. The proposed finer-grained terminol- 
ogy may prove useful in discussing text generation and 
87 
HOST: General Structure and Security Features 
The multilevel Host is a complex component ofthe Sta- 
tion. It contains a Kernel, a TIP, a Process, a Net Han- 
dler and a group of Managers. The Process, the TIP, 
the Managers and the Net Handler communicate only 
through the Kernel. The manifestly secure Process and 
the Managers perform auxiliary functions. The Process 
is low-level. The TIP serves as interface to a User; the 
Net Handler handles communication with a Net. The 
security statuses of the TIP, the Managers and the Net 
Handler have not yet been specified. 
The Kernel is a complex component. Its security status 
has not yet been specified. The Kernel contains a Mes- 
sage Switch, an Adress Register and a Locator. The 
Adress Register, the Locator and the Message Switch 
communicate directly with each other. The low-level 
Adress Register and the multilevel Locator are data- 
bases. The Message Switch handles communication 
with the TIP, the Process, the Managers and the Net 
Handler. The security status of the Message Switch has 
not yet been specified. 
Figure 1: The HOST Text 
text generation systems by avoiding ambiguity. In this 
paper, "text planning" will always be used in this nar- 
rower sense. 
The three modules have been implemented in a 
pipelined manner. Execution is interleaved temporally, 
so that surface text is produced shortly after the gener- 
ation process is initiated. However, data need only flow 
in one direction; each module knows what information 
the next module requires. 
Text  P lann ing  in Joyce:  the  Task  
Since there was no corpus of texts available for analysis 
prior to the design of the text planning component, the 
first task of the design was to assemble such a corpus. 
Specialists in the design of secure software were asked to 
produce short descriptions of their designs, concentrat- 
ing on the structure and security features of the designs. 
This exercise provided useful insight into the problem. 
In particular, it became obvious that a text planner, 
whether human or machine, would face the following 
problems: 
? Even if virtually unlimited omain knowledge isavail- 
able (i.e, human experts), it is impossible to translate 
this knowledge directly into the knowledge required 
for writing texts about that domain. How to write 
about a new domain must be learned. Typically, hu- 
mans do this by repeatedly going through a cycle of 
text production, critique and revision. 
? The underlying representation in Ulysses (its domain 
representation) is designed in a way best suited for 
the formal modeling and mathematical verification of 
security properties, rather than for the storage and 
retrieval of information. Therefore, the text planner 
must interpret the data in order to communicate it.
It is not sufficient to simply retrieve data. 
? The texts in the corpus have a clear rhetorical struc- 
ture, but the relations that hold between the rhetori- 
cal blocks are not very varied: using the terminology 
of RST (Mann and Thompson, 1987), they are by 
and large restricted to the elaborate, background 
and sequence relationships. This rhetorical "flat- 
ness" effectively rules out an approach to planning 
these texts which is based only or even largely on 
rhetorical considerations. 
? Since there are numerous objects in the domain, with 
an ever larger number of interconnections between 
them, "paths" through the domain representation 
cannot be relied on for providing the organizing prin- 
ciple for text planning: the text would become repet- 
itive and long. Furthermore, the decision of which of 
the many possible paths to take would still remain 
open. A "procedural strategy" (Paris and McKeown, 
1986) is not sufficient to plan the text. 
The question, then, is: how can text be planned in 
those domains and applications in which previously pro- 
posed strategies seem to fail for reasons particular to 
the domain or application? (This Js essentially the sec- 
ond of Hovy's "unsolved problems in the planning of 
paragraphs", (Hovy, 1989)). 
Text  P lann ing  and  Domain  
Communicat ion  Knowledge  
Three Types of Knowledge 
Recent research in text planning has stressed the impor- 
tance for text planning of what may be called "commu- 
nication knowledge", general and domain-independent 
knowledge about how to use language in order to 
achieve communicative goals. Communication k owl- 
edge includes rhetoric and knowledge about thematic 1 
structure. Rhetoric relates complex goals of communi- 
cation to other, more elementary goals of communica- 
tion. Thematic knowledge relates the thematic func- 
tion of sentence lements to the thematic function of 
elements in adjacent sentences. Communication k owl- 
edge is independent of any particular domain knowl- 
edge. However, between domain and communication 
knowledge one may identify a third type of knowl- 
edge, which I will call "domain communication k owl- 
edge". Domain communication k owledge relates do- 
main knowledge to all aspects of verbal communication, 
including communicative goals and function. It is nec- 
essarily domain-dependent. However, it is not the same 
as domain knowledge; it is not needed to reason about 
1The term "thematic" will refer, in this paper, to the 
communicative structure of a sentence, and will group 
together the phenomena that have been identified as 
topic/comment or theme/theme. 
88 
UlyssB~ Gt~phics I ncar~G~ - -  HOSTS 
NET t'IA,qOI.ER 
~ t  ~ KIERNEL 
OTHER MANAGERS 
It 
/I OTHER POCESSES 
TIP 
el--.~.,. O 
?~nmae4=:  
Figure 2: The HOST Graphical Representation 
the domain, it is needed to communicate about the 
domain. For example, consider the task of describing 
some objects in some domain. Communication knowl- 
edge about thematic structure implies a strategy that 
describes those objects together that share some fea- 
ture. Domain knowledge can supply information about 
which objects share which feature. But if there are 
many different features, the task remains of choosing 
the feature according to which the descriptions will be 
grouped together. This choice must be based on knowl- 
edge which is neither general knowledge about com- 
munication (since the choice depends on the particular 
features of objects in the domain), but it is not actual 
domain knowledge, either (since it is only needed for 
planning communiction). 
What is the role of domain communication k owledge 
in text planning? Rather than trying avoid the stigma 
of domain-specifity, I propose to tackle the problem 
head-on, and posit the hypothesis that all text planning 
tasks require domain communication knowledge; The 
rest of this section will attempt to motivate this hypoth- 
esis by investigating two other text planning systems. 
The following section then discusses the representation 
of domain communication knowledge in Joyce. 
Domain  Communicat ion  Knowledge in 
Other  Sys tems 
Researchers whose principal interest lies in the repre- 
sentation and use of rhetorical or thematic knowledge 
have paid less attention to domain-specific problems in 
text planning. I will analyze two text planning systems 
in order to illustrate the hypothesis that any text plan- 
ning task involves domain communication knowledge. 
? McKeown's TEXT (McKeown, 1985) uses schemas to 
encode rhetorical knowledge 2. These schemas "cap- 
ture patterns of textual structure that are frequently 
used by a variety of people" (McKeown, 1985, p. 37). 
Each schema consists of a list of rhetorical predi- 
cates; the predicates can be matched against he do- 
main representation and reMized by a proposition, 
or they can be instantiated by another schema. The 
schemas/predicates r present basic rhetorical opera- 
tions, such as identification, compare and con- 
trast and constituency. 
The rhetorical schemas are domain-independent, but 
the text planner needs to relate them to a given do- 
main in order to produce a text plan. This is where 
domain communication knowledge is needed. The 
domain communication knowledge is implicitly en- 
2For reasons of space limitations, this analysis disregards 
TEXT's use of thematic knowledge. A more complete anal- 
ysis would not significantly alter the conclusion. 
89 
coded in the "semantics" ofthe rhetorical predicates: 
"these are semantics in the sense that they define 
what a predicate means  in a database system" (McK- 
eown, 1985, p. 45). The semantics are implemented 
as functions that access the data base. The semantics 
are dependent on the structure of the data base, but 
independent of its domain. However, the domain of 
the texts is precisely the st ructure  of the data base, 
not the domain  of the data base. In this sense, ~ the 
semantics are specific to the domain of the texts. (A 
similar analysis would apply to other interfaces to 
data bases that are based on principally on rhetoric, 
such as Maybury's JENNY (Maybury, 1989).) 
By way of example, consider McKeown's discussion of 
TEXT's response to the user query "What is a ship?" 
(McKeown, 1985, p. 47). Using its rhetorical com- 
munication knowledge, TEXT decides that the first 
predicate to be matched is the identif ication pred- 
icate. Communication k owledge cannot, however, 
be used to interpret the domain representation in or- 
der to find appropriate information that might serve 
to identify a ship. Neither is domain knowledge suf- 
ficient: the domain representation e codes the facts 
that a ship is a water-going vehicle and that it travels 
on the surface, but it does not reveal that these two 
facts are exactly what is needed to identify a ship. 
Thus the different types of knowledge have very dif- 
ferent purposes in TEXT: rhetorical knowledge re- 
lates the discourse goal to a sequence of constituent 
communicative goals. Each communicative goal can 
in turn be related to another set of communicative 
goals. Once the recursive xpansion of communica- 
tive goals comes to an end, domain communication 
knowledge (the semantics function) relates each com- 
municative goal to domain knowledge and produces 
a proposition. 
? TWRM-TOPOGRAPHIC, a system under develop- 
ment at the University of Constance (see (Sonnen- 
berger, 1988)), produces natural anguage abstracts 
from texts. The generation component of TWRM- 
TOPOGRAPHIC uses a similar system architecture 
to TEXT, but relies on different knowledge. Its 
generation component, developped by Gabi Sonnen- 
berger, uses an explicit encoding of thematic knowl- 
edge to guide the text planning process. The start- 
ing point of the abstracting and generation process is 
a representation f the contents of a text, the "text 
graph". It expresses the thematical relations between 
text spans. A discourse strategy is chosen on the ba- 
sis of the thematic progression pattern of the text 
graph. The graph determines the sequence of propo- 
sitions for realization. 
Thus, domain-independent k owledge about typical 
patterns of thematic progression guides the text plan- 
ning process. Here, no semantics are needed since the 
information about hematic roles is already expressed 
by the text graph from which the discourse strategies 
draw their information. It is in constructing the text 
graph that domain communication k owledge isused 
so that the relevance of domain facts to the commu- 
nicative process can be encoded. The use of domain 
communication k owledge is crucial to the text plan- 
ning process, but remains implicit. 
Mak ing  Domain  Communicat ion  
Knowledge  Exp l i c i t  
If the hypotheses that any text planning task requires 
domain communication k owledge is correct, then the 
question arises about how to represent and use such 
knowledge. Usually, domain communication k owledge 
is simply represented asLISP code (such as the seman- 
tics in TEXT), or implicitly encoded into the input to 
the text planner (such as the text graph in TWRM- 
TOPOGRAPHIC). Some other knowledge representa- 
tion formalism is needed. 
Domain Communication Knowledge 
Representation i n  Joyce 
In choosing a formalism for representing domain 
communication knowledge, a fact becomes apparent: 
though certain types of texts (such as Russian folk 
tales) may be generated by a context-free formalism 
such as a "story grammar" (or even a "mildly context- 
sensitive" formalism such as a TAG), this is not true 
in general. A context-free formalism cannot capture in 
full generality the knowledge needed to plan texts. On 
the other hand, if domain communication k owledge 
is to be an interesting concept, then its representation 
must be restricted in some way; simply using, say, LISP 
code does not represent much insight into the process 
of text planning. A good approach may be, therefore, 
to choose a restricted formalism and then to enquire 
in what ways it needs to be expanded to allow for the 
types of operations that text planning requires. 
These considerations have lead to the choice of 
domain-specific s hemas as the basis for text planning 
in Joyce. These schemas are similar in form to those 
used by McKeown. Basically, aschema isan ordered set 
of instructions. The instructions can be calls to other 
schemas, recursive calls to the same schema, or they 
can produce a specific proposition and add it to the 
text representation. The schemas upport conditional 
branching and iteration. In addition, two new instruc- 
tions represent extensions to the context-free formalism. 
? A portion of the text plan can be edited. To do this, 
a schema is called, but any propositions that are cre- 
ated (by the schema or by any schema it calls) are not 
added to the text representation. They are kept on a 
separate list in the order they are created. When the 
execution of the schema terminates, an editing func- 
tion is applied to the list. This editing function can 
be a default function, or it can be explicitly named 
90 
in the call to the schema. It can delete propositions, 
change their order, change their contents or create 
new ones. The choice of an editing function depends 
on the domain and on the particular equirements of
the text. This type of revision is different from the 
revision Meteer discusses in (Meteer, 1988), as it is 
situated at the text plan level, rather than the sen- 
tence level. The same remark holds for Gabriel's Yh 
system (Gabriel, 1988). Its complex architecture ex- 
ecutes a cycle of text production, observation by "ex- 
perts" and text modification. However, these experts 
are all situated at the sentence planning level; the 
text plan is produced by domain-specific text plan- 
ners (such as an "array expert"), and is not itself 
subject o revision. 
? Schemas can post to a "blackboard", and check this 
blackboard for messages. This allows for additional 
control and communication between schemas which 
are called at different imes during the text planning 
process and cannot communicate with each other by 
passing arguments. 
Instead of being templates that limit the structure of 
the text to certain preconceived types, the schemas are 
now an explicit and compact representation f domain 
communication k owledge. 
Example  
Consider the first paragraph of the sample text in fig- 
ure 1. It describes the component "Host". A rhetorical 
schema might specify a sequence of the ident i f icat ion 
predicate (the first sentence), the const i tuency  pred- 
icate (the second and third sentences) and several am- 
pl i f icat ion predicates (the remaining four sentences). 
This analysis hows that the resulting text has a well- 
formed rhetorical structure. However, this analysis in 
itself does not constitute a text plan, since the text 
planner must know how to relate the rhetorical predi- 
cates to the domain knowledge, i.e., how to choose infor- 
mation from the domain representation to realize each 
predicate. The system maintains many different kinds 
of information about each component: its name; its 
parent, sibling, and subcomponents in the hierarchical 
model; its ports; its security level; its secutiy status; 
the location and size of its icon on the screen; various 
information relating to the formal specification of the 
component. Choosing different ypes of information to 
realize each predicate will result in very different exts: 
? For example, the ident i f icat ion could be accom- 
plished by reporting the name of a comonent and 
its location on the screen, or by describing its con- 
nectivity with its sibling components. 
? In order to describe the const i tuency  of a compo- 
nent, the text planner will most likely report the sub- 
components of a component, but it could also dicuss 
its ports. It may or may not discuss the way the 
subcomponents are connected (their connectivity). 
defschema describe-complex-component 
1. condi t ion not-atomic-component? 
$. local-variable relevant-components 
are (get-relevant-components self)
3. theme self 
~. exclusive-choice toplevel-id or lower-id 
5. contains 
6. excluslve-cholce star-connectivity 
or complete-connectivity 
or default-connectivity 
7. exclusive-cholce enforced-security or not-secure 
8. edi t - for - these-objects  
objects (exclude-from coins relevant-components) 
schema security-functional-features 
edit-function join-same-concepts 
9. force-paragraph 
10. for - these-objects  relevant-components: general 
Figure 3: The DESCRIBE-COMPLEX-COMPO- 
NENT Schema 
? The notion of amplification is so general as to allow 
any of the information in the domain representation 
to realize the rhetorical predicate. 
The domain communication knowledge needed to 
make these decisions is explicitly represented in Joyce 
by schemas. An  example of such a schema is found in 
figure 3. It provides the basic framework for the first 
paragraph of the HOST text. 
In this schema, each numbered line represents an in- 
struction. Executing every instruction in turn will ac- 
complish the goal associated with the schema, namely 
to describe a cornlpex component. Special operators are 
represented in boldface. Words in Roman font repre- 
sent either calls other schemas, or variables or functions. 
Words and numbers in italics are comments. (The ac- 
tual lisp-based representation of this schema in Joyce 
contains some additional parentheses, of course.) 
This particular schema is only applicable if the com- 
ponent to which its is applied is not atomic. The Host 
meets this condition (line 1). Line 2 sets up a local 
variable, and line 3 defines the theme (topic) of the 
paragraph to be the Host. Line 4 identifies the com- 
ponent under discussion: the particular choice of how 
to identify a component depends on whether it is the 
top-level component, or whether it has a parent com- 
ponent. Since the Host does have a parent component, 
schema lower-id (not shown here) is chosen. Its execu- 
tion generates three propositions, identifying the Host 
by its parent component, its complexity and its security 
level. The sentence planner merges these propositions 
into the first sentence. 
In order to describe the constituents of the compo- 
nent under discussion, Joyce first calls the contains 
schema which lists the subcomponents of the Host (line 
5). It then describes the connectivity of the subcompo- 
9\]. 
nent. The simple solution would be to follow a proce- 
dural strategy and to list all connections between sub- 
components (The Net Handler communicates with ~he 
Kernel. The Kernel communicates with the Managers. 
...). However, for certain types of connectivity there 
are descriptive shortcuts: for example, all subcompo- 
nents may communicate with all other subcomponents, 
or all subcomponents may communicate with exactly 
one central subcomponent (as is the case of the Host 
in the sample paragraph). In fact, if no descriptive 
shortcut is available, it turns out that the resulting text 
is so cumbersome that it is better not to describe the 
connectivity at all (the user may consult he graphical 
representation). The text planner must be able to iden- 
tify these special cases of connectivity and choose the 
applicable descriptive strategy, or initiate the default 
strategy if no shortcuts are available (fine 6). 
Joyce amplifies on the previously given information 
by giving some additional information about the Host 
(line 7; no additional security information is available 
for the Host, so no proposition isgenerated), and about 
each of its subcomponents. Joyce has already deter- 
mined that one component, he Kernel, contains ub- 
components of its own (and is thus a "relevant" com- 
ponent - line 2). The second paragraph of the HOST 
text is devoted to it, so it is not discussed in the para- 
graph about the Host. For the remaining subeompo- 
nents, Joyce decides to give a brief description of their 
function and of their security features. However, Joyce 
must also decide on how to order the information. No 
order can be specified on rhetorical grounds, since no 
component is more salient han the others. Joyce tries 
to group together those components hat perform sim- 
ilar functions, thus avoiding the need to repeat func- 
tional descriptions: The (...) Process and the Man- 
agers perform auxiliary functions. This is encoded in 
the edit-for-these-objects instruction of the schema 
(line 8). It calls schema security-functional-features 
on the reduced set of subcomponents (without he Ker- 
nel). Instead of sending propositions to the sentence 
planner as they are generated by schema security- 
functional-features, the propositions are saved un- 
til comlpeteion of the iteration. Then editing func- 
tion join-same-concepts is applied, which rearranges 
the propositions, and they are then sent to the sen- 
tence planner. The sentence planner can exploit the 
adjacency of similar propositions, and forms single sen- 
tences. 
The paragraph is then completed (line 9) and the 
general text planner called recursively on the Kernel 
(line 10). 
Domain  Communicat ion  Knowledge  and  
"P lann ing  F rom F i rs t  P r inc ip les"  
If the thesis that all text planning tasks require domain 
communication k owledge is correct, then it would ap- 
pear that "planning from first principles", i.e. text 
planning using only general knowledge about communi- 
cation and knowledge about the domain (and a reader 
model), would he impossible. This conclusion is non- 
sensical: clearly, human text planners ucceed in writ- 
ing about new domains. But if text planning from 
first principles is possible, as anecdotal evidence sug- 
gests, then what is the status of domain communication 
knowledge? 
Consider the following approach to text planning: 
Supposing that for any given domain only a finite num- 
ber of facts is known, one could list all possible order- 
ings of the elements of all subsets of these facts and 
use pure communication k owledge along with a reader 
model to evaluate ach of these text plans. The com- 
munication knowledge would serve as a constraint on 
possible text plans, or as an evaluation metric for the 
quality of a text plan (the fewer violations of commu- 
nicative principles it exhibits, the better). This brute- 
force bottom-up approach can be refined by using gen- 
eral communication k owledge to do some preliminary 
top-down planning. For example, a rhetorical predicate 
can refine a high-level communicative goal into a set of 
more easily achievable goals, as in TEXT. Nonetheless, 
even in this approach it is necessary to form all possible 
sequences ofrelevant domain information that together 
may achieve a lower-levi goal and perform extensive r a- 
soning based on communication k owledge and the user 
model. 
These approaches thus represent true text planning 
from first principles, since they do not require domain 
communication k owledge. But they require reason- 
ing about an exponential number of possible text se- 
quences. They are computationally unattractive for 
any true applications. In order to make text planning 
more efficient, domain communication k owledge is re- 
quired. Thus, costly text planning from first principles 
can be understood as the process of acquiring or compil- 
ing domain communication k owledge. Ways in which 
domain facts can contribute to achieving a particular 
communicative goal are deduced by a complex process 
using only domain and communication k owledge, but 
once such reasoninghas been performed, its results are 
explicitly encoded in the domain communication k owl- 
edge representation. This knowledge can then be used 
for subsequent text planning tasks. Intuitively, this ex- 
plains why humans get better and faster at generating 
a given type of text about a specific domain once they 
have done so several times. 
This view is analogous to Patten's proposal (Patten, 
1988) to precompile communication planning knowl- 
edge according to the theory of register. However, his 
proposal is aimed at what in Joyce is classified as sen- 
tence planning knowledge, since register-related deci- 
sions are made by the sentence-planner in Joyce. Do- 
main communication k owledge might be considered a 
precompilation fgenre knowledge. 
92 
Further Research 
A fundamental issue remains as an open research ques- 
tion: what is the mode of interaction between domain 
communication knowledge and general communication 
knowledge? Three views are possible: 
1. Does text planning start with general communication 
knowledge, with the domain-specific knowledge tak- 
ing over in order to relate "atomic" communicative 
goals to domain facts (as in TEXT)? 
2. Is there a continuum from general domain- 
independent knowledge via s'pecific but domain- 
independent knowledge to domain-dependent com- 
munication knowledge (Moore and Paris's Moti- 
vation plan operator for motivating replacements 
(Moore and Paris, 1989) is an example of a specific 
but domain-independent communication strategy)? 
This would suggest a multi-layered representation f 
these different ypes of communication knowledge. 
3. Is general communication knowledge implicitly en- 
coded into the domain communication knowledge 
(as in Joyce)? In this view, general communication 
knowledge would be used explictly only during the 
process of compiling domain communication knowl- 
edge. 
This underlying issue affects the more particular 
questions that the proposed representation formalism 
for domain communication knowledge raises: 
1. Is a schema-based approach an adequate representa- 
tion for domain communication knowledge? 
2. What types of editing functions are needed? 
3. How do genre and user-tailoring affect domain com- 
munication knowledge? 
Acknowledgments 
I would like to thank Robert Dale, Richard Kittredge, 
Tanya Korelsky, Libby Levison and Bonnie Webber for 
helpful comments and discussions about various drafts 
of this paper. 
Bibliography 
Richard P. Gabriel. Deliberate writing. In David D. 
McDonald and Leonard Bolc, editors, Natural Lan- 
guage Generation Systems, pages 1-46. Springer Ver- 
lag, 1988. 
Eduard H. Hovy. Planning coherent multisentential 
text. In Proceedings of the 26th Annual Meeting, 
pages 163-169, Buffalo, 1988. ACL. 
Eduard I-I. Hovy. Some unsolved problems in the plan- 
ning of paragraphs. In Extended Abstracts Presented 
at the Second European Natural Langugae Generation 
Workshop, Edinburgh, 1989. 
Lidija Iordanskaja, Richard Kittredge, and Alain 
Polgu~re. Implementing the meaning-text model for 
language generation. Paper presented at COLING- 
88, 1988. 
Lidija Iordanskaja, Richard Kittredge, and Alain 
Polgu~re. Lexical selection and paraphrase in a 
meaning-text generation model. Technical report, 
Odyssey Research Associates, 1988. 
Tatiana Korelsky and Ulysses Staff. Ulysses: a com- 
puter security modeling environment. In Proceedings 
of the 14th National Conference on Security and Pri- 
vacy, Baltimore, 1988. NBS. 
William C. Mann and Sandra A. Thompson. Rhetori- 
cal structure theory: A theory of text organization. 
Technical report, ISI, 1987. 
Mark T. Maybury. Knowledge based text generation. 
Technical report, RADC, 1989. 
Kathleen McKeown. Text Generation. Cambridge Uni- 
versity Press, Cambridge, 1985. 
Igor A. Mel'Suk. Dependency Syntax: Theory and 
Practice. State University of New York Press, New 
York, 1988. 
Marie W. Meteer. The implication of revisions for natu- 
ral language generation. In Proceedings of the Fourth 
International Workshop on Natural Language Gener- 
ation, Catalina Island, 1988. 
Marie W. Meteer. The spokesman atural language 
generation system. Technical report, BBN Systems 
and Technologies Corporation, 1989. 
Johanna D. Moore and CEcile L. Paris. Planning text 
for advisory dialogues. In Proceedings of the 27th 
Annual Meeting, Vancouver, 1989. ACL. 
Cecile L. Paris and Kathleen R. McKeown. Discourse 
strategies for describing complex physical objects. 
In Gerard Kempen, editor, Natural Language Gen- 
eration, pages 97-115. Martinus Nijhoff Publishers, 
1986. 
Terry Patten. Compiling the interface between text 
planning and realization. In Proceedings of the AAAI  
Workshop on Text Planning and Realization, St.Paul, 
1988. 
David Rosenthal, Tatiana Korelsky, Daryl McCullogh, 
Owen Rambow, and D.G.Weber. The Ulysses inte- 
grated modeling environment and its relationship to 
KBSA. Heuristics, 1(2):42-49, 1988. 
Dietmar RSsner. The automated news agency SEM- 
TEX - a text generator for German. In G. Kempen, 
editor, Natural Language Generation: New Results 
in Artificial Intelligence, Psychology and Linguistics, 
pages 138-148. Kluwer Academic Publishers, Boston, 
1987. 
93 
Gabi Sonnenberger. Flexible Generierung yon 
natiirlichsprachigen Abstracts aus Textrepr~en- 
tationsstrukturen. In 4. Osterreichische Artifi- 
cial Intelligence Tagung: Proceedings, pages 72-82. 
Springer, Berlin, 1988. 
94 
