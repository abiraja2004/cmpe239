A GRAMMAR USED FOR PARSING AND GENERATION 
Jean-Mar ie  LANCEL (~), F rango is  ROUSSELOT (**), Natha l ie  S IMONIN (~) 
CAP SOGETI  INNOVATION,  \]29, rue de l 'Un ivers i t6 ,  75007 - PARIS  
w, Un ivers i ty  of STRASBOURG If, 22, rue Descar tes ,  67084 - STRASBOURG 
i. INTRODUCTION 
This  text  p resents  the out l ine  of a sys tem 
us ing  the same grammar  for pars ing  and 
generat ing  sentences  in a g iven language.  
This  sys tem has been  dev ised  for a 
"mul t i l i ngua l  document  generat ion"  pro ject .  
Mar t in  KAY  has shown that pars ing  and 
generat ion  cou ld  be done us ing Funct iona l  
Grammars .  APPELT  lAPP85\]  and McKEOWN 
\[McK82\] ,  among others ,  have  used Funct iona l  
Grammars  for generat ion .  Usua l ly  the grammar  
fo rmal i sm is more su i ted  to pars ing  than to 
generat ion .  The way a grammar  is p rocessed  
for pars ing  is ra ther  clear,  wh i le  the 
generat ing  process  needs s t rong assumpt ions  
on the in terpreter  to be eas i ly  readable .  
The Funct iona l  Grammar  notat ion  descr ibed  
here  a l lows  a ful l  symmetry  between pars ing  
and generat ing .  Such a grammar  may be read 
eas i ly  f rom the po in t  of v iew of the pars ing  
and from the po int  of v iew of the 
generat ion .  This  a l lows to wr i te  on ly  one 
grammar  of a language,  wh ich  min imizes  the 
l ingu is t i c  costs  in a mul t i l i ngua l  scheme. 
Descr ip t ion  of the Funct iona l  Grammar  
notat ion ,  in chapter  2, w i l l  thorough ly  
refer  to Funct iona l  Descr ip t ions  and 
Funct iona l  Un i f i ca t ion .  For  a deta i led  
presentat ion ,  the reader  may refer  to 
\ [KAY79\]  \ [ROU84\]  \ [SIM85\] .  
2. THE GRAMMAR FORMALISM 
The fo rmal i sm we have  de f ined  a l lows us to 
wr i te  a s ing le  grammar  of a language wh ich  
is used both  for ana lys i s  and generat ion  by 
means of two spec ia l i zed  in terpreters .  
Sentence  ana lys i s  is v iewed as the 
t rans i t ion  from a sur face  s t ruc ture  to a 
semant ic  representat ion  wh ich  is a 
Funct iona l  Descr ip t ion .  Sentence  generat ion  
is the t rans format ion  of a semant ic  
representat ion  into a syntact i c  form. This  
symmetry  between the two processes  has to be 
c lear ly  expressed  if we want  a c lear  
notat ion ,  easy  to read and to unders tand  
from the po int  of v iew of pars ing  and of 
generat ing .  
A grammar  rule is i t se l f  represented  as a 
Funct iona l  Descr ip t ion .  This  FD has three 
main  " ident i f ie rs"  : PATTERN,  MEANING and 
CONSTRAINTS.  
536 
Example  of a s imple  grammar  ru le  : 
s imp le_gn  = 
\[ pat te rn  = (det subst  adj) 
mean ing  = \[ obj = <subst  mean ing> 
def in i tude  = <det type> 
qua l i f  = <adj mean ing> 
number  = <subst  number> \] 
const ra in ts  = ( \ [equal  = (<det gender> 
<subst  gender> 
<adj gender>)  
equal  = (<det number> 
<subst  number> 
<adj number>) \ ] )  
det = \[cat = det\] 
subst  = \[cat = subst \ ]  
adj = \ [cat  = adj\]  \] 
The ~ part  descr ibes  the syntact i ca l  
s t ructure .  Each i tem of the l ist  assoc ia ted  
to pat tern  refers  to a rule or to a 
terminal .  In the above example  the three 
terms re fer  to termina ls .  Omiss ions  and 
repet i t ions  are a l lowed.  
The mean inq  par t  descr ibes  the semant ic  
representat ion  assoc ia ted  to the syntact i ca l  
s t ructure .  Bracketed  l ists represent  "paths" 
re fe r ing  to Funct iona l  Descr ip t ions  ins ide 
the ru le  or in another  rule. Dur ing  pars ing,  
these paths  are used to bu i ld  the semant ic  
representat ion  wh i le  in generat ion  they are 
used for sp l i t t ing  a semant ic  s t ruc ture  into 
d i f fe rent  sub-s t ruc tures .  The two processes ,  
pars ing  and generat ion ,  are deta i led  in 
chapters  3 and 4. 
The const ra in ts  par t  is a l ist  of  "set of 
const ra in ts"  expressed  by Funct iona l  
Descr ip t ions .  At  \ ]east  one "set of 
const ra in ts"  must  be fu l f i l led .  In the above 
example  this a l lows us to express  agreement  
ru les used for both  pars ing  and generat ing .  
As in Mar t in  Kay de f in i t ions  a rule may have  
d i f fe rent  der ivat ions .  These are represented  
by enc losed  braces.  Example  : 
s imp le_phrase  = { 
pat tern  = (gnl v t rans  gn2) 
mean ing  = \ [act ion  = <vtrans mean ing> 
sub jsem = <gnl mean ing> 
ob jsem = <gn2 mean ing>\ ]  
const ra in ts  = (\[equal = (<gnl number>,  
<vtrans number>\ ] )  
pat tern  = (gnl v in t rans)  
mean ing  = \ [act ion  = <vintrans  mean ing> 
sub jsem = <gni mean ing>\ ]  
const ra in ts  = (\[equal = (<gnl number>,  
<v int rans  number>~)  
} 
3. THE PARSING PROCESS 
3.1. Us___e of  th e ~rammar  for  
In o rder  to ana iyze  a sentence,  the words  
and compounds  words  are conver ted  in 
Funct iona l  Descr ip t ions ,  us ing  a 
morpho log ica l  ana lyzer  and a d ic t ionary .  The 
resu l t  is a l ist  of  FD's  wh ich  w i l l  be 
processed  by  -the parser .  
Example  (semant ic  va \ ]ues  are expressed  here  
by Eng l i sh  terms but  they are usua l ly  
expressed  as FD) : 
"\]es chaussures  ver tes"  ("the green  shoes")  
Input  l ist  of parser  is : 
( 
\ [cat = det \[cat = subst  \[cat = adj 
type =def ined  gender  = fem gender  = fem 
number :p lura l  number :p lura l  number=plura l  
lex : \]e\] lex=ehaussure  lex = vert  
mean ing=shoe\ ]  mean ing :green\ ]  
Th is  sentence  matches  w i th  the ru le 
s imple_gn  descr ibed  in chapter  2, as the 
f i rs t  FD of the l ist  is funch ionna ly  
un i f iab \ ]e  w i th  \ [cat  = de t\], the second FD 
w i th  \[cat = subst \ ]  and the th i rd  FD w i th  
\ [ ca t  = ad j \ ] .  
The pars ing  process  bu i lds  a s t ructure  wh ich  
is a copy of the ru le s imple_gn  and 
en larges  it w i th  the actual, word  ana lyzed .  
The path  descr ip t ions  are rep laced  by  the i r  
ac tua l  va lues.  
3.2. S t ructure  bu i l t  
s Jmple_gn  = 
\[ pat tern  = 
mean ing  = 
det  = 
subst  = 
adj = 
(det subst  adj) 
\[obj = shoe 
def in i tude  = def ined  
qua l i f  = green  
number  = p lura l  \] 
\ [cat  = det  
type = def ined  
number  =p lura i  
lex ~ le \] 
\ [cat  = subst  
gender  = fem 
number  = p lura l  
lex = chaussure  
mean ing  = shoe \] 
\ [cat  = adj 
gender  = fem 
number  = p lura l  
lex = vert  
mean ing  = green  \] 
Th is  s t ructure  is bu i l t  if the const ra in ts  
are met  : for th is  ru le  it  imp l ies  agreement  
of gender  and number,  wh ich  is the case for 
"les chaussures  ver tes" .  
4. THE GENERATING PROCESS 
4.1o Use  of  the ~rammar  :for ~enerat ion  
The generat ion - takes  as input  a semant ic  
s t ructure  and produces  a sentence .  
As an example  the ru le  s imple_gn  (cf 
chapter  2), is ac t ivated  w i th  the semant ic  
s t ructure  
\[ obj = box  
def in i tude  = undef ined  
qua l i f  = wh i te  
number  = p lura l  \] 
A copy  of the ru le  is bu i l t .  The paths  in 
? the Funct iona l  Descr ip t ion  assoc ia ted  to the 
ident i f ie r  "meaning"  are used to convey  the 
semant ic  in fo rmat ion  to "the i tems re fer red  
to by the ident i f ie r  "pat tern"  (These i tems 
are named "const i tuents" )  
\]~n this example  Jt g ives  : 
ident i f ie r  path  
obj <subst  mean ing> 
def in i tude  <det type> 
qua l i f  <adj mean ing> 
number  < subst  number> 
po inted  va lue  
box 
undef ined  
wh i te  
p\ ]ura\]  
The in terpretat ion  process  of  the grammar  
"bu i lds"  the path,  wh ich  means  that the 
needed ident i f ie rs  are  inc luded in the copy  
of -the rule. 
FD for DET becomes  : 
det  = \[ cat  = deh 
type = undef ined  \] 
~ere  "type" has been added. 
FD :for SUBST becomes  : 
subst  = \[ cat  = subst  
mean ing  ~ box  
number  = p lura l  \] 
where  "meaning"  and "number"  have  been 
added. 
FD for ADJ  becomes  : 
adj = \[ cat  : adj 
mean ing  = wh i te  \] 
where  "mean ing"  has been added.  
Then the const ra in ts  are app l ied .  In the 
pars ing  process  they  are used to e l iminate  
wrong const ruct ions ,  wh i le  in the generat ing  
process  they  are used to t ransmi t  
in fo rmat ion .  
Use  of the const ra in ts  of  the ru le  s imple  gn 
equa l  = 
(<det gender> <subst  gender> <adj gender>)  
537 
At this step, this ru le doesn ' t  t ransmi t  any 
in fo rmat ion  because  ident i f ie r  "gender" is 
not p resent  in at least  one Funct iona l  
Descr ip t ion  
equa l  = 
(<det number> <subst  number> <ad jnumber>)  
This  rule t ransmi ts  number  of substant ive  
(number = p lura l ) ,  in the two other  
Funct iona l  descr ip t ions  of the output  l ist  
A f te r  const ra in ts  are appl ied,  the output  
l ist  is : 
(\[cat = det 
type = undef ined  
number  = p lura l  \] 
\ [cat = subst  
mean ing  = box 
number  = p lura l  \] 
\[cat = adj 
mean ing  = wh i te  
number  = p lura l  \]) 
The next step is word  se lec t ion  : for each 
termina l ,  the semant ic  s t ruc ture  assoc ia ted  
with it is used to choose a lex ica l  item. 
This  is done by  us ing Funct iona l  
Un i f i ca t ion .  For each word  or compound word  
se lected,  "const ra in ts"  are processed  again,  
in order  to t ransmi t  in fo rmat ions  to 
Funct iona l  Descr ip t ions  of the list. 
For a g iven  s t ruc ture  there may be more than 
one adequate  word.  In that  case the 
appropr ia te  word is chosen by the user  
in teract ive ly .  
The l ist  of te rmina ls  is en la rged  by the 
se lec ted  lex ica l  items, as shown in the 
fo l low ing  example  : 
For  the f i rs t  i tem : 
( 
\ [ ca t=det  \[cat = subst  \[cat = adj 
type=undef ined  mean ing=box mean ing=whi te  
number=plura l  number=plura l \ ]  number=plura l \ ]  
l ex  = un  \] 
) 
For  the second i tem : 
( 
\ [ cat=det  
type=undef ined  
number=plura l  
lex=un 
gender=fem \] 
) 
\ [ ca t=subst  \ [cat=adj  
mean ing=box mean ing=whi te  
number=plura l  number=plura l  
lex=bo i te  gender=fem \] 
gender=fem \] 
For the th i rd  i tem : 
( 
\ [ cat=det  \ [ ca t=subst  
type=undef ined  mean ing=box 
number=plura l  
lex=un 
gender=fem \] 
) 
\ [cat=adj  
mean ing=whi te  
number=plura l  number=plura l  
lex=bo i te  gender=fem 
gender=fem \] lex=blanc  \] 
538 
At this step each word  of the output  l ist  is 
complete ly  def ined.  The morpho log ica l  
generat ion  processes  each Funct iona l  
Descr ip t ion  us ing f ie lds LEX, GENDER,  
NUMBER,  MODE,  TENSE and PERSON.  The 
appropr ia te  form of the lex iea l  i tem is 
const ructed  us ing Funct iona l  Un i f i ca t ion .  
For this example  the l ist const ructed  by the 
morpho log ica l  generat ion  is : 
( "des", "boites",  "b lanches"  ) 
wh ich  g ives : 
"des bo i tes  b lanches"  
This example  is a s imple  case where  items of 
a "pattern"  do not refer  to other  rules.  
P resence  of a rule name in a pat tern  leads 
to ac t ivat ion  of this ru le wi th  a subset  of 
the in i t ia l  mean ing  ( t ransmi t ted  by a path, 
as for a termina l ) .  
4.2. Generat ion  mode ls  
The generat ion  of the sentence  assoc ia ted  to 
a semant ic  s t ruc ture  may lead to var ious  
syntact i ca l  const ructs .  In order  to reduce 
the number  of const ructs ,  and to a l low 
cont ro l  of  text  style,  a spec i f i c  feature  
has been int roduced,  named "generat ion  
model" .  A generat ion  model  assoc ia tes  a 
semant ic  pat tern  to a prec i se  grammar  rule. 
Example  : 
Semant ic  s t ruc ture  assoc ia ted  to the adv ice  
"Do not expose to rain" in a user 's  manua l  : 
\ [adv ice 
adv ice - type  = d i rec t ive  
adv ice -g iver  = const ructor  
content  = \ [ l ink = negat ion  
argl = \ [act ion  
ac t ion - type  = expose  
sub jsem = user  
ob jsem = mach ine  
obj2 = rain \] \] \] 
Among the "generat ion  models"  of the system, 
the fo l low ing  is Funct ionna ly  Un i f iab le  to 
the above s t ruc ture  : 
\ [adv ice 
adv ice - type  = d i rec t ive  
gen-mode l  = \[ \[cat = prop- in f in i t i ve  
pat tern  = (gvinf  *comp) 
mean ing  = <content> \] 
\[cat = prop-must  
pat tern  = (gvdir  *comp) 
mean ing  = <content> \] 
\] \] 
Remark  : the symbol  * means that the rule 
may be repeated.  
This generat ion model is selected by a 
restr icted version of Funct ional  
Uni f icat ion : ident i f iers "advice" and 
"advice-type" must be present in the 
semantic structure. 
In this example two grammar rules are 
candidate once the generat ion model is 
selected. A simple implementat ion is to 
choose a rule at random, another is to have 
an evaluat ion module which choose the most 
appropr iate rule according to styl ist ic 
knowledge (technical style, te legraphic 
style, etc). 
5. DEVELOPMENTS 
Previous version of the mult i l ingual  
generat ion system uses a grammar for 
parsing, and product ion rules for 
generation. 
Present work i s  the adaptat ion of the parser  
to the new formalism, and the implementat ion 
of the generat ion interpreter.  It includes 
the adaptat ion of the mult i l ingual  
d ict ionary retr ieval process. 
6. REFERENCES 
APPELT,D.E.  
"Planning Engl ish Sentences."  Cambridge 
Univers i ty Press. 1985. 
KAPLAN,R.M. and BRESNAN,J .  
"Lexical -Funct ional  Grammar : A Formal 
System for Grammatical  Representat ion."  In : 
Bresnan,J .  (ed) The Mental  Representat ion of 
Grammatical  Relations. MIT Press. 1982. 
KAY,M. 
"Funct iona l  Grammar . "  P roceed ings  o f  F i r th  
Annua l  Meet ing  o f  the  Berke ley  I ingu is t i cs  
Soc ie ty ,  1979.  
KAY,N. 
"Un i f i ca t ion  Grammars . "  Xerox  pub l i ca t ion .  
1981.  
NeKEOWN,K. 
"GeneraL ing  Natura l  Language TexL in  
Response  to  Quest ions  about  Database  
St ructure . "  Ph .D .  d i sser ta t ion .  Un ivers i ty  
o f  Pennsy lvan ia .  1982.  
R ITC I I IE ,G .  
"S imulat ing  n - ru r ing  mach ine  us ing  
funct iona l  un i f i ca t ion  grammar . "  ECAI 84.  
P i ss .  1984. 
ROUSSELOr,F. 
"R4a l i saL Jon  d 'un  programme eomprenant  des 
textes~ en uL J l i sanL  un fo rmal i sme un ique  
pour  reprdsenLe? routes  les  conna issances  
ndcessa iees . "  Thbse d 'E taL .  Un ivers i ty  o f  
Par i s  V I .  \ ]986 .  
ROUSSEI_OT,I r .  and GROSCOT,H. 
"Un langsge  d6c \ ]e ra t i f  un i fo rme eL un 
ana lyseur  syntax ico -s~mant : ique . "  COGN\[TIVA 
85.  Par i s .  \ ]985 .  
SIMf lNZN,N.  
"Uk i l i sa t ion  d 'une  Exper t i se  pout" engendrer  
des textes  s tPuet t JF~s  en f ranga is .  " Th~se .  
Un ivet ' s i ty  o f  Par i s  V I .  1985.  
539 
