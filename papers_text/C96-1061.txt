Using Discourse Predictions for Ambiguity Resolution 
Yan Qu, Carolyn P. Ros6 and Barbara Di Eugenio 
Computat iona l  L ingu is t i cs  P rogram 
Depar tment  of Ph i losophy  
Carneg ie  Mel lon Un ivers i ty  
Pittsburgh, PA 15213 
{yqu,cprose}  (6) cs .cmu.edu ,d ieugen i~cmu.cdu  
Abst ract  
In this paper we discuss how we all- 
ply discourse predictions along with non 
context-based predictions to the prob- 
lem of parse disambiguation i Enthusi- 
ast, a Spanish-to-English translation sys- 
tem (Woszcyna et al, 1993; Snhm et al, 
1994; Levin el; al., 1995). We discuss 
extensions to our plan-based discourse 
processor in order to make this possi- 
ble. We evaluate those extensions and 
demonstrate the advantage of exploiting 
context-based predictions over a purely 
non context-based approach. 
1 Introduct ion 
A system which processes poken language must 
address all of the ambiguities arising when pro- 
cessing written language, plus other ambiguities 
specitie to the speech processing task. These 
include ambiguities derived from speech disflu- 
encies, speech recognition errors, and the lack 
of clearly marked sentence boundaries. Because 
a large flexible grammar is necessary to handle 
these features of spoken language, as a side-effect 
the number of ambiguities increases. In this pa- 
per, we discuss how we apply discourse predic- 
tions along with non context-based predictions to 
the problem of parse disambiguation. This work 
has been carried out in the context of Enthusi- 
ast, a Spanish-to-English speech-to-speech trans- 
lation system (Woszcyna et al, 1993; Suhm et al, 
1994; Levin et al, 1995), which currently trans- 
lates spontaneous dialogues between two people 
trying to schedule a meeting time. 
A key feature of our approach is that it al- 
lows multiple hypotheses to be processed through 
the system in parallel, and uses context to disam- 
biguate among alternatives in the linal stage of the 
process, where knowledge can be exploited to the 
fullest extent. In our system, numerical predic- 
tions based on the more local utterance level are 
generated by tile parser. The larger discourse con- 
text is processed and maintained by a plan-based 
discourse processor, which also produces context- 
based predictions for ambiguities. Our goal was 
to combine the predictions from the context-based 
discourse processing approach with those from the 
non context-based parser approach. 
In developing our discourse processor for disam- 
biguation we needed to address three major issues. 
First, most plan-based or finite state automaton 
based discourse processors (Allen and Schubert, 
1991; Smith, Hipp, and Biermann, 1995; Lam- 
bert, 1993; Reithinger and Maim:, 1995), including 
tile one we initially developed (l~.osd et al, 1995), 
only take one semantic representation as input at 
a time: thus, we had to extend the discourse pro- 
cessor so thai; it can handle multiple hypotheses as 
input. Secondly, we needed to quantify the disam- 
biguating predictions made by the plan-based is- 
course processor in order to combine these predic- 
tions with the non context-based ones. Finally, we 
needed a method for combining context-based and 
non context-based predictions in such a way as to 
reflect not only which factors are important, but 
also to what extent they are important, and under 
what circumstances. We assume that knowledge 
from different sources provides different perspec- 
tives on the disambiguation task, each specializing 
in different ypes of ambiguities. 
In this paper, we concentrate on the first two 
issues which are imperative to integrate a tradi- 
tional plan-based iscourse processor into the dis- 
ambiguation module of a whole system. The third 
issue is very important for successful confl)ination 
of predictions from different knowledge sources. 
We address this issue elsewhere in (Rosd and Qu, 
1995). 
The paper is organized as follows: Fh'st, we 
briefly introduce the Enthusiast speech transla- 
tion system and discuss the ambiguity problem 
in Enthusiast. Then we discuss our discourse pro- 
cessor, focusing on those characteristics needed to 
generate predictions lbr disambiguation. Finally, 
we evaluate our performance, and demonstrate 
that tile use of discourse context improves per- 
formance on disambiguation tasks over a purely 
non context-based approach in the absence of cu- 
mulative error. 
358 
2 System Description 
The main modules of our system include speech 
recognition, parsing, discourse processing, and 
generation. Processing begins with tim speech 
input in the source language. The top best hy- 
pothesis of the speaker's utterance is then passed 
to Lhe parser. The GLR* parser (Lavie, 1995) 
produces a set of interlingua texts, or ILFs, for a 
given sentence. For robustness, the. (-ILI{,* parser 
can skil) words in the inpu/, sentence in order to 
find a partial parse for a sentence which otherwise 
would not be parsable. An 11:I' is a frame-based 
language, independent meaning reprcsen ration of a 
sentence. The main components of an 11:1' are the 
sl)eech act (e.g., suggest ,  accept ,  re jec t ) ,  the 
sentence type (e.g., s ta te ,  query-J.g, fragraent), 
and the main semantic frame (e.g., I ree ,  busy). 
An example of an IUI' is shown in Figure 1. The 
parser may produce many Ilfl's for a single sen- 
tencej sometimes as many as one  hundred or lnore. 
((when 
((fi'ame *simple-time) 
(day-of-week wednesday) 
(tin, e-or-day ,noruing))) 
(a-speech-act 
(*multiple* *suggest *accept)) 
(who 
((frame *i))) 
(frame *free) 
(sentence-type *state))) 
Sentence :  1 couhl do it; Wednesday niol'ning too. 
Figure 1: An  Example  ILT 
'\['he resulting set of l l Ts  is then sent to the dis- 
course processor. The discourse l)rocessor, based 
on I,ambert's work (\[,ambert and Carberry, 1992; 
I,ambert, 1993), disaml)iguates tile sl)eech act of 
e~(;h sentence~ normalizes temporal expressions 
(?oin context, and incorl)orates the seltt, enee into 
tile discourse context represented by a plan tree. 
The discourse l)roeessor also updal;es a calendar 
which keeps track of what the speakers h~we said 
M)out their schedules. We will discuss the dis- 
course i>rocessor and how we extended it for the 
disambiguation task in Sectiou 4. 
3 Ambiguity it, Enthusias(; 
Because t;he spontal leous sche(\[lding dialogues 3,re 
unrestricted, ambiguity is a major problenl in En- 
thusiast. We gange ambiguities in terms of dif- 
ferences between members of the set of ILTs pro- 
duced by the parse, r for the sail~|e source sentence. 
As we mentioned e, arlier, the disaanbiguation task 
benelits from both non (-ontexL- and context-l)~sed 
methods. We observed that some classes of am- 
biguities can be more l)erspieuously dealt with in 
one way or the other. 
3.1 Non Context -Based  D isambiguat ion  
When the parser produces more than one IlJl' for 
a single sentence, it scores these ambiguities ac- 
cording to three diti'e.rent non context-based is- 
aml)iguation inethods. The first method, based 
on (Carroll and Briscoc, 1993), assigns probal)il- 
ities to actions in the (~I,R,* l)arser's 1)arse table. 
The probabilities of the parse actions induce st,a- 
tistical scores on alternative parse trees, which 
are then used for parse disambiguation. The re- 
suiting score is called the slalislical score. The 
second method the parser uses to score the II/l's 
makes use of penalties mammlly assigned to dif- 
ferent rules in the l)arsing grammar,  rl'he result- 
ing score from this method is called the gr'am- 
mar pr'cfercucc score. The third score, called the 
parser score, is a heuristic combination of the pre- 
vious two scores ldUS other information such as 
the number of words skil)ped. These three llOll 
context-based scores will be referred to later when 
we discuss comt)ining non eontext-I)ased l)redic- 
t, ions with context-based ones. 
Error analysis of parser disambiguation output 
shows that the C, IA{* parser handles well ambigu- 
ities which are not strongly dependent upon the 
context for a reasonable interpretation, laBr ex-- 
ample, the Sl)anish word uua can mean either ouc 
or a, as an indefinite reference. The parser always 
chooses the indelinite reference meaning since the 
vast, majority of training examples use this sense 
of the word. Moreover, since in this case incorrect 
disambiguation does not adversely affect transla- 
tion quality, it; ramies sense to handle this ambi- 
guity in a purely non context-based manner. 
3.2 Context -Based  D isambiguat ion  
While a broad range of ambiguities can I)e hal> 
died well in ~ non context-basel\] manner, some 
ambiguities must be treated in a contexl, se, nsi 
tive manner in order to be translated correctly. 
Table 1 lists some examples of these tyt)es of atn-- 
biguities. Each type of ambiguity is categorized 
by COml)aring either difl'erent slots in alternative 
ll;l 's or dilt'erenL values in ambiguous II2F slol.s 
given \[;he same input utteran(;e. 
For example, one. type o1" ambiguity l)est hat> 
dh'd with ~ contextd)ase(I approactl is the day vs 
hour ~md)iguity, exenq)lified by tim phrase dos a 
cua&v. It can mean either Ihc second al J'o'a% 
lhc second lo the Jburlh or lwo go four. Out of 
conte.x|., it is iml)ossil)le to tell which is the I)cst 
intert)retation. (~ontextua.l inlk)rmation makes il; 
possible to choose the correct interpreLal, ion. I?or 
(;xaml)le, if l,h(: sl)eakers are trying to estal)lish a 
dab: when they can meet,, then the sccoud to the 
Jourlh is t;hc most liD~ly itd;erl)retatiotJ. Itowcver, 
359 
Types  o f  Ambigu i ty  Descr ip t ion  
day  vs hour  a tempora l  express ion  can  be 
recogn ized  as a (lay or  all hour  
s ta te  vs qaery - l f  ambigu i ty  between sentence  
type  s ta te  or query - i f  
speaker  re ference ambigu i ty  between pro -drop  
pronouns  
tense  ambigu i ty  between past  tense 
and present  tense  
how vs greet  ambigu i ty  between f rame how 
and greet  
when vs where  ambigu i ty  between when slot 
and  where  slot 
Exa lnp les  
dos  a cuat ro  
second at four  or  
second to four th  or  
two to ,four 
est~ b ien 
I t 's  OK or  
\[s it  OK?  
tambidn  podr \ [a  ese d\ [a  
also i could that day or  
also you  could that day 
d6nde nos encont ramos  
where are we meet ing or  
where were we meet inq 
qu~ tal  
How are you? or  
How is that? 
s?bado  qu ince 
Saturday the f i f teenth or  
Saturday building 15 
Table 1: Examples  of  Context -Sens i t ive  Ambigu i t ies  
if the speakers have already chosen a date and are 
negotiating the exact time of the meeting, then 
only the meaning two to four makes sense. 
Some sentence type ambiguities are also 
context-based. For example, l'Sstd bien can be ei- 
ther the statement It is good or the question Is 
it good?. This is an example of what we call the 
s ta te  vs query- i : f  ambiguity: in Spanish, it is 
impossible to tell out of context, and without in- 
formation about intonation, whether a sentence 
is a statement or a yes/no question. However, if 
the same speaker has just made a suggestion, then 
it is more likely that the speaker is requesting a
response from the other speaker by posing a ques- 
tion. ht contrast, if the previous speaker has just 
made a suggestion, then it is more likely that the 
current speaker is responding with an accepting 
statement than posing a question. 
In generM, we base our context-based predic- 
tions for disambiguation on turn-taking informa- 
tion, the stage of negotiation, and the speakers' 
cMendar information. This information is encoded 
in a set of context-based scores produced by the 
discourse processor for each ILT. 
4 Discourse Processing and 
Disambiguation 
Context-based ranking of ambiguities is per- 
formed by the plan-based iscourse processor de- 
scribed in (Rosd et aL., 1995) which is based on 
(Lambert and Carberry, 1992; Lambert, 1993). 
OriginMly, our discourse processor took as its in- 
put the single best parse returned by the parser. 
q'he main task of the discourse processor was to 
relate that representation to the context, i.e., to 
the plan tree. In generaL, plan inference starts 
from the surface \[brms of sentences. Then speech- 
acts are inferred. Multiple speech-acts can be in- 
ferred for one ILT. A separate inference chain is 
created for each potential speech act performed 
by the associated ILT. Preferences for picking one 
inference chain over another were determined by 
the focusing heuristics, which provide ordered ex- 
pectations of discourse actions given the existing 
plan tree. Our focusing heuristics, described in 
detail in (l{os6 et al, 1995), arc an extension of 
those described in (Lambert, 1993). In determin- 
ing how the inference chain attaches to the plan 
tree, the speech-act is recognized, since each infer- 
ence chain is associated with a single speech-act. 
As mentioned in the introduction, for a plan- 
based disconrse processor to deal with ambigui- 
ties, three issues need to be addressed: 
1. The discourse processor must be able to deal 
with more than one semantic representation 
as input at a time. Note that simply extend- 
ing the discourse processor to accept mul- 
tiple ILTs is not the whole solution to the 
disambiguation problem: finer distinctions 
must be made in terms of coherence with the 
context in order to produce predictions de- 
tailed enough to distinguish between alterna- 
tive LLTs. 
2. Before context-based predictions can be com- 
bined with quantitative non context-based 
predictions, they must be quantified, it 
was necessary to add a mechanism to pro- 
duce more detailed quantifiable predictions 
than those produced by the original focusing 
heuristics described in (Ros6 et al, 1995). 
3. Finally, context-based predictions must be 
combined successfully with non-context- 
based ones. The discourse processor must be 
able to weigh these various predictions in o f  
der to determine which ones to believe in spe- 
cific circumstances. 
Thus, we extended our original discourse pro- 
cessor as follows. It takes multiple ambiguous 
lI,Ts fi'om the parser and computes three quanti- 
fied discourse scores for each ambiguity. The dis- 
course scores are derived by taking into accotmt 
360 
attachment preferences to the discourse tree, as 
reflected by two kinds of focusing scores, and |,he 
score returned by the .qradcd conslrainls, a new 
type of constraint we introduced. Then for each 
ambiguity the discourse processor combines these 
three kinds of context-based scores with the non 
context-based scores l)roduced by other modules 
of the system to make tire final choice, and returns 
the chosen IUI'. As in the first version of the dis- 
course processor, the chosen I I,T is attached to the 
plan tree and a speech act is assigned to it. We 
discuss now how the discourse scores are derived. 
Note that lower wdues for all scores are preferred. 
4.1 Focus ing scores 
The focusing scores are derived from focusing 
heuristics based Ott (Sidner, 198l; l,ambert, 199:f; 
Rosd et al, 1995). The focusing heuristics identify 
the most coherent relationship between a new in- 
ference chain and the discourse |)Inn tree. Atl,ach 
meat preferences by the Focusing heuristics are 
translated into numerical preference scores based 
on attachment positions and the length of the in-- 
ference chains. The assignment of focusing scores 
reflects the assumption thai, the ntost coherent 
move in a diMogue is to continue the most salient 
focused actions, namely, the ones on the rightfl,ost 
frontier of the plan tree. The first feet(sing score 
is a boolean focusing fla(l. It returns 0 if the infer- 
ence chain for the associated 11,'1' attaches t,o the 
rightmost fl'outier of the plan tree, 1 if it either 
attaches to the tree but trot to tit(.', right frontier 
or doesn't attach to the tree. The second focusing 
score, the J'ocusing score i)roper, assigns a score 
between 0 and t indicating \[tow far up the right- 
most frontier the inference chain attaches. The 
maximal score is assigned in the case that the in- 
ference chain does not attach. 
4.2 Graded constra ints  
Once the. discourse processor was extended to ac- 
cept multiple ILTs as input, it became clear that 
Ibr most ambignous parses the original focusing 
heuristics did not provide enough information to 
distinguish among the alternatives. Our sohttion 
was to modity the discourse processor's constraint 
processing mechanism, making it possible to bring 
more domain knowledge to bear on the disam- 
biguation task. In the original discourse proces- 
sor, all of the constraints on plan operators, which 
we (:all elimination constraints, were used solely 
\[or the purpose of binding w~riables and eliminat- 
ing certain inference possibilities. Their purpose 
was to eliminate provably wrong inferences, and 
it, this way to give the focusing heuristics a higher 
likelihood of selecting the torte.c( inference chain 
from the remaining set. 
We introduced a different type of constraint, 
graded conslraints, inspired by the concept of 
graded unification discussed it, (Kim, 1994). Or,- 
like elimination constraints, they neither bind 
variables not" eliminate any inferences. Graded 
constraints always return true, so they cannot 
eliminate inferences. However, they assign numer- 
ical penalties or preferences to inference chains 
based on domain specific information. This in- 
formation is then used to rank the set of possible 
inferences Left after the elimination constraints are 
I)r?cessed. 
For example, consider the day versus hour ambi- 
guity we discussed earlier. In most cases inference 
chains for Ilfl's with this ambiguity have tit(; same 
focusing scores. We introduce the poss ib le - t ime 
constrMnt to (he.ok whether the temporal con- 
straints conflict with the dynamic alendar or the 
recorded dialogue (late when the inference chains 
are built. If the temporal information represented 
in an II,T is in conflict with the dialogue record 
date (e.g., scheduling a time before the record 
date) or with the temporal constraints already in 
the calendar (e.g., propose a time that is ah'eady 
rqiected), a penalty score is assigned to that in- 
ference chain; otherwise, a default value (i.e. no 
penalty) is returned. Several graded constraints 
may be fired in one inference chain. Penalties or 
preferences for all graded constraints in the infer- 
ence chain are summed together. 'Phe result is the 
graded constraint score for that ambiguity. 
Introducing raded constraints has two adwm-- 
tages over adding more elimination constraints. 
As far as tile systetn in ge, neral is COlmerned, 
graded constraints only give preferences, they do 
not rule out inferencing and attachment possibil- 
ities: thtls, introducing new constraints will not 
damage the broad coverage of the system. As far 
as the discourse processor is concerned, it; would 
be possible to achieve the same effect by adding 
more elimination constraints, but this wouht make 
it, necessary to introduce more fine-tuned plan op- 
erators geared towards specilic cases. By intro- 
ducing graded constraints we avoid expanding the 
search space among the plan operators. 
4.3  Combin ing  Predict, ions 
Once the information from the graded constraints 
and the focusing scores is awdlable, the challeng- 
ing problem of combining these context-based pre- 
dictions with tile non context-based ones arises. 
We experimented with two methods of automat-- 
really learning functions for combining our six 
scores into one composite score, namely a ge- 
netic progranmfing approach and a neural net ap- 
proach. The basic assumption of our disambigua~ 
tion approach is that the context-based attd non 
context-based scores provide different perspec- 
tives on the disambiguation task. They act to- 
gether, each specializing in different ypes of cases, 
to constrain the final result. Thus, we want our 
learning approach to learn not only which factors 
are important, but also to what extent they are 
361 
important, and under what circumstances. The 
genetic progranlming and neural net approaches 
are ideal in this respect. 
Genetic programming (Koza, 1992; Koza, 1994) 
is a method for "evolving" a program to accom- 
plish a particular task, in this case a flmction for 
computing a composite score. This technique can 
learn functions which are efficient and humanly 
understandable and editable. Moreover, because 
this technique samples different parts of the search 
space in parallel, it avoids to some extent he prob- 
lem of selecting locally optimal solutions which are 
not globally optimal. 
Connectionist approaches have been widely 
used \['or spoken language processing and other ar- 
eas of computational linguistics, e.g., (Wermpter, 
1994; Miikkulainen, 1993) to name only a few. 
Connectionist approaches are able to learn the 
structure inherent in the input data, to make fine 
distinctions between input patterns in the pres- 
ence of noise, and to integrate difl'erent informa- 
tion sources. 
We refer the reader to (l{osd and Qu, 1995) for 
fall details about the motivations underlying the 
choice of these two methods as well as the advan- 
tages and disadvantages of each. 
both kinds of testing are the same becanse cu- 
mulative error is only an issue for context-based 
approaches. 
Our results show that the discourse processor is 
indeed making nsefld predictions for disambigua- 
tion: when we abstract away the problem of cu- 
mulative error, we can achieve an improvement 
of 13% with the genetic programming approach 
and of 2.5% with the neural net approach over 
the parser's non-context based statistical disam- 
biguatiou technique. For example, we were able to 
achieve almost perfect performance on the s ta te  
vs query - i f  ambiguity, missing only one case 
with the genetic programming approach; thus, for 
this ambiguity, we can trust the discourse proces- 
sor's prediction. 
However, our results also indicate that we have 
not solved the whole problem of combining non 
context- and context-based predictions for disam- 
biguation. \[n the face of cumulative rror, both of 
the two discourse combination approaches uffer 
fl'om performance degradation, though to a dif- 
ferent extent. Our current direction is to seek a 
solution to the cumulative rror problem. Some 
preliminary results in this regard are discussed in 
(Qu et al, 1996). 
5 Eva luat ion  
Both combination methods, the genetic program- 
ming approach and the neural net approach, were 
trained on a set of 15 Spanish scheduling dia- 
logues. They were both tested on a set of five 
previously unseen dialogues. Only sentences with 
multiple ILTs, at least one of which was correct, 
were used as training and testing data. Altogether 
115 sentences were used for training and 76 for 
testing. 
We evaluated the performance of our two meth- 
ods by comparing them to two non context-based 
ones: a baseline method of selecting a parse ran- 
domly, and a Statistical Parse Disambiguation 
method. The Statistical Parse Disambiguation 
method makes use of the three non context-based 
scores described in Section 3. The two context- 
based approaches combine the three non context- 
based scores as well as the three context-based 
scores, namely the focusing flag, the focusing 
score, and the graded constraint score. 
Table 2 reports the percentages of ambigu- 
ous sentences correctly disambiguated by each 
method. We present two types of performance 
statistics on the testing set: without cumulative 
error Testing without CE and with cumulative r- 
ror Testing with CE. Cumulative error builds up 
when an incorrect hypothesis is chosen and incor- 
porated into the discourse context, causing future 
predictions based on discourse context to be in- 
accurate. Notice that for the two non context- 
based approaches, the performance figures for 
6 Conc lus ions  
In this article we have discussed how we apply 
predictions from our plan-based iscourse proces- 
sor to the problem of disambiguation. Our eval- 
uation demonstrates the advantage of incorporat- 
ing context-based predictions into a purely non 
context-based approach. While our results indi- 
cate that we have not solved the whole problem 
of combining non context- and context-based pre- 
dictions for disambiguation, they show that the 
discourse processor is making usefld predictions 
and that we have combined this information suc- 
cessflllly with the non context-based predictors. 
Our current efforts are aimed at solving the cu- 
mulative rror problem in using discourse context. 
We noticed that cumulative rror is especially a 
problem in spontaneous speech systems where un- 
expected inpnt, disfluencies, out-of-domain sen- 
tences and missing information cause the deterio- 
:ration of the quality of context. One possibility is 
to reassess and reestablish the context state when 
a conflict is detected between context and other 
predictions. A second proposal is to keep the n- 
best hypotheses and to choose one only after hav- 
ing processed a sequence of inputs. Preliminary 
experiments show that both t)roposals help reduce 
the adverse ffect of the cumulative rror problem. 
Our results also suggest another possible avenue 
of future development. Instead of trying to learn 
a general function for combining various informa- 
tion sources, we could decide which source of in- 
formation to trust in a particular case and classify 
362 
_ 
I I , l indoin 
Stat ist ical  Parse Bis lunl ) iguat ion 
\[ D\]P gene l le  Progrt l ln l l i i l lg  DP Noltlcal N(!t 
' l~ainixlg \] Test ing without CE 
32% I 45% 
76.5~ / 76 3% 
91.(;% l 89.5% 
s5,2% _\[ 78.8% 
Testing with CE 
45% 
76.3% 
60% 
71 .a% 
'l'~tble 2: Disanf l i iguat ion (if All hn l l l iguous S(;ntencos 
the type of ambiguity at ti;md with the best ap- 
1)ro~tch for thL<s ~mil)iguity. This could be ace, om- 
plished, for exa3nl)h; , with a decision tree le~trning 
~1 )preach. 
Acknowledgements  
The authors would like to thank I,ori Levin, Alert 
I,~vie lind Alex Waibel for COllllllelltS Oi~l the work 
reported here a, tid th;mk the two ~tnoilyiiiOllS re- 
viewers for COllillieAltS eli the, earlier version of t, he 
1)~q)er. The work is supl)orLod in pa, l'l; by ~L gi':~iilt 
\['1'OI11 the l )epa,rt l l le l l t  of  I)e\['ellse. 
l ?e ferences  
Allen, J. F. and 1, K. Schubert. 1991. 7'he Trains 
Project. Ph.I). thesis, University of Rochester, 
,qchool of (7oHipl lter Science. 
(J;~rroll, 3. ~tti(\[ T. Ilriscoe. 1993. (Jenera, l-
ized probabilistic 1,1{, ptu'siiig of natured lal> 
{e, ua,ge ((:orpol'a 0 with unlflc~d;hm-bascd graAu- 
lIl;%l'S. (,*o?ltpnlalioltal Lingnislics, 19(1). 
Sidner, C. \[,. 1981. Focusing for \[nterl)retation f 
\])rono/lllS. dlmcrican Journal of Computational 
Linguistics, 7(4):217 23 I. 
Kim, A. 1994. Graded unitieation: A I)'amework 
for interactive processing. In Proceedings of the 
Association for Computational Linguistics. 
Koza, .1. 1992. Genetic l'~vgramming: On the 
I"tvgramming of Computers by Means of Nalu- 
'ral ,qeleclion. MI'I' Press. 
Koza, a. 1994. Gc.netie Programming 1I. MIT 
Pl'eSS. 
l,~mibert, I,. 1993. Recognizing Complex Dis- 
course Acts: A Tripa;<>titc Plan-Based Model of 
Dialogue. Ph.D. thesis, Department of Coin- 
purer Science, University of l)elaw~-~rc. 
Lambert, L. and S. (Tarl)erry. 1992. Modeling 
negotiation subdialogues, hi Proceedings @ the 
ACL. 
Lavie, A. 19{)5. A Grammar Based Robnsl l'arser 
/,br 5'ponlaneous Speech. I'h.1). thesis, School of 
Computer Science, Carnegie Mellon University. 
Levin, 1,., O. Glickman, Y. Qu, D. Gates, 
A. I,avie, C. P. l{osd, 17 Van Ess-Dykema, and 
A. Waibe\]. 1995. Using context in machine 
translation of spoken l~mgmtge. In Theoretical 
and Methodological Issues in Machine Transla- 
tion. 
Miikkulainen, R,. 1993. ,Sub.symbolic Natural 
Language P~vcessing: An Intcgrated Model of 
,%ripls, Lexicon, and Memory. The M I'F I)ress. 
Qu, Y., B. l)i F, uge, nio, A. I,avie, I,. S. l,evin, ~uid 
C, P. l{os6. 1996. Minimizing Cumulative Er- 
ror in I)iscourse (kmtext. To appear in ICUAI 
Workshop Proceedings on Dialogue f'rocessing 
in ,S'poken Language Systems. 
lh;ithinger, N. ~md E. Meier. 1995. Utilizing st~- 
tisticM diMogue act, t)rocessing in Verbmobil. In 
Proceedings of the A CL. 
Rosd, C. P., B. l) i  Igugenio, L. S. l,evin, mid 
(J. Vl-%ll \ [ ' \ ]ss- l )ykema. 1995. /)iseourse process-  
ing of dialogues with multiph" threads, lit Pro- 
ceedings of the ACL. 
l{,os6, C. P. ~md Y. Qu. 1995. Automatically 
Learning to Use Discourse Information l'br 
I)isambiguation. Center for M~chine 'l'rmisl~- 
tion, (;arnegie Mellon University. '\['echnical R,e- 
port. 
,qiiiith, R. W., l). II,. Hipp, iliid A. W. lJierin~liti. 
1995. An architecture for voice dialogue sys- 
tel\[iS based on prolog-style theoreli+i proving. 
()omputalional Lin(luislics, 21 (3):218 320. 
Suhm, B., 1,. Levin, N. Coccaro, J. CarboneU, 
K. Iloriguehi, R,. Isotani, A. \[mvie, L. Maylield, 
C. |). l{os(, C. Van-Ess Dykcma, ~md A. W~dbel. 
1994. Speech-hmguage integration in a multi- 
lingual speech translation systeni. In Proceed- 
ings of the AAAI Workshop on lnleg#nlion of 
Nalnral Language and ,qpeech Processing. 
Werml)ter , S. 1994. (7onnectionisl, learning of flat 
synt~mtic an,~lysis for speech/language systems. 
In Proceedings of the International ConJerence 
on Artificial Neural Networks. 
Woszeyna, M., N. Coeearo, A. Eisele, A. Lavie, 
A. McNair, '\['. Polzin, I. Regime, C. P. 1?os6, 
T. Slobod~, M. 'Pomita, a. Tsutsumi, N. Waibel, 
A. Waibel, and W. W~rd. 1993. R,ecent ~d- 
vances in JAN US: a speech translation system. 
In l'roceedings of the ARI'A lluman Languages 
7'ethnology Workshop. 
363 
