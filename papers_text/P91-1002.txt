INCLUSION,  D IS JO INTNESS AND CHOICE:  
THE LOGIC  OF L INGUIST IC  CLASS IF ICAT ION 
Bob Carpenter 
Computat iona l  L inguist ics P rogram 
Ph i losophy  Depar tment  
Carnegie  Mel lon Un ivers i ty  
P i t t sburgh ,  PA 15213 
carp~caesar . l c l . cmu.edu 
Carl Pollard 
Linguist ics  Depar tment  
Ohio  Sate Un ivers i ty  
Co lumbus ,  OH 43210 
po l la rd~hpuxa. i rcc .oh io -s t  a te .edu  
Abstract 
We investigate the logical structure of concepts 
generated by conjunction and disjunction over 
a monotonic multiple inheritance network where 
concept nodes represent linguistic categories and 
links indicate basic inclusion (ISA) and disjoint- 
hess (ISNOTA) relations. We model the distinction 
between primitive and defined concepts as well as 
between closed- and open-world reasoning. We ap- 
ply our logical analysis to the sort inheritance and 
unification system of HPSG and also to classifica- 
tion in systemic hoice systems. 
Introduction 
Our focus in this paper is a stripped-down mono- 
tonic inheritance-based knowledge representation 
system which can be applied directly to provide 
a clean declarative semantics for Halliday's sys- 
temic choice systems (see Winograd 1983, Mel- 
lish 1988, Kress 1976) and the inheritance module 
of head-driven phrase-structure grammar (HPSG) 
(Pollard and Sag 1987, Pollard in press). Our in- 
heritance networks are constructed from only the 
most rudimentary primitives: basic concepts and 
ISA and ISNOTA links. By applying general al- 
gebraic techniques, we show how to generate a 
meet semilattice whose nodes correspond to con- 
sistent conjunctions of basic concepts and where 
meet corresponds to conjunction. We also show 
how to embed this result in a distributive lattice 
where the elements correspond to arbitrary con- 
junctions and disjunctions of basic concepts and 
where meet and join correspond to conjunction 
and disjunction, respectively. While we do not 
consider either role- or attribute-based reasoning 
in this paper, our constructions are directly appli- 
cable as a front-end for the combined attribute- 
and concept-based formalisms of Ait-Kaci (1986), 
Nebel and Smolka (1989), Carpenter (1990), Car- 
penter, Pollard and Franz (1991) and Pollard (in 
press). 
The fact that terms in distributive lattices have 
disjunctive normal forms allows us to factor our 
construction into two stages: we begin with the 
consistent conjunctive concepts generated from 
our primitive concepts and then form arbitrary 
disjunctions of these conjunctions. The conjunc- 
tive construction is useful on its own as its result is 
a semilattice where meet corresponds to conjunc- 
tion. In particular, the conjunctive semilattice is 
ideally suited to conjunctive logics such as those 
employed for unification, as in HPSG. 
We will consider the distinction between prim- 
itive and defined concepts, a well-known distinc- 
tion expressible in terminological reasoning sys- 
tems such as KL-ONE (Brachman 1979, Brach- 
man and Schmolze 1985), and its descendants 
(such as LOOM (MacGregor" 1988) or CLASSIC 
(Borgida et al 1989)). We also tackle the va- 
riety of closed-world reasoning that is necessary 
for modeling constraint-based grammars uch as 
HPSG. A similar form of closed-world reasoning 
is supported by LOOM with the disjoint-covering 
construction. 
One of the benefits of our notion of inheritance 
is that it allows us to express the natural seman- 
tics of both systemic hoice systems and HPSG in- 
heritance hierarchies using basic concepts and ISA 
and ISNOTA links. In particular, we will see how 
choice systems correspond to ISNOTA reasoning, 
multiple choices can be captured in our conjunc- 
tive construction and how dependent choices can 
be represented by inheritance. One result of our 
construction will be a demonstration that the sys- 
temic classification and ttPSG systems are variant 
graphical representations of the same kind of un- 
derlying information regarding inclusion, disjoint- 
ness and choice. 
Inheritance Networks 
Our inheritance networks are particularly simple, 
being constructed from basic concepts and two 
kinds of "inheritance" links. 
Definit ion 1 ( Inher i tance Network)  An 
inheritance net is a tuple (BasConc, ISA,ISNOTA) 
lohere: 
? BasConc: a finite set of basic concepts 
? ISA C BasConc x BasConc: the basic inclu- 
sion relation 
? ISNOTA C_ BasConc ? BasConc: the basic dis- 
jointness relation 
The interpretation of a net is straightforward: 
each basic concept is thought of as representing 
a set of empirical objects, where P ISA Q means 
that all P's are Q's and P ISNOTA Q means that 
no P's are Q's. Our primary interest is in the 
logical relationships between concepts rather than 
in the actual extensions of the concepts them- 
selves. This is in accord with standard linguis- 
tic practice, where the focus is on types of utter- 
ances rather than utterance tokens. An example 
of an inheritance network is given in Figure 1. We 
have followed the standard convention of placing 
the more specific elements toward the bottom of 
the network, with arrows indicating the direction- 
ality of the ISA links (for instance, d ISA f and 
b ISNOTA C). 
Y / \  
d e 
/ \ / \  
a b I c 
Figure 1: Inheritance Hierarchy 
We can automatically deduce all of the inclusion 
and disjointness relations that follow from the ba- 
sic ones (Carpenter and Thomason 1990). 
Definit ion 2 ( Inclusion/Dis jo intness)  The 
inclusion relation mA* C BasConc ? BasConc is 
the smallest such that: 
? P ISA* P 
? /f P ISA Q and Q ISA* R 
then P ISA* R 
(Reflexive) 
(Transitive) 
The disjointness relation ISNOTA* C BasConc ? 
BasConc is the smallest such that: 
? /f P ISNOTA Q or Q ISNOTA P 
then P ISNOTA* Q 
? i f  P ISA* Q and Q ISNOTA* R 
then P ISNOTA* R 
(Symmetry) 
(Chaining) 
These derived inclusion and disjointness relations 
express all of the information that follows from the 
basic relations. In particular, ISA* is the smallest 
pre-order extending ISA. For convenience, we al- 
low concepts P such that P ISNOTA* P; any such 
inconsistent concepts are automatically filtered 
out by the conjunctive construction. Similarly, 
we allow concepts P and Q such that P ISA* Q 
and Q ISh* P. In this case, P and Q are merged 
during the conjunctive construction so that they 
behave identically. 
Conjunctions 
A conjunctive concept is modeled as a set P C 
BasConc of basic concepts. A conjunctive concept 
P corresponds to the conjunction of the concepts 
P E P; an object is a P if and only if it is a P for 
every P E P. But arbitrary sets of basic concepts 
are not good models for conjunctive concepts; we 
need to identify conjunctive concepts which con- 
vey identical information and also remove those 
conjunctive concepts which are inconsistent. We 
address the first issue by requiring conjunctive 
concepts to be closed under inheritance and the 
second by removing any concepts which contain a 
pair of disjoint basic concepts. 
Definit ion 3 (Conjunct ive  Concept)  A set 
P C _ BasConc is a conjunctive concept if: 
? i f P  E P and P ISA* P' then P'  E P 
? no P, P~ E P are such that P ISNOTA* P~ 
Let ConjConc be the set of conjunctive concepts. 
10 
There is a natural inclusion or specificity order- 
ing on our conjunctive concepts; if P C Q then 
every object which can be classified as a Q can 
also be classified as a P. The conjunctive concepts 
derived from the inheritance net in Figure 1 are 
displayed in Figure 2, where we have P C Q for 
every derived "ISA" arc Q ---* P.  
{} 
f {Y} 
{d, f} {e, f} / \ / \  
{a,d,f} {d,e,f} {c,e,f} 
{a,d,e,f} {b,d,e,f} {c,d,e,f} 
T:><f  
{a,b,d,e,f} {a,c,d,e,f} 
Figure 2: Conjunctive Concept Ordering 
Def ined  Concepts  
So far, we have considered only primitive basic 
concepts. A defined basic concept is taken to be 
fully determined by its set of superconcepts (in the 
general terminological case with roles, restrictions 
on role values can also contribute to the definition 
of a concept (Brachman and Schmolze 1985)). In 
particular, a defined basic concept P is assumed 
to carry the same information as the conjunction 
of all of the concepts P '  such that P ISA P~. For 
example, consider the basic concept b in Figure 1. 
The conjunctive concept {b, d, e, f} is strictly more 
informative than {d, e, f}; the primitiveness of b 
allows for the possibility that there is information 
to be gained from knowing that an object is a b 
that can not be gained from knowing that it is 
both a d and an e. On the other hand, if we 
assume that b is defined, then the presence of d 
and e in a conjunctive concept should ensure the 
presence of b, thus eliminating the sets {d,e,f}, 
{c, d, e, f} and {a, d, e, f} from consideration, as 
they are equivalent o the conjunctive concepts 
11 
{b,d,e,f}, {b,c,d,e,f} and {a,b,d,e,f} respec- 
tively. In the primitive case, being a d and an e is 
a necessary condition for being a b; in the defined 
case, being a d and e is also a sufficient condition 
for being a b. 
In general, suppose that DefConc C_ BasConc is 
the subset of defined concepts. To account for this 
new information, we add the following additional 
clause to the conditions that P must satisfy to be 
a conjunctive concept: 
(1) If P e DefConc and 
{P~ \[ P~P~andP IsA*  P '}CP  
then P E P. 
With the example in Figure 1 and the assumption 
that DefConc = {b, f}, we generate the conjunc- 
tive concepts in Figure 3. We have adopted the 
condition of only displaying the maximally specific 
primitive concepts of a conjunctive concept, as 
the other basic concepts can be determined from 
these. Note that the assumption that f ,  the most 
(} 
{d} {e} 
{.} {d,e} {c} 
{.,e} {.,c} 
Figure 3: Conjunctive Construction with Defined 
Concepts 
general basic concept, is defined means that ev- 
ery conjunctive concept must contain f ,  because 
the set {P \[ f ~ P and f ISA P} is empty and 
thus a subset of every conjunctive concept. Thus 
{} is equivalent to {f} in terms of conjunctive in- 
formation so that every object is classified as an 
/. 
The set of conjunctive concepts ordered by re- 
verse set inclusion has the pleasant property of be- 
ing closed under consistent meets, where the meet 
operation represents conjunction ("unification"). 
More precisely, a set 79 C ConjConc of conjunc- 
tive concepts is consistent if there is a conjunctive 
concept P which contains all of the concepts con- 
tained in the conjunctive concepts in 7 9 so that 
U 79 C P. The following theorem states that for 
every consistent set 79 of concepts, there is a least 
P such that P __D U 7~- This least P is written II 7 9 
agr 
/ 
n~lm 
per 
\ 
p lu  
sng 
3rd  
1st  
\ 
/ 
gen 
rose  
fem 
neu 
Figure 4: Systemic Choice Network 
and called the meet of 7 ) . 
Theorem 4 The meet in (ConjConc, :D) for a con- 
sistent set 7 9 C_ ConjConc of conjunctive concepts 
is given by: 
n79 
-- N{P '  ? ConjConc I P '  -~ P for each P ? 7 ~} 
= N{P' ? Co.jCor,? I P '  U79} 
= {P ? BasConc I for every P '  ? ConjConc, } 
pi ~ Up  implies P ? pi 
Proof: This is an immediate consequence of the 
fact that ConjConc is closed under arbitrary in- 
tersections. 
Another way to generate the meet of a collection of 
conjunctive concepts is to close their union under 
inheritance and concept definition. It should be 
observed that joins (intersections), while always 
existing, in general represent only informational 
generalizations, not necessarily disjunctions. 
Systemic Choice Systems 
Mellish (1988) showed how the concepts express- 
ible using a systemic hoice network such as that 
found in Figure 4 can be embedded into the lat- 
tice of first-order terms with conjunction repre- 
sented by unification. Our characterization f the 
concepts expressible in a systemic net instead re- 
lies on the translation of systemic notation into 
an inheritance network with IsAand ISNOTA links. 
The resulting conjunctive concepts correspond to 
the concepts that can be expressed in the systemic 
net. An example of a systemic hoice network in 
the notation of Mellish (1988), is Figure 4. The 
connective I, of which there are three in the di- 
agram, signals disjoint alternatives; for instance, 
the connective for gender is taken to indicate that 
a gender must be exactly one of masculine, femi- 
nine or neuter. The connective }, of which there 
is one before gender, indicates necessary precon- 
ditions for a choice; in this case, a gender is only 
chosen if the number is singular and the person 
is third. Finally, the connective {, of which there 
is one labeled agr, indicates that a choice for an 
agreement value requires a choice for both number 
and person. 
We construct an inheritance hierarchy from a 
systemic network by taking a basic primitive con- 
cept for every choice in the network. The choices 
in Figure 4 are those items in bold face; the itali- 
cized items simply label connectives and are only 
for convenience (alternatively, we could take the 
italicized elements to be defined basic concepts). 
The ISNOTA relation between basic concepts is de- 
fined so that P ISNOTA Q if P and Q are connected 
by the choice connective I. For example, we have 
3rd  ISNOTA 1st and msc  ISNOTA neu.  Finally, 
the ISA relation is defined so that if P is one of the 
choices for a connective which has a precondition 
P~ attached to it, then we include P ISA P~. For 
"instance, we have msc ISA sng and msc ISA 3rd. 
In Figure 5, we disply the conjunctive concepts 
12 
{} 
{lst} {3rd} {sng} {plu} 
(lst,sng} {3rd,sng} {lst,plu} {3rd,plu} 
(3rd,sng,msc} (3rd,sng,fem} {3rd,sng, neu} 
Figure 5: Systemic Choices 
generated by the inheritance net stemming from 
the choice system in Figure 4. A fully determined 
choice in a choice system corresponds to a maxi- 
mally specific conjunctive concept, of which there 
are six in Figure 5. 
Sort Inheritance in HPSG 
An example of an HPSG sort inheritance hierarchy 
which represents he same information as the sys- 
temic choice system in Figure 4, in the notation of 
Pollard and Sag (1987), is given in Figure 6. The 
basic principle behind the HPSG notation is that 
the bold elements correspond to basic concepts, 
while the boxed elements correspond to partitions, 
s~called because the concepts in a partition are 
both pairwise disjoint and exhaustive. In terms of 
an inheritance network, the elements of a partition 
(those concepts directly below the partition in the 
diagram) are related by basic ISNOTA links. For 
instance, we would have plu ISNOTA sing. Each 
partition may also have dependencies which must 
be fulfilled for the choice to be made; in our case, 
before an element of the gender partition is chosen, 
singular must be chosen for number and third for 
person. These dependencies generate our basic IsA 
relation. For instance, we must have plu ISA agr 
and fern ISA sng. Carrying out this translation 
of the HPSG notation into an inheritance net pro- 
duces to the same result as the translation of the 
systemic hoice system in Figure 4, thus generat- 
ing the conjunctive concept hierarchy in Figure 5. 
In HPSG, it is useful to allow sorts to be de- 
fined by conjunction. An example is main A 
base A str ict-trans, which classifies the inputs 
to the passivization lexical rule (Pollard and Sag 
1987:211). Translating the example to our sys- 
tem produces a defined conjunctive concept cor- 
responding to the conjunction of those three ba- 
sic concepts. On the other hand, a primitive sort 
such as aux cannot be defined as the conjunction 
of the sorts from which it inherits, namely verb 
and intrans-raising, because auxiliaries are not 
the only intransitive raising verbs. In the hierar- 
chy in Figure 6, it is most natural to consider the 
basic concept agr to be defined rather than prim- 
itive; it could simply be eliminated with the same 
effect. However, in the context of a grammar, agr 
would be one of many possible basic sorts (others 
being boolean, verb-form, etc.) and would thus 
not be eliminable. 
Disjunctive Concepts 
While meets in the conjunctive concept order- 
ing represent conjunction, joins (intersections) do 
not represent disjunction. For instance, {msc} U 
{fern} = {msc} U {neu} = {3rd, sng}, but the 
information that an object is masculine or fem- 
inine is different han the information that it is 
masculine or neuter, and more specific than the 
information that it is simply third-singular. The 
granularity of the original network dramatically 
affects the disjunctive concepts which can be rep- 
13 
agr 
p lu sng  3rd 1st 
rose fern neu  
Figure 6: HPSG Inheritance Network Notation 
resented (see Borgida and Etherington 1989). For 
example, we could have partitioned gender into 
an imate  and neu concepts and then partitioned 
the an imate  concept into msc and fern. This 
move would distinguish the join of msc and fern 
from the join of msc and neu. 
To complete our study of the logic of sim- 
ple inheritance, we employ a well-known lattice- 
theoretic technique for embedding a partial order 
into a distributive lattice; when applied to con- 
junctive concept hierarchies, the result is a dis- 
tributive lattice where concepts correspond to ar- 
bitrary conjunctions and disjunctions of basic con- 
cepts with joins and meets representing disjunc- 
tion and conjunction. 
We model a disjunctive concept as a set 79 C 
ConjConc of conjunctive concepts interpreted is- 
junctively; an object is classified as a 79 just in case 
it can be classified as a P for some P E 79. As with 
the conjunctive concepts, we identify disjunctive 
concepts which convey the same information. In 
this case, we can add more specific concepts to a 
disjunctive concept 79 without affecting its infor- 
mation content. 
Definit ion 5 (Disjunctive Concepts) A sub- 
set 7 9 C ConjConc of conjunctive concepts is said 
to be a disjunctive concept if whenever P ,Q  E 
ConjConc are such that Q D P and P E 7 9 then 
qe79. 
Let DisjConc be the collection of disjunctive con- 
cepts. 
The inclusion ordering between disjunctive con- 
cepts represents specificity, but this time if 79 C_ Q 
then 7 ~ is at least as specific as Q, as Q admits 
as many possibilities as 79. Note that the upper- 
closed sets of a partial ordering form a distributive 
lattice when ordered by inclusion, since it is a sub- 
lattice of a powerset lattice. 
Proposi t ion 6 The structure (DisjConc, C) is a 
distributive lattice. 
Unions (joins) represent disjunctions in in 
DisjConc. Likewise, intersections (meets) repre- 
sent conjunctions. Furthermore, the function ? 
that maps a conjunctive concept P to the dis- 
junctive concept ?(P) = {P' I P' _D P} is an 
embedding of ConjConc into DisjConc that pre- 
serves existing meets, so that ?(P n P') = ?(P) n 
?(P'). Note that this embedding coincides with 
the standard embedding of a domain into its up- 
per (Smyth) powerdomain (Gunter and Scott in 
press), with the only difference being that we have 
reversed the orders of both domains (with the in- 
formationally more specific elements toward the 
bottom), as is conventional in inheritance net- 
works. 
More than 30 disjunctive concepts result from 
the conjunctive concepts in Figure 3, so we will 
not provide a graphic display of the results of the 
disjunctive construction applied to a realistic ex- 
ample (for examples of the general construction, 
see Davey and Priestley 1990). 
Closed World Reasoning 
In HPSG, Pollard and Sag (1987) partition the 
concept sign into two sub-concepts, phrase and 
14 
word. This arrangement generates the conjunc- 
tive concepts {sign}, {phrase} and {word}. 
Applying the disjunctive construction to this 
result, though, gives us a disjunctive concept 
{{word}, {phrase}} which is strictly more infor- 
mative than {{sign}}. This distinction demon- 
strates the open-world nature of our construction; 
it allows for the possibility of signs which are 
neither words nor phrases. This form of open- 
world reasoning is the standard in terminologi- 
cal reasoning systems uch as KL-ONE or CLAS- 
SIC, though LOOM provides a notion of disjoint- 
covering which provides the kind of closed-world 
reasoning we require. 
In dealing with linguistic grammars, on the 
other hand, we clearly wish to exclude any expres- 
sion from signhood that is neither a phrase nor a 
word; these choices are meant o be exhaustive ina 
grammar. The fact that signs can be either words 
or phrases is explicit; what we need is a way to 
say that nothing else can be a sign. 
In general, we require a set ClosConc C BasConc 
of closed concepts to be specified. When con- 
structing the disjunctive concepts, we identify a 
closed concept with the disjunction of its imme- 
diate subconcepts. In particular, we can replace 
every occurence of a closed concept with the dis- 
junction of its immediate subconcepts, sothat {P} 
and {P' \[ P'  IsA P} are identified. Closed con- 
cepts are treated ually to defined concepts; a de- 
fined concept is taken to be the conjunction of its 
immediate superconcepts, while a closed concept 
is identified with the disjunction of its immediate 
subconcepts. The simplest way to achieve this ef- 
fect is to generate the disjunctive concepts from 
the subset of conjunctive concepts which contain 
at least one subconcept of every closed concept 
which they contain. This leads to the following 
restriction: 
(2) 79 E OisjConc only if for every P E 79 and 
P E P f3 ClosConc there is some P~ E P 
such that P~ ISA P 
Thus if sign E ClosConc, we would only consider 
the conjunctive concepts {phrase} and {word}; 
the concept {sign} contains aclosed concept sign, 
but none of its subconcepts. Consequently, the set 
{{sign}} is no longer a disjunctive concept, while 
{{phrase}, {word}} would be allowed (assuming 
for this example that phrase and word are not 
themselves closed). 
In grammar development, i  will often be the 
case that all but the maximally specific concepts 
are closed. In this case, the disjunctive construc- 
tion will produce the boolean algebra with maxi- 
mally specific onjunctive concepts as atoms. Such 
maximally specific conjunctive concepts were sim- 
ply taken as primitive by King (1989), who gener- 
ated a boolean algebra of types corresponding to
disjunctions of maximal concepts. 
Acknowledgements 
We would like to thank Bob Kasper for invaluable 
suggestions. 
References 
A'/t-Kaci, Bassan (1986). An algebraic seman- 
tics approach to the effective resolution of 
type equations. Theoretical Computer Sci- 
ence, 45:293-351. 
Borgida, Alexander; Brachman, Ronald J.; 
McGuinness, Deborah L. and Resnick, Lori 
A. (1989). CLASSIC: A structural data 
model for objects. In Proceedings of 
the SIGMOD International Conference on 
Management of Data, Portland, Oregon. 
Borgida, Alex and Etherington, David W. 
(1989). Disjunction in inheritance hierar- 
chies. In Proceedings of the First Interna- 
tional Conference on Principles of Knowl- 
edge Representation and Reasoning, pages 
33--43. Morgan Kanfmann. 
Brachman, Ronald J. (1979). On the episte- 
mological status of semantic networks. In 
Findler, N., editor, Associative Networks: 
Representation and Use of Knowledge by 
Computers, pages 3-50. Academic Press. 
Brachman, Ronald J. and Schmolze, James G. 
(1985). An overview of the KL-ONE knowl- 
edge representation system. Cognitive Sci- 
ence, 9:171-216. 
Carpenter, Bob (1990). Typed feature struc- 
tures: Inheritance, (in)equations and exten- 
sionality. In Proceedings of the First Inter- 
national Workshop on Inheritance in Nat- 
ural Language Processing, 9-13, Tilburg, 
The Netherlands. 
15 
Carpenter, Bob; Pollard, Carl and Franz, Alex 
(1991). The specification and implementa- 
tion of constraint-based unification gram- 
mars. In Proceedings of the Second Inter- 
national Workshop on Parsing Technology, 
Cancun, Mexico. 
Carpenter, Bob and Thomason, Richmond 
(1990). Inheritance theory and path-based 
reasoning: An introduction. In Kyburg, 
Jr., Henry E.; Loui, Ronald P. and Carl- 
son, Greg N., (ed.), Defeasible Reasoning 
and Knowledge Representation, volume 5 
of Studies in Cognitive Systems, 309-344. 
Kluwer. 
Davey, B.A. and Priestley, H.A. (1990). Intro- 
duction to Lattices and Order. Cambridge 
University Press. 
Flickinger, Daniel; Pollard, Carl J. and Wa- 
sow, Thomas (1985). Structure-sharing in 
lexical representation. I  Proceedings of the 
~3rd Annual Conference of the Association 
for Computational Linguistics. 
Gunter, Carl and Scott, Dana S. (in press). Se- 
mantic domains. In Theoretical Computer 
Science. North-Holland. 
Kasper, Robert T. (1989). Unification 
and classification: An experiment in 
information-based parsing. In First Inter- 
national Workshop on Parsing Technolo- 
gies, 1-7. Pittsburgh. 
King, Paul (1989). A Logical Formalism for 
Head-Driven Phrase Structure Grammar. 
PhD thesis, University of Manchester. 
Kress, Gunther (ed.) (1976) Halliday: System 
and Function in Language. University of 
Oxford Press. 
MacGregor, Robert (1988). A deductive pat- 
tern matcher. In Proceedings of the 1988 
National Conference on Artificial Intelli- 
gence, pages 403-408, St. Paul, Minnesota. 
Mellish, Christopher S. (1988). Implement- 
ing systemic lassification via unification. 
Computational Linguistics, 14:40-51. 
Nebel, Bernhard and Smolka, Gert (1989). 
Representationa dn reasoning with attribu- 
tive descriptions. IWBS Report 81, IBM - 
Deutschland GmbH, Stuttgart. 
Pollard, Carl J. (in press). Sorts in unification- 
based grammar and what they mean. In 
Pinkal, M. and Gregor, B., editors, Unifi- 
cation in Natural Language Analysis. MIT 
Press. 
Pollard, Carl J. and Sag, Ivan A. (1987). 
Information-Based Syntax and Semantics: 
Volume I - Fundamentals, volume 13 of 
CSLI Lecture Notes. Chicago University 
Press. 
Winograd, Terry (1983). Language as a Cogni- 
tive Process: Volume I - Syntax. Addison- 
Wesley. 
18 
