Two Accounts of Scope Availabil ity and Semantic 
Underspecif ication 
Al i s ta i r  Wi l l i s  and  Suresh  Manandhar ,  
Department of Computer Science, 
University of York, 
York Y010 5DD, UK. 
{agw, suresh}@cs, york .  ac.  uk 
Abst rac t  
We propose a formal system for representing the 
available readings of sentences displaying quan- 
tifier scope ambiguity, in which partial scopes 
may be expressed. We show that using a theory 
of scope availability based upon the function- 
argument structure of a sentence allows a deter- 
ministic, polynomial time test for the availabil- 
ity of a reading, while solving the same problem 
within theories based on the well-formedness 
of sentences in the meaning language has been 
shown to be NP-hard. 
1 In t roduct ion  
The phenomenon of quantifier scope ambigu- 
ity has been discussed extensively within com- 
putational and theoretical linguistics. Given a 
sentence displaying quantifier scope ambiguity, 
such as Every man loves a woman, part of the 
problem of representing the sentence's meaning 
is to distinguish between the two possible mean- 
ings: 
Vx(ma (x) -+ 3y(woma (y) A lo e(x, y))) 
where every man loves a (possibly) different 
woman, or 
where a single woman is loved by every man. 
One aspect of the problem is the generation of 
all available readings in a suitable representa- 
tion language. Cooper (1983) described a sys- 
tem of "storing" the quantifiers as A-expressions 
during the parsing process and retrieving them 
at the sentence level; different orders of quan- 
tifier retrieval generate different readings of the 
sentence. However, Cooper's method generates 
logical forms in which variables are not correctly 
bound by their quantifiers, and so do not cor- 
respond to a correct sentence meaning. This 
problem is rectified by nested storage (Keller, 
1986) and the Hobbs and Shieber (1987) al- 
gorithm. However, the linguistic assumptions 
underlying these approaches have recently been 
questioned. Park (1995) has argued that the 
availability of readings is determined not by the 
well-formedness of sentences in the meaning lan- 
guage, but by the function-argument relation- 
ships within the sentence. His theory proposes 
that only a subset of the well-formed sentences 
generated by nested storage are available to a 
speaker of English. Although the theories have 
different generative power, it is difficult to find 
linguistic data that convincingly proves either 
theory correct. 
In the absence of persuasive linguistic data, 
it is reasonable to ask whether other grounds 
exist for choosing to work with either of the 
two theories. This paper considers the appli- 
cation of both theories to the problem of un- 
derspecified meaning representation, and the 
question of determining whether a set of con- 
straints represents an available reading of an 
ambiguous entence or not. We show that a 
constraint language based upon Park's linguis- 
tic theory (Willis and Manandhar, 1999) solves 
this problem in polynomial time, and contrast 
this with recent work based on dominance con- 
straints which shows that using the more per- 
missive theory of availability to solve the same 
problems leads to NP-hardness. 
2 Underspec i f i ca t ion  
A recent area of interest has been with under- 
specified representations of an ambiguous en- 
tence's meaning, for example, Quasi-Logical 
Form (QLF) (Alshawi and Crouch, 1992) and 
Underspecified Discourse Representation The- 
293 
ory (UDRT) (Reyle, 1995). We shall charac- 
terise the desirable properties of an underspec- 
ified meaning representation as: 
1. the meaning of a sentence should be rep- 
resented in a way that is not committed to 
any one of the possible (intended) meanings 
of the sentence, and 
2. it should be possible to incrementally intro- 
duce partial information about the mean- 
ing, if such information is available, and 
without the need to undo work that has 
already been done. 
A principal aim of systems providing an un- 
derspecified representation f quantifier scope is 
the ability to represent partial scopings. That 
is, it should be possible to state that some of 
the quantifiers have some scope relative to each 
other, while remaining uncommitted to the rel- 
ative scope of the remaining quantifiers. How- 
ever, representations which simply allow partial 
scopes to be stated without further analysis do 
not adequately capture the behaviour of quanti- 
tiers in a sentence. Consider the sentence Every 
representative of a company saw most samples, 
represented in the style of QLF: 
_:see(<+i every x _:rep.of(x, 
<+j exists y co(y)>)>, 
<+k most z sample(z)>) 
A fully scoped logical form of this QLF is: 
\[+i,+k,+j\] :see(<+i every x rep.of(x,  
<+j exists y co(y)>)>, 
<+k most z sample(z)>) 
where the list of quantifier labels indicates the rela- 
tive scope of qnantifiers at that point in the sentence. 
Although this formula is well formed in the QLF 
language, it does not correspond to a well formed 
sentence of logic, seeming closer to the formula: 
every (x, rep. of (x, y), most (z, sample (z), 
exists(y, co(y), see(x, z)))) 
where the variable y does not appear in the 
scope of its quantifier. A language such as 
QLF will generally allow this scoping to be ex- 
pressed, even though it does not correspond to 
a reading available to a speaker. In QLF se- 
mantics, a scoping which does not give rise to 
any well formed readings is considered "uninter- 
pretable"; ie. there is no interpretation i  which 
an evaluation function maps the QLF onto a 
truth value. 
Our aim is to present a system in which 
there is a straightforward computational test of 
whether a well-formed reading of a sentence x- 
ists in which a partial scoping is satisfied, with- 
out requiring recourse to the final logical form. 
The language CLLS (Egg et al, 1998) has re- 
cently been developed which correctly generates 
the well-formed readings by using dominance 
constraints over trees. Readings of a sentence 
can be represented using a tree, where domi- 
nance represents outscoping, and quantifiers are 
represented using binary trees whose daughters 
correspond to the quantifiers' restriction and 
scope. So for the current example, Every repre- 
sentative of a company saw most samples, the 
reading: 
every(x, a(y, co(y), rep.o f ( x, y ) ), 
most(z,  sample(z), see(x, z) ) ) 
can be represented by the tree in figure 1, where 
the restrictions of a and most have been omitted 
for clarity. Domination in the tree represents 
outscoping in the logical form. 
every / /~  
a ? ? most  
I I rep.o f ? ? see 
Figure 1: Representing relative scope as a tree 
Underspecification can be captured by defin- 
ing dominance constraints between nodes rep- 
resenting the quantifiers and relations in a sen- 
tence. Readings of the sentence with a free 
variable are avoided by asserting that each re- 
lation containing a variable must be dominated 
by that variable's quantifier, and an available 
reading of the sentence is represented by a tree 
in which all the dominance constraints are sat- 
isfied. So the ill-formed readings of the sen- 
tence can be avoided by stating that the relation 
rep.of is dominated by the restriction of every 
and the scope of a, while see is dominated by the 
scopes of both a and most. This is represented 
in figure 2, where the dominance constraints are 
illustrated by dotted lines. 
Further partial scope information can be 
introduced with additional dominance con- 
straints. So the partial scope requirement that 
294 
? Root jy: : ............... 
every ? ~ a ? most  
i/%. 
, - 
rep.of" .  "-~ see 
Figure 2: Representing available scopes with 
dominance constraints 
most should outscope very would be captured 
by a constraint stating that the node represent- 
ing most should dominate the node representing 
every in the constraints' olution. 
It is has been shown (Koller et al, 1998) that 
determining the consistency of these constraints 
is NP-hard. In the rest of this paper, we show 
that an alternative theory of scope availability 
yields a constraint system that can be solved in 
polynomial time. 
3 A l te rnat ive  Account  o f  
Ava i lab i l i ty  
The NP-hardness result of the previous ection 
arises from the assumption that the availability 
of scopings is determined by the well formedness 
of the associated logical forms. Park (1995) has 
proposed an alternative theory of scope avail- 
ability which states that available scopes are 
accounted for by relative scopes of arguments 
around relations, whereby quantifiers may not 
move across NP boundaries. For example, con- 
sider the sentence Every representative of a 
company saw most samples, containing two rela- 
tions, saw and of. Around saw, every (represen- 
tative of a company) can outscope most (sam- 
ples), or vice versa, and around of, every (rep- 
resentative) can outscope a (company), or vice 
versa. Park generalises this observation to the 
claim that for any n-ary relation in a sentence, 
there are n! possible orderings of quantified ar- 
guments around that relation. Other quanti- 
tiers in the sentence should not "intercalate" be- 
tween those which are single arguments to a re- 
lation. So in the example sentence there are four 
possible scopes, because there are 2! = 2 scop- 
ings around saw and 2! = 2 scopings around 
of. What is not possible is a reading where a 
outscopes most which outscopes every; although 
this can be represented by a well formed sen- 
tence of logic (with no unbound variables), it is 
not available to a speaker of English. 
By using this theory as the basis of under- 
specification, we can say: 
? underspecification is to be captured by al- 
lowing different possible relative scope as- 
signments around the predicates, and 
? partial scopes between arbitrary quanti- 
tiers in the sentence will be translated into 
the equivalent scoping of quantifiers around 
their predicates. 
The chosen representation will be based upon a 
sentence's quantifiers and relations (for exam- 
ple, verbs and prepositions). 
Quantifiers and the relations which determine 
their relative scope are represented by a set of 
elements under a strict partial order, where the 
ordering represents he relative scopes. A strict 
order will be taken to be transitive, antisym- 
metric and irreflexive. However, because the 
interaction between the predicates in the sen- 
tence has implications for possible scopings, it 
is also necessary to consider the relationships 
between the ordered sets. 
Consider again the sentence Every man loves 
a woman. The quantifiers and relation in this 
sentence can be represented by a set of elements 
{every, a, love}. A strict partial order, ~-, is de- 
fined over the set which states that the relation 
love must be outscoped by both quantifiers: 
({every, a, love}, (every ~- love, a ~- love)) 
The partial order states that both quantifiers 
outscope the verb, but says nothing about their 
scopes relative to each other. This represents a 
completely underspecified meaning. An unam- 
biguous reading of the sentence is represented 
when ~- defines a total order on the set. So if 
the relation every ~- a were added, the reading: 
Vx.man(x)  --~ 3y.woman(y)  A love(x, y) 
every ~- a ~- love 
would be represented. Alternatively, adding 
a ~- every to the underspecified form would rep- 
resent he reading: 
3y.woman(y)  A Vx.man(x)  -+ love(x, y) 
a ~- every ~- love 
295 
The introduction of a further relation which 
does not lead to a well formed sentence (such 
as love ~- every) is shown by the irreflexivity of 
~- being violated. 
While using a single set of elements correctly 
accounts for the possible scopes of quantifiers in 
the sentences discussed so far, relative clauses 
and prepositional ttachment to NPs are more 
complex. Consider the sentence Every repre- 
sentative of a company saw most samples. The 
presence of two binary relations, of and saw, 
implies that there should be 2!.2! -- 4 readings. 
Continuing with the system developed so far, 
these possibilities could be represented by a pair 
of strictly partially ordered sets: 
({every, most, see} , (everyNsee ,  most Nsee))  
({every, a, of},  (every ~' of, a ~' of)) 
where the four possible ways of completing the 
strict orders on the sets correspond to the four 
available readings. To represent relative scope 
between arbitrary quantifiers in the sentence, 
a further transitive relation, .>, is defined. Say 
that if (S, ~-) is a strictly partially ordered set in 
the structure where x, y E S and x ~- y then x .> 
y. So for example, consider the pair of strictly 
partially ordered sets: 
({every, most, see} , (every~most~see) )  
({every, a, of},  (a ~' every ~-' of)) 
which would represent the reading (in a format 
similar to generalised quantifiers): 
a(y, every(x, rep.of(x, y), 
most(z, sample(z), see(x, z)))) 
The orders on the sets state that every .:> most 
see and a .> every .:> of,  and from the transi- 
tivity of .> it can be inferred (correctly) that 
a .:> most. Similarly, given the ambiguous en- 
tence and the partial scope requirement that 
a should outscope most, the required partial 
scope can be obtained by adding the relations 
a ~-~ every and every ~- most. 
The transitivity of .> is not enough to cap- 
ture all the available scope information. Sup- 
pose it were required that most should outscope 
a. There are two readings of the sentence which 
satisfy this partial scope, those being: 
most(z, sample(z), 
every(x, a(y, co(y), rep.of (x, y)), see(x, z))) 
and 
most(z, sample(z), a(y, co(y), 
every(x, rep.oI (x, y), see(x, z)))). 
These readings are precisely those for which the 
object of see outscopes its subject; the partial 
scope is captured by the pair: 
({every, most, see}, (most ~- every ~- see)) 
({every, a, of},  (every ~-' of, a ~-' of)) 
where there is no additional information about 
the relative scope of every and a. However, the 
transitivity of -> alone does not capture the fact 
that most .:> a follows from most .:> every. 
We remedy this by defining a domination re- 
lation. In the current case, say that every dom- 
inates a, which means that a is nested within 
the QNP whose head quantifier is every. Then 
because quantifiers may not "intercalate" across 
NP boundaries, anything that outscopes every 
also outscopes anything that every dominates 
(here, a); if most outscopes one it must outscope 
both. We capture this behaviour by putt ing 
the sets into a tree structure, where each of the 
nodes is one of the strictly ordered sets repre- 
senting the scopes around a relation. For any 
node, N, each of the daughter nodes has (ex- 
actly) one element in common with N, oth- 
erwise, any element appears only once in the 
structure. So, consider again the sentence Ev- 
ery representative of a company saw most sam- 
ples. The scope information of the underspeci- 
fled form is represented by the tree: 
({every, most, see}, (every see, most see)) 
/ 
({every, a, o f} , (every  ~-' of, a ~' of)) 
Now, say that an element X dominates another 
element Y (denoted as X ~-~ Y) if X and Y are 
(distinct) elements in a set at some node, and X 
is also in the parent node. Also, ~-+ is transitive 
and irreflexive. So in the example given: 
every ~-+ a and every ~ o f ,  
but every ~-+ every. 
We can now extend the definition of -> by 
saying that: 
296 
if (P,~-) is a node in the tree, and 
x, y E P and x ~- y, then x.>y and x.>z 
where z is any term that y dominates. 
Also, .> is transitive and irreflexive. 
This captures the scoping behaviour for nested 
quantifiers. So from the ambiguous representa- 
tion of scopes: 
({every, most, see}, (most every see)) 
I 
({every, a, of}, (every of, a of)) 
where most ~-- every and every ~ a, it is pos- 
sible to infer correctly that most .> a, whatever 
the relation is between every and a. 
4 Formal  Def in i t ion  o f  Scope  
Representat ions  
We now provide a formal description of the 
structures described in section 3. The defini- 
tion is divided into two parts. First a scope 
structure is defined, which is a tree structure 
whose nodes are sets under a strict order and 
describes the correct possible scopings of quan- 
tiffed arguments around their relations. Next, a 
scope representation is defined, which is the pair 
of a scope structure and an outscoping relation, 
? >, which is defined over all the elements in the 
structure. 
The analysis presented here differs from that 
of the previous section in that the nodes in 
the scope ~ structures are sets under a strict to- 
tal order, rather than under a partial order. 
The structures therefore represent unambigu- 
ous readings of the sentence. Underspecifica- 
tion will then be captured in the constraint lan- 
guage, rather than in the underlying structures, 
as discussed in section 5. 
A scope structure is a finite tree, where each 
node of the tree is a finite, non-empty set of el- 
ements, P, taken from a set (9 = {a,/~,-),,...} 
under a strict total order. For any node, each 
daughter node is also a strictly ordered set, such 
that each daughter set di has exactly one el- 
ement in common with P, a different element 
for each of the di. An element can only appear 
once in the tree, unless it is the common node 
between a mother and a daughter. So: 
is a correct scope structure, because no element 
appears twice except c~ and 8, which appear in 
mother/daughter pairs (the ordering relations 
have been omitted for clarity). 
A scope structure is defined as a triple (P, ~- 
, :D), where P is a set of elements, ~- is a strict 
total order over P and 7:) is the set of daughters. 
We say that an element occurs in a scope struc- 
ture if it is a member of the set at any node in 
the scope structure. If (9 is a (countable) set 
of elements, then scope structures can be recur- 
sively defined as: 
? If S = (Ps, >-s, {}), where Ps is a finite, 
non-empty subset of (9 and >-s is a strict 
total order on Ps, then S is a scope struc- 
ture, where: 
1. if x E Ps, then x occurs in S, 
? If R and S are scope structures uch that 
R = (PR, ~R, DR) and S = (Ps, ~-s, :DS), 
where no element occurs in both R and 
S, and there is some element a such that 
a E Pn, then if T = (PT, N'T,~T), where 
PT = {a} t2 Ps, T~T = {R} U :Ds and ~-T is 
a strict total order on PT then T is a scope 
structure, where: 
1. If some element x occurs in either R 
or S then x occurs in T 
2. If some element x occurs in R and x 
a, then a dominates x in T 
3. If x and y occur in R and x dominates 
y in R then x dominates y in T 
4. If x and y occur in S and x dominates 
y in S then x dominates y in T 
If S is a scope structure, then a node in S is 
defined as: 
? If S is a scope structure such that S -- 
(Ps, >-s, T~S), then: 
- (Ps, >'-s) is a node in S 
- if di E :Ds, then any node in di is a 
node in S. 
Having defined scope structures, we now de- 
fine a scope representation, which is a pair 
iS, ">s), where S is a scope structure and ">s is 
a relation between pairs of elements which oc- 
cur in S. ">s represents outscoping between any 
297 
pair of elements in the structure, rather than 
just between elements at a common node. 
If S is a scope structure such that S = 
(Ps ,~-s ,7 )s ) ,  then (S, >s)  is a scope represen- 
tation, where ">s is the min imum relation such 
that: 
* If (P, ~-p) is a node in S and x, y E P and 
x N-p y, then x ">s Y. 
? If (P, ~-p) is a node in S and x, y E P and 
x ~-p y, then i fz is an element which occurs 
in S and y dominates z in S then x ">s z. 
? ">s is transitive. 
If (S, ">s) is a well formed scope representation, 
then ">s is a strict partial order over the set of 
elements which occur in S. 
5 Const ra in ts  fo r  Scope  
Underspec i f i ca t ion  
We now consider a constraint language for rep- 
resenting the available scopes in a sentence. The 
structure of the sentence can be defined in terms 
of common arguments to a relation (which is 
represented by membership of a common set in 
the scope structure) and the domination rela- 
tion. The constraint language is: 
?, ? ::= x o y Common set membership 
x ?--+ y Domination 
x D y Outscoping 
~b A ? Conjunction 
where x, y are members of a (countable) set of 
constants, COAl  = {x, y, z, . . . }. 
It is intended that these constraints be de- 
fined over terms in an underspecified semantic 
representation, such as QLF or UDRT, with a 
function mapping grammatical objects in the 
representation onto members of CON.  Repre- 
senting the quantifiers and relations in the sen- 
tence is sufficient for our current needs. Con- 
straints of the form x o y (where o is symmetric) 
state either that x and y represent common ar- 
guments to a relation, or that x and y represent 
a relation and a quantifier which quantifies over 
it. Constraints of the form x ~-4 y indicate that 
x is the head quantifier of a complex NP, in 
which y, another grammatical object (either a 
quantifier or a relation), is nested. 
So for example, consider again the sentence 
Every representative of a company saw most 
samples, and assume that terms in the un- 
derspecified representation representing the the 
grammatical objects every, exists, most, rep.of 
and see map onto the elements e, a, m, o and s 
respectively, where {e, a, m, o, s} C CON.  Then 
the constraint representing the fully underspec- 
ified meaning is: 
eosAmosAeomAsoeAsomAmoe 
A 
eooAaooAeoaAooeAooaAaoe 
A 
e c-~ a A e ~-+ o 
A 
ei> sAe~oAmi> sAaDo 
Note that the symmetry of o is stated explic- 
itly in the constraint. The (underspecified) con- 
straint is generated either from the grammar 
or directly from the underspecified structure, so 
the inference rules for determining the availabil- 
ity of a partial scope only generate constraints 
of the form X t> Y. These rules are discussed 
further in section 6. Underspecification is now 
captured within the constraint language; note 
the parallels between the constraints of the form 
X t> Y in this example and the partial orders 
used in section 3. 
The satisfiability of the constraints is given 
in terms of the scope representations defined in 
section 4. A scope representation, (S, ">s), sat- 
isfies a constraint of the form X o Y if (P, >-p) 
is a node in S such that X',  Y' E Ps,  X '  # Y ' ,  
where some assignment function maps X and 
Y onto X '  and Y'. Similarly, constraints of the 
form X ~-+ Y are satisfied if X '  dominates Y' 
in S, and constraints of the form X D Y are 
satisfied if X '  ">s Y'. So the above constraint is 
satisfied by a set of scope structures of the form: 
({every,  most ,  see}, >-) 
/ 
({every,  a, o f} ,  ~-') 
where the assignment function maps the con- 
stants e,a ,m,o  and s onto the elements 
every,  a, most ,  o f  and see respectively, and 
where every ~- see, most  ~- see, every ~-' o f  
and a ~-' o f .  
We can now define the semantics for the con- 
straint language. An assignment function, I\[-~/, 
maps constants of the constraint language onto 
298 
elements which occur in S and wffs of the con- 
straint language onto one of the pair of values 
{t , f} .  I is a pair ((I),~4}, where (I) is a scope 
representation, such that (I) = (S, ">s}, and .4 is 
a function mapping constants of the constraint 
language onto the set of elements which occur 
in S. The denotation of the constraints i then 
given by: 
? IX~ I -= ,A(X) if X is a constant in the 
constraint language. 
? IXoY \ ]  I = t if there is a node in S, (P, N-p), 
such that IX~ I E P and \[\[y\]\]/ E P and 
\[\[X\]\]I ~ \[\[y\]\]1, otherwise IX  o y \ ] I  = f .  
? IX  ~ y \ ] I  = t if IX~ I dominates ~y~I in 
S, otherwise IX  ~-+ y~I  = f .  
? IX  ~> Y~I = t if IZ\ ]  I >s lynX, otherwise 
otherwise \[\[? A ?\]\]" ---- f .  
Satisfiability A constraint set, A, is satisfiable 
iff there is at least one I such that I?~ / = t 
for all constraints ? where ? E A. 
The satisfiability of a constraint set represents 
the existence of a reading of the sentence which 
respects the partial scoping. 
6 Ava i lab i l i ty  o f  Partial Scopes 
We now turn to the question of determining 
whether a partial scoping is available. In sec- 
tion 3 it was stated that scope availability is 
accounted for by the relative scope of quanti- 
tiers around their predicates. It turns out (al- 
though we do not prove it here) that for any 
partial scoping, there is a necessary and suffi- 
cient set of scopings of quantifiers around their 
relations that gives the partial scoping. For ex- 
ample, we showed that for the sentence Every 
representative of a company saw most samples, 
the readings where most outscopes a are exactly 
those where the subject of see outscopes its ob- 
ject. Therefore, from the constraint most C> a, 
it should be possible to infer most E> every. The 
aim of the constraint solver is to determine what 
scopings of quantifiers about their relations are 
required to obtain the required partial scoping, 
and therefore to state whether the partial scope 
is available. 
A set of rules is defined on the constraints, 
so that additional scope information may be in- 
ferred. The introduction of further scope con- 
straints does not affect scope information al- 
ready present (monotonicity). The rules are 
given in figure 3, where F represents any con- 
junction of literals and the associativity and 
commutativity of A are assumed. The infer- 
ence rules S1, $2 and $3 operate by recursively 
reducing the (arbitrary) outscoping constraint 
X~>Z to X I>YAYE>Y~,  where Y and Y~ 
represent arguments to a common relation, and 
Y' either dominates or is equal to Z. Repeated 
application of these constraints gives the set of 
scopes of quantifiers around their relations for 
the initial partial scoping. The rules Trans 
and Dora then generate the remaining possible 
scope constraints. If a scope is unavailable, then 
completing the transitive closure of D across the 
structure yields a constraint of the form X ~> X. 
We then say that: 
? A constraint set is in normal \]orm iff ap- 
plying the rules S1, $2, $3, Trans and Dom 
does not yield any new constraints. 
If F is a constraint set in normal form then: 
? F represents an available scoping iff it does 
not contain a constraint of the form X ~> X. 
? F represents a complete scoping iff it rep- 
resents an available scoping, and for every 
constraint of the form X o Y there is either 
a constraint X D Y or a constraint Y D X. 
The condition for a scoping to be available fol- 
lows from the irreflexivity of ->. The condition 
for a scoping to be complete states that if two 
elements are arguments to a relation, or are a re- 
lation and one of its arguments, then they must 
have scope relative to each other. This corre- 
sponds to considering sets under a total order, 
rather than under a partial order. 
Complex i ty  Issues Let F be a constraint 
representing an available scoping of a sentence, 
and let X~>Y be a constraint representing a par- 
tial scope between two terms in that sentence. 
Then the worst case of applying the inference 
rules to F A X ~> Y to saturation turns out to 
be equivalent o completing the transitive clo- 
sure of i>, which is known to be soluble in better 
than O(n 3) time (Cormen et al, 1990), where 
n is the number of elements in the structure. 
299 
S1 : 
$2 :  
$3 : 
Trans: 
Dora: 
F AX  oY  AX ~ Xt AXtC> Y F X ~> Y AXtC> X 
F A X o Y A Y ?-4 Y'  A X t> Yt I- X i:> Y 
F AX oY  AX ,--~ X~ AY , -+ YI AXIC> y '~-X 'D  X AXC> Y 
F AX t> Y AYt> Z~- X c> Z 
F AX o Y AX ~> Y A Y c-.+ Zt -  X t> Z 
where F is any conjunction of literals. 
Figure 3: Rules of inference 
Application of rules $1, $2 and $3 to comple- 
tion can be completed in linear time; if X i> Y 
is a constraint between two arbitrary quanti- 
tiers X and Y where X fi Y, then exactly one 
of the rules S1, $2 or $3 applies (lack of space 
prevents us proving this here). If X o Y, then 
none of these three rules applies. Application of 
S1, $2 or $3 adds at most two new constraints, 
of which at most one is a scope constraint XC>Y ~ 
where X fi Y~. At most n - 1 such constraints 
are generated. 
Application of the rules S1, $2 and $3 re- 
duces an arbitrary partial scope into relative 
scopes of arguments around their relations. If 
a scoping is unavailable, this is represented by 
the irreflexivity of C> being violated. Testing for 
this requires that the transitive closure of C> be 
completed; this is known to be soluble in better 
than cubic time. We conclude that testing for 
the availability of a partial scope in this frame- 
work can be achieved in better than cubic time 
in the worst case. 
7 Conc lus ion  and  Comments  
A desirable property for an underspecified rep- 
resentation ofquantifier scope ambiguity is that 
there should be a computationally efficient est 
for whether a partial scope is available or not. 
We have shown that accepting a theory of avail- 
ability which states that scope availability is de- 
termined by the function-argument structure of 
a sentence allows the development of a test for 
availability which is polynomial in the number 
of quantifiers and relations in a sentence, while 
theories of availability based upon the logical 
well-formedness of meaning representations has 
been shown to be NP-hard. 
Acknowledgements  The authors would like 
to thank Alan Frisch, Mark Steedman and three 
anonymous reviewers for useful comments. The 
first author is funded by an EPSRC grant. 
Re ferences  
H. Alshawi and R. Crouch. 1992. Monotonic 
Semantic Interpretation. In Proceedings of 
the 30th Annual Meeting of the ACL, pages 
32-39, Newark, Delaware. 
R. Cooper. 1983. Quantification and Syntactic 
Theory. Reidel. 
T. Cormen, C. Leiserson, and R. Rivest. 1990. 
Introduction to Algorithms. The MIT Press, 
Cambridge, Massachusetts. 
M. Egg, J. Niehren, P. Ruhrberg, and F. Xu. 
1998. Constraints over lambda-structures in 
semantic underspecification. In Proceedings 
of the 17th International Conference on Com- 
putational Linguistics and 36th Annual Meet- 
ing of the A CL, Montreal, Canada. 
J. Hobbs and S. Shieber. 1987. An algorithm 
for generating quantifier scopings. Computa- 
tional Linguistics, 13. 
W. Keller. 1986. Nested Cooper storage: 
The proper treatment of quantification in 
ordinary noun phrases. In U. Reyle and 
C. Rohrer, editors, Natural Language Parsing 
and Linguistic Theory, Studies in Linguistics 
and Philosophy, pages 432-437. Reidel. 
A. Koller, J. Niehren, and R. Treinen. 1998. 
Dominance constraints: Algorithms and com- 
plexity. In Third International Conference on 
Logical Aspects of Computational Linguistics 
(LA CL '98), Grenoble, France. 
J.C. Park. 1995. Quantifier scope and con- 
stituency. In Proceedings of the 33rd Annual 
Meeting of the Association for Computational 
Linguistics, pages 205-212. Cambridge, MA. 
U. Reyle. 1995. On reasoning with ambiguities. 
In Proceedings of the EA CL, Dublin. 
A. Willis and S. Manandhar. 1999. The avail- 
ability of partial scopings in an underspeci- 
fled semantic representation. In 3rd Interna- 
tional Workshop on Computational Seman- 
tics, Tilburg, the Netherlands, January. 
300 
