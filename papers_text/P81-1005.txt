PHONY: A Heurist ic Phonological Analyzer* 
Lee A. Becket 
Indiana University 
DOMAIN AND TASK 
PHONY is a program to do phonological  
analysis. Within the generative model of 
grammar the function of the phonological  
component is to assign a phonetic 
representat ion to an utterance by modifying 
the underlying representat ions (URs) of its 
const ituent morphemes. Morphemes are the 
minimal meaning units of language, i.e. the 
smallest units in the expression system 
which can be correlated with any part of the 
content system, e.g. un+tir+ing+ly. URs are 
abstract entit ies which contain the 
idiosyncratic information about 
pronounciat ions of morphemes. 
(1) 
PHONOLOGICAL 
Underlying COMPONENT Phonetic 
Representat ions . . . . . . . . . . . .  > Representat ions 
(URs) (rules) 
Phonological analysis attempts to determine 
the nature of the URs and to discover the 
general pr inciples or rules that relate them 
to the phonetic representations. 
(2) 
URs 
Pronounciat ions PHONY 
(phonological anal 
Rules 
The input to PHONY are pronounciat ions of 
words and phrases upon which a prel iminary 
morphological  analysis has been completed. 
They have been divided into morphemes, and 
dif ferent instances of the same morpheme 
have been associated. These are represented 
as strings of phonetic symbols including 
morpheme- and word-boundaries. Indices are 
used to associate various instances of the 
same morpheme. 
(3) 
# i s a r a p # # 1 s a r a b + 2 d a # 
# 1 s a r a v + 3 u # # 1 s a rav  + 4 e # 
# 5 a d + 6 a # # 5 a t # ,,, 
The output of PHONY is a set of phonological  
rules or regularit ies in the data, as well 
as a set of 'underlying representations' 
for the morphemes. The phonological  rules 
generate the various pronounciat ions of the 
morphemes from their underlying 
representations. 
*This research was supported in part by 
National Science Foundation grant 
number MCS 81-02291. 
REPRESENTATION 
In Generat ive Phonology sounds are 
represented as matrices of feature 
specif ications, the phonetic symbols being a 
shorthand for these matrices. 
(4) 
- syllabic 
+ consonanta~ 
- continuant 
+ voice 
- nasal 
+ anterior 
+ coronal 
The set of 'dist inctive features' proposed 
by Chomsky and Halle \[2\] were claimed to be 
suff ic ient to dist inguish the sounds in any 
language. Further these features were all 
c laimed to have two values; the feature was 
either present or absent. There has been a 
fair aunount of dispute about the specif ic 
features, and several addit ional ones have 
been proposed, e.g. gravity, advanced tongue 
root. There has also been considerable 
dispute about whether the features are all 
binary. Nevertheless most phonologists use 
the original  b inary features, often with a 
few addit ional ones. Phonological rules are 
operat ions upon sets of these feature 
matr ices by which feature specif icat ions are 
assigned to the matr ix when it appears in a 
certain context. The rule expressed (in 
shorthand) normally as 
(e) 
S -> S /ji (read s becomes s in posit ion 
immediately before i) 
would be expressed as follows using feature 
matrices. 
(7) 
E coronal anterio l syllabi  anterior I ~  high 2 / - "  high I strident ~ back J 
The representat ion provides a language in 
which to express hypotheses. The task is to 
find statements in this language to express 
the data. Thus the representat ion 
impl ic it ly defines the search space. The 
search space is restr icted by the following 
constraint on the 'distance' between a UR 
and its pronounciations. Every feature 
speci f icat ion in the UR must be present in a 
'corresponding' segment in at least one of 
the phonetic forms. Consider, for example, 
morpheme i from (3) above: it ham three 
pronounciat ions \[sarap\], \[sarab\], \[sarav\]. 
23 
This constraint restr icts its possible URs 
to /sarap/, /sarah/, /sarav/, /saraf/. 
Even If\] does not appear in any of the 
pronouciat ions of this morpheme, its 
+cont inuant speci f icat ion occurs in Iv\] and 
its -voice speci f icat ion occurs in \[p\]; its 
other feature speci f icat ions are common to 
\[p\], Cb\], Iv\]. This constraint is weaker 
than the "strong alternat ion condit ion" (cf. 
\[4\]), which would restr ict the final UR 
segment to be /p/, /b/, or /V/o The term 
"alternation" wil l  be important of the 
d iscuss ion below; here \[p\] vs. \[b\] vs. Iv\] 
is an alternation. 
THE PROBLEM OF MULTIPLE SOLUTIONS 
It should be pointed out that most often 
several sets of combinat ions of underly ing 
representat ions and phonological  rules can 
be used to derive the same pronounciat ions.  
This could happen in several ways. It could 
be unclear what the UR is, and di f ferent URs 
together winh di f ferent  rules could derive 
that same pronounciatons, i.e. the 
d i rect ional i ty  of the rule could be unclear. 
Consider morpheme 5 from (3) above: 
(8) 
Pronounciat ions: #ad?a# #at# 
Solut ion I: UR /ad/ & Rule d -, t / # 
Solut ion 2: UR /at/ & Rule t -> d / a a 
The symbol # represents a word boundary, and 
the symbol + represents a morpheme boundary, 
The di f ference in the pronounciat ion of the 
last segment of this morpheme, d vs. t, is 
cal led an alternation. Given this 
alternation, one could make two hypotheses. 
One could hypothesize that the UR is /ad/ 
and that there is a rule which changes d to 
t when it occurs at the end of a word, or 
one could hypothesize that the UR is /at/ 
and that there is a rule which changes t to 
d between a's. Also some phenomena could be 
explained by a single more general rule or 
by several more specif ic rules. 
Generally, there are two approaches that 
could be taken to deal with the problem of 
mult ip le possible solutions. One could 
attempt to impose restr ict ions on  what could 
const i tute a val id solution, or one could 
use an evaluat ion procedure to decide in 
cases of mult iple possible solutions. One 
could also use both of these approaches; in 
which case the more restriction, the less 
evaluat ion is necessary. An or ig inal  single 
evaluat ion cr i ter ion - 'simplicity', as 
mani fested in the number of feature 
speci f icat ions used - has not proved 
workable. ALso no part icular proposed 
restr ict ions have been embraced by the v~st 
major i ty  of phonologists.  
Individual phonologists are general ly  guided 
in their evaluat ions of solutions, i.e. sets 
of rules and URs, by various criteria. The 
weight ing of these cr iter ia is left open. 
In this connect ion the 'codifying function' 
of the development of expert systems is 
part icu lary relevant, i.e. in order to be 
put into a program the cr i ter ia must be 
formalized and weighted. j5\]  Although it has 
sometimes been cla imed that no  set of 
d iscovery procedures can be suff ic ient tO 
produce phonological  analyses, this program 
is intended to demonstrate the feasibi l i ty 
of a procedural  def in i t ion of the theory. 
The three most widely used cr i ter ia and the 
manner in which they are embedded in PHONY 
wi l l  now be discussed. 
Phonological  Predictabi l i ty  
This involves the preference of solut ions 
based phonological  environment rather than 
to those in which reference is made to 
morphologica l  or lexical categories or 
involving the d iv is ion of the lexicon into 
arbi t rary classes. In other words, in doing 
phonologica l  analysis the categor ies or 
meanings of morphemes wil l  not be 
considered, unless no solut ion can be found 
based on just the sounds or sound sequences 
involved. This cr i ter ion is embodied in 
PHONY, since no information about morpholog-  
ical or syntact ic categor ies is avai lable to 
PHONY. If PHONY cannot handle an 
a l ternat ion by reference to phonological  
environment, it wi l l  return that this is an 
' interesting case'. The abi l i ty to ident i fy 
the *interesting cases' is a most valuable 
one, since these are often the cases that 
lead to theory modif icat ion.  It should be 
ment ioned that PHONY could readi ly be 
extended (Extension I) to handle a certa in 
range of syntact ical ly  or morpholog ica l ly  
t r iggered phonological  rules. This would 
involve including in the input informat ion 
about syntactic category, and, where 
relevant, morphologica l  category of the 
const i tuent  morphemes. This informaton 
would be ignored unless PHONY was unable to 
produce a solution, i.e. would have returned 
" interest ing cases"'. It would then search 
for general izat ions based on these 
categories.  
Naturalness 
This involves the use of knoweldge about 
which proceeses are 'natural' to decide 
between alternate solutions, i.e. solut ions 
involving natural processes are preferred. 
A process found in many languages is judged 
to be 'natural'. A l though natural  processes 
are often phonet ica l ly  plausible, this is 
not always the case. It should be ment ioned 
that not only is 'naturalness' an arbiter in 
case of several possible solutions, but it 
is also a heur ist ic  to lead the invest igator  
to plausible hypotheses which he can pursue. 
PHONY contains a catalogue of natural  
processes. When an a l ternat ion looks as if 
it might be the result  of one of these 
processes, the entire input corpus of 
str ings is tested to see.if  this hypothesis  
is valid. 
S impl ic i ty 
'Simplicity' was ment ioned above, whi le it 
is no longer the only criterion, it is sti l l  
a pr imary one. It is ref lected in PHONY in 
a series of attempts to make rules more 
general, i.e. combine several hypothes ized 
rules into a single hypothes ized rule. The  
more general rules require fewer feature 
specif ications. Also the smaller number of 
24 
ru les  can lead to a reduced number  of  
feature spec i f i cat ions .  
The var ious  proposed  const ra in ts  on what  can 
be va l id  so lut ions  genera l ly  wou ld  cor re la te  
w i th  the d i f fe rences  in the test ing  process  
of  PHONY. Most  of these invo lve d i f fe rences  
in a l lowable  o rder ings  of  ru les (e.g. 
'unrest r ic ted ext r ins ic  order ing' ,  'free 
reapp l icat ion ' ,  'd irect  mapping' ;  cf. \[3\]). 
At  present  PHONY's  test ing  process  invo lves  
check ing  if hypothes ized  rules hold, i.e. do 
not  have counterexemples ,  in the phonet ic  
representat ions  (such a c r i te r ion  d isa l lows  
opac i ty  of  type l; of. \[4\]). PHONY cou ld  be 
extended (Extens ion 2) to a l low the user  to 
choose  from several  of  the proposed  
const ra ints .  Th is  would  invo lve us ing 
d i f fe rent  test ing  funct ions.  Th is  extens ion  
would  a l low ana lyses  of the same data  under  
d i f fe rent  const ra in ts  to eas i ly  be compared.  
Add i t iona l ly ,  new const ra in ts  could  be added 
and tested.  
STRUCTURE OF PHONY 
PHONY can be d iv ided into three major  parts~ 
ALTFINDER,  NATMATCH, and RULERED. 
ALTF INDER 
ALTF INDER takes the input st ing of  phonet ic  
symbols  and indices ind icat ing  instances  of  
the same morpheme,  as in (3), and returns  
for each morpheme in turn a representat ion  
inc lud ing  the non-a l te rnat ing  segments  and 
l ist  o f  a l te rnat ions  w i th  the contexts  in 
wh ich  each a l te rnant  occurs, for example,  
for morpheme I, as in (9). 
(9) 
sara p ~ b -~ v 
# sarap # # sarah + da # # sarav + u # 
# sarav ? e # 
Th is  process  invo lves  compar ing  in turn each 
instance of  a g iven  key morpheme wi th  the 
cur rent  hypothes ized  under ly ing  
representat ion  for that  morpheme, and for 
each case of a l te rnat ion  stor ing in N groups  
the d i f fe rent  context  str ings in wh ich  the N 
a l te rnants  occur.  The compar i son  is 
compl ica ted  by the common processes  of  
epenthes is  ( inser t ion  of a segment) and 
e l i s ion  (delet ion of a segment),  and 
occas iona l ly  by the much more rare ly  
occur r ing  methathes is  ( in terchange in the 
pos i t ions  of  two segments) .  These  processes  
are i l lus t ra ted  in (10). 
(10) 
G iven  UR / t a r i s k /, 
Epenthes is  ~ -> a \[trisk\]\[tarisak\] wou ld  .~nv?Ive E l i s ion  a -> 
\ [ tar iks\ ]  " Methathes is  sk -> ks 
There fore  in cases where  the segments be ing 
compared  are not ident ica l  it is necessary  
to ascer ta in  whether  they are var iants  of a 
s ingle under ly ing  segment  or one of  these 
processes  has appl ied.  The poss ib i l i t i es  are 
i l lus t rated in (11). 
(ii) 
G iven  two pronounc ia t ions  of  the same 
morpheme 
\[ A B C . . . \] where  A is assoc ia ted  w i th  D 
\[ D E F . . . \] and B is not  ident ica l  to E, 
There  are four poss ib le  re lat ionsh ips :  
Bi c... A\B\cl " ' "  
D E F ... D E F ... 
A B C ... A B C ... 
The cr i ter ia  used to dec ide between these 
re la t ionsh ips  are (a) degree of  s imi la r i ty  
in each of  the conce ivab le  assoc iat ions ,  and 
(b) a measure  of  the s imi la r i ty  of the rest  
of  the str ings for each of the conce ivab le  
assoc iat ions .  
ALTF INDER y ie lds  a l ist  of a l te rnat ions  
based  on segments,  as in (9). Th is  is then 
conver ted  into a l ist  of  a l te rnat ions  based  
on features.  
(12) 
P 
p -contexts  
b v 
b -contexts  v -contexts  
,U, VOICE ? 
b -contexts  & v -contexts  p -contexts  
CONTINUANT + 
v -contexts  b -contexts  & p -contexts  
S ince every one of  the a l te rnat ions  in the 
former must  d i f fe r  by at least  one feature, 
the new l ist  must  conta in  as many 
a l te rnat ions  and normal ly  conta ins  more  
a l ternat ions ,  Where  prev ious ly  for each 
a l te rnat ion  in a segment  there was a l ist  of  
s t r ings  where  each a l te rnant  occurred,  now 
for each a l te rnat ion  in a feature there are 
two l ists  - one w i th  the str ings where  a 
pos i t i ve  va lue for that  feature occur red  and 
the other  where  a negat ive  va lue  occurred.  
It should  be noted that the e lements  of 
these lists, i.e. str ings,  together  w i th  the 
feature a l ternat ing,  its value, and an 
ind icat ion  of wh ich  segment  in the str ing 
conta ins  the feature, are al l  potent ia l l y  
rules.  They  bear  the same in format ion  as 
s tandard  phono log ica l  rules. Compare  the 
representat ions  in (13); these are for the 
a l te rnat ions  in morpheme 5 in (3). 
25 
(13) 
# a d + a # # a t # 
i I I 1 
0 I 0 0 0 
0 0 0 0 0 
0 0 0 0 0 
0 0 0 0 0 
0 1 0 1 0 0 l 0 
0 O 1 0 0 0 0 0 1 0 
0 1 0 0 l 0 0 l 0 0 
0 0 0 0 0 0 0 0 0 0 
0 1 0 0 l 0 0 1 0 0 
0 1 0 0 1 0 0 i 0 0 
0 0 1 0 0 0 0 0 I O" 
0 0 1 0 0 0 0 0 1 0 
0 1 i 0 1 0 VOICE 0 I 0 0 
0 i 0 0 1 0 0 1 0 0 
0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 
to the  rules t -> d / # a + a # d -> t / # a 
# , i.e. respectively,  one can't  pronounce t 
in the environment # a + a # but rather must 
pronounce d, and one can't  pronounce d in 
the environment # a # but rather must 
pronounce t. The latter rule and the second 
representat ion (both without  the init ial  
two segments - in the interests of space) in 
(13) are juxtaposed in (14). 
(14) 
1000011000000 1000000000000000 
D-> T /  # 
It is often the case that one or both of 
these potent ia l  'rules' wi l l  be valid, i.e. 
would be genera l izat ions  that would hold 
over the pronounciat ions represented in the 
input. These 'rules' would, however, be 
much less general  than those which are found 
in phonological  analyses. It is assumed 
that speaker /hearer / language learners can 
and do general ize from these specif ic  cases 
to form more general  rules. If this were 
not the case how could speakers correct ly  
pronounce morphemes in new environments.  
With in  the theory the cr i ter ion of 
s impl ic i ty is sensit ive to these 
genera l izat ions in that such genera l izat ions  
reduce the number of feature specif i -  
cations. With in PHONY the preference for 
more general  rules is mani fested by 
cont inual ly  trying to generate and test more 
general  rules result ing from the coalesc ing 
or combining of two or more specif ic rules. 
Recall  that the representat ion of the 
segments involved a feature matr ix with 
posit ive or negative speci f icat ions for each 
feature. In order to generate more general  
rules this repuesentat ion is modi f ied to two 
matr ices for each segment - one represent ing 
those features which must be posi t ive in the 
environment and the other for those features 
which must be negative. The genera l i zat ion  
process involves taking the 'greatest common 
denominator'  (GCD) of the posit ive and 
negative values of the segments of the 
environments of two separate 'rules'. In the 
interests of space an abbreviated example of 
the GCD operat ion is given in (15). 
(15) 
+ . ? -- ? ? - + -- 
SYLL i 0 0 1 i 0 0 i 1 0 
VOICE i 0 l 0 1 0 0 i i 0 
HIGH 0 1 1 0 l 0 h 1 0 i 0 
/ 
+ -- ? - 
~voIcEI VOICEHIGH 01 00 11 00 ~ \[-S~L\]-'C?HIGH\]/ ~HIGH\] m ~ 
The GCD operat ion has generated a more 
general  rule. If the or ig inal  two rules are 
a mani festat ion of a more general  rule, the 
genera l ized rule must not involve or make 
reference to the the init ial  segment of the 
former rule. Not ice also that in the GCD 
the VOICE feature does not have to be 
posit ive or negative; if the two or ig inal  
rules are a mani festat ion  of a single rule 
the speci f icat ion of the VOICE feature in 
the a l ternat ing segment must  not be 
relevant. 
NATMATCH 
After the a l ternat ions in terms of segments 
that were output by ALTF INDER have been 
changed into a l ternat ions in terms of 
features (12) and after these have been 
transformed from single matr ices into double 
matrices, the result ing "rules" are sent to 
NATMATCH. NATMATCH compares these "rules" 
with the data base of common phonolog ica l  
processes. This involves pattern match ing .  
If a match occurs the ent ire input corpus is 
tested to find out if it can be establ ished 
whether  this rule or constra int  is val id for 
this language. If Extens ion 2 were 
implemented, this test ing process would 
di f fer  for the d i f ferent  vers ions of the 
theory. If the val id i ty  can be establ ished, 
the under ly ing representat ions for the 
morpheme is adjusted and the rule is added 
to the l ist of establ ished rules. Common 
processes in the data base are organized by 
the feature which is alternating, and among 
those processes involving the a l ternat ion of 
a given feature the most  common process is 
l isted and thus tested first. If it can be 
shown to be valid, it is added to a l ist of 
establ ished rules. It should be ment ioned 
that ALTFINDER makes use of this list, and 
if an a l ternat ion that it d iscovers  can be 
handled by an establ ished rule, the 
tentat ive underly ing representat ion is so 
adjusted and the a l ternat ion need not be 
passed on to the rest of  the program. If 
wi th in NATMATCH no matches are found in the 
data base or if the va l id i ty  of the matches 
cannot be establ ished, the a l ternat ion is 
added to the list of those as yet not 
accounted for. 
RULERED 
RULERED takes the generated "rules" that 
have not been establ ished. It establ ishes 
which of these are val id and takes GCDs to 
general ize these as much as possible.  This 
is done by going through all the rules 
involving a certain feature and generat ing 
the minimal number of equivalence c lasses of 
"rules" and combined (GCDed) "rules" which 
26 
are valid. The result ing general ized rules 
have the largest matrices, i.e. the largest 
set of feature specif ication@, which all the 
forms undergoing these rules have in common. 
However, the el imination of some of these 
features specif icat ion might stil l result in 
val id rules. The rules with minimal 
matrices, i.e. minimal number of feature 
specif icat ions (recall the "simplicity" 
criterion), might be termed lowest commmon 
denominators (LCDs). These are produced by 
attempting in turn to el iminate each segment 
in GCDed rule; the new rule is generated and 
tested, and if val id the segment is out, 
otherwise it remains. Then an attempt is 
made to el iminate in turn each feature 
specif icat ion in the remaining segments, 
again generate and test. Finally, all the 
establ ished rules are combined, where 
possible, according to the many abbreviatory 
conventions of Generat ive Phonology (cf. 
\[2\]). This is done on the basis of the 
formal properties of the rules. For example, 
if two generated rules are identical except 
that one has an addit ional segment not 
present in the other, these can be into a 
single rule; parentheses al low the inclusion 
of optional segments in the environment of a 
rule. In addition, all the rules generated 
above involve a change of only a single 
feature specif ication. If there are several 
rules which are identical except that a 
dif ferent feature specif icat ion is changed, 
i.e. the two changes occur in the same 
environment, they can be combined into a 
single rule: in this part icular environment 
both specif icat ions change. 
DISCUSSION 
PHONY is a learning program. I t  is 
discovering the general principles or rules 
governing pronounciat ion in a language. As 
such it can be said to be learning some 
aspect of a language. PHONY can be thought 
of either independently or as a part of a 
larger system designed to learn a language. 
In the latter context PHONY could help in 
deciding between ambiguous morphological  
divisions. In addition, PHONY could be used 
in adjusting, f ine-tuning heurist ics for a 
morphological  analyzer. PHONY would act as 
a "critic" in such a system (cf. \[i\]). Two 
sets of heurist ics might lead to dif ferent 
morphological  analyses, which might each be 
input to PHONY~ if one input lead to 
analysis that had no " interest ing cases", 
i.e. problems, while the other did, the set 
of heurist ics leading to the former analysis 
would be supported. 
Independently PHONY is an expert system. It 
provides a procedural def init ion of 
phonological  theory. Because of this, it 
could be useful to someone desir ing to learn 
phonological  theory. It could also be of 
use to working phonologists. In addit ion to 
producing the analyses, it also isolates the 
' interesting cases', e.g. morphological ly  
tr iggered rules. With Extension i it could 
also be used to compare various versions of 
the theory and to test the the effects of 
new modif icat ions of the theory. 
It should be emphasized that at 
present PHONY is ~ bare program. It is 
hoped that it is suff ic ient to demonstrate 
the feasabi l i ty and worth of the endeavor. 
It presents a basic approach: contexts in 
with alternating segments are transformed 
into hypothesized "rules", these can be 
combined via the GCD operation, further 
s impl i f ied to LCDs, and then again combined 
according to the abbreviatory conventions. 
There is a "grinding" qual i ty to this 
process. Phonologists only resort to a 
similar grind, when all their heur ist ics 
have led to deadends. The only heurist ic  
presently incorporated in PHONY is the 
comparison to a list of natural processes; 
this al lows a tremendous shortcut in the 
search More heurist ics obviously could be 
added to PHONY. 
It would also be possible for a 
METAPHONY to find heurist ics to be to be 
used by PHONY. (Possible decis ion cr iter ia 
to be used in evaluating dif fer ing sets of 
heurist ics could be the number of tests of 
the input corpusand the number of 
" interest ing cases".) These heurist ics could 
improve eff ic iency of PHONY by obviat ing 
much of the "grinding" process. At the same 
time METAPHONY could also be making 
discoveries about phonologies of natural 
languages in general. For example, in the 
process of generat ing LCDs instead of going 
segment by segment and feature by feature, 
METAPHONY could acquire and incorporate in 
PHONY knOwledge about what aspects of 
pronounciat ion are not/rarely pert inent to 
rules affecting a certain feature. 
REFERENCES 
i. Buchanan, B.G., T.M. Mitchell, R.G. 
Smitch, C.R. Johnson, Jr. 1979. Models of 
learning systems. Encyclopedia of Computer 
Science and Technology. J. Belzer, A. 
Holtzman, A. Kent (Eds.). New York: Marcel 
Dekker, Inc. Vol 3, pp 24-51. 
2. Chomsky, N. and M. Halle. 1968. The 
Sound Pattern of English. New York: Harper 
and Row. 
3. Kenstowicz, M. and C. Kisseberth. 1977. 
Topics in Phonological  Theory. New York: 
Academic Press. 
4. Kiparsky, P. 1968. How abstract is 
phonology? In O. Fuj imura (Ed.), Three 
Dimensions in Linguist ic Theory. 1973. 
Tokyo: TEC. 
5. Michie. D. 1980. Knowledge-based 
systems. UIUCDCSR-80-1001 and UILU-Eng 
80-1704 (University of Il l inois). 
27 

