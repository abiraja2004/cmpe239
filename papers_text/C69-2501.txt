The Mul t i s tore  system was deve loped in order to recoge 
nize and expla in structural  patterns in natural-language 
sentences (speci f ical ly  English) and eventually yield an 
output  in which  the re lat ions  between the var ious  items of 
the sentence are h ie rarch ica l ly  d isp layed.  
The recogn i t ion  of these st ructura l  patterns  is made by 
means of a system of rules which operate  on a sequence of 
words, i.e. a sentence, whose ind iv idual  character i s t i cs  
are pre-estab l i shed.  By ind iv idual  character i s t i cs  are meant  
the poss ib i l i t ies  a word has to cor re la te  (i.e. to form a 
syntact ic  combinat ion) wi th another item; these poss i -  
b i l i t ies  are represented by 'correlators' ,  that  is, by 
syntact ic  e lements which l ink two items in a cor re la t ion .  
Each word is character i zed  by a set of p re -es tab l i shed  
data: 
a) the S-code, which d is t ingu ishes  between the var ious 
senses of a homograph.  For instance, a word l ike "READ" 
wi l l  have four d i f fe rent  S's to d i s t ingu ish  between: 
READ = supine e.g. I CAN READ 
READ = past tense YESTERDAY I READ 
READ = past  part. I HAVE READ 
READ = noun A LONG READ 
These d is t inct ions  are essent ia l , ' s ince  whenever  a homo- 
graph occurs, one and only one of i ts mean ings  can be 
taken into cons iderat ion  to make the f inal  pattern,  un- 
less, of course, the sentence is ambiguous  and more than 
- 2 - 
one f inal  pattern is to be recognized,  as in: 
i) present  tense 
I READ THE BOOK 
ii) past tense 
b) the sequence of corre lat ional  indices (Ic's), that is, 
the str ing of potent ia l  l inks that each word-sense has. 
Each Ic represents  a poss ib le  syntact ic  connect ion be- 
tween two items and is ident i f ied by: 
i) the code number of the re lat ion it establ ishes between 
two items; 
2) the 'type' of correlat ion.  There are six d i f ferent  types 
of corre lat ion which  spl it  into two groups: 'expl ic i t '  
corre lators  and 'implicit' correlators.  
By 'explicit' corre lator  we mean a l ink ing element which is 
represented by a l inguist ic  item; prepos i t ions  and conjunct -  
ions are expl ic i t  correlators;  by ' implicit' corre lator  we 
mean a re lat ion between two items, which is not expressed 
by any l inguist ic  i tem but is ind icated by the re lat ive po- 
s i t ion of the two items (which we cal l  their  corre lat iona l  
function).  
Type N 
Type M 
Type V 
IMPLICIT CORRELATOR 
I ? AM 
l I 
NI - -N2  
AM I 
I I 
M2- -MI  
SERIOUSLY, HE LEFT 
I Uv2~ 
V l - -  
- 3 - 
EXPL IC IT  CORRELATOR 
Type E DUCKS IN ATHENS 
I I I 
E1- - - -E3 - -E2  
Type F BY CAR THEY TRAVELLED 
F3- -F2 - - J  
Type H DOLLS SHE PLAYS WITH 
I u -  H1- -~ I 
H2 I H3 
For each type there are d i f fe rent  corre lat iona l  func- 
t ions which determine the pos i t ion  a word has in a corre- 
lation. When two adjacent  words have complementary  funct ions 
of the same Ic - for instance, word A has 5050 N1 and word B 
has 5050 N2 - a 'product' is made and recorded in the form: 
Word A 5050 N Word B 
This product  is cons idered as one piece and can become 
f irst  or second cor re la tum in a wider corre lat ion  and is 
therefore  treated as though it were a s ingle word, i.e., it 
is ass igned str ings of Ic's which indicate its cor re lat ion-  
al poss ib i l i t ies  both with ad jacent  words and with ad jacent  
products  a l ready made. S ingle words, however,  being vocabu-  
lary items, have their  str ings of Ic's ass igned a priori;  
products,  s ince they ar ise dur ing the procedure,  have to 
be ass igned their  Ic -st r ings dynamic&l ly .  The ass ignat ion 
of speci f ic  Ic's to a product  depends on: 
a) the corre lator  respons ib le  for the par t icu lar  correlat ion;  
b) the character i s t i cs  (Ic's) of the word (or product) which  
G 
2 
t . ,  
- 4 - 
makes up the f irst  or the second correlatum. 
The operat ional  cycle that assigns Ic's to a product  we 
cal l  ' reclassi f icat ion' .  
The amount of data involved in an analys is  of this kind 
is real ly  enormous. Let us consider  a sentence cons ist ing 
of ten words, each of which has two d i f ferent  senses (S's). 
On an average 50 corre lat ional  indices are ass igned to each 
sense of a word. Now, just to check the corre lat iona l  com- 
pat ib i l i ty  of two adjacent words about 10,000 matching op- 
erat ions would be necessary; the matching procedure for all 
the words of the sentence would involve about 90,000 oper- 
ations. On an average five products would resul t  f rom the 
f irst 10,000 match ing operat ions;  each of them would be as- 
s igned about 50 corre lat ional  indices that represent  the 
product 's  corre lat iona l  poss ib i l i t ies  to corre late wi th a 
another adjacent piece - either a word or a product. The 
procedure to match these five products  wi th another piece 
would involve about 637,000 operat ions.  If to this f igure~ 
we add the number of operat ions necessary  start ing from 
level 3 (see p. 7) with all the products  made in the imme- 
d iate ly  preceding levels (200,000), the total number of 
operat ions involved would come to 927,000. 
The rec lass i f i cat ion  rout ine also involves a great num- 
ber of operat ions  of this kind: about half of the correla-  
t ional  indices a product  is ass igned depends on the corre- 
- 5 - 
lator respons ib le  for that correlat ion;  the other half de- 
pends on the str ings of indices which the two corre lata of 
the product  have. Accord ing  to the presence or absence of 
spec i f ic  indices in the str ings of the f irst or second cor-  
relatum, pre -es tab l i shed  sets of indices are ass igned to 
the product;  or sets of indices are ass igned to the product  
only if they are present  in the str ings of its two corre- 
lata. The rec lass i f i ca t ion  of each product  would require 
about 2,000 operat ions,  which  means 100,000 for the average 
of 50 products  in a sentence of i0 words, br inging the to- 
tal of operat ions  to over a mi l l i on  onl\[  for the match in~ 
procedure.  This would imply - for this part of the program 
alone - process ing t imes of the order of some seconds of 
mach ine  t ime if the most  modern computer  is avai lable,  or 
of about an hour - at best  - if the work is done with an 
o lder  model. 
The amount of work and money involved in a procedure of 
this kind made us try to f ind a quicker and more economical  
way of handl ing cor re la t iona l  indices: as a resul t  of our 
e f for ts  the Mul t i s tore  system was developed.(  Bibl. i) 
The basic idea of the Mu l t i s to re  consists  in pre-estab~ 
l ish ing in a g iven area of the machine 's  central  core as 
many separate pos i t ions  as there ard corre lators  in the 
system. The ar rangement  of these pos i t ions  represent ing the 
cor re la tors  orders them accord ing to type. This assures 
that at any point  of the procedure  each Ic is not used sev-  
- 6 - 
eral t imes and in d i f ferent  ways accord ing to the d iverse 
data it contains,  but only as one single item which by its 
pos i t ional  coord inate~ implies its var ious s igni f icat ions.  
Moreover,  the Ic's do not have to be compared one by one 
with the Ic's of other adjacent  words or products,  but are 
s imply addressed to one and only one pre-estab l i shed posi-  
tion. Thus the mass of operat ions of compar ison is avoided 
and also the necess i ty  to ascertain,  after every successful  
match, which items the matched Ic's represent  is e l iminat-  
ed, because the very pos i t ion of the matched Ic's immediate-  
ly impl ies what they stand for. To establ ish whether  two . 
Ic's are complementaryand represent  a corre lat ion  thus be- 
comes the simple task of checking a l ready present informa- 
tion according to the rules of sequence, of corre lat iona l  
function, and of  corre lator  type, al l  of which are impl ic i t  
in the locat ion of the markers  which are being handled. 
The Mul t i s tore  can be represented as a rectangular  area 
d iv ided into l ines and columns. (see Fig. 1 below) 
E,F and H N,M and 
! i I 
r 
I? -~  
L3  . . . . . .  i i .  
' i i i 
Ln - I  t J I ~ ' " i  ' 
m 
- 7 - 
Every column is ded icated to one Ic and subdiv ided into two 
subcolumns,  if the Ic is of type N, M, or V (implicit); if 
the Ic is of type E, F, or H (explicit),  the column is di- 
v ided into three subcolumns.  
The l ines LI, L2, L3 etc. d iv ide the area into levels. The 
levels are determined by the success ion of words in input. 
Thus each level bears the number of the word it represents .  
Every input word causes for each Ic in its Ic str ing the 
insert ion of a marker  into the Mul t is tore  column correspond-  
ing to that Ic; and the level of that marker  in the Ic col-  
umn corresponds to the input number and the pos i t ion of 
that word in the sentence. Thus all  the markers  inserted 
for one word represent  the corre lat iona l  poss ib i l i t ies  of 
that  word. 
If, on the l ine of level i, an Ic of the str ing represent-  
ing corre lator  type N of the f i rst  word has caused the in- 
sert ion of a marker  into the column corresponding to that 
Ic and if an Ic of str ing N of the second word has caused 
the inser t ion , in to  the l ine of level two, of a marker  re- 
present ing  CF2 of the same Ic, this impl ic i t ly  means that 
with the same corre lator  a cor re la t ion  is made conta in ing 
the f irst  and the second word; this product  No x, cons ist -  
ing of word 1 (S 'a\[) and word  2 (S .'b') is the product  of 
cor re lator  No y and type N. This product  belongs to level 
2 and when it has been ass igned a str ing of Ic's by the 
appropr ia te  rules of rec lass i f i cat ion ,  it wi l l  be inserted 
8 - 
into the Mul t i s tore  on the second level; this means that 
it can enter into combinat ions only with those words that 
belong to the immediate ly  preceding level, or with products 
which contain the words of the immediate ly  preceding level. 
Such a correlat ion,  whenever  it is made, would sti l l  be long 
to the level of product  x. In our speci f ic  case product  x 
could corre late only with an item of level zero, which does 
not exist, because product  x is on level two and already 
contains word No. i. Hence we can formulate a rest r ic t ive  
rule to the ef fect  that a product  can be a potent ia l  second 
corre latum in an N corre lat ion only if its lower level is 
larger than 1. The Mul t i s tore  system lends i tsel f  to the 
introduct ion of many such rest r ic t ion rules. 
When on a g iven level all products  that have sprung from 
the insert ion of markers  corresponding to the word of that 
level have been rec lass i f ied ,and the products  or ig inat ing 
from that rec lass i f i cat ion  have, in turn, been rec lass i f ied 
and have inserted their  markers,  and there are no more prod- 
ucts to be reclass i f ied,  then the procedure inserts the next 
word and thus begins the next level. This means that once 
a subsequent word of the sentence has been inserted, all 
preceding words and products  become 'inactive' pieces, hav- 
ing exhausted every poss ib le attempt of corre lat ion with 
'active' pieces; from then on they represent  mere ly  latent 
corre lat iona l  poss ib i l i t ies  with subsequent items. This 
state of inact iv i ty  in the case of the last word of the sen- 
- 9 - 
tence determines  the end of the analysis .  At  this  po int  
the product  (or products) that conta ins  al l  words  of the 
sentence is ca l led  'complete' and represents  the h ierarch-  
ical  s t ructure  of the sentence.  
The f i rst  tentat ive  program MP1 (Bibl. i) was wr i t ten  
for use on a GE 425 computer  and its main  purpose  was to 
show the app l i cab i l i ty  of the Mu l t i s to re  system to corre-  
la t iona l  grammar and to check the method of p rogramming 
based on 's igni f icant  addresses ' .  
The present  program, MP2 (Bibl. 3) , is a rev ised  and 
en larged vers ion  of MPI  wr i t ten  for use on an IBM 360/67 
computer .  On the bas is  of our prev ious  exper ience  it can 
be cons idered  an actual  work ing  too l .  
Many  solut ions,  as wel l  as many rest ra ints ,  depend on 
the fact that under  many respects  it is a mach ine-or ient -  
ed program. The program is s t ructured on a large area of 
the cent ra l  core, d iv ided  into l ines and columns,  whose  
s ize is 528 x 330 bytes.  Each l ine (330 al l  together) 
cons is ts  of 528 bytes and is d iv ided  into two sect ions:  
A and B. Sect ion  A conta ins  al l  the data  necessary  to 
def ine  a line; sect ion B cons is ts  of 496 bytes, that is, 
of as many bytes as there are cor re lators  operat ive  in the 
i 
system. Each l ine spec i f ies  as permanent  data a rec lass i -  
f i ca t ion  rule - whose def in i t ion  is g iven in sect ion  A of  
the same l ine - and the set of indices ass igned by that 
ru le  (bit 6). The re levance  of the ru le  to a g iven  product  
- l0  - 
is specified in the columns of section B. 
3 
I 
33(~ 
A ( 32 bytes ) 
Ill L Istcor-2ndl 
L 
* reclassification rule 
H~4*I B ( 496 bytes ) -=-- 
IIItllllllll 
I 
! 
I 
L_L - - -  
Fig. 2 
Each byte of section B is divided into 8 bits as illus- 
trated below. 
1 
2 
3 
4 
5 
6 
marker of CF3 (explicit correlator) 
marker of CF2 (right-hand piece) 
marker of CFI (left-hand piece) 
marker for special linguistic rules 
reclassification rule marker 
Ic assignation marker 
Fig. 3 
Bits 1 to 4 are therefore used in the matching procedure, 
whereas bit,5 and 6 are pre-established data to be used 
in the reclassification routine. 
- i i  - 
Procedure  
Each  S-va lue of a word occupies  one l ine of the Mul t i -  
s tore area and its spec i f i ca t ions  are recorded in sect ion 
A of the same line. For each Ic conta ined in the str ing of 
that  S -va lue  of the word, a marker  is inserted , accord ing  
to the cor re la t iona l  funct ion,  in b i t  1,2 or 3 of the cor-  
respond ing  byte of the l ine, that is, in the byte which 
bears that Ic as label. 
Accord ing  to its funct ion,  a marker  can be a le f t -hand 
p iece  'LH', and as such it~is s imply recorded,  or a r ight -  
hand p iece 'RH', in wh ich  case, immediate ly  after  it has 
been recorded,  the co lumn is searched for a complementary  
and cont iguous  LH piece. If this is found, an ind icat ion  
of product  is recorded in the f i rs t  f ree l ine of the Mul t i -  
store; this address cons is ts  of three data: a) the address  
of the l ine where  the LH p iece was found, wh ich  is recorded 
in the area 'f irst cor re la tum' ;o f  the l ine of the product;  
b) the address  of the l ine where the RH piece was recorded,  
wh ich  is recorded in the area 'second correlatum' and c) 
the re la t ive  address  of the co lumn which  character izes  both 
both LH and RH pieces,  wh ich  is recorded in the area 'cor- 
re lator ' .  
A f ter  the product ' s  spec i f i ca t ibns  are recorded,  and 
if there are no other LH p ieces wi th  wh ich  the RH p iece in 
hand can combine,  the rout ine  for the insert ion of Ic's is 
resumed. If the inser t ion  of the next  Ic of that S 'va lue 
12 
I W/P  
! 
? L1  
~ sa  
, i I 
i s ~st.  co~,.  I 
' '  - I 
I 
~.nd. Ru les  1 2 
\] 
2 
I 
4 l 
, I ,  - / 
, 7 '5 -  
? I , _ _ / "  
i 
~.  Px  I 
i 
i 
L2 , ,, i 
? / 
' f ' T 
? / ' - ' / ' ~  1 " 
I 
? . 3 : = /  
i 
4' ' 
i . . . . . .  
6 IL056 . . . . . .  
I 
} 
I 
? I 
0000 
i 
' i 
i i 
L o ? 
- -N  sector  - -  
3 
Z 
x 
w 
I 
w 
m w 
! i 
I 
I ~ 
X 
X X 
1 1 1 1 I 
I 
I 
I 
I 
F~ 
- -  m 
-I m ~  
i \[ 
, , , 
The pos i t ion  6 in  the  Mu l t i s to re  a rea  cor responds  to  coTre la tor  No  y 
in  the  same way  as pos i t ion  7 cor responds  to  cor re la tor  No  z, an~ so  
on,  
INSERT ION D IAGRAM 
13 
of the word causes a new product  to be made, the procedure 
is repeated and the product  is recorded on the next free 
l ine of the Mul t i s tore  area. Only when all the Ic's of the 
piece which has caused the product ion  have been inserted, 
the rec lass i f i ca t ion  rout ine takes place, start ing from the 
f irst  product  newly recorded. 
The in format ion conta ined in the area 'correlator' of 
the line conta in ing the product 's  record gives the address 
of the Mu l t i s to re  column dedicated to the corre lator  re- 
spons ib le  for that product.  The column is then searched , 
f rom the top down, for a bit  5 set ON (see Fig. 3 on p.10). 
If it is found, this impl ic i t ly  means that on the line to 
which the bit  belongs,  there wi l l  be found the record of a 
rec lass i f i ca t ion  rule re levant  to the product  to be reclas-  
sif ied. Sect ion A of the same line contains the ins t ruc t -  
ions concern ing the ass ignat ion  of the Ic's whose markers  
are conta ined in bit  6 (see Fig.3).  A bit  6 set ON impl ic i t -  
ly indicates ei ther the column in which to check (if the 
rule requires it) the record of the f irst  or second corre- 
latum(the addresses of which are recorded in sect ion A 
of the l ine in which  the rule is recorded) for the presence 
or the absence (as speci f ied by the rule) of bits 1 to 3 
set ON (which represent  Ic's); or i~ may s imply indicate 
the place in which  to insert  a marker,  i.e. a rec lass i -  
f icat ion Ic, The rout ine for the insert ion of rec lass i  - 
f icat ion markers  is exact ly  the same as the rout ine for 
the insert ion of markers  for words. 
8 
Ll\ 
IN 
tD 
u~ W2 o 
,I 
~ Px  
,r- i  
L2  
ist. iCorr. 
? I 
t " 
o .ga~Is~ 
\ 
14 
Sa  
Rules 
--c- 
$" J 
A 
s~ h~ ..... -Z -z - -  
/ I ~ _ 
0000 6~ 1056 ~-- x 
1 1 1 1 
I 
i 
? 11  
Conditioned rule. i Unconditioned rule. # Check on 1st correlatum. 
Ic 4 CFI. @ Assign--the string CFI contained in the rule to the product. 
_% Assign the string CF2 contained in the rule to the product. 
RECLASSIFICATION DIAGRAM 
15 
The analys is  of the sentence is complete when the last 
marker  of the last word-sense  has been inserted and there 
are no further products  to be rec lass i f ied or re-cycled.  
At this point  the output rout ine starts. Three d i f ferent  
k inds of output  are produced: 
a) a l ist of al l  the products  made in the course of the 
analys is  of the sentence; 
b) a l ist of al l  Ic's ass igned to each product  dur ing the 
rec lass i f i ca t ion  rout ine ; 
c) a graphic  representat ion  of the h ierarch ica l  structure 
of all 'complete' products  (that is, conta in ing all 
words of the sentence).  This structure is equiva lent  to 
a tree structure wi th  words at the terminals  and corre- 
lators at the nodes. (see Appendix) 
This is a general  out l ine of the procedure of combina-  
tion, product ion,  rec lass i f i ca t ion  and output. In addi t ion 
to that there are several  rout ines which meet special  re- 
quirements.  A specia l  rule, for instance prevents speci f ic  
RH pieces from becoming e l ig ib le  LII p ieces once a certa in 
cor re la t ion  - which conta ins  them as RH pieces - has been 
made. A word l ike "LITTLE", for instance, in its funct ion 
as a quant i f ier ,  once it has been corre lated with the de~ 
f in i te art ic le and made the product  "THE//L ITTLE" cannot 
become LH piece in the correlat ion:  
L ITTLE // HE KNOWS 
L 
16 
The ind icat ion 'discard' on pr in t -out  type 'a' - i.e. on 
the l ist of all the products  made dur ing the analys is  - 
wi l l  show that "LITTLE" is no more  ava i lab le  as LH p iece  
for any other corre lat ion.  ? 
Another  rest ra int  concerns some 'complete' products  
which, though grammat ica l ly  correct,  cannot  be accepted 
as in terpretat ion  of the sentence.  For instance,  in a 
sentence like: 
THEY / /  WERE READY 
the structure which takes "WERE" as sub junct ive  is not 
acceptable,  s ince it would  requ i re  someth ing else - an 
"IF" or "I WISH" etc. - to precede.  In cases l ike this 
the ind icat ion 'non-sentence' appears in pr in t -out  type 
l a l  , 
A set of specia l  rout ines serves the purpose of rec- 
ogniz ing id iomat ic  express ions.  When one of them is rec- 
ognized, inserted in the Mu l t i s to re  and rec lass i f ied  - l ike 
any other product  - the ind icat ion  'idiom' is p r in ted  on 
pr in t -out  type 'a' 
The whole  program, inc lud ing the Mu l t i s to re  area and 
buffers,  is conta ined in the centra l  core of the mach ine  
and occupies  about 200 K. The system accepts  as input ,sen-  
17 
tences of up to 16 words - a l imit f ixed in accordance wi th  
the average length of sentences in  sc ient i f ic  texts  (Bibl.5) 
and ample enough to a l low any type of syntact ic  structure.  
P rocess ing- t imes  for 10-word sentences are about 1-1.5 sec- 
onds. Our present  vocabu lary  is l imited to 150 words for 
reasons of punched card maintenance.  However,  it could  be 
en larged wi thout  a f fect ing the program. 
The Mu l t i s to re  parser  was developed for the automat ic  
analys is  of Engl ish  sentences on the basis  of cor re lat ion-  
al grammar,  but it is in no way l imited to this k ind of 
grammar.  Actual ly ,  by changing the input parameters ,  the 
symbols of the rules and the match ing  operat ions  it could 
be used to handle the data of any kind of pred ic t ive  gra~ ~ 
mar; ne i ther  are its d imens ions  cr i t ical ;  the Mul t i s tore  
area could be reduced or enlarged s imply by a l ter ing the 
parameters  in accordance with the storage capac i ty  avai l -  
able in the machine.  
- 18  - 
B i b l i o g r a p h y  
'Multistore': A Procedure for Correlational Analysis 
(E.v.Glasersfeld, P.P.Pisani, J.B.Burns), Informal 
Report T-10, Automazione e Automatismi, vol. IX, No.2 
Milan, Italy, 1965 
Automatic English Sentence Analysis (Glasersfeld, 
Pisani, Burns, Notarmarco, Dutton), Final Report T-14 
Grant AF EOAR 65-76, IDAMI Language Research Section, 
Milan, Italy, 1966. 
The Multistore System MP-2 (E.v. Glasersfeld and P.P. 
Pisani), Scientific Progress Report, Grant AFOSR 1319-67 
Georgia Institute for Research, Athens, Georgia, 1968. 
The Mult is tore Parser for ilierarchical Syntactic 
Structures (E.v. Glasersfeld and P.P.Pisani) Grant 
AFOSR 1319-67, Georgia Institute for Research, Athens, 
Georgia 1969 (paper submitted to Communications of ACM) 
Computational Analysis of Present-Day American English 
(Henry Kucera and W.Nelson Francis), Brown University 
Press, Providence, Rhode Island, 1967 
2-- 
L 
?1 
c 2 
I 
1 
I 
c , ,  
C2. 
I 
t~ 
.I., 
'4" 
c." 
.! 
I 
I 
c' ~ 
n 
i 
N 
u. 
'C" 
i 
i 
~g 
~J 
'C  
m ~ 
o 
-~ i~ -  
C 
A P P E N D I X , I 
Complete Parsin~ 
C i 
I 
, " I  
er~ 
?- o 
to '  . 
/ 
i~  ' ~ u-  
t 
h.~" Ox 
I0  C 
I ?Xl ~ '  
i 
I 
t t' 1 
~? ;,J u f~ 
I 
I , 
' I 
I t>  g 
-L 
I 
t 
c~ 
? c.~t 
C'; C ' I  
( 
lu,. 
ic' 
i: 
I 
I r .  
%. 
c \[~., 
C, ', c.,, 
!o 
i , l 
i ? 
C C?I 
\[N 
u ?~J 
~-, .3 
C, ? 
:;'1 
'.J \[ 
0 C '  
L~ 
? I 
/ t .  
it, i\['. 
!v ,  
1 
i C.~ " , 
ITS', . t 
7" 
C 
.... LI ' c :  
II'~ o I 
n , 
! :  
'1  
' I 
!o  
L,.b , ;g  
L 
~1 L I  t'- 
t, J  ?.'1 
c . ,  
ic.; 
i 
f 
! 
I 
' r  
r- 
'C .  
o 
u ,  
I 
~J  
i 
i 
IC' 
.~r,- , c  
Ic" 
ic, u" 
i 
t 
ic. 
p, 
J~ 
i~: . jg 
If? 
I 
'C ~ 0 
i 
; . . o :  
o c 
u,  " u~ 
C'  C,~ 
,~. 
( 
I I  
r L .  !. 
P 
(%1 
LU 
u~ 
i=~ 
C' 
~J 
2,, 
~:, : ~::. 
"iI I ' r~ 
I" 
t r. I(..; ? I 
~ 2X' I
' I 
C" 
~..) 
? .11!~ '. ' . . '  ~ 
Lc~.  
l . iu 
L. i, U~ 
t.L 
~j  
.J L~ ig ,ig 
~ tN L~ 
~ ~ ' 
6)- , I . ' 3 .  
) ) 
C 
u' 
u~ 
~t 
(P r in t -o~t  type  c )  
' I I I  
(30  p C?= + . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  - - - - - -&  ~!  t~ ~-I-  4 
J 
o 
% 
p C~3 
P c2~,  . " 
," C12  
CI I  , 
? o 
. ? . . . . . . . . . . . . . . . . . . . . . . . . .  n~OF.4  
? ? , t  ? 
. .  . ' ? ? . . . . . . . . . . . . .  ? . 
? + . . . .  ~ . .=- .7?)  | f ,  ~-  4 
? . . . . . . . . . . . . . . . . .  *i . . . . . .  * = 
. . . . . . .  ? . . . .  ? . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  e . .  
- - - "  . . . . . . . .  r i F t~ . . . . .  ? | ~FF ..... I I t3w lll.q (}I 'j P I l l  I^  I~CC "!,;~ ~N "~P.l~ ? 
I 
i, 
!u .  
i ~ , 
Is 
I 
: t,,,. 
: c  
!o 
!e , .  
! 
i v ;  
r ' t  
i . 
t~  
I 
~ - - '~"   f" ' - "  
f 
I 
I 
I 
I 
,, 
, ! 
! 
I 
0 
! 
I 
t 
I 
! 
t 
,, 
i 
! 
: 
: 
I 
i .  I 
! 
! 
! 
I 
! 
5 
) 
! . 
( 
~I/?8L'I: 
IV  
? , I ,~  e e , *  
F, , ,  
~o,  
I ,''~ ' C 
N ~" L~. 
ru~ , u~ 
I o  ' C.  
, r  . I 
! t !: ! 
I 
i 
', , 
I I 
I o , ! 
! . 
: 
I 
:r~' ~ I 'N  
iQ. I~ 
I 
i 
I 
i 
I 
I 
i 
i 
! f 
i ? I 
I 
, I  
? ? 
? ? ? ? ? 
"d 
r *  
dn~' 
e o l  
'drl 
i " .  
t~ J .  
? e 
LJ  
?4 
"r/ 
u.  
~L 
f f  
? I 
t 
