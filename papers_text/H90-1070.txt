Generic Text Processing: 
A Progress Report 
Paul S. Jacobs, George R. Krupka, Susan W. McRoy 
Lisa F. Rau, Norman K. Sondheimer and Uri Zernik 
Artificial Intelligence Program 
GE Research and Development Center 
Schenectady, NY 12301 
Introduction 
A generic natural language system, without modifica- 
tion, can effectively analyze an arbitrary input at least 
to the level of word sense tagging. Considerable re- 
search has addressed the transportability of natural an- 
guage systems, but not generic text processing capabil- 
ities. For example, previous DARPA-sponsored work 
\[1, 2\] produced transportable interfaces to database sys- 
tems. Each new application of these interfaces generally 
required modifications to lexicons, new semantic knowl- 
edge bases, and other specialized features. The most 
that natural language text processing systems have ac- 
complished has been the parsing of arbitrary text, with- 
out any real semantic analysis. 
Our text processing work at GE, like the earlier ef- 
forts in interfaces, has emphasized transportability. We 
have applied the same core of natural language tools, 
including the grammar, lexicon, parser, and semantic 
interpreter (collectively known as the NLToolset \[3\]), to 
domains ranging from personnel directories to aircraft 
engine service reports. Some other applications of the 
NLToolset are the SCISOR news story reader \[4\] and the 
GE effort in the MUCK-II evaluation \[5\]. These proto- 
types process texts at a rate of several hundred para- 
graphs per hour, synthesize a structured representation 
for each text, and answer English questions about the 
contents. 
This transportable t xt processing effort has provided 
successful proof-of-concept demonstrations for applica- 
tions with only a few person-months of effort, often with 
only minor assistance from the NLToolset developers. 
Unfortunately, even this anaount of customization is far 
too much for most potential text processing applications, 
which continue to use more robust but far more superfi- 
cial methods, such as keyword indexing, pattern match- 
ing, and statistical retrieval. 
Our effort at GE currently aims at developing eneric 
text processing capabilities. Building on the techniques 
previously used for a wide variety of applications, we are 
extending our methods to the semantic analysis of unre- 
stricted text. This has placed the greatest stress on en- 
hanced lexical processing. Most importantly, the system 
must now apply lexical information that is rich enough 
to cover the content words of arbitrary text, while pro- 
viding enough information about words in context to 
control ambiguity and produce "preferred" interpreta- 
tions. In the near term, we expect at least to reduce fu- 
ture customization efforts while experimenting with the 
effects of "text coding" or word sense-tagging without 
customization. 
We will report on some preliminary results in generic 
text processing, including the development of a 10,000- 
root core sense-disambiguated l xicon, the use of text 
preprocessing (including tagging and bracketing) to help 
control parsing, and the design of a module for collect- 
ing sense preferences from different, knowledge sources in 
text analysis. The program currently discriminates word 
senses (albeit somewhat, roughly) in arbitrary text. We 
will report on the current state of this effort and describe 
the key unresolved issues. 
Lexical inadequacy 
Most problems in natural language processing-- 
including information retrieval, database generation, 
and machine translation--hinge on relating words to 
other words that are similar in mneaning. Because of the 
extreme difficulty of producing any accurate deep-level 
analysis of text, many of these strategies are inherently 
word-based. In the case of information retrieval, current 
methods match words in a query with words in docu- 
ments, with the degree of match weighted according to 
the frequency of words in the texts. In database gen- 
eration, programns map individual words into names of 
frames or database records. In language translation, sys- 
tems use mappings between words in a "source" language 
and words in a "target" language to guide lexical choice 
(word choice). In all these applications, current methods 
are limited in their accuracy by the fact that many words 
have multiple senses, although different words often have 
similar meanings. 
We will refer to this as the problem of lexical inade- 
quacy, including the issue of genuinely ambiguous words 
as well as vague tern~s and derivative words (words that 
have a common root but vary slightly in meaning). Pre- 
vious approaches to the problem of lexical inadequacy 
fall into two basic categories-word-based approaches and 
deep-level approaches. Word-based approaches have ad- 
359 
dressed the problem in several general ways, including 
using co-occurrence and other contextual information as 
an indicator of text content to try to filter out inac- 
curacies, using word roots rather thau words by strip- 
ping affixes, and using a thesaurus or synonym list that 
matches words to other words. Deep-level approaches 
use a knowledge representation, or interlingua, to reflect 
text content, thereby separating text representation from 
the individual words. Deep-level approaches caJ~ be more 
accurate than word-based approaches, but have not been 
sufficiently robust to perform any practical text process- 
ing task. This lack of robustness i generally due to the 
difficulty in building knowledge bases that are sufficient 
for broad-scale processing. 
Text  cod ing  
Our approach tries to take advantage of the main ben- 
efit of word-based analysis, i.e. the explicit recogni- 
tion in text representation of the relationship between 
words that derive from a common root, while overcom- 
ing the main limitation, i.e. the loss of information be- 
tween complete text and word roots. The idea is that 
the first step in text processing should be to develop a 
"recoding" or sense-tagging of the source text that cap- 
tures word-level knowledge as well as any deeper infor- 
mation the system is able to produce. In theory, this 
approach would lead to capabilities that are no worse, 
with zero customization, than word-based methods for 
information retrieval, but allow for easy improvement 
using more knowledge-intensive methods. This theory 
is still untested, although there is some preliminary evi- 
dence that word sense tagging could improve information 
retrieval system performance \[6\]. 
As an example of the input and output of the sys- 
tem, the following is an arbitrary segment of Wall Street 
,Journal text with the resulting coding. Each word is 
tagged with its part of speech and sense code (a. number 
suffix), along with a parent concept. For example, the 
tag \[changing verb_3 (c-replacing)\] shows that the 
input word is "changing", the preferred sense is number 
3 of the verb, and that this sense falls under the concept 
c - rep lac ing  in the hierarchy. The program produces 
this output by analyzing the text in several stages, from 
stochastic tagging through semantic interpretation, and 
collecting results in a matrix of word senses and prefer- 
ence scores. 
The network also is changing its halftime 
show to include viewer participation, in an at- 
tempt to hold on to its audience through half- 
time and into the second halves of games. One 
show will ask viewers to vote on their favorite 
all-time players through telephone polls. 
\[changing verb_3 (c-replacing) \] 
\ [ i ts  ppnoun_l (c-obj) \] 
\[halftime noun_l (c-ent ity)  \] 
\[show c-act-of-verb_show1 (c-manifesting) \]
\[to *infl* \] 
\[include verb_2 (c-grouping) \] 
\[viewer c-verb_view2-er (c-entity) \] 
\[participation c-r esult- of-being-verb_part ic ipat e i 
(c-causal-state) \] 
\[*comma* *ptmct* \] 
\[in prep_27 (c-group-part) \]
\[an det_l (c-def inite-qual)  \]
\[attempt c-act-of-verb_attemptl (c-attempting) \]
\[to *infl* \] 
\[hold verb_4 (c-positioning) \] 
\[on adv_l (c-range-qual c-continuity-qual) \] 
\[to prep_l (c-destination-rel) \] 
\[its ppnoun_l (c-obj) \] 
\[audience noun_l (c-human-group) \] 
\[through prep_l (c-course-rel)  \] 
\[halftime noun_l (c-entity) \] 
\[and coordconj_l (c-conjunction) \] 
\[into prep_5 (c-engage-in) \] 
\[the det_l (c-definite-qual) \] 
\[second c-numword_twol-th (c-order-qual) \] 
\[halves noun_1 (c-portion-part) \] 
\[of prep_8 (c-stateobject-rel) \] 
\[games noun_l (c-recreation-obj) \] 
\[*period* *punct* \] 
\[one noun_l (c-ent i ty)  \] 
\[show c-act-of-verb_showl (c-manifesting) \]
\[will *aux* \] 
\[ask verb_2 (c-asking) \] 
\[viewers c-verb_view2-er (c-entity) \] 
\[to *infl* \] 
\[vote verb 1 (c-selecting) \] 
\[on prep_4 (c-temporal-proximity-rel) \] 
\[their ppnoun_l (c-obj) \] 
\[favorite adj_1 (c-importance-qual 
c-superiority-qual) \] 
\[all det_l (c-quantifier) \] 
\[*hyphen* *punct* \] 
\[time noun_l (c-indef-time-period) \] 
\[players c-verb_playl-er (c-entity) \] 
\[through prep_l (c-course-rel) \] 
\[telephone noun_l (c-machine) \] 
\[polls c-act-of-verb_polll (c-asking) \] 
\[*period* *punct* \] 
Naturally, this text recoding assumes a representation 
scheme for the enhanced text, a large lexicon including 
word senses and knowledge for discriminating them, and 
a robust parser and semantic interpreter. The rest of this 
paper will give a progress report on the development of
these resources o far. 
\[the det_l (c-definite-qual) \] 
\[network noun_2 (c-entertainment-obj 
c-business-org c-system) \] 
\[also adv_l (a-numeric-qual) \] 
\ [ i s  *aux* \] 
The core  lex icon  
GE's core lexicon development followed an exper- 
iment with a moderate-sized (10,000-unique root), 
commercially-available lexicon, which demonstrated 
360 
many substantive problems in applying lexical resources 
to  text processing. The lexicon had good morpl~ological 
and gran~n~atical coverage, as well as a thesam-us-based 
semantic representation of word meanings. However, it 
was inadequate for producing semantic representations 
of text because it did not provide reasonable informa- 
tion for discriminating word senses. Building from this 
effort, we designed and constructed a lexicon of roughly 
the same size that included much more word-sense infor- 
mation, as well as constraining the number of senses of 
each entry t,o avoid spurious semantic interpretations. 
The main features of the new lexicon are a hierarchy of 
1,000 parent concepts for encoding semantic preferences 
and restrictions, sense-based morphology and subcate- 
gorization, a distinction bet,ween primary and secondary 
senses and senses that require particular "triggers" or 
appear only in specific contexts, and a broad range of 
colloca.tiona1 information. For example, the following 
are the lexical entries for the word "issue": 
( issue 
:POS noun 
:SENSES 
( (  issue1 
:EXAMPLE (address important issues) 
:TYPE p 
:PAR (c-concern) 
:ASSOC (subject) ) 
( issue2 
:EXAMPLE (is that the october issue?) 
:TYPE s 
:PAR (c-published-document) 
:ASSOC (edition) ) ) )  
( issue 
:POS verb 
:G-DERIV nil 
: SENSES 
ssuei 
SYNTAX (one-obj io-rec) 
EXAMPLE (the stockroom issues supplies) 
TYPE p 
PAR (c-giving) 
ASSOC (supply) 
S-DERIV ((-able adj tr-ability) 
(-ance noun tr-act) 
(-er noun tr-actor)) ) 
( issue2 
:SYNTAX (one-obj io-rec) 
:EXAMPLE (I issued instructions) 
:TYPE p 
:PAR (c-informing) 
:ASSOC (produce) 
:S-DERIV ((-ance noun tr-act)) 
ssue3 
SYNTAX (one-obj no-obj) 
EXAMPLE (good smells issue from the cake) 
TYPE s 
PAR (c-passive-moving) ) ) )  
The lexicon, by design, includes only the coarsest dis- 
tinctions anlong word senses; thus the financial sense of 
"issue" (e. g., a new securit,y) falls under the same core 
sense as the latest "issue" of a, ma,gazine. This means 
that,  for a task like data.base genera.tion, task-specific 
processing or inference must augment the core lexical 
knowledge, but avoids many of the problems with consid- 
ering many nuances of meaning or low-frequency senses. 
For example, the "progeny" sense of issue, as well as the 
"exit" sense, are omrnitted from our lexicon. The idea 
is to preserve in the core lexicon the common, coarsest 
distinctions among senses. 
Each entry has a part of speech :POS and a set of set 
of core :SENSES. Each core sense has a :TYPE field that 
indicates p for all primary senses and s for secondary 
senses. While we are in the process of enriching the in- 
formation cont,ained in this field, the general rule is that 
the semantic interpreter should not consider secondary 
senses without specific contextual information. For ex- 
ample, the word "yard" can mean an enclosed area, a 
workplace, or a unit, of measure, but only the enclosed 
area sense is considered in the zero-context. 
The :PAR field links each word sense to its immediate 
parent in t,he semantic hierarchy. Without going through 
the entire hierarchy, it is difficult to convey the seman- 
tics of each sense, but the parents and siblings of the two 
senses of the noun "issue" can give an idea of the cover- 
age of the lexicon. In the output below, word senses are 
given by a root followed by a sense number, with concep- 
tual categories designated by any atom beginning with 
c-. Explicit derivations a.re shown by roots followed by 
endings and additional type specifiers: 
NOUN-ISSUE1: 
PARENT CHAIN: c-concern c-mental-obj c-obj 
c-entity something 
SIBLINGS: (all nouns) regardl realm2 
puzzle1 province2 premonition1 pity1 
pet2 parameter1 ground3 goodwill1 
feeling2 enigma1 dr aw 2 department2 
concern1 cause2 care1 business3 
baby2 apprehend-ion-x 
NOUN-ISSUE2: 
parent chain: c-published-document c-document 
c-phys-obj c-obj c-entity something 
SIBLINGS: (all nouns): week-ly-x 
transcript1 tragedy2 tome1 
supplement2 strip4 source2 
serial1 scripture1 romance2 
profile2 digest1 bible1 
paper3 paper2 pamphlet 1 
obituary1 novel1 notice2 
memoir1 map 1 manual 1 
library1 journal1 handbook1 
guide 1 grammar1 gazette1 
feature4 facsimile1 epic1 
fiction1 column1 book1 
volume1 
thesaurus1 
sof twarel 
publicat ion2 
paperback1 
omnibus1 
month-ly-x 
magazine 1 
anthology1 
dissertation1 
encyclopedia1 
period-ic-al-x 
directoryl 
comicl 
calendarl 
articlel 
copy2 atlasl dictionaryl 
column2 blurb1 cataloguel 
bulletinl brochurel biographyl 
bibliographyl constitute-ion-xl 
The basic semantic hierarchy acts as a sense- 
disambiguated thesaurus \[7\], under the assumption that 
in the absence of more specific knowledge word senses 
will tend to share semantic constraints with the most 
closely related words. Note that derivative lexical en- 
tries, such as week- ly -x  above, do "double duty" in 
the lexicon, so that an application program can use the 
derivation as well as the semantics of the derivative form. 
The :ASSOC field, not currently used in processing, 
includes the lexicographer's choice of synonym or closely 
related words for each sense. 
The :SYNTAX field encodes syntactic constraints and 
subcategorizations for each sense. Where senses share 
constraints (not the case in this example), these can be 
encoded at the level of the word entry. When the syntac- 
tic constraints (such as io - rec ,  one-ob j ,  and no-obj)  
influence semantic preferences, these are attached to the 
sense entry. For example, in this case "issue" used as 
an intransitive verb would favor "passive moving" even 
though it is a secondary sense, while the io - rec  subcat- 
egorization in the first two senses means that the ditran- 
strive form will fill the recipient conceptual role. The 
grammatical knowledge base of the system relates these 
subcategories to semantic roles. 
The :G-DEKIV and :S-DEKIV fields mark morphologi- 
cal derivations. G-DERIV (NIL in this case to indicate no 
derivations) encodes these derivations at the word root 
level, while S-DEItIV encodes derivations at the sense 
preference l vel. We have been gradually moving more of 
the derivations to the sense level on the basis of corpus 
analysis. For example, the S-DERIV constraint allows 
"issuance" to derive from either of the first two senses 
of the verb, with "issuer" and "issuable" deriving only 
from the "giving" sense. 
The derivation triples (such as ( -e r  noun t r _actor ) )  
encode the form of each affix, the resulting syntactic 
category (usually redundant), and the "semantic trans- 
formation" that applies between the core sense and the 
resulting sense. For example, the "issuer" in this case 
would play the actor role of sense one of the verb issue. 
Because derivations often apply to multiple senses and 
often result in different semantic transformations (for ex- 
ample, the ending - ion  can indicate the act of perform- 
ing some action, the object of the action, or the result 
of the action), the lexicon often contains strongly "pre- 
ferred" interpretations, to help control the ambiguity. 
The lexicon currently contains 8,775 roots (with noun 
and verb roots separated) and 13,415 senses. In addition, 
there are about 10,000 explicit derivations. 
In applying the lexicon, the most obvious errors arise 
from collocational expressions, so the lexicon now in- 
cludes a substantial number of (currently several hun- 
dred) common collocations, such as verb-particles and 
verb-complement combinations. These expressions are 
often semantically productive, but the representation f
common expressions helps the semantic interpreter to 
apply preferences. For example, the following is one set 
of entries for expressions with take: 
( take  
:POS verb 
: SPECIAL 
(( takeS0 
: S-COMPOUNDS 
((Vc (or (member c-verb_advise2-obj 
c-act-of-verb_blamel 
c-act-of-verb_losel noun_prof it2) 
c-giving) ) ) 
:EXAMPLE (take delivery) 
:PAR (c-receiving) ) 
( take51 
:S-COMPOUNDS ((vc (or (member noun effortl) 
c-temporal-obj c-energy))) 
:EXAMPLE (the job takes up time)) 
:PAR (c-require-tel) ) 
( take52 
:S-COMPOUNDS ((vc (member noun_news1 
noun_burdenl noun_load2 noun_pressure3 
noun_pressure2 noun_stressl noun_stress2 
c- act-of-verb_strainl) ) ) 
:PAR (c-managing) ) 
( take58 
:S-COMPOUNDS ((vc (or (member noun_office2 
noun_advant age i noun_chargel 
c-act-of-verb_controll noun_command2 
noun_r espons ibilit yl ) c-structure-tel 
c-shape-rel) ) ) 
:PAR (c-contracting) ) 
( take59 
:S-COMPOUNDS ((vc (member noun e f fec t1) ) )  
:PAR (c-transpire) ) 
( take60 
:S-COMPOUNDS ((vc (or c-task))) 
:PAR (c-deciding) )) 
The above entries contain only the verb-complement 
(vc) relations for "take". Whether these expressions are 
productive or not, the lexicon can include explicit word 
sense pairings (such as take52 with noun_pressureS), 
in which case the collocation helps to discriminate the 
senses of both verb and complement, or a pairing with 
a conceptuM category (such as take51 with c-temporai- 
obj), in which case the pairing is more likely to conflict 
with another but will cover a much broader class of ex- 
pressions (from take one's time to take years). 
The descriptions above cover most of the central com- 
ponents of the GE lexicon, especially those that allow 
for general sense preferences in text. The natural ques- 
tion is how to make use of all this knowledge in semantic 
interpretation. The next section describes the general 
problem of applying lexical knowledge. 
A little knowledge: 
a dangerous thing 
Success with the new" lexicon came quickly in retrofitting 
the knowledge base to domain-specific database genera- 
362 
tion systems. By allowing systems to specify key por- 
tions of the knowledge base for certain domains (about 
300 word senses for MUCK-II), we derived a benefit from 
the core lexicon (i. e. reducing lexicon-building effort) 
without introducing many spurious enses. However, the 
main goal of the effort was to achieve some sort of useful 
semantic results without any customization. The same 
algorithms applying the core lexicon to arbitrary sam- 
ples of the Wall Street Journal, not surprisingly, caused 
some serious problems. After three "easy" sentences, the 
program encountered the following typical input: 
A form of asbestos once used to make Kent 
cigarette filters has caused a high percentage 
of cancer deaths among a group of workers ex- 
posed to it more than 30 years ago, researchers 
reported. 
While producing over 100 parses for the above sentence, 
the program did quite poorly at first in determining 
the "preferred" sense of each word and even at distin- 
guishing noun forms from verb forms without any "do- 
main" knowledge. This seemed to be a practical exam- 
ple of the "I see a cow" problem (i.e. a large dictio- 
nary greatly increases the degree of ambiguity by intro- 
ducing low-frequency possibilities). After analyzing the 
program's performance on many examples of this type, 
we found that we had already reached diminishing re- 
turns in adding words and word senses to the lexicon, 
and that most of the problems with the sense tagging 
task broke down into three categories: (1) local syntac- 
tic preferences, such as that "make" is a verb (as opposed 
to "a make of car") and "filters" is a noun, (2) simple at- 
tachment preferences ( uch as minimal attachment), and 
(3) recognition of "senseless" parsing distinctions, such 
as the multiple attachments of "once used", "among a 
group...", and "exposed to it" (e. g. whether "among 
a group" modifies "deaths", "percentage", or "caused" 
does not affect semantic preferences). 
Word sense preferences are only loosely coupled to 
"traditional" syntactic and semantic preferences. Be- 
cause many preferences depend on local constraints and 
lexical relations, we chose to handle some of these is- 
sues by using text pre-processing to limit parsing and 
lexical ambiguity. The next section briefly describes the 
division of effort between pre-processing and traditional 
parsing. 
applying semantic onstraints as selectional restrictions 
and pruning off paths with low semantic "scores". 
The motivation for pre-processing, of course, is that 
ambiguity at the word level is such a problem. Even 
with our moderate-size l xicon, almost any English con- 
tent word has more than one part of speech. "Obvi- 
ous" nouns such as table and case can appear as verbs, 
and almost all verbs can appear as nouns. Tagging has 
emerged as an essential component in corpus-processing 
systems, removing or reducing this part-of-speech am- 
biguity. Our effort uses a tagger to perform dynamic 
part-of-speech tagging based on lexical and morpholog- 
ical analysis. The tagger is in some ways similar to 
Church's method \[9\], but is lexicon-dependent (Church's 
system does not use morphology) and combines tatis- 
tics with heuristics (such as knowing that words follow- 
ing determiners are nouns, rather than relying only on 
specific rules). The tagger tags only content words, and 
processes input at a rate of 500,000 words per hour. 
While the tagger uses a simple lexical ookup, we found 
it useful to use another pre-processing procedure to cor- 
rect some grammar-specific tagging problems as well as 
to fetch collocations from the lexicon before parsing. In a 
few cases, this post-tagging procedure re-introduces am- 
biguity where the tagger gives a specific choice. While 
the accuracy of the tagger is highest when it is heavily 
biased toward nouns, the accuracy of the parser depends 
on having some verbs. 
After pre-processing, the TRUMP parser and semantic 
interpreter \[8\] go to work on the tagged text, collecting 
relations (such as modification and verb-complement) a  
the level of each clause. The sense preference mecha- 
nism assigns a total score to each relation to help with 
attachment, as well as maintaining a weighted vector of 
preference information that determines the final sense 
tagging of the text. The final sense tag thus does not 
depend on having a single final correct parse. 
The following list describes the vector of five prefer- 
ence scores for each word sense, along with the five con- 
tributing preferences for each role filler: 
Sense preferences: 
- frequency preference (zero-context) 
- morphological pref. (primary or secondary) 
- cluster preference (based on topic, etc.) 
- collocation (phrase) preference 
- syntactic preference of sense 
Process ing  and  pre -process ing  
The current style of processing separates both syntac- 
tic and semantic analysis into two stages. The pre- 
processing stage performs a morphological nalysis and 
quick lexical lookup of the text, followed by tagging 
and bracketing (including stochastic tagging with cor- 
rection) and col\]ocational nalysis. The result of this 
pre-processing is a pre-filtered version of the text, with 
some of the lexical amnbiguity eliminated as well as base- 
line semantic preferences. In the second stage, a more 
complete analysis parses the text in a chart style \[8\], 
Roel-filler preferences: 
- preference for filer, independent of attachment 
- role pref. (how well filler fills role) 
- rel pref. (how well frame "likes" role) 
- base preference (how well role likes frame) 
- syntactic preference of filler 
Since each word sense can have roles, the relations be- 
tween head and filler reflect he interactions among sense 
preferences in the text. The final choice of sense tags 
thus indirectly reflects correct attachment and syntactic 
analysis. 
363 
Certainly, the bulk of work that remains is in "filling 
out" these sparse preference vectors. The next section 
comments on the results produced using the still-sparse 
preference information. 
system to sense tagging of arbitrary text. We expect o 
evaluate these results on tasks in information retrieval, 
and, later, machine translation, to determine the like- 
lihood of achieving substantive improvements hrough 
sense-based semantic analysis. 
Current status and interim results 
It is still difficult to evaluate the results of this sort of ef- 
fort. The new lexicon and sense preference mechanism at 
least shows strong evidence of improved transportability, 
since the task of customizing the lexicon to a limited do- 
main now takes no more than a day or two. The system 
also shows excellent lexical and morphological coverage, 
with well over 90% of non-proper-noun word occurrences 
covered. When tested on the Wall Street Journal texts 
(for which there has been no adaptation or customization 
aside from a company-name r cognizer), it rarely pro- 
duces a single correct parse; however, the partial parses 
produced generally cover most of the text at the clause 
level. 
The examples of sense-coded text shown earlier are 
produced by combining clause-level fragments produced 
by the analyzer. Since most semantic preferences appear 
at this level (and those that do not, do not depend on 
syntactic analysis), the results of this sense-coding are 
encouraging. At least, we have never before been able 
to produce any partial semantic results from processing 
arbitrary text. 
We made an unsuccessful attempt at evaluating the 
accuracy of sense-tagging over a corpus. First, we dis- 
covered that a human "expert" had great difficulty iden- 
tifying each sense, and that this task was far more te- 
dious than manual part-of-speech tagging or bracketing. 
Second, we questioned what we would learn from the 
evaluation of these partial results, and have since turned 
our attention back to task-oriented evaluation. 
Our next step is to evaluate the effect of text cod- 
ing on an information retrieval task, by applying tradi- 
tional term-weighted statistical retrieval methods to the 
recoded text. One intriguing aspect of this approach 
is that errors in distinguishing sense preferences should 
not be too costly in this task, so long as the program is 
fairly consistent in its disambiguation of terms in both 
the source texts and the input queries. At the same 
time, we will be applying the system to much broader 
database generation projects than those of SCISOR and 
MUCK-II. 
Conclusion 
We have developed a substantial knowledge base for text 
processing, especially a word-sense-based lexicon, and 
applying this new lexicon to semantic interpretation and 
database generation. In database generation, the new 
knowledge base has proven successful in reducing the 
amount of lexicon engineering required, although cur- 
rent database generation tasks are still too small for this 
effect o be more than marginal. In generic text process- 
ing, there are some encouraging results from applying the 
References 
\[1\] B. Grosz, D. Appelt, P. Martin, and F. Pereira. 
TEAM: An experiment in the design of transportable 
natural language interfaces. Technical Report 356, 
SRI International, 1985. 
\[2\] Madeleine Bates and Robert J. Bobrow. A trans- 
portable natural language interface for information 
retrieval. In Proceedings of the 6th Annual Interna- 
tional ACM SIGIR Conference, ACM Special Inter- 
est Group on Information Retrieval and American 
Society for Information Science, Washington, D.C., 
1983. 
\[3\] Paul S. Jacobs and Lisa F. Rau. The GE NLToolset: 
A software foundation for intelligent ext processing. 
In Proceedings of the Thirteenth International Con- 
ference on Computational Linguistics, Helsinki, Fin- 
land, 1990. 
\[4\] Lisa F. Rau and Paul S. Jacobs. Integrating top- 
down and bottom-up strategies in a text processing 
system. In Proceedings of Second Conference on Ap- 
plied Natural Language Processing, pages 129-135, 
Morristown, NJ, Feb 1988. ACL. 
\[5\] Beth Sundheim. Second message understanding con- 
ference (MUCK-II) test report. Technical Report 
1328, Naval Ocean Systems Center, San Diego, CA, 
1990. 
\[6\] R. Krovetz. Lexical acquisition and information re- 
trieval. In U. Zernik, editor, First International Lex- 
ical Acquisition Workshop. 1989. 
\[7\] E. Fox, J. Nutter, T. Ahlswede, M. Evens, and 
J. Markowitz. Building a large thesaurus for informa- 
tion retrieval. In Proceedings of Second Conference 
on Applied Natural Language Processing. Association 
for Computational Linguistics, February 1988. 
\[8\] P. Jacobs. TRUMP: A transportable language un- 
derstanding program. Technical Report CRD89/181, 
General Electric Corporate Research and Develop- 
ment, Schenectady, NY, 1989. 
\[9\] K. Church, W. Gale, P. Hanks, and D. Hindle. Pars- 
ing, word associations, and predicate-argument rela- 
tions. In Proceedings of the International Workshop 
on Parsing Technologies, Carnegie Mellon University, 
1989. 
364 
