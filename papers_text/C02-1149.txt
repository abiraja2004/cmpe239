Entering Text with A FourButton Device
Kumiko TanakaIshii and Yusuke Inutsuka and Masato Takeichi
The University of Tokyo
 Bunkyoku Hongo Japan
fkumiko inu takeichigipltutokyoacjp
Abstract
This paper presents the design of a textentry device
that requires only four buttons Such a device is ap
plicable as the text interface of portable machines and
as an interface for disabled people The textentry
system is predictive the basis for this is an adaptive
language model Our evaluation showed that the sys
tem is at least as ecient for the entry of free text as
the textentry systems of currentgeneration mobile
phones The system requires fewer keystrokes than a
full keyboard After adaptation one user reached a
maximum speed of  wpm
 Introduction
Electronic machinery is becoming smaller recent de
velopments in palmtop and mobilephone technologies
oer dramatic examples of this process Since smaller
machines are more portable their users have freer ac
cess to information Here however the user interface
is a major issue
If a machine is being used as a medium for person
toperson communications a natural interface might
be speechbased For other tasks however like brows
ing through Internet pages or looking up databases
the most natural tool for control and data entry is
still the keyboard
Mobile machines oer little surface space so only
a few buttons are available for the entry of text The
most representative form is the use of 	
 keys for text
entry on mobile phones However even smaller ma
chines continue to appear such as watchsized com
puters It might not be possible to equip such ma
chines with more than four or ve buttons Ques
tions then arise Is it possible to enter text with a
small number of buttons What about four buttons
How ecient can we make this
Other potential applications for text entry with
four buttons include the control panels of oce ma
chines and household machines Although these ma
chines increasingly contain functions that allow ac
cess to the Internet sucient surface space for a full
keyboard is often not available Another potential
application is in textentry interfaces for elderly and
disabled people A report of Advanced Design of
Integrated Information Society 


 indicates that
keyboard operation is the highest hurdle to the use of
computers by the aged The situation is even worse
for people with handrelated disabilities A textentry
device with four large buttons might facilitate human
machine communications by such people
The idea of decreasing the number of keys on
the keyboard in itself is not new The oldest re
alization of this idea is the stenotype keyboards
With the recent popularity of mobile machines re
searchers have become increasingly interested in one
handed keyboardsMathias et al 	 Most of the
work to date in this eld has been related to mo
bile phones Text entry on currentgeneration devices
remains cumbersome so innovative companiesTegic
 


ZICorp 


Slangsoft 


 have pro
posed predictive methods for the more ecient entry
of text by implementing a method that had rst been
proposed some years earlierRau and Skiena 	
The results of several studies have veried its e
ciencyJames and Reischel 

	TanakaIshii et al



 so the technology looks promising in the con
text of mobile phones
Our study goes further in decreasing the number of
buttons than the abovecited studies In our study
we tried various textentry methods and found the
predictive method to be the best As far as we know
no other study that includes the application of a lan
guage model has yet been carried out in this context
neither has the eciency of this approach been ex
amined Additionally the major contribution is our
study of the potential power of a language model by
examining its actual eciency on a device with few
buttons
In the next section we rst show how text is en
tered via our TouchMeKey keypad
 An Example
Figure 		 shows the GUI for the TouchMeKey key
pad Nine buttons are visible with four on either side
of the central boxes plus a quit button on the right
hand side In this paper we only count those buttons
that are only used for the entry of characters that
is the four on the righthand side We also impose
the constraint that the buttons may only be pressed
one at a time because the inclusion of keychords in
creases the actual number of buttons by including the
combinations of keys
Six or seven letters of the alphabet are assigned to
each of the buttons The no 	 key has abcdef the
no  key has ghijkl the no  key has mnopqrs
and the no  key has tuvwxyz The small letters
Figure 	 Entering the word technology with the
TouchMeKey keypad
are assigned to the same keys as the corresponding
capital letters All other ASCII characters other than
the alphanumeric characters are assigned to the no
 key
Suppose that we have just entered the string hu
man language The text appears in the upper box
in the middle of the window the upper textbox in
Figure 		 We now wish to enter the word tech
nology Words are entered through a singletap
percharacter form of predictive entry a key is only
pressed once to enter a character For example the
no  button is pressed once to enter the t of tech
nology To enter the subsequent e the no 	 button
is pressed once
After the no 	 button has been pressed the Touch
MeKey window is as shown in Figure 	

 Here we
see two dierences from Figure 		 The rst is that
	 appears in the box in the middle of the window
This indicates the string that the user has just en
tered The second change is that some words have ap
peared in the lower box in the middle of the window
a listbox that we call the candidatebox These
words are the candidate words that correspond to the
users input 	
Each press of a button by the user makes the Touch
MeKey system automatically search the dictionary
for candidates The candidates include longer words
as well as if such words exist words of the same
length as the entered sequence of digits The can
didates are thus all words that begin with one letter
from tuvwxyz followed by one letter from abcdef
For example text was and vendors are candi
dates as is the twocharacter candidate we
The numerous candidates are sorted into an order
before they are placed in the candidate box and shown
to the user The order is according to word probabil
ity as determined on the basis of PPM prediction
by partial match which has been proposed in the
informationtheory domain A detailed description is
given in x but we summarize the methods essence
here as part of our explanation of Figure 	 The rele
vance of each candidate is measured by statistics from
two sources
Base dictionary the unigram statistics collected
from a huge corpus of newspaper data and
User corpus the ngram statistics obtained from a
small personal document supplied by the user
In this example the Base dictionary is constructed
from one year of issues of the Wall Street Journal
WSJ that contains  


 dierent words and the
User Corpus is a computer magazine that contains 	




 words The particular User corpus is the reason
for the appearance of the relatively uncommon word
vendors among the top ve candidates Figure 	
Our target technology appears as the second
ranked candidate In selecting this word the user
highlights it by using the down button on the left

Note that the most recently pressed button is framed by a
thick line
hand side of the windowFigure 	 and then presses
the enter button Figure 	 We see that the se
lected candidate now appears in the upper textbox


In describing our realization of the TouchMeKey
system outlined above the following four questions
are discussed in the remainder of this paper
Interface Is some method other than that described
above suitable for text entry with a fourbutton
device
Candidate Estimation How can the system esti
mate the relevance of each candidate
Key Assignment How should characters be as
signed to the individual buttons
Number Of Keys What is the minimum number of
keys required Is the entry of free text with only
two buttons reasonably ecient
 Interface
Various methods for the entry of text via a four
button device are conceivable The biggest choice is
whether or not to adopt a predictive method
 NonPredictive Entry Methods
Lets start by considering the case where we dont
adopt prediction This means that we need to enable
the exact entry of the individual characters via the
four buttons One method of this type involves as
signing an order to the characters on each key a key
is then pressed i times to obtain the ith character
we call this the multitap method This method is
commonly applied on mobile phones
However there are two problems with this method
Firstly the user often needs to press a key numerous
times to obtain a single target character Secondly
there is an ambiguity in the user action when two
characters assigned to the same button are to be en
tered one after another aa requires the entry of 		
that can also be b This situation requires the use
of an escape
A second possible method is to press a rst button
to select it and then enter the number i to select the
ith character which is assigned to the rst button
For example on many mobile phones o is obtained
by pressing the no  key and then the no  key
since o is the third letter on the no  key However
if the number of letters on each key is greater than
the number of keys entry of the higher i values is
implausibly dicult With the TouchMeKey system
for example a system for the easy entry of fth and
sixth characters etc is not possible
In short the free entry of text turns out to be too
dicult with a fourbutton device unless we adopt

As with any system where a predictive method is applied
the weak point of TouchMeKey is the processing of unknown
words which do not appear in the dictionary Therefore it
is important that the Base dictionary contains a rich vocabu
lary When however an unknown word occurs it may still be
entered character by character by using the methods described
inx or the system may be connected with a larger dictionary
via a network
Table 	 Data used in this work
name WSJ ZIFF JA
usage base user user
dictionary corpus corpus
domain newspaper computer scientic
magazine paper
Total no wrds  	 

million wrds
No di wrds 
 

 
thousand wrds
Wrds in common   
with Base
Dictionary 
Wrds Avr len   
L
avr

Test document  
 	
no wrds
No di wrds   
in test doc
prediction This is so even for the case of English the
written form of which has relatively few characters
and is even more so for languages with large numbers
of characters such as Chinese Japanese or Thai 
characters We are thus obliged to use prediction
 Predictive Text entry
Generally there are two ways to predict candidates
The rst is the singletap method The earliest
appearance of this idea was at the beginning of the

s in Japan in discussions of processing systems
for Japanese textCoLtd 	 more recent work
has been concerned with mobile phones James and
Reischel 

	TanakaIshii et al 



The second way is prediction by prefix Given a
user input the system searches for words with the
corresponding prefix
This method of collecting candidates to be oered
to the user has been particularly successful in the en
try of Chinese text The method has also been applied
to certain textentry systems in the manmachine in
terface domain too Masui 	
As the description of x indicates the combination
of the two methods is adopted in our TouchMeKey
system It thus needs to process many candidates
for a single user entry The mechanism of estimating
levels of relevance for the words is explained in the
next section
 Applying an Adaptive Language
Model in Candidate Estimation
As was summarized in x the PPM prediction by
partial match framework is used by TouchMeKey
to estimate the relevance of candidates Its charac
teristic is that the word distribution is adapted to the
style of the users corpus
PPM was originally proposed as an adaptive lan
guage model for use in improving the compression
rates of arithmetic coding The estimation of prob
abilities by PPM thus guarantees a lowering of the
entropy of the language model PPM has successfully
been adapted to the userinterface domain in certain
previous worksTanakaIshii et al 

	Ward et al




Broadly PPM interpolates the ngram counts in
the user corpus and the statistics in the base dictio
nary The following formula is used to estimate a
probability for the ith word w
i
 P w
i

P w
i
 
kmax
X
k
u
k
P
k
w
i
 	
Here k the order indicates the number of words be
fore w
i
that are used in the calculation of P
k
w
i

For example P

w
i
 is estimated on the basis of the
occurrence of w
i
and w
i
 P
k
w
i
 is calculated as
P
k
w
i
 
c
k
w
i

C
k

where C
k
is the frequency of the order k as a context
and c
k
w
i
 is the frequency with which w
i
occurs in
that context P
k
w
i
 when k  	 describes a base
probability that is obtained from the base dictionary
For other k P
k
w
i
 is calculated from statistics ob
tained from User corpus Finally u
k
is a weighting
probability that is multiplied to P
k
w
i
 to obtain the
nal P w
i
 Of the many studies of u
k
Teahan 



we have chosen PPMABell et al 	
 the sim
plest because our preliminary experiments showed no
signicant dierence in performance among the meth
ods we tried
We decided to utilize this PPM framework because
the context is the most suitable item of information
for the elimination of irrelevant candidates Small
machines are in a personal context and oce and
household machines are used in particular contexts
With this method the language model is adaptable
on the y This is achieved by simply accumulating
the users newly entered text at the end of the user
corpus
In this paper the Base dictionary contains the uni
gram probabilities obtained from Wall Street Journal
as was explained in x We prepared various User
corpora three in English three in Japanese and two
in Thai Of these the characteristics of two of the
English User corpora that are used in x are given in
Table 	
 Key Assignment
The assignment of characters to the respective but
tons is one determinant of the eciency of text en
try For example if all characters from a to w are
assigned to the rst key and x y and z are re
spectively assigned to the second third and fourth
keys the performance in word prediction will clearly
be bad The problem of key assignment remains even
when we have eliminated such extreme possibilities
Table  Key assignments and entropy
N
K
Lab Groups of characters Entropy
  S

S

abcdefghijkl 
mnopqrstuvwxyz
 A abcdef ghijkl 

mnoS

 pqrsS

 tuvwxyz 

 B S

S

 abcdef ghijkl 
mnopqrs tuvwxyz
 C S

mno abcpqrs 
deftuv ghiwxyz jklS


 A abcdef ghijkl 
mnopqrs tuvwxyzS

S


 B S

abc defghi 
jklmnopqrs tuvwxyzS


 C S

jkl abcmno 
defpqrstuv ghiqxyzS


 A S

abcdef ghijklmno 

pqrstuvwxyS


 B S

ghipqrs abcjkltuv 

defmonqxyzS


 C S

jklpqrstuv abcdefmno 	
ghiwxyzS


	 S

abcdefghijkl 	
mnopqrstuvwxyzS


because there are many plausible assignments We
thus need to be able to measure the performance of a
key assignment
One way to measure this is to experimentally de
cide it by automatically entering some documents as
will be described in the x later in this paper How
ever the result of such a test is dependent on the test
document which is used Lowerlevel settings such
as key assignments should as much as is possible be
for generalpurpose use
Having key sequences as C and the target word
as W  the task of the system is to estimate a better
W from C Information theory provides us with a
tool for estimating the uncertainty of this task the
average conditional entropy The denition of this
quantity HW jC is given by
HW jC 
 
wc
P C  cHW  wjC  c
 
wc
P C  cW  wlogP W  wjC  c
where P C  c is the probability of the input se
quence c and P W  wjC  c is the conditional
probability of words for the given c When the es
timation of W is less certain HW jC has a larger
value The lower the entropy the less uncertain the
estimation of the word Therefore the conditional
entropy is suitable as a method for the evaluation of
key assignments
One other factor that we need to consider at this
point is the order of the alphabet English has an
alphabet order that even children know If this order
is neglected and the letters ajxgukh are assigned to
a given key the interface will become dicult for the
beginners although it might be the most ecient for
a welltrained user Therefore the key assignments
had better reect such linguistic tradition
We took this into consideration in generating some
possible key assignments Table  is a list of the as
signments and their values of conditional entropy as
calculated on the basis of one year of issues of WSJ
The rst column shows the total number of keys be
low denoted by N
K
 We here consider the situa
tions where there are ve three and two as well as
four buttons The second column gives a label for
each of the key assignments In the third column
the characters to be assigned to the respective but
tons are grouped in parentheses For example A
indicates an assignment to four keys with abcdef as
signed to the rst button ghijkl to the second but
ton mnopqrs to the third and tuvwxyz and other
ASCII symbols to the fourth The capital letters are
assigned to the same keys as the corresponding small
letters S

and S

indicates the nonalphabetic ASCII
symbols

 Note that A corresponds to the Touch
MeKey assignment which we saw in Figure 		 The
groupings with the label C are more random than
those with other two
In general entropy values fall as the number of keys
increases This is a readily comprehensible result a
larger number of keys eases the task of estimation
thus making it less uncertain When we compare the
values for assignments to the same numbers of keys
we see that the entropy values dier considerably For
example the entropy of B indicates more uncer
tainty than the other x assignments The entropy
value is the same as for A although the number of
keys in use is dierent this is comprehensible when
we look at the similar character groupings of A and
B
In this paper we evaluate the use of key assign
ments with the label A on TouchMeKey since they
have lower entropy values than the other settings
 Evaluation
 Number of Keystrokes
We attached an automatic textentry routine
to TouchMeKey and measured the numbers of
keystrokes that are needed per word The number
of keystrokes is the sum of the keystrokes required
for the input and selection operations Keystrokes
for selection are counted to be n when choosing the
nthcandidate
In the prediction of words there are multiple points
where the target word may be chosen For example in
Figure 	 the word technology appears as the second
best choice after the user has typed in 	 The user
may select the target at this point or type in another
	 to indicate the c and increase the targets rank
The automatic routine only chooses the target after
it has appeared as the best candidate otherwise the

These symbols are categorized into two groups according
to the categorization used on mobile phones
4
6
8
10
12
14
16
18
20
0 5000 10000 15000 2000
Av
r. 
N
o.
 o
f k
ey
st
ro
ke
s 
/ w
or
d
learning data size(words)
"baseline"
"2keys"
"3keys"
"4keys"
"5keys"
"10keys"
Figure  No keystrokes with learning of ZIFF
4
6
8
10
12
14
16
0 5000 10000 15000 2000
Av
r. 
N
o.
 o
f k
ey
st
ro
ke
s 
/ w
or
d
learning data size(words)
"baseline"
"2keys"
"3keys"
"4keys"
"5keys"
"10keys"
Figure  No keystrokes with learning of JA
routine continues to enter the word When the full
length of the word has been entered the target word
of the current ranking is chosen
Figure  and  show the relation between the
amount of learning data horizontal axis and the
number of keystrokes per word vertical The test
document is indicated in Table 	 th row Data of
the same kind but from dierent positions in the test
data are used for the learning data and the test data
The respective lines indicate learning when N
K
is
	
    and  The larger the N
K
 the lower
the line The horizontal solid line around  taps
per word indicates the baseline the average num
ber of keystrokes needed to process a single word on
a full keyboard This is calculated as L
avr
in Ta
ble 		for space Note that TouchMeKey auto
matically enters the space
When there is no learning data TouchMeKey
needs far more keystrokes than the baseline How
ever after the learning of ten thousand words the
number of keystrokes goes below the baseline when
N
K
 
In order to see the results at macroscopic scale Ta
ble  shows the results after the learning of 
 thou
sand words The values indicate perword keystrokes
and the percentages in the parentheses show the ra
Table  No keystrokes per word with learning of 




 words of the user corpus
total number ZIFF JA
of keys N
K

	
 	 			
 	 	
 	 
	
  
		
 		 	


tios by which the numbers of keystrokes decrease as
compared with the case of no learning of a user doc
ument We see that the numbers of keystrokes are
reduced by about 
 for both ZIFF and JA When
N
K
  the value falls to around 	 Since L
avr
	
is around  TouchMeKey provides a reduction in
numbers of keystrokes of almost   as compared
with a full keyboard Supercially this looks like a
small gain However it is surprising that even with 
buttons text may be entered with fewer keystrokes
than with a full keyboard
When N
K
  on the other hand the number of
keystrokes remains at around 
 per word There
fore when N
K
 the system requires a larger num
ber of keystrokes than the baseline
TouchMeKey also runs in Japanese and Thai so
we executed analogous experiments with those lan
guages We obtained very similar graphs in these
cases To resume here are our observations across
three languages
 Learning is indispensable for systems with small
N
K
values to perform better than the baseline
 However a large amount of learning data is
not necessary text with ten thousand words is
enough
 When N
K
  the number of keystrokes does
not fall below the baseline
 Speed
Eight subjects were hired to test TouchMeKey three
in English three in Japanese and two in Thai Two
of the subjects for the English are native speakers of
Japanese The other subjects were the native speak
ers of the languages in the respective tests
The subjects were told to do 	
 sessions of test
ing Each session is 
 minutes long the subject was
told to continue to enter the given text as quickly as
was possible and without pausing during each of the
sessions The vocabulary of the given text is solely
from the learned user corpus TouchMeKey learned
a 	
thousandword user corpus before it was handed
to the subjects For the text entry they were given
hardware controllers that work with TouchMeKey
Figure  gives the results on speed The horizontal
axis describes the sessions and the vertical axis shows
the average numbers of words per minute wpm in
each session The respective lines indicate the speed
4
6
8
10
12
14
16
18
20
22
24
1 2 3 4 5 6 7 8 9 10
sp
ee
d 
(w
pm
)
session
"English-1"
"English-2"
"English-3"
"Japanese-1"
"Japanese-2"
"Japanese-3"
"Thai-1"
"Thai-2"
Figure  Speed
of the subjects over time After  hours training en
try by each of the subjects was at some rate above
	 wpm The speed of entry by the multitapping
method on a mobile phone is in the range from  to
	
 wpmJames and Reischel 

	 so TouchMeKey
obviously allows higher rates of text entry Further
more the speeds are comparable to those obtained
with the singletapping method on mobile phones 
to  wpmJames and Reischel 

	 One subject
set the record reaching  wpm
This speed is comparable to that of an expert with
the singletapping method Predictive text entry thus
prevented deterioration of performance despite the
number of buttons being decreased from 	
 to 
With regard to human learning the more highly
the subject was trained the faster he or she became
The speeds of some subjects who had had diculties
at the beginning of the tests had doubled by the end
Languagebylanguage comparison reveals that
Japanese text entry was fastest Although the en
tropy value for Japanese is by far greater than the
values for Thai and English 
 for Japanese and
		 for Thai the Japanese subjects managed well
with TouchMeKey because they are accustomed to
the use of predictive text entry in kanakanji conver
sion
We must admit that TouchMeKey places a heavier
cognitive load on users than does text entry via a
full keyboard 
 to 
 wpm or a stylus and virtual
keyboard  wpmZhai et al 


 However we
regard the speed as satisfactory in comparison with
those achieved by using singletapbycharacter entry
systems on mobile phones
 Conclusion
We have presented TouchMeKey a text entry device
that requires only four buttons and aspects of its de
sign and testing Several characters of the alphabet
are assigned to each of four buttons and the user en
ters a document with the aid of a predictive textentry
system The device is realized by software that esti
mates the word that most probably corresponds with
the user input The estimate is based on an adaptive
statistical language model Firstly a base model is
constructed from a large body of text from newspa
pers the model is then adapted to the local context
by using a smaller user corpus of  thousand words
Our evaluation shows that text entry with this sys
tem is as ecient as text entry on a mobile phone
The number of keystrokes is reducible to a number
below that required on a full keyboard The average
speed of our test subjects was  words per minute
and the fastest subject recorded 	
 wpm We also dis
cussed the possibility of entering text via even fewer
keys eg three keys However the usability of a
threekey device turned out to be questionable be
cause the number of keys needed to enter text be
comes large
Our future direction will be to investigate the ac
tual application of the system on smaller machines
and to develop a textentry system for use by elderly
and disabled people
References
TC Bell TG Cleary and TH Witten  Text
Compression Prentice Hall
Toshiba CoLtd 	 Japanese entry system In
Japanese Patent  in Japanese
C James and K Reischel 	 Text input for mo
bile devices Comparing model prediction to actual
performance In Proceedings of the Annual SIGCHI
Conference
T Masui  Po box an ecient text input
method for handheld and ubiquitous computers In
the ACM Symposium on User Inter	ace Software
and Technology pages 

E Mathias IS MacKenzie and W Buxton 
Onehanded touch typing on a qwerty keyboard
In Human Computer Interaction volume  pages


Research Association of Advanced Design of
Integrated Information Society 	
httpwwwpreftoyamajpsections
matsplankadaikin
H Rau and S Skiena  Dialing for docu
mentsan experiment in information theory In
UIST
Slangsoft 	 Slangsoft home page
httpwwwslangsoftcom
K TanakaIshii Y Inutsuka and M Takeichi 	
Japanese input system with digitsCan Japanese
be input only with consonants In Human Lan
guage Technology Conference 


K TanakaIshii Y Inutsuka and M Takeichi 	
Personalization of text input systems for mobile
phones In NLPRS
WJ Teahan 	 Probability esti
mation for ppm In NZCSRSC
httpwwwcswaikatoacnz wjtpapers
NZCSRSCpsgz
Tegic  	 Tegic  home page
httpwwwtcom
D Ward AF Blackwell and DJC MacKay 	
Dashera data entry interface using continuous ges
tures and language models In the ACM Sympo
sium on User Inter	ace Software and Technology
pages 	

S Zhai M Hunter and BA Smith 	 The
metropolis keyboard an exploration of quantitative
techniques for virtual keyboard design In UIST
ZICorp 	 ZI home page Available from
http	

