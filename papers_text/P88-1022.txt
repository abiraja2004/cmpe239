TWO TYPES OF PLANNING 
IN  LANGUAGE GENERATION 
Eduard H. Hovy 
USC/Informat|on Sciences Institute 
4676 Ar\]miralty Way, Suite 1001 
Marina del Rey, CA 90292-6695, U.S.A. 
HOVY@VAXA.ISI.EDU 
Abst rac t  
As our understanding ofnatural language gener- 
ation has increased, a number of tasks have been 
separated from realization and put together un- 
der the heading atext planning I . So far, however, 
no-one has enumerated the kinds of tasks a text 
planner should be able to do. This paper describes 
the principal esson learned in combining a num- 
ber of planning tasks in a planner-realiser: plan- 
ning and realization should be interleaved, in a 
limited-commitment planning paradigm, to per- 
form two types of p\]annlng: prescriptive and re- 
strictive. Limited-commitment planning consists 
of both prescriptive (hierarchical expansion) plan- 
ning and of restrictive planning (selecting from op- 
tions with reference to the status of active goals). 
At present, existing text planners use prescriptive 
plans exclusively. However, a large class of p\]anner 
tasks, especially those concerned with the prag- 
matic (non-literal) content of text such as style 
and slant, is most easily performed under restric- 
tive planning. The kinds of tasks suited to each 
planning style are listed, and a program that uses 
both styles is described. 
1 I n t roduct ion  
PAULINE (Planning And Uttering Language In 
Natural Environments) is a language generation 
program that is able to realize a given input in a 
number of different ways, depending on how its 
pragmatic (interpersonal and situation-specific) 
This work was done while the author was at the Yale 
University Computer Science Departmentt New Haven 
This work was supported inpart by the Advanced Re- 
search Projects Agency monitored by the Office of Naval 
Research under contract N00014-82-K-0149. It was also 
supported by AFOSR contract F49620-87-C-0005. 
goals are set by the user. The program consists 
of over 12,000 lines of T, a dialect of LISP devel- 
oped at Yale University. 
PAULINE addresses imultaneously a wider 
range of problems than has been tried in any sin- 
gle language generation program before (with the 
possible exception of \[Clippinger 74\]). As is to 
be expected, no part of PAULINE provides a sat- 
iefactorily detailed solution to any problem; to a 
larger or smaller degree, each of the questions it 
addresses i solved by a set of simpl~ed, somewhat 
ad ho? methods. However, this is not to say that 
the program does not provide some interesting in- 
sights about he nature of language generation and 
the way that generators of the future will have to 
be structured. 
One insight pertains to the problems encoun- 
tered when the various tasks of generation - - both 
of text planning and of realization ~ are inter- 
leaved to provide plannlng-on-demand rather than 
strict top-down planning (which has been the ap- 
proach taken so far). The planning tasks that are 
best performed on demand tend to have short- 
range effects on the text (compared to those best 
performed in full before realization). In order 
to achieve the types of communicative goals such 
tasks usually serve, the planner must ensure that 
they work together harmoniously so that their 
effects support one another ather than conflict. 
This requirement imposes constraints on the orga- 
nlzation and architecture of a generation system. 
This paper describes PAULINE's architecture, 
the text planning tasks implemented, and how the 
tasks are managed. Unfortunately many details 
have to be left unsaid; the interested reader is re- 
ferred to relevant material at appropriate points. 
Overview descriptions appear in \[Hovy 87a, 87b\]. 
179 
1.1  The  Prob lem 
Depending on how the user sets the communica- 
tive goals, PAULINE produces over 100 variations 
of an episode that took place at Yale University 
in April 1986 (it also produces multiple versions 
of episodes in two other domains; see \[Hovy 86a, 
86b\]). In each case, PAULINE is also given a de- 
scription of the hearer and the same three princi- 
pal topics from a single underlying representation 
network. 
As a quick informal description of the episode, 
PAUL INE says: 
Exaxnple I. YALE UNIVERSITY PUNISHED 
A NUMBER OF STUDENTS FOR BUILDING A 
SHANTYTOWN ON BEINECKE PLAZA BY 
ARRESTING 76 STUDENTS AND TEARING IT 
DOWN ONE MORNING IN EARLY APRIL. THE 
STUDENTS WANTED YAlE TO DIVEST FROM 
COMPANIES DOING BUSINESS IN SOUTH 
AFRICA. FINALLY. THE UNIVERSITY GAVE 
IN AND ALLDVED THE STUDENTS TO 
REBUILD IT. 
This is the kind of description one may hear from a 
passerby. In contrast, when PAULINE is given the 
goals to be more formal and to slant its description 
of the episode toward the protesters, it produces: 
Example 2. AS A RD4INDER TO YAlE 
UNIVERSITY TO DIVEST FROM COI~ANIES 
DOING BUSINESS IN SOUTH AFRICA. A 
LARGE NUMBER OF CONCERNED STUDENTS 
ERECTED A SHANTYTOWN - - -  NAMED WINNIE 
14ANDELA CITY --- ON BEINECKE PLAZA IN 
EARLY APRIL. THE LOCAL COMMUNITY 
EXPRESSED SUPPORT FOR THE STUDENTS" 
ACTION. LATER, AT 6:30 AM ON APRIL 
14, THE SHANTYTe~ WAS DESTROYI~ BY 
OFFICIALS; ALSO, AT THAT TIME, THE 
POLICE ARRESTED 76 STUDENTS. THE STUDENTS 
REQUESTED THAT YALE UNIVERSITY GIVE TH~ 
PERMISSION TO REASSEMBLE IT ON BEINECKE 
PLAZA; CONCURRENTLY, SEVERAL LOCAL 
POLITICIANS AND FACULTY M~{BEP.S EXPRESSED 
CRITICISM OF YALE'S ACTIONS. FINALLY, YALE 
PERMITTED THE STUDENTS TO RECONSTRUCT THE 
SHASTYTOWN. 
Of course, in face-to-face conversations a protester 
would probably be less formal and more openly 
opinionated. PAULINE (although now spe-\]c~-g 
in support of the university) illustrates: 
Example  8. IT PISSES ME OFF THAT A 
FEW SHIFTLESS STUDENTS WERE our TO 
MAKE TROUBLE ON BEINECKE PLAZA ONE 
DAY. THEY TOOK OVER BEINECKE PLAZA 
AND BUILT A SHANTYTOWN. WINNIE 
MANDELA CITY, BECAUSE THEY WANTED 
YALE UNIVERSITY TO PULL THEIR MONEY 
OUT OF COMPANIES WITH BUSINESS IN 
SOUTH AFRICA. THE UNIVERSITY ASKED 
THE STUDENTS TO BUILD THE SHANTYTOWN 
ELSEWHERE, BUT THEY REFUSED. I AM 
HAPPY THAT OFFICIALS RDIOVED THE SHANTYTOWN 
ONE MORNING. FINALLY. YALE GAVE IN 
LET THE IDIOTS PUT IT UP AGAIN. AT THE 
SAME TIME YALE SAID THAT A COMMISSION 
WOULD GO TO SOUTH AFRICA IN JULY TO CHECK 
OUT THE SYST\]~f OF APARTHEID, BECAUSE THE 
UNIVERSITY WANTED TO BE REASONABLE. 
The construction of such texts is beyond the 
capabi~ties of most generators written to date. 
Though many generators would be capable of 
producing the individual sentences, some of the 
pre-real~ation planning tasks have never been 
attempted, and others, though studied exten- 
sively (and in more detail than implemented in 
PAULINE) have not been integrated into a single 
planner under pragmatic ontrol 
This paper involves the questions: what are 
these pl~n-;-g tasks? How can they all be inte- 
grated into one planner? How can extralinguistic 
communicative goals be used to control the plan- 
ning process? What is the nature of the relation 
between text planner and text realiser? 
2 Interleaving or Top-Down 
Planning? 
2.1  The  Troub le  w i th  T rad i t iona l  
P lann ing  
In the text planning that has been done, two prin- 
cipal approaches were taken. With the integrated 
approach, planning and generation is one contln- 
uous process: the planner-realizer handles yntac- 
tic constraints the same way it treats treats all 
other constraints (such u focus or lack of requisite 
hearer knowledge), the only difference being that 
syntactic constraints tend to appear late in the 
planning-realisation process. Typically, the gener- 
ator is written as a hierarchical expansion planner 
(see \[Sacerdoti 77\]) - -  this approach is exempU- 
fled by KAMP, Appelt's planner-generator (\[Ap- 
pelt 81, 82, 83, 85\]). With the #eparated approach, 
planning takes place in its entirety before realiza- 
tion starts; once planning is over, the planner is of 
no further use to the realizer. This is the case in 
the generation systems of \[McKeown 82\], \[McCoy 
180 
85\], \[R~sner 86, 87\], \[Novak 87\], \[Bienkowski 86\], 
\[Paris 87\], and \[McDonald & Pustejovsky 85\]. 
Neither approach is satisfactory. Though con- 
ceptually more attractive, the integrated ap- 
proach makes the grammar unwieldy (it is spread 
throughout he plan library) and is slow and 
impractical m after all, the realization process 
proper is not a planning task - -  and furthermore, 
it is not clear whether one could formulate all text 
planning tasks in a sufficiently homogeneous set 
of terms to be handled by a single planner. (This 
argument ismade more fully in \[How/85\] and \[Mc- 
Donald & Pustejovsky 85\].) On the other hand, 
the separated approach typically suffers from the 
stricture of a one-way narrow-bandwidth inter- 
face; such a planner could never take into account 
fortuitous yntactic opportunities - -  or even he 
aware of any syntactic notion! Though the sepa- 
ration permits the use of different representations 
for the planning and realization tasks, this solu- 
tion is hardly better:, once the planning stage is 
over, the realizer has no more recourse to it; if 
the realizer is able to fulfill more than one plan- 
ner instructions at once, or if it is unable to 
an instruction, it has no way to bring about any 
replanning. Therefore, in practice, separated gen- 
erators perform only planning that has little or 
no syntactic import - -  usually, the tasks of topic 
choice and sentence order. 
Furthermore, both these models both run 
counter to human behavior: When we speak, we 
do not try to satisfy only one or two goals, and we 
operate (often, and with success) with conflicting 
goals for which no resolution exists. We usually 
begin to speak before we have planned out the full 
utterance, and then proceed while performing cer- 
tain planning tasks in bottom-up fashion. 
2.2 A Solution: Interleaving 
T, Lking this into account, a better solution is to 
perform limited-commitment planning ~ to de- 
fer planning until necessitated by the realization 
process. The planner need assemble only a par? 
tial set of generator instructions m enough for 
the realization component to start working on 
and can then continue planning when the realiza- 
tion component requires further guidance. This 
approach interleaves planning and realization and 
is characterized by a two-way communication at 
the realizer's decision points. The advantages are: 
First, it allows the separation of planning and re- 
alization tasks, enabling them to be handled in 
appropriate terms. (In fact, it even allows the 
separation of special-purpose planning tasks with 
idiosyncratic representational requirements o be 
accommodated in special-purpose planners.) Sec- 
ond, it allows planning to take into account unex- 
pected syntactic opportunities and inadequacies. 
Third, this approach accords well with the psy- 
cholinguistic research of \[Bock 87\], \[Rosenherg 77\], 
\[Danks 77\], \[De Smedt & Hempen 87\], \[Hempen 
& Hoenkamp 78\], \[Hempen 77, 76\], and \[Levelt 
& Schriefers 87\]. This is the approach taken in 
PAULINE. 
But there is a cost to this interleaving: the type 
of planning typically activated by the realizer dif- 
fers from traditional top-clown planning. There 
are three reasons for this. 1. Top-down planning is 
prescriptive: it determines a series of actions over 
an extended range of time (i.e., text). However, 
when the planner cannot expand its plan to the 
final level of detail m remember, it doesn't have 
access to syntactic information m then it-has to  
complete its task by planning in-line, during real- 
ization. And in-line planning usually requires only 
a single decision, a selection from the syntactically 
available options. After in-line planning culmi- 
nates in a decision, subsequent processing contin- 
ues as realkation - -  at least until the next set of 
unprovided-for ptions. Unfortunately, unlike hi- 
erarchical plan steps, subsequent in-llne planning 
optidns need not work toward the same goal (or in- 
deed have any relation with each other); the plan- 
ner has no way to guess even remotely what the 
next set of optious and satisfiable goals might be. 
2. In-line planning is different for a second rea- 
son: it is impossible to formulate workable plans 
for common speaker goals such as pragmatic goals. 
A speaker may, for example, have the goals to im- 
press the hearer, to make the hearer feel socially~ 
subordinate, and yet to be relatively informal 
These goals play as large a role in generation as 
the speaker's goal to inform the hearer about the 
topic. However, they cannot be achieved by con- 
structing and following a top-down plan - -  what 
would the plan's steps prescribe? Certainly not 
the sentence "I want to impress you, but still make 
you feel subordinatem! Pragmatic effects are best 
achieved by making appropriate subtle decisions 
during the generation process: an extra adjective 
here, a slanted verb there. Typically, this is a mat- 
ter of in-line planning. 
3. A third difference from traditional plan- 
ning is the following: Some goals can be achieved, 
flushed from the goal list, and forgotten. Such 
goals (for example, the goal to communicate a 
certain set of topics) usually activate prescriptive 
plans. In contrast, other goals cannot ever be 
181 
fully achieved. If you are formal, you are formal 
throughout the text; if you are friendly, arrogant, 
or opinionated, you remain so - -  you cannot sud- 
denly be "friendly enough" and then flush that 
goal. These goals, which are pragmatic and stylis- 
tic in nature, are well suited to in-llne planning. 
Generation, then, requires two types of plan- 
ning. Certain tasks are most easily performed in 
top-down fashion (that is, under guidance of a hi- 
erarchical planner, or of a fixed-plan (schema or 
script) applier), and other tasks are most natu- 
rally performed in a bottom-up, selective, fashion. 
That is, some tasks are prescriptiee - -  they act 
over and give shape to long ranges of text - -  and 
some are restr/ct/ee - -  they act over short ranges 
of text, usually as a selection from some number 
of alternatives. Prescriptive strategies are forms, 
tive: they control the construction and placement 
of parts in the paragraph and the sentence; that 
is, they make some commitment to the final form 
of the text (such as, for example, the inclusion 
and order of specific sentence topics). Restrictive 
strategies are selective: they decide among alter- 
natives that were left open (such as, for example, 
the possibility of including additional topics un- 
der certain conditions, or the specific content of 
each sentence). A restrictive planner cannot sim- 
ply plan for, it is constrained to plan with: the 
options it has to select from are presented to it by 
the realizer. 
2 .3  P lann ing  Rest r i c t ive ly :  Mon i -  
to r ing  
Since there is no way to know which goals sub- 
sequent decisions will affect, restrictive planning 
must keep track of all goals - -  confllcting or not 
and attempt to achieve them all in parallel. Thus, 
due to its bottom-up, run-time nature, planning 
with restrictive strategies takes the form of execu- 
tion monitoring (see, say, \[Fikes, Hart & Niisson 
72\], \[Sacerdoti 77\], \[Miller 85\], \[Doyle, Atkiuson & 
Doshi 86\], \[Broverman & Croft 87\]); we will use 
the term monitoring here, appropriate for a sys- 
tem that does not take into account he world's 
actual reaction (in generation, the bearer's actual 
response), but that trusts, perhaps naively, that 
the world will react in the way it expects. Moni- 
toring requires the following: 
? checking, updating, and recording the current 
satisfaction status of each goal 
? determining which goal(s) each option will 
help satisfy, to what extent, in what ways 
? determining which goal(s) each option will 
thwart, to what extent, and in what ways 
? computing the relative priority of each goal 
in order to resolve conflicts (to decide, say, 
whether during instruction to change the 
topic or to wait for a socially dominant hearer 
to change it) 
When the planner is uncertain about which long- 
term goals to pursue and which sequence of actions 
to select, the following strategies are useful: 
? prefer common intermediate goals (subgoals 
shared by various goals \[Durfee & Lesser 86\]) 
? prefer cheaper goals (more easily achieved 
goals; \[Durfee & Lesser 86\]) 
? prefer disorlmlnatiue ~ntermediate goals 
(goals that most effectively indicate the long- 
term promise of the avenue being explored) 
(\[Durfee & Lesser 86\]) 
? prefer least-satlsfied goals (goals furthest 
from achievement) 
? prefer least-recently satisfied goals (goaLs least 
recently advanced) 
? combine the latter two  strategies (a goal re- 
ceives higher priority the longer it waits and 
the fewer times it has been advanced) 
3 Planning in PAULINE 
3.1  P rogram Arch i tec ture ,  Input  
and  Op in ions  
The user provides PAULINE with input topics and 
a set of pragmatic goals, which activate a number 
of intermediate rhetorical goals that control the 
style and slant of the text. Whenever planning or 
realization require guidance, queries are directed 
to the activated rhetorical goals and their associ- 
ated strategies (see Figure 1). 
Prescriptive planning is mostly performed ur- 
ing topic collection and topic organiEation and re- 
strictive planning is mostly performed uring re- 
alization. Restrictive planning is implemented in
PAULINE in the following way: None of the pro- 
gram's rhetorical goals (opinion and style) are ever 
fully achieved and flushed; they require decisions 
to be made in their favor throughout the text. 
PAULINE keeps track of the number of times each 
such goal is satisfied by the selection of some op- 
tion (of course, a single item may help satisfy a 
number of goals simultaneously). For conflict reso- 
lution, PAULINE uses the least-satisfied strategy: 
the program chooses the option helping the goals 
with the lowest total satisfaction status. In order 
to do this, it must know which goals each option 
will help satisfy. Responsibility for providing this 
182 
Input Topics 
"1 
Topic Collection 
Topic Organization 
Realization 
Text 
- topic collection: 
CONVINCE 
RELATE 
DESCRIBE 
- interpretation 
- new topics 
- juxtaposition 
- ordering 
- sentence type 
- organisation 
- clauses 
- wordJ 
l 
G 
O 
A 
R L 
H S 
ET & 
O S 
R T 
I R 
C A 
A T 
L E 
G 
I 
E 
S 
Input: 
Pragmatic 
Aspects of 
Conversation 
Figure 1: Program Architecture 
information lies with whatever produces the op- 
tion: either the lexicon or the language specialist 
functions in the grammar. 
PAULINE's input is represented in a standard 
case-frame-type language based on Conceptual 
Dependency (\[Schank 72, 75\], \[Schank & Abel- 
son 77\]) and is embedded in a property-inheritance 
network (see \[Charnlak, Riesbeck, & McDermott 
80\], \[Bohrow & Winograd 77\]). The shantytown 
example consists of about 120 elements. No inter- 
mediate representation (say, one that varies de- 
pending on the desired slant and style) is created. 
PAULINE's opinions are based on the three af- 
fect values GOOD, NEUTRAL, and BAD, as de- 
scribed in \[Hovy 86b\]. Its rules for a~ect combina- 
tion and propagation enable the program to com- 
pute an opinion for any representation element. 
For instance, in example 2 (where PAULINE 
speaks as a protester), its sympathy list cont~-.  
the elements representing the protesters and the 
protesters' goal that Yale divest, and its antipathy 
list contains Yale and Yale's goal that the univer- 
sity remain in an orderly state. 
3 .2  Text  P lann ing  Tasks  
This section very briefly notes the text planning 
tasks that PAULINE perforras: topic collection, 
topic interpretation, additional topic inclusion, 
topic juxtaposition, topic ordering, intrasentential 
slant, and intrasententlal style. 
Top ic  Collection (Prescriptive): This task 
collecting, from the input elements, additional 
representation elements and determining which 
aspects of them to say - -  is pre-eminently pre- 
scriptive. Good examples of topic collection plans 
(also called schemas) can be found in \[McKeown 
82\], \[Paris & McKeown 87\], and \[R~sner 86 I. In 
this spirit PAULINE has three plans m the DE- 
SCRIBE plan to find descriptive aspects of ob- 
jects, the RELATE plan to relate events and state- 
changes, and the CONVINCE plan to select opics 
that will help convince the hearer of some opinion. 
Whenever it performs topic collection, PAULINE 
applies the prescriptive steps of the appropriate 
collection plan to each candidate topic, and then 
in turn to the newly-found candidate topics, for 
as long as its pragmatic riteria (amongst others, 
the amount of time available) allow. The CON- 
VINCE plan (described in \[Hovy 85\]) contain% 
183 
amongst others, the steps to ~ay good intention, 
say good results, and appeal to authority. Example 
1 presents the topics as given; in example 2, the 
CONVINCE plan prescribes the inclusion of the 
protesters' goal and the support given by the lo- 
cal community and faculty; and in example 3, with 
opposite sympathies, the same plan prescribes the 
inclusion of Yale's request and of the announce- 
ment of the investigation commission. 
Topic In terpretat ion  (Preser lpt lve and 
Restr ict ive) :  As described in \[Hovy 87c\], gen- 
erators that slavishly follow their input elements 
usually produce bad text. In order to produce for- 
mulations that are appropriately detailed and/or 
slanted, a generator must have the ability to ag- 
gregate or otherwise interpret its input elements, 
either individually or in groups, as instances of 
other representation elements. But finding new 
interpretations can be very dlt~cult; in general, 
this task requires the generator (a) to run infer- 
ences off the input elements, and (b) to determine 
the expressive suitability of resulting interpreta- 
tions. Though unbounded inference is not a good 
idea, limited inference under generator control can 
improve text significantly. One source of control 
is the generator's pragmatic goals: it should try 
only inferences that are likely to produce goal- 
serving interpretations. In this spirit, PAULINE 
has a number of prescriptive and restrictive strate- 
gies that suggest specific interpretation i ferences 
slanted towards its sympathies. For example, in a 
dispute between ~we ~ (the program's ympathies) 
and UtheyS, some of its strategies call for the in- 
terpretations that 
? coercion: they coerce others into doing things 
for them 
? appropriation: they use ugly tactics, such as 
taking and using what isn't "theirs 
? conciliation: we are conciliatory; we moderate 
our demands 
Interpretation occurred in examples 1 and 3: the 
notions of punishment in example 1, and of appro- 
priation (%ook over Beinecke Plaza s) and conc~- 
iation (~?ale gave in~) in example 3, did not ap- 
pear in the representation network. 
Add i t iona l  Topic Inclus ion (Restr ict ive):  
During the course of text planning, the genera- 
tor may find additional candidate topics. When 
such topics serve the program's goals, they can be 
included in the text. But whether or not to in- 
clude these instances can only be decided when 
such topics are found; the relevant strategies are 
therefore restrictive. For example, explicit state- 
ments of opinion may be interjected where appro- 
priate, such as, in example 3, the phrases Ult pisses 
me off m and uI am happy that ~. 
Topic Juxtapos i t ion  (Restr ict ive):  By jux- 
taposing sentence topics in certain ways, one can 
achieve opinion-related and stylistic effects. For 
example, in order to help slant the text, PAULINE 
uses multi-predicate phrases to imply certain af- 
fects. Two such phrases are aNot only X, but Y~ 
and uX; however, Y~; depending on the speaker's 
feelings about X, these phrases attribute feelings 
to Y, even though Y may really be neutral (for 
more detail \[How/ 86b\]). With respect o stylis- 
tic effect, the juxtaposition of several topics into a 
sentence usually produces more complex, forma~ 
sounding text. For example, consider how the 
phrases uas a reminder w, us\]so, at that time s, 
and ~concurrently ~ are used in example 2 to link 
sentences that are separate in example 3. The 
task of topic juxtaposition is best implemented re- 
strictively by presenting the candidate topics as 
options to strategies that check the restrictions 
on the use of phrases and select suitable ones. 
(The equivalent prescriptive formulation amounts 
to giving the program goals such as \[find in the net- 
work two topics that will fit into a %Yot o,~/buff 
phrase\], a much less tractable task.) 
Topic Order ing (Prescr ipt ive) :  The order- 
ing of topics in the paragraph is best achieved 
prescriptively. Different circumstances call for 
different orderings; newspaper articles, for in- 
stance, often contain an introductory summa- 
rising sentence. In contrast to the abovemen- 
tioned schemas (\[McKeown 82\], etc.), steps in 
PAULINE's topic collection plans are not ordered; 
additional plans must be run to ensure coher- 
ent text flow. PAULINE uses one of two topic- 
ordering plans which are simplified scriptifications 
of the strategies discussed in \[Hobbs 78, 79\] and 
\[Mann & Thompson 83, 87\]. 
In t rasentent ia l  S lant  (Restr ict ive) :  In ad- 
dition to interpretation, opinion inclusion, and 
topic juxtaposition, other slanting techniques in- 
clude the use of stress words, adjectives, adverbs, 
verbs that require idiosyncratic predicate con- 
tents, nouns, etc. Due to the local nature of most 
of these techniques and to the fact that options are 
only found rather late in the realization process, 
they are best implemented restrictively. In exam- 
ple 2, for example, the protesters are described as 
"a large number of concerned students ~. This is 
generated in the following way: The generator's 
noun group specialist produces, amongst others, 
the goals to say adjectives of number and of opin- 
ion. Then the specialist hat controls the real- 
184 
ization of adjectives of number collects all the al- 
ternatives that express number attributively (such 
as ~a few =, Zmany ~, a number) together with the 
connotations each carries. The restrictive strate- 
gies activated by the rhetorical goals of opinion 
then select the options of ~many ~ and ~a large 
number" for their slanting effect. Finally, the re- 
strictive strategies that ~xve the rhetorical goals 
determining formality select he latter alternative. 
The opinion %oncerned" is realized similarly, as 
are the phrases zas a reminder ~and, in example 
3, "a few shiftless tudents" and ~idiots'. 
In t rasentent ia l  Style (Restr ict ive):  Con- 
trol of text style is pre-eminently a restrictive 
task, since syntactic alternatives usually have rel- 
atively local effect. PAULINE's rhetorical goals of 
style include haste, formality, detail, simplicity (see 
\[Hovy 87d\]). Associated with each goal is a set of 
restrictive strategies or plans that act ae criteria 
at relevant decision points in the realization pro- 
cess. Consider, for example, the stylistic difference 
between examples 2 and 3. The former is more for- 
real: the sentences are longer, achieved by using 
conjunctions; they contain adverbial clauses, usu- 
ally at the beginnings of sentences (~later, at 5:30 
am one morning'); adjectival descriptions are rel- 
ativised (anamed Winnie Mandela City'); formal 
nouns, verbs, and conjunctions are used (%rected, 
requested, concurrently, permitted=). In contrast, 
example 3 seems more colloquial because the sen- 
tences are shorter and simpler; they contain fewer 
adverbial clauses; and the nouns, verbs, and con- 
junctions are informal (ffibuilt, asked, at the same 
time, let=). Indications of the formality of phrases, 
nouns, and verbs are stored in discriminations in
the lexicon (patterned after \[Goldman 75\]). 
4 Conc lus ion  
The choices distributed throughout he genera- 
tion process are not just a set of unrelated ad 
hoc decisions; they are grammatically related or, 
through style and slant, convey pragmatic infor- 
mation. Therefore, they require control Since 
traditional top-down prescriptive planning is uno 
able to provide adequate control, a different kind 
of planning is required. The limited-commitment 
planning organization of PAULINE illustrates a 
possible solution. 
Text planning provides a wonderfully rich con- 
text in which to investigate the nature of prescrip- 
tive and restrictive planning and execution moni- 
toring - -  issues that are also important to general 
AI planning research. 
5 Acknowledgement  
Thanks to Michael Factor for comments. 
6 References  
1. 
2. 
8. 
4o 
6. 
6. 
T. 
Appelt, D.E., 1982. P/,~mu'n~ N m//-~mlm~ge U~ter- 
w~eemto,q~i~iMulh'ple Goelz Ph.D. dissertation, Stan- 
ford University. 
Appelt, D.E., 1982. Planning Natural-Language Ut-
teranc~. /h~t~d/~# of ~ S~oml AAA/Co~fe~, 
Pittsburgh. 
Appelt, D.E., 1983. Telegram: A Grammar Formal- 
km for Language Planning. Pme~d/ngs of the ~/~ 
?/CAI Conference, Karlgruhe. 
Appelt, D.E., 1986. Planning E~bh Sentee~eu. Cam- 
bridge: Cambridge University Pre~. 
Bienkow=kl, MJL., 1986. A Computational Model for 
Externporaneou~ Elabor~tions. Princeton Univerwity 
Cognitive Science Laboratory Technical Report no I. 
Bobrow, D.G. & Winograd, T., 197"/. An Overview 
of KRL, a Knowledge-Reprementation LanSuage. C.o9- 
Bock, J.K., 1987. Exploring Levels of Processing in
5entm, ce Production. In N~'w~/Language G'e ~.,r,~on.- 
Reee~ Ad~nt~ bt Arlifteial ntdl ige~, P~Aolo~, ~mi 
/~'nt~d~/e~, Kempon G. (ed), $51-364. Boston: Kluwer 
Academic Publishers. 
8. 
9. 
10. 
11. 
12. 
13. 
14. 
Broverman, C.A. & Croft, W.B., 1987. Reasoning 
about Exceptions during Plan Execution Monitoring. 
P~med/~m o~the ~ Conferee of AAA/, Seattle. 
Chm~iak, E., Riubeck, C.K. & McDermott, D.V, 
1980. Art/JL.mt I~/ee~ Pmg,umm/ng. Hilkdale: 
Lawrence Erlbamn Auociat~. 
Cllppinger, J.H., 1974. A D/seourse Spea/d~ P~n 
a P ~  Theo~ ofDi#eom.me B h~dor and a Limltcd 
Theo~ of P~jehoaml/~ D/~o~'me. Ph.D. di~ertation, 
Univ~ity of Pennzylvania. 
Dmnkt, J.H., 1977. ProducingIdeu and Senteneu. In 
Sentence Pmdud/on.- Detdop,ne~ s'n Re~areh and The- 
orll, Rosenberg S. (ed), 226-258. Hilkdale: Lawrence 
Erlb-um A~oci=tu. 
De Smedt, K. & Kempen, G., 1987. Increment,d Sen- 
fence Production. In Na~nd Languace Genemt/on." Re- 
cent Advancem inA~'~?iol Intdllgenee, P~/chotogg, and Zin- 
~t/em, Kempen G. (ed), 356-870. Boston: Kluwer 
Academic Publisher#. 
Doyle, R.J., AtkinJon, D.J. & Doshi, R.S., 1986. Gen- 
erating Perception Requemt~ and Expectations toVer- 
ify the Execution of Plans. Prooee4a'ngm oft, Jue ~ Com- 
, fem~ of AAA/, Philadelphia. 
Durfee, E.H. & Le~er, V.R., 1986. Incremental Plan- 
ning to Control a Blackboard-Bued Problem Solver. 
Pmeee~ng. of t.ke .F,~g/~ Gon/evm~e o.f t~e Com'~e Sd- 
e~ S~e~/s Arnh~1"mt. 
185 
15. Fikes, R~E., Hart, P.E. & Niisson, N.J., 1972. Learn- 
ing and executing eneralized robot plans. Arh~qe/a/ 
Intdlige~, 3, 251-288. 
16. Goldman, N.M., 1975. Conceptual Generation. In 
Conceptu~ In/orm~o~ Pmce~'n?, Schank, R.C. (ed), 
289-371. Amsterdam: North.Holland Publishing 
Company. 
17. Hobbs, J.R., 1978. Why is Discour~ Coherent? $111 
Technical Note 176. 
18. Hobbs, J.R., 1979. Coherence and Coreferenos. 
~'ee Selence, 8(I), 67-90. 
19. Hovy, E.H., 1985. Integrating Text Planning and Pro- 
duction in Generation. Pmceed/nf~ oj' t~  AqnZ/s Z/CA\] 
Co~e,e,?e, Los Angeles. 
20. Hovy, E.H., 1986a. Some Pragmatic Decision Criteria 
in Generation. In N ~  r a ~  Genemh~.. New 
Re~dt~ in Arh'fwi~ Intdlieenee, P~;e~o~, and Lin~,i~tle~ 
Kempen G. (ed), 3-18. Boston: Kluwer Academic 
Publishers, 1987. 
21, Hovy, E.H., 1986b, Putt ing A~ect into TexL Pro- 
eeedlnc, ol t~, Eighth Co,/evince o! t&~ Coen~ee Sdmu= 
Socletp, Amherst. 
Pm0m0~ Co~hu/nt~. Ph.D. dissertation, Yale Uni- 
versity. 
23. How/, E.H., 1987o. Generatin 8 Natural Language 
under Pragmatic Constraints. Journal o~ Pmomat~, 
11(6), 889-719. 
24. Hovy, E.H., 1987c. Interpretation i  Gener~ion. Pro- 
eee~ng~ ol the Siz~ Co~e~,nce o~ AAA\], Seattle. 
25. Hovy, E.H., 1987d. What Makes Lan~uap Formal? 
Pmceed~no,. f the Ni~tA Co~v~ee~?e ol the Cog~iH~e Sdme~ 
Soe~etg, Seattle. 
26. Kempen, G., 1976. Directions for Building a Sen- 
tents Generator which is Psychologically Plausible. 
Unpublkhed paper, Yale University. 
27. Kempen, G., 1977. Concep!;uali~ing and Formulating 
in Sentence Production. In Se~e~e Pn~&wt~n: De- 
edopme~ i~ ~Je~eA and Theory, Rosenberg S. (ed), 
259-274. Hilisdale: Lawrence Eribaum Aesociates. 
28. Kempen, G. & Hoenkamp, E ,  1978. A Procedural 
Grammar for Sentence Production. University of Ni- 
jmegen Technical Report, Nijmegen. 
29. Levelt, W~.\]V\[. & Schriefers, H., 1987. StaRes of Lex- 
ical Access. In N~,,mt r..,~,~e Geaemtio~" Rec~ Ad- 
~anee~ inArtifidal In~dllgense, P~jdu~o~, and I . i~ .  
Kempen G. (ed), 895-404. Boston: Kluwer Academic 
Publishers. 
30. Mann, W.C. & Thompson, S,k., 1983. Relational 
Propositions in Discourse. USC/Information Sciences 
Institute Research Report RS-8.~115. 
31. Mann, W.C. & Thompson, S.A., 1987. Rhetorical 
Structure Theory: Description and Construction of 
Text Structures. In NaZuml L~nguage Generation: Reeer~ 
Ad,;aneee in Am'tidal Intdlieen~, Pal~holo~, and Lingei,- 
t/ee, Kempen G. (ed), 85-96. Boston: Kluwer Aca- 
demic Publishers. 
32. McCoy, K.F., 1985. The Role of Perspective in Re- 
sponding to Property Misconceptions. Proceedings oi
the Nimbus XJCAI Co~el~.mee. Los An~l~.  
33. McDonald, D.D. & Pustejovsky, J.D., 1986. 
Description-Directed Natural Language Generation. 
Proceedingm el tAe Ninth IJCAI Conference, Los Angeles. 
84. McKeown, K.R., 1982. Genera~ng Nahum/Language 
in l~qJm~ to Q~m~o~ ~ D~.~b~e q~.riee. 
Ph.D. disesrtation, University Of Pennsylvar~a. 
85. Miller, D.P., 1985. P/mm/~ by Sea,w.h Thmugk $1mula~ 
6o~. Ph.D. diesertation, Yale University. 
86. Novek, H-J., 1987. Strategies for Generating Coher- 
ent Descriptions of Object Motions in Time-Varying 
IroN,cry. In N~m/ /m, r~e Ge~L*ro~on.. R~ 
Nnce~ in Arti~'ml lntdllomce, P~chologg, and Ldnoui~icm, 
Kempen G. (ed), 117-182. Boston: Kluwer Academic 
Publishers. 
87. Paris, C.L. & McKeown, K.IL, 1987. Discourse 
Strategies for Descriptions of Complex Physical Ob- 
jects.  In N~/ .An4~e G~w~/on." New Re~t~ in 
A~7~/~ Intd//genee, Pmuehotol~ 6nd/'/,4u/at/eJ, Kempen 
G. (ed), 97-118. Boston: Kluwer Academic Publish. 
ers. 
88. Paris, C.L., 1987. The Use o~ Ezptidt User Modeb in 
Te~ Gensrm~o~. Tm\]o~.~ to a User's Lewd oi ~ e .  
Ph.D. di~ertation, Columbia University. 
89. Rosenber~, S., 1977. Semantic Constraints on Sen- 
tenos Production: An Experimentni Approach. In 
Smtme, Pmdae6on: Deedopment~ in P~o~ch a.d The. 
orw, Rosenberg S. (ed), 195-228. Hilisdale: "Lawrence 
Eribaum Amoc/ates. 
? 40. R~nar ,  D., 1986. ~n S#~mm ~ Gem~ie~ng son 
D~?~ ~ a~ Sema.~c/u.t Rep~en~a~onsn. 
Ph.D. dissertation, Univemit~.t Stuttgart. 
41. R6sner D., 1987. The Automated News Agency SEM- 
TEX - -  a Text Generator for German. In Nahm~ 
Oe~:~a.  New Re~t~ ia A~ifwial I,~dli~'~e, 
P~.Ado~, and ~ ,  Kempen G. (ed), 188-148. 
Boston: Kluwer Academic Publishers. 
42. Sacerdoti, E., 1977. A R~zcho~yorPlen~msgBehat~or. 
North.Holland Publishing Company. 
45. Schank, ILC., 1972. 'Semantics' in Conceptual Anal- 
ysis. L i~  30(2), 101-139. Amsterdam: North- 
Holland Publishing Company. 
44. Schank, R.C., 1975. Concept~ I~orm~on P~'e~,4.  
Amsterdam: North-Holland Publishing Company. 
45. Schank, R.C. & Abekon, R.P., 1977. Serip~ P~u,  
Goa/s ami U~n~ng.  Hilisdale: Lawrence Erlbaum 
A,ociates.  
186 
