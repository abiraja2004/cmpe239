Separating Surface Order and Syntactic Relations 
in a Dependency Grammar 
Norber t  BrSker  
Universitiit Stut tgart  
Azenbergstr. 12 
D-70174 Stuttgart  
NOBI~IMS. UNI-STUTTGART. DE 
Abst rac t  
This paper proposes decoupling the dependency 
tree from word order, such that surface ordering 
is not determined by traversing the dependency 
tree. We develop the notion of a word order do- 
main structure, which is linked but structurally 
dissimilar to the syntactic dependency tree. The 
proposal results in a lexicalized, declarative, and 
formally precise description of word order; fea- 
tures which lack previous proposals for depen- 
dency grammars. Contrary to other lexicalized 
approaches to word order, our proposal does not 
require lexical ambiguities for ordering alterna- 
tives. 
1 In t roduct ion  
Recently, the concept of valency has gained con- 
siderable attention. Not only do all linguis- 
tic theories refer to some reformulation of the 
traditional notion of valency (in the form of 0- 
grid, subcategorization list, argument list, or ex- 
tended domain of locality); there is a growing 
number of parsers based on binary relations be- 
tween words (Eisner, 1997; Maruyama, 1990). 
Given this interest in the valency concept, 
and the fact that word order is one of the 
main difference between phrase-structure based 
approaches (henceforth PSG) and dependency 
grammar (DG), it is valid to ask whether DG 
can capture word order phenomena without re- 
course to phrasal nodes, traces, slashed cate- 
gories, etc. A very early result on the weak 
generative quivalence ofcontext-free grammars 
and DGs suggested that DGs are incapable of 
describing surface word order (Gaifman, 1965). 
This result has recently been critizised to apply 
only to impoverished DGs which do not properly 
represent formally the expressivity of contempo- 
rary DG variants (Neuhaus & Br6ker, 1997). 
Our position will be that dependency re- 
lations are motivated semantically (Tesni~re, 
1959), and need not be projective (i.e., may 
cross if projected onto the surface ordering). We 
argue for so-called word order domains, consist- 
ing of partially ordered sets of words and associ- 
ated with nodes in the dependency tree. These 
order domains constitute a tree defined by set in- 
clusion, and surface word order is determined by 
traversing this tree. A syntactic analysis there- 
for consists of two linked, but dissimilar trees. 
Sec. 2 will briefly review approaches to word 
order in DG. In Sec. 3, word order domains will 
be defined, and Sec. 4 introduces a modal logic 
to describe dependency structures. Sec. 5 ap- 
plies our approach to the German clause and 
Sec. 6 relates it to some PSG approaches. 
2 Word Order  in DG 
A very brief characterization of DG is that 
it recognizes only lexical, not phrasal nodes, 
which are linked by directed, typed, binary rela- 
tions to form a dependency tree (Tesni~re, 1959; 
Hudson, 1993). The following overview of DG 
flavors shows that various mechanisms (global 
rules, general graphs, procedural means) are 
generally employed to lift the limitation of pro- 
jectivity and discusses some shortcomings of 
these proposals. 
Funct iona l  Generat ive Descr ipt ion  (Sgall 
et al, 1986) assumes a language-independent 
underlying order, which is represented as a pro- 
jective dependency tree. This abstract represen- 
tation of the sentence is mapped via ordering 
rules to the concrete surface realization. Re- 
cently, Kruijff (1997) has given a categorial- 
style formulation of these ordering rules. He 
assumes associative categorial operators, per- 
muting the arguments to yield the surface or- 
dering. One difference to our proposal is that 
174 
we argue for a representational account of word 
order (based on valid structures representing 
word order), eschewing the non-determinism in-
troduced by unary operators; the second differ- 
ence is the avoidance of an underlying structure~ 
which stratifies the theory and makes incremen- 
tal processing difficult. 
Mean ing-Text  Theory  (Melc'fik, 1988) as- 
sumes seven strata of representation. The rules 
mapping fi'om the unordered ependency trees 
of surface-syntactic representations onto the an- 
notated lexeme sequences of deep-morphological 
representations include global ordering rules 
which allow discontinuities. These rules have 
not yet been formally specified (Melc'~tk & 
Pertsov, 1987p.1870. 
Word  Grammar  (WG, Hudson (1990)) is 
based on general graphs instead of trees. The 
ordering of two linked words is specified together 
with their dependency relation, as in the propo- 
sition "object of verb follows it". Extrac- 
tion of, e.g., objects is analyzed by establish- 
ing an additional dependency called visitor 
between the verb and the extractee, which re- 
quires the reverse order, as in "v i s i to r  of 
verb precedes it". This results in inconsis- 
tencies, since an extracted object must follow 
the verb (being its ob ject )  and at the same time 
precede it (being its v i s i to r ) .  The approach 
compromises the semantic motivation of depen- 
dencies by adding purely order-induced epen- 
dencies. WG is similar to our proposal in that it 
also distinguishes a propositional meta language 
describing the graph-based analysis structures. 
Dependency  Unif ication Grammar 
(DUG, Hellwig (1986)) defines a tree-like 
data structure for the representation f syntac- 
tic analyses. 'Using morphosyntactic features 
with special interpretations, a word defines 
abstract positions into which modifiers are 
mapped. Partial orderings and even discon- 
tinuities can thus be described by allowing a 
modifier to occupy a position defined by some 
transitive head. The approach requires that the 
parser interpretes several features pecially, and 
it cannot restrict the scope of discontinuities. 
Slot Grammar  (McCord, 1990) employs a 
number of rule types, some of which are ex- 
clusively concerned with precedence. So-called 
head/slot and slot/slot ordering rules describe 
the precedence in projective trees, referring to 
arbitrary predicates over head and modifiers. 
Extractions (i.e., discontinuities) are merely 
handled by a mechanism built into the parser. 
3 Word  Order  Domains  
Summarizing the previous discussion, we require 
the following of a word order description for DG: 
? not to compromise the semantic motivation 
of dependencies, 
? to be able to restrict discontinuities to cer- 
tain constructions and delimit their scope, 
? to be lexicalized without requiring lexical 
ambiguities for the representation f order- 
ing alternatives, 
? to be declarative (i.e., independent of an 
analysis procedure), and 
? to be formally precise and consistent. 
The subsequent definition of an order domain 
structure and its linking to the dependency tree 
satisify these requirements. 
3.1 The  Order  Domain  S t ructure  
A word order domain is a set of words, general- 
izing the notion of positions in DUG. The cardi- 
nality of an order domain may be restricted to 
at most one element, at least one element, or - 
by conjunction - to exactly one element. Each 
word is associated with a sequence of order do- 
mains, one of which must contain the word itself, 
and each of these domains may require that its 
elements have certain features. Order domains 
can be partially ordered based on set inclusion: 
If an order domain d contains word w (which 
is not associated with d), every word w ~ con- 
tained in a domain d ~ associated with w is also 
contained in d; therefor, d~ C d for each d ~ asso- 
ciated with w. This partial ordering induces a 
tree on order domains, which we call the order 
domain structure. 
Take the example of German "Den Mann hat 
der Junge gesehen" ("the manAGe - has - the 
boyNoM - seen"). Its dependency tree is shown 
in Fig.l, with word order domains indicated 
by dashed circles. The finite verb, "hat", de- 
fines a sequence of domains, <dl, d2, d3>, which 
roughly correspond to the topological fields in 
the German main clause. The nouns "Mann" 
175 
' ,, sub j_~.~_~.  ", :d3', 
,' 'C. "derJunge; '.ge~ehen.,,, 
, : .den Mann-., " ' .  . "  ' 
Figure 1: Dependency Tree and Order Domains 
for "Den Mann hat der Junge gesehen" 
dl 
d,4 hat d 5 d 6 
Mann Junge gesehen 
Figure 2: Order Domain Structure for "Den 
Mann hat der Junge gesehen" 
aud "Junge" and the participle "gesehen" each 
define one order domain (d4,cl5,d6, resp.). Set 
inclusion gives rise to the domain structure in 
Fig.2, where the individual words are attached 
by dashed lines to their including domains (dl 
and d4 collapse, being identical). 1 
3.2 Sur face  Order ing  
How is the surface order derived from an or- 
der domain structure? First of all, the ordering 
of domains is inherited by their respective le- 
ments, i.e., "Mann" precedes (any element of) 
d2, '!hat" follows (any element of) dl, etc. 
Ordering within a domain, e.g., of "hat" and 
d6, or d5 and d6, is based on precedence pred- 
icates (adapting the precedence predicates of 
WG). There are two different ypes, one order- 
ing a word w.r.t, any other element of the do- 
main it is associated with (e.g., "hat" w.r.t, d6), 
and another ordering two modifiers, referring to 
the dependency relations they occupy (d5 and 
d6, referring to subj and vpart) .  A verb like 
"hat" introduces two precedence predicates, re- 
quiring other words to follow itself and the par- 
ticiple to follow subject and object, resp.: 2 
"hat" ~ (<. A (vpart) >{subj,obj}) 
~Note that in this case, we have not a single rooted 
tree, but rather an ordered sequence of trees (by virtue 
of ordering dl, d2, and d3) as domain structure. In gen- 
eral, we assume the sentence period to govern the finite 
verb and to introduce a single domain for the complete 
sentence. 
2For details of the notation, please refer to Sec. 4. 
Informally, the first conjunct is satisfied by 
any domain in which no word precedes "hat", 
and the second conjunct is satisfied by any do- 
main in which no subject or object follows a 
participle. The domain structure in Fig.2 satis- 
fies these restrictions ince nothing follows the 
participle, and because "den Mann" is not an el- 
ement of d2, which contains "hat". This is an im- 
portant interaction of order domains and prece- 
dence predicates: Order domains define scopes 
for precedence predicates. In this way, we take 
into account that dependency trees are flatter 
than PS-based ones 3 and avoid the formal in- 
consistencies noted above for WG. 
3.3 L inking Domain  Structure and 
Dependency  Tree 
Order domains easily extend to discontinuous 
dependencies. Consider the non-projective tree 
in Fig.1. Assuming that the finite verb gov- 
erns the participle, no projective dependency 
between the object "den Mann" and the partici- 
ple "gesehen" can be established. We allow non- 
projectivity by loosening the linking between de- 
pendency tree and domain structure: A modi- 
fier (e.g., "Mann") may not only be inserted into 
a domain associated with its direct head ("gese- 
hen"), but also into a domain of a transitive head 
("hat"), which we will call the positional head. 
The possibility of inserting a word into a do- 
main of some trausitive head raises the ques- 
tions of how to require contiguity (as needed 
in most cases), and how to limit the distance 
between the governor and the modifier in the 
case of discontinuity. From a descriptive view- 
point, the syntactic onstruction is often cited to 
determine the possibility and scope of disconti- 
nuities (Bhatt, 1990; Matthews, 1981). In PS- 
based accounts, the construction is represented 
by phrasal categories, and extraction is lim- 
ited by bounding nodes (e.g., Haegeman (1994), 
Becker et al (1991)). In dependency-based ac-
counts, the construction is represented by the 
dependency relation, which is typed or labelled 
to indicate constructional distinctions which are 
configurationally defined in PSG. Given this cor- 
respondence, it is natural to employ dependen- 
cies in the description of discontinuities as fol- 
3Note that each phrasal level in PS-based trees defines 
a scope for linear precedence rules, which only apply to 
sister nodes. 
176 
lows: For each modifier of a certain head, a set 
of dependency t pes is defined which may link 
the direct head and the positional head of the 
modifier ("gesehen" and "hat", resp.). If this set 
is empty, both heads are identical and a con- 
tiguous attachment results. The impossibility of 
extraction from, e.g., a finite verb phrase may 
follow from the fact that the dependency embed- 
ding finite verbs, propo, may not appear on any 
path between a direct and a positional head. 4
4 The  Descr ip t ion  Language 
This section sketches a logical language describ- 
ing the dependency structure. It is based on 
modal ogic and owes much to work of Blackburn 
(1994). As he argues, standard Kripke models 
can be regarded as directed graphs with node 
annotations. We will use this interpretation to
represent dependency structures. Dependencies 
and the mapping from dependency tree to order 
domain structure are described by modal opera- 
tors, while simple properties such as word class, 
features, and cardinality of order domains are 
described by modal propositions. 
4.1 Model  S t ructures  
In the following, we assume a set of words, l/Y, 
ordered by a precedence r lation, -<, a set of 
dependency t pes, T), a set of atomic feature 
values .4, and a set of word classes, C. We 
define a family of dependency relations Rd C 
W ? ~42, d E :D and for convenience abbreviate 
the union UdET~ Rd as R:D. 
Def: A dependency tree is a tuple 
(W, Wr, R~, VA, Vc), where R~ forms a tree over 
VP rooted in Wr, VA : V~ ~ 2 A maps words to 
sets of features, and V? : 1/~ ~ C maps words to 
word classes. 
Def: An order domain (over W) m is a set of 
words from ~) where VWl,W2,W3 E VV : (wl -< 
w2-<w3Awl EmAw3 Era) ~ w2 E m. 
Def: An order domain structure (over W) f14 
is a set of order domains where Vm, m ~ E .?4 : 
mMm ~ = OVm C m'Vm ~ C m. 
4One review pointed out that some verbs may allow 
extractions, i.e., that this restriction is lexical, not uni- 
versal. This fact can easily be accomodated because the 
possibility of discontinuity (and the dependency t pes 
across which the modifier may be extracted) is described 
in the lexical entry of the verb. In fact, a universal re- 
striction could not even be stated because the treatment 
is completely lexicalized. 
Def: A dependency structure T is a 
tuple (VV, Wr, R~, VA, Vc, .A4, VM > where 
(I,V, wr, Rz~, VA, VC> is a dependency tree, A4 
is an order domain structure over ~V, and 
VAa : V~ ~ .All n maps words to order domain 
sequences. 
Additionally, we require for a dependency 
structure four more conditions: (1) Each word w 
is contained in exactly one of the domains from 
V~(w) ,  (2) all domains in V~(w)  are pairwise 
disjoint, (3) each word (except w~) is contained 
in at least two domains, one of which is associ- 
ated with a (transitive) head, and (4) the (par- 
tial) ordering of domains (as described by VM) 
is consistent with the precedence of the words 
contained in the domains (see (Brhker, 1997) for 
more details). 
4.2 The Language ?:~ 
Fig.3 defines the logical language /:~ used to 
describe dependency structures. Although they 
have been presented ifferently, they can eas- 
ily be rewritten as (multimodal) Kripke models: 
The dependency relation Rd is represented as 
modality (d> and the mapping from a word to 
its ith order domain as modality o~.5 All other 
formulae denote properties of nodes, and can be 
formulated as unary predicates - most evident 
for word class and feature assignment. For the 
precedence predicates <. and <~, there are in- 
verses >. and >~. For presentation, the relation 
places C 142 x 142 has been introduced, which 
holds between two words iff the first argument 
is the positional head of the second argument. 
A more elaborate definition of dependency 
structures and ?~ defines two more dimensions, 
a feature graph mapped off the dependency tree 
much like the proposal of Blackburn (1994), and 
a conceptual representation based on termino- 
logical logic, linking content words with refer- 
ence objects and dependencies with conceptual 
roles. 
5 The German Clause 
Traditionally, the German main clause is de- 
scribed using three topological fields; the ini- 
tial and middle fields are separated by the fi- 
nite (auxiliary) verb, and the middle and the 
5The modality O~ can be viewed as an abbreviation 
of o~ O~,  composed of a mapping from a word to its ith 
order domain and from that domain to all its elements. 
177 
Syntax (valid formulae) Semantics (satisfaction relation) 
c ? ?v, Vc ? C T,w 
a ? ?v, Va ? A T,w 
<d) ? ? ?v,  Vd ? 79,? ? ?v  T ,w 
<. 6 ?v, T,w 
<~ ??9, V6c_79 
$~ ??v, VTcD 
oi single ? ED, Vi ? $V ,%4 
o~filled ? ?D, Vi ? ~V 
D~a??D,  V i ?$V ,a ?A  
?^? ? ?~, V?,? ? ?v 
-~? 6.?~, V? ? ?v 
T, w 
T, w 
T, w 
T, w 
T, iv 
T, w 
T, w 
~c 
ka  
<d) ? 
:?* c = Yc(w) 
:?* a e Y (w) 
:?~ 3w' 6 142 : wRdW' A T, w' ~ ? 
:~  3m ? M : (V.~(w) = ( . . .m. . . )  
^Vw' ? m : (w = w' Vw -< w')) 
:?~ ~3w' ,w" ,w ''' ? W : places(w',w) 
Aplaces(w', w") A w'" R6w A w'" "< w 
$6 :?~ 3w',w" ? ~42 : wRvwA 
places(w", w) A w" R;w' o !{ w'? (,,,11  ^\] 
o~s ing le  :?t, w' ~Bw" : (w"RT)w'n,, < 1 
w" e - 
k ob f i l l ed  I 1 
t:3~a :?* Vw' ? Oi(V.M(w)) : T ,w'  k a 
~?A? :?~,T ,w~?andT,  w~? 
--,? :??, not T, w ~ ? 
Figure 3: Syntax and Semantics of Ev Formulae 
Vfin ~ ol(single A filled) A OLinit ial \[1\] 
A O L (middle A norel) \[2\] 
A 0 3 single A D L (final A norel) \[3\] 
A V2 ?~ (middleA <, A\[3~norel) \[4\] 
A VEnd ?~ (middleA >,) \[5\] 
A Vl ?~ (initial A norel) \[6\] 
Figure 4: Domain Description of finite verbs 
"hat" A Vfin \[7\] 
A (subj)("Junge" A 1"0) \[8\] 
A(vpart) ("gesehen" A S0 \[9\] 
A ~final A >{subj,obj} \[i0\] 
A (ob j ) ( "Mann"  A t{vpart})) \[11\] 
Figure 5: Hierachical Structure 
final fields by infinite verb parts such as sepa- 
rable prefixes or participles. We will generalize 
this field structure to verb-initial and verb-final 
clauses as well, without going into the linguistic 
motivation due to space limits. 
The formula in Fig.4 states that all finite 
verbs (word class Vfin 6 C) define three order 
domains, of which the first requires exactly one 
element with the feature in i t ia l  \[1\], the second 
allows an unspecified number of elements with 
features middle and nore l  \[2\], and the third al- 
lows at most one element with features f ina l  
and nore l  \[3\]. The features in i t ia l ,  middle, 
and f ina l  6 .4 serve to restrict placement of 
certain phrases in specific fields; e.g., no reflex- 
ive pronouns can appear in the final field. The 
nore l  6 .4 feature controls placement of a rela- 
tive NP or PP, which may appear in the initial 
field only in verb-final clauses. The order types 
are defined as follows: In a verb-second clause 
(feature V2), the verb is placed at the beginning 
(<.)  of the middle field (middle), and the el- 
ement of the initial field cannot be a relative 
phrase (o~nore l  in \[4\]). In a verb-final clause 
(VEnd), the verb is placed at the end (>.)  of the 
middle field, with no restrictions for the initial 
field (relative clauses and non-relative verb-final 
clauses are subordinated to the noun and con- 
junction, resp.) \[5\]. In a verb-initial clause (Vl), 
the verb occupies the initial field \[6\]. 
The formula in Fig.5 encodes the hierarchical 
structure from Fig.1 and contains lexical restric- 
tions on placement and extraction (the surface is 
used to identify the word). Given this, the order 
type of "hat" is determined as follows: The par- 
ticiple may not be extraposed (~final in \[10\]; 
a restriction from the lexical entry of "hat"), it 
must follow "hat" in d2. Thus, the verb can- 
not be of order type VEnd, which would require 
it to be the last element in its domain (>. in 
\[5\]). "Mann"  is not adjacent o "gesehen", but 
may be extracted across the dependency vpart  
(${vpart} in \[11\]), allowing its insertion into 
a domain defined by "hat". It cannot precede 
"hat" in d2, because "hat" must either begin d2 
(due to <.  in \[4\]) or itself go into dl. But dl al- 
lows only one phrase (s ing le) ,  leaving only the 
domain structure from Fig.2, and thus the order 
type V2 for "hat". 
178 
6 Compar i son  to  PSG Approaches  
One feature of word order domains is that they 
factor ordering alternatives from the syntactic 
tree, much like feature annotations do for mor- 
phological alternatives. Other lexicalized gram- 
mars collapse syntactic and ordering informa- 
tion and are forced to represent ordering alterna- 
tives by lexical ambiguity, most notable L-TAG 
(Schabes et al, 1988) and some versions of CG 
(Hepple, 1994). This is not necessary in our 
approach, which drastically reduces the search 
space for parsing. 
This property is shared by the proposal of 
Reape (1993) to associate HPSG signs with se- 
quences of constituents, also called word or- 
der domains. Surface ordering is determined 
by the sequence of constituents associated with 
the root node. The order domain of a mother 
node is the sequence union of the order domains 
of the daughter nodes, which means that the 
relative order of elements in an order domain 
is retained, but material from several domains 
may be interleaved, resulting in discontinuities. 
Whether an order domain allows interleaving 
with other domains is a parameter of the con- 
stituent. This approach is very similar to ours 
in that order domains eparate word order from 
the syntactic tree, but there is one important 
difference: Word order domains in HPSG do not 
completely free the hierarchical structure from 
ordering considerations, because discontinuity is
specified per phrase, not per modifier. For ex- 
ample, two projections are required for an NP, 
the lower one for the continuous material (de- 
terminer, adjective, noun, genitival and prepo- 
sitional attributes) and the higher one for the 
possibly discontinuous relative clause. This de- 
pendence of hierarchical structure on ordering is 
absent from our proposal. 
We may also compare our approach with the 
projection architecture of LFG (Kaplan & Bres- 
nan, 1982; Kaplan, 1995). There is a close sim- 
ilarity of the LFG projections (c-structure and 
f-structure) to the dimensions used here (order 
domain structure and dependency tree, respec- 
tively). C-structure and order domains repre- 
sent surface ordering, whereas f-structure and 
dependency tree show the subcategorization r 
valence requirements. What is more, these pro- 
jections or dimensions are linked in both ac- 
counts by'an element-wise mapping. The dif- 
ference between the two architectures lies in the 
linkage of the projections or dimensions: LFG 
maps f-structure off c-structure. In contrast, 
the dependency relation is taken to be primi- 
tive here, and ordering restrictions are taken to 
be indicators or consequences of dependency re- 
lations (see also BrSker (1998b, 1998a)). 
7 Conc lus ion  
We have presented an approach to word or- 
der for DG which combines traditional notions 
(semantically motivated ependencies, topolog- 
ical fields) with contemporary techniques (log- 
ical description language, model-theoretic se- 
mantics). Word order domains are sets of par- 
tially ordered words associated with words. A 
word is contained in an order domain of its head, 
or may float into an order domain of a transi- 
tive head, resulting in a discontinuous depen- 
dency tree while retaining a projective order 
domain structure. Restrictions on the floating 
are expressed in a lexicalized fashion in terms of 
dependency relations. An important benefit is 
that the proposal is lexicalized without reverting 
to lexical ambiguity to represent order variation, 
thus profiting even more from the efficiency con- 
siderations discussed by Schabes et al (1988). 
It is not yet clear what the generative capac- 
ity of such lexicalized iscontinuous DGs is, but 
at least some index languages (such as anbnc n) 
can be characterized. Neuhaus & BrSker (1997) 
have shown that recognition and parsing of such 
grammars is A/'7~-complete. A parser operating 
on the model structures is described in (Hahn 
et al, 1997). 
Re ferences  
Becket, T., A. Joshi & O. Rainbow (1991). Long- 
Distance scrambling and tree-adjoining gram- 
mar. In Proc. 5th Conf. of the European Chap- 
ter of the ACL, pp. 21-26. 
Bhatt, C. (1990). Die syntaktische Struktur der 
Nominalphrase im Deutschen. Studien zur 
deutschen Grammatik 38. Tfibingen: Narr. 
Blackburn, P. (1994). Structures, Languages and 
Translations: The Structural Approach to Fea- 
ture Logic. In C. Rupp, M. Rosner & R. John- 
son (Eds.), Constraints, Language and Compu- 
tation, pp. 1-27. London: Academic Press. 
BrSker, N. (1997). Eine Dependenzgrammatik 
zur Kopplung heterogener Wissenssysteme auf 
modallogischer Basis. Dissertation, Deutsches 
Seminar, Universit~it Freiburg. 
179 
BrSker, N. (1998a). How to define a context-free 
backbone for DGs: An experiment in gram- 
mar conversion. In Proc. o\] the COLING- 
A CL'98 workshop "Processing of Dependency- 
based Grammars". Montreal/CAN, Aug 15, 
1998. 
BrSker, N. (1998b). A Projection Architecture for 
Dependency Grammar and How it Compares 
to LFG. In Proc. 1998 Int'l Lexical-Functional 
Grammar Conference. (accepted as alternate 
paper) Brisbane/AUS: Jun 30-Jul 2, 1998. 
Eisner, J. (1997). Bilexical Grammars and a Cubic- 
Time Probabilistic Parser. In Proc. of Int'l 
Workshop on Parsing Technologies, pp. 54-65. 
Boston/MA: MIT. 
Gaifman, H. (1965). Dependency Systems and 
Phrase Structure Systems. Information and 
Control, 8:304-337. 
Haegeman, L. (1994). Introduction to Government 
and Binding. Oxford/UK: Basil Blackwell. 
Hahn, U., P. Neuhaus & N. BrSker (1997). Message- 
Passing Protocols for Real-World Parsing - 
An Object-Oriented Model and its Preliminary 
Evaluation. In Proc. Int'l Workshop on Parsing 
Technology, pp. 101-112. Boston/MA: MIT, 
Sep 17-21, 1997. 
Hellwig, P. (1986). Dependency Unification Gram- 
mar. In Proc. I1th Int'l Conf. on Computa- 
tional Linguistics, pp. 195-198. 
Hepple, M. (1994). Discontinuity and the Lambek 
Calculus. In Proc. 15th Int'l Conf. on Compu- 
tational Linguistics, pp. 1235-1239. Kyoto/JP. 
Hudson, R. (1990). English Word Grammar. Ox- 
ford/UK: Basil Blackwell. 
Hudson, R. (1993). Recent developments in depen- 
dency theory. In J. Jacobs, A. v. Stechow, 
W. Sternefeld & T. Vennemann (Eds.), Syn- 
tax. Ein internationales Handbuch zeitgenSssis- 
cher Forsehung, pp. 329-338. Berlin: Walter de 
Gruyter. 
Kaplan, R. (1995). The formal architecture of 
Lexical-Functional Grammar. In M. Dalrym- 
ple, R. Kaplan, J. I. Maxwell &: A. Zae- 
nen (Eds.), Formal Issues in Lexical-Functional 
Grammar, pp. 7-27. Stanford University. 
Kaplan, R. & J. Bresnan (1982). Lexical-Functional 
Grammar: A Formal System for Grammatical 
Representation. In J. Bresnan & R. Kaplan 
(Eds.), The Mental Representation of Gram- 
matical Relations, pp. 173-281. Cambridge, 
MA: MIT Press. 
Kruijff, G.-J. v. (1997). A Basic Dependency-Based 
Logical Grammar. Draft Manuscript. Prague: 
Charles University. 
Maruyama, H. (1990). Structural Disambiguation 
with Constraint Propagation. In Proc. 28th 
Annual Meeting of the ACL, pp. 31-38. Pitts- 
burgh/PA. 
Matthews, P. (1981). Syntax. Cambridge Text- 
books in Linguistics, Cambridge/UK: Cam- 
bridge Univ. Press. 
McCord, M. (1990). Slot Grammar: A System for 
Simpler Construction of Practical Natural Lan- 
guage Grammars. In R. Studer (Ed.), Natural 
Language and Logic, pp. 118-145. Berlin, Hei- 
delberg: Springer. 
Melc'hk, I. (1988). Dependency Syntax: Theory and 
Practice. Albany/NY: State Univ. Press of New 
York. 
Melc'hk, I. & N. Pertsov (1987). Surlace Syntax 
of English: A Formal Model within the MTT 
Framework. Philadelphia/PA: John Benjamins. 
Neuhaus, P. &: N. BrSker (1997). The Complexity of 
Recognition of Linguistically Adequate Depen- 
dency Grammars. In Proc. 35th Annual Meet- 
ing of the A CL and 8th Conf. of the EA CL, pp. 
337-343. Madrid, July 7-12, 1997. 
Reape, M. (1993). A Formal Theory of Word Order: 
A Case Study in West Germanic. Doctoral Dis- 
sertation. Univ. of Edinburg. 
Schabes, Y., A. Abeille & A. Joshi (1988). Parsing 
Strategies with 'Lexicalized' Grammars: Appli- 
cation to TAGs. In Proc. 12th Int'l Con\]. on 
Computational Linguistics, pp. 578-583. 
Sgall, P., E. Hajicova & J. Panevova (1986). The 
Meaning of the Sentence in its Semantic and 
Pragmatic Aspects. Dordrecht/NL: D.Reidel. 
Tesni&e, L. (1959). Elemdnts de syntaxe structurale. 
Paris: Klincksiek. 
180 
