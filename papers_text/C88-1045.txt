Formal  ~orpho log?  
Jan HAJ IC  
Re~earch  Ins t i tu te  of Hathemat ica l  Mach ines  
LoretAnsk~ n~m. 3 
~18 55 Praha  I, Czechos lovak ia  
&b~raot  
A formal i sm for the descr ip t ion  of  a 
sys tem of  formal morpho logy  for f lex ive  and 
agg lut inat ive  languages  (such as C3ech)  is 
presented,  bor rowing  some not ions  and the 
s ty le  f rom the theory  of  formal languages.  
Some examples  (for Czech  ad jec t ives )  are 
presented  at the end of  the paper.  In these 
examples ,  the fo rmal i sm's  ru les  are used for 
the phono logy-based  changes  as well ,  but 
noth ing  prevents  the use of a separate  
phono logy  level (e.g. of the Koskenn iemi ' s  
two- leve l  model)  as a f ront-  (and back-)  end 
for the ana lys i s  (and synthes is ) .  
1. Th~ Not iva? ion  
Us ing  a computer ,  the morpho log ica l  
level is a bas is  for  bu i ld ing  the syntaot lco -  
semant ic  part  of  any NL analys is .  The CL 
wor ld  pays  more a t tent ion  to morpho logy  on ly  
a f te r  the work  /Koskenn iemi  1983/ was 
pub l i shed.  However ,  as  Kay  remarked (e .g .  
in /Kay 1987/),  phono logy  was actua l ly  what 
was done in /Koskenn iemi  1983/. Moreover ,  
the s t ra tegy  used there  is best su i ted  for 
agg lu t inat ive  languages  wi th  a lmost  one- to -  
one mapp ing  between morpheme and grammat ica l  
meaning,  but s lavon ic  languages  are d i f fe rent  
in th i s  respect .  
One of  the praot iga l  reasons  for 
fo rmal i z ing  morpho logy  is that a l though there  
are some computer  imp lementat ions  us ing  a 
Czech  morpho logy  subsystem ( /Ha j i~ ,O l iva  
1986/, IK i r schner  1983/, /K i r schner  1987/), 
based  on the same sources  ( /EBSAT VI 198~/, 
/EBSAT VII 1982/ ) ,  no un i fy ing  fo rmal i sm for 
a complete  descr ip t ion  of formal morpho logy  
exists.  
2.  The Po~malimm 
The terms a lphabet ,  st r ing,  concatenat -  
ion, ? ~., symbol  N (pos i t ive  integers) ,  
indexes  and are used here  in the same way 
as in the formal g rammar  theory;  the symbol  
exp(A)  denotes  the  set of  al l  subsets  of  A, e 
denotes  an empty  str ing.  Uppercase  le t ters  
.are used main ly  for denot in~ sets  and newly  
de f ined  s t ructures ,  lowercase  le t ters  are 
used for mappings ,  for e lements  of an 
a lphabet  and for str ings.  
I~f in i t ion  i. A f in i te  set K of symbols  is 
ca l led  a set of  g rammat ica l  mean ings  (or 
s imply  mean ings  for short) ;  va lues  f rom K 
represent  va lues  of  morpho log ica l  ca tegor ies  
(e .g ,  sg  may represent  s ingu lar  number,  p3 
may represent  dat ive  ("3rd case")  for nouns, 
etc . ) .  
Def in i t ion  2- A f in i te  set D = ((w, i )  E A* x 
(N , {0))\] ,  where  A is an a lphabet ,  is ca l led  
a d ic t ionary .  A pa i r  (w,i) ~ D is ca l led  a 
d ic t ionary  entry,  w is a lexical  unit  and i 
is ca l led  pat tern  number.  In the l ingu is t i c  
in terpretat ion ,  a lexical  unit  represents  the 
not ion  "systemic  word",  but it need not be 
represented  by a t rad i t iona l  d ic t ionary  form. 
Def in i~ i ,n  3.  Let A be a f in i te  a lphabet ,  K 
a f in i te  set of  meanings,  V a f in i te  a lphabet  
of  var iab les  such  that A a V = ?). The  
qu in tup le  (A ,V ,K , t ,R)  where t is a mapp ing  
t: V ~> exp(A*)  assigni,~g types  to 
var iab les ,  R is a f in i te  'set of  ru les  
( I ,H ,u ,v ,C) ,  where  I ~ N is is a f in i te  set 
(of labels) ,  C ~ (N u {0}7 is a f in i te  set 
(of cont inuat ions) ,  H n K is a set of  
mean ings  be long in~ to a par t i cu la r  ru le  f rom 
R, u,v E (A u V)-, is ca l led  a cont ro l led  
rewr i t ing  sys tem (ORS)| all var iab les  f rom 
the le f t -hand s ide (u) must be present  on the 
r ight -hand s ide (v) and v ice  versa  (ru le 
symmetry  accord ing  to var iab les ) .  
Def in i t ion  4. Let T = (A ,V ,K , t ,R)  be a CRS. 
A (s imple)  subst i tu t ion  on T wi l l  be any 
mapp ing  q: V -> A*| q(v) s t(v). 
I)ef ini~ion 5- Let T = (A ,V ,K , t0R)  be a ORS 
and q a s imple  subst i tu t ion  on T. Happ in~ d: 
CA , V) z -> A ~ such that d(e) = e| d(a)  = a 
for a ~ A| d(v) = q{v) for v ~ V; d(bu) = 
d(b)d(u)  for  b E CA v V), u s CA , V) ~ wil l  
be ca l led  (genera l i zed)  subst i tu t ion  der ived  
f rom q.  
Comment.  The (genera l i zed)  subst i tu t ion  
subst i tu tes  tin a g iven  s t r ing)  all 
var iab les  by some str ing.  The ~ame s t r ing  is 
subst i tu ted  for all oucu~ences  of  th i s  
var iab le  ( fo l lows  f rom the def in i t ion) .  
Def in i t ion  6. Let T = (A ,V ,K ,~,R)  be a CRS 
and F ~ K. Let then  G, G' ~ K, w,z ~ (A , 
V) ~, i E N, i' E (N u {0}). Me say that w 
~an be  d i rec t ly  rewr i t ten  in the s ta te  (i0G) 
to z w i th  a cont inuat ion  ( i ' ,G')  accord ing  to 
mean ings  F (wr i t ten  as  w( i ,G)  =>\[T,F\ ]  
~( i ' ,G ' ) ) ,  if there  exist  such  ru le  
( l ,H ,u ,v ,C)  E R and such s imple  subst i tu t ion  
q on T, that i ~ I, i' s C, H n F, G = G' , 
H, d(u) = w and d(v) = z, where  d is the 
subst i tu t ion  der ived  f rom q. 
Re la t ion  =>~\[T ,F \ ]  is de f ined  as the re f lex ive  
and t rans i t ive  c losure  of  =>iT,F\ ] .  
Comment .  The CRS is cont ro l led  through 
cont inuat ions  and labels.  A f te r  a d l reot  
rewr i t ing  operat ion ,  the on ly  ru les  that 
cou ld  be app l ied  next must have  in the i r  
label at least one number  f rom the rewr i t ln  K 
operat ion  cont inuat ion .  P lease  not ice  that:  
- th i s  operat ion  a lways  rewr i te~ who le  words|  
- the res t r i c t ion  on the le f t -hand and r ight -  
hand s ide  of  a ru le  that it shou ld  be on ly  
s t r ing  (of le t ters  and/or  var iab les )  is not  
so s t rong  as it may seem, because  no 
res t r i c t ions  are imposed on  the subst i tu t ion  
q. However ,  to be ab le  to implement  the ru les  
in a par t i cu la r  imp lementat ion  as  f in i te  
s ta te  machines ,  we shal l  requ i re  q to be 
def ined  us in~ regu lar  express ions  onlyo 
~f i~ i~ ion  7. Let T = (A ,V ,K ,~,R)  be a CRS 
and let n be the max imal  numbe~ from all 
222 
labels  f rom all ru les  f rom R; n - tup le  P = 
(pl, ..., pn) wi l l  be ca l led  a list of  
patterna; on T (the e lements  of  P are ca l led  
patterna;) if for every  i a mapp ing  pi: exp(K)  
x A* -> t)xp(A ~) is de f ined  as z E p i (F ,w)  <=> 
wCi ,F)  =:>~\[T,F\] zOO,{)) .  
Comment.  The "s t range"  sets  G and G' f rom 
the def in i t ion  6 acqu i re  a real mean ing  on ly  
in connect ion  wi th  the de f in i t ion  of  
pat terns;  they  have a cont ro l l ing  task  dur ing  
pi cons%)ruction, namely,  they check  whether  
all mean ings  f rom F are  used dur ing  the 
der ivat ion .  "To use a mean ing  k" means  here 
that th , :~re  is some ru le  ( l ,H ,u ,v ,C)  app l ied  
in the ~ourse  of  der ivat ion  f rom w( i ,F)  to 
z (O, ( ) )  such  that k E H. Such mean ing  can  
then be removed from G when const ruct ing  G' 
(see Def~ 7); mean ings  not f rom H cannot.  
Thus, to get the empty  set in z(O,( ) )  when 
s tar t in~ from w(i ,F) ,  all mean ings  from F 
must be "used" in th i s  sense. 
A patte>?n descr ibes  how to const ruct  to a 
g iven  wo>zd w all poss ib le  forms accord ing  to 
mean ing~ F . .  In th i s  sense,  the not ion  of  
pat tern  does  not d i f fe r  substant ia l l y  f rom 
the t rad i t iona l  not ion  of  pat tern  in formal 
morpho logy ,  a l though t rad i t iona l ly ,  not the 
const ruct ive  descr ip t ion ,  but just some 
represent;af ire of  such a descr ip t ion  is 
ca l led  a pattern.  
Deflnlt|x;n 8. Let D be a d ic t ionary  over  an 
a lphabet  A, T = (A ,V ,K , t ,R)  a CRS and P a 
l i s t  of pat terns  on T. A quadrup le  H = 
(A,D,K,P)  is ca l led  a morpho logy  descr ip t ion  
on T (H\[ 'C\]-descript ion).  
Def|ni~|.t)n 9. Let T = (A ,V ,K , t ,R)  be a CRS 
and H = (A,D,K,F)  an H\ [T \ ] -descr ip t ion .  Set L 
= (z ~ A:'~; there  ex- w E A~ i E N, H ~ K; z 
p i (H ,w)}  wi l l  be ca l led  a language 
generated  by H\ [T \ ] -descr ip t ion  H. The 
e lement~ of L wi l l  be ca l led  word  forms. 
Comment. The term morpho logy  descr ip t ion  
in t roduced above is a counterpar t  to a 
descr ip t ion  of a sys tem of' formal morpho logy ,  
as used in t rad i t iona l  l i te ra ture  on 
morpho lo~y.  
Def in i t ion  9 i s  i n t roduced here just for the 
purpose  of  fo rmal i za t ion  of the not ion  of 
word  form, i.e. any form der ived  f rom any 
word  f rom the d ic t ionary  us ing  all poss ib le  
mean ings  accord ing  to H\[T\].  
Def in i t i~)n  10- Let T = (A ,V ,K , t ,R)  be a ORS 
and M == (A,D,K,P)  be HET\ ] -descr ip t ion .  The 
term syn.i;hesis on M is used  for a mapp ing  s: 
exp(K)  x A ~ -> exp(A*) ;  s(H,w) = (z; ex. i 
N, i <~= n; z ~ p i (H,w)  & (w,i) E D}. The 
term ant~lysis is used then for  a mapp ing  a: 
A ~ -> exp(exp(K)  x A~); a(z) = ((H,w);  z 
s{H,w)) .  
Comment.  Accord ing  to de f in i t ion  I0, 
synthes i~ means  to use pat terns  for words  
f rom the d ic t ionary  only. The def in i t ion  of  
analysis; i s  based on the syhthes is  
de f in i t ion ,  so it c lear ly  and sure ly  fo l lows  
the in tu i t ion  what an ana lys i s  is. In th is  
sense, these def in i t ions  don't  d i f fe r  
substant ia l l y  f rom the t rad i t iona l  v iew on 
formal morpho logy ,  as opposed to Koskenn iemi ;  
however,  the so~ca l led  oomplex  word  forms 
("have been ca l led" )  are  not covered,  and 
the i r  an~Iys i s  is sh i f ted  to syntax.  
The def in i t ion  of  ana lys i s  is qu i te  clear, 
but there  is no procedure  conta ined,  capab le  
of  ac tua l ly  car ry ing  out th is  process.  
However,  thanks  to  ru le  symmetry  i t  i s  
poss ib le  to reverse  the rewr i t ing  process:  
Def in i t ion  t l .  Let T = (A ,V ,K , t ,R)  be a ORS. 
Further ,  let G G = a K, i ~ N, i '  ~ (N v 
(0)), z,w E A ~. He say that under  ~he 
cond i t ion  ( i ' ,G')  it is poss ib le  to d i rec t ly  
ana lyse  a s t r ing  z to w wi th  a cont inuat ion 
(i,G) (we wr i te  z( i ' ,G' ) =<\[T\]  w( i ,G)) ,  if 
there  ex is ts  a ru le ( I ,H ,u ,v ,C)  E R and a 
s imple  subst i tu t ion  q on T such that i E I, 
i '  E C, G = G' u H, d (u)  = w a d (v )  = z ,  
where d is the genera l i zed  subst i tu t ion  
der ived  f rom q. A re la t ion  " i t  is poss ib le  
to ana lyze"  (=<~\[T\])  is de f ined  as a 
re f lex ive  and t rans i t ive  c losure  of  =<\[T\]. 
Def in i t ion  12.  Let T = (A V ,K , t ,R)  be a ORS 
and z e A . Every  s t r ln~ w s A , i e N and F 
}< such that z(O,?})  =< "\[T\] w( i ,F)  is ca l led  
a predecessor  of  z wi th  a cont inuat ion  (i,F). 
Lemma. Let T = (A,V,K, t ,R)  be a ORS and w E 
A* a predecessor  of  s t r ing  z g A * with a 
cont inuat ion  (i,P). Then  z E pi (F,w),  where 
p i  is a pat tern  by T (see Def. 7). Proof  
(idea). The on ly  "asymmetry"  in the 
de f in i t ion  of  => as opposed to =<, i.e. the 
cond i t ion  H n F, can be so lved  put t ing  (see 
Def. 11) P = (} v HI u H~ u ? .. ~, Hn (for n 
ana lys i s  steps).  Then surely Hi a F for 
every  i. 
Theorem.  Let T = (A,V,K, t ,R)  be a CRS, H = 
(A,D,K,P)  an H\ [T \ ] -desor ip t ion ,  a an ana lys i s  
by H and w s A* a predecessor  of z e A ~ with 
a cont inuat ion  (i,F). Moreover ,  let (w,i) E 
D. Then (F,w) ~ a(z). 
P roo f  fo l lows  f rom the preced in~ lemma and 
f rom the def in i t ion  of analys is .  
Comment.  Th is  theorem he lps  us to manage an 
ana lys i s  of  a word  form: we begin  with the 
form be ing  ana lysed  (z) and a "cont inuat ion  ' 
(0,(3), us ing  then " reversed"  ru les  for back 
rewr i t ing .  In any s ta te  w( i ,F)  dur ing  this  
process,  a correct  ana lys i s  is obta ined  
whenever  (w,i) is found in the d ic t ionary .  
At the same t ime we have in F the appropr ia te  
meanings.  Pass in~ a long all poss ib le  paths  
of  back rewr i t ing ,  we obta in  the who le  set 
a(z). 
3.  An Example 
To i l lus t ra te  the  most  impor tant  
features  o f  the fcrmal ism descr ibed  above, 
we have chosen a s impl i f ied  example o f  Czech 
ad jec t ives  ( regu lar  dec l inat ion  acccrd ing  to  
two t rad i t iona l  "pat terns"  - mlad~ (young) 
and jarn~ (spring),  w i th  negat ion ,  full 
comparat ive  and super la t ive ,  sg and pl, but 
on ly  masc. anim. nominat ive  and geni t ive) .  
The d ic t ionary :  
D = {(nov , , l ) ,  new 
(pod l~,2)}  v i le  ( i t  has no neg. forms) 
The CRS: 
CRS T = (A ,V ,K , t ,R ) :  
A = {a ,~,b ,c ,~, . . . , z ,~ ,#} 
(# means word separator )  
K = {sg ,p l , comp,sup ,neg ,masc ,nom,acc}  
V = { - ,L IM} 
t ( - )  = A~| t (L )  = {1 ,z} ;  t (M) = {m,n ,v}  
R = { (see  fig. 1)  } 
223 
({1} ,{  },  - ,  - ,{2}) ,  ({3},{masc,sg,nom}, -~ -~#,{0}) ,  
({ l ) ,{neg  },  - ,  ne - ,{2}) ,  ((3},{mssc,sg~acc}, -~-~ho#,{O}) ,  
({2} ,{  } ,  - ,  - ,{3}) ,  ({3) ,{masc ,p l ,nom},  -~ ,  -~#,{0}) ,  
({2} ,{comp}, -L~,  -Le j~,{3}) ,  ({3} ,{masc ,p l ,acc} ,  -~ ,  -~@,{0}) ,  
({2),{sup } , -L~,ne j -Le j~,{3) ) ,  ({3),{easc,sg,n~m}, -{  -~#~{O})t 
((2},{c~mp},-M~, -M~j~,{3}) ,  ({3},{masc,sg,acc}, -~,-~h?~.,{O}), 
({2} ,{sup) , -M~,ne~-M~,{3}) ,  ({3},{~asc,pl ,nom}, - , ,  - *#,{0}) ,  
({3},{masc,pl ,acc},  -~, -~#,{0}) 
Pi~.  1 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  
using p2: 
podl~(2,{sup,masc,pl,acc}) => two possib. 
ne3podle3~(3,{masc,pl,acc}) => 1st a l t .  
ne~podle~W(O,{}) . . . . . . . . . .  8" empty, O.K. 
podl~(3,{sup,masc,pl,acc}) => 2nd a l t .  
podl~#(O,{sup}) . . . . . . . . . . . . . .  S" not empty, so 
th i s  i s  not a so lut ion 
Poss ib i l i t i es  without removinK "used" meanings are not shown; 
a l l  lead to non-empty G' in the resu l t in~ z(O,G'). 
F ig .  2 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  
? v . I 
ne jnove j~,#(O,{})  =< . . . . . . . . . . . . . . . . .  not  in D (4 a l ter . )  
ne jnov~j~(3 ,{masc ,p l ,acc})  =< .... not  in D (3 alter .)  
nov#(2 ,{sup ,masc ,p l ,acc})  =< . . . .  not  in  D 
nov#( l , ( sup ,masc ,p l ,acc ) )  . . . . . . . . . . .  E D; SOLUTION 
ne3nov~(2,{comp,masc,pl,acc}) =< not in D (2 a l ta r . )  
jnov#(1,{neg,comp,masc,pl,acc}), not in D 
nejnov~(1,{comp,masc,pl,acc}), not in D 
v .v~ nejnovejs1(2,{masc,pl,acc}) =< . . .not  in D (2 a l te r . )  
? v . v p  3noveJsz(1,(negtmasc,pl,acc}). not in D 
nejnov~J~{(1,{masc,pllacc}) . . . .  not in D 
nejnov~j~(3,{masc,pl,nom}) =< . . . . .  not in 
nov~(2,{sup,masc,pl,nom}) =< . . . . .  not in D 
nov~(1,{sup,masc,pl,nom}) . . . . . . . . . . . .  s D; SOLUTION 
. . .  same as 1st a l te r . ,  but nom instead of ace . . .  
? v .v~ 
nejnoveJsz(3,{masc,sg,nom}) =< . . . . .  not in D 
nov~(2,{sup,masc,sg~nom}) =< . . . .  not in D 
nov~(1,{sup,masc,sg,nom}) . . . . . . . . . . .  s D; SOLUTION 
. . .  same as 1st a l ta r . ,  but sg,ncm instead of pl ,acc 
nejnov~j~(3,{masc,pl,nom}) =< . . . . .  not in D 
nejnov~j~(2,{masc,pl,nom)) =< . . .not  in D (2 a l te r . )  
nejnovSjg#(1,{masc,pl,nom}) . . . .  not in D 
? v . v s  jnove3sy(1,{neg,masc,pl,nom)), not  in D 
F ig .  3 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  
An example  of synthes is :  we want to obta in  
s({sup,masc,pl,acc}~pod1~) -> (pod ia ,2 )  ~ D; 
see fig. 2 
An example  of analys is :  we want to obta in  
a n ? w ? v .  ( eJnovejsz#); see f ig .  3 
Comment?  Bet ter  wr i t ten  ru les  in CRS would  
not a l low for the 4th a l te rnat ive  in the 
. v .  vs .  f irst s tep ( "ne3nove3sy) ,  because "~" cou ld  
not be fo l lowed by "9" in any Czech word 
form; however,  const ruct ing  the o ther  
unsuccess fu l  a l te rnat ives  cou ld  not be a 
pr ior i  cance l led  only the d ic t ionary  can 
decide, whether  e .~.  " jnov~" is or is not a 
Czech  adject ive.  
Comment on comment.  No o,~ange in the ru les  
would  be necessary  if a separate  phono logy  
and/or  o r thography  level is used; then, the  
"~"  poss ib i l i ty ,  be in  K o r thograph ica l ly  im- 
poss ib le,  is exc luded  there, of course. 
4.  Conc lus ion  
This formalism wi l l  be probably 
su f f i c ient  for Czech (no counter-example to 
th i s  thesis has been discovered so far) ?  Per 
in f lec ted  words one or two " levels"  (i.e., 
success ive  rule app l i ca t ions )  wil l  suf f ice,  
224 
agglut inat ive  elements (e.~.,  adject ive 
comparison) w i l l  probably need three to f i ve  
rules. 
References  
EBSAT V I I  (1982) :  Pk~rphei ic  ~na lys i s  o f  Czech 
Prague  1982 
EBSAT VI  (19811 = Lex ica l  Input  Data fo r  
EKperim4wnts N i th  Czech~ Prahs  1981 
Koskennlemi, K. (1983), T~o-level morphology, 
Univ. of Hels ink i ,  Dept. of Sen. Lingu- 
i s t i cs ,  Publ icat ions No. 11 
Haji~, J . ,  Ol ive,  K. (1986)= Projekt ~esko- 
ruske~ho s t ro jovL iho  pr~ekladu,  (A P ro jec t  
of Czech to  Russian MT System), in= 
Proceedings of SOFSEM'86, Liptovsk~ JAn 
Kirschner, Z. (1983)= IIGSRII= (A Nethod of 
Automatic Extract ion of S ign i f i cant  
Terms f rom Texts ) ,  EIM~T X 
K i rschner ,  Z. (1987)= K i rschner t  Z.= APd%C3-2: 
An English,to-Czech Machine Translation 
System,  EBSAT X I I X 
Kay,  M. (1987) = Non-Cones,erie, i re  F in i te  ~. 
State Morphology, In= Proceedings of the 
3rd European ACL meeting, ~.openhagen, 
Denmark, Apr i l  1987 
EBSAT = Exp l i z i te  Beschre ibung der  Sprache  
und auto lkmt ische  Textbearbe i tung ,  LK Praha 
