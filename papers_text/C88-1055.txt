Concret ion :  Assumpt ion-Based  Unders tand ing  
Paul S. Jacobs 
Artificial Intelligence Program 
GE Research and Development Center 
Schenectady, NY 12301 USA 
Abst ract  
A language understanding program must produce as pre- 
cise a meaning representation as possible from a linguistic 
input. CONCRETION is the process of developing a specific 
interpretation by combining various levels of conceptual 
information. This process represents an assumption-based 
method of language interpretation, and departs from the 
traditional approach of treating multiple interpretations 
as independent. Concretion Mlows the language analyzer 
to develop a sufficiently specific representation without 
excessive computation or brittle interpretation rules. 
1 In t roduct ion  
The ambiguity and imprecision of language are the key prob- 
lems in building language understanding programs. Most sys- 
tems that perform semantic interpretation \[Bobrow and Web- 
ber, 1980, Sondheimer et al, 1984, Lytinen, 1984, Hirst, 
1987\] address this imprecision by offering means of selecting 
among alternative interpretations. The problem with these 
approaches i that they fail to take into account the interre- 
lationshiPS among the interpretations, which often support or 
refute one another to various degrees. A better model is one 
in which the candidates exist not as distinct choices but as as- 
sumptions contributing to a complete meaning representation. 
The language understanding process thus gradually refines a 
semantic representation based on the support or refutation of 
each element. 
For example, consider the following potential inputs: 
1. John cut the salami. 
2. John gave a kiss to Mary. 
3. The investor group seeking control of Warnaco... 
4. The ~rm' command takes three arguments. 
5. Move back to the last position. 
The examples above represent potential inputs from sev- 
eral disparate real and "toy" domains of TRUMP (TRans- 
portable Understanding Mechanism Package)\[Jacobs, 1986b, 
Jacobs, 1987\]. The idea of TRUMP is to use a combination 
of "core" knowledge about language and certain specialized 
knowledge to produce a complete semantic interpret~ation. I  
each of the examples, the italicized word or phrase represents 
a vague, ambiguous, or metaphorical verb sense. The prob- 
lem for a good semantic interpreter is to derive the real or  
intended sense of each phrase without excessive computation 
or specialized knowledge. For example, the following are rea- 
sonable paraphrases of a complete semantic interpretation of
the above examples: 
1. John cut the salami 
cut =~ sliced (NOT chopped or shortened) 
27oi 
2. John gave a kiss to Mary 
gave a kiss ~ kissed (NOT presented) 
3. The investor group seeking control of Warnaco... 
seeking =~ trying (NOT searching) 
4. The ~rm' command takes three argmnents. 
takes ~ requires as input (NOT moves) 
5. Move back to the last position. 
Move back =# return (NOT move backwards) 
Each of these examples represents a clear, ordinary use of 
language. Yet a semantic interpreter must use a great deal of 
knowledge to distinguish the intended sense of the italicized 
phrase from other related ahd competing senses. It is sim- 
ply not practical to treat this process as one of discriminating 
among a large set of distinct interpretations. The space of in- 
tended meanings is too large, and there are too many common 
characteristics of various senses. To deal effectively with the 
complexity of this process, a semantic interpreter must accom- 
plish the following: 
1. Identify prospective interpretations--The system must use 
linguistic information to select interpretations that are 
consistent with the input. 
2. Use linguistic and conceptual knowledge to combine 
interpretations-This may result in ruling out certain can- 
didates, or in forming new and more precise interpreta- 
tions from the combination of knowledge sources. 
3. Assume a specific interpretation--As in the above exam- 
ples, a practical understanding of the input must be some- 
what more than the maximum that can be "safely" in- 
ferred. The system must produce some knowledge struc- 
tures that are likely candidates but are not certain from 
the linguistic description. 
4. Fail gracefully on contradictions--If an assumed interpre- 
tation results in a contradiction, the system must preserve 
those interpretations that do not conflict. If other inter- 
pretations are dependent on a conflicting one, these too 
must be discarded. 
The requirements above suggest a model of language un- 
derstanding that progressively refines a semantic intet~preta - 
tion, based on linguistic and contextual information, but that 
incorporates into each specific interpretation knowledge upon 
which that interpretation builds. In other words, the ultimate 
goal of the system is to produce the most specific consistent 
interpretation, and the means of achieving that goal is to treat 
each interpretation as an assumption. 
This assumption-based interpretation process is known as 
CONCRETION * \[Wilensky, 1983\]. The idea of concretion is to 
*This term was originally proposed by Joe Faletti. The problem of con- 
cretion was initially defined in a series of seminars conducted by Robert 
determine ~u~ specific a meaning as is possible from an input, 
while enabliltg recovery if this interpretation proves overly spe- 
cific. This process is the essential element of a framework that 
satisfies the criteria mentioned above. 
Concretion is an important method for dealing with the 
problem of vagueness and imprecision as framed above. A sys- 
tem that pexforms concretion can successfully produce a com- 
plete interpretation without overcommitting to such an inter- 
pretation. The discussion that follows describes the concretion 
process as implemented in TRUMP and considers how this 
technique improves upon previous approaches. 
2 Concret ion 
Concretion :b~ the process of taking abstract concepts and pro- 
dating from ~hem concepts that are more precise, or concrete. 
The motivation for this mechanism is strong in story under- 
standing \[Norvig, 1983, Wilensky, 1983\], because understand- 
ing a story ~,eems to involve a continuous refinement of the 
major concepts into more specific categories. Concretion does 
not really involve inferencc, since often the specific meaning is 
quite explicit, in the text. The process of concretion is evident 
in understmlding simple words and phrases in limited linguis- 
tic contexts as well, as illustrated in the examples presented 
earlier. 
Concretion is important because it is the mechanism that 
allows general knowledge about language to apply at very spe- 
cific levels o{ semantic interpretation. This is essential for nat- 
ural language interfaces and well as text processing systems, 
because it allows a core of linguistic and conceptual knowledge 
to be used for a variety of domains, mid makes the addition 
of domain-specific linguistic knowledge asier. For example, 
knowledge about verbs such as give and take and their rela- 
tion to transfer-events applies in discussing operating systems 
or corporate ~akeovers as well as in more general applications. 
It is hard to see how portability can be achieved without thc 
capability to entertain a range of inter,elated meaning repre- 
sentations. 
A typical natural anguage input can test several aspects 
of the concretion process. In example 3, the investor group 
seeking control of Warnaco, A first-pass emantic analysis de- 
rives a seeking action--The investor group is the searcher, and 
control of Warnaco is being sought. Domain-independent con- 
ceptual knowledge suggests that looking for a state means try- 
ing to realize the state. Domain-specific knowledge produces 
the assmnpti(m that the phrase describes a corporate takeover 
attempt. An interpretation of this specificity is necessary to 
drive inferences and cooperative responses. 
The concretion process is illustrated in figure 1. Each 
stage descril)ed above, and each knowledge source, must be 
distinct. The surface level semmltic analysis is essential be- 
cause it derives conceptual relations that would apply also to 
"looking for", "searching for", and even "pursuing"; this analy- 
sis thus avoids the redundant representation f each construct. 
This intermediate analysis also makes it possible to use ab- 
stract conceptual roles (such as actor and recipient) to deter- 
mine specific underlying roles (such as the target and suitor 
of a corporate takeover) (of. \[Jacobs, 1987\]). The second as- 
pect of concretion, applying conceptual knowledge to produce 
Wilensky at the University of California t Berkeley. In addition to Wilen- 
sky, Faletti, and the author, participants in these seminars included Yigal 
Arens, Margare~ Butler, David Chin, Chuck Fillmore,' Paul Kay, Marc 
Luria, Jim Martin, Jim Mayfield, Peter Norvig, Lisa Rau, and Nigel Ward. 
"The investor group seeking control of Warnaco" 
Lexical/syntactic \] 
mechanism 
The sentence is about a seeking; 
what's being sought is control 
1 Conceptual Seeking a state is u.sually knowledge trying to act~ieve t~e state 
~ : ~ w  C?ntextual/ domain Attempts to control 
ledge companies are takeovers 
The investor group is probably trying to acquire Warnaco. 
Figure 1: Concretion integrates knowledge sources 
more specific interpretations, i  necessary to refine vague terms 
and identify metaphorical or other non-literal constructs. The 
third component, using domain-specific knowledge, separates 
this general conceptual knowledge from assumptions that de- 
pend on an implied context~ the domain of corporate takeovers 
in this example. 
2 .1  Types  o f  Concret ion  
Concretion is the specialization of an abstract concept to a 
more precise interpretation i a given context. As tile exam- 
ples of the previous sections illustrate, concretion can involve 
a combination of linguistic and conceptual knowledge, and can 
result in either a direct specialization or a metaphorical exten- 
sion. In all cases, concretion re(tuires four ingredients: 
* An instantiated concept o be specialized 
e A linguistic or conceptual "trigger" 
e A target concept ype 
o A conceptual relation between source and target 
For example, in John cut the salami, the concept to be 
concreted is cutting, the trigger is the combination of cutting 
with ediblc-obloid or some such~ the target concept is slicing 
(indicated by the trigger), and the relation is subcategoriza- 
tion, or DOMINATEs. 
Concretion is often triggered by a linguistic structure, such 
as a particular combination of lexical items or the use of a cer- 
tain phrase structure. Figure 2 shows the concretion of the 
concept cutting to the concept, severing in the phrase cut the 
tip off. In this case, the knowledge base contains the infor- 
marion that severing is DOMINATEd by cutting. The DOMI- 
NATE relation, labeled D, indicates that severing is a subcat- 
egory of cutting \[Wilensky, 1984\]. Diagonal inks labeled with 
italicized words show relationships between concepts and con- 
ceptual roles. The specialization of cutting in this instance is 
triggered by the linguistic relation v_part-cut_o?, representing 
the use of the verb cut with the particle off. 
A specific interpretation is often reached through a series 
of concretions, as in the seeking control example. In the case of 
cut, the assumed interpretation can be further specialized if the 
conceptual object is of a particular type, such as body_part, as 
2"7\]. 
The doctor cut the tip off. 
\[ cutting \] . 
Instantiated -,,,~bject Trigger:\] v._part-cut_off\] 
concept: I tip I 
\[ cutting \] \] severing I 
Knowledge A Result: x,~object 
~ase: /~  I tip \] 
I sewring I 
Figure 2: Concretion with Linguistic Trigger 
shown in figure 3. In this example, the concept of amputating 
is reached through a combination of linguistic and conceptual 
clues, 
The doctor cut the leg off, 
\[ severing \] " \] severing \] 
Instantiated ~",1~ bject x,,~object Trigger: 
Concept: I leg I \]b?dy-partl 
\ [ sever ing \ ]  \]amputating~objec t 
Knowledge DI  Result: 
Base: \[ leg I 
\[ amputaring\] 
Figure 3: Concretion with Conceptual Trigger 
An intended meaning is not necessarily a subcategory of
an intermediate interpretation, asshown by the seeking control 
example. Associations between concepts that are analogous or 
metaphorically related are represented as VIEWs\[Jacobs and 
Rau, 1985, Jacobs, 1986a\], which also associate related roles. 
Figure 4 illustrates the application of a VIEW in the concre- 
tion process. In this example, the use of the noun kias to de- 
scribe the conceptual object of a giving serves as a trigger. A 
general VIEW of action as transfer-event relates giving (which 
is a tranffer-event to kissing (which is an action), and also 
the recipient of the giving to the conceptual object of the ac- 
tion. The m label (for MANIFEST) on some roles indicates 
that the roles are not necessarily specializations of any more 
abstract relations. When used in this concretion, the VIEW 
derives a kissing concept with Mary as the kissee. There are 
two conceptual objects in a kiss--the person being kissed and 
the surface being kissed--and the concretion mechanism ust 
use constraints on these roles to determine the correct role. 
The above examples how several ways in which concre- 
tion results in the creation of a specific interpretation using a 
combination oflinguistic and conceptual relationships. The ex- 
amples also demonstrate hat different ypes of concretion can 
be combined, as in cut the leg off. In any of these cases, a slight 
variation in the input can negate the resulting interpretation. 
When this happens, the concretion mechanism retreats to in- 
termediate structures, thus preserving as much of the semantic 
result as possible. In the doctor cut the leg off accidentally or 
the doctor cut the leg off the table, the system will preserve 
the severing interpretation. Each concretion, therefore, is an 
John gave Mary a kiss. 
I giving I Trigger:l givir 
. . . . .  : rec lD. - '~"~ject  lnstantlatea * "~ 
Concept: I mary II kissing I 
,.ng I ,,,,,~object 
\]noun_kiss \] 
t r a n s f e r - e v e n ~  
Base: ~ m ~ m Kn?wledge\[ i recipi:nt ~ J~ ~ 
\[ kissing \[ ,, 
Result: 
Figure 4: Concretion using VIEWs 
assumption that explicitly depends on its trigger and on other 
consequential relationships. 
2 .2 Re la ted  Research  
Most language analyzers do not really perform concretion. 
Unification-based systems \[Pereira nd Warren, 1980, Pereira 
and Shieber, 1984, Gawron et al, 1982\] tend to refine semantic 
representations by adding semantic FEATURES, represented as 
variables with assignments. Some of the systems that use a KL- 
ONE knowledge representation \[Bobrow and Webber, 1980, 
Sondheimer ct el., 1984\] perform a similar function, but use 
specific interpretation rules to place concepts in more specific 
categories, rather than to attempt an algorithm for combining 
lexical and conceptual knowledge. Hirst's\[Hirst, 1987\] "Po- 
laroid Words" are described in a manner similar to concretion: 
the "words" gradually develop into a complete representation. 
However, each word sense is still independent; a "polaroid 
word" cannot, for example, confiate two word senses. Lytinen's 
MOPTRANS\[Lytinen, 1984\] includes a specialization mecha- 
nism that selects the most specific applicable frame, but like 
the Polaroid Words, it does not take into account he common 
assumed meaning. None of these approaches allows interpreta- 
tions to be mapped or refined into more precise interpretations. 
Other related research addresses the problem of concretion 
from a different perspective. Norvig's work \[Norvig, 1986\] con- 
centrates on conceptual concretion as inference, independent 
of the linguistic issues. Zernik and Brown \[Zernik and Brown, 
1988\] model anguage as a reason maintenance process, unlike 
TRUMP, which incorporates principles of reason maintenance 
within a more traditional linguistic framework. 
3 The  Concret ion  A lgor i thm 
The discussion that follows describes the details of the concre- 
tion mechanism of the TRUMP semantic interpreter. 
3.1 When to  Concrete  
Concretion is performed according to the following rules: 
? When a linguistic description produces a new conceptual 
structur G concrete it. 
New pieces of conceptual knowledge are continually de- 
rived as the linguistic input is processed. When a new 
concept is produced, the new knowledge can interact with 
272 
existing knowledge to produce a more specific interpreta- 
tion. ~'or exm~lple, in "John cut the salami," a cutting 
with John as cutter is later concreted to a slicing, when 
the concept of salami is produced. 
o When a grammatical structure is completed, try to con- 
crete the concepts to which it refers. 
When a verb phrase is completed, for example, there may 
be a li:~t of concepts to which the verb phrase potentially 
refi;rs: Since the verb phrase can be enveloped by gram- 
maritaL structures that necessarily refer to the stone con.- 
cepts, the conceptual knowledge produced fl'om the verb 
phrase must be combined with any concepts produced 
fl'om these enveloping structures. In "With a knife, John 
cut the salami", the meaning of the main clause is con- 
creted using tim prepositional phrase. 
Smnmary :  Perform concretion whenever new conceptual 
information,, might result in a more specific semantic interpre- 
tation. 
3?2 Ho ly  ~o Concrete  
The concretion p~'ocess i performed by taking two concepts 
and combining their conceptual content o produce a more spe- 
cific concepL Generally, this results in filling out specific roles 
of the derived concept with more general role fillers. Concre- 
tion can a\]E:o result in deriving a non-literM interpretation, as
in the "give a kiss" and "take argmnents" examples. 
The coacreLion process often will Nil, for example if the 
same role is: filled by different concepts. In "Mary was given a 
letter to BIll", this hlocks the possiMlity that Bill is the recip- 
ie'nt and tlms also resolves the attachment of the prepositional 
phrase (tho. correct interpretation is A letter to Bill was given 
to Mary). In other cases, concretion maps conceptual roles 
into new roles or subsumes roles altogether. In "give a kiss", 
the role of "kiss" as conceptual objecl, disappears entirely in 
the concrete concept kissing. However, any modifiers of "kiss" 
become rol('s of the new concept, so "John gave Mary a quick 
kiss" is interpreted as "John kissed Mary quickly". In this case 
the relation..dfip between the literal giving concept and the con- 
crete kissin,,! is called a VIEW. 
The concretion mechanism keeps track of the linguistic 
sl, rnctures vpon which each concept is dependent. Titus if the 
parsing pro(;ess later discards a linguistic structure that has 
violated a constraint, a bookkeeping mechanism can discard 
any concepts that hinge upon that structure. For example, 
the phrase "'the command sent the message" has two parses, 
one in which the command, like 'rm', is sending a message, 
and the other in which tim command is receiving the message. 
(One parse is a complete sentence, the second is a complex 
uoun phrase.) In the garden path sentence, "the command 
:;ent the m(ssage halted", the semantic interpretation of the 
command playing the role of sender must be discarded for syn- 
tactic reasons. Tiffs resembles dependency-directed hacktrack- 
ing \[Doyle, 1979, DeKleer, 1986\], but is accomplished simply 
by eonstanL)y throwing away concepts that are no longer valid 
interpret aft, ms. 
The input to tim concretion algorithm in TRUMP is a 
concept Cot,t to bc concreted, and a new piece of information 
(2 ...... also expressed as a concept. Concept C, ,~ may come 
fl'om a newlj interpreted piece of linguistic information, a lexi- 
cal or conceptuM specialization rule, or a conceptual inference. 
The process operates as follows: 
o I f  C ..... is a snbcategory of Cold, form a concept of the 
. same type as b, and merge Col~'s roles with C,~eto's roles. 
This results in a concreted concept of the more specific 
type, with a's roles converted to roles of the new type. 
? If  Cold is a V IEW of C . . . . .  proceed as i fC  ..... were a 
subcategory of Cold, except use ROLE-PLAYs  from the 
VIEW. 
This is the metaphor application process: The result of 
concretion is a new concept of the type of b, but the roles 
must be filled according to tile same VIEW that produced 
b. 
? i f  a role at any ~tagc is filled by two different tokens, fail. 
Concretion does not allow conflict in the filling of ROLE- 
PLAYs. if a VIEW results in the application of a ROLE- 
PLAY that potentially fills more than one role, conflict 
may be avoided. For example, in "All gave a punch to the 
jaw to t'h'azier", the two "to" phrases are allowed, but are 
automatically excluded from describing the: same concep- 
tual role. 
I f  concretion results in the farther specification of a VIEW, 
re-apply the VIEW. 
This is another bookkeeping process. If a concept has 
already been concreted by a VIEW and then is further 
specified by concretion, the same VIEW is automatically 
applied. Thus, if a transfer-event is interpreted uring 
concretion to produce an execute-operation a d the object 
role of the transfer-event is later filled, the input role of 
the execute-operation is also filled. 
? I f  concretion results in violating a constraint, undo all con- 
cretions dependent on the concreted concept. 
Since concet)ts that have already been concreted can con- 
tinue to have their roles filled by concretion, it is possi- 
ble that a violated constraint may eliminate many specific 
interpretations. These interpretations are treated as as- 
sumptions dependent on other concretions; thus keeping 
track of tile dependencies allows assumed interpretations 
to be easily terminated based on new information. 
Sunrmary:  Produce the most specific conceptual interpre- 
tation of the input, with the appropriate roles filled, taking care 
to avoid conflicting interpretations. 
Many complex data structures and implementation issues 
are involved in the details of the above process. However, this 
presentation should suffice to describe how concepts are re- 
fined during semantic interpretation by applying conceptual 
and metaphorical knowledge. 
4 Summary and Conc lus ion  
Even within a specialized omain, a semantic interpreter must 
produce a meaning representation that is more specific than is 
necessarily implied by the linguistic input. This means that 
the underst,'mding program must choose among a broad range 
of potentiM word senses, making it impractical to treat each as 
completely distinct. A better method is to make assumptions 
about the meaning of the input and proceed with processing 
fl'om these assumptions. A major problem for the system is 
to select assumptions that m'e suggested by the input and to 
correct hese assumptions elegantly in the event of conflicting 
information. 
CONCRETION is the assumption-based part of semantic 
interpretation. The concretion mechanism described here se- 
lects the most specific oncept riggered by the input, fills out 
the roles of this concept based on a variety of linguistic and 
conceptual information, and keeps track of the assumptions 
273 
upon which the concept is dependent. If a contradiction is 
found, either in filling out the roles or in later stages of ma- 
derstanding, the system is able to use these dependencies to
correeL the interpretation without excessive processing. This 
assmnption-based model Mlows processing of speeia.lized inter- 
prorations while permitting easy correction of assumptions that 
prove invalid. 
i~,eferences 
\[Bobrow mM Webber, 19801 R. Bobrow and B. Webber. 
Knowledge represerttation for syn~,aetic/scmm~tic process- 
int. In Proceedings of the National Conference on Artifi- 
cial l}~telligence, Palo Alto, California, 1980. 
\[DeKleer, 1986\] J. DeKleer. An assumption-based truth main- 
tenance system. Artificial Intelligence, 28(1), 1986. 
\[Doyle, 1979\] J. Doyle. A truth mailltenailee system. Artificial 
Intelligence , 12(3), 1979. 
\[Gawron et al, \]982\] J. M. Gawron, J. King, J. Laraping, E. 
Loebner, A. Paulson, G. Pullum, I. Sag, mM T. Wa- 
sow, The GPSG linguistics ystem. In Proeeeding~ of 
the 20th Annual Meeting of the Association for Computa- 
tional Lingui,~tics, Toronto, Ontario, 1982. 
\[Hirst, 1987\] G. Hirst. Semantic Interpretation and the Reso- 
lution of Ambiguity. Cambridge University Press, Cam- 
bridge, Englmld, 1987. 
\[Jaeobs, 1986a\] Paul S. Jacobs. Knowledge structures for nat. 
nral languar;e generation. In Proceedings of the .Eleventh 
International Conference on Computational Linguistics, 
Bonn, Germany, 1986. 
\[Jacobs, 1986b\] Paul S. Jacobs. Language anMysis in not-so- 
limited domains. In Proceedings of the Fall Joint Com- 
puter Conference, Dallas, Texas, 1986. 
\[Jaeobs, 1987\] Paul S. Jacobs. A knowledge framework for 
natural anguage analysis. In Proceedings of the Tenth 
Nternational Joint Conference on Artificial Intelligence, 
Milan, Italy, 1987. 
\[Jacobs and Ran, 1.985\] Paul S. Jacobs and Lisa F. Ram Ate: 
associating language with meaning. In Tim O'Shea, ed- 
itor, Advances in Artificial Intelligence, pages 295-304, 
North Holland, Amsterdam, 1985. 
\[Lytinen, 1984\] Steven Lytinen. The Organization of Knowlo 
edge in a Multi..lingual, l~ttcgrated Parser. PhD thesis, 
Yale University, 1984. 
\[Norvig, 1983\] P. Norvig. Six problems for story under- 
standers. In Proceedings of the National Conference on 
Artificial Intelligence, Washington, D. C., 1983. 
\[Norvig, 1986\] P. Norvig. A Unified Theory of Inference for 
Text Understanding. PhD thesis, University of California, 
Berkeley, Berkeley, CA, 1986. Computer Science Division 
Report UCB/CSD 87/339. 
\[Pereira nd Shieber, 1.984\] F. Pereira nd S. M. Shieber. The 
semantics of grammar formalisms een as computer lan- 
guages. In Proceedings of the Tenth international Confer- 
enee on Computational Linguistics, PMo Alto, California, 
1984. 
\[Pereira nd Warren, 1980\] F. Pereira and D. H. D. Warren. 
Definite Clause Grmnmars for language analysis--a sur- 
vey of the formalism and a comparison with mlgmented 
transition etworks. Artificial Intelligence, 13, 1980. 
\[Sondheimer t al., 1984\] N. Sondheimer, R. Weischedel, ai~d 
R. Bobrow. Semantic interpretation using KL--ONE. In 
Proceedings of the Tenth .(nter'aational Co.r~fe.renee on
Computational Linguistics, Palo Alto, 1984. 
\[Wilensky, 1983\] R. Wilensky. Memory and inference, h~ Pro? 
eeedings of the Eighth International Joint Conference on 
Artificial Intelligence, Karls,~ahe, Germany, 1983. 
\[Wilensky, 1984\] R. Wilensky. KODIAK - a knowledge rep- 
resentation language. In Proceedings of the Sixth Annual 
Conference of the Cognitive Science Soeiety~ Bonlder, C(4- 
ora~to, 1984. 
\[Zernik and Brown, 1988\] U. Zernik and A. Brown. Def~mll; 
reasoning in natural langnage processing. In Proeecdings 
of the Twelfth International Con\]erenee on Computational 
Linguistics, Budapest, Hungary, 1988. 
274 
