JACQUES COURTIN 
UN ANALYSEUR SYNTAXIQUE INTERACTIF POUR LA 
COMMUNICATION HOMME-MACHINE 
Nous envisageons la r&lisation d'un syst~me de communication 
Homme-Machine n langues naturelles, qui pourrait 8tre utilis6 par 
exemple pour l'dtude de la langue elle-mSme ou pour la rdalisation d'un 
syst~me questions-r~ponses ttr un sujet d~termind (consultation d'tme 
banque de donn~es et r6ponses approprides). 
Avant d'en arriver ~t la rdalisation du module s~mantique, il faut se 
d~finir un module d'analyse morphologique et un module d'analyse 
syntaxique. N~anmoins, nous pensons que la sdmantique dolt pouvoir 
intervenir le plus rapidement possible afin de lever les ambiguit~s ren- 
contr~es au niveau du module pr~cddent. 
Dans cet exposd, nous nous limiterons ~ l'&ude des deux premiers 
modules. 
D~s ~t present, nous pr6cisons que nous nous sommes orient,s vers 
des syst~mes interactifs afin d'dtablir un vdritable dialogue entre l'uti- 
lisateur et la machine. 
Pour l'analyse morphologique, nous ne nous smnmes pas limitds uni- 
quement fi la reconnaissance dumot mais dgalement ~tcelle des lo cutions 
non ambigues afin d'dviter leurs reconstructions auniveau de la syntaxe. 
Ce premier module constitue k lui seul un v&itable syst~me puis- 
que nous avons d6fmi un dditeur morphologique conversationnel dont 
les grandes lignes seront explicit~es en 1. 
Quant ~t l'analyseur syntaxique, nous nous sommes fixds comme ob- 
jectif d'obtenir directement des structures de dSpendances car elles 
sont facilment interpr~tables. Nous avons donc abandonn~ les structures 
de constituants obtenues ~t partir des grammaires << context-free ~ pour 
les raisons suivantes: 
les algorithmes d'analyse avaient l'inconv~nient majeur de con- 
duire k une tr~s grande combinatoire. On pouvait certes la limiter en 
introduisant des << validations-saturations )) qui avaient le d~savantage 
de demander au linguiste de d~finir le cheminement de l'algorithme 
au niveau de la grammaire. I1 en rdsultait une tr~s grande difficultd 
de mise au point. 
184 JACQUES COURTIN 
D'autre part, cette d6marche nous semblait peu naturelle t nd- 
cessitait ensuite l'6criture d'un module suppl~mentaire p rmettant d'ob- 
tenir des structures plus facilement interpr6tables que les structures de 
constituants. 
Nous avons 6galement 6cart6 les algorithmes ddfinis k partir d'une 
grammaire de d6pendances du fair m~me qu'elle ndcessite un nombre 
important de r~gles car it taut expliciter toutes les configurations pos- 
sibles de d6pendants sous un gouverneur donn6. 
Le choix que nous avons fait a 6t6 d'accepter comme donn6es des 
structures de d6pendances. Cette strat6gie, qui sera ddfinie en 2, conduit 
naturellement k un syst~me d'apprentissage. L'algorithme n'acceptant 
que des relations entre les cat6gories, il fera appel ~t une grammaire 
context-free pour valider une sous-structure t rminale en vdrifiant les 
accords entre les variables. I1 est ~t noter que l'6criture de cette grammaire 
sera extr~mement simplifi6e 6tant donn6 qu'il suftit de pr6ciser tmique- 
ment les conditions de r4dcriture des variables grammaticales ntre les 
catdgories. 
Cette ddmarche nous semble beaucoup lus naturelle. Nous pr6ci- 
sons d~s maintenant que pour des facilit6s de r6alisation ous ne traite- 
rons que des structures de ddpendances projectives. 
Nous pouvons r6sumer le projet par le sch6ma ci-dessous: 
\] superviseur \]. 
/ f  ~o:\\% 
I ~diteur mot- \] 
. phologique 
\]diction- L ~grammaire ~1 analyseur I 
I ,~iro i'~lmoa~los rqmo~pholomuo I 
t .. . t 
"~,.ly,ou, ao L-- J"  , ,~s, , ,  1 d~pendances~' \ [  s~mantique \] 
- 
\[ grammaire \] 
context-free \] 
UN ANALYSEUR SYNTAXIQUE INTERACTIP 185 
1. EDITEUR MORPHOLOGIQUE CONVERSATIONNEL 
Cet ~diteur s'adresse ~ deux categories d'utilisateurs: 
- -  le sp6cialiste qui est charg~ de la r~alisation du systbme morpho- 
logique du point de vue linguistique, 
le non sp6cialiste qui d6sire faire de l'analyse morphologique 
sans ~tre oblig~ de connaltre le fonctionnement du syst~me. 
1.1. Les outils mis ~ la disposition du spddaliste. 
- -  L'analyse morphologique est r6alis4e ~t l'aide d'une grammaire 
d'dtats finis munie de validations et de saturations qui permet non seule- 
ment de reconnaltre un mot de la langue mais 4galement de r&liser 
en parallSle une transduction des variables. 
- -  Du point de vue morphologique, chaque mot peut 8tre rangd 
dans une classe ayant un certain comportement linguistique. Par exem- 
ple, en franqais les verbes du premier groupe: aimer, chanter, diviser, 
etc ..... admettent la mSme conjugaison. On a donc choisi arbitraire- 
merit un mot de la classe afin de pouvoir, au moment de l'indexage, 
faire rdfdrence ~. ce mot. C'est ce que nous avons appel4 un module. 
Par exemple, si on choisit la base chant comme modhle, dans le diction- 
naire il suffira de dire que les bases DIVIS, AIM, etc ... se comportent 
comme CHANT du point de vue de la conjugaison verbale. 
- -  Nous avons donc mis k la disposition du linguiste un petit lan- 
gage extrSmement simple qui lui permettra d'6crire les r6gles de gram- 
maire et les modhles. La mise au point se faisant ~ l'aide d'un terminal 
par l'interm~diaire du systhme CP/CMS de l'universit4 de Grenoble, 
l'utilisateur peut donc ~. tout moment modifier les rhgles et les mod61es 
qui sont ensuite compil4s en vue du traitement morphologique. 
- -  Quant au dictionnaire, il est important de noter: 
a) qu'il est organisd par ordre alphab4tique et en fonction de la 
fr~quence des mots. 
b) Qu'&ant donn6 que l'on d~sire obtenir tousles d~coupages 
possibles, on a utilis4, pour l'identification, la technique du Iongestmatch; 
c'est-k-dire que l'on cherche la plus longue superposition possible en- 
tre l'occurrence t un ~ldment du dictionnaire; une fois trouvde, on 
recherche tm 418ment plus court quc cette dernihre et ainsi de suite. 
Nous avons donc organis4 le dictionnaire de telle sorte qu'ayant trouv4 
186 JACQUES COIYRTIN 
la plus longue superposition possible, on obtienne <~ presque gratuite- 
ment ~ les ~ldments qui sont plus courts. 
c) qu'6tant donn6 que l'on d6sire analyser des formes completes 
telles que: c)gauche de, c) droite de, etc .... , le blanc ne sera plus consid6r6 
comme un s6parateur. 
1.2. Les outils mis ~ la disposition du non sp3cialiste et du sp3cialiste. 
Nous avons voulu donner k l'utilisateur, en cours d'ex6cution d'ana- 
lyse morphologique, la possibilit6: 
- -  de corriger un mot real orthographi6. 
- -  d'interroger le dictionnaire; 
- -d ' indexer  automatiquement, sans &re oblig6 de connaltre les 
modbles, gr,~ce k un syst~me d'6quivalence; 
de donner une dquivalence morphologique sans pour cela ~tre 
oblig6 d'introduire le mot dans le dictionnaire (cette option est parti- 
culi~rement int6ressante pour les noms propres, noms de villes, les 
mots rares, etc ...); 
de faire du pas k pas et ainsi pouvoir v6rifier les rdsultats apr~s 
chaque mot. 
Nous avons 6numdr6 ici les fonctions principales de cet 6diteur, 6tant 
bien entendu que routes ces possibilit6s ont offertes k l'utilisateur en 
cours d'ex6cution et qu'elles ne remettent pas en cause la pattie du texte 
d6j~t analys6e. 
2. ANALYSE SYNTAXIQUE 
Pour r&liser cette analyse, nous nous sommes servis de la notion 
de poids qui avait 6t6 introduite dans le syst~me de traduction automa- 
tique du C.~.T.A. pour effectuer la g6ndration du fran~ais. 
Nous rappelons ici la d6finition du poids. 
Poids. A chaque sommet de la structure de d6pendances, on va affecter 
un poids. Les poids n6gatifs correspondront aux mots plac6s k gauche 
du gouvemeur, et les poids positifs ~. ceux placds k droite, le gouver- 
neur ayant un poids z6ro par rapport ~t ses d6pendants. 
D'autre part, il est 6galement important de noter clue le poids est 
en m~me temps caract6ristique d'une fonction syntaxique. 
ON ANALYSEUR SYNTAXIQUE INTERACTIF 187 
Nous avons ~galement ajout6 une cat~gorie syntaxique appel6e 
phrase qui est telle que tousles gouverneurs d'tme phrase auront un 
poids -t- 1 par rapport ~t cette catdgorie. 
Exemple" 
phrase \ 
cble'ff" + 1 sou, pe 
60 
noir la 
- 16  - 14  - 14  q -  14  - 16  
Nous allons done demander ~t l'utilisateur de d6crire la langue en 
fournissant au syst~me des relations de d@endances munies de poids. 
Nous nous sommes done d6finis un tableau ~ trois dimensions A (n,n,p) 
o?.1 nest le hombre de cat6gories, et p le hombre maximum de rela- 
tions diffdrentes entre deux cat6gories. 
~ Exemple: si pour la phrase le petit chien noir mange la soupe, le lin- 
guiste nous a fourni la structure suivante: 
c~e~ (substantif) "so~tpe (substantif) /60 
&"(article) p~'t (adjcctif) hoir (adjectif) la (article) 
- 16  - 14  + ~4 - ~6 
188 
le tableau aura la forme suivante: 
JACQUES COURTIN 
gouvemeur 
d6pendant 
phrase 
verbe 
substantif 
article 
adjectif 
phrase verbe substantif 
50 
+ 60 
16 
14 
+ 14 
l article adjectif 
Nous donnons maintenant les points principaux de l'analyseur en 
terminant par un exemple qui permettra de d6terminer la philosophie 
de la m6thode. 
Soit une phrase X1 X2 ............. X.  oh Xi est une cat~gorie syn- 
taxique. 
On extrait du tableau pr~c6dent A les informations propres ~t cette 
phrase. 
phrase 
x~ 
X~ 
t 
I 
t 
t 
t 
I 
I 
t 
X. 
phrase 
0 
i - -  
1 
I - -  
- -  
i 1 
Xl  ,-- X i  _ 
f 
0 I Pta 
Pnl l Phi 
. . . . . . . . . . . . .  x . I  
P~n 
P/j: ensemble des poids entre le d6pendant X~ et le gouverneur X~. 
UN ANALYSEUR SYNTAXIQUE INTERACTIF 189 
Propridtds de ce tableau: 
b) i~tant donn~ que nous ne traitons que des structures de d~pen- 
dances projectives, nous avons les propri6t& suivantes: 
bl V?, V i, avec i > j, si l'ensemble Pis n'est pas vide, il ne peut ~tre 
constitu6 que de poids strictement positifs. 
b2 Vi, Vs, avec i < j, si l'ensemble Piy n'est pas vide, il ne peut 
&re constitu6 que de poids strictement ndgatifs. 
Le premier pas de l'algorithme consiste donc en la suppression des 
poids positifs ou des poids ndgatifs des ensembles Psi suivant que i < j 
ou i> j .  
Etude de plusieurs ddpendants ~ droite d'un gouverneur. 
Etant donn6 qu'il n'y a auctme relation entre les ddpendants ~droite 
et les d6pendants ~. gauche, nous nous posons le probl~me suivant: 
soit X s. un gouverneur, et X~I X~2 ........... X,, n d6pendants possibles de 
Xj avec 
Nous avons d'abord la solution 6vidente d'un seul d6pendant. On 
les prendra donc successivement les uns apr~s les autres pour savoir si 
l'on peut construire tree telle structure. 
Ensuite, il faudra examiner la possibilit6 de deux d6pendants, puis 
de trois, etc .... jusqu'~, n d6pendants. 
Nous allons donner maintenant l'algorithme qui permet de d6ter- 
miner si n d6pendants sent possibles. 
Soient Pili, Pi2s ........ P~,i l'ensemble des poids correspondant ~t 
x,.l x,3 ........ x,., 
pour obtenir ~ .~, .  il faut trouver un poids de l'ensemble 
x, ,  x,2 
190 JACQUES COURTIN 
Pat qui soit sup&ieur ou 6gal ~t un poids de Paj': soit Pi2kt ce poids. 
De m~me, pour que Xj existe, il faut trouver 
un poids de P~3t qui soit sup&ieur ou 6gal k Pakt, etc .... Nous avons 
donc d6fini l'algorithme suivant: 
soit Mitt l'41~ment minimum de Pilt 
Maj = MIN  (Pro/, Pa2t ........ Pa.i,t) P~,ktaPi,j 
Appelons M~2 j l'616ment de P~2j qui est tel que 
a) >I 
b) II n'existe pas d'dl6ments Pi2~FPiaj tels que: Mi2 t > Pi2~t >t Mat 
De m~me, on d6finit les 616ments Mi3t, Mia t ................. Mi,t: 
)VI41 j = MIN  (Pit,, Pi12t ........... Pi,,~iu) P~*kfiPiu Mikt >>" M~.it 
et il n'existe pas d'616ments P~kfiPiz j tels que: Mik;. >P?tks >I M~k.l~. 
avec 2 ~< k ~< n. On peut donc construire X;. 
x,, . . . . . . . . . . .  x , , ,  
si on a pu trouver les 616ments Mild, Mi2j ........... Mint. 
Pour les d@endants k gauche, il est facile de voir qu'on est amen6 
~t appliquer le mSme algorithme. 
Le principe de l'algorithme st donc le suivant: prendre un gouver- 
neur, &udier ses d@endants k gauche, construire toutes les structures 
possibles en allant toujours prendre des ddpendants ~ gauche et ceci 
r6cursivement, ensuite remonter en prenant des d@endants k droite 
jusqu'k obtenir toutes les solutions possibles. 
Exemple: 
soit la phrase: Ie pait ehien noir mange \[a soupe chaude. 
En fonction des relations tock6es en m6moire, on extrait le tableau 
associ6 k cette phrase: 
UN ANALYSEUR SYNTAXIQUE INTERACTIF 191 
petit 
- - I  
chien 
no l r  
mange 
la I 
i soupe 
chaude 
phrase phrase  l e 
le __  __  __0  
1 
petit chien 
- - \ [ - -  
I - -  14 0 p 
' +14 
I 
0 
- -  14 
+ 14 
- -16  
- -14  
+ 14 
noir 
0 
mange! la i 
~50 \[ 
+ 60 
- -  14 
+ 14 
0 
0 - -16  
- -  50 
+ 60 0 
- -  14 
+ 14 
I 
soupe ' chaude 
~616 - - - -  
- -  14 
+ 1 4  
0 
1) Enlever les poids n~gatifs en dessous de la diagonale puis les 
poids positifs au-dessus. On obtient: 
phrase i 
i . . . . . . .  
chien 
ho ly  
soupe 
! chaude i 
phrase 
0 
l e  
0 
petit 
0 
! chiel~ 
- -16  
I ? ?  
+14 
+ 14 
noir 
- - I  
0 
mange! la 
I 
- -50  i 
0 
0 
_+60 __  
soupe 
- -16  
- -14  
- -14  
- -16  
0 
+ 14 
chaude 
I . . . . . . . .  
i 
- - I  
i 
- - - -  
J 
0 
192 JACQUES COURTIN 
2) prendre le gouverneur mange et 6tudier ses d6pendants ~ gauche. 
On trouve chien. 
ch ien~ ange 
- 50  
- -  l~tudier les d6pendants k gauche de chien. 
Nous avons trois possibilit6s: le, petit, ou le petit. 
I1 n'y a que le couple le petit qui convienne 
ch ie?  nge 
- 16  - 14  
l~tude des d6pendants ~tdroite de chien: on trouve noir. 
inange 
lg petit 3wir 
A gauche de mange, c'est termin6: donc 6tude des d6pendants 
droite. 
- -  I1 est facile de voir que l'on obtient: 
ch'e o e 
le ._petit noir la~c  aude 
UN ANALYSEUR SYNTAXIQUE INTERACTIF 193 
Comme nous l'avions annoncE, nous pr&isons que l'analyse synta- 
xique a ErE scind6 en deux niveaux: 
1) Etude des relations entre les categories 
2) Etude des variables morphologiques. 
L'algorithme de dependances fair appel 5. une grammaire context-free 
pour verifier les variables chaque lois que l'on a dEterminE une sous- 
structure terminale ~ gauche ou 5. droite. Par exemple, &s que l'on 
a trouv6 chkn on fait appel h la context-free qui a pour but de , J  
v&ifier la concordance des variables. 
Nous venons de ddfinir les grandes lignes de l'analyseur de dEpen- 
dances. Ce programme est gdnEral et ind@endant des applications. 
Afin d'amEliorer l'efficacitd de l'algorithme, on peut d'ores et dEj~ se 
rendre compte qu'il sera intdressant de: 
d&erminer les categories qui ne sont jamais gouverneurs: article, 
adjectif, etc.., afin d'Eviter une recherche inutile de d@endants. 
- -DEterminer  une prioritd pour les gouvernettrs principaux de 
la phrase. Par exemple, quand il y a presence d'un verbe, exclure les 
substautifs (qui sont gouverneurs dans le cas d'un titre qui n'a pas de 
verbe). 
- -  Etc .... 
D'autre part, darts des cas trEs particuliers tels que la conjonction, 
il nous semble nEcessaire de determiner tm algorithme special qui se- 
rait ddclencM automatiquement par le programme principal. 
L'exp&ience n ce domaine sera notre meilleur guide. 
ANNEXII 1 
edits 
EXECUTION BEGINS ... 
EDITS 
Smorphologie texte stop nbavard 
(les poules du couvent couvent. 
LES 1 0 CL3 
LES 2 0 CL4 
"go 
AP.D 
POP 
FIM PLU MAS FEM 
FIM PLU ACC MAS FEM 
13 
194 
POULE 
S 
"go 
DU 
DU 
"go 
COUVENT 
COUV 
ENT 
ENT 
"go 
COUVENT 
COUV 
ENT 
ENT 
1%0 
0 0 RIB 
1 0E8 
JACQUES COURTIN 
SBC FEM 
SBC FIM PLU FEM 
"go 
< 
$dict 
EXTENSION DES CLASSES? (O/N) 
- oui 
> ?/couv/ 
/COUVENT/HOMME/ /CRAI/PEI! 
/COUV/AIM/ 
lCOUlCOU 
> ~/couve~q 
> ?lcouv/ 
ICO UV I AIMI ICRAIIPEII 
ICOUICOUI 
>'/couv/ 
> ?/couv/ 
ICOURSINEZ/ ICRAIIPEII 
ICOUP.ICOURI 
ICOUlCOUl 
> 
$morphologie t xte nstop nbavard 
<les poules du couvent couvent. 
DECOUPAGE PARTIEL 
"texte 
LES POULES DU COUVENT COUVENT. 
I 
"\[couvent/homme/ 
0 0 R.IB 
1 0E l  
0 0 P.IB 
2 0 PR.4 
3 0 SU1 
1 0 P.IB 
SBC MAS 
SBC FIM SIN MAS 
VRB 
VRB FIM TI~E PLU PR.E IND 
VkB FIM TR.E PLU PR.E SUB 
POC FIM PIP 
0 0 RIB SBC MAS 
1 0 E1 SBC FIM SIN MAS 
0 0 RIB VRB 
2 0 PR4 VR.B FIM TRE PLU PILE IND 
3 0 SU1 VI~B FIM TR.E PLU PRE SUB 
1 0 RIB APE FIM SIN MAS 
2 0 CL0 COT FIM SIN MAS 
UN ANALYSEUR SYNTAXIQUE INTERACTIF 195 
COUVENT 0 0 RIB SBC 
1 0 E1 SBC 
' 'indexer 
LA OU LES BASES ONT ETE INDEXEES 
COUVENT 00  RIB SBC 
10  E1 SBC 
"go 
COUVENT 0 0 RIB SBC 
1 0 E1 SBC 
" /couvent /a iment /  
COUV 0 0 RIB VRB 
ENT 1 0 PP.4 VRB 
ENT 2 0 SU1 VRB 
"indexer 
LA OU LES BASES ONT ETE 
COUVENT 0 
COUV 
ENT 
ENT 
"go nstop? 
<les poulent mangent. 
DECOUPAGE PARTIEL 
"bavard 
POULE 
P 
"ortho 
CMG potties noires 
CMG texte 
LES POULES NOIP, ES MANGENT. 
CMG go 
POULE 
S 
P 
"go nbavard 
NOIR. 0 0 RIB 
E 00E7 
S 1 0E8 
tfgo 
MANG 
ENT 
ENT 
"go 
. 1 0 RIB 
"go 
< 
INDEXEES 
0 BIB SBC 
1 0 E1 SBC 
0 0 RIB VRB 
2 0 PR4 VRB 
3 0 SU1 VRB 
0 0 RIB SBC FEM 
0 0 RIB VRB MAS 
0 0 RIB SBC 
1 0 E8 SBC 
0 0 RIB VP, B 
MAS 
FIM SIN MAS 
MAS 
FIM SIN MAS 
MAS 
FIM SIN MAS 
FIM TR.E PLU PR.E IND 
FIM TtkE PLU PIkE SUB 
MAS 
HM SIN MAS 
FIM TR.E PLU PIkE IND 
FIM TP, E PLU PIZE SUB 
FEM 
FIM PLU FEM 
MAS 
ADJ MAS 
ADJ FEM 
ADJ FIM PLU FEM 
0 0 RIB VRB 
1 0 PP,4 VRB 
2 0 SU1 VP, B 
FIM TRE PLU PRE IND 
FIM TB.E PLU PIkE SUB 
POC FIM PIP 
196 JACQUES eOUI~TIN 
AI'mEX.E 2 
print entree syntaxe 
LE(PRAR) PETIT(ADJQ) CHIEN(SUBC) NOIR(ADJQ) MANGE(VERB) 
LA(PRAR) SOUPE(SUBC) CHAUDE(ADJQ). 
LE(PRAR) PETIT(ADJQ) CHIEN(SUBC) JAUNE(ADJQ) ET(COCO) NOIR(ADJQ) 
BOIT(VERB) DE L'(DELA) EAU(SUBC) ET(COCO) MANGE(VERB) UN(ARTI) 
OS(SUBC) DE(DE) POULET(SUBC). 
LE(PRAR) CHIEN(SUBC) QUI(PRL) EST(ETRE)JAUNE(ADJQ) ET(COCO) 
NOIR(ADJQ) VEUT(VERB) ATTRAPER(INFI) L'(PRAR) OISEAU(SUBC) 
QUI(PRL) SE(PPLC) TROUVE(VERB} SUR(SUR) LA(PRAR) TRES(ADV) 
HAUTE(ADJQ) BRANCHE(SUBC) DU(DELA) CHENE(SUBC). 
LA(PRAR) MAISON(SUBC) SUR(SUR) LE(PRAR) TOIT(SUBC) DE LAQUELLE(GPRL) 
SE(PPLC) TROUVE(VERB) UN(ARTI) NID(SUBC) D'(DE) HIRONDELLES(SUBC) 
N'(NE) A(AVOI) PAS(PAS) DE(DE) CHEMINEE(SUBC). 
IL(PPLS) DIT(VERB) :(2.) PETIT(ADJQ) CHIEN(SUBC),(VIRG) 
VA(VER.B) DANS(DANS) TA(ADJP) NICHE(SUBC). 
LE(PRAR) PILOTE(SUBC, VERB) FERME(SVA, VERB) LA(PRAR) PORTE(SUBC, VERB). 
POUR(POUR) LES(PRAR) GRANDES(ADJQ) VACANCES(SUBC) ,(VIRG) PAPA(SUBC) 
A(AVOI) PROMIS(PPAS) UN(ARTI) PETIT(ADJQ) VELO(SUBC) An(A .) JEAN(SUBC). 
\[LE-(prar) 
IPETIT-(a4icD 
I 
ICHIEN-(subc) 
I I 
I INOIR-(adjq) 
I 
IMANGE-(verb) 
I 
I \[LA-(prar) 
I I 
ISOUPE-(subc) 
I 
ICHAUDE-(adjc3 
47,99 MILLISECONDES 
UN ANALYSEUR SYNTAXIQUE INTERACTIF 197 
{LE-(prar) 
I 
{PETIT-(adjq) 
t 
ICHIEN-(subc) 
I 
\] fJAUNE-(adjq) 
I I 
IET-(coco) 
I 
INOI1L-(adjq) 
lBOIT-(verb) 
l J 
I l \]DE L'- (dela) 
I I I 
J IEAU-(subc) 
J 
JET-(coco) 
P 
\[MANGE-(verb) 
I 
J IUN-(arti) 
I I 
IOS-(subc) 
I 
JDE-(de ) 
I 
\]POULET-(subc) 
353,65 MILLISECONDES 
198 JACQUES COURTIN 
I (LE-(prar) 
I 
\[CHIEN-(subc) 
I I \]QUI-(prl) 
I 
\]EST-(etrs) 
IET-(coco) 
IJAUNE-(adjq) 
I 
I 
INOIR-(adjq) 
IVEUT-(verb) 
I 
\[ATTRAPER (infi) 
I 
I \]L'-(prar) 
I I 
\[OISEAU-(subc) 
I 
I IQUI-(prl) 
I I 
I ISE-(pplc) 
t I 
\[TROUVE- (verb) 
I 
\[SUl~-(sur ) 
336,73 MILLISECONDES 
\[LA-(prar) 
I \[ \[TRES-(adv )
t I 
IHAUTE-(adjq) 
I 
BtLANCHE\] (subc) 
I 
IDU-(dela) 
I 
\[CHENE-(subc) 
UN ANAL?SEUR SYNTAXIQUE INTERACTIF 199 
\[LA-(prar) 
(subc) 
\[SUR-(sur ) 
I 
J ILE-(prar) 
I I 
ITOITo(subc) 
I 
IDE LAQUELLE (gprl) 
\[sv,-(pplc) 
I 
TROUVEo(verb) 
I 
\[ \[UN-(arti) 
I I 
\[NID-(subc) 
I 
\[D'-(de ) 
I 
IHIRONDELLES (subc) 
IN'- ae ) 
IA-(avoi) 
I 
\[PAS-(pas ) 
I 
\[De-(de ) 
I 
\[CHEMINEE (subc) 
235,40 MILLISECONDES 
200 JACQUES COURTIN 
IIL-(ppls) 
I 
IDIT-(verb) 
t 
I:-(2. ) 
I 
I IPETIT-(adjq) 
I I 
I iCHIEN-(subc) 
I,-(virg) 
I 
IVA-(verb) 
DANS-(dans) 
I 
I ITA-(adjp) 
I I 
INICHE-(subc) 
79,04 MILLISECONDES 
iLE-(prar) 
1 
IPILOTE-(subc) 
I 
\[FER.ME-(vcrb) 
i 
I ILA-(prar) 
I I 
\[POR.TE-(subc) 
\[LE--(prar) 
I 
IPILOTE-(subc) 
I I 
{ IFER.ME(-sva) 
I 
\]LA-(prar) 
I 
tPORTE-(verb) 
67,76 MILLISECONDES 
UN ANALYSEUR SYNTAXIQUE INTERACTIF 201 
IPOUR-(pour) 
ILES-(p~0 
I 
rGRANDES (adjq) 
I 
VACANCES (subc) 
I,-(virg) 
I 
t IPAVA-(subc) 
I I 
IA-(avoi) 
I 
\[PROMIS-(ppas) 
r 
J 
i 
i 
I 
\[VELO-(subc) 
t 
\[A~-(a 
\[UN-(arfi) 
I 
\[PETIT-(adjq) 
I 
) 
)JEAN-(subc) 
\[POUIL-(pour) 
I 
\[ \[LES-(prar) 
I 
\[ \[GRANDES (adjq) 
t I 
\[VACANCES (subc) 
\],-(virg) 
1 
\[ JPAPA-(subc) 
I I 
IA-(avoi) 
I 
JPR.OMIS-(ppas) 
r 
I 
f 
t 
164,13 MILLISECONDES 
IUN-(arti) 
I 
IPETIT-(adjq) 
WELO-(subc) 
l 
\]A'l-(a ) 
I 
\[JEAN-(subc) 
FILE: REGLES DEP 
A'a~INH: =16; 
An'.'PPLC: =32; 
An~SUBC: =32; 
ADJQ'~ADV: =-32; 
ADV'~ADV: =-32;  
AVEC'~COCO: =32; 
AVECoPPCS: =32; 
AVEC~SUBC: = 32; 
AVOI~A '~: =48; 
AVOI'~ADJQ: = 32; 
AVOI'~COCO: =-32, 32; 
AVOI'~DE: =32; 
AVOI'~NE: =-24; 
AVOI~PAS: = 16; 
AVOP~PPAS: =96; 
AVOI'~PPLS: =-32;  
AVOI'~SUBC: =-32, 32; 
AVOS'~A n.: =48 ;
AVOS'~ADJQ: = 32; 
AVOS'~COCO: =-32,32; 
AVOS'~DE: =32; 
AVOS~NE: =-24; 
AVOSoPAS: = 16; 
AVOSoPPAS: = 96; 
AVOSoPPLS: =-32;  
AVOSoPB.L: =-48;  
AVOSoSUBC: =-32,32; 
COCO~ADJQ: =-32,32; 
COCOoADV: =-32,32; 
COCOoAVOI:  =-32,32; 
COCO'~AVOS: =--32,32; 
COCO~DE: =-32,32; 
COCO'~ETt~E: =-32,32; 
COCO'~ETt~S: =-32,32; 
COCO'~INFI: =-32,32; 
COCO'~PAR.: =-32,32; 
COCO~SUBC: =-32,32; 
COCO~SVA: =-32,32; 
COCO~'VER_B: =-32,32; 
COCO'~VERS: =-32,32; 
DANS'~SUBC: = 32; 
DE~INFI: = 16; 
DE~SUBC: =32; 
DE'.'SVA: = 32; 
DELA','SUBC: =32; 
DVANoSUBC: = 32; 
EN~SUBC: =32; 
ETRE'~ADJQ: = 32; 
ETREaADV: = 16; 
ETRE~AVEC: =32,48; 
ETP,.EoCOCO: =-32,32; 
ETtLEoDANS: =32; 
ETR.EoDE: = 32; 
ETREoDVAN: = 32; 
ETR.E~NE: =-24;  
,~NNgXla 3 
P1 FILE: I~EGLES DEP 
ETR.EoPAS: = 16; 
ETR.E'~PPAS: =96; 
ETREoPPLC: =-8 ;  
ETP, EoPPLS: =-32;  
ETREoPI~DE: = 32; 
ETR.E'~SUBC: =-32,32; 
ETI:k.E'~ SUP,.: = 32,48; 
ETtLEoSVA: =-32;  
ETRSoADJQ: =32; 
ETtLS'~ADV: = 16; 
ETRS'~AVEC: =32,48; 
ETR.S~COCO: =-32,32; 
ETtLSoDANS: = 32; 
ETKS'~DE: =32; 
ETtLS'~DVAN: =32 
ETRSoNE: =-24;  
ETR.S'~PAS: = 16; 
ETRSoPPAS: =96; 
ETtLSoPPLC: =-8 ;  
ETRS'~PPLS: =-32;  
ETR.S'~PtkDE: =32; 
ETtkS'~P~L: =.--48; 
ETILS'~SUBC: =-32,32; 
ETP,.SoSUR: =-47,32,48; 
ETRSoSVA: =-32;  
ILYA~DAN: =-32,48; 
ILYAoPRDE: =-32; 
ILYA'~SUBC: =32; 
INFIoA -~: = 32; 
INFI'~ADV: = 16; 
INFI~AVEC: = 32,48; 
INFI'~DANS: =32,48; 
INFIoDE: =48; 
INFI'~DVAN: = 32; 
INFI'~INFI: = 16; 
INFI'~PI~DE: = 32; 
INFI'~SUBC: =32; 
IYAS'.'DANS: =32,48; 
IYAS'.'PR.DE: =-32;  
IYASoPI~L: =-48;  
IYAS'~SUBC: =32; 
IYAS~SUK: =-48; 
PARoSUBC: = 32; 
PHR,~AVOI: =32; 
PHR'~COCO: = 32; 
PHR~ETR\ ]~:  = 32; 
PHR.~ILYA: = 32; 
PHR.oSUBC: =32; 
PHP,.'.'VER.B: = 32; 
PHR.oVIR.G: = 32; 
POUR.'.'INFI: = I6; 
POUR.'~SUBC: =32; 
PPAS'~ADJQ: =16; 
PPAS'~A ": =32,48; 
PPAS~'ADV: =-16,16; 
P1 
FILE: REGLES DEP 
VERBo2.: =32; 
VERS'~A ~: = 32; 
VERS oADV: = 16; 
VERSoAVEC: =32,48; 
VERSoCOCO: =-32,32; 
VERS oDANS:--- 32,48; 
VERS oDE: = 32; 
VERS~DVAN: =32; 
VERSolNFI: =96 
VERS'~NE: =-24; 
VERSoPAS: = 16; 
VERS~POUR: = 32; 
VERS~PPCS: =-32; 
VERS'~PPLC: =-8; 
VERSoPPLS: =-32; 
VERS ~PRAER: =-16; 
VERS~'PRDE: =32; 
VERS~'PRL: ~-48; 
VERS~'SUBC: =-32,32; 
VERS~SUR: =-48,32,48; 
VERSo2.: =48; 
VIRG~AVEC: =-32 
VIRG~AVOI: =-32,32; 
VIRGoDANS: =-32; 
VIRG'~DVAN: =-32; 
VIRGoETRE: =-32,32; 
VIRGolLYA: =32; 
VIRG,.,POUR: =-32; 
VIRG~PRDE: =-32; 
VIRGoSUBC: =-32; 
VIRG~,VERB: =-32,32; 
2. oAVOI: = 32; 
2.oETRE: =32; 
2.oVERB: =32; 
2.oVIRG: =32; 
2.oVERS: =32; 
Pl FILE: REGLES DEP 
PPAS'~AVEC: = 32,48; 
PPAS~COCO: =32; 
PPAS,.,DANS: =48; 
PPASoDE: =48; 
PPAS'~DELA: = 47; 
PPAS'~INFI: = 96; 
PPAS'~PAR: =32; 
PPASoPRDE: =32,47; 
PPAS'~SUBC: =32; 
PPAS,~SUR: =32,48; 
PPAS'~SVA: =42; 
PRDEoPPCS: =32; 
PRDE,~PPLC: =32; 
PRDE~'SUBC: =32; 
SUBC~AT: =32; 
SUBC,~ADJP: =-32; 
SUBC'~ADJQ: =-16,16; 
SUBC,~ARTD: =-32; 
SUBC~,ARTI: =-32; 
SUBC~,AVOS: =32; 
SUBC~COCO: =32; 
SUBC~,DE: =32; 
SUBC~DELA: =-32,32; 
SUBC'~EN: =32; 
SUBC'~ETRS: =32; 
SUBC~GPRL: =96; 
SUBC,~IYAS: =32; 
SUBC'~PAR: =32,48; 
SUBC,.,POUR: =32; 
SUBC~PRAR: =-32; 
SUBC'~SVA: =-16,16; 
SUBC'~VERS: =32; 
SUR~SUBC: =32; 
SVAoADJP: =-16; 
SVAoARTD: =-32; 
SVAoARTI: =-32; 
SVAaPRAR: =-32; 
VERB oA n: = 32; 
VERB ~ADV: = 16; 
VERB'~AVEC: =32,48; 
VER_B~COCO: =-32,32; 
VERB~DANS: =32,48 ; 
VERB~DE: =32 
VERB~DVAN: =32; 
VER_B~INFI: =96 ;
VERB oNE: = -24; 
VERB ~PAS: = 16; 
VER-B~'POUR: =32; 
VERB~PPCS: =-32; 
VERB'*PPLC: =-8; 
VERB~PPLS: =-32; 
VERB~PRAR: =-16; 
VERB oPRDE: = 32; 
VER_B~SUBC: =32,32; 
VERB ~SUR: =32,48 ; 
PI 
BIBLIOGRAPHIE 
j. COURTIN, Organisation d'un dictionnaire 
pour l'analyse morphologique, I.I~..M.A., 
Grenoble, 1973. 
J. COURTm, J. L. P~I~U, P. SGAI~I~, Un md- 
talangage pour l'analyse morphologique, 
Document C.E.T.A., Grenoble, 1969. 
E. GRANDJEAN, Compilateur syntaxique; 
Programme d'analyse syntaxique)~, Do- 
cuments C.E.T.A., Grenoble. 
D. G. HAYS, Dependency theory: A for- 
malism and some observations, Memo- 
randum RM-4087-PR, The Rand 
Corporation, 1964.. 
G. Vm~roN, Consultation du dictionnaire 
et analyse morphologique en traduction 
automatique (th~se), Grenoble, 1962. 
G. Vmr~ON, ModUles et alorithmes pour 
la traduction automatique (th~se), Gre- 
noble, 1970. 
T. WINOgRAD, Procedures as a represen- 
tation for data in a computer program for 
understanding natural language (1971). 
