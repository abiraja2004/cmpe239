Automatic Extraction of English-Chinese Transliteration Pairs  
using Dynamic Window and Tokenizer 
Chengguo Jin 
Dept. of Graduate School for Information 
Technology, POSTECH, Korea 
chengguo@postech.ac.kr 
Dong-Il Kim 
Language Engineering Institute, YUST, 
China 
dongil@ybust.edu.cn 
Seung-Hoon Na 
Dept. of Computer Science & Engineering 
POSTECH, Korea 
nsh1979@postech.ac.kr 
Jong-Hyeok Lee 
Dept. of Computer Science & Engineering 
POSTECH, Korea  
jhlee@postech.ac.kr 
 
 
Abstract 
Recently, many studies have been focused 
on extracting transliteration pairs from bi-
lingual texts. Most of these studies are 
based on the statistical transliteration mod-
el. The paper discusses the limitations of 
previous approaches and proposes novel 
approaches called dynamic window and to-
kenizer to overcome these limitations. Ex-
perimental results show that the average 
rates of word and character precision are 
99.0% and 99.78%, respectively. 
1 Introduction 
Machine transliteration is a type of translation 
based on phonetic similarity between two lan-
guages. Chinese Named entities including foreign 
person names, location names and company names, 
etc are usually transliterated from foreign words. 
The main problem of transliteration resulted from 
complex relations between Chinese phonetic sym-
bols and characters. Usually, a foreign word can be 
transliterated into various Chinese words, and 
sometimes this will lead to transliteration complex-
ity.   In addition, dozens of Chinese characters cor-
respond to each pinyin which uses the Latin 
alphabet to represent sounds in Standard Mandarin. 
In order to solve these problems, Chinese 
government published the ?Names of the world's 
peoples?[12] containing 630,000 entries in 1993, 
which took about 40 years. However, some new 
foreign names still cannot be found in the diction-
ary. Constructing an unknown word dictionary is a 
difficult and time consuming job, so in this paper 
we propose a novel approach to automatically con-
struct the resource by efficiently extracting trans-
literation pairs from bilingual texts.  
Recently, much research has been conducted on 
machine transliteration. Machine transliteration is 
classified into two types. One is automatic genera-
tion of transliterated word from the source lan-
guage [6]; the other one is extracting transliteration 
pairs from bilingual texts [2]. Generally, the gen-
eration process performs worse than the extraction 
process. Especially in Chinese, people do not al-
ways transliterate foreign words only by sound but 
also consider the meanings. For example, the word 
?blog? is not transliterated into ???? ? (Bu-
LaoGe) which is phonetically equivalent to the 
source word, but transliterated into ????(BoKe) 
which means ?a lot of guests?. In this case, it is too 
difficult to automatically generate correct translit-
eration words.  Therefore, our approach is based on 
the method of extracting transliteration pairs from 
bilingual texts. 
The type of extraction of transliteration pairs can 
also be further divided into two types. One is ex-
tracting transliteration candidates from each lan-
guage respectively, and then comparing the pho-
netic similarities between those candidates of two 
languages [2, 8]. The other one is only extracting 
transliteration candidates from the source language, 
and using the candidates to extract corresponding 
transliteration words from the target language [1]. 
In Chinese, there is no space between two words 
and no special character set to represent foreign 
words such as Japanese; hence the candidate ex-
traction is difficult and usually results in a low pre-
cision. Therefore, the method presented in [2] 
which extracted transliteration candidates from 
9
Sixth SIGHAN Workshop on Chinese Language Processing
both English and Chinese result in a poor perform-
ance. Compared to other works, Lee[1] only ex-
tracts transliteration candidates from English, and 
finds equivalent Chinese transliteration words 
without extracting candidates from Chinese texts. 
The method works well, but the performance is 
required to be improved. In this paper we present a 
novel approaches to obtain a remarkable result in 
extracting transliteration word pairs from parallel 
texts.  
The remainder of the paper is organized as fol-
lows: Section 2 gives an overview of statistical 
machine transliteration and describes proposed 
approaches. Section 3 describes the experimental 
setup and a quantitative assessment of performance 
of our approaches. Conclusions and future work 
are presented in Section 4. 
 
2 Extraction of English-Chinese translit-
eration pairs 
In this paper, we first extract English named en-
tities from English-Chinese parallel texts, and se-
lect only those which are to be transliterated into 
Chinese. Next we extract Chinese transliteration 
words from corresponding Chinese texts. [Fig. 1] 
shows the entire process of extracting translitera-
tion word pairs from English-Chinese parallel texts. 
 
 
[Fig 1]. The process of extracting transliteration pairs from 
English-Chinese parallel corpus 
 
2.1 Statistical machine transliteration model 
  Generally, the Chinese Romanization system pin-
yin which is used to represent the pronunciation of 
each Chinese character is adopted in Chinese trans-
literation related studies. For example, the Chinese 
word ????? is first transformed to pinyin ?Ke 
Lin Dun?, and we compare the phonetic similarities 
between ?Clinton? and ?KeLinDun?. In this paper, 
we assume that E is written in English, while C is 
written in Chinese, and TU represents translitera-
tion units. So P(C|E), ??P( ? |Clinton) can be 
transformed to P(KeLinDun|Clinton). In this paper 
we define English TU as unigram, bigram, and tri-
gram; Chinese TU is pinyin initial, pinyin final and 
the entire pinyin. With these definitions we can 
further write the probability, ??P( ?|Clinton), as 
follows:  
(P ??? | Clinton ) ? )|( ClintonkelindunP   
 ?  )|()|()|()|()|( onunPdtPininPllPCkeP (1) 
 
 
[Fig 2]. TU alignment between English and Chinese pinyin 
 
[Fig 2] shows the possible alignment between Eng-
lish word ?Clinton? and Chinese word ??????s 
pinyin ?KeLinDun?.  
In [1], the authors add the match type informa-
tion in Eq. (1). The match type is defined with the 
lengths of TUs of two languages. For example, in 
the case of )|( CkeP the match type is 2-1, be-
cause the size of Chinese TU ke is 2 and the size 
of English TU C is 1. Match type is useful when 
estimating transliteration model?s parameters with-
out a pronunciation dictionary. In this paper, we 
use the EM algorithm to estimate transliteration 
model?s parameters without a pronunciation dic-
tionary, so we applied match type to our model. 
Add Match type(M) to Eq.(1) to formulate as fol-
lows: 
  
)|(),|(max)|( EMPEMCPECP
M
?  
    )(),|(max MPEMCP
M
?               (2) 
( )?
=
+?
N
i
iiiM
mPuvPECP
1
)(log)|((logmax)|(log  (3) 
 
10
Sixth SIGHAN Workshop on Chinese Language Processing
where u, v are English TU and Chinese TU, re-
spectively and m is the match type of u and v. 
 
[Fig 3]. The alignment of the English word and the Chinese 
sentence containing corresponding transliteration word 
 
[Fig 3] shows how to extract the correct Chinese 
transliteration ?? ??(KeLinDun) with the given 
English word ?Clinton? from a Chinese sentence.  
 
2.2 Proposed methods 
  When the statistical machine transliteration is 
used to extract transliteration pairs from a parallel 
text, the problems arise when there is more than 
one Chinese character sequence that is phonetically 
similar to the English word. In this paper we pro-
pose novel approaches called dynamic window and 
tokenizer to solve the problems effectively.  
 
2.2.1 Dynamic window method 
The dynamic window approach does not find the 
transliteration at once, but first sets the window 
size range according to the English word candi-
dates, and slides each window within the range to 
find the correct transliterations. 
 
[Fig 4]. Alignment result between English word ?Clinton? 
and correct Chinese transliteration, add a character into correct 
Chinese transliteration, and eliminate a character from correct 
Chinese transliteration. 
 
If we know the exact Chinese transliteration?s 
size, then we can efficiently extract Chinese trans-
literations by setting the window with the length of 
the actual Chinese transliteration word. For exam-
ple, in [Fig 4] we do alignment between the Eng-
lish word ?Clinton? and correct Chinese translit-
eration ?????(KeLinDun), add a character into 
correct Chinese transliteration ? ? ? ?
??(KeLinYiDun), and eliminate a character from 
correct Chinese transliteration ? ? ?(LinDun) 
respectively. The result shows that the highest 
score is the alignment with correct Chinese trans-
literation. This is because the alignment between 
the English word and the correct Chinese translit-
eration will lead to more alignments between Eng-
lish TUs and Chinese TUs, which will result in 
highest scores among alignment with other Chi-
nese sequences. This characteristic does not only 
exist between English and Chinese, but also exists 
between other language pairs. 
However, in most circumstances, we can hardly 
determine the correct Chinese transliteration?s 
length. Therefore, we analyze the distribution be-
tween English words and Chinese transliterations 
to predict the possible range of Chinese translitera-
tion?s length according to the English word. We 
11
Sixth SIGHAN Workshop on Chinese Language Processing
present the algorithm for the dynamic window ap-
proach as follows:  
Step 1: Set the range of Chinese transliteration?s 
length according to the extracted English word 
candidate.  
Step 2: Slide each window within the range to 
calculate the probability between an English word 
and a Chinese character sequence contained in the 
current window using Eq 3. 
Step 3: Select the Chinese character sequence 
with highest score and back-track the alignment 
result to extract the correct transliteration word. 
[Fig 5] shows the entire process of using the dy-
namic window approach to extract the correct 
transliteration word.  
 
English Word Ziegler 
Chinese Sentence ?? ? ??? ?? ?1963 ?? ??? 
English Sentence Ziegler and Italian Chemist Julio re-ceived the Nobel prize of 1963 together. 
Extracted translit-
eration without 
using dynamic 
window 
?? ? (JiaJuLiAo) 
Correct translitera-
tion ??  (QiGeLe) 
Steps 
1. Set Chinese transliteration?s range according to English 
word ?Ziegler? to [2, 7] (After analyzing the distribution be-
tween an English word and a Chinese transliteration word, we 
found that if the English word length is ?, then the Chinese 
transliteration word is between ?/3 and?.) 
2. Slide each window to find sequence with highest score. 
3 Select the Chinese character sequence with highest score and 
back-track the alignment result to extract a correct translitera-
tion word. 
Win-
dow 
size 
Chinese character sequence with high-
est score of each window (underline 
the back-tracking result) 
Score 
(normal-
ize with 
window 
size) 
2 ? (QiGe) -9.327 
3 ??  (QiGeLe) -6.290 
4 ?? ? (QiGeLeYu) -8.433 
5 ?? ?  (QiGeLeYuYi) -9.719 
6 ?? ??  (JiaJuLiAoGongTong) -10.458 
7 ?? ?  (QiGeLeYuYiDaLi) -10.721 
[Fig 5]. Extract the correct transliteration using the dynamic 
window method 
 
The dynamic window approach can effectively 
solve the problem shown in [Fig 5] which is the 
most common problem that arises from using sta-
tistical machine transliteration model to extract a 
transliteration from a Chinese sentence. However, 
it can not handle the case that a correct translitera-
tion with correct window size can not be extracted.   
Moreover, when the dynamic window approach is 
used, the processing time will increase severely. 
Hence, the following approach is presented to deal 
with the problem as well as to improve the per-
formance. 
 
2.2.2 Tokenizer method 
The tokenizer method is to divide a sentence 
with characters which have never been used in 
Chinese transliterations and applies the statistical 
transliteration model to each part to extract a cor-
rect transliteration.  
There are certain characters that are frequently 
used for transliterating foreign words, such as?
(shi)? (de)? (le)? (he) ??. On the other 
hand, there are other characters, such as ? (shi), 
(de)? (le)? (he),??, that have never been 
used for Chinese transliteration, while they are 
phonetically equivalent with the above characters. 
These characters are mainly particles, copulas and 
non-Chinese characters etc., and always come with 
named entities and sometimes also cause some 
problems. For example, when the English word 
?David? is transliterated into Chinese, the last pho-
neme is omitted and transliterated into ?
??(DaWei). In this case of a Chinese character 
such as ? ?(De) which is phonetically similar 
with the omitted syllable ?d?, the statistical translit-
eration model will incorrectly extract ? ?
?(DaWeiDe) as transliteration of ?David?. In [1], 
the authors deal with the problem through a post-
process using some linguistic rules. Lee and Chang 
[1] merely eliminate the characters which have 
never been used in Chinese transliteration such as 
? ?(De) from the results. Nevertheless, the ap-
proach cannot solve the problem shows in [Fig 6], 
because the copula ? ?(Shi) combines with the 
other character ? ?(zhe) to form the character 
sequence ? ?(ZheShi) which is phonetically 
similar with the English word ?Jacey?, and is in-
correctly recognized as a transliteration of ?Jacey?. 
Thus, in this case, although the copula ? ?(Shi) is 
12
Sixth SIGHAN Workshop on Chinese Language Processing
eliminated from the result through the post-process 
method presented in [1], the remaining part is not 
the correct transliteration. Compared with the 
method in [1], our tokenizer approach eliminates 
copula ? ?(Shi) at pre-processing time and then 
the phonetic similarity between ?Jacey? and the 
remaining part ? ?(Zhe) becomes very low; hence 
our approach overcomes the problem  prior to the 
entire process. In addition, the tokenizer approach 
also reduces the processing time dramatically due 
to separating a sentence into several parts. [Fig 6] 
shows the process of extracting a correct translit-
eration using the tokenizer method.  
 
English Word Jacey 
Chinese Sentence ? ? ?
? ? ? 
English Sentence The authors of this book are Peni-nah  Thomson and Jacey  Grahame. 
Incorrectly extracted 
transliteration (ZheShi) 
Correct transliteration ? (JieXi) 
Steps 
1. Separate the Chinese sentence with characters, ??, , , 
?? (including non-Chinese characters such as punctuation, 
number, English characters etc.), which have never been used 
in Chinese transliteration as follows: 
? ? ? ???? 
2. Apply statistical transliteration model to each part and se-
lect the part with highest score, and back-track the part to ex-
tract a correct transliteration.  
No. 
Chinese character sequence of 
each part (underline the back-
tracking result) 
Score 
(normalize with 
window size) 
1 ? (BenShu) -24.79 
2  (ZuoZhe) -15.83 
3 ?(PeiNiNaTangMuShen) -16.32 
4 ? ???? (JieXi) -10.29 
[Fig 6]. Extracting the correct transliteration using the to-
kenizer method. 
 
In conclusion, the two approaches complement 
each other; hence using them together will lead to 
a better performance. 
3  Experiments 
  In this section, we focus on the setup for the ex-
periments and a performance evaluation of the 
proposed approaches to extract transliteration word 
pairs from parallel corpora. 
3.1 Experimental setup 
We use 300 parallel English-Chinese sentences 
containing various person names, location names, 
company names etc. The corpus for training con-
sists of 860 pairs of English names and their Chi-
nese transliterations. The performance of translit-
eration pair extraction was evaluated based on pre-
cision and recall rates at the word and character 
levels. Since we consider exactly one proper name 
in the source language and one transliteration in 
the target language at a time, the word recall rates 
are the same as the word precision rates.  In order 
to demonstrate the effectiveness of our approaches, 
we perform the following experiments: firstly, only 
use STM(Statistical transliteration model) which is 
the baseline of our experiment; secondly, we apply 
the dynamic window and tokenizer method with 
STM respectively; thirdly, we apply these two 
methods together; at last, we perform experiment 
presented in [1] to compare with our methods. 
3.2 Evaluation of dynamic window and to-
kenizer methods 
 
  [table 1]. The experimental results of extracting 
transliteration pairs using proposed methods 
Methods Word  precision 
Character 
precision 
Character 
recall 
STM (baseline) 75.33% 86.65% 91.11% 
STM+DW 96.00% 98.51% 99.05% 
STM+TOK 78.66% 85.24% 86.94% 
STM+DW+TOK 99.00% 99.78% 99.72% 
STM+CW 98.00% 98.81% 98.69% 
STM+CW+TOK 99.00% 99.89% 99.61% 
 
As shown in table 1, the baseline STM achieves 
a word precision rate of 75%.  The STM works 
relatively well with short sentences, but as the 
length of sentences increases the performance sig-
nificantly decreases. The dynamic window ap-
proach overcomes the problem effectively. If the 
dynamic window method is applied with STM, the 
model will be tolerant with the length of sentences. 
The dynamic window approach improves the per-
formance of STM around 21%, and reaches the 
average word precision rate of 96% (STM+DW). 
In order to estimate the highest performance that 
the dynamic window approach can achieve, we 
apply the correct window size which can be ob-
tained from the evaluation data set with STM. The 
result (STM+CW) shows around 98% word preci-
13
Sixth SIGHAN Workshop on Chinese Language Processing
sion rate and about 23% improvement over the 
baseline. Therefore, dynamic window approach is 
remarkably efficient; it shows only 2% difference 
with theoretically highest performance.  However, 
the dynamic window approach increases the proc-
essing time too much.  
When using tokenizer method (STM+TOK), 
only about 3% is approved over the baseline. Al-
though the result is not considerably improved, it is 
extremely important that the problems that the dy-
namic window method cannot solve are managed 
to be solved. Thus, when using both dynamic win-
dow and tokenizer methods with STM (STM+ 
DW+TOK), it is found that around 3% improve-
ment is achieved over using only the dynamic win-
dow (STM+DW), as well as word precision rates 
of 99%.  
 
[table 2]. Processing time evaluation of proposed methods 
Methods Processing time 
STM (baseline) 5 sec (5751 milisec) 
STM+DW 2min 34sec (154893 milisec) 
STM+TOK 4sec (4574 milisec) 
STM+DW+TOK 32sec (32751 milisec) 
  
  Table 2 shows the evaluation of processing time 
of dynamic window and tokenizer methods. Using 
the dynamic window leads to 27 times more proc-
essing time than STM, while using the tokenizer 
method with the dynamic window method reduces 
the processing time around 5 times than the origi-
nal. Hence, we have achieved a higher precision as 
well as less processing time by combining these 
two methods.  
 
3.3 Comparing experiment 
  In order to compare with previous methods, we 
perform the experiment presented in [1]. Table 3 
shows using the post-processing method presented 
in [1] achieves around 87% of word precision rates, 
and about 12% improvement over the baseline. 
However, our methods are 11% superior to the 
method in [1].  
 
[Table 3] Comparing experiment with previous work 
4 Conclusions and future work 
  In this paper, we presented two novel approaches 
called dynamic window and tokenizer based on the 
statistical machine transliteration model. Our ap-
proaches achieved high precision without any post-
processing procedures. The dynamic window ap-
proach was based on a fundamental property, 
which more TUs aligned between correct translit-
eration pairs. Also, we reasonably estimated the 
range of correct transliteration?s length to extract 
transliteration pairs in high precision. The token-
izer method eliminated characters that have never 
been used in Chinese transliteration to separate a 
sentence into several parts. This resulted in a cer-
tain degree of improvement of precision and sig-
nificantly reduction of processing time.  These two 
methods are both based on common natures of all 
languages; thus our approaches can be readily port 
to other language pairs.  
In this paper, we only considered the English 
words that are to be transliterated into Chinese. 
Our work is ongoing, and in near future, we will 
extend our works to extract transliteration pairs 
from large scale comparable corpora. In compara-
ble corpora, there are many uncertainties, for ex-
ample, the extracted English word may be not 
transliterated into Chinese or there may be no cor-
rect transliteration in Chinese texts. However, with 
large comparable corpora, a word will appear sev-
eral times, and we can use the frequency or entropy 
information to extract correct transliteration pairs 
based on the proposed   perfect algorithm. 
 
Acknowledgement 
This work was supported by the Korea Science and Engineer-
ing Foundation (KOSEF) through the Advanced Information 
Technology Research Center (AITrc), also in part by the BK 
21 Project and MIC & IITA through IT Leading R&D Support 
Project in 2007. 
 
Reference 
 [1] C.-J. Lee, J.S. Chang, J.-S.R. Jang, Extraction of translit-
eration pairs from parallel corpora using a statistical translit-
eration model, in: Information Sciences 176, 67-90 (2006) 
[2] Richard Sproat, Tao Tao, ChengXiang Zhai, Named Entity 
Transliteration with Comparable Corpora, in: Proceedings of 
the 21st International Conference on Computational Linguis-
tics. (2006) 
[3] J.S. Lee and K.S. Choi, "English to Korean statistical 
transliteration for information retrieval," International Journal 
of Computer Processing of Oriental Languages, pp.17?37, 
(1998). 
Methods Word  Precision 
Character 
Precision 
Character 
Recall 
STM (baseline) 75.33% 86.65% 91.11% 
STM+DW+TOK 99.00% 99.78% 99.72% 
STM+[1]?s 
method 87.99% 90.17% 91.11% 
14
Sixth SIGHAN Workshop on Chinese Language Processing
[4] K. Knight, J. Graehl, Machine transliteration, Computa-
tional Linguistics 24 (4), 599?612, (1998). 
[5] W.-H. Lin, H.-H. Chen, Backward transliteration by learn-
ing phonetic similarity, in: CoNLL-2002, Sixth Conference on 
Natural Language Learning, Taipei, Taiwan, (2002). 
[6] J.-H. Oh, K.-S. Choi, An English?Korean transliteration 
model using pronunciation and contextual rules, in: Proceed-
ings of the 19th International Conference on Computational 
Linguistics (COLING), Taipei, Taiwan, pp. 758?764, (2002). 
[7] C.-J. Lee, J.S. Chang, J.-S.R. Jang, A statistical approach 
to Chinese-to-English Backtransliteration, in: Proceedings of 
the 17th Pacific Asia Conference on Language, Information, 
and Computation (PACLIC), Singapore, pp. 310?318, (2003). 
[8] Jong-Hoon Oh, Sun-Mee Bae, Key-Sun Choi, An Algo-
rithm for extracting English-Korean Transliteration pairs using 
Automatic E-K Transliteration In Proceedings of Korean In-
formation Science Socieity (Spring). (In Korean), (2004). 
[9] Jong-Hoon Oh, Jin-Xia Huang, Key-Sun Choi, An Align-
ment Model for Extracting English-Korean Translations of 
Term Constituents, Journal of Korean Information Science 
Society, SA, 32(4), (2005) 
[10] Chun-Jen Lee, Jason S. Chang, Jyh-Shing Roger Jang: 
Alignment of bilingual named entities in parallel corpora us-
ing statistical models and multiple knowledge sources. ACM 
Trans. Asian Lang. Inf. Process. 5(2): 121-145 (2006) 
[11] Lee, C. J. and Chang, J. S., Acquisition of English-
Chinese Transliterated Word Pairs from Parallel-Aligned 
Texts Using a Statistical Machine Transliteration Model, In. 
Proceedings of HLT-NAACL, Edmonton, Canada, pp. 96-103, 
(2003). 
[12] Xinhua Agency, Names of the world's peoples: a com-
prehensive dictionary of names in Roman-Chinese ( ?
? ? ), (1993) 
15
Sixth SIGHAN Workshop on Chinese Language Processing
