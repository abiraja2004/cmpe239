Proceedings of the 8th International Conference on Computational Semantics, pages 320?325,
Tilburg, January 2009. c?2009 International Conference on Computational Semantics
Well-formed Default Unification in
Non-deterministic Multiple Inheritance Hierarchies
Christian Schulz, Jan Alexandersson and Tilman Becker
DFKI, Saarbru?cken
1 Introduction
Default unification represents a fundamental extension of the common uni-
fication operation, where even in case of inconsistency between the infor-
mation to be merged, there will always be a result. As default unification
is no longer a commutative operation, a distinction is made between the
argument containing default information, the background, and the other ar-
gument consisting of non-default information, the cover.
An elegant point of departure to formalizing default unification has been
delivered by Carpenter?s credulous default unification (CDU) (Carpenter,
1993):
F
<
?
c
G = {F ? G
?
| G
?
? G is maximal such that F ? G
?
is defined}
Unlike previous strategies to replace conflicting parts by the non-default
information (Shieber, 1986; Kaplan, 1987; Bouma, 1990), Carpenter sug-
gests in case of clashes to relax the specificity in the defeasible part to
achieve consistency with the non-default structure. Since the detection of
the generalized default might not be deterministic, multiple results may
arise.
[
Entertainment
beginTime
...
]
[
Broadcast
Channel
...
] [
Performance
Location
...
]
(1) User: I?d like to go to the movies
tonight.
(2) SmartKom: Here (?) are the
films showing in Heidelberg.
(3) User: No, there is nothing inter-
esting there,
(4) User: what is showing on TV?
Figure 1: An excerpt from the SmartKom ontology and the multi-modal interaction
of a dialog between the user and the system. ? denotes the pointing gesture by the
presentation agent.
320
A CDU formalization in (Alexandersson & Becker, 2007) is used in the
SmartKom system (Wahlster, 2006) on the basis of typed feature structures
(TFS) and CDU as the knowledge representation and inference mechanism,
in order to monitor the discourse processing, where the user?s input, the
cover, updates the internal dialogue state, the background, see figure 1.
The second crucial point of departure is how Alexandersson and Becker
understand to exploit the information inherent to an inheritance hierarchy
and henceforward to transfer Carpenter?s notion to a very effective and
sound way to specify CDU, which stands in contrast to the formalization by
(Grover, Brew, Manandhar, & Moens, 1994)
1
that suffers from theoretical
and computational drawbacks.
This Work (Schulz, 2007) develops an extension to the CDU operation
presented in (Alexandersson & Becker, 2007) for which the CDU algorithm
is adapted to deal with multiple inheritance type hierarchies omitting the
requirement to be bounded complete.
2 Efficient Computation of Well-formed Default
Unification
The core result of our work is a refinement of the characterization of CDU
as described in (Carpenter, 1993) along with a revision of the algorithm
presented in (Alexandersson & Becker, 2007). By identifying basic scenar-
ios, see figure 2, we have gained insights into the limitations of Carpenter
as described below and identified the resulting deficits of the algorithm in
Alexandersson and Becker. Crucial facets of our work include efficient lat-
tice operations, for the calculation of maximal lower bound (mlb) and min-
imal upper bound (mub). During CDU we suggest that the well-formedness
condition on TFS formulated in (Copestake, 1992) is met. The two-stage
procedural approach of the CDU mechanism is as the following:
1 Assimilation is a preprocessing step that first computes the target types for the
cover and background; the Type Preprocessing. Next, the cover and the background
will be translated to their appropriate target types by the operations Specialization
and Generalization respectively.
2 Overlay? performs type assignment by combining the information from the two
TFSs returned by the assimilation and monitors the recursive invocation of Assim-
ilation.
2
1
In Grover et al priority union is aimed to resolve parallelism dependent anaphora,
in particular verb phrase ellipsis with a resolution mechanism based on the linguistic
discourse model of (Pru?st, Scha, & Berg, 1994).
2
For a detailed description of Overlay? see (Alexandersson & Becker, 2007).
321
t5
t
co
t
1
t
2
t
8
t
6
t
7
t
bg
t
3
t
4
t
3
t
1
t
2
t
co
t
bg
t
3
Figure 2: A CDU scenario that is not entirely covered by Carpenter?s definition (left).
Determination of the required search space of all relevant type configurations (right).
A convenient concept is the definition of the type configuration, which
enables to describe the Type Preprocessing effectively:
Definition 1 Type Configuration
Given t
bg
, the type of the background and t
co
, the type of the cover; a type
configuration t
conf
, ?t
?
bg
, t
?
co
? is a pair of type identifiers where, t
?
bg
is the abstract
background type of t
bg
with ?
t
(t
?
bg
, t
co
) 6= ? and t
?
bg
? t
bg
; t
?
co
is the abstract cover
type of t
co
with t
?
co
? ?
t
(t
?
bg
, t
co
)
At this point we would like to express subsumption ordering between two type
configurations t
?
conf
= ?t
?
bg
, t
?
co
? and t
??
conf
= ?t
??
bg
, t
??
co
? as follows. We say t
?
conf
?
t
??
conf
, if t
?
bg
? t
??
bg
and t
?
co
? t
??
co
. Given some type t and ?(q
co
) = t
co
we additionally
propose a function, that returns the potential abstract background types located
in the next level of the hierarchy T (t) = {t
?
| t
?
? t with t
?
is maximal and
?
t
(t
?
, t
co
) 6= ?}.
The scenario in figure 2 (left) bears the type configuration ?t
2
, t
3
? which is
covered by Carpenter?s definition, since t
2
corresponds to the relaxed struc-
ture of the background which according to Carpenter should contain max-
imal information. However, ?t
5
, t
4
? encloses the valid abstract background
type t
5
that is more general than t
2
, which is caused by the non-deterministic
inheritance behaviour among background?s supertypes; ?
t
(t
5
, t
co
) yields a
non-empty set {t
7
, t
4
}. This example reveals the limits of Carpenter?s defi-
nition, that can be adjusted by the omission of the restriction on specificity
imposed on the generalized background structure:
Definition 2 Credulous Default Unification Revised
F
<
?
c
G = {F ? G
?
| G
?
? G such that F ? G
?
is defined and maximal}
The definition says that the result of CDU between F and G are rep-
resented by unifications between F and G
?
, that are defined, most specific
322
and G
?
subsumes G. For this purpose we motivate the task of Type Prepro-
cessing to identify all type configurations that are relevant for subsequent
procedures in CDU. The hierarchy in figure 2 (left) comprises the type con-
figurations {?t
2
, t
3
?, ?t
5
, t
4
?, ?t
5
, t
7
?}, though ?t
2
, t
3
? makes ?t
5
, t
7
? dispens-
able, since ?t
5
, t
7
? results into a TFS that subsumes the outcome stemming
from ?t
2
, t
3
?. Type Preprocessing sorts out redundant type configurations by
the subsumption check and prevents them to be input for the Specialization
and the Generalization process respectively.
The algorithm of Alexandersson and Becker narrows down the search for
abstract background types to the candidates that are situated exclusively on
the path between the background type and the least upper bound of cover
and background. The hierarchy in figure 2 (right), however, contains an
abstract background type that is not located on any path towards elements
of mub, i. e., it is justified to state that in addition to t
2
also the type t
1
is
an abstract background type. In order to capture all potentially valid type
configurations the search may only terminate if the currently visited type
subsumes a mub element.
Algorithm 1 Assimilation
Let co and bg be two TFS such that co = ?Q
co
, q
co
, ?
co
, ?
co
? and bg = ?Q
bg
, q
bg
, ?
bg
,
?
bg
?. Further we have t
bg
:= ?
bg
(q?
bg
) and t
co
:= ?
co
(q?
co
). The assimilation of co
and bg, A(bg, co) = ?, where ? is a set of tuples of bg
?
and co
?
such that:
(1) if t
bg
? t
co
then
bg
?
= bg, co
?
= co
?bg
?
, co
?
? ? ?
(2) if t
co
? t
bg
if ?(co,MGsat (t
bg
)) 6= ?
then
CO
?
= ?(co,MGsat(t
bg
))
bg
?
= bg
{bg
?
} ? CO
?
? ?
else
go to (3
?
) with T (t
bg
),
t
mub
= t
co
(3) else
for each t
mub
? ?
t
(t
bg
, t
co
)
go to (3
?
) with T (t
bg
)
(3
?
)
for each t
bg
?
? T (t) go to (3.1)
(3.1)
if t
?
bg
? t
mub
then exit
else
for each t
mlb
? ?
t
(t
?
bg
, t
co
)
go to (3.2)
(3.2)
if ?t
?
bg
, t
mlb
? 6? t
?
conf
? t
?
conf
,
with t
?
conf
= ??(q
bg
?
), ?(q
co
?
)?
and ?bg
?
, co
?
? ? ?
then go to (3.3)
else go to (3
?
) with T (t
?
bg
)
(3.3.)
if ?(co,MGsat(t
mlb
)) 6= ?
then
CO
?
= ?(co,MGsat(t
mlb
))
bg
?
= G(bg, t
?
bg
)
{bg
?
} ? CO
?
? ?
go to (3
?
) with T (t
?
bg
)
else go to (3
?
) with T (t
?
bg
)
Figure 3: Along the CDU procedure Overlay? recursively assimilates the structures of
the arguments one level deeper and combines the previously assimilated parts stemming
from background and cover resulting in an intermediate TFS.
323
During CDU well-formedness of TFS is guaranteed if exclusively Special-
ization is well-formed, where its operational foundation refers to the ternary
unification operation in (Copestake, 1992). In the algorithm specification 1
we present the Assimilation algorithm concerning multiple inheritance hier-
archies featuring non-determinism.
3 Conclusion and Future Work
We have motivated and demonstrated a formalism of CDU dealing with mul-
tiple inheritance hierarchies featuring non-determinism. Thereby we have
provided a reformulation of Carpenter?s definition and a precisely formalized
characterization of the algorithm extending the work in (Alexandersson &
Becker, 2007). The non-deterministic behaviour increases considerably the
degree of difficulty regarding lattice operations in order to identify all pos-
sible outcomes in CDU. To this end, we were able to boil down the efficient
implementation of CDU to an efficient realization of mlb and mub compu-
tation based on the detailed discussion in (Schulz, 2007).
In this work we have gained insights considering coreferences, though
we postpone the theoretical and practical elaboration as a goal for future
research. A crucial contribution in (Alexandersson, Becker, & Pfleger, 2004)
is the usage of a scoring function that computes the best hypothesis among
the multiple outcome of CDU. The notion of informational distance appears
to be a reasonable device to restrain the production of multiple results in
the current context as well.
References
Alexandersson, J., & Becker, T. (2007). Efficient Computation of Over-
lay for Multiple Inheritance Hierarchies in Discourse Modeling. In
H. Bunt & R. Muskens (Eds.), (Vol. 3, pp. 423?455). Dordrecht: Dor-
drecht:Kluwer.
Alexandersson, J., Becker, T., & Pfleger, N. (2004). Scoring for overlay
based on informational distance. In Proceedings of Konvens 2004 (pp.
1?4). Vienna, Austria.
Bouma, G. (1990, 6?9 June). Defaults in Unification Grammar. In Pro-
ceedings of the 28th annual meeting on Association for Computational
Linguistics (pp. 165?172). Morristown, NJ, USA: Association for Com-
putational Linguistics.
324
Carpenter, B. (1993). Skeptical and Credulous Default Unification with
Applications to Templates and Inheritance. In T. Briscoe, V. de Paiva,
& A. Copestake (Eds.), Inheritance, Defaults, and the Lexicon (pp.
13?37). Cambridge, CA: Cambridge University Press.
Copestake, A. (1992). The Representation of Lexical Semantic Information.
Doctoral dissertation, University of Sussex.
Grover, C., Brew, C., Manandhar, S., & Moens, M. (1994). Priority Union
and Generalization in Discourse Grammars. In 32nd. Annual Meeting
of the Association for Computational Linguistics (pp. 17 ? 24). Las
Cruces, NM: Association for Computational Linguistics.
Kaplan, R. M. (1987). Three Seductions of Computational Psycholinguis-
tics. In P. Whitelock, H. Somers, P. Bennett, R. Johnson, & M. M.
Wood (Eds.), Linguistic Theory and Computer Applications (pp. 149?
188). London: Academic Press.
Pru?st, H., Scha, R., & Berg, M. van den. (1994). Discourse Grammar
and Verb Phrase Anaphora. In Linguistics and Philosophy 17 (pp.
261?327). Amsterdam, Netherlands: Springer.
Schulz, C. H. (2007). Well-formed Default Unification in Multiple Inheri-
tance Hierarchies. Diploma thesis, Saarland University, Saarbru?cken,
Germany.
Shieber, S. M. (1986). A Simple Reconstruction of GPSG. In Proc. of the
11th COLING (pp. 211?215). Morristown, NJ, USA: Association for
Computational Linguistics.
Wahlster, W. (2006). Dialogue Systems Go Multimodal: The Smartkom Ex-
perience. In Smartkom - Foundations of Multimodal Dialogue Systems
(pp. 3?27). Heidelberg, Germany: Springer.
325
