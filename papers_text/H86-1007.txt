Out of the  Laboratory: 
A Case Study with the  IRUS Natural  Language Inter face I
by 
Ralph M. Weischedel, Edward Walker, Damaris Ayuso, Jos de Bruin, 
Kimberle Koile, Lance Ramshaw, Varda Shaked 
BBN Laboratories Inc. 
I0 Moulton St. 
Cambridge, MA 02238 
Abstract 
As part of DARPA's Strategic Computing Program, we have moved a large natural 
language system out of the laboratory. This involved: 
o Delivery of knowledge acquis i t ion  software to the Naval Ocean Systems 
Center  (NOSC) to build l inguist ic knowledge bases, such as d ic t ionary  ent r ies  
and case frames, 
o Demonstrat ion of the natura l  language in ter face  in a naval  dec is ion -mak ing  
sett ing,  and 
o Del ivery of the in ter face  software to Texas Instruments,  which has in tegrated  
it into the total  software package of the Strategic  Computing Fleet Command 
Center  Battle Management Program (FCCBMP). 
The resu l t ing  natura l  language in ter face  will be del ivered to the Pacif ic Fleet Command 
Center in Hawaii. 
This paper  is an overview of th is  ef fort  in technology t rans fer ,  indicat ing the 
techno logy  features  that  have made this possible and ref lect ing upon what the 
exper ience  i l lust rates  regard ing t ranspor tab i l i ty ,  techno logy status ,  and del ivery of 
natura l  language process ing outs ide of a laboratory  sett ing. The paper  will be most 
va luable to those engaged in applying s ta te -o f - the -ar t  techn iques  to del iver natura l  
language in ter faces  and to those  in teres ted  in developing the next  generat ion  of 
complete natura l  language in ter faces .  
1The work presented here was supported under DARPA contract ~NOOe14.-85-C--e616. The views 
and conclusions contained in th i s  document ore those of the authors and should not be 
~nterpreted  as necessar i ly  represent ing the o f f i c ia l  po l i c ies ,  e i ther  expressed or impl ied,  
of the Defense Advanced Research Pro jects  Agency or of the United States  Government. 
44 
1 Introduction 
DARPA's Strategic Computing Program in the application area of Navy Battle 
Management  has provided us several challenges and opportunities in natural language 
processing research and development. At the beginning of the effort, a set of 
domain- independent software components, developed through fundamental research 
efforts dating back as much as seven years, existed. The IRUS software \[1\] consists of 
two subsystems: one for linguistic processing and one for adding specifics of the back 
end. The first subsystem is linguistic in nature, while the second subsystem is not. 
Linguistic processing includes morphological, syntactic, semantic, and discourse 
analysis to generate a formula in logic corresponding to the meaning of an English 
input. The linguistic subsystem is application-independent and also independent of 
data base interfaces. (This is achieved by factoring all application specifics into the 
back end processor or into knowledge bases such as dictionary entries and case frame 
rules, that are domain-specific.) The non-linguistic components convert the logical 
form to the code necessary for a given underlying system, such as a relational data 
base. 
The IRUS system,  or  i ts components ,  had  been  used  extens ive ly  in the  laboratory ,  
not  jus t  at  BBN, but  also in research  pro jec ts  at USC/ In fo rmat ion  Sc iences  Ins t i tu te ,  
the  Un ivers i ty  of Delaware,  GTE Research ,  and Genera l  Motors  Research .  However,  it 
had  not  been  exerc i sed  thorough ly  outs ide  of a research  env i ronment .  
Our goa ls  in par t i c ipat ing  in the  S t ra teg ic  Comput ing Program are  manifold:  
o To tes t  the  co l lec t ion  of s ta te -o f - the -ar t  heur i s t i cs  for  natura l  l anguage 
process ing  with a user  communi ty  t ry ing  to solve the i r  p rob lems on a daffy 
bas is .  
o To tes t  the  heur i s t i cs  on a broad ,  extens ive  domain.  
o To incorporate  research  ideas  (which are  o f ten  deve loped  in re la t ive  
i so la t ion  in the  laboratory )  in to  a complete  sys tem so that  ef fect ive 
eva luat ion  and re f inement  can  occur .  
o To cont inue  the feedback  loop of incorporat ing  new research  ideas,  tes t ing  
them in a complete  sys tem with rea l  users ,  eva luat ing  the  resu l t s ,  and  
re f in ing  the  research  accord ing ly  on a repeated  bas is  for  severa l  years .  
There  are  severa l  accompl i shments  in the  f i r s t  year  and  a hal f  of th is  work.  
F i rs t ,  the  IRUS so f tware  has  been  de l ivered  to the  Naval Ocean Systems Center  (NOSC) 
so that  the i r  team may encode  the  d ic t ionary  in fo rmat ion ,  case  f rame ru les,  and  
t rans format ion  ru les  for  generat ing  quer ies  appropr ia te  for  the under ly ing  systems.  
The NOSC staf f  involves a l ingu is t  p lus  ind iv idua ls  t ra ined  in computer  sc ience,  but  
45 
does not  involve exper ts  in natura l  language process ing  nor  in art i f ic ia l  intel l igence. 
Second, the  natura l  language in ter face  software has been de l ivered to Texas 
Ins t ruments  (TI), which has integrated it into the Force Requirements Expert System 
(FRESH). Demonstrat ions of the natura l  language in ter face  are being given at several  
conferences  this  year  as well as to the  navy personne l  at the Pacif ic F leet Command 
Center .  Testing and evaluat ion of IRUS, both  its software and the knowledge bases 
def ined by NOSC for the FCCBMP, will be car r ied  out in the spr ing of 1956, by the Navy 
Personne l  Research and Development Center.  
In this sect ion and sect ion two we present  ev idence that  this is one of the most 
ambit ious appl icat ions and tes ts  of natura l  language process ing ever  attempted.  
Sect ion two provides more background regard ing the techn ica l  chal lenges inherent  in 
the appl icat ion envi ronment  and in the goals of the Strategic  Computing Program. 
Sect ion three  descr ibes  what was changed in each system component  o suppor t  the 
techno logy  t rans fer .  Sect ion four  p resents  and i l lus t rates  the pr inc ip les  that  have 
been underscored  in moving this substant ia l  AI system from the laboratory  to use; 
while some pr inc ip les may appear  like common sense, repor t ing  on all the  exper ience 
should be valuable to fu ture  ef forts .  Sect ion five br ief ly  d iscusses possible fu ture  
d i rect ions ,  while sect ion six s tates  our  conclus ions.  
2 Background Constraints and Goals 
The following sect ions summarize severa l  const ra in ts  and goals which have made 
this  not  only a demanding chal lenge for  natura l  language process ing but also an 
ambit ious demonst ra t ion  of the f ru i t  of AI research .  
2.1 Multiple Underlying Systems 
The decis ion suppor t  env i ronment  of the Fleet Command Center  Battle 
Management Program (FCCBMP) involves a suite of dec is ion-mak ing  tools. A substant ia l  
data  base is at the core  of those tools  and inc ludes roughly 40 re la t ions  and 250 
fields. In addit ion, appl icat ion programs for drawing and displaying maps, var ious 
ca lcu la t ions  and addit ional  dec is ion suppor t  capabi l i t ies are prov ided in the 
Operat ions  Support  Group Prototype  (OSGP). In a paral le l  par t  of the Strategic  
Computing Program, two exper t  systems are  being provided: the Force Requirements 
Exper t  System (FRESH) and the Capabi l i t ies Assessment Expert  System (CASES). TI is 
bui lding the FRESH exper t  system; the  cont ract  for the CASES exper t  system has not  
been  awarded as of the writing of th is  paper .  
The ta rget  users  are navy commanders  involved in decis ion making at the Pacif ic 
46 
F leet  Command Center; these  are  top- leve l  execut ives  whose energy  is bes t  spent  on 
navy  prob lems and dec is ion making  ra ther  than  on the  deta i l s  of wh ich  of four  
under ly ing  sys tems o f fe rs  a g iven in fo rmat ion  capab i l i ty ,  on how to  d iv ide a prob lem 
in to  the  var ious  in fo rmat ion  capab i l i t i es  requ i red  and  how to  synthes ize  the  resu l ts  
i n to  the  des i red  answer .  Cur rent ly  they  do not  access  the  data  base  or  OSGP 
app l i ca t ion  programs themse lves ;  ra ther ,  on a round- the-c lock  bas is ,  two operators  
a re  ava i lab le  as  in termed ia tes  between commander  and  computer .  Consequent ly ,  the  
need  fo r  a natura l  language in ter face  (NLI) is Paramount .  
2.2 The Need For Transportabi l i ty  
There  are  three  ways  that  t ranspor tab i l i ty  has  been  abso lu te ly  requ i red  fo r  the  
natura l  language in ter face .  F i rs t ,  s ince  we had  no exper ience  prev ious ly  wi th  th i s  
app l i ca t ion  domain ,  and  s ince  the  schedu le  for  demonst ra t ions  and  de l ivery  was h igh ly  
ambi t ious ,  on ly  the  app l i ca t ion - independent  so f tware  cou ld  be  brought  to  bear  on the  
prob lem in i t ia l ly ;  there fore ,  t ranspor tab i l i ty  across  app l i ca t ion  domains  was  requ i red .  
Second,  the  under ly ing  sys tems have  been and  will cont inue  to  be  evolv ing.  For  
ins tance ,  the  data  base  s t ruc ture  is be ing  modi f ied both  to  suppor t  add i t iona l  
in fo rmat ion  needs  for  the  new exper t  sys tems and  to prov ide  shor ter  response  t ime in 
serv ice  of human requests  and  exper t  sys tem requests  to the  data  base .  
Third,  the  ta rget  output  of the  natura l  language in ter face  is sub jec t  to change.  
For  ins tance ,  the  capab i l i t i es  of FRESH are  be ing  deve loped in para l le l  w i th  the  
natura l  language in ter face  and  the  CASES exper t  sys tem has  not  been  s tar ted  as of 
th i s  date .  In teres t ing ly  enough,  the  ta rget  language for  the  data  base  cou ld  change 
as  well. For  ins tance ,  there  is the  poss ib i l i ty  of rep lac ing  the  ORACLE data  base  
management  sys tem with a data  base  mach ine ,  in which case  the  ta rget  language would 
change though the  app l i ca t ion  and  data  base  s t ruc ture  remained  constant  dur ing  the  
per iod  of ins ta l l ing  the  data  base  mach ine .  
2.3 Techno logy  Testbed 
The pro jec t  has  two goa ls  wh ich  at  f i r s t  seem to conf l i c t .  F i rs t ,  the  so f tware  
must  be hardened enough to be an  a id in the  da i ly  operat ions  of the  F leet  Command 
Center .  Second,  the  de l ivered  sys tems are  to be a tes tbed  fo r  research  resu l t s ;  
feedback  f rom use  of the  sys tems is to  p rov ide  a sol id empi r i ca l  base  fo r  suggest ing  
new areas  of research  and  re f inement  of ex i s t ing  research .  
As a consequence ,  so f tware  eng ineer ing  demands  p laced  upon the  AI so f tware  are  
qu i te  r igorous .  The arch i tec ture  of the  so f tware  must  suppor t  h igh  qua l i ty ,  well 
Worked out ,  non- toy  sys tems.  The so f tware  must  a lso suppor t  substant ia l  evo lu t ion  in 
477 
the heuristics and methods employed as natural language processing provides new 
research ideas that can be incorporated. 
3 Adequacy of the Components 
In this section we present a brief analysis of the adequacy of the various 
components in the system, given that the software had not been built with this domain 
in mind (but had been built with transportability in mind) and given that one of the 
goals of the effort is to provide a flexible technological base allowing evolution of the 
techniques and heuristics employed. 
3.1 Knowledge Representation 
At the  s tar t  of the  pro jec t ,  the  under ly ing  knowledge  representat ion  cons is ted  of 
a h ie rarchy  of concepts  (unary  pred icates ) ,  a l ist  of funct ions  on ins tances  of those  
concepts ,  and  a l is t  of n -a ry  pred icates .  The knowledge  representat ion  served  severa l  
purposes :  
o To identify the predicate symbols and function symbols that could be used in 
the first order logic representing the meaning of sentences, 
o To validate selection restrictions (case frame constraints) during the parsing 
process. 
Early on we concluded that greater inference capabilities were required. We wanted to 
be able to: 
o State  and  reason  about  knowledge  of b inary  re la t ionsh ips .  For  ins tance ,  
every  vesse l  has  an arb i t ra ry  number  of overa l l  read iness  ra t ings  assoc ia ted  
wi th  it, cor respond ing  to the  h i s to ry  of i t s  read iness .  
o Represent  events  and  s ta tes  of a f fa i r s  f lex ib ly .  There  may be a var iab le  
number  of a rguments  expressed  in the  input  for  a g iven  event .  For  
ins tance ,  Admira l  Fo ley  dep loyed  the E i senhower  yesterday  or  Admira l  Fo ley  
dep loyed  the E i senhower  C3. 2 Also, we needed to be ab le  to count  
occur rences  of events  or  s ta tes  of a f fa i r s  over  h i s to ry ,  as  in How many 
t imes was  the the E i senhower  C3 ire the last  12 months?  Consequent ly ,  we 
have  chosen  to represent  events  and  s ta tes  of a f fa i r s  as ent i t ies ,  wh ich  
par t i c ipate  in a number  of b inary  re la t ionsh ips ,  for  ins tance ,  spec i fy ing  the  
agent ,  t ime,  locat ion ,  etc .  of the  event .  
There fore ,  the  in i t ia l  ad hoc  knowledge  representat ion  fo rmal i sm was rep laced  wi th  a 
more  genera l  f ramework ,  NIKL \[10\], the  new implementat ion  of KL-ONE. This met  the  
needs  s ta ted  above ,  and  a lso prov ided  in fe rence  mechan isms \[15\] wh ich  cou ld  serve  as 
2C3 is an overal l  readiness rat ing.  
48 
a partial consistency checker on the axioms for the navy domain. Of course, there are 
other ways to achieve the 'goals above. However, NIKL was available, and this would be 
its first use in a technology transfer effort, providing us the opportunity to further 
explore the power and limitations of limited inference systems. 
In NIKL, one can state the classes of entities, the binary relations between 
entities (including functional relationships), subclass relationships, and subsumption 
relations among binary relations. It is now used to support: 
o The validation of selection restrictions during the parsing process, 
o Proposal of possible case frame constraints and possible predicates by the 
semantic knowledge acquisition component, 
o Proposal of the meaning of vague relationships, such as "have", and 
o The mapping from first-order logic to relational data base queries. 
Once the more powerful knowledge representation and inference mechanisms \[15\] were 
available to IRUS, we began using them in unanticipated ways, for instance, the last 
three in the list above. 
3.2 The Lexicon and Grammar  
The current grammar  (RUS) \[2\] and lexicon are based on the ATN formalism \[23\]. 
Though RUS was designed to be a general g rammar  of dialogue and was clearly among 
a handful of implemented grammars having the broadest coverage of English, the 
question was how much modification would be needed for the Navy domain, which was 
totally new to us. 
Very  few changes  were  needed to  the  so f tware  that  suppor ts  the  lex icon  and  
morpho log ica l  ana lys i s .  Those that  were  requ i red  centered  around spec ia l  mi l i ta ry  
fo rms,  such  as a l lowing 06Mar86 as  a date  and  0600z  as a t ime. Spec ia l  symbo ls  and  
codes  such  as  those  are  bound to  a r i se  in many app l i ca t ions ,  no mat ter  how 
t ranspor tab le  the  so f tware  is. 
Very few modifications to the grammar  had to be made; those that have been 
made thus far correspond to special forms and have required very little effort to add. 
Examples include military (and European) versions of dates, such as 6 MaTch 1986. 
This is not to claim that everything a navy user types will be parsed; fully general 
treatments for conjunction, gapping, and ellipsis, are still research issues for us, as 
for everyone else. Rather, the experience testifies to the fact that domain-  
independent grammars can be written for natural language interfaces and that 
modification of them for a new application can be very small. Sager \[12\] has reported 
49 
that few rules of the Linguistic String Parser need to be changed when it is moved to 
? a new application. 
The current system handles several classes of ill-formed input, including 
typographical errors that result in an unknown word; omitted words such as 
determiners and prepositions; various grammatical errors such as subject verb 
disagreement and determiner noun disagreement; case errors in using pronouns; and 
elliptical inputs. The strategy is that of \[21\]. 
3.3 Semantic Interpretation 
Though the software for the semantic interpreter did not depend on domain 
specifics, the limitations of the initial knowledge representation formalism and of the 
class of linguistic expressions for which it could compute a semantic representation 
meant that the semantic interpreter had to be substantially changed. First, the 
semantic interpreter was modified to take advantage of the stronger knowledge 
representation formalism and inference available in NIKL. For instance, the 
interpreter must compute the semantic representation for descriptions of events and 
states of affairs. It now finds the interpretation of X has Y by looking for a relation 
in the knowledge representation between X and Y. 
Second, the semantic interpreter has been changed to correspond more and more 
to general linguistic analysis. One strength of the initial version of the semantic 
interpreter \[I\] was its ability to handle idiomatic expressions, such as blue /orees. 
Blue /orces refers to U.S. forces, as opposed to forces that are blue (in color). The 
semantic interpreter has been generalized now so that it is much easier to capture 
the general meaning of blue as a predicate, as well as allowing for specification of 
idiomatic expressions, such as blue /orces. 
A major focus in the next year will be continuing modification of the semantic 
interpreter so that we have a fully compositional semantics and an intensional logic, 
rather than a first order logic as the meaning representation of a given sentence. 
The compositional semantics will still allow, of course, for idiomatic expressions. The 
enhanced semantic interpreter will be applicable to a much broader class of English 
expressions, while still being domain- independent and driven by domain--specific case 
frame rules. 
The semant ic  in terpreter  does  not  al low for  semant ic  i l l - fo rmedness  at  p resent ;  
remov ing  th i s  res t r i c t ion  is a h igh pr io r i ty  research  area .  
50 
3.4 Discourse Phenomena 
Since discourse analysis is the least understood area in natural language 
processing, the discourse processing component  in the system is limited. The system 
handles anaphora based on the class of the entity required by the selection 
restrictions upon the anaphor. A benefit of the change in representation making 
events and states of affairs entities is that the simple heuristic above allows the 
anaphor in each of the following sequences to be correctly understood: 
o The E i senhower  was  dep loyed  C2. When d id  that  OCCUT? 
0 The E i senhower  had  been C3. Ffhen was  that?  
El l ipt ica l  inputs  that  a re  noun phrases  or  p repos i t iona l  phrases  are  hand led  as 
fol lows: If the  c lass  of the  ent i ty  inherent  in the  e l l ip t i ca l  input  is cons is tent  w i th  a 
c lass  in the  prev ious  input ,  the  semant ic  representat ion  of the  new ent i ty  is 
subst i tu ted  for  the  semant ic  representat ion  in the  prev ious  input .  If not ,  the  e l l ips is  
is in terpreted  as a request  to d i sp lay  the  appropr ia te  in fo rmat ion .  
Far  more  soph is t i ca ted  d i scourse  process ing  is a h igh  pr io r i ty  not  on ly  for  our  
p ro jec t  but  for  natura l  language work  a l together .  
3.5 In t roduc ing  Back  end Specifics 
The resu l t  of l ingu is t i c  p rocess ing  in IRUS is a fo rmula  in logic.  Another  
component  t rans la tes  the  log ica l  express ion  represent ing  the  mean ing  of an input  in to  
an  express ion  in an  abst rac t  re la t iona l  a lgebra .  S imple opt imizat ion  of the  resu l t ing  
express ion  is per fo rmed in the  same component .  The in i t ia l  vers ion  of that  component  
(MRLtoERL) \[17\] used  loca l  t rans format ions  to t rans la te  the  n -ary  pred icates  of the  
logic  in to  the  appropr ia te  sequence  of p ro jec t ions ,  jo ins ,  etc .  on f i les and  f ie lds of the  
data  base .  
A s t ra ight fo rward ,  syntax -d i rec ted  code  generator  t rans la tes  the  abst rac t  
re la t iona l  express ion  into  the  query  language requ i red  by  the  under ly ing  data  base  
management  sys tem.  Code generators  have  been bu i l t  fo r  Sys tem 1022, the  Br i t ton -  
Lee Data  Base Machine,  and  ORACLE. An exper ienced  person  needs  on ly  two to  th ree  
weeks  to c reate  the  code  generator .  
With the move to NIKL and the representation of events and states of affairs as 
concepts participating in binary relations, the context-free translation of predicates 
to expressions in relational algebra was no longer adequate. However, the limited 
inference mechanism \[15\] of NIKL formed a basis for a simplifier \[18\] as a preprocess 
51 
to the  MRLtoERL component  so that  the t rans la t ion  from logic to re lat iona l  a lgebra 
could stil l be done using only local  t rans format ions .  Fur thermore ,  the simplif ier 
enab led  genera l  t rans la t ion  of l inguist ic  express ions  whose data  base s t ructure  bears  
l i t t le resemblance to the conceptua l  s t ruc ture  of the  English query  \[18\]. We bel ieve 
the  simplif ication techn iques  can be genera l i zed  fu r ther  to suppor t  the simplif ication 
of a subc lass  of express ions  in the  intens iona l  ogic to be generated  by the p lanned 
semant ic  in terpreter  \[19\]. 
In t roduct ion  of back end speci f ics for  the OSGP appl icat ion package and the  
FRESH exper t  system is hand led by an ad hoc t rans la tor  from logic to ta rget  code at 
p resent .  
3.6 Linguist ic Knowledge Acquisit ion 
IRUS's four knowledge bases  are: 
o The lexicon, which s ta tes  syntact i c  and morphological  informat ion,  
o The taxonomy of case frame rules,  
o The model of p red icates  in the  domain, s ta ted  in NIKL, and 
o The t rans format ion  rules for  mapping pred icates  in the logic into 
pro ject ions ,  joins, etc. of f ields in the data  base. 
The f i rst  two of these are l inguist ic knowledge bases;  soph is t i ca ted  acquis i t ion tools 
a re  avai lable to aid the system bui lder ,  though not  necessar i l y  t ra ined  in AI, to build 
the necessary  l inguistic knowledge about  the vocabulary .  
Powerful  knowledge acquis i t ion tools for building these  domain-spec i f i c  
const ra in ts  could great ly  ease the process  of br inging up a natura l  language in ter face  
for  a new appl icat ion and consequent ly  for b roaden ing  the appl icabi l i ty of NLI 
techno logy.  Perhaps  the most powerful  demonst ra t ion  of acquis i t ion tools  to date has 
been TEAM \[6\]. Based on the f ields and files of a given data  base, TEAM's acquis i t ion 
tools  lead the individual th rough a sequence  of quest ions  to acqui re  the specif ic 
l inguist ic  and domain knowledge needed to unders tand  a broad subset  of language for  
query ing the data base. However, s ince those  heur i s t i cs  are in large par t  specif ic to 
the  task  of accessing data  bases,  that  techno logy  could not  be d i rec t ly  applied to the 
FCCBMP appl icat ion, which encompasses  a re lat iona l  data  base, an appl icat ion package 
including both map drawing and ca lcu lat ion,  and exper t  systems. 
Knowledge acquis i t ion tools for IRUS, developed under  ear l ie r  DARPA-funded work 
at  BBN, were not specif ic to data  base appl icat ions and there fore  could be appl ied in 
the  FCCBMP. Even if appl icabi l i ty  of the TEAM heur i s t i cs  were not  a problem, there  
52 
are theoretical and technical difficulties in translating English requests into data base 
queries \[9\] which would argue for a more general approach such as ours. As Scha 
\[13, 14\] has argued, these difficulties, as well as the issues of transportability and 
generality, suggest keeping linguistic knowledge rather independent of assumptions 
about the back end. 
IRACQ, the  semant ic  acqu is i t ion  too l  made ava i lab le  to NOSC for  spec i fy ing  case  
f rames  and  the i r  assoc ia ted  t rans la t ions ,  is qu i te  power fu l .  The in i t ia l  vers ion  \[11\] 
a l lowed one to  spec i fy  the  case  f rame fo r  a new word  sense  by  giving an  example  of a 
phrase  us ing  that  word  sense .  For  ins tance ,  if the admiral ,  a vesse l ,  and C2 are  
known to the  sys tem,  then  one can  def ine a new case  f rame fo r  deploy  by giv ing a 
phrase  such  as  the admira l  dep loyed  a vesse l  C2. The sys tem suggests  genera l i za t ions  
of the  arguments  spec i f ied  in the  example  us ing  the  NIKL knowledge  base ,  so that  the  
in fe r red  case  f rame is the  most  genera l  that  the  user  author i zes .  For  example ,  
genera l i za t ions  of admira l  a re  commanding  of f icer ,  person ,  and  phys ica l  ob ject ;  
genera l i za t ions  of vesse l  a re  un i t ,  p la t fo rm,  and  phys ica l  ob jec t ;  genera l i za t ions  of C2 
are  ra t ing  and  code.  Fur thermore ,  based  on the  in t roduct ion  of the  more  genera l  
knowledge  representat ion  sys tem NIKL, IRACQ is be ing  extended to propose  the  b inary  
re la t ions  that  might  be  par t  of the  t rans la t ion  of the  new word.  Of course ,  if the  
re la t ions  and  concepts  needed are  not  a l ready  present  in the  domain  pred icate  model ,  
the  user  can  def ine  new concepts  and  re la t ions  in the  NIKL h ie rarchy  as well. 
The ava i lab i l i ty  of such  knowledge  acqu is i t ion  too ls  has  made it poss ib le  for  NOSC 
representat ives ,  ra ther  than  AI exper ts ,  to  def ine  the  nava l  language expected  as 
input .  We have  found that  even  with the  too l  descr ibed  above ,  reasonab le  l ingu is t i c  
soph is t i ca t ion  is very  he lp fu l  in def in ing the  case  f rames .  In fac t ,  an ind iv idua l  with a 
master ' s  degree  in l ingu is t i cs  is def in ing the  case  f rames  at  NOSC. More soph is t i ca ted  
too ls ,  wh ich  do not  p resuppose  on ly  one k ind  of back  end,  a re  one of the  most  
impor tant  research  top ics  for  natura l  language in ter faces .  These  would combine  the  
s t rengths  of the  l ingu is t i c  knowledge  acqu is i t ion  too ls  of both  IRUS and  TEAM. 
4 Principles Underscored 
In the  course  of the  e f fo r t ,  a number  of p r inc ip les  have  been underscored .  Many 
of these  once  s ta ted  may appear  to be common sense ;  however ,  we hope  that  
i l l us t ra t ing  them f rom our  exper ience  will p rove  he lp fu l .  
53 
4.1 The Necess i ty  For  Genera l  So lu t ions  
t 
The availability of domain- independent software driven by domain-dependent, 
declarative knowledge bases was of paramount  importance because of the following: 
o The application was not only broad (three underlying systems) but also 
evolving (with a fourth system to be added). 
o Great habitability is necessary for delivery to the Pacific Fleet Command 
Center. 
o The time frame for demonstration was relatively short compared to the scope 
of the underlying systems to be covered. 
Furthermore, it is critical that the knowledge bases state a linguistic or domain fact 
once and that the domain- independent software be able to use that one fact in all 
predictable linguistic variations. The reasons are obvious: the efficiency in building 
the knowledge bases, the consistency of stating a fact only once, and the habitability 
of the resulting system which can understand things no matter what form they are 
expressed in. 3 
The IRUS sys tem at ta ins  the  goa l  ment ioned  above  re la t ive ly  well; a l ingu is t ic  or  
app l i ca t ion  const ra in t  is s ta ted  once  in the  knowledge  base  but  app l ied  in all poss ib le  
ways  in the  language process ing .  This is par t i cu la r ly  t rue  because  of the  substant ia l  
g rammar  \[2, 3\] and  to a lesser  extent  due  to  the" semant ic  in terpreter .  Recogn i t ion  of 
th i s  fac t  is par t  of the  reason  that  substant ia l  changes ,  as  ment ioned  in sect ion  
three ,  a re  p lanned in the  semant ic  in terpreter  to make the  l ingu is t i c  fac ts  that  dr ive 
it even  more  genera l .  
3An in teres t ing  anecdote that arose in ear ly  discussions in the planning of th is  pro ject  
centered around the t ight  deadl ines and the breadth of the app l i ca t ion  area. Since i t  was 
c lear  that one could not cover o l i  three under ly ing systems in every area for  which they 
could provide in format ion,  the quest ion arose whether to focus on o substant ia l  subpart of 
the app l i ca t ion  domain in i t ia l l y  or to sacr i f i ce  l ingu is t i c  coverage to gain in coverage of 
the under ly ing  systems, Because the in format ion  needs of the var ious navy personnel 
d i f fe red  w ide ly ,  and because the scope of needs seemed impossible to p red ic t ,  navy personnel 
in i t ia l l y  suggested that coverage of o l i  poss ib le  in format ion  stored in the under ly ing 
systems was of such importance that sacr i f i ces  regarding the language understood could be 
mode even i f  there were only one way that  o given piece of in format ion  could be accessed. 
The in teres t ing  thing however is that as demonstrations were given,  the f i r s t  things people 
request fo l low ing  the demonstrat ion is to t ry  var ious rephrosings of the requests in the 
demonst ra t ion ,  thereby in behavior ind icat ing  how important not being res t r i c ted  to special  
forms is.  
54  
4.2 The Necessity of Heuristic Solutions 
In the previous section we have argued for the need of general purpose solutions 
to problems in NLI. Clearly this cannot be taken to an extreme; otherwise one would 
not have an NLI in the foreseeable future, since there are wel l -known outstanding 
problems for which there is no general, comprehensive solution on the horizon. 
Consequently, heuristic, state-of-the-art solutions are being demonstrated for 
problems such as ambiguity, vagueness, discourse context, ill-formed input, definite 
reference, quantifier scope, conjunction, and ellipsis. Though laboratory use of the 
system embodying that set of heuristics is quite promising, we expect that placing the 
system in the hands of individuals trying to solve their day - to -day  problems will 
produce interesting corpora of dialogues that cannot be handled by one or more of 
those heuristics. Careful study of those corpora will tell us not only the effectiveness 
of state-of-the-art solutions but will also suggest new directions of research. 
4.3 The Necessity of Extra-linguistic Elements in a Natural Language Interface 
Having only a natural language processor is not sufficient to provide a truly 
natural interface. Four elements seem highly valuable for typed input: editing, a 
readily accessible history of the session, human factors elements in the presentation, 
and a min imum of key strokes. Editing should include more than deleting the last 
character of the string and deleting the whole string. We are currently relying on 
Emacs, which is readily available on Symbolics workstations. However, that is also 
unattractive because of the arcane nature of the link between the myriad control key 
commands  of Emacs and the actual textual tasks the user needs to perform. 
IRUS's on-line history of the session provides reviewing earlier results, editing 
the text of earlier requests to create new ones, and generating a standard protocol 
for routine operations that occur on a regular basis. Our user community anticipates 
a need for both routine sequences of questions as would be useful in preparing daily 
or weekly reports, and ad hoc queries, e.g., when crises arise. 
Issues in presentation are important as well. No matter what the underlying 
application is, IRUS lets it produce output on the complete bitmap screen. A popup 
input window and an optional popup history window can be moved to any part of the 
screen so that all parts of the underlying system's output may be visible. 
Certain operations occur so frequently that one would like to have them 
available on the screen at all times in menus  to minimize memory  load and key 
strokes. Examples are clearing a window and aborting a request. 
55 
A fu ture  capabi l i ty  that  would be quite a t t rac t ive  is point ing to individual  data  
items, c lasses of data  items, field headings,  or  locat ions  on maps ,  causing the  
appropr ia te  l inguist ic  descr ipt ion  of that  ent i ty  to be made avai lable as par t  of the 
natura l  language input.  While this is possib le in the future ,  providing such a 
capabi l i ty  is not  cur rent ly  funded. 
Speech input  as a mode of communicat ion would also be highly desirable,  even if 
ext remely  l imited initial ly. As a consequence,  the  next  generat ion  of natura l  language 
unders tand ing  systems in the FCCBMP will inc lude modi f icat ions pecif ical ly to provide 
an in f ras t ructure  which could at a la ter  date suppor t  speech  input.  
5 Future Possibi6t ies 
In addi t ion to the enhancements  we have ment ioned ear l ier  regard ing  the 
semant ic  in terpreter ,  l inguist ic knowledge acquis i t ion  tools,  and d iscourse  process ing,  
there  are three  substant ia l  areas  of research  and development  possible.  First,  
research  in i l l - fo rmed input is necessary  in o rder  to allow for addit ional  grammatical  
problems in the input  and for re laxat ion  of semant ic  const ra in ts ,  e.g., to allow for  
f igures of speech.  The problem with an i l l - fo rmed input  is that  there  is no 
in terpretat ion  which satisf ies all l inguist ic const ra in ts .  Therefore,  the very  
const ra in ts  that  limit search  must be relaxed,  thereby  opening Pandora 's  Box in terms 
of the number  of a l ternat ives  in the search  space.  Not only IRUS, but  apparent ly  all 
systems that  p rocess  any i l l - fo rmed input a t ta in  the success  they  do by cons ider ing 
very  few kinds of i l l - fo rmed input and by assuming that  semant ic  const ra in ts  can 
never  be violated. 4 Consequently,  determining what  the  user  meant in an i l l - fo rmed 
input  is a substant ia l  problem requir ing research .  
Second, we propose  exploring paral le l  a rch i tec tures  to add funct iona l  capabi l i ty.  
Run time per fo rmance  of IRUS on a Symbolics machine is quite acceptable .  Typical 
inputs  are ful ly p rocessed  to give the ta rget  language input  to the under ly ing system 
within a few seconds;  natura l ly ,  the re lat iona l  data  base and under ly ing exper t  
systems are not  expected  to be able to per form at comparab le  speeds.  There are 
three  areas  where funct ional  per formance could be improved by paral lel ism. 
I. The current system ranks the partial parses using both semantic and 
syntactic information, and it explores those partial parses based on 
following up the most promising one first. The technique is relatively 
effective, but clearly not infallible. Finding all interpretations and then 
4Early work on allowing semantic relaxation is reported in \[5, 21. 22\].  
56 
rank ing them based not  only on local syntact i c  and semantic  tes ts  but  also 
on global semantic,,  pragmatic ,  and d iscourse  informat ion is cr i t ica l  to 
improving the ident i f icat ion of what the user  in tended.  
2. A second area  re la ted  to the f irst,  is g reater  coverage of i l l - fo rmed input.  
As ment ioned ear l ier ,  i l l - fo rmedness  requ i res  re laxing the ru les  that  
const ra in  search;  there fore  the search  space grows dramat ica l ly  in 
p rocess ing  an i l l - fo rmed input.  
3. Rea l - t ime,  large vocabulary,  large branch ing  factor ,  cont inuous  speech  
recogn i t ion  is beyond the s ta te  of the art ,  and requ i res  highly para l le l  
machines  to suppor t  speech signal process ing.  While this is highly desirable,  
it is not  par t  of our  cur rent  effort .  
Within the  next  two years  we in tend to rep lace  the ATN grammar with a dec larat ive ,  
s ide -e f fec t  f ree grammar and a para l le l  pars ing algor ithm, following work repor ted  in 
\[16\]. 
Third, our  evolving system is being in ter faced  to the Penman generat ion  
component  from use / In format ion  Sc iences Ins t i tu te  (USC/ISI) \[8\] .  Penman is based 
upon systemic l inguist ics.  The ul t imate goal of the  e f for t  with USC/ISI is twofold: to 
have systems that  can unders tand  whatever  they  generate  and to achieve this  by 
having common knowledge sources  for the lexicon,  for the NIKL model of domain 
pred icates ,  and for d iscourse information.  
6 Conclusions 
Though the pro ject  will be ongoing for severa l  years  yet, there  are severa l  
p re l iminary  conc lus ions  from the f i rst  year  and a half  of effort ,  given the const ra in ts  
and goals ment ioned in sect ion two. 
1. Providing language coverage for this b road  appl icat ion with multiple 
under ly ing  systems has not been a problem. However, s ince determin ing 
what system(s)  must be accessed  for  a given input  is a research  problem 
that  has been l itt le addressed,  only simple l inguist ic  c lues are  used in the 
cur rent  vers ion.  The problem in genera l  involves not  only reason ing  about  
the  capabi l i t ies  of the under ly ing systems \[7\] but  also s igni f icant l inguist ic 
issues.  For instance,  if one says Show me the car r ie rs  whose cond i t ion  code 
changed in  the last  24 hours ,  e i ther  a l ist (from the data  base) or a map 
(from OSGP) is appropr ia te .  If one says Show me a d i sp lay  o\[ the car r ie rs  
whose  cond i t ion  code changed in  the last  24 hours ,  only OSGP is appropr ia te .  
The l inguist ic  cue is disp lay .  Fur thermore ,  some contexts  favor  one 
under ly ing  system over the other ,  requ i r ing  the system to maintain a 
dia logue context  model, including the  user ' s  in fe r red  goals in the dialogue, 
in o rder  to in tegrate  cues from dialogue context  with the l inguist ic cues. 
2. The arch i tec ture  has suppor ted  t ranspor tab i l i ty  well. For instance,  this new 
app l icat ion  requ i red  only minor changes  to the  grammar and morphologica l  
ana lyzer .  As FRESH has been fur ther  def ined and as the data  base 
s t ructure  has evolved, only small local changes  have been requ i red  to the  
content  of the knowledge bases.  Should a data  base machine rep lace  the  
57 
cur rent  data  base  management  sys tem in Hawaii,  on ly  two to  th ree  person  
weeks  shou ld  be needed to  generate  the  new target  language.  However ,  
more  soph is t i ca ted  l ingu is t i c  knowledge  acqu is i t ion  too ls  not  dependent  on 
the  type  of the  under ly ing  app l i ca t ion  sys tem are  a c r i t i ca l  goal  fo r  NLI both  
fo r  fa r  g reater  app l i cab i l i ty  of the  techno logy  and  fo r  fa r  b roader  
ava i lab i l i ty  of NLIs. 
3. The success  of th i s  e f fo r t  as a techno logy  tes tbed  depends  on eva luat ion  
a f te r  ins ta l la t ion  at  the  Pac i f i c  F leet  Command Center  and  on the  success  of 
the  arch i tec ture  to suppor t  substant ia l  enhancements ,  such  as the  p lanned 
semant ic  in terpreter  based  on compos i t iona l  semant ics  and  the  p lanned 
para l le l  parser .  However ,  i t  a l ready  has  suppor ted  mass ive  changes  well, 
such  as the  change in under ly ing  knowledge  representat ion  when NIKL was 
in t roduced.  
The potent ia l  of the  tes tbed  is g reat  because  it o f fe rs  empi r i ca l  research  of 
a rea l i s t i c  k ind  unfor tunate ly  la rge ly  lack ing  hereto fore ;  the  p lacement  of 
TQA in the  hands  of users  to so lve the i r  da i ly  p rob lems for  a year  \[4\] is a 
notab le  except ion .  The resu l t s  of research  on heur i s t i cs  fo r  de f in i te  
re ference ;  semant ic  ambigu i ty ;  e l l ips is ;  syntact i ca l ly  or  semant ica l ly  i l l -  
fo rmed input ;  and  in fe rence  f rom wor ld  knowledge  and  context ,  to name a 
few s tud ied  in i so la t ion ,  must  be  tes ted  in a complete  sys tem.  The 
oppor tun i ty  in the  FCCBMP will he lp  to determine  the  e f fec t iveness  of such  
heur i s t i cs  in a la rge  d iverse  app l i ca t ion  domain  where  combinator ia l  i ssues  
cannot  be ignored .  Co l lect ing corpora  in an  exper iment  can  be h igh ly  
ins t ruc t ive ,  as shown in \[20\]. However ,  corpus  co l lec t ion  us ing  peop le  
so lv ing the i r  own prob lems prov ides  an uncommon degree  of rea l i sm and 
leg i t imacy  to the  empi r i ca l  p rocess .  
58 
References 
\[1\] 
\[2\] 
\[3\] 
\[4\] 
\[5\] 
\[6\] 
\[7\] 
\[s\] 
\[9\] 
\[10\] 
Bates, M., Stallard, D., and Moser, M. 
The IRUS Transportable Natural Language Database Interface. 
Expert Database Systems. 
Cummings Publishing Company, Menlo Park,  CA, 1985. 
Bobrow, R.J. 
The RUS System. 
In B.L. Webber, R. Bobrow (editors),  Research in Natural  Language 
Understanding.Bolt,  Beranek and Newman, Inc., Cambridge, MA, 1978. 
BBN Technical Report 3878. 
Bobrow, R. and Bates, M. 
The RUS Parser  Control St ructure .  
In Research in Knowledge Representat ion for  Natural  Language Understanding, 
Annual Report.Bolt Beranek and Newman Inc., 1982. 
BBN Report No. 5188. 
Damerau, F.J. 
Operating Stat ist ics for the Transformat ional  Question Answering System. 
American Journal of Computational L inguist ics  7(1):30-42, 1981. 
Fass, D. and Wilks, Y. 
Preference Semantics, I l l -Formedness,  and Metaphor. 
American Journal of Computational L inguist ics  9(3-4) :178-187,  1983. 
Grosz, B., Appelt, D. E., Martin, P., and Pereira,  F. 
TEAM: An Experiment in the Design of Transportable Natural  Language 
Interfaces. 
Technical Report 356, SRI Internat iona l ,  1985. 
To appear  in Artificial Intel l igence. 
Kaczmarek, T., Mark, W., and Sondheimer, N. 
The Consul/CUE Interface: An In tegrated  Interact ive Environment. 
In Proceedings of CHI '83 Human Factors in Computing Systems, pages 96-102.  
ACM, December, 1983. 
Mann, W.C. and Matthiessen, C.M.I.M. 
Nigel: A Systemic Grammar  for Text Generation. 
Systemic Perspect ives on Discourses: Selected Theoretical Papers from the 9th 
Internat ional  Systemic Workshop. 
Ablex, Norwood, N J, forthcoming. 
Moore, R.C. 
Natural Language Access to Databases - Theoretical/Technical Issues. 
In Proceedings of the 20th Annual Meeting of the ASsociation for  Computational 
L inguist ics,  pages 44-45.  Associat ion for Computat ional  Linguistics, June, 
1982. 
Moser, M.G. 
An Overview of NIKL, the New Implementat ion of KL-ONE. 
In Sidner, C. L., et al (editors),  Research in Knowledge Representat ion fo r  
Natural  Language Understanding - Annual  Report, I September 1982 - 31 
August 1983, pages 7-26.BBN Laborator ies  Report No. 5421, 1983. 
59 
\[11\] 
\[12\] 
\[13\] 
\[14\] 
\[15\] 
\[16\] 
\[17\] 
\[lS\] 
\[19\] 
\[20\] 
\[21\] 
\[22\] 
Moser, M.G. 
Domain Dependent Semantic Acquisition. 
In The First Conference on Artif icial Intelligence Applications, pages 13-18.  
IEEE Computer Society, December,  1984. 
Sager,  N. 
The String Parser for Scientific Literature. 
In R. Rustin (editor), Natural Language Processing, pages 61-88.Algorithmics 
Press, Inc., New York, NY, 1973. 
Scha, R.J.H. 
English Words and Data Bases: How to Bridge the Gap. 
In Proceedings of the 20th Annual Meeting of the Association fo r  Computational 
Linguistics, pages 57-59.  Associat ion for Computat ional  Linguistics, June ,  
1982. 
Scha, R.J.H. 
Logical Foundations for Question Answering. 
Technical  Report, Eindhoven: Phil ips Research  Labs, M.S. 12.331., 1983. 
Schmolze, J.G., Lipkis, T.A. 
Classification in the KL-ONE Knowledge Representation System. 
In Proceedings oF the Eighth International Joint ConFerence on Artificial 
Intelligence. 1983. 
Sr idharan,  N.S. 
Semi-Applicative Programming: Examples oF Context Free Recognizers. 
Technical  Report  Report  No. 6135, BBN Laborator ies  Inc., January ,  1986. 
Stallard, D. 
Data Modelling for Natural Language Access. 
In The First Conference on Artif icial Intelligence Applications, pages 19-24.  
IEEE Computer Society, December,  1984. 
Stallard, D.G. 
A Terminological Simplification Transformation for Natural Language Question- 
Answering Systems. 
In Proceedings of the 24th Annual Meeting of the Association for Computational 
Linguistics. Associat ion for Computat ional  Linguistics, July, 1986. 
To appear.  
Stal lard,  D.G. 
Tazonomic InFerence on Predicate Calculus Expressions. 
Technical  Report, BBN Laborator ies  Inc., 1986. 
In preparat ion .  
Thompson, B.H. 
Linguistic Analysis of Natural Language Communication with Computers. 
In Proceedings of the Eighth International Conference on Computational 
Linguistics, pages 190-201. International Committee on Computational 
Linguistics, October, 1980. 
Weischedel, R. M. and Sondheimer,  N. K. 
Meta - ru les  as a Basis for P rocess ing  I l l -Formed Input.  
American Journal of Computational Linguistics 9(3-4):161-177, 1983. 
Weischedel, R.M. and Sondheimer,  N.K. 
Rela~ng Constraints in MIFIKL. 
Technical  Report,  USC/ Information Sciences Inst i tute,  1983. 
60 
\[23\] Woods, W.A. 
Transition Network Grammars for Natural Language Analysis. 
CACM 13(10):591-606, October, 1970. 
61 
