Squibs and Discussions 
Ambiguity-preserving Generation with LFG- 
and PATR-style Grammars 
Jurgen Wedekind* 
University of Stuttgart 
Ronald M. Kaplan t 
Xerox Palo Alto Research Center 
The widespread ambiguity of natural anguage presents a particular challenge for 
machine translation. The translation of an ambiguous ource sentence may depend 
on first determining which reading of the sentence is contextually appropriate and 
then producing a target sentence that accurately expresses that reading. This may be 
difficult or even impossible to accomplish when resolution of the source ambiguity 
depends on a complete understanding of the text, or when several readings are con- 
textually appropriate. An attractive alternative strategy is to circumvent the need for 
disambiguation by generating a target sentence that has exactly the same ambiguities 
as the source. In this brief note we investigate whether ambiguity-preserving genera- 
tion is possible when syntactic structures are described by the mechanisms of LFG- or 
PATR-style grammars (Kaplan and Bresnan 1982, Shieber et al 1983). Mechanisms of 
this sort associate attribute-value structures with trees derived in accordance with a 
context-free grammar. Our result also applies to other systems uch as HPSG (Pollard 
and Sag 1994) whose formal devices are powerful enough to simulate, albeit indirectly, 
the effect of context-free derivation. 
Consider as an example the well-known ambiguous entence (1) 
(1) John saw the man with the telescope. 
for which some LFG or PATR grammar might provide alternative f-structures equiv- 
alent to the more compact predicate-calculus formulas indicated in (2). 
(2) a. with_the_telescope(see(John, man)) 
b. see(John, with_the_telescope(man)) 
The problem of translating this sentence appropriately into, say, German could be 
handled by disambiguating its parsing result (2) (i.e., choosing one of these struc- 
tures/formulas), converting that to an appropriate German f-structure (or leaving it 
alone if the result can serve as an interlingua), and then generating a German sentence 
that would have that meaning as (hopefully, the only) one of its interpretations. Dis- 
ambiguation is the major formal obstacle in this approach, since parsing algorithms 
exist when the grammatical formalisms are off-line parsable (Kaplan and Bresnan 
1982), and the generation problem is known to be decidable ven without the off-line 
parsable restriction (Wedekind 1995). However, for this sentence it should be possible 
to side-step the disambiguation problem because there is a German sentence (3) that 
expresses exactly the same ambiguity as the original English. 
* Institute for Natural Language Processing, University of Stuttgart, Azenbergstr. 12, D-70174 Stuttgart, 
Germany. E-maih juergen@ims.uni-stuttgart, de 
Xerox PARC, 3333 Coyote Hill Road, Palo Alto, CA  94304, USA. E-maih kaplan.parcflxerox, corn 
(~) 1996 Association for Computational Linguistics 
Computational Linguistics Volume 22, Number 4 
(3) Hans sah den Mann rnit dem Fernrohr. 
Unfortunately, an ambiguity-preserving translation does not exist for all source 
sentences. This is illustrated by the English sentence (4), with German taken again as 
the target language. 
(4) The duck is ready to eat. 
The two readings of (4) are given in (5). 
(5) a. ready(duck, eat(someone, duck)) 
b. ready(duck, eat(duck, something)) 
These interpretations have to be expressed in separate German sentences, as in (6). 
(6) a. Die Ente kann jetzt gegessen werden. 
b. Die Ente ist zum Fressen bereit. 
Preservable and unpreservable ambiguity can occur in complex patterns. The sen- 
tence (7) 
(7) John saw her duck with the telescope. 
has at least the four readings indicated in (8). 
(8) a. with_the_telescope(see(John, her_duck)) 
b. see(John, with_the_telescope(her duck)) 
c. with_the_telescope(see(John, duck(her))) 
d. see(John, with_the_telescope(duck(her))) 
No single sentence in German expresses all these readings, but accurate translation for 
this case does not require a full disambiguation. The readings (8a,b) can be expressed 
by (9a) and the readings (8c,d) by (9b). 
(9) a. Hans sah ihre Ente mit dem Fernrohr. 
b. Hans sah sie mit dem Fernrohr untergehen. 
Thus only "duck" has to be disambiguated--the PP-attachment ambiguity ispreserved 
in both translations. 
We see from these examples that the costly and difficult process of disambigua- 
tion can be avoided in some circumstances but is necessary for accurate translation 
when an ambiguity-preserving target construction does not exist. The performance 
of a system may be improved, then, if the disambiguation process is initiated only 
when it has been determined that no target sentence can be generated that expresses 
exactly the set of readings found in the source. In this note we consider whether or 
not it is possible to make this kind of determination, and we arrive at an essentially 
556 
Wedekind and Kaplan Ambiguity-preserving Generation 
negative result: the problem of ambiguity-preserving generation (and thus ambiguity- 
preserving translation) is unsolvable ven if the languages are described by unification 
grammars for which the parsing and generation problems eparately are computable. 
Since the proof of this assertion is so simple, we can dispense almost entirely 
with preliminary formalizations. We need only the fact that an LFG- or PATR-style 
unification grammar G defines a binary relation Ac between terminal strings w and 
f-structures ? as given in (10) 
(10) At(w, ~) iff w is derivable with ? according to G. 
On the basis of A we can then show that ambiguity-preserving generation is unde- 
cidable. 
Theorem 
Let G be an arbitrary unification grammar and let {(~1 . . . . .  ~1} (l > 1) be an arbitrary set 
of feature structures. Then it is undecidable whether there is a terminal string w such that 
AG(W , (I)1) A"" /k  AG(W ,C~l). 
Proof 
We prove the theorem by reducing the problem to the emptiness problem of the inter- 
section of arbitrary context-free languages, a problem that is known to be undecidable. 
Let G 1 and G 2 be two arbitrary context-free grammars whose nonterminal vocab- 
ularies, terminal vocabularies, tart-symbols, and rules are given by {V~, V~,S1,R 1) 
and (V~, V~, $2,R2), respectively. Without loss of generality we suppose further that 
VIN N V 2 = 0. On the basis of G 1 and G 2 we construct a unification grammar G = 
{VN, VT, S, R) with 
VN = V~UV~U{S}andS~V1NUV~ 
= u 
a = R1UR2U {S "--~ $1 S---+ $2 } 
(TA)=I  ' (TA)=2 " 
By this construction the problem of whether there is a terminal string w with 
At(w, \[A 1\]) and At(w, \[A 2\]) reduces to the undecidable problem whether L(G 1) N 
L(G 2) = 0. This is because all strings in L(G 1) are assigned the f-structure \[A 1\], all 
strings in L(G 2) are assigned \[A 2\], and only strings in the intersection are derived 
ambiguously with \[A 1\] and \[A 2\]. \[\] 
As a consequence of this theorem we know that we cannot appeal to a general algo- 
rithm for solving the problem of ambiguity-preserving translation. This does not rule 
out the possibility that solutions can be found for specific constructions in translating 
between certain language pairs--for example, the PP ambiguity between English and 
German--but these solutions may depend on a detailed, non-algorithmic contrastive 
analysis for those constructions and languages. 
It is also possible that natural anguage grammars belong to a restricted subclass of 
the LFG and PATR formalisms with properties that do not support he particular proof 
we have given. The f-structures assigned by our grammar G are structurally unrelated 
to the strings they are assigned to, and this seems quite unrealistic. As a minimum, it 
seems that there should be some relationship, perhaps a simple proportion, between 
the size of an f-structure and the length of any string it is assigned to, and that such a 
557 
Computational Linguistics Volume 22, Number 4 
relationship would reduce the problem to an intersection of finite sets. Further study 
is needed to determine which, if any, intuitively plausible restrictions will permit the 
computation of ambiguity-preserving generation in a way that is both effective and 
efficient. 
References 
Kaplan, R. and J. Bresnan. 1982. 
Lexical-Functional Grammar: A formal 
system for grammatical representation. I  
J. Bresnan, editor, The Mental Representation 
of Grammatical Relations. The MIT Press, 
Cambridge, MA, pages 173-281. 
Pollard, C. and I. Sag. 1994. Head-Driven 
Phrase Structure Grammar. The University 
of Chicago Press, Chicago. 
Shieber, S., H. Uszkoreit, F. Pereira, J. 
Robinson, and M. Tyson. 1983. The 
formalism and implementation f 
PATR-II. In B. Grosz and M. Stickel, 
editor, Research on Interactive Acquisition 
and Use of Knowledge. SRI Final Report 
1894. SRI International, Menlo Park, 
pages 39-79. 
Wedekind, J. 1995. Some remarks on the 
decidability of the generation problem in 
LFG- and PATR-style unification 
grammars. In Proceedings ofthe 7th 
Conference ofthe European Chapter of the 
Association for Computational Linguistics. 
Dublin, pages 45-52. 
558 
