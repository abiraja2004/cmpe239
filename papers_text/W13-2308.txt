Proceedings of the 7th Linguistic Annotation Workshop & Interoperability with Discourse, pages 61?69,
Sofia, Bulgaria, August 8-9, 2013. c?2013 Association for Computational Linguistics
Converting Italian Treebanks:
Towards an Italian Stanford Dependency Treebank
Cristina Bosco
Dipartimento di Informatica
Universita` di Torino
cristina.bosco@unito.it
Simonetta Montemagni
Istituto di Linguistica
Computazionale
?Antonio Zampolli?
(ILC?CNR)
simonetta.montemagni@ilc.cnr.it
Maria Simi
Dipartimento di Informatica
Universita` di Pisa
simi@unipi.it
Abstract
The paper addresses the challenge of con-
verting MIDT, an existing dependency?
based Italian treebank resulting from the
harmonization and merging of smaller re-
sources, into the Stanford Dependencies
annotation formalism, with the final aim
of constructing a standard?compliant re-
source for the Italian language. Achieved
results include a methodology for con-
verting treebank annotations belonging
to the same dependency?based family,
the Italian Stanford Dependency Treebank
(ISDT), and an Italian localization of the
Stanford Dependency scheme.
1 Introduction
The limited availability of training resources is
a widely acknowledged bottleneck for machine
learning approaches for Natural Language Pro-
cessing (NLP). This is also the case of dependency
treebanks within statistical dependency parsing.
Moreover, the availability of a treebank in a stan-
dard format strongly improves its usefulness, in-
creasing the number of tasks for which it can be
exploited and allowing the application of a larger
variety of tools. It also has an impact on the relia-
bility of achieved results, and, last but not least, it
permits comparability with other resources.
This motivated a variety of initiatives devoted
to the definition of standards for the linguistic an-
notation of corpora. Since the early 1990s, dif-
ferent initiatives have been devoted to the defi-
nition of standards for the linguistic annotation
of corpora with a specific view to re?using and
merging existing treebanks. The starting point
is represented by the EAGLES (Expert Advisory
Groups on Language Engineering Standards) ini-
tiative, which ended up with providing provisional
standard guidelines (Leech et al, 1996), operat-
ing at the level of both content (i.e. the linguistic
categories) and encoding format. More recent ini-
tiatives, e.g. LAF/GrAF (Ide and Romary, 2006;
Ide and Suderman, 2007) and SynAF (Declerck,
2008) representing on?going ISO TC37/SC4 stan-
dardization activities1, rather focused on the def-
inition of a pivot format capable of representing
diverse annotation types of varying complexity
without providing specifications for the annotation
of content categories (i.e., the labels describing the
associated linguistic phenomena), for which stan-
dardization appeared since the beginning to be a
much trickier matter. Recently, other standard-
ization efforts such as ISOCat (Kemps-Snijders et
al., 2009) tackled this latter issue by providing a
set of data categories at various levels of granu-
larity, each accompanied by a precise definition of
its linguistic meaning. Unfortunately, the set of
dependency categories within ISOCat is still basic
and restricted. We can thus conclude that as far as
content categories are concerned de jure standards
are not suitable at the moment for being used in
the harmonization and merging of real dependency
treebanks.
The alternative to de jure standards is repre-
sented by de facto standards. For what concerns
dependency?based annotation, which in the recent
past has been increasingly exploited for a wide
range of NLP?based information extraction tasks,
the Stanford Dependency (SD) scheme (de Marn-
effe et al, 2006) is gaining popularity as a de
facto standard. Among the contexts where SD has
been applied, we can observe e.g. parsers and
corpora exploited in biomedical information ex-
traction, where it has been suggested to be a suit-
able unifying syntax formalism for several incom-
patible syntactic annotation schemes (Pyysalo et
al., 2007). SD has already been applied to differ-
ent languages, e.g. Finnish in the Turku treebank
(Haverinen et al, 2010), Swedish in the Talbanken
1
http://www.tc37sc4.org/
61
treebank2, Chinese in the Classical Chinese Liter-
ature treebank (Seraji et al, 2012) or Persian in the
Uppsala Persian Dependency Treebank (Lee and
Kong, 2012).
In this paper, we describe the conversion of
an existing Italian resource into the SD annota-
tion scheme, with the final aim of developing a
standard?compliant treebank, the Italian Stanford
Dependency Treebank (ISDT). The reference re-
source, called Merged Italian Dependency Tree-
bank (MIDT)3 (Bosco et al, 2012), is the re-
sult of a previous effort in the direction of im-
proving interoperability of data sets available for
Italian by harmonizing and merging two exist-
ing dependency?based resources, i.e. TUT and
ISST?TANL, adopting incompatible annotation
schemes. The two conversion steps are visual-
ized in Figure 1: note that in both of them the
focus is on the conversion and merging of the con-
tent of linguistic annotation; for what concerns the
representation format, all involved treebanks fol-
low the CoNLL tab?separated format (Buchholz
and Marsi, 2006) which nowadays represents a de
facto standard within the international dependency
parsing community. In this paper, we deal with the
second step, focusing on the MIDT to ISDT con-
version.
Starting from a comparative analysis of the
MIDT and SD annotation schemes, we developed
a methodology for converting treebank annota-
tions belonging to the same dependency?based
family based on:
? a comparative analysis of the source and tar-
get annotation schemes, carried out with re-
spect to different dimensions of variation,
ranging from head selection criteria, depen-
dency tagset granularity to defined annotation
criteria;
? the analysis of the performance of a state?of?
the?art dependency parser by using as train-
ing the source and the target treebanks;
? the mapping of the MIDT annotation scheme
onto the SD data categories.
2
http://stp.lingfil.uu.se/?nivre/swedish treebank/
talbanken-stanford-1.2.tar.gz
3MIDT was developed within the project PARLI
(http://parli.di.unito.it/project en.html) partially
funded in 2008-2012 by the Italian Ministry for Univer-
sity and Research, for fostering the development of new
resources and tools that can operate together, and the
harmonization of existing ones. MIDT is documented at
http://medialab.di.unipi.it/wiki/MIDT/.
Figure 1: Merging and conversion process from
TUT and ISST?TANL to MIDT and ISDT.
In this conversion process, we had to deal
with the peculiarities of the Italian language: the
tackled issues range from morphological richness,
presence of clitic pronouns to relatively free word
order and pro?drop, all properties requiring spe-
cific annotation strategies to be dealt with. There-
fore, a by product of this conversion process is rep-
resented by the specialization of the SD annotation
scheme with respect to Italian.
In the following sections, after briefly describ-
ing the methodology applied for the development
of the MIDT resource (Section 2), we focus on a
comparative analysis of the MIDT and SD anno-
tation schemes (Section 3) followed by a descrip-
tion of the implemented conversion process (Sec-
tion 4). Finally, we present the results obtained by
training a parsing system on the newly developed
resource (Section 5).
2 The starting point: MIDT
ISDT originates from the conversion towards the
SD standard of the MIDT resource, whose origins
and development are summarised below (for more
details on this harmonization and merging step the
interested reader is referred to Bosco et al (2012)).
2.1 The ancestors: TUT and ISST?TANL
The TUT and ISST?TANL resources differ under
different respects, at the level of both corpus com-
position and adopted annotation schemes.
For what concerns size and composition, TUT
(Bosco et al, 2000)4 currently includes 3,452 Ital-
ian sentences (i.e. 102,150 tokens in TUT native,
4
http://www.di.unito.it/?tutreeb/
62
and 93,987 in CoNLL) and represents five dif-
ferent text genres (newspapers, Italian Civil Law
Code, JRC-Acquis Corpus5, Wikipedia and the
Costituzione Italiana), while ISST?TANL includes
3,109 sentences (71,285 tokens in CoNLL for-
mat), which were extracted from the ?balanced?
ISST partition (Montemagni et al, 2003) exem-
plifying general language usage as testified in arti-
cles from newspapers and periodicals, selected to
cover a high variety of topics (politics, economy,
culture, science, health, sport, leisure, etc.).
As far as the annotation scheme is concerned,
TUT applies the major principles of the Word
Grammar theoretical framework (Hudson, 1984)
using a rich set of dependency relations, but it in-
cludes null elements to deal with non?projective
structures, long distance dependencies, equi phe-
nomena, pro?drop and elliptical structures6. The
ISST?TANL annotation scheme originates from
FAME (Lenci et al, 2008), an annotation scheme
which was developed starting from de facto stan-
dards and which was specifically conceived for
complying with the basic requirements of parsing
evaluation, and ? later ? for the annotation of un-
restricted Italian texts.
2.2 Creating the merged MIDT resource
The challenge we tackled in the development of
MIDT was to translate between different annota-
tion schemes and merging them. We focused on
the harmonization and merging of content cate-
gories. To this specific end, we defined a set of
linguistic categories to be used as a ?bridge? be-
tween the specific TUT and ISST?TANL schemes.
First of all, we analyzed similarities and dif-
ferences of the underlying schemes, which led to
identify a core of syntactic constructions for which
the annotations agreed, but also to highlight vari-
ations in head selection criteria, inventory of de-
pendency types and their linguistic interpretation,
projectivity constraint and analysis of specific syn-
tactic constructions. For instance, TUT always
assigns heads on the basis of syntactic criteria,
i.e. the head role is played by the function word
in all constructions where one function word and
one content word are involved (e.g. determiner?
noun, verb?auxiliary), while in ISST?TANL head
selection follows from a combination of syntactic
5
http://langtech.jrc.it/JRC-Acquis.html
6The CoNLL format does not include null elements, but
the projectivity constraint is maintained at the cost of a loss
of information with respect to native TUT in some cases.
and semantic criteria (e.g. in determiner?noun and
auxiliary?verb relations the head role is played by
the content word). Both schemes assume differ-
ent inventories of dependency types and degrees
of granularity in the representation of specific re-
lations. Moreover, whereas ISST?TANL allows
for non?projective representations, TUT assumes
the projectivity constraint. Further differences are
concerned with the treatment of coordination and
punctuation, which are particularly problematic to
deal with in the dependency framework.
As a second step, we defined a bridge anno-
tation, i.e. the MIDT dependency tagset, fol-
lowing practical considerations: bridge categories
should be automatically reconstructed by exploit-
ing morpho?syntactic and dependency informa-
tion contained in the original resources; for some
constructions, the MIDT representation is parame-
terizable, i.e. the tagset provides two different op-
tions, corresponding to the TUT and ISST?TANL
annotation styles (e.g. for determiner?noun or
preposition?noun relations).
The final MIDT tagset contains 21 dependency
tags (as opposed to the 72 tags of TUT and the
29 of ISST?TANL), including the different op-
tions provided for the same type of construction.
CoNLL is used as encoding format.
3 Comparing the MIDT and SD schemes
The MIDT and SD annotation schemes are both
dependency?based and therefore fall within the
same broader family. This fact, however, does
not guarantee per se an easy and linear conver-
sion process from one to the other: as pointed out
in Bosco et al (2012), harmonizing and convert-
ing annotation schemes can be quite a challenging
task, even when this process is carried out within
a same paradigm and with respect to the same lan-
guage. In the case at hand, this task is made easier
thanks to the fact that the MIDT and SD schemes
share similar design principles: for instance, in
both cases preference is given a) to relations which
are semantically contentful and useful to appli-
cations, or b) to relations linking content words
rather than being indirectly mediated via function
words (see design principles 2 and 5 respectively
in de Marneffe and Manning (2008a)). Another
peculiarity shared by MIDT and SD consists in the
fact that they both neutralize the argument/adjunct
distinction for what concerns prepositional com-
plements, which is taken to be ?largely useless
63
in practice? as de Marneffe and Manning (2008a)
claim. In spite of their sharing similar design prin-
ciples, there are also important differences con-
cerning the inventory of dependency types and
their linguistic interpretation, the head selection
criteria as well as the treatment of specific syn-
tactic constructions. In what follows, we summa-
rize the main dimensions of variation between the
MIDT and SD annotation schemes, with a specific
view to the conversion issues they arise.
3.1 Granularity and inventory of dependency
types
MIDT and SD annotation schemes assume differ-
ent inventories of dependency types characterized
by different degrees of granularity in the repre-
sentation of specific relations: the adopted depen-
dency tagset includes 21 dependency types in the
case of MIDT and 48 in the case of SD. Interest-
ingly however, it is not always the case that the
finer grained annotation scheme ? i.e. SD ? is the
one providing more granular distinctions: whereas
this is typically the case, there are also cases in
which more granular distinction are adopted in the
MIDT annotation scheme.
Consider first SD relational distinctions which
are neutralized at the level of the MIDT annota-
tion. As reported in de Marneffe and Manning
(2008a), so?called NP?internal relations are crit-
ical in real world applications: the SD scheme
therefore includes many relations of this kind,
e.g. appos (appositive modifier), nn (noun com-
pound), num (numeric modifier), number (ele-
ment of compound number) and abbrev (abbre-
viation). In MIDT all these relation types are
lumped together under the general heading of mod
(modifier). To deal with these cases, the MIDT to
SD conversion has to simultaneously combine de-
pendency and morpho?syntactic information (e.g.
the morpho?syntactic category of the nodes in-
volved in the relation), which however is not al-
ways sufficient as in the case of appositive modi-
fiers for which further evidence is needed.
Let us consider now the reverse case, i.e. in
which MIDT adopts finer?grained distinctions
with respect to SD. For instance, MIDT envis-
ages different relation types for auxiliary?verb and
preposition?verb (within infinitive clauses, be they
modifiers or subcategorized arguments) construc-
tions, which are aux and prep respectively. By
contrast, SD represents both cases in terms of the
same relation type, i.e. aux. Significant differ-
ences between English and Italian justify the dif-
ferent strategies adopted in SD and MIDT respec-
tively: in English, open clausal complements are
always introduced by the particle ?to?, whereas in
Italian different prepositions can introduce them
(i.e. ?a?, ?di?, ?da?), which are selected by the gov-
erning head. The SD representation of the element
introducing infinitival complements and modifiers
in terms of aux might not be appropriate as far as
Italian is concerned and it would be preferable to
have a specific relation for dealing with introduc-
ers of infinitival complements (like complm in the
case of finite clausal complements): as reported
in Section 4, we are currently evaluating different
representational options with a specific view to the
syntactic peculiarities of the Italian language.
Another interesting and more complex exam-
ple can be found for what concerns the parti-
tioning of the space of sentential complements.
MIDT distinguishes between mod(ifiers) on the
one hand and subcategorised arg(uments) on the
other hand: note that whereas arg is restricted
to clausal complements subcategorized for by the
governing head, the mod relation covers different
types of modifiers (nominal, adjectival, clausal,
adverbial, etc.). By contrast, SD resorts to spe-
cific relations for dealing with sentential comple-
ments: in particular, distinct relation types are en-
visaged depending on e.g. whether the clause is
a subcategorized complement or a modifier (see
e.g. ccomp vs advcl), or whether the gov-
ernor is a verb or a noun (see e.g. xcomp vs
infmod), or whether the clausal complement is
headed by a finite or non?finite verb (see e.g.
ccomp vs xcomp). Starting from MIDT, the
finer?grained distinctions adopted by SD for deal-
ing with clausal complements can be recovered by
combining dependency information with morpho-
syntactic one (e.g. the mood of the verbal head of
the clausal complements or the morpho?syntactic
category of the governing head).
3.2 Head selection
Criteria for distinguishing the head and the de-
pendent within relations have been widely dis-
cussed in the linguistic literature in all frameworks
where the notion of syntactic head plays an im-
portant role. Unfortunately, different criteria have
been proposed, some syntactic and some seman-
tic, which do not lead to a single coherent notion
64
of dependency (Ku?bler et al, 2009). Head se-
lection thus represents an important and unavoid-
able dimension of variation among dependency
annotation schemes, especially for what con-
cerns constructions involving grammatical func-
tion words. MIDT and SD agree on the treat-
ment of tricky cases such as the determiner?noun
relation within nominal groups, the preposition?
noun relation within prepositional phrases as well
as the auxiliary?main verb relation in complex
verbal groups. In both schemes, head selection
follows from a combination of syntactic and se-
mantic criteria: i.e. whereas in the determiner?
noun and auxiliary?verb constructions the head
role is assigned to the semantic head (noun/verb),
in preposition?noun constructions the head role is
played by the element which is subcategorized for
by the governing head, i.e. the preposition which
is the syntactic head but can also be seen as as a
kind of role marker. In this area, the only but not
negligible difference is concerned with subordi-
nate clauses whose head in SD is assumed to be the
verb, rather than the introducing element (whether
a preposition or a subordinating conjunction) as in
MIDT: in this case, the MIDT to SD conversion
requires restructuring of the dependency tree.
3.3 Coordination and punctuation
In both MIDT and SD schemes, coordinate con-
structions are considered as asymmetric structures
with a main difference: while in MIDT both
the conjunction and conjuncts starting from the
second one are linked to the immediately pre-
ceding conjunct, in SD the conjunction(s) and
the subsequent conjunct(s) are all linked to the
first one. Also the treatment of punctuation is
quite problematic in the framework of a depen-
dency annotation scheme, although this has not
been specifically dealt with in the linguistic liter-
ature. Whereas MIDT has its own linguistically?
motivated strategy to deal with punctuation, SD
does not appear to provide explicit and detailed
annotation guidelines in this respect.
3.4 MIDT? or SD?only relations
It is not always the case that a dependency type
belonging to the MIDT or SD annotation scheme
has a counterpart in the other. Let us start from SD
relation types which are not explicitly encoded in
the MIDT source annotation, due to constraints of
the CoNLL representation format. This is the case
of the ref dependency linking the relative word
introducing the relative clause and its antecedent,
or of the xsubj relation which in spite of its being
part of the original TUT and ISST resources have
been omitted from the most recent and CoNLL?
compliant versions, which represent the starting
point of in MIDT: in both cases, the ?one head
per dependent? constraint of the CoNLL repre-
sentation format is violated. From this, it fol-
lows that ISDT won?t include these dependency
types. Other SD relations which were part of the
MIDT?s ancestors but were neutralized in MIDT
are concerned with semantically?oriented distinc-
tions which turned out to be problematic to be
reliably identified in parsing in spite of their be-
ing explicitly encoded in both source annotation
schemes (Bosco et al, 2012). This is the case of
the indirect object relation (iobj) or of temporal
modifiers (tmod).
The MIDT relation types which instead do not
have a corresponding relation in SD are those
that typically represent Italian?specific peculiari-
ties. This is the case of the clit(ic) dependency,
linking clitic pronouns to the verbal head they re-
fer to. In MIDT, whenever appropriate clitic pro-
nouns are assigned a label that reflects their gram-
matical function (e.g. ?dobj? or ?iobj?): this is the
case of reflexive constructions (Maria si lava lit.
?Maria her washes? meaning that ?Maria washes
herself?) or of complements overtly realized as
clitic pronouns (Giovanni mi ha dato un libro lit.
?Giovanni to?me has given a book? meaning that
?Giovanni gave me a book?). With pronominal
verbs, in which the clitic can be seen as part of
the verbal inflection, a specific dependency rela-
tion (clit) is resorted to link the clitic pronoun
to the verbal head: for instance, in a sentence like
la sedia si e` rotta lit. ?the chair it is broken? mean-
ing that ?the chair broke?, the dependency linking
the clitic si to the verbal head is clit.
4 The MIDT to SD conversion
The conversion process followed to generate the
Italian Stanford Dependency Treebank (ISDT)
starting from MIDT is based on the results of the
comparative analysis reported in the previous sec-
tion. It is organized in two different steps: the
first one aimed at generating an enriched version
of the MIDT resource, henceforth referred to as
MIDT++, including SD?relevant distinctions neu-
tralized in MIDT, and the second one in charge
of converting the MIDT++ annotation in terms
65
of the Stanford Dependencies as described in de
Marneffe and Manning (2008b) specialized with
respect to the Italian language syntactic peculiar-
ities. Note that also the resulting ISDT resource
adheres to the CoNLL tabular format.
The first step relied on previous harmonization
work leading to the construction of the MIDT re-
source starting from the CoNLL?compliant TUT
and ISST?TANL treebanks (described in Bosco
et al (2012)). During this step, we recovered
from the native resources relevant distinctions
that have been neutralized in MIDT, because of
choices made in the design of the MIDT anno-
tation scheme (e.g. indirect objects or temporal
modifiers which are assigned an underspecified
representation in MIDT, see Section 3) or simply
because the harmonization of the source annota-
tion schemes was not possible without manual re-
vision (this is the case of appositions, explicitly
annotated only in TUT).
Other issues tackled during this first pre?
processing step include the treatment of coordi-
nation and multi?word expressions. Since in SD
conjunctions and conjuncts, after the first one, are
all linked to the first conjunct, exactly as it was
in ISST?TANL, the intermediate MIDT++ is gen-
erated according to this scheme, with no conver-
sion for ISST?TANL and by restructuring the dif-
ferent cascading coordination style of TUT. For
what concerns multi?word expressions, we unified
the multi?word repertoires of the two resources.
Another area that required some pre?processing
with manual revision is concerned with the anno-
tation of the parataxis relation. The augmented re-
source resulting from this pre?processing step, i.e.
MIDT++, is used as a ?bridge? towards the SD
representation format.
Starting from the results of the comparative
analysis detailed in Section 3, we defined conver-
sion patterns which can be grouped into two main
classes according to whether they refer to individ-
ual dependencies (case A) or they involve depen-
dency subtrees due to head reassignment (case B).
A) Structure?preserving mapping rules involv-
ing dependency retyping without restructur-
ing of the tree:
A.1) 1:1 mapping requiring dependency retyp-
ing only (e.g. MIDT prep > SD pobj, or
MIDT subj > SD nsubj);
A.2) 1:n mapping requiring finer?grained de-
pendency retyping (e.g. MIDT mod > SD
abbrev | amod | appos | nn | nnp |
npadvmod | num | number | partmod |
poss | preconj | predet | purplcl |
quantmod | tmod);
B) Tree restructuring mapping rules involving
head reassignment and dependency retyping.
Focusing on dependency retyping we distin-
guish the following cases:
B.1) head reassignment with 1:1 dependency
mapping (e.g. MIDT subj > SD csubj
in the case of clausal subjects);
B.2) head reassignment with 1:n dependency
mapping based on finer?grained distinctions
(e.g. MIDT arg> SD xcomp? ccomp, or
MIDT mod (with verbal head) > SD advcl
| infmod | prepc | purpcl).
In what follows, we will exemplify how the ab-
stract patterns described above have been trans-
lated into MIDT to SD conversion rules. The
conversion of the MIDT arg relation, referring
to clausal complements subcategorized for by the
governing head, represents an interesting example
of 1:n dependency mapping with tree restructuring
(case B.2 above). In MIDT, clausal complements,
either finite or non?finite clauses, are linked to the
governing head (which can be a verb, a noun or an
adjective) as arg(uments), with a main difference
with respect to SD, i.e. that the head of the clausal
complement is the word introducing it (be it a
preposition or a subordinating conjunction) rather
than the verb of the clausal complement. The main
conversion rules to SD can be summarised as fol-
lows, where the? separates the left from the right
hand side of the rule, the notation x ?dep label y
denotes that token y is governed by token x with
the dependency label specifying the relation hold-
ing between the two (a MIDT tag is found on the
left side of the rule, whereas an SD one occurs on
the right side):
1. $1[S|V |A] ?arg $2[E] ?prep $3[Vinfinitive] ?
$1 ?xcomp $3; $3 ?aux $2
2. $1[S|V |A] ?arg $2[CS] ?sub $3[Vfinite] ?
$1 ?ccomp $3; $3 ?complm $2
In the rules, the $ followed by a number is a vari-
able indentifying a given dependency node. Con-
straints on tokens in the left?hand side of the rule
66
(a) MIDT representation (b) SD representation
Figure 2: MIDT vs SD annotation of the same sentence
are reported within square brackets: they are typi-
cally concerned with the grammatical category of
the token (CS stands for subordinative conjunc-
tion, E for preposition, S for noun, V for verb).
Rule 1 above handles the transformation of the in-
finitival clause from the MIDT representation to
SD. Consider as an example the MIDT depen-
dency tree in Figure 2(a) for the sentence Gio-
vanni ha dichiarato ai giudici di avere pagato i
terroristi, lit. ?Giovanni told to?the judges to have
paid the terrorists? ?Giovanni told the judges that
he has paid the terrorists? whose SD conversion is
reported in Figure 2(b). By comparing the trees,
we see that head restructuring and dependency re-
typing have both been performed in the conversion
of the infinitival clause representation: in MIDT
the head of the infinitival clause is the preposition
whereas in SD it is the verb; the relation linking
the governing head and the head of the infinitival
clause is arg in MIDT and xcomp in SD.
Currently, the conversion script implements
over 100 rules which are still being tested with the
final aim of finding the most appropriate represen-
tation with respect to the Italian syntactic pecu-
liarities. The problematic area of sentential com-
plements is still being explored to find out ade-
quate representational solutions. Consider as an
example the case of the word introducing infiniti-
val complements: Figure 2(b) above, reporting the
result of the SD conversion, shows that the same
aux relation is used to link the preposition to the
verb heading the infinitival complement as well as
the auxiliary avere ?to have? to the main verb. This
solution might not be so appropriate given the pe-
culiarities of the Italian language, where different
prepositions (lexically selected by the governing
head) can introduce infinitival complements.
During the conversion step, the SD scheme
has been specialized with respect to the Italian
language. There are SD dependency relations
which were excluded from the Italian localization
of the standard scheme, either because not ap-
propriate given the syntactic peculiarities of this
language (this is the case e.g. of the prt re-
lation) or because they could not be recovered
from the CoNLL?compliant versions of the re-
sources we started from (see e.g. the relations
ref or xsubj). The SD tagset was also extended
with new dependency types: this is the case of
the clit relation used for dealing with clitics in
pronominal verbs, or of the nnp relation specifi-
cally defined for compound proper nouns. Other
specializations are concerned with the use of un-
derspecified categories: rather than resorting to the
most generic relation, i.e. dep used when it is im-
possible to determine a more precise dependency
relation, we exploited the hierarchical organiza-
tion of SD typed dependencies, i.e. we used the
comp and mod relations when we could not find
an appropriate relation within the set of their de-
pendency subtypes.
5 Using ISDT as training corpus
In this section, we report the results achieved
by using ISDT for training a dependency parser,
namely DeSR (Dependency Shift Reduce), a
transition?based statistical parser (Attardi, 2006),
where it is possible to specify, through a config-
uration file, the set of features to use (e.g. POS
tag, lemma, morphological features) and the clas-
sification algorithm (e.g. Multi-Layer Perceptron
(Attardi and Dell?Orletta, 2009), Support Vector
Machine, Maximum Entropy). DeSR has been
trained on TUT and ISST?TANL in the frame-
work of the evaluation campaigns Evalita, for
the last time in 2011 (Bosco and Mazzei, 2012;
Dell?Orletta et al, 2012). More recently DeSR has
been trained and tested on MIDT: the results ob-
67
Table 1: Parsing results with ISDT resources
TRAINING TEST PARSER LAS LAS no punct
TUT?SDT train TUT?SDT test DeSR MLP 84.14% 85.57%
ISST?TANL?SDT train ISST?TANL?SDT test DeSR MLP 80.55% 82.11%
TUT+ISST?TANL?SDT train TUT+ISST?TANL?SDT test DeSR MLP 83.34% 84.16%
TUT+ISST?TANL?SDT train TUT?SDT test DeSR MLP 84.14% 85.79%
TUT+ISST?TANL?SDT train ISST?TANL?SDT test DeSR MLP 79.94% 81.86%
tained on both the MIDT version of the individual
TUT and ISST?TANL resources and the merged
resource are reported in (Bosco et al, 2012): the
best scores, achieved applying a parser combina-
tion strategy and training on TUT inMIDT format,
are LAS 90.11% and LAS 91.58% without punc-
tuation.
For the experiments on the ISDT resource we
used a basic and fast variant of the DeSR parser
based on Multi-Layer Perceptron (MLP). In fact,
the purpose of the experiment was not to optimize
the parser for the new resource but to compare
relative performances of the same parser on dif-
ferent versions of the same resources. As a re-
sult, the substantial drop in performance observed
with respect to the MIDT resource is in part due to
this factor, and cannot be totally attributed to the
greater complexity of the SD scheme or quality of
the conversion output.
Table 1 reports, in the first two rows, the val-
ues of Labeled Attachment Score (LAS, with and
without punctuation) obtained against the TUT?
ISDT and ISST?TANL?ISDT datasets. The differ-
ent performance of the parser on the two converted
datasets (TUT?ISDT and ISST?TANL?ISDT) is in
line with what was observed in previous exper-
iments with native resources and MIDT (Bosco
et al, 2010; Bosco et al, 2012); therefore, the
composition of the training and test corpora can
still be identified as possible causes for such a dif-
ference. The results reported in rows 3?5 have
been obtained by training DeSR with the larger
resource including both TUT?ISDT and ISST?
TANL?ISDT. As test set, we used a combination
of the two test sets (row 3) and test sets from the
two data sets separately (rows 4 and 5). The pre-
liminary results achieved by using ISDT are en-
couraging, in line with what was obtained on the
WSJ for English and reported in (Cer et al, 2010),
where the best results in labeled attachment preci-
sion, achieved by a fast dependency parser (Nivre
Eager feature Extract), is 81.7. For the time being,
training with the larger combined resource does
not seem to provide a substantial advantage, con-
firming results obtained with MIDT, despite the
fact that in the conversion from MIDT to ISDT
a substantial effort was spent to further harmonize
the two resources.
6 Conclusion
In this paper, we addressed the challenge of con-
verting MIDT, an existing dependency?based Ital-
ian treebank resulting from the harmonization and
merging of smaller resources adopting incompati-
ble annotation schemes, into the Stanford Depen-
dencies annotation formalism, with the final aim
of constructing a standard?compliant resource for
the Italian language. SD, increasingly acknowl-
edged within the international NLP community as
a de facto standard, was selected for its being de-
fined with a specific view to supporting informa-
tion extraction tasks.
The outcome of this still ongoing effort is three?
fold. Starting from a comparative analysis of
the MIDT and SD annotation schemes, we devel-
oped a methodology for converting treebank anno-
tations belonging to the same dependency?based
family. Second, Italian has now a new standard?
compliant treebank, i.e. the Italian Stanford De-
pendency Treebank (ISDT, 200,516 tokens)7: we
believe that this conversion will significantly im-
prove the usability of the resource. Third, but not
least important, we specialized the Stanford De-
pendency annotation scheme to deal with the pe-
culiarities of the Italian language.
7 Acknowledgements
This research was supported by a Google ?gift?.
Giuseppe Attardi helped with the experiments
with the DeSR parser, Roberta Montefusco pro-
duced the converter to the collapsed/propagated
version of ISDT and in so doing helped us to re-
duce inconsistencies and errors in the resource.
7Both the MIDT and ISDT resources are released by
the authors under the Creative Commons Attribution?
NonCommercial-ShareAlike 3.0 Unported licence
(http://creativecommons.org/licenses/by-nc-sa/3.0/
legalcode.txt).
68
References
G. Attardi and F. Dell?Orletta. 2009. Reverse revision
and linear tree combination for dependency parsing.
In Proceedings of of NAACL HLT (2009).
G. Attardi. 2006. Experiments with a multilanguage
non?projective dependency parser. In Proceedings
of the CoNLL-X ?06, New York City, New York.
C. Bosco and A. Mazzei. 2012. The evalita 2011 pars-
ing task: the dependency track. In Working Notes of
Evalita?11, Roma, Italy.
C. Bosco, V. Lombardo, L. Lesmo, and D. Vassallo.
2000. Building a treebank for italian: a data-driven
annotation schema. In Proceedings of the LREC?00,
Athens, Greece.
C. Bosco, S. Montemagni, A. Mazzei, V. Lombardo,
F. Dell?Orletta, A. Lenci, L. Lesmo, G. Attardi,
M. Simi, A. Lavelli, J. Hall, J. Nilsson, and J. Nivre.
2010. Comparing the influence of different treebank
annotations on dependency parsing. In Proceedings
of the LREC?10, Valletta, Malta.
C. Bosco, M. Simi, and S. Montemagni. 2012. Harmo-
nization and merging of two italian dependency tree-
banks. In Proceedings of the LREC 2012 Workshop
on Language Resource Merging, Istanbul, Turkey.
Sabine Buchholz and Erwin Marsi. 2006. Conll-x
shared task on multilingual dependency parsing. In
In Proc. of CoNLL, pages 149?164.
D. Cer, M.C. de Marneffe, D. Jurafsky, and C.D. Man-
ning. 2010. Parsing to stanford dependencies:
Trade-offs between speed and accuracy. In Proceed-
ings of the LREC?10), Valletta, Malta.
M.C. de Marneffe and C. Manning. 2008a. The stan-
ford typed dependencies representation. In Col-
ing 2008: Proceedings of the workshop on Cross-
Framework and Cross-Domain Parser Evaluation,
pages 1?8, Stroudsburg, PA, USA. Association for
Computational Linguistics.
M.C. de Marneffe and C.D. Manning. 2008b. Stan-
ford typed dependencies manual. Technical report,
Stanford University.
M.C. de Marneffe, B. MacCartney, and C.D. Manning.
2006. Generating typed dependency parses from
phrase structure parses. In Proceedings of 5th In-
ternational Conference on Language Resources and
Evaluation (LREC 2006).
T. Declerck. 2008. A framework for standardized syn-
tactic annotation. In Proceedings of the LREC?08,
Marrakech, Morocco.
F. Dell?Orletta, S. Marchi, S. Montemagni, G. Venturi,
T. Agnoloni, and E. Francesconi. 2012. Domain
adaptation for dependency parsing at evalita 2011.
In Working Notes of Evalita?11, Roma, Italy.
K. Haverinen, T. Viljanen, V. Laippala, S. Kohonen,
F. Ginter, and T. Salakoski. 2010. Treebanking
Finnish. In Proceedings of the 9th Workshop on
Treebanks and Linguistic Theories (TLT-9), pages
79?90, Tartu, Estonia.
R. Hudson. 1984. Word Grammar. Basil Blackwell,
Oxford and New York.
N. Ide and L. Romary. 2006. Representing linguistic
corpora and their annotations. In Proceedings of the
LREC?06, Genova, Italy.
N. Ide and K. Suderman. 2007. GrAF: A graph-based
format for linguistic annotations. In Proceedings of
the Linguistic Annotation Workshop, Prague, Czech
Republic.
M. Kemps-Snijders, M. Windhouwer, P. Wittenburg,
and S.E. Wright. 2009. Isocat: remodelling meta-
data for language resources. IJMSO, 4(4):261?276.
S. Ku?bler, R.T. McDonald, and J. Nivre. 2009. De-
pendency Parsing. Morgan & Claypool Publishers,
Oxford and New York.
John Lee and Yin Hei Kong. 2012. A dependency
treebank of classical chinese poems. In Proceed-
ings of the 2012 Conference of the North Ameri-
can Chapter of the Association for Computational
Linguistics: Human Language Technologies, pages
191?199, Montre?al, Canada, June. Association for
Computational Linguistics.
G. Leech, R. Barnett, and P. Kahrel. 1996. Eagles rec-
ommendations for the syntactic annotation of cor-
pora. Technical report, EAG-TCWG-SASG1.8.
A. Lenci, S. Montemagni, V. Pirrelli, and C. Soria.
2008. A syntactic meta?scheme for corpus anno-
tation and parsing evaluation. In Proceedings of the
LREC?00, Athens, Greece.
S. Montemagni, F. Barsotti, M. Battista, N. Calzo-
lari, O. Corazzari, A. Lenci, A. Zampolli, F. Fan-
ciulli, M. Massetani, R. Raffaelli, R. Basili, M. T.
Pazienza, D. Saracino, F. Zanzotto, N. Mana, F. Pi-
anesi, and R. Delmonte. 2003. Building the Italian
Syntactic-Semantic Treebank. In A. Abeille?, editor,
Building and Using syntactically annotated corpora.
Kluwer, Dordrecht.
S. Pyysalo, F. Ginter, K. Haverinen, J. Heimonen,
T. Salakoski, and V. Laippala. 2007. On the uni-
fication of syntactic annotations under the Stanford
dependency scheme: A case study on Bioinfer and
GENIA. In BioNLP 2007: Biological, transla-
tional, and clinical language processing, pages 25?
32, Prague.
M. Seraji, B. Megyesi, and J. Nivre. 2012. Bootstrap-
ping a persian dependency treebank. Special Issue
of Linguistic Issues in Language Technology (LiLT)
on Treebanks and Linguistic Theories, 7.
69
