A MODEL FO\](~ 'D IL~SFER CONTROL IN THE METAL MT-SYS'rEM 
Jmm A. ALONSO 
Siemens CDS 
e/Luis Mitntada% 5 
CORNELLA, 08940-BARCELONA, Spain 
A~stract  
Ta.~ p~esant paper tries to outlln~ a model to 
~nhanc~ tile trm~sfer control within the N~T;d. Machine 
Translation, System. The model is being currently tested An 
th~ ~srman-Spanish system which is under development in 
Barcelona and relies upon techniques belonging to the GPSG 
framework. The central idea is to extract from the transfer 
part of th,~ phrase structure rules currently used by METAL 
all the :4elevant generalizable information about feature 
traffic and control dependences, and put at in form of 
language-dependent tables. This infomnaticn is then accessed 
and h~mdled by a few high-level rule operators, called 
during th,~ transfe~ process, implementing three general 
feature pz:~nciples. The grammar writer is thereby relieved 
from the todinus task of controlling all the feature traffic 
between nodes, this resulting in a clea~er, shorter and 
safer grab,mr for the system. 
L- Introduction? 
~2h\[s paper, presents a proposal for the application 
of so~e G~3G-based teclu*iqees on the ~.~TAL ~I'? syst~,~ ~ith 
the ai~l of endowing the systea with a stzonge~ control in 
the ~iransf~r Phase. 
%%8 ce~tral idea upon which this Yrm~sfer Control 
,Lodel is eased is to provide the grmmnar w~'ite~ with a 
t~.oufo~tabls and safe means fez' keeping as much feature 
traffic as possible cont~olled in the Transfer Phase of the 
t~anslatioa process in METAl,. Currently, any kind of 
feature traffic between nodes must be explicitely stated in 
the ~'ules, and the same happens ~ith the ck~ild node 
t_~ansfe~ ~t'ocess (Control Dependences). 
\[(t seems reasonable to think that a great deal of 
bot~.~ this feature traffic between nodes and the control 
dependences with~u the t~ansfer phase could be generalized 
~ud ~:tated outside the rifles, in form of lan~age-dependent 
tables which would the~ be accessed by a few general 
operato~ called in the rtiles (implementing the principles 
proposed l:elow). The gram~m~ ~riter would thus be relieved 
fi'e.~ thi~', task, all this resulting iu sho~ter, clearer and 
less e~e~'p~one rules. 
~ost of the ideas conforming the model presented 
he~:~ have be~a~ t~keu f~:om the ~PSG framework \[Gazda~ 85\]. 
The original idea was to directly apply the &~SG principles 
I;o the syste~b since, basically, ME'2~, disposes of the 
necessary structure for it (i.e., it is a PS-based systen b 
and thus, it works with structu~.al d~scriptions \[trees\] 
consisting of bundles of featu~e~value pai~s \[nodes\]). 
However, the fact that the GPSG model was originally 
conceived for analysis (transfer being quite a different 
problem) and that METAL lacks mechanisms which are central 
to the GPSG model, like LP/ID ~ules, metarules, FSD and FCR, 
etc., showed the unpracticability of such a direct appruach. 
This is why the idea became to adapt som~ 0? the ideas 
offered by the GPSG (mostly the CAP and the HFC universal 
feature inst~tiatioa principle~) and we~fo~mulate th~ so 
that they can be us~!d fez 0an purposes. 
2.- Fundmnenta ls  of the NtETAL systet , .  
METAL is  a Cha~t'opar~erHdrivan Phi:ass Stru(:tuz'e 
based MT system, which reflects the classic MT scheme o~f 
Analysis, Transfer and Generation phases. During the 
Analysis Phase, METAL builds from each input sou:,:'ce imlsusse 
sentence one or more structural descriptions {henceforth 
trees), consisting of nodes, which in turn consist of a 
number of Feature-Value pairs (henceforth f~v-pairs), )in 
the Transfer Phase, the trees obtained in the analysis are 
converted into equivalent trees adapted to the target 
language needs. After this, the Generation Phase genes'stem 
the output sentence/s in the target language , using the 
transfer trees as input. 
Apa~-t from the lexical DBs METAL has some 500 PS 
rules, whose form can roughly be described as follows: 
19 
<RULE.IDENTIFIER> 
NODE-STRUCTURE <e.g, "NP --> DET NO"> 
TEST <Tests on nodes to be satisfied in order for the 
rule to apply> 
CONSTR <Analysis-Tree Construction part> ~NALYSIS PART 
INTEGR <Anaphora Resolution part> TRANSFER PART 
TRANSFER <Transfer-Tree construction part> 
During the Analysis phase, only the analysis part of 
the succeeding rules apply, building the analysis tree in a 
bottom-up manner until a S node is reached. Once the 
analysis tree has been thus built, the Transfer Phase 
starts; the transfer part of the rules applied during 
analysis activates now, climbing down the tree from top to 
bottom until the terminal nodes are transferred. When the 
Transfer Process applies on a node N, with f-v-pairs F-V, 
the child nodes of N are also transferred (and the child 
nodes of these, and so on, until terminal nodes are 
reached). Once all the branching nodes dominated by N have 
been transferred, the transfer process returns control to 
the father of N, which now bears target-language updated 
f-v-pairs F-V'. 
Two tasks central to the Transfer Process are the 
Feature Traffic (i.e., ,hich f-v-pairs need to be sent up 
and down in which moment, and from which node to which 
node/s), and the handling of Control Dependences (i.e., 
which child node of one analysis tree or sub-trme 
\[henceforth local tree\] must be transferred first, in order 
for other slbling nodes to be able to be rightly 
transferred). 
The two mentioned tasks ere now handled by the 
Grammar writer in the Transfer part of the t~TAL Grammar 
Rules through calls to "low level" feature traffic operators 
(i.e., copy one or more f-v-pairs from the root node to a 
child node, from one child node to another sibling node, or 
from one child node to the root node). 
What the present Transfer Control Model proposes is 
to extract from the rules ell which can be generalizable in 
this process regarding feature traffic and control 
dependences end carry it out through calls to a few "high 
level" operators which use information stored in the syst~ 
database in form of tables stating which f-v-pairs must be 
present in a given node, which nodes are controllers, end 
which other nodes are oontrollees within a given local tree. 
3.- Basic Definitions. 
In this section there follows a number of 
definitions which will be used throughout the rest of the 
paper. 
3.1.- Local tree. 
A local tree is a part of a structural description 
which is currently being dealt with by the particular rule 
which is under consideration. For example, given an analysis 
tree of the form 
CLS \[I\] 
/ \ 
DET NO\[2\] 
/ \ 
ADJ N013\] 
/ \ 
NST N-FLEX 
in which the number between \[\] indicates (for reference) the 
rule which has built this particular node, the local tree 
when rule \[2\] is applied would be: /No{2\] 
ADO NO\[3) 
whereas the local tree for rule \[3\] would be 
/Nof3I . 
NST N-FLEX 
3.2.- Types of nodes 
Root Node \[RN\]: 
* The root \[parent\] node of a local  tree. 
Head Node \[HN\]: 
* In case Control Dependences (see below) exist  within 
the current local tree, the Head Node is the 
controller node. Otherwise, the Head Node must be 
egplicitely stated for each particular tree 
structure, normally being the X(BAR-I) child node, 
in a local tree d~inated by a root node X(BAR) 
Notice that this definition of Head Node has been 
tailored ad-hoc for this model end deviates considerably 
fro~ the traditional notion of Head in the X-bar theory, for 
instance. 
Dependent  Node \[DN\]: 
A chi ld node of the local  t ree which is  control led 
bya  ~,  
Free Node \[FN\]: 
A chi ld node of the local  t ree which i s  not 
control led by any HN. 
20 
Lex iea l  Node \ [LN\] :  
A t t~rainal  ex ica l  node. 
3?3- Type,~ o f  Features  
Head Feat lwes  \ [HF \ ] :  
* A s~t of f-v-pairs which must be present with the 
some values both in the Bead Node and in the Boot 
Node in some precise momenta during the Translation 
Process. 
Lexical Access Features \[LAF\]: 
* A ll~t of f-v-pairs Which must be present in the 
Lex/Lcal Nodes nodes prior to their transference into 
the target language. 
Contro l  Features  \ [CF\ ] :  
* A sect of f-v-pairs which must be copied from the 
Bead Node s into the Dependent Node/s after the Head 
Nod~ has been transferred and before the Dependent 
N~le/a is/are transferred. 
3.4 . -Cent ra l  Dependence  Between Nodes  
* A H~ad Node \[HN\] cont ro l s  one or more Dependant 
NC~J~/S \[DN\] within a local tree if in order for the 
DN/4 to be properly transferred, It/they must have a 
set of f-v-pairs whose particular values are to be 
updated with those values borne by the HN after this 
n~i~3 has been transferred. 
Bad:really, our notion of Control coincides with the 
one given by the GKPS \[Gazder 85 \ ] .  Control is a 
language-dependent relationship between nodes, in which 
there  i s  a cont ro l le r  node and one or  more contgu l lee  
node/s, which ultimately subsumes the concept of agreement 
(subject-predicate, noun-adjective, etc.). In the Transfer 
Process, nodes which are controllers must be transferred 
prior to their controlleas, in order to ensure the right 
agreement b~tween them in the target language. 
Not:.~cs that  a loca l  t ree  may present  d i f fe rent  types 
of Control l~pendences (see Fig. I), with one Dependent Node 
(the NP\[2\] z~ode below, dominating a loca l  t ree  where the  NO 
node controJ.s the DET node for Gender and Number), with two 
Dependent Nodes (the CLS node dominating a local tree where 
the NP\[$SUBJ\] controls both the PRED node for Person and 
NumSer and the ~DJ node for Gender and Number), or no 
Dependent Nodes at all (the PP node dominating a local, tree 
where neitht,r the NP node nor the PREP nodes control each 
other) : 
CLS 
\[$so~J\] -c ..... > PREy AoJ 
NP\[2\] PP I CD2 I 
/ \ / \  I I 
D~-T NO PREP ~ I I 
I < ' - "  I I I I I 
I CO I I I I I ! ! ! ! ! ! 
La casa de Juan es v ie j -a  
DET NST VST AST 
F, Sg F, Sg 3Ps, Sg F, Sg 
\[The house of John is old \] 
Fig.l: Control Dependences 
3.5.- Loca l  T rans fer  P rocess  
Given a loca l  t ree ,  cons is t ing  of  a Root Node a. 
one or more child nodes (including a Bead Node, and 
possibly one or more Dependent Nodes, and one or more Free 
Nodes), we can split the local Transfer Process sequence of 
the Root Node dominating the local tree into three steps: 
* Transfer the Bead Node. 
* Copying the Control Features (CFs) set from the 
already transferred Head Node into the Dependent 
Node/s {if any). 
* Transfer the Dependent Node/s, and the Free Node/s 
(if any). 
4.- Genera l  In fo rmat ion  to  be  Supp l ied  to  the  System DB 
Basically, three types of information must be stored 
into the system DB end used later on by the Transfer 
Process. Physically, this information is implemented in form 
of a LISP list, although this is purely a parochial 
progra~ing dec is ion .  
4.1.- HEAD Feature  L i s t  \ [HFL \ ] :  
It contains information stating which f-v-pairs are 
cons idered to  be members of  the set  HEAD. The dec is ion of  
which f -v-pairm must be HF?D members i s  c ruc ia l  to  the 
model. In a f i r s t  approach, we w i l l  adopt a pragmat ica l  
c r i te r ion .  This means that  we w i l l  inc lude as HEAD features  
those f -v -pa i rs  which are cur rent ly  perco la ted  in the 
corresponding gules, and which we make sure are actually 
needed for the Transfer Process. 
However, the aim is to extrapolate from this first 
approach a (maybe language-dependent) theoretical hypothesis 
about HEAD Features which enables to state a general 
cr i te r ion  to  es tab l i sh  the HF membership. 
21 
4.2.-  Lcx iea l  Access  Tab le  |LkT \ ] :  
It contains L~/~GUAGE-DEPENDENT information stating 
which sets of f-v-pairs (Lsxical Access Features \[LAF\]) are 
needed in order for each (major) Lexlcal Node to be rightly 
transferred. Xn METAL, Isxical nodes are transferred by 
calling the XLX operator in the TRANSFER p~rt of the 
corresponding rules. XLX takes ar~t'~ents specifying the 
needed target lan@uage stem retrieval information for a 
given category, whether an inflsxion must be attached to the 
stem, and the retrieval information for this inflsxion. 
Thus, the LAT table contains information about Lexical % 
Access Features, Inflexion Attachement infoz~atinn (when 
needed) and Inflection Lexical Access Features (ILAF). In 
fact, this would be quite similar to the NLX table proposed 
by Tommy Loomis in \[Loomis 87\]. 
Here is a schematic example of the Lexical Access Table: 
S PANIS II-LA T: 
LN ! LA~' ! INF ! ILAF ! 
........ + ................. + ................... + ........................ + 
AST ! - ! A-FLEX ! GD NU ! 
DET ! GD NO V0N ! ! ~ ! 
NST ! - ! N-FLEX ! (;D NO CL ! 
PP~ ! Ct C~ NO ! .- ! ! 
VST ! ~D NU PF PS TN ! V-FLEX ! MD NU PF ~S TN CL ! 
. . .  ! . . .  ! . . .  ! . . .  ! 
AST = Adjectival Sta~ VST = Verb Stem 
DET = Determine~ N-FLEX = Nominal Inflexion 
NST = Noun Stem V-FLEX = Verbal Inflsxion 
PRN = Pronoun A-FLEX = Adjectival Inflexion 
CA = Case CL = Inflsxion Class GD = Gender MD = Mode 
PF ~ Predicate Form PS = Person TN = Tense 
NU = Number 
In the case of VST, fo~ instance, the ~AT would 
indicate that, for Spanish, a Verb Stem (VST) Lexical Node 
must be accessed in the target monolingual lexicon database 
through the current values of the MD, NU, PF, Pg and TN 
features as keys, that a V-FLEX inflexion must bs attached 
to it, and that this inflexion should be accessed through 
the current values of CL, MD, NO, PF, PS, TN. 
4~3.- Cont ro l  Type  Tab le  \ [C I~\ ] :  
Th is  tab le  conta ins  LAN~3AG~-~DEPENDENT in fo rmat ion  
stating the Control Dependences for different local trees 
dominated by different Root Nodes. In this table, for each 
possible Root Node category (RN), its corresponding Head 
Node (HN), Dependent Nods/8 (DN) and Control Features (CF), 
if any, are specified. 
Here is one example of three CTT entries, one fo r  
CLS ~, (with two potential Control Dependences), one for ~-  
(one CD) and one for PP- (no CDS) dominated local trees : 
SPANIStI-CT~\' 
PI~ ! HN ! DN ! CF ! 
. . . . . . . .  ? . . . . . . . . . . . . . . . . .  + . . . . . . . . . . . . . . . .  + ....................... + 
CLS ! ~m \[$suBJ\] ! PRFn ! NU PS t 
! ! (ADJ) ! ~ NU ! 
........ + ................... + ............... + ....................... + 
NP ! NO ! DET ! GD N~ ! 
....... + .................. + ............... + ...................... + 
........ ? ................... ? ............... + ................... + 
CLS = Clause NP = Noun Phrase (BAR 2) 
PROD = Predicate $SUBJ -- SUBJECT value of feature ~OL 
DET = Determiner NO = Noun Phrase (B~R I) 
ADJ = Adjective GD = Gender 
NU '~= Number PS = Person 
~m first entry specifies that, given a local tree 
with a CLS root nods, its child Head Nods (HN) is the N~ 
child node bearing the SSUBJ value for the feature ROL, 
whereas the PPJZD child node always is a dependent node. The 
control features (CF) relevant for this structure are ~IU 
(number) and PS (person). Moreover, a sibling ADJ node may 
also be a Dependent Node, with control features GD (Gender) 
and NU (Number). This CTT entry controls the 
subject-predicate, and the subject-predlcativeadjective (in 
copulative sentences) agreement requirements, respectively. 
The same should be stated for each gra~mmtical 
category which may be a Root Node Of a local tree (CLS, 
PRED, NO, etc.). 
%~o things must be stressed about the CTT table: 
* Information about particular feature values can be 
given to distinguish between sategorins with the same n~s  
(for instance, to ensure that for the subject-predicate 
agreement, the controller is the ~ which bears the role of 
SUBJect, and not some other sibling ~) .  
* Each CTT entry must have at lea~t a Head Node 
specified for each Root Node, and possibly ons nz mor~ 
Dependent Nodes, which may or may not be obligatory, with 
their corresponding control features. This accounts fo~: the 
possibility of having different local trees dominated by the 
same Root Node categoz T (the case of CLS, above). 
5.- Bas ic  \ ]~r inc ip les  
In a first approach, three Horkin~ Principles san be 
stated for the ~TAL  Transfer Phase. These three 
principles are actually reflected in the form o? thrs~ 
operators (implemsnted as LISP functions) to be called in 
th~ transfer part of the rules. 
22 
15eL }l~eax~ Fea~m'e  Update  \ [HFU\ ]  
o ~h:~ ~ad Node \[i~g\] of  a loca l  tz'~a ge.t,'~ i t s  ilead 
Feat~es \[~F\] instentlated to the values eurz'eutly 
p:c,~sent in the; Root Node. 
~l~?J use~ the ~'h and the C~'~ table infoxmv.tion 
p:,:~::<rlously uto~'~d into the ~ystem DB, and should he applied 
p~ciOZ' to the local Transfer Process. 
E:4,,o Co~'~I  loea~ur~ )pdate  \ [CFU\ ]  
':~ Onc~e thai lluad Node Of the local tree ha~ been 
t~Nmsferz'ed, the corresponding Control Features must 
b~i copied into the sibling Dependent Node/s before 
this/th~!se a~e in turn transferred. 
'J:t~ ~ C~r~ ~,~akeu ~se of information stoz'ed into the C~T 
and the ~!,! tables, and should be called after the P2U has 
be~ N~p.Liud. 
5?3?- Root  \]\[,'eattu'e Update  \ [RFU\ ]  
* 'l'he Root Node of a local tree gets its Head Features 
\[}~\] iustantia-ced to the values of the BF present in 
th~ child nodes afte~ these have already been 
tx:~nsferred. If any f-v-pair conflict arises (i.e., 
if fo~ a given f-v-pair two child sons have 
ctl.fferent hxcompatible values) the Head Node value 
wi\] 1 be preferred. 
~'0 uses the BFL table information, and should be 
applied ai'~e~: ~II the local tree child nodes have been 
transferre6. 
Be~oz.~ a~d ~.ftox' what we have called the Yr~r~fer 
P~'ocess throughout this paper', there may be pre.~eat one or 
~ore t~:~!'~,~o:~mat~ons which alter the original str~cture of 
t.t~ leo.el t~:ee to yield the correct constituemt structure 
for the cur~e~,t target language (fo~ instance, most 
adjectives O~'eoeding nouns in German or English must follow 
them h~ Spusish) 
9me kind, of such t tans fozmatioss can be 
distlngsished, namely "pre-TP transformations" and "post.-TP 
~::~,~*s format ions" .  
Se,~ pWB-Y o trm~sfo~.mations may dramatically change 
the local t,~ee structu~:~ in a way which is not obvious at 
first s ight  (dol~ting, insert~x~g or changing the o~der of 
cili:hl ~iod~;)o ~oth th~ ?~'f table attd the OF0 function must 
}~old i~t.o ~ccount this fact ~d haudl~ automatically every 
X~os~Z):!.e loc~il treu st~'octnze fo~ each root *~ode category, 
~o ';:h~t th? r:.V2vx,~ar ~.~:ite~ can be thus relieved from another 
:,',ffi?olt task which very often gives rise to er~ors iu the 
g>:~L.,~a~:, ~fLy ,  th~ ~/~ndlh~g in the rulBs either of new 
":~vi:.~bil.e" child nod~8 or of old ones witlt a ct~.fferent 
qo? An  Exampl~ fo r  1VIEqI~AL 
Let -as see a sh~plified example of  t;hut a typ ica l  
I~2AL ~S-.~ula 2RA~ par~ would look like if the operators 
implement~mg these principles were applied. Please, bea~ Jn 
m~lld that this is a slmplifi~d example, and thus, it does 
not take into account any extra feature traffic which might 
be present and cannot be generalized by the present model. 
Example Rule 
0 1 
. . .  
CONS~R 
X~'fEGR 
SPANYSh 
~,0 
2 
. , ?  
(PRE-}~4) ; Tree tranSfo~lations previo~m to the %'~. 
(HFU) ; Copies the BFS p~'esent \]_u NI) to the hN node, 
; which, for an NP I~0ot Node, is the-! ~0 node, 
; as the C2T states. 
(CFU) ; T~aasfers the NO node (HN). 
; Copies the Control Feature:; (GD, Nff) from 
; NO to DET, which is the Dep~de~*t i\iode. 
; Transfers the DET node (DN) 
(}~R n); Yransfers Free Nodes if rely. 
(P/U) ; Copies all the ~Fs present in DET & NO to N@ 
(POST.-XFM) ; ~ee  transformations after the '?7. 
80~ Conc lus ion  
Although tho model out l ine  hez e must s t J l !  1)~: ~:~xlly 
tested and parts of it r~=~Jpecified accordintl to tlv~ 
~esults, it seems to be a valid approach to the p~obl~.~ oz 
the transfer control in the METAL system. 
A ntm~er Of questions still rm~a~, o~)en, na~0ely: 
* How to deal with trees where Control 
Interdependences exist. This is the case of German 
1~s bearing different adjeotlval inflexions 
depending both upon the gender of the noun and upon 
the type of determiner (weak/strong adjective 
declension) 
How to deal with local trees with more than am; Uead 
Node (coordinate structures, for ~mtanee). 
* Whethe~ some type of GPSG FCR- or/and FSD-like 
mechanisms (see GK~S \[Gamdar 85\]) could be u~ed Jn 
this model. 
* Whether this model is generalizable to other MT 
systems. 
The outlined model may be a starting point to begil~ 
introducing sane of the techniques offered by the current 
linguiatiu theories (?~SG, LFG, GB, etc.) into the MY 
field, and at the same time t~ying to b~ing these pure 
theoretical models into the practical fields of NT sy~it<~s 
already under devBlopment. 
23 
9.- References 
\[1\].- GAZDAR, KLEIN, PULLDM & SAG. Generalized Phrase 
Structure Grammar, 1985. 
\[2\] .- LOOMIS, Thomas M., Morphological Generation Within the 
METAL Machine Translation System. Linguistic 
Research Center, Austin, U.S.A., 1987 
\ [3 \ ] .  - P. ISABELLE, E. MACKLOVITCH, Transfer and MT 
Modularity. Coling ' 86 Proceedings 
\[4\] .- S. M. SHIEBER, A Simple Reconstruction of GPSG, Coling 
' 86 Proceedings. 
24 
