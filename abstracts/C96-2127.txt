 
We describe the development of a gen- 
erator for (\]erman built by reusing and 
adapting existing linguistic data and 
software. Reusability is crucial for the 
successful application of N I,P techniques 
to real-life problems ince it helps to cut 
down on both development and adap- 
tation effort. Itowever, combining re- 
sources not designed to work together 
is not trivial. We describe the prob- 
lems arising when integrating three pre- 
existing resources (FUF, a unification- 
based generator, an HPS(~ (\]ramrnm' 
for (~errnan, and X2MorF, 7~ two-level 
morphology (;omponent) and the adap- 
tat, ions necessary to come up with a wide 
coverage l;acticM generator for (\]erlnnn. 
1 