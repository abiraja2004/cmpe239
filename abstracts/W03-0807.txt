
In Natural Language Processing (NLP), research re-
sults from software engineering and software tech-
nology have often been neglected.
This paper describes some factors that add complex-
ity to the task of engineering reusable NLP systems
(beyond conventional software systems). Current
work in the area of design patterns and composi-
tion languages is described and claimed relevant for
natural language processing. The benefits of NLP
componentware and barriers to reuse are outlined,
and the dichotomies ?system versus experiment? and
?toolkit versus framework? are discussed.
It is argued that in order to live up to its name lan-
guage engineering must not neglect component qual-
ity and architectural evaluation when reporting new
NLP research.
1 